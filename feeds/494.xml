<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Dongju Shin on Medium]]></title>
        <description><![CDATA[Stories by Dongju Shin on Medium]]></description>
        <link>https://medium.com/@dongjushin?source=rss-a97d53de619e------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*ij7OX-vdwrJSaCK4txNf-g.jpeg</url>
            <title>Stories by Dongju Shin on Medium</title>
            <link>https://medium.com/@dongjushin?source=rss-a97d53de619e------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 13 May 2019 13:12:50 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@dongjushin" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[우리는 종종 일이 잔뜩 쌓여있으면, 관습에 따라 별 생각없이 일을 쳐내고는 한다.]]></title>
            <link>https://medium.com/@dongjushin/%EC%9A%B0%EB%A6%AC%EB%8A%94-%EC%A2%85%EC%A2%85-%EC%9D%BC%EC%9D%B4-%EC%9E%94%EB%9C%A9-%EC%8C%93%EC%97%AC%EC%9E%88%EC%9C%BC%EB%A9%B4-%EA%B4%80%EC%8A%B5%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%B3%84-%EC%83%9D%EA%B0%81%EC%97%86%EC%9D%B4-%EC%9D%BC%EC%9D%84-%EC%B3%90%EB%82%B4%EA%B3%A0%EB%8A%94-%ED%95%9C%EB%8B%A4-ebec830b1871?source=rss-a97d53de619e------2</link>
            <guid isPermaLink="false">https://medium.com/p/ebec830b1871</guid>
            <dc:creator><![CDATA[Dongju Shin]]></dc:creator>
            <pubDate>Fri, 16 Mar 2018 07:55:53 GMT</pubDate>
            <atom:updated>2018-03-16T07:55:53.019Z</atom:updated>
            <content:encoded><![CDATA[<p>우리는 종종 일이 잔뜩 쌓여있으면, 관습에 따라 별 생각없이 일을 쳐내고는 한다. 심지어 디자인 작업을 할 때조차 그렇다. 나름대로는 작업을 하면서 비-관습적인 디자인을 하기 위해 의식적으로 노력하곤 하지만, 그럼에도 항상 그런 태도가 유지되진 않는다.</p><p>(생각만큼 행동이 따라준다면 얼마나 좋을까).</p><p>너무 자신을 자책하지 말자. 그건 다 ‘현상유지편향’ 때문이다.</p><p>현상유지편향</p><p>사회과학분야의 많은 연구결과들은 인간의 예측이 불완전하고 편향되어 있다는 사실을 보여준다. 인간의 결정이나 판단도 마찬가지다. ‘현상유지편향’은 타성의 또다른 이름이다. 사람들은 수많은 이유로 인해 현상을 유지하거나 디폴트 옵션을 따르려는 성향을 갖는다.</p><ul><li>[Nudge]</li></ul><p>관습에 따라서 일하는 것을 비판적으로 표현했지만, 사실 ‘현상유지편향’이 들리는 것처럼 나쁜 것만은 아니다. 극단적인 예로, 만약 사회 구성원 대다수가 관습보다는 반동을 추구한다면, 그 사회는 유지되지 못할 것이다.</p><p>하지만 현대에 이르러 단 하나의 기술적 진보만으로도 엄청난 변화를 일으킬 수 있는 시대가 되면서, 우리는 좀 더 관습에서 자주 벗어날 필요가 있게 되었다. 특히나 Design Innovative 를 외치는 조직이라면 더욱 더 그러하다(아직까지 한국의 대부분 조직은 전혀 Design Innovative를 받아들이지 못했다고 생각한다). Risk Taking이 없이는 아무것도 얻지 못한다. 어제의 정답이었던 일이, 오늘은 더이상 정답이 아닐 수도 있다.</p><p>(마치 한시간 전의 1비트코인과 지금의 1비트코인이 수백만원까 차이날 수도 있듯이)</p><p>우리는 이러한 편향성이 불러온 재앙을 주변에서 쉽게 찾을 수 있다. ActiveX와 공인인증서, 유교적-가부장적 문화에서 기인한 수직적인 의사결정구조, 전근대성을 떨치지 못한 군대식 문화 등등. 우리가 의식적으로 변화를 위한 노력을 하지 않는 이상 저절로 바뀌는 것은 없을 것이다.</p><p>한국에서 이러한 관습을 타파하려는 시도가 없었던 것은 아니다. 문제는 그러한 관습에 의해 이득을 얻고 있는 자들이 바로 의사결정권자들이었고, 막상 피해를 보고 있는(불편을 겪고 있는) 일반 사용자/ 대중은 의사결정에 큰 영향을 주지 못하기에 실패할 수 밖에 없는 시도였다. 변화의 시기에 누군가는 손해를 보기 마련이다. 하지만 변화 없이는 손해정도가 아니라 영구히 도태될 수 있음을 항상 염두에 두어야 한다.</p><p>관습적인 상태에서 벗어나는 방법</p><p>그렇다면 이러한 현상유지편향에서 벗어나기 위해 어떤 노력을 해야할까?</p><p>만약, 이 글을 읽고있는 당신이 전통적인 미술교육 (소묘, 회화 등)을 받아본 적이 있다면, 대상을 관찰하는 것 만큼이나 내가 그린 캔버스 위의 형태를 객관적으로 판단하는 것 또한 엄청나게 중요한 일이라는 것을 알고 있을 것이다. 그것을 객관적으로 바라보기 위해 그림을 그리다가도 수시로 그림에서 한발짝 떨어져서 투시가 잘못되진 않았는지, 형태가 왜곡되진 않았는지, 그림이 균형감을 유지하고 있는지를 확인하곤 한다.</p><p>미술 뿐 아니라 다른 일을 할 때에도 이런 ‘한발짝 떨어져 바라보기’의 방법은 유효하다. 아니, 이 방법은 일에 대한 방법론이라기보단 삶의 태도에 가깝다.</p><p>방금까지 정신없이 진행하던 일에서 한 발짝 벗어나 새로운 기준으로 생각해보는 것. 거의 완성단계까지 완료한 작업에서 그 구조를 다시 바라보는 것. 나와 나를 둘러싼 환경이 과연 ‘당연한’ 것인지 자문해 보는 것.</p><p>당연하다고 생각하는 것을 거꾸로 되짚어 그 이유를 찾아보는 것</p><p>이것은 중-단기적으로 보면, 효율을 높이려는 노력과는 배치되는 행위로 보일 수도 있다. 그리고 어쩌면 요즘 흔히들 강조하는 ‘무엇이든 일단 하라’라는 정신에 위배되는지도 모른다. 하지만 이것은 효율의 문제라기보다는 방향의 문제이며, 전복적 사고와 가치판단의 문제에 가깝다.</p><p>그렇다고 일을 시작하지도 않은 상태에서 계속해서 생각만을 하라는 이야기는 아니다. 실제로 진행해봐야지만 부딪히는 현실적 문제들이 있기 마련이기 때문이고, 무슨 일이든 맨 처음 계획대로 굴러가는 경우는 거의 없기 마련이다.</p><p>프로그래밍 분야에서는 ‘don’t reinvent the wheel’, 즉 ‘바퀴를 다시 발명하지 마라’ 라는 말이 있다. (학습하려는 목적이 아니라면) 기존에 잘 만들어져 있는 기본적인 것을 다시 만들어보려 노력할 필요는 없다는 의미다.</p><p>하지만 우리는 비-관습적인 디자인을 위해, 바퀴를 다시 발명하지는 않더라도 과연 바퀴가 최선의 방법인지, 바퀴가 필요한 것은 맞는지 항상 고민해 볼 필요는 있다.</p><p>달까지 가려는 여정에서 바퀴는 좋은 수단이 아닐 것이다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ebec830b1871" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Fascinating.]]></title>
            <link>https://medium.com/@dongjushin/fascinating-fd98d092000e?source=rss-a97d53de619e------2</link>
            <guid isPermaLink="false">https://medium.com/p/fd98d092000e</guid>
            <dc:creator><![CDATA[Dongju Shin]]></dc:creator>
            <pubDate>Mon, 24 Apr 2017 02:17:32 GMT</pubDate>
            <atom:updated>2017-04-24T02:17:32.918Z</atom:updated>
            <content:encoded><![CDATA[<p>Fascinating.</p><p>Thank you</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=fd98d092000e" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[풀스택 디자이너?]]></title>
            <link>https://medium.com/@dongjushin/%ED%92%80%EC%8A%A4%ED%83%9D-%EB%94%94%EC%9E%90%EC%9D%B4%EB%84%88-1f48400888a5?source=rss-a97d53de619e------2</link>
            <guid isPermaLink="false">https://medium.com/p/1f48400888a5</guid>
            <category><![CDATA[ux]]></category>
            <category><![CDATA[mean-stack]]></category>
            <category><![CDATA[developer]]></category>
            <category><![CDATA[designer]]></category>
            <category><![CDATA[full-stack]]></category>
            <dc:creator><![CDATA[Dongju Shin]]></dc:creator>
            <pubDate>Tue, 06 Sep 2016 02:38:01 GMT</pubDate>
            <atom:updated>2016-09-06T02:44:42.179Z</atom:updated>
            <content:encoded><![CDATA[<p>스타트업 업계에 있다보면, ‘풀스택 개발자’ 라는 개념/지시어/호칭(?)을 자주 접하게 된다. 하지만 그 단어를 자주 접하는 것에 비해, 당사자를 접하는 경우는 극히 드문데다가 사실 사람마다 정의도 다양하다. 혹자는 MEAN스택을 활용한 서버와 클라이언트단을 고루 활용할 수 있는 개발자라 하고, 또다른 사람은 거기에 주요 모바일 플랫폼 (안드로이드/iOS) 의 어플리케이션까지 모두 구현할 수 있어야 한다는 무시무시한 주장을 하기도 한다. 이쯤되면 존재하는지조차 의심하게되는 존재라고 할 수 있다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/564/1*6UZwSVB4EQxrxpLd6PiUsA.jpeg" /><figcaption>fullstack</figcaption></figure><p>범위가 어찌되었든 결론은, 개발에 한정하여 ‘혼자서 어느정도 서비스를 굴릴 수 있어야 한다’는 것이다. <br>(그런 점에서 나는 우리 회사 개발자님과 많은 스타트업의 1인 개발자 분들을 무척 존경한다)</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/480/1*wGFasYvs3RyuMHdCwieORg.jpeg" /></figure><p>이에 대한 오마쥬로 쓴건지, 아니면 정말 이렇게 표현하는게 맞는 거라고 생각해서 썼는지는 모르겠지만, 어느 스타트업의 디자이너 채용공고에서</p><blockquote>“풀스택 디자이너 구합니다”</blockquote><p>라는 문구를 보았다.</p><p>도대체 어떤 디자이너를 구하는 건지 궁금해 구인공고를 찬찬히 읽어 보았는데, 업무에 대한 정확한 언급은 없고, 단지 ‘스타트업에서 디자이너가 할 수 있는 일을 잘 할 수 있는 사람이면 좋겠다’ 라고 써 있었다.</p><p>과연 ‘스타트업에서 디자이너가 할 수 있는 일’ 이란 무엇일까? 상기한 ‘풀스택 개발자’의 경우를 떠올려본다면, 디자인적인 측면에서 ‘혼자 서비스를 굴릴 수 있어야 한다’ 라고 해야할까?</p><p>디자인적인 측면에서 바라보았을 때 하나의 서비스를 구성하는 디자인적 요소(와 필요 능력)는 대략적으로 이렇다.</p><blockquote>브랜딩(로고타입/심볼/아이덴티티/컬러)<br>UX디자인/서비스 디자인(discover-define-develope-deliver)<br>GUI디자인 (웹/iOS/Android 등)<br>프론트엔드 개발 혹은 퍼블리싱 (HTML/CSS/JAVASCRIPT)<br>그래픽/편집디자인 혹은 일러스트레이션<br>(포스터/패키지/전단/배너 등)<br>+ 사진과 영상에 대한 기본적인 이해 등 나열하려면 끝이 없고, 사실상 부분부분 모두 연결된 분야이기도 하다.</blockquote><p>사실 나는 학부 시절부터 스타트업에 관심이 있었고, 다양하게 두루두루 섭렵하려 했다(사실 한가지에 집중을 잘 못했다). 그렇게 하면 취업이 힘들거라며 교수님에게 핀잔을 듣기도 할 정도로.</p><p>결론적으로는 스타트업에서 일할 때 많은 도움이 되긴 했지만, 여전히 스스로 전공과 커리어에 대해 깊이가 부족하다고 느끼곤 한다. 그래서 더 많이 읽고, 보고, 배우려 노력하는 것이기도 하고.</p><p>스타트업에겐 제너럴리스트가 필요하다. 그리고 제너럴리스트가 많아져야, 전반적인 한국의 디자인적 퀄리티(비단 시각적인 부분만이 아니라)가 높아질 수 있을 것이라고 본다. 하지만 모두가 제너럴리스트가 될 필요는 없고, 그래서도 안된다. 누군가는 스페셜리스트가 되어 트랜드를 이끌고 디자인에 대한 깊이있는 논의를 해 나가야 한다. 다만 한가지 우리가 주의해야할 점은, 당신이 함께 일하는 디자이너가 많은 범위를 커버하지 못한다고 폄하를 한다거나, 스페셜티를 갖지 못했다고 무시해서는 안된다는 것이다(심지어 디자이너들 사이에서도 그런 경우가 왕왕 있다). 그들은 단지 필요한 지점이 다를 뿐이다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1f48400888a5" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[스타트업의 UX디자이너]]></title>
            <link>https://medium.com/@dongjushin/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85%EC%9D%98-ux%EB%94%94%EC%9E%90%EC%9D%B4%EB%84%88-b71f8f864f05?source=rss-a97d53de619e------2</link>
            <guid isPermaLink="false">https://medium.com/p/b71f8f864f05</guid>
            <category><![CDATA[growth-hacking]]></category>
            <category><![CDATA[marketing]]></category>
            <category><![CDATA[ux-design]]></category>
            <category><![CDATA[startup]]></category>
            <dc:creator><![CDATA[Dongju Shin]]></dc:creator>
            <pubDate>Thu, 01 Sep 2016 05:52:16 GMT</pubDate>
            <atom:updated>2016-09-01T05:59:30.463Z</atom:updated>
            <content:encoded><![CDATA[<p>스타트업에서 UX디자이너로 일한다는 것은,<br>비단 웹이나 어플리케이션을 디자인하는 것만을 의미하지는 않는다.<br>정말 많은 종류의 일을 하게 된다. (하고 있다.)</p><p>서비스 개발 단계에서는<br>비지니스 모델 설계 — 서비스 기획 — UX 설계 — GUI 디자인에 이르는<br>프로세스를 경험할 수 있게 될 것이고,</p><p>마케팅 단계에서는 <br>기초적인 마켓 리서치와 타겟 설정, 퍼소나 설계와 마케팅 전략 수립 및 마케팅 채널 운영<br>더 나아가 서비스와 마케팅을 직접적으로 엮어 다양한 그로스해킹을 시도해 볼 수도 있을 것이다.</p><p>물론 이 외에도 서비스 운영, CS 등의 업무도 필수적으로 수행하게 될 가능성이 크다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/564/1*n6bE9tzu2KSILydiFu5EpQ.jpeg" /><figcaption>An experience mapping in 3 easy steps</figcaption></figure><p>상기한 모든 것을 그저 스타트업이니 인력이 부족해 어쩔 수 없이 해야하는 부차적인 일들로 생각할수도 있겠지만, 되려 이런 일들을 UX적인 차원,</p><p>즉, “사용자 경험” 이라는 측면에서 접근하면 훨씬 재미있어진다.</p><p>어떠한 사업의 비즈니스 모델도 서비스 내의 UX와 무관하지 않으며, <br>마케팅 전략은 사용자 경험의 “관문” 이라고도 말할 수 있다.<br>서비스 운영과 CS 업무 또한 직접 사용자를 대면하는 업무이니만큼<br>‘가장 날 것의’ 사용자 태도를 가늠할 수 있는 중요한 채널이라 할 수 있다.</p><p>물론 처음부터 모든 분야의 모든 것을 다 알고있는 상태에서 시작할 수는 없다. 다만 어떤 일이든, 우리가 처음 UX디자인을 배울 때 그렇게나 중요하게 (때로는 과도하게) 듣고 말하던 “사용자 중심의 디자인”과 “디자인적 사고”를 갖고 바라본다면, 틀림없이 그 안에서 문제를 찾고 그에 맞는 해결방법 또한 찾을 수 있을 것이라 믿는다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b71f8f864f05" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>