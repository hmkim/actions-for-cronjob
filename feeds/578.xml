<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>dev diary, TIL</title>
    <description />
    <link>http://www.ohyecloudy.com/ddiary/</link>
    
    <pubDate>Fri, 26 Apr 2019 21:46:04 +0900</pubDate>
    <lastBuildDate>Fri, 26 Apr 2019 21:46:04 +0900</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/OhyecloudyDevDiary" /><feedburner:info xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" uri="ohyecloudydevdiary" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><item>
        <title>#TIL #elixir struct 생성 시 모든 키에 대한 값 세팅을 강제하려면</title>
        <description>&lt;pre class="example"&gt;
defmodule Ticket do
  @enforce_keys [:origin, :destination, :price]
  defstruct @enforce_keys
end
&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://hexdocs.pm/elixir/Kernel.html#defstruct/1-enforcing-keys"&gt;enforce_keys&lt;/a&gt; 모듈 속성(module attributes)에 모두 정의한 다음 &lt;a href="https://hexdocs.pm/elixir/Kernel.html#defstruct/1"&gt;defstruct/1&lt;/a&gt; 매크로 인자로 넘기면 된다. 예약된 enforce_keys 같은 모듈 속성에 정의된 걸 재사용할 수 있다는 걸 깜빡하곤 한다.&lt;/p&gt;
&lt;p&gt;참고 - &lt;a href="https://stackoverflow.com/questions/41609368/enforce-all-keys-in-a-struct"&gt;Enforce all keys in a struct - stackoverflow.com&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/04/26/til-elixir-enforce-all-keys-in-a-struct/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/04/26/til-elixir-enforce-all-keys-in-a-struct/</guid>
        
        <category>elixir</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #git archive 명령을 사용해 .git 파일을 제외한채 서버에 배포하는 방법</title>
        <description>&lt;pre class="example"&gt;
$ git archive --format=tar origin/master \
  | gzip -9c \
  | ssh USER@SERVER &amp;quot;mkdir -p TARGET_DIR; tar --directory=TARGET_DIR -xvzf -&amp;quot;
&lt;/pre&gt;
&lt;p&gt;파일로 저장 안 하고 stdout으로 출력한 데이터를 압축하고 서버에 전송한 후 tar 프로그램으로 푼다. tar 프로그램 &lt;code&gt;-&lt;/code&gt; 인자는 데이터를 stdin으로 받겠다는 뜻이다. 크 멋지구나. archive 옵션 같은 건 파일 이름을 받아야 하지 않나? 왜 강제하지 않는 걸까? 이런 의문이 한 번에 풀린다.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://wildlyinaccurate.com/deploying-a-git-repository-to-a-remote-server/"&gt;Deploying a Git repository to a remote server - wildlyinaccurate.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://unix.stackexchange.com/questions/41828/what-does-dash-at-the-end-of-a-command-mean"&gt;What does dash “-” at the end of a command mean? - unix.stackexchange.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 05 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/04/05/til-deploying-a-git-repository-to-a-server/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/04/05/til-deploying-a-git-repository-to-a-server/</guid>
        
        <category>git</category>
        
        <category>ssh</category>
        
        <category>tar</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #linux #sed 첫번째 라인만 교체</title>
        <description>&lt;pre class="example"&gt;
$ cat test.csv
header1,header2,header3
1,2,3
2,3,1
3,1,2
$ sed -i.bak -e &amp;quot;1s/[^,]/x/g” test.csv
$ cat test.csv
xxxxxxx,xxxxxxx,xxxxxxx
1,2,3
2,3,1
3,1,2
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;s&lt;/code&gt; 명령어 앞에 범위가 없으면 전체를 바꾼다. &lt;code&gt;1s&lt;/code&gt; 명령어로 첫 번째 라인만 바꾸게 했다. &lt;code&gt;1,3s&lt;/code&gt; 명령어는 첫 번째 라인부터 3번째 라인까지 변경한다.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/software/sed/"&gt;sed&lt;/a&gt; 만세. 뭔가 교체하는 거면 sed를 가장 먼저 찾아보자.&lt;/p&gt;
&lt;p&gt;참고 - &lt;a href="https://stackoverflow.com/questions/13438095/replace-the-first-line-in-a-text-file-by-a-string"&gt;Replace the first line in a text file by a string - stackoverflow&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/03/27/til-sed-replace-the-first-line-in-a-text-file-by-a-string/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/03/27/til-sed-replace-the-first-line-in-a-text-file-by-a-string/</guid>
        
        <category>sed</category>
        
        <category>linux</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #svn 저장소(repository) 파일을 삭제하는 스크립트</title>
        <description>&lt;p&gt;배포에 SVN을 사용한다. 단순히 복사해서 커밋한다면 삭제한 파일 반영이 안 된다. 삭제된 파일을 반영해야 한다.&lt;/p&gt;
&lt;pre class="example"&gt;
$ rm -rf $dest
$ cp -r $source $dest
$ cd $source
$ for i in $(svn st | grep \! | awk &amp;#39;{print $2}&amp;#39;); do svn delete $i; done
$ svn add * --force
$ svn commit -m “deploy&amp;quot;
&lt;/pre&gt;
&lt;p&gt;배포에 많이 쓰는 패턴이다. 삭제 후 복사한다. 이렇게 하면 삭제된 파일이 티가 난다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&amp;#8217;!&amp;#8217;
    Item is missing (e.g., you moved or deleted it without using svn). This also indicates that a directory is incomplete (a checkout or update was interrupted).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;svn st&lt;/code&gt; 명령을 입력했을 때, 파일이 저장소에는 있지만 작업 디렉터리(working directory)에 없으면 파일 이름 앞에 &lt;code&gt;!&lt;/code&gt; 문자를 출력한다. 이런 파일을 찾아서 &lt;code&gt;svn delete&lt;/code&gt; 인자로 넘긴다. 바로 저장소에서 삭제는 안 된다. &lt;code&gt;svn commit&lt;/code&gt; 명령을 실행할 때, 반영된다.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3726143/svn-script-to-commit-a-set-of-deleted-files"&gt;svn script to commit a set of deleted files - stackoverflow.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://svnbook.red-bean.com/en/1.7/svn.ref.svn.c.delete.html"&gt;svn delete - svnbook.red-bean.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://svnbook.red-bean.com/en/1.7/svn.ref.svn.c.status.html"&gt;svn status - svnbook.red-bean.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 21 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/03/21/til-svn-script-to-commit-a-set-of-deleted-files/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/03/21/til-svn-script-to-commit-a-set-of-deleted-files/</guid>
        
        <category>svn</category>
        
        <category>bash</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #macos 자동 시작 프로그램 멈추기</title>
        <description>&lt;p&gt;&lt;a href="https://forticlient.com/"&gt;FortiClient&lt;/a&gt;를 설치했더니 로그인할 때마다 시작한다. 가끔 쓰는데, 계속 떠 있으니 내 노트북이 더러워지는 느낌이다.&lt;/p&gt;
&lt;pre class="example"&gt;
시스템 환경설정 &amp;gt; 사용자 및 그룹 &amp;gt; 로그인 항목
&lt;/pre&gt;
&lt;p&gt;여기에 있겠지 했는데, 없다. &lt;a href="https://en.wikipedia.org/wiki/Property_list"&gt;plist&lt;/a&gt;를 직접 수정해야 한다.&lt;/p&gt;
&lt;pre class="example"&gt;
$ sudo vi /Library/LaunchAgents/com.fortinet.forticlient.credential_store.plist
&lt;/pre&gt;
&lt;pre class="src" lang="diff"&gt;
  &amp;lt;key&amp;gt;RunAtLoad&amp;lt;/key&amp;gt;
- &amp;lt;true/&amp;gt;
+ &amp;lt;false/&amp;gt;
&lt;/pre&gt;
&lt;pre class="example"&gt;
$ sudo vi /Library/LaunchAgents/com.fortinet.forticlient.fct_launcher.plist
&lt;/pre&gt;
&lt;pre class="src" lang="diff"&gt;
  &amp;lt;key&amp;gt;RunAtLoad&amp;lt;/key&amp;gt;
- &amp;lt;true/&amp;gt;
+ &amp;lt;false/&amp;gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;RunAtLoad&lt;/code&gt; 값을 수정하면 된다. &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; 디렉터리에 다른 파일들도 있다. 로그인할 때, 시작하는 것들이 여기에 있었네.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;These per-user processes are referred to as user agents. A user agent is essentially identical to a daemon, but is specific to a given logged-in user and executes only while that user is logged in.&lt;/p&gt;
  &lt;p&gt;&amp;#45; &lt;a href="https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html"&gt;Creating Launch Daemons and Agents&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;디렉터리 이름에 agents가 들어가 있다. macos에선 뭘 agents라고 할까? 유저 별로 실행하는 프로세스를 user agents라고 한다. 여기서 agents만 따서 디렉터리 이름을 지은 것 같다.&lt;/p&gt;
&lt;p&gt;참고 - &lt;a href="https://forum.fortinet.com/tm.aspx?m=97324"&gt;Cant stop FortiClient from starting on startup&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Mar 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/03/13/til-macos-launch-agents/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/03/13/til-macos-launch-agents/</guid>
        
        <category>macos</category>
        
        <category>plist</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #elixir ets에서 key 리스트만 가져오기</title>
        <description>&lt;pre class="example"&gt;
iex&amp;gt; :ets.new(:test, [:named_table])
:test
iex&amp;gt; :ets.insert(:test, {:key1, :value1})
true
iex&amp;gt; :ets.insert(:test, {:key2, :value2})
true
iex&amp;gt; :ets.insert(:test, {:key3, :value3})
true
iex&amp;gt; :ets.first(:test)
:key1
iex&amp;gt; :ets.next(:test, :key1)
:key2
iex&amp;gt; :ets.next(:test, :key2)
:key3
iex&amp;gt; :ets.next(:test, :key3)
:&amp;quot;$end_of_table&amp;quot;
&lt;/pre&gt;
&lt;p&gt;&lt;a href="http://erlang.org/doc/man/ets.html#first-1"&gt;:ets.first/1&lt;/a&gt; 함수와 &lt;a href="http://erlang.org/doc/man/ets.html#next-2"&gt;:ets.next/2&lt;/a&gt; 함수를 사용하면 key만 가져올 수 있다.&lt;/p&gt;
&lt;pre class="example"&gt;
iex&amp;gt; keys = fn table_name -&amp;gt;
  Stream.resource(
    fn -&amp;gt; :ets.first(table_name) end,
    fn
      :&amp;quot;$end_of_table&amp;quot; -&amp;gt; {:halt, nil}
      previous_key -&amp;gt; {[previous_key], :ets.next(table_name, previous_key)}
    end,
    fn _ -&amp;gt; :ok end)
  end
#Function&amp;lt;6.128620087/1 in :erl_eval.expr/5&amp;gt;
iex&amp;gt; keys.(:test) |&amp;gt; Enum.to_list()
[:key1, :key2, :key3]
&lt;/pre&gt;
&lt;p&gt;시작, 종료 조건, 다음을 구하는 함수까지 다 준비되어 있다. &lt;a href="https://hexdocs.pm/elixir/Stream.html#resource/3"&gt;Stream.resource/3&lt;/a&gt; 함수로 스트림(stream)을 만들기. 딱 좋다.&lt;/p&gt;
&lt;p&gt;참고 - &lt;a href="https://stackoverflow.com/questions/35122608/how-to-retrieve-a-list-of-ets-keys-without-scanning-entire-table"&gt;How to retrieve a list of ets keys without scanning entire table? - stackoverflow.com&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Feb 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/02/03/til-elixir-how-to-retrieve-a-list-of-ets-keys/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/02/03/til-elixir-how-to-retrieve-a-list-of-ets-keys/</guid>
        
        <category>elixir</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #erlang 함수를 호출할 때는 문자열 타입이 charlist인 걸 기억</title>
        <description>&lt;pre class="example"&gt;
iex&amp;gt; :dets.open_file(:storage, [{:type, :set}, {:file, &amp;quot;file&amp;quot;}])
** (ArgumentError) argument error
&lt;/pre&gt;
&lt;p&gt;argument error 뜨면 속 터진다. 원인을 찾아 헤매야 한다.&lt;/p&gt;
&lt;p&gt;=&amp;#8221;file&amp;#8221;= 인자가 잘못됐다. 문자열로 binary를 사용해서 에러가 났다. elixir에서 erlang 함수를 호출했기 때문에 binary가 아니라 charlist를 인자로 넘겨야 한다. elixir에서 byte 시퀀스를 binary라고 부른다.&lt;/p&gt;
&lt;pre class="example"&gt;
iex&amp;gt; :dets.open_file(:storage, [{:type, :set}, {:file, &amp;#39;file&amp;#39;}])
&lt;/pre&gt;
&lt;p&gt;=&amp;#8217;file&amp;#8217;= 인자를 넘기면 된다. &lt;a href="https://hexdocs.pm/elixir/Kernel.html#to_charlist/1"&gt;Kernel.to_charlist/1&lt;/a&gt; 함수를 호출해도 된다.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/43171496/dets-open-file-argument-error"&gt;:dets.open_file argument error - stackoverflow.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.reddit.com/r/elixir/comments/4sxo4b/question_what_is_a_binary_what_is_a_bitstring/"&gt;What is a binary? What is a bitstring? What is a charlist? - reddit.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://elixir-lang.org/getting-started/binaries-strings-and-char-lists.html"&gt;Binaries, strings, and charlists - elixir-lang.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 23 Jan 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/01/23/til-charlist-is-default-string-type-for-erlang/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/01/23/til-charlist-is-default-string-type-for-erlang/</guid>
        
        <category>elixir</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #linux 프로세스 여러 개를 한 번에 죽이는 killall</title>
        <description>&lt;pre class="example"&gt;
$ ps -ax | grep beam
&lt;/pre&gt;
&lt;p&gt;프로세스가 여러 개 보인다. 한 번에 지우고 싶다. grep 결과를 가공해서 pid를 추출하고 kill -9 인자로 넘기면 되겠다고 생각했다.&lt;/p&gt;
&lt;pre class="example"&gt;
$ killall -9 beam.smp
&lt;/pre&gt;
&lt;p&gt;한방에 하는 게 있네. 프로세스 이름을 인자로 넘기면 된다.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_killall"&gt;killall - zetawiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Killall"&gt;killall - wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 15 Jan 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/01/15/til-linux-killall/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/01/15/til-linux-killall/</guid>
        
        <category>linux</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #elixir 변수를 출력할 때, 큰따옴표로 감싸고 싶다면</title>
        <description>&lt;pre class="example"&gt;
iex&amp;gt; answer = “yes&amp;quot;
&amp;quot;yes&amp;quot;
iex&amp;gt; &amp;quot;the answer is #{answer}&amp;quot;
&amp;quot;the answer is yes&amp;quot;
&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/String_interpolation"&gt;string interpolation&lt;/a&gt;을 사용해서 문자열을 만들 때, 변수값을 넣을 수 있다.&lt;/p&gt;
&lt;p&gt;변수에서 가져온 값이란 걸 강조하고 싶다. 어떻게?&lt;/p&gt;
&lt;pre class="example"&gt;
iex&amp;gt; &amp;quot;the answer is \&amp;quot;#{answer}\&amp;quot;&amp;quot;
&amp;quot;the answer is \&amp;quot;yes\”&amp;quot;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;\&lt;/code&gt; escape 문자를 사용해야 한다. 강조는 되지만 번거롭다. 좀 더 편한 괄호를 사용하고 말지.&lt;/p&gt;
&lt;pre class="example"&gt;
iex&amp;gt; &amp;quot;the answer is #{inspect answer}&amp;quot;
&amp;quot;the answer is \&amp;quot;yes\”&amp;quot;
&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://hexdocs.pm/elixir/Kernel.html#inspect/2"&gt;inspect/2&lt;/a&gt; 함수를 사용하면 큰따옴표로 쉽게 감쌀 수 있다.&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Jan 2019 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2019/01/08/til-elixir-if-you-want-to-wrap-variables-in-double-quotes/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2019/01/08/til-elixir-if-you-want-to-wrap-variables-in-double-quotes/</guid>
        
        <category>elixir</category>
        
        
        <category>til</category>
        
      </item>
    
      <item>
        <title>#TIL #linux nohup 명령어를 사용해 백그라운드 작업 중지에 이뮨 속성을 부여</title>
        <description>&lt;pre class="example"&gt;
$ mix run --no-halt &amp;gt; logs 2&amp;gt;&amp;amp;1 &amp;amp;
[1] 2208
$ jobs
[1]+  Stopped                 mix run --no-halt &amp;gt; logs 2&amp;gt;&amp;amp;1
&lt;/pre&gt;
&lt;p&gt;백그라운드로 실행하려고 했는데, 좀 지나면 중지된다.&lt;/p&gt;
&lt;pre class="example"&gt;
$ nohup mix run --no-halt &amp;gt; logs 2&amp;gt;&amp;amp;1 &amp;amp;
[1] 2259
$ jobs
[1]+  Running                 nohup mix run --no-halt &amp;gt; logs 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/pre&gt;
&lt;p&gt;nohup 명령어를 사용하면 된다. HUP(hangup) 시그널을 무시하고 계속 실행한다.&lt;/p&gt;
&lt;h2&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://ko.wikipedia.org/wiki/Nohup"&gt;nohup - wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/17621798/linux-process-in-background-stopped-in-jobs"&gt;Linux process in background - “Stopped” in jobs? - stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 29 Dec 2018 00:00:00 +0900</pubDate>
        <link>http://www.ohyecloudy.com/ddiary/2018/12/29/til-linux-nohup/</link>
        <guid isPermaLink="true">http://www.ohyecloudy.com/ddiary/2018/12/29/til-linux-nohup/</guid>
        
        <category>linux</category>
        
        
        <category>til</category>
        
      </item>
    
  </channel>
</rss>
