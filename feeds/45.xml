<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title><![CDATA[inbonk]]></title><description><![CDATA[구인본의 글, 말, 생각]]></description><link>http://inbon.net/</link><image><url>http://inbon.net/favicon.png</url><title>inbonk</title><link>http://inbon.net/</link></image><generator>Ghost 2.18</generator><lastBuildDate>Sat, 11 May 2019 18:59:05 GMT</lastBuildDate><atom:link href="http://inbon.net/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[이직초보 어느 개발자의 이력서 만들기]]></title><description><![CDATA[<p>아래는 2017.07.17일에 제가 일하고 있는 <a href="http://woowabros.github.io/">우아한형제들 기술블로그</a>에 올린 글을 다시 그대로 실은 글입니다. 원문링크는 아래와 같습니다.</p>
<p><a href="http://woowabros.github.io/experience/2017/07/17/resume.html">http://woowabros.github.io/experience/2017/07/17/resume.html</a></p>
<hr>
<p></p>
<p>안녕하세요 저는 올해 2월부터 우아한형제들의 배라개발팀에서 일하고 있는 구인본입니다. 작년 연말에 잠시 휴식을 가진 후 1월부터 이직을 준비하면서 경험했던 것 중에</p>]]></description><link>http://inbon.net/writng-resume/</link><guid isPermaLink="false">5a4d67b4a0cad603f38e2060</guid><dc:creator><![CDATA[Inbon Kuh]]></dc:creator><pubDate>Fri, 21 Jul 2017 01:04:01 GMT</pubDate><content:encoded><![CDATA[<p>아래는 2017.07.17일에 제가 일하고 있는 <a href="http://woowabros.github.io/">우아한형제들 기술블로그</a>에 올린 글을 다시 그대로 실은 글입니다. 원문링크는 아래와 같습니다.</p>
<p><a href="http://woowabros.github.io/experience/2017/07/17/resume.html">http://woowabros.github.io/experience/2017/07/17/resume.html</a></p>
<hr>
<p></p>
<p>안녕하세요 저는 올해 2월부터 우아한형제들의 배라개발팀에서 일하고 있는 구인본입니다. 작년 연말에 잠시 휴식을 가진 후 1월부터 이직을 준비하면서 경험했던 것 중에 이력서를 쓰면서 생각하고 느꼈던 것들을 정리해보았습니다. 이력서는 이렇게 써야 해 저렇게 써야 해라는 것보단, 제가 저만의 이력서를 쓰면서 나름대로 시도하고 적용해본 경험을 공유해보고자 합니다. <del><em>본격 나만의 이력서 만들기</em></del></p>
<p></p>
<h1 id="">표와 줄이 빽빽한 고전적인 이력서</h1>
<p>이직하기 전의 스타트업 회사에서는 지인의 소개와 면접 위주의 심사를 통해 채용된 경우라 이력서를 쓰기 위한 시간을 많이 할애하진 않았었습니다. 그런데 막상 이력서를 다시 준비하려다보니 한글로 만들었던 고전적 양식의 한 장짜리 이력서 밖에 없었지요. 거기엔 사진과 이름, 생년월일, 주민번호, 학력, 경력, 자격증, 그리고 보유기술이 짧게 적혀있었습니다. 이대로 이력서를 제출할 순 없었기에 스타트업에서 맡았던 업무와 적용기술을 목록 형식으로 나열해서 내용을 추가해보았습니다.</p>
<p><img src="http://woowabros.github.io/img/2017-07-17/resume_0.png" alt=""></p>
<p></p>
<h1 id="">자신만만 이력서 제출, 비 내리는 불합격 통보</h1>
<p>스타트업에서의 경험했던 일들이 제겐 자신감으로 남아있었고 뭐든지 할 수 있다는 포부(혈기^^)로 구직사이트를 통해 이력서를 뿌리다시피 제출했습니다. 그런데 며칠 지나지도 않아서 구직앱에서 불합격통보가 줄줄이 오는 것을 보고, 처음의 자신감은 곤두박질. 이건 뭔가 잘못됐어! 뭐가 문제지?</p>
<p>사실, 지금 돌아보면 그때의 이력서를 지금의 것과 비교해보니 떨어지는 것도 당연하다는 생각이 들더군요. 먼저는 첫인상부터 10년은 넘었을 것 같은 옛날 이력서의 모양새, 성의 없어 보이는 경력소개, 지원하는 회사의 업무와 연관성이 적어 보이는 경력들. 제 이력서를 보고 불합격시킨 당사자의 시각으로 보려고 하니 이력서 전형에서 통과시킬 이유를 찾기 힘들더군요. 스타트업에 있으면서 팀원을 충원하기 위해 이력서를 받아보았던 경험이 있어서 내 이력서를 볼 사람의 상황에 쉽게 감정이입이 되었습니다. 아마도 내 이력서는 10초도 안 되어 지나가버렸을지도.</p>
<p>이 사실을 깨닫는 데 오래 걸리진 않았습니다. 그런데 문제는 이미 이력서를 제출한 곳이 많다는 것과 정말 일하고 싶어 한 회사에도 이미 그 이력서를 제출했다는 것! 다행히 다시 업데이트 할 수 있는 기회가 있었고 자유로운 포멧으로 제출할 수도 있었기에, 온전히 이력서를 개선하는 것에 집중하기로 했습니다. <del><em>내 이력서는 나중에 봐주오, 오 제발!</em></del></p>
<p></p>
<h1 id="">어떻게 하면 내 이력서를 보게 할까, 인상적인 첫 페이지 만들기</h1>
<p>이전의 이력서의 틀로는 제가 할 수 일들과 강점을 잘 보여줄 수 없다고 판단하고, 원점에서 다시 만들기로 했습니다. 절박하니 오히려 아이디어들이 샘솟더군요. 먼저 생각한 것은 어떻게 하면 내 이력서를 보게 만들까?, 어떻게 하면 첫 페이지에서 좋은 인상을 줄 수 있을까?였습니다. 내가 아닌 내 이력서를 볼 사람, 즉 독자의 관점에서 생각해보았습니다. 수많은 지원자의 이력서를 보면서 지쳐있을 독자에게, 뭔가 달라 보이고 다음 페이지가 궁금해지는 첫 페이지를 만들고 싶어졌습니다.</p>
<p>저 자신을 잘 어필할 수 있는 재료가 무얼까 고민했습니다. 알맹이가 있어야 껍데기도 의미 있는 것! 먼저는 어릴 때부터 프로그래밍을 접했었다는 점, 대학과 대학원을 거치면서 여러 가지 실험적인 기술들을 접해왔다는 점, 소규모 스타트업에서 사용했던 여러 기술과 스펙을 나열해보았습니다. 그런데 이것들을 목록으로 정리해보고 텍스트 정렬도 바꿔보고 글자 두께도 바꿔보고 해봤지만, 도무지 좋은 인상을 줄 수가 없었습니다. 그래서 글자로만은 안되겠다 싶어 그림을 그리기 시작했습니다. 여러 번의 수정 끝에 나온 것이 개발이력 timeline이었습니다. <del><em>절박하면 뭐든지 나오긴 나오네요.</em></del></p>
<p><img src="http://woowabros.github.io/img/2017-07-17/my_dev_life.png" alt=""></p>
<p>만들어왔던 크고 작은 결과물들을 시간순으로 시각화해보니 한 눈에 볼 수 있고 접했던 기술들을 기간에 맞춰 나열해보니 제법 그럴 듯해 보였습니다. 또한, 기술을 글자로 나열하기보다 심볼과 아이콘으로 표시해서 보니, 이력서를 보는 기술직 담당자에게 친숙할 만한 기술들이 쉽게 눈에 들어온다는 걸 알 수 있었습니다. 그림을 페이지의 가운데로부터 하단에 안정감 있는 위치에 배치했습니다. 일단 첫 페이지에 들어갈 큰 그림이 채워지니, 나머지는 좀 더 편하게 접근할 수 있더군요.</p>
<p></p>
<h1 id="">인적사항, 필수적인 것들만, 첫 페이지는 소중하니까</h1>
<p>첫 페이지 상단에 들어가야 할 내용을 골라보았습니다. 기본적인 인적사항은 필수겠지요. 이름을 한글과 영어로 넣고, 전화번호와 이메일 주소를 넣었습니다. 이전의 이력서에서는 주소라든지, 성별이라든지, 몇 가지 자잘한 인적사항이 있었는데, 꼭 필수적인 것도 아니고, 첫 페이지에 들어갈 필요는 없다고 느껴져 과감하게 제외했습니다. 이왕에 기존 틀에 얽매이지 않기로 했으니까요.</p>
<p>오히려 그 자리에 블로그, 개인 Github, 트위터 링크를 넣었습니다. 링크를 따라 들어가보기 전부터, 이 지원자는 SNS 활동도 하고 Github도 하는구나!라는 인상을 줄 수 있겠지요. 화면으로 이력서를 보고 있다면 쉽게 링크를 타고 들어가볼수도 있겠고요. 사진은 처음에 증명사진으로 넣었다가, 너무 딱딱해보여 뺐습니다. 요즘은 사진도 필수는 아니라고 하니까요. 마침 첫 페이지에 어울리는 적당한 사진을 찾을 수 있어서 그걸로 다시 넣었습니다.</p>
<p></p>
<h1 id="">나를 표현하는 한 단락, 그리고 한 줄</h1>
<p>여전히 첫 페이지에 남아있는 공간을 무엇으로 채울지 고민했습니다. timeline을 통해 어떤 일을 해왔는지 보여줬으니, 이제는 내가 어떤 개발자인지 알리기로 했습니다. 그런데 첫 페이지이니만큼, 구구절절이 자기소개를 하고 싶진 않았습니다. 글이 길면 다 읽어보기 힘들 테니까요. 제겐 이전 회사에서 일했던 가장 최근의 경력이 지원하는 회사의 일과 가장 연관성이 높았기에 그것을 중심으로 간략하게 한 단락으로 적었습니다.</p>
<p>그리곤 일반적인 이력서들과 마찬가지로 제일 위에 제목으로 “이력서”라고 써보았습니다. 문득 이런 생각이 들더군요. 이력서인 건 이미 알고 있을 텐데, 적을 필요가 있을까? 영혼이 자유로워지고 있습니다 그 자리에 나를 표현하는 의미 있는 제목을 적고 싶어졌습니다. 이 제목은 사실 이력서를 마감하는 마지막 순간까지 계속 고쳐나갔습니다.</p>
<p>결과적으로는 세 가지로 압축했습니다. 트렌드 모니터링 습관, 코딩은 결벽적 미니멀리즘, 함께 성장하는 팀웍. 영어로도 표현하는 건 덤입니다. 직역하기엔 공간이 맞지 않아 비슷한 의미로 넣었습니다. 최근에는 가운데 문구를 바꾸기도 했습니다. 테스트 기반의 견고한 코딩. <del><em>이제 좀 현실감각이 생기고 있네요.. 결벽적 미니멀리즘이라니…</em></del></p>
<p><img src="http://woowabros.github.io/img/2017-07-17/resume_1page.png" alt=""></p>
<p>막상 제목을 이렇게 만들어보니 뜻밖의 효과가 생겼습니다. 면접을 볼 때면 자주 나오는 질문에 대하여 정돈된 표현으로 답을 할 수 있더군요. 이제 첫 페이지가 완성되었습니다. 다시 자신감이 장전되고 있습니다.</p>
<p></p>
<h1 id="">독자가 관심 있어 할 내용 순으로</h1>
<p>생각해보았습니다. 만약 첫 페이지에서 관심을 가지고 다음 페이지를 넘길 때 독자가 기대하는 것이 무엇일까? 어렸을 때부터… 이런 건 아닐 테고, 내 사생활, 구체적인 인적사항도 아니라고 생각했습니다. 최근에 했던 프로젝트부터 보여주고 점점 거슬러 올라가면서 개발이력들을 펼치기로 했습니다. 본격적으로 세부적인 내용을 채워가면서 참고가 되었던 글이 있었습니다. RSS로 구독하던 블로거 중에 변정훈님의 “<a href="https://blog.outsider.ne.kr/1234">이력서</a>“에 대한 글을 보면서 내용의 순서나 기본적인 페이지 레이아웃을 잡아갈 수 있었습니다. 지난 스프링캠프 때 직접 만나 감사의 인사를 했었지요. <del><em>본격 유명한 개발자의 이력서 따라하기!!</em></del> 순서는 아래와 같습니다.</p>
<ol>
<li>보유 기술</li>
<li>프로젝트 1 (최근)</li>
<li>프로젝트 2</li>
<li>강의경력</li>
<li>대학원 연구과제</li>
<li>대외 공모전 경험</li>
<li>대학 때의 토이 프로젝트</li>
</ol>
<p><img src="http://woowabros.github.io/img/2017-07-17/career1.png" alt=""><img src="http://woowabros.github.io/img/2017-07-17/career2.png" alt=""></p>
<p>특별히, 최근 프로젝트에서 했던 일에 대해 쓸 때 많은 수정을 거쳤는데요, 어떤 관점에서 적을지 좋은 힌트를 얻을 기회가 있었습니다. 이력서를 쓰기 몇 달 전 “<a href="http://startupall.kr/event/developer/">훌륭한 개발팀장이 되려면?</a>“이라는 주제로 넥슨의 박종천님의 강연을 들었었습니다. 거기서는 팀장으로서의 업무를 세 가지 관점으로 분류했습니다. Technical Lead, Project Lead, 그리고 People Management. 강연을 들으면서 느낀 바도 많았고, 돌아가서 팀에 적용하면서 체험한 것도 있었던 터라 이 세가지 틀을 사용하니 내용을 정리하기가 쉬워졌습니다. 그때의 강연을 꼭 추천해드리고 싶은데 올라온 영상이 없어서 안타깝네요.</p>
<ul>
<li>Technical Lead – 기술적 관점에서의 역할</li>
<li>Project Lead – 프로젝트 진행자로서의 역할</li>
<li>People Management – 팀원과의 소통과 케어</li>
</ul>
<p><img src="http://woowabros.github.io/img/2017-07-17/seminar.png" alt=""></p>
<p></p>
<h1 id="">난 이렇게 일해요, 문제해결 및 개선사례</h1>
<p>지금까지 개발자로서 일해오고 접해본 것들을 보여주긴 했는데, 여전히 2% 부족하다 느꼈습니다. 첫 페이지에서도 timeline을 통해 해왔던 일을 보여주었지만, 내가 어떤 개발자인가를 어필하기 위해 제목과 간략한 소개를 썼었지요. 이쯤에서 내가 어떤 개발자인지 좀 더 보여주고 싶었습니다. 이력서를 보는 독자가 좀 더 실감 나게 저를 상상해 볼 수 있도록요. 만약 같이 일하는 모습을 상상하고 있다면, 이미 반쯤 넘어온 거겠죠. <del><em>이미 나와 일하고 있다! 이제 스스로 정신승리에 이르고 있습니다…</em></del></p>
<p>제 자신이 주도했고 좋은 성과가 있었던 일 중 2가지를 꼽았습니다. 그리고 각각에 대해 일을 진행했던 과정을 정리해보았습니다. 어떤 문제에 직면했을 때 그 상황을 잘 파악하고 원인을 알고 그 해결책을 잘 제시하며, 결과물을 만들어 내는 과정을 보여주기 위해 아래와 같은 구성으로 편집해보았습니다. 제 경우 내용을 채우고 나니 왼쪽 제목 공간이 좀 허전해 보여서 두 가지 사례를 추가로 간략하게 넣기도 했습니다.</p>
<ol>
<li>문제 정의</li>
<li>원인</li>
<li>측정 (문제의 결과, 심각성)</li>
<li>해결책 (연구 및 대안책)</li>
<li>해결 과정</li>
<li>평가 (문제가 해결되었는지 측정)</li>
<li>비고 (회고, 부수효과)</li>
</ol>
<p><img src="http://woowabros.github.io/img/2017-07-17/problem_solving.png" alt=""></p>
<p></p>
<h1 id="">혹시 시간이 되신다면~ 자기소개 들어갑니다~</h1>
<p>사실 여기까지 쓰면 업무에서의 전문성은 다 보여준 거라고 생각했습니다. 이미 이력서 분량이 네 장이 되었기 때문에 집중해서 이력서를 볼 수 있는 분량으로는 최대한이라고 판단했지요. 이제 남은 것은 자기소개와 기.타.등.등일텐데 이 부분을 다시 집중해서 읽게 하기란 어려울 것 같았습니다. 그래서 자기소개는 좀 편하게 볼 수 있는 내용으로 작성했습니다.</p>
<p>자기 철학이나 개인사를 드러내기보단 개발자로서 살아왔던 이야기를 친구나 지인에게 이야기하듯 써보았습니다. 한 번에 너무 길면 보기 힘드니 저의 경우 컴퓨터를 처음 접했을 때와 대학 시절 한 단락, 대학원 과정 중의 경험 한 단락, 스타트업에서의 경험 한 단락, 이렇게 세 부분으로 나누어서 썼습니다. 쓰고 나이 첫 페이지부터 계속 얘기해왔던 것들의 반복이라는 느낌도 들었지만, 좀 더 편한 문체로 풀어쓴다는 생각으로 채웠습니다.</p>
<p>이왕 편한 마음으로 보라고 한 페이지니, 왼쪽 제목 공간에 관련된 사진을 작게 넣어 보았습니다. 글로 쓰진 않았지만, 자연스럽게 운동도 좀 했어요 라고 어필도 되구요. 지금에 와서 그때 썼던 페이지를 다시 보니, 좀 길어보이긴 하네요. 세 부분으로 나누어 놓았으니 단락을 좀 더 나누어서 너무 답답하지 않게 보이게 하면 더 좋았겠네요.</p>
<p><img src="http://woowabros.github.io/img/2017-07-17/introduction.png" alt=""></p>
<p></p>
<h1 id="">마지막 페이지, 여기까지 봐주셔서 감사합니다~</h1>
<p>정말 제목 그대로입니다. 자세히는 안 보았을지라도 장장 다섯 페이지를 넘긴 독자에게 보내는 감사의 멘트와 연락처로 마무리 하고 싶었습니다. 그런데 문제는 감사멘트와 연락처를 넣는 것으로는 한 페이지를 채울 수 없으니, 두 가지 선택지를 생각했습니다. 한 페이지 더 만들어서 마무리하는 것과 이전 페이지의 내용을 좀 줄여서 공간을 만들고 하단에 배치하는 것. 제 경우는 그동안 넣고 싶었지만, 마땅히 넣기 힘들었던 글감과 이야기가 있었던 터라 그 내용을 추가해서 새로 페이지를 구성하기로 했습니다.</p>
<p><img src="http://woowabros.github.io/img/2017-07-17/ending.png" alt=""></p>
<p>첫째로 개발자로서의 지속적인 성장과 촉(?)을 기르기 위해 업무와 직간접적으로 연관된 외부 강연이나 컨퍼런스를 참가하였던 경험을 썼습니다. 둘째로는 개인적인 취향일 수도 있지만, 어느 정도 업무와도 연결될 수 있는 취미를 소개했습니다. 취미 부분은 일부러 글쓰기 문체보다는 말하기 문체로 썼습니다. 제 경우는 폰트덕후로서 해왔던 소소한 경험들과 픽셀 단위의 틀어짐을 구분하는 매의 눈(?)을 자랑했는데요, 여기서는 너무 가볍지도 딱딱하지도 않은 분위기로 썼습니다.</p>
<p></p>
<h1 id="">보기 좋은 이력서가 면접에 더 가깝다</h1>
<p>요즘엔 특별한 이력서 양식 없이도 이력서를 낼 수 있는 서비스들이 제법 있습니다. 물론 입사 전형이 진행되면 최종적으로는 각 회사에서 관리하는 이력서양식으로 다시 써야 하겠지만, 처음으로 자신을 PR할 수 있는 문서인 이력서를 다양한 방법으로 쓸 수 있다는 것은 좋은 기회라고 생각합니다.</p>
<p>제 경우는 일반적인 이력서 양식이나 틀에 맞추려고 하면 나이에 비해서 경력이 다소 적어 보이는 것과 대학원 과정에서의 경험들이 잘 드러나지 않는 것이 제 발목을 잡았습니다. 저는 이것을 만회하기 원했고 제가 가진 장점과 능력을 최대한 잘 보여주려고 했습니다. 물론 없던 것을 만들거나 과장한 것은 면접에서 몇 마디 해보면 드러날 것이기 때문에 그런 점에서는 조심스럽게 쓰기도 했습니다.</p>
<p>그리고 또 한편으로 중요하게 생각한 것은 <strong>잘 보이게하자</strong>는 것이었습니다. 사람들은 이력서나 문서들을 볼 때 직감적으로 문서의 모양새를 먼저 보게 될 테니까요. 대학원 과정 중에는 발표자료와 논문을 쓸 일이 많았는데 그 과정에서 얻은 팁을 아래에 간략하게 정리해보았습니다.</p>
<ul>
<li>폰트 - 굴림과 맑은고딕은 출력용 문서에 사용하지 않음 - 애초에 저해상도 화면의 작은 픽셀에 최적화된 폰트로 만들어짐</li>
<li>추천하는 폰트는 맥의 애플SD고딕, 또는 KoPub돋움 - 가독성이 좋은 조형을 가지고 있고, 종이 출력의 품질이 우수함</li>
<li>KoPub돋음의 경우 공개된 폰트이며 개인적으로 사용에 문제가 없음</li>
<li>굵기는 약간 가늘게(light) 하는 것이 트렌드 - iOS, Android, Windows 모두 요즘에는 기본폰트가 가늘어지고 있음</li>
<li>제목이나 강조를 하고 싶은 곳에 굵은 폰트를 쓰는 것은 좋으나 과용하면 효과가 떨어짐</li>
<li>페이지 레이아웃 - 적절한 단(칼럼)을 선택 - 한 단 모두 본문으로 채울 경우 한 줄에 너무 많은 글이 들어가 쓰기도 보기도 힘들 수 있음</li>
<li>제 경우는 두 단으로 30:70으로 구성했고 왼쪽은 제목 칸으로 오른쪽은 본문용으로 사용 - 보는 사람의 시선이 위에서 아래로 내려갈 때 제목이 눈에 잘 들어오는 장점이 있음</li>
<li>단과 단 사이에 여백을 적절히 넣으면 따로 선을 넣지 않아도 구분이 잘 되며 여유가 있어 보임</li>
<li>필요하면 페이지 테두리도 활용 - 제 경우는 상단과 하단에 회색 선을 사용하여 안정감을 줌</li>
<li>사면으로 테두리를 만들면 답답해 보일 수 있음</li>
<li>여백 - 상하좌우 여백을 여유 있게 주는 것이 보는 사람이 답답하게 느껴지지 않음</li>
<li>그림과 표나 선과의 간격을 적절히 유지</li>
<li>불필요한 선을 넣지 않은 것도 좋음 (표의 좌우 선을 없애면 여유가 있어 보임)</li>
<li>색상 - 이력서의 경우 많아도 두세 가지로만 제한 - 본문의 경우 검은색 또는 짙은 회색</li>
<li>제목이나 강조가 필요하면 색상 사용</li>
<li>색상들이 서로 너무 대조되지 않도록 함 - 같은 색을 채도를 다르게 하는 것도 좋음</li>
<li>검은색 본문과 회색의 조합도 제법 괜찮음</li>
<li>일관성 - 폰트의 크기와 굵기를 너무 많이 쓰지 않도록 함, 산만해짐</li>
<li>페이지의 여백과 줄간도 일정하게 유지</li>
</ul>
<p>사실, 페이지의 모양새를 다듬고 나니 이력서가 홍보물이나, 브로셔처럼 보였었습니다. 처음엔 이래도 괜찮을까 생각도 들었지만, 자신을 PR한다는 입장에서는 나쁘지 않은 방식이라고 생각했습니다.</p>
<p></p>
<h1 id="">글감을 먼저 마음껏 풀어보자, 그리고 나중에 다시 틀에 맞춰 정리하자</h1>
<p>아마도 처음 이력서를 쓰는 사회초년생의 경우에는 이력서를 쓰려고 하면 무척이나 막막할 겁니다. 그리고 그 상황에 정해진 틀을 눈앞에 두고 있으면, 더더욱 무엇을 쓸지 도무지 떠오르지 않는 경험을 하게 됩니다. 최근에 취업을 준비하는 후배와 대화하는 중에 느낀 것이 있었습니다.</p>
<p>열정도 있고 호기심도 많고 나름대로 경험도 있는 후배인데 이력서 양식 앞에서 잘 쓰지 못하고 있었습니다. 저도 그 틀 안에서는 당장 교정을 해주거나 조언을 해주기도 쉽지 않았습니다. 그래서 그냥 몇 가지 질문을 해봤는데, 이야기로는 술술 풀어내는 것이었습니다. 그래서, 먼저는 틀에 매이지 말고 네가 해왔고 잘하는 것들을 풀어서 써보자고 했습니다. 일단 글감을 많이 풀어서 만들어 보자고 했습니다. 그랬더니 그 후배가 다시 자신감을 찾은 것 같았습니다.</p>
<p></p>
<h1 id="">이건 나의 케이스, 여러분의 또 다른 케이스</h1>
<p>나름대로 해보았던 경험들을 풀어서 썼지만, 역시 이건 저 자신을 위한 이력서 만들기였습니다. 그리고 이력서의 모양을 잘 다듬는다 해도 그것만으로는 좋은 결과를 얻기 힘들 것입니다. 실제로 경력과 실력이 우수한 사람은 이력서는 부차적인 것이 될 수도 있습니다. 몇 장의 문서보다 함께 일한 사람의 추천이 더 믿을 수 있는 것이기도 하지요. 하지만 거기에 더해서, 자신이 스스로에게 주는 추천서로의 이력서도 하나쯤 정성들여 만들어 놓으면 좋지 않을까요? 🙂</p>
<h3 id="links">Links</h3>
<ul>
<li><a href="https://blog.outsider.ne.kr/1234">변정훈님의 ‘이력서’ 포스트</a></li>
<li><a href="http://startupall.kr/event/developer/">박종천님의 ‘훌륭한 팀장이 되려면?’ 강연</a></li>
<li><a href="http://www.kopus.org/biz/electronic/font.aspx">KoPub 폰트</a></li>
<li><a href="http://fontawesome.io/">Font Awesome (연락처 아이콘)</a></li>
</ul>
]]></content:encoded></item><item><title><![CDATA[구독중인 RSS/ATOM FEED 소개]]></title><description><![CDATA[<p>항상 새로운 기술과 동향들에 관심이 많은 저로서는 rss/atom feed를 구독하는 것이 매일 아침 조간신문 보듯이 일상이 되어 있습니다. 물론 좋은 습관이라고 생각하고 있고, 주변 개발자들에게 추천하곤 합니다. rss가 처음 나왔을 때부터 지금까지, google reader가 사라지면서 지금 쓰고 있는 feedly의 subscription 수가 100가지를 넘어가고 있는 지금, 제가 구독 중인 feed들</p>]]></description><link>http://inbon.net/my-feed-list/</link><guid isPermaLink="false">5a4d67b3a0cad603f38e2053</guid><category><![CDATA[feed]]></category><category><![CDATA[개발자로살기]]></category><dc:creator><![CDATA[Inbon Kuh]]></dc:creator><pubDate>Thu, 29 Dec 2016 03:09:24 GMT</pubDate><content:encoded><![CDATA[<p>항상 새로운 기술과 동향들에 관심이 많은 저로서는 rss/atom feed를 구독하는 것이 매일 아침 조간신문 보듯이 일상이 되어 있습니다. 물론 좋은 습관이라고 생각하고 있고, 주변 개발자들에게 추천하곤 합니다. rss가 처음 나왔을 때부터 지금까지, google reader가 사라지면서 지금 쓰고 있는 feedly의 subscription 수가 100가지를 넘어가고 있는 지금, 제가 구독 중인 feed들 중 개발자들에게 추천하고 싶은 리스트를 정리해봤습니다.</p>
<p>참고로, 구독관리는 <a href="https://feedly.com">feedly</a>로, 뷰어는 mac과 iOS에서 사용가능한 <a href="http://reederapp.com">reeder</a>를 사용하고 있습니다. 다시 정독해야 할 것들은 <a href="https://www.instapaper.com">instapaper</a>로 관리하기도 합니다.</p>
<p>정리하고 보니 상당수가 Web Front/Backend 관련된 블로그들이군요. 최근의 관심사가 반영된 듯합니다.</p>
<h2 id="news">News</h2>
<ul>
<li>**<a href="http://devnews.kr">devnews</a> (아직 feed 없음) – 국내판 Hacker News.**<strong>사실 여기 글들을 모니터링 잘하면 이런 feed 링크 수는 금방 늘일수 있을 듯 ^^ ㅠㅠ</strong></li>
<li><a href="https://news.ycombinator.com">Hacker News</a> (<a href="https://news.ycombinator.com/rss">feed</a>) – 사실, devnew.kr을 알게 되면서 원조인 Hacker News를 뒤늦게 알게됨. 피드홍수에 주의 바람.</li>
<li><a href="http://www.bloter.net">BLOTER</a> (<a href="http://www.bloter.net/feed">feed</a>) – IT관련 블로그기반 매거진. 처음엔 기술중심의 디테일이 있어서 개발자로서도 볼거리가 제법 있었는데, 근래에는 일반독자들에게 무게중심이 쏠리는 듯.  feed reader로 보면 기사내용만 깔끔하게 잘 나옵니다. 웹사이트 가면… 광고들이,,, 미안해요 블로터..</li>
</ul>
<h2 id="">개인 블로그</h2>
<ul>
<li><a href="https://estimastory.com">에스티마의 인터넷이야기</a> (<a href="https://estimastory.com/feed/">feed</a>) – 임정욱님의 블로그, 스타트업얼라이언스 관련 글, 라이코스 CEO 시기의 글 등 볼거리가 많은 블로그</li>
<li><a href="https://blog.outsider.ne.kr">Outsider’s Dev Story</a> (<a href="http://feeds2.feedburner.com/rss_outsider_dev">feed</a>) – 변정훈님의 블로그, 컨퍼런스 참관기, 다양한 기술분야의 글</li>
<li><a href="http://huns.me">Huns.me</a> (<a href="http://huns.me/feed">feed</a>) – React.js, JS, Frontend</li>
<li><a href="https://taegon.kim">코드쓰는사람</a> (<a href="https://taegon.kim/feed">feed</a>) – 김태곤님 블로그, 웹개발, React.js, PHP. 최근 Automattic(WordPress)으로 이직하신 덕분에 React.js 글이 계속 올라오지 않을까하는 기대.. ^^</li>
<li><a href="https://joshuajangblog.wordpress.com">Captain Pangyo</a> (<a href="https://joshuajangblog.wordpress.com/feed/">feed</a>) – 죠슈아 장님의 블로그, 구글의 웹개발 article을 번역한 글 보면서 알게 됨</li>
<li><a href="http://blog.coderifleman.com">Coderifleman’s blog</a> (<a href="http://blog.coderifleman.com/atom.xml">feed</a>) – React.js 에 대한 좋은 글과 번역글</li>
<li><a href="https://minieetea.com">by minieetea</a> (<a href="https://minieetea.com/feed">feed</a>) – 어느 기획자의 개발냄새 풀풀나는 블로그? ^^</li>
<li><a href="http://subicura.com">subicura</a> (<a href="http://subicura.com/feed.xml">feed</a>) – 김충섭님 블로그, 홈쇼핑처럼 개발 후기, ruby, go, React.js, docker 등</li>
<li><a href="http://mytory.net">웹으로 말하기</a> (<a href="http://feeds.feedburner.com/mytory_tc">feed</a>) – 안형우님의 블로그, 웹 개발 관련. 작은 팁들도 많음. 나는 SVG 관련 글 검색하다 알게 됨</li>
<li><a href="http://awsdog.tistory.com">똥개의 AWS 세상</a> (<a href="http://awsdog.tistory.com/rss">feed</a>) – AWS에 대한 실전 사례들 소개</li>
<li><a href="http://bcho.tistory.com">조대협의 블로그</a> (<a href="http://bcho.tistory.com/rss">feed</a>) – DB관련해서 찾다가 발견한 블로그인데, 다루는 분야는 db, cloud, 머신러닝, 언어들 등등 다방면의 글이 많음</li>
<li><a href="http://www.andrewahn.co">Andrew Ahn</a> (<a href="http://www.andrewahn.co/feed/">feed</a>) – 안정훈님의 블로그, 실리콘밸리에서의 경험들 (기술전략, 프로덕트, 마케팅, 스타트업 이야기들</li>
<li><a href="https://subokim.wordpress.com">IT의 중심에서</a> (<a href="https://subokim.wordpress.com/feed/">feed</a>) – 김수보님의 블로그, 기술을 바라보는 관점에 대한 글들이 좋아 구독함, IT산업과 스타트업에 대한 글도 다수</li>
<li><a href="http://aploit.egloos.com">온라인 저장소</a> (<a href="http://rss.egloos.com/blog/aploit">feed</a>) – 기술관련 책 리뷰가 많음</li>
<li><a href="http://www.memoriesreloaded.net">Memories Reloaded</a> (<a href="http://www.memoriesreloaded.net/feeds/posts/default">feed</a>) – 김창원님의 블로그. 한국 + 실리콘밸리 + 스타트업 이야기들</li>
<li><a href="https://selfothercontext.com">Self, Other and Context</a> (<a href="https://selfothercontext.com/feed/">feed</a>) – 애자일, 칸반, 조직문화 등. 캐시슬라이드</li>
<li><a href="http://goodhyun.com">김국현의 낭만 IT</a> (<a href="http://feeds.feedburner.com/goodhyun">feed</a>) – 김국현님의 블로그, 기술자체보다 IT에 대한 담론이 많음. 여담으로, 웹툰작가이시기도 함(낭만오피스)</li>
<li><a href="http://www.ikwisdom.com">김익환의 “소프트웨어 지혜”</a> (<a href="http://www.ikwisdom.com/feeds/posts/default">feed</a>) – 한국의 소프트웨어 업계에 대한 기고글이 많음. 책을 통해 먼저 알게됨</li>
</ul>
<h2 id="">팀/기술기업 블로그</h2>
<ul>
<li><a href="https://blog.weirdx.io">이상한 모임</a> (<a href="https://blog.weirdx.io/feed">feed</a>) – 다양한 주제로 다양한 필진들의 글, 정기적 기술 링크 소개</li>
<li><a href="http://woowabros.github.io">우아한형제들 기술블로그</a> (<a href="http://woowabros.github.io/feed.xml">feed</a>) – 배달의 민족, 기술적용 사례들, 서비스 런칭 이야기 등</li>
<li><a href="http://tech.kakao.com">kakao 기술 블로그</a> (<a href="http://tech.kakao.com/rss/">feed</a>) – 카카오 기술 블로그, SSD 관련 글을 보면서 알게됨</li>
<li><a href="http://developers.linecorp.com/blog/ko/">LINE Engineers’ Blog</a> (<a href="http://developers.linecorp.com/blog/ko/?feed=rss2">feed</a>) – LINE 기술 블로그, AKKA를 이용한 아키텍처 설계 문서를 보면서 알게됨.</li>
<li><a href="http://readme.skplanet.com">README</a> (<a href="http://readme.skplanet.com/?feed=rss2">feed</a>) – SK플래닛 기술 블로그, 기술적용 사례들을 소개하고 공유</li>
<li><a href="http://tosslab.github.io">JANDI tech blog</a> (<a href="http://tosslab.github.io/feed.xml">feed</a>) – 잔디를 만든 토스랩의 블로그, 역시나 실전 사례들 많음</li>
<li><a href="https://spoqa.github.io">spoqa 기술 블로그</a> (<a href="https://spoqa.github.io/./atom.xml">feed</a>) – 스포카 기술 블로그. 요즘엔 UX, 디자인 관련 글들이 많은 듯. <a href="https://spoqa.github.io/2015/01/16/design-with-code.html">코드로 디자인하기</a>, Noto 폰트를 개선한 <a href="https://github.com/spoqa/spoqa-han-sans">스포카폰트</a>를 계기로 알게됨. 오픈소스의 긍정적 효과? ^^</li>
<li><a href="http://www.nextree.co.kr">Nextree</a> (<a href="http://www.nextree.co.kr/rss/">feed</a>) – Java, Spring, 웹개발 등</li>
<li><a href="https://coligo.io">coligo</a> (<a href="https://coligo.io/rss.xml">feed</a>) – JS, Node.js, Vue.js 관련 블로그, 튜토리얼. 요즘 사용하고 있는 Vue.js에 대한 글 때문에 구독 중</li>
<li><a href="https://scotch.io">Scotch.io</a> (<a href="https://scotch.io/feed">feed</a>) – Laravel 블로그, 웹개발 관련 tutorial 들이 많음. Vue.js 관련 tutorial이 많이 알게됨</li>
</ul>
<h2 id="">기술/툴 블로그</h2>
<ul>
<li><a href="https://www.chromestatus.com/features">Chrom Platform Status</a> (<a href="http://www.chromestatus.com/features.xml">feed</a>) – Web frontend, HTML, CSS, JS 관련 개발자들에게는 필수!라고 생각함. 크롬의 웹기술 changelog. 최근에 JS의 async, await가 55에 포함된 것을 확인함.</li>
<li><a href="https://blog.chromium.org">Chromium Blog</a> (<a href="http://blog.coderifleman.com/atom.xml">feed</a>) – 크롬 블로그</li>
<li><a href="http://v8project.blogspot.com">V8 JavaScript Engine</a> (<a href="http://v8project.blogspot.com/feeds/posts/default">feed</a>) – V8 블로그</li>
<li><a href="https://webkit.org">Webkit</a> (<a href="https://webkit.org/feed/">feed</a>) – Webkit</li>
<li><a href="https://blog.jetbrains.com/idea">IntelliJ IDEA Blog</a> (<a href="https://blog.jetbrains.com/idea/feed/">feed</a>) – 이제 빠져나갈 수 없은 툴이 됨…</li>
</ul>
<h2 id="podcast">PODCAST</h2>
<ul>
<li><a href="https://iamprogrammer.io">나는 프로그래머다</a> (<a href="https://iamprogrammer.io/feed/">feed</a>) – 개발자들을 위한 요즘 가장 핫한(?) 팟캐스트, 정기적으로 conference와 meetup도 함</li>
</ul>
<p></p>
]]></content:encoded></item></channel></rss>