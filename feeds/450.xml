<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Daily Log 
</title>
 <link href="https://jiyeonseo.github.io/atom.xml" rel="self"/>
 <link href="https://jiyeonseo.github.io/"/>
 <updated>2019-02-09T13:30:44+00:00</updated>
 <id>https://jiyeonseo.github.io</id>
 <author>
   <name>jiyeonseo</name>
   <email></email>
 </author>

 
 <entry>
   <title>일일커밋 Day 112</title>
   <link href="https://jiyeonseo.github.io/2019/01/21/daily-commit-100days/"/>
   <updated>2019-01-21T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2019/01/21/daily-commit-100days</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;/images/github_tile.png&quot;&gt;&lt;img src=&quot;/images/github_tile.png&quot; alt=&quot;github_tile&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;작년 HacktoberFest를 기점으로 왠지 “일일 커밋”을 하게 되었다. (중간중간 15일 정도 빼먹었네)&lt;/p&gt;

&lt;p&gt;지구력이 좋은 편이긴 하지만 커밋 습관(본업 제외하고) 처음이라 좀 뿌듯하기도 하고 앞으로 더 잘하고 싶어 짧게 소감을 남겨 보려 한다.&lt;/p&gt;

&lt;h2 id=&quot;좋았던-점&quot;&gt;좋았던 점&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;HacktoberFest를 완수하여 티셔츠 2개를 얻었다.
    &lt;ul&gt;
      &lt;li&gt;사실 일일 커밋과는 상관없지만 이 덕분에 시작했다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Github을 페북 들어가듯 들어가게 되었다.
    &lt;ul&gt;
      &lt;li&gt;재밌는 습관이다. 타일 확인하느라 하루에 한 번은 꼭 Github에 들어왔고 덕분에 더 많은 오픈 소스들을 많이 탐험해 볼 수 있었다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Contribution을 더 많이 하게 되었다.
    &lt;ul&gt;
      &lt;li&gt;위에 이어서, 자꾸 보다 보니 오타들도 잘 보이고 조금 더 추가되었으면 하는 부분들이 보였다. 정말 작은 기여지만 뭐, 처음이 다 그런 거 아니겠어.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공부 관련된 플러그인 만들기.
    &lt;ul&gt;
      &lt;li&gt;예전에는 공부하고 그냥 끝냈을 새로운 기술들도 커밋을 위해 괜히 프로젝트 하나를 더 파게 되었다.&lt;/li&gt;
      &lt;li&gt;Gatsby 공부하며 토이로 만들어본 Plugin.
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://github.com/jiyeonseo/gatsby-source-giphy-trending&quot;&gt;https://github.com/jiyeonseo/gatsby-source-giphy-trending&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;아쉬웠던-점&quot;&gt;아쉬웠던 점&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;퀄리티 높지 못한 Commit들.
    &lt;ul&gt;
      &lt;li&gt;솔직히 대충 1 커밋을 채운 날도 있다. 의무감과 집착으로 채운 commit 들도 있다.&lt;/li&gt;
      &lt;li&gt;당연하겠지만 정말 정말 귀찮은 날도 있었다. 타일이 뭐라고.. private repository를 만들어서 채운 날도 있고, 전날 다 했는데 일부러 커밋 안 해놨다가 12시 넘어서 커밋해서 이틀 치 타일을 채운 적도 있다.&lt;/li&gt;
      &lt;li&gt;숫자에만 너무 집착한 게 아닌가 싶다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;긴 코드리뷰를 받아보지 못했다.
    &lt;ul&gt;
      &lt;li&gt;공개된 오픈 소스의 Example 코드나 문서 수정같은 Pull Request여서 크게 리뷰를 받지 못했다. 다양한 사람들과 코드 리뷰를 해보고 싶다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;나보다 더 (훨씬 더) 일일커밋을 잘한 분들의 글.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://milooy.wordpress.com/2016/07/02/daily-commit-1-year/&quot;&gt;진유림님의 글&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.outsider.ne.kr/1141&quot;&gt;Outsideris님의 글&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://johnresig.com/blog/write-code-every-day/&quot;&gt;John Resig의 글&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;당신이 반복적으로 하는 행동, 그것이 바로 당신 자신이다.
그러므로 탁월함은 행동이 아니라 습관이다. - 아리스토텔레스&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://100.daum.net/encyclopedia/view/54XX58000173&quot;&gt;1만 시간의 법칙&lt;/a&gt;을 보며 막연히 꾸준하게만 하면 될거라 믿으면 안된다. 지금까지는 습관을 만들기 위한 행동이었다면, 조금 더 의식적인 연습으로 실력을 끌어올릴 수 있는 습관을 만들고 싶다. 다음 회고때는 스스로 좀 더 발전한 모습을 쓸 수 있었으면 좋겠다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] '가장 빨리 만나는 챗봇 프로그래밍'</title>
   <link href="https://jiyeonseo.github.io/2019/01/02/chatbot-programming/"/>
   <updated>2019-01-02T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2019/01/02/chatbot-programming</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://search.daum.net/search?w=bookpage&amp;amp;bookId=4836771&amp;amp;tab=introduction&amp;amp;DA=LB2&amp;amp;q=%EA%B0%80%EC%9E%A5%20%EB%B9%A8%EB%A6%AC%20%EB%A7%8C%EB%82%98%EB%8A%94%20%EC%B1%97%EB%B4%87%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D&quot;&gt;‘가장 빨리 만나는 챗봇 프로그래밍 with Bot Framework’&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;튜토리얼 형식으로 챗봇을 처음 공부하는 사람 그리고 빠르게 익혀야 하는 사람들에게 추천.&lt;/p&gt;

&lt;p&gt;책에서 다루는 부분들은 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Azure Bot Service&lt;/li&gt;
  &lt;li&gt;Bot Framework&lt;/li&gt;
  &lt;li&gt;Azure SQL Database&lt;/li&gt;
  &lt;li&gt;QnA Maker&lt;/li&gt;
  &lt;li&gt;LUIS&lt;/li&gt;
  &lt;li&gt;외부 다양한 플랫폼들과의 통합. Skype, Facebook, Telegram, 그리고 카카오톡까지!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;개인적으로 Azure를 이용해 Serveless를 공부하고 있는데, Web Service, DB 등은 언급해주어서 같이 공부할 수 있어서 좋았다. 특히 요금 정책….. 저번달에 모르고 Service Plan 테스트용 만들어 놨다가 까먹고 돈 좀 나갔다.&lt;/p&gt;

&lt;p&gt;그럼에도 불구하고 아쉬운 점을 꼽자면…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C#과 Visual Studio가 익숙하지 않은 사람이라면 많이 매일수 있다. (바로 나야 나…) Node 예제를 다 다루지 못하더라도 같은 기능을 동작하는 Node 예제 코드를 같이 제공했으면 더 좋았을 것 같다.
    &lt;ul&gt;
      &lt;li&gt;5장 까지 내용을 Node + SDK3 기반으로 만들어 보았다 : &lt;a href=&quot;https://github.com/jiyeonseo/chatbot_node_botbuilder_sdk3&quot;&gt;chatbot_node_botbuilder_sdk3&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Window 환경 기반으로 쓰여진 책이라 내 환경인 Mac 그리고 Visual Studio for Mac과는 맞지 않는 부분이 있었다. 그리고 몰랐다…. 여기서 삽질을 좀 했다.
    &lt;ul&gt;
      &lt;li&gt;Visual Studio for Mac에 맞춘 코드 : &lt;a href=&quot;https://github.com/jiyeonseo/cheesecheeseball&quot;&gt;cheesecheeseball&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;중간에 Bot Builder SDK default 버전이 변경되면서 Portal Azure에서 헤맴 – 아래 저자의 애프터 서비스 영상에서 언급되고 있다!
    &lt;ul&gt;
      &lt;li&gt;Bot Template SDK 3 → SDK 4 : &lt;a href=&quot;http://blog.naver.com/PostView.nhn?blogId=warit&amp;amp;logNo=221431965506&quot;&gt;http://blog.naver.com/PostView.nhn?blogId=warit&amp;amp;logNo=221431965506&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-중간-공부-노트&quot;&gt;내 중간 공부 노트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jiyeonseo-study/Azure-study/blob/master/bot_service.md&quot;&gt;https://github.com/jiyeonseo-study/Azure-study/blob/master/bot_service.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;azure-function-을-이용한-봇-코드-샘플&quot;&gt;Azure Function 을 이용한 봇 코드 샘플&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jiyeonseo/azure-line-bot-example&quot;&gt;azure-line-bot-example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jiyeonseo/azure-telegram-sample&quot;&gt;azure-telegram-sample&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[회고] Review 2018</title>
   <link href="https://jiyeonseo.github.io/2018/12/31/review2018/"/>
   <updated>2018-12-31T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/12/31/review2018</id>
   <content type="html">&lt;p&gt;올해는 좋은 회고들이 정말 많이 올라오는 것 같다. (너무 부끄러워서) 썼다 지웠다를 반복하다가 &lt;a href=&quot;https://adhrinae.github.io/posts/retrospective-2018&quot;&gt;좋은 회고 포맷&lt;/a&gt;을 보고 정말 간단히 올해를 정리해보기로 마음 먹었다. 2019년 12월 31일에는 그래도 꽤 발전했구나 하며 이 글을 볼 수 있길.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;1-work무슨-일을-했나&quot;&gt;1. Work(무슨 일을 했나)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;새 회사, 새 업무에 적응을 많이 했다. 회사에서 주는 1주년 풍선도 받았다.&lt;/li&gt;
  &lt;li&gt;새 업무의 특성상, 말(?)도 전보다 더 많이 하게 되었다(난 원래 말이 많은데). 내게 발표는 항상 개발자들 대상이었는데, 이게 업무로 이어지게 되면서 비개발 직군과의 커뮤니케이션도 중요해지고, 클라이언트 스피킹 수업들도 회사 도움으로 3번 정도 들었다. 아직 잘하는지는 모르겠지만 할 수 있는 영역이 많이 늘어난 해였다.&lt;/li&gt;
  &lt;li&gt;Hacktober Fest를 처음 참여해 보았다. 결과물로는 Github과 MS에서 2장의 티셔츠가 오고 있다. 11월에 출발했는데 언제 오려나.
&lt;a href=&quot;/images/hacktober.png&quot;&gt;&lt;img src=&quot;/images/hacktober.png&quot; alt=&quot;hacktober&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-study무엇을-익혔나&quot;&gt;2. Study(무엇을 익혔나)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;그 핫한 노션을 새로 써보기 시작. 온오프라인도 잘 연동되고, 모바일도 기능은 좀 부족하지만 전에 사용하던 Dropbox Paper보다는 Sync면이나 UX면에서 훨씬 좋다. 지금은 거의 일기장으로 사용 중. 더 잘 사용하고 싶다.
 &lt;a href=&quot;/images/notion.png&quot;&gt;&lt;img src=&quot;/images/notion.png&quot; alt=&quot;notion&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;영어 공부를 많이 했다. 여전히 부족하지만 영어 수업도 3월부터 꾸준하게 하고 있고 외국인 동료들과도 이야기 많이 하고. 여전히 서툴지만 계속 이렇게 하다보면 더 늘지 않을까?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Serverless 공부를 시작했다. Coursera에서 GCP specialization 따고 토이 프로젝트 몇몇 가지를 해보고 있다. 근데 실무에서 사용하지 않으니 속도가 많이 느리다. 제대로 된 사이드 프로젝트를 생각해봐야겠다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-good뭘-잘했나&quot;&gt;3. Good(뭘 잘했나)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;오픈소스 기여를 많이 했다. 또 깃헙 타일도 잘 가꾸어 보았다. Hacktober부터 해서 기웃기웃 하다 보니 거의 매일 커밋하게 되고 어느새 꼭 commit 하나라도 해야 직성이 풀려서 10월부터 잔디를 좀 깔았다. 
&lt;a href=&quot;/images/contribution2018.png&quot;&gt;&lt;img src=&quot;/images/contribution2018.png&quot; alt=&quot;contribution2018&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;가족들과 시간을 많이 보냈다. 의도치는 않았지만 엄마에게 한 달 다른 나라에서 살기도 서포트 해주었고, 여행도 다녔다. 마음이 힘들 때, 제일 의지되는 건 역시 가족들이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;4-bad뭘-못했나&quot;&gt;4. Bad(뭘 못했나)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;블로그 글도 써놓고 완성하지 못한 것들이 백로그에 많이 쌓여있다. 라즈베리파이, 코드 리뷰, Hacktober 후기 등등. 반쪽짜리로 로컬에 가득하다. 글쓰기는 여전히 너무 힘들다.&lt;/li&gt;
  &lt;li&gt;책, 팟캐스트, 웹툰 등 좋아하는 것들을 많이 못했다.&lt;/li&gt;
  &lt;li&gt;사람들에게 더 친절하지 못했다. 상처 준 사람도 있다. 상처 준 사람에게 사과하는 마음으로 2019년에는 더 상냥한 사람이 되야겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-goal내년엔-무엇을-해볼까&quot;&gt;5. Goal(내년엔 무엇을 해볼까)&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;내가 더 좋아하는 일 그리고 재밌는 일을 하고 싶다. 그러기 위해서 더 많은 공부를 해야 한다는 것도 알았다. 영어든 기술이든.&lt;/li&gt;
  &lt;li&gt;뭔가 엄청 노력을 많이 했는데, 생각보다 결과물도 나의 성취감은 그에 비하면 너무 적었다. 노력 중독이 아니였나 싶다. 내년에는 쉼도 함께하는 퀄리티 높은 노력을 하고 싶다.&lt;/li&gt;
  &lt;li&gt;오픈소스에 더 깊은 기여를 하고 싶다. 사이드 프로젝트로만 하면 진도가 잘 안나가는게 걱정이다.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>[후기] Deview 2018</title>
   <link href="https://jiyeonseo.github.io/2018/10/14/deview2018/"/>
   <updated>2018-10-14T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/10/14/deview2018</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;/images/deview2018/deview_2018_4.JPG&quot;&gt;&lt;img src=&quot;/images/deview2018/deview_2018_4.JPG&quot; alt=&quot;deview2018&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;올해도 좋은 분들의 도움을 받아 &lt;a href=&quot;https://deview.kr/2018&quot;&gt;Deview2018&lt;/a&gt; Day1에 다녀왔다.&lt;/p&gt;

&lt;p&gt;매년마다 올해는 내용이 괜찮네, 구성이 좋네, 부스가 나쁘네, 기념품이 별로네 하지만 이렇게 큰 행사를 매 해마다 열어 준다는 건 정말 감사한 일이다. 사실 컨퍼런스에 참여한다고 해서 특정 기술에 대해서 바로 습득 할 수는 없다. 그저 거기서 힌트를 얻고 자극 받고 또 사람들을 만나며 나의 시야를 넓혀가는 것, 그게 컨퍼런스 참석자의 자세가 아닐까 싶다. 그런 점에서 Deview는 트랜디한 주제와 자사의 기술 공유 그리고 외부 회사들의 공유 자리를 만들어 줌으로써 건강한 개발자 컨퍼런스의 문화를 차곡차곡 쌓아주고 있는 고마운 행사인 것 같다. 참석할때마다 많이 배우고 간다.&lt;/p&gt;

&lt;p&gt;그래도 나름 매년 참석하고 있는 사람으로써, 올해의 Deview를 이야기하자면!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;항상 주는 Deview 에코백은 매년 확실히 좋아져간다!!!&lt;/li&gt;
  &lt;li&gt;Day1과 Day2의 주제 분배가 좋았던 것 같다. 개인적으로는 머신러닝에 대한 지식이 깊지 못하여 Day1에만 참여했는데 너무너무 즐겁게 들었다!&lt;/li&gt;
  &lt;li&gt;Day1에서도 ML, AI이 있긴 했지만 이와 관련한 프러덕션 적용이라던가 데이터 관리 등. 어찌보면 내가 앞으로 더 잘 알아야하는 부분을 알수있는 세션들이 정말 흥미로웠다.&lt;/li&gt;
  &lt;li&gt;항상 중간에 배치되어 있는 빈백은 참 좋다. 오랜만에 만난 개발자들과 수다도 떨고. 다만 이제 정말 인기가 좋아서 그 자리도 앉기 힘들다ㅠ 빈백 혹은 앉을 수 있는 자리가 더 많아 졌으면 좋겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;부스&quot;&gt;부스&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;부스들을 돌아다니며 다시 한번 더 치열해진 개발자채용을 실감했다. 다양한 이벤트 상품들로 개인정보 남기고 가게 하는 부스들이 많았는데, 물론 개발자취향(정말 올해 고퀄 많았음) 스티커들도 매력적이지만, 가장 기억에 남는 부스는 정말 활짝 웃는 모습으로 서비스개편에 대해 설명해주신 네이버 지도 부스. 진심으로 서비스를 사랑하는 모습이 나까지 설레게 하셨다. 저분과 일하면 얼마나 즐거울까? :)&lt;/li&gt;
  &lt;li&gt;스티커는 정말 취향 저격! 루닛과 하이퍼커넥트의 스티커는 정말 고민의 흔적을 많이 느낄 수 있었다.&lt;/li&gt;
  &lt;li&gt;네이버 오픈소스부스에서는 hacktober 10월을 좀 더 강조해서 first contribute를 도와주는 이벤트를 했으면 어땟을까 생각해보았다. 특정 태그를 나중에 컨트리뷰트 하면 선물을 보내준다던가? (내가 하는거 아니니까 막던져본다) 뺏지 선물이 open share enjoy였는데 너무 맘에 들어서 출근가방에 바로 붙힘! 고마워요!&lt;/li&gt;
  &lt;li&gt;라인 프랜즈 선물은 언제나 옳다.&lt;/li&gt;
  &lt;li&gt;웨일 쿠션 갖고싶다….인기 넘나 좋은 것.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;세션들&quot;&gt;세션들&lt;/h2&gt;

&lt;h3 id=&quot;지난-1년간의-웨일-브라우저와-그-미래&quot;&gt;지난 1년간의 웨일 브라우저와 그 미래&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/images/deview2018/deview2018_1.JPG&quot;&gt;&lt;img src=&quot;/images/deview2018/deview2018_1.JPG&quot; alt=&quot;deview2018&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://deview.kr/2018/schedule/260&quot;&gt;링크&lt;/a&gt; / &lt;a href=&quot;https://www.slideshare.net/deview/141-1-119007334&quot;&gt;발표 자료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;작년부터 항상 챙겨듣는 웨일 세션!&lt;/li&gt;
  &lt;li&gt;Chrome과 Safari가 이끌고 있는 이 인터넷 표준 세상에서 웨일의 끊임없이 노력하는 모습은 항상 감동을 준다.&lt;/li&gt;
  &lt;li&gt;네이밍 부분은 정말 공감했다. 내부 툴 혹은 프로젝트는 재밌고 의미있는 이름 짓는 것을 선호하는 편인데 확실히 서비스면에서는 직관적인 이름이 가장 좋은 것 같다.&lt;/li&gt;
  &lt;li&gt;흥미로운 기능 중 하나는 악의적인 redirect 하는 부분을 막아주는 기능이였는데(예를 들어, 페북에서 기사 클릭 후, 뒤로가기 눌렀을 떄 다른 페이지가 히스토리에 있는 경우), 웹서비스를 하다보면 가끔 History API를 건들때가 가끔 있다. 악의적인 redirect와 페이지가 의도적으로 history api를 이용해 조작하는 경우를 어떻게 판별할지가 궁금하다.&lt;/li&gt;
  &lt;li&gt;덕분에 모바일 웨일도 설치 완료 ;) 이제 모바일에서도 웨일!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;line-x-naver-개발-보안-취약점-이야기&quot;&gt;LINE x NAVER 개발 보안 취약점 이야기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://deview.kr/2018/schedule/249&quot;&gt;링크&lt;/a&gt; / &lt;a href=&quot;https://www.slideshare.net/deview/113linexnaver&quot;&gt;발표자료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://air.line.me/air/product#tab_airgo&quot;&gt;Air Go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;보안/취약점은 항상 회사만 믿고 잘 생각하지 못했던 부분이였다.&lt;/li&gt;
  &lt;li&gt;실서비스에서도 충분히 생길 수 있는 취약점에 대해서 콕콕 찝어주시고 그에 대한 보안 방법도 잘 설명해주셨다.&lt;/li&gt;
  &lt;li&gt;웹 서비스를 하는 회사라면 꼭 한번 읽어보고 혹시 내 서비스에는 문제가 없을지 확인해 보면 좋을 것 같다.&lt;/li&gt;
  &lt;li&gt;내년 네이버에서 시작한다는 자체 운영 버그바운티가 기대된다. :)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;병리-ai-제품-개발을-위한-데이터-관리-및-좌충우돌-삽질기&quot;&gt;병리 AI 제품 개발을 위한 데이터 관리 및 좌충우돌 삽질기&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/images/deview2018/deview2018_5.JPG&quot;&gt;&lt;img src=&quot;/images/deview2018/deview2018_5.JPG&quot; alt=&quot;deview2018&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://deview.kr/2018/schedule/226&quot;&gt;링크&lt;/a&gt; / &lt;a href=&quot;https://www.slideshare.net/deview/134-ai-product&quot;&gt;발표자료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;제일 재밌게 들었던 세션!&lt;/li&gt;
  &lt;li&gt;발표자분의 겸손이 정말 초고수임을 오히려 증명해주는 듯 했다.&lt;/li&gt;
  &lt;li&gt;의료라 하면 굉장히 멀고 나와는 관심 없을 거라 생각했는데 결국 개발자의 업은 같다는 걸 보여준 재밌는 세션이였다.&lt;/li&gt;
  &lt;li&gt;소개된 오픈소스들 : &lt;a href=&quot;https://openslide.org/&quot;&gt;OpenSlide&lt;/a&gt; , &lt;a href=&quot;https://openseadragon.github.io/&quot;&gt;OpenSeardragon&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;의료 서비스 개발자 모임 (난 아니지만..ㅋㅋ) : &lt;a href=&quot;https://www.facebook.com/groups/177675496397938&quot;&gt;https://www.facebook.com/groups/177675496397938&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;모바일-키보드-스마트보드에-ai-적용하기&quot;&gt;모바일 키보드, 스마트보드에 AI 적용하기&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/images/deview2018/deview2018_6.JPG&quot;&gt;&lt;img src=&quot;/images/deview2018/deview2018_6.JPG&quot; alt=&quot;deview2018&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://deview.kr/2018/schedule/230&quot;&gt;링크&lt;/a&gt; / &lt;a href=&quot;https://www.slideshare.net/deview/135-ai&quot;&gt;발표자료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;프로젝트 진행하며 꽃길만 걷고싶었던 초기 생각과는 많이 달랐다고는 하나, 웃으며 발표하는 발표자분의 모습을 보며 그래도 즐겁게 프로젝트를 하신 것 같다.&lt;/li&gt;
  &lt;li&gt;나도 ML framework와 모델만 있으면 프러덕트 적용은 어렵지 않다고 생각했는데, 역시 세상 쉬운 거 없구나..&lt;/li&gt;
  &lt;li&gt;자신의 삽질을 오픈소스화 하신 모습을 보고 정말 놀라웠다. 나는 블로그 정리도 잘 안하는데 ㅠㅠ 역시 세상을 바꾸는 사람들은 다르다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;최근 공부에 대한 갈증이 심한 시간을 겪고 있어서 정말 즐겁게 들었다. 또 오랜만에 각자의 자리에서 바쁘게 뛰고 있는 사람들과도 이야기 나누고 힘도 많이 얻었다.&lt;/p&gt;

&lt;p&gt;여전히 다른 사람들에게 얻기만 하고 내가 무엇인가 주지 못한다는 생각이 많이 든다. 정보 공유도 그렇고 에너지도 그렇고. 얼른 힘 내고 긍정 파워 뿜뿜 치즈로 돌아와서 내가 배운 것들, 지식, 정보 그리고 많은 것들을 나눌 수 있도록 노력해야겠다.&lt;/p&gt;

&lt;p&gt;마지막으로 매년 풍성한 개발자축제를 만들어 주는 네이버에게 다시 한번 감사합니다.
&lt;a href=&quot;/images/deview2018/deview2018_3.JPG&quot;&gt;&lt;img src=&quot;/images/deview2018/deview2018_3.JPG&quot; alt=&quot;deview2018&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Azure Function + Telegram chatbot 만들기</title>
   <link href="https://jiyeonseo.github.io/2018/08/31/telegram-chatbot/"/>
   <updated>2018-08-31T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/08/31/telegram-chatbot</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/serverless-telegram-bot-on-aws-lambda-851204d4236c&quot;&gt;Serverless Telegram bot on AWS Lambda&lt;/a&gt; 는 AWS 람다 + Python 을 이용하여 텔레그램 봇을 만드는 실습 블로그인데, 읽다가 왠지 조금 다르게 해보고 싶어서 Azure Function + Node 로 살짝 다르게 실습해 보았다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;준비사항&quot;&gt;준비사항&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Node v6.5.0 이상&lt;/li&gt;
  &lt;li&gt;MS Azure 계정&lt;/li&gt;
  &lt;li&gt;텔레그램 계정&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1단계--telegram-bot-생성-및-토큰-받기&quot;&gt;1단계 : Telegram Bot 생성 및 토큰 받기&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.telegram.org/#/im?p=@BotFather&quot;&gt;@BotFather&lt;/a&gt; 에서 봇을 만든다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/newbot&lt;/code&gt; : 새로운 봇 생성. 이름은 *_bot 과 같은 형식으로&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/telegram_bot.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;마지막에 발급 받은 Token을 나중에 사용한다. 봇 생성 끝!&lt;/p&gt;

&lt;h2 id=&quot;2단계--serverless-framework-를-이용한-프로젝트-생성&quot;&gt;2단계 : Serverless framework 를 이용한 프로젝트 생성&lt;/h2&gt;

&lt;p&gt;쉽게 사용하고 쉽게 배포할수 있는 &lt;a href=&quot;https://serverless.com/framework/&quot;&gt;Severless framework&lt;/a&gt;을 사용하겠다. 이 프레임워크에서는 AWS, Azure 뿐만 아니라 Google cloud 등 &lt;a href=&quot;https://serverless.com/framework/docs/&quot;&gt;다양한 클라우드 프로바이더&lt;/a&gt;에 대해 서포트 하고 있으니 원하는 클라우드에 따라서 선택하면 된다. 이번 블로그에서는 Azure function을 사용해 보도록 하겠다.&lt;/p&gt;

&lt;h3 id=&quot;serverless-framework-설치&quot;&gt;Serverless framework 설치&lt;/h3&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; serverless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;새로운-프로젝트-생성&quot;&gt;새로운 프로젝트 생성&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;serverless create &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; azure-nodejs &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path_name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;my-unique-name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;새로 생성된 프로젝트 폴더로 들어가면 두 개의 파일이 생성된 것을 볼 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;handler.js&lt;/code&gt; : node 코드로 된 템플릿&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; : 설정 파일&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd {path_name}
$ npm install 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3단계--serverless-배포-및-확인&quot;&gt;3단계 : Serverless 배포 및 확인&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;serverless deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;만약, Azure에 미리 로그인이 되어있지 않다면 로그인 하는 페이지가 열리게 된다. 
그리고 다음과 같이 로깅이 뜨는 걸 볼 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Serverless: WARNING: Missing &lt;span class=&quot;s2&quot;&gt;&quot;tenant&quot;&lt;/span&gt; and &lt;span class=&quot;s2&quot;&gt;&quot;app&quot;&lt;/span&gt; properties &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;serverless.yml. Without these properties, you can not publish the service to the Serverless Platform.
Serverless: Building Azure Events Hooks
Serverless: Parsing Azure Functions Bindings.json...
Serverless: Building binding &lt;span class=&quot;k&quot;&gt;for function&lt;/span&gt;: hello event: httpTrigger
Serverless: Building binding &lt;span class=&quot;k&quot;&gt;for function&lt;/span&gt;: hello event: http
Serverless: Packaging service...
Serverless: Excluding development dependencies...
Serverless: Logging &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;to Azure
Serverless: Creating resource group: azure-telegram-sample-rg
Serverless: Creating &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;app: azure-telegram-sample
Serverless: Waiting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Kudu endpoint...
Serverless: Uploading &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;: hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;invoking&quot;&gt;invoking&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;serverless invoke &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; hello &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;log&quot;&gt;log&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serverless logs &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; hello &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/&quot;&gt;Azure Portal&lt;/a&gt; 에 들어가 Azure Function을 확인하면 새로운 함수 앱과 함수 hello가 생성된 것을 확인 할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/azure-telegram-sample-function.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;4단계--telegram-bot-nodejs&quot;&gt;4단계 : Telegram bot (Node.js)&lt;/h2&gt;

&lt;p&gt;텔레그램 봇 개발을 더 편하게 하기위해 아래 패키지들을 추가로 설치해준다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install --save node-telegram-bot-api request
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yagop/node-telegram-bot-api&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;node-telegram-bot-api&lt;/code&gt;&lt;/a&gt; : Telegram Bot API for NodeJS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위에서 생성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;handler.js&lt;/code&gt; 에 다음 코드를 복사 붙혀넣기 한다&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TelegramBot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'node-telegram-bot-api'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YOUR_API_TOKEN&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TelegramBot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;chatId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chatId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// status: 200, /* Defaults to 200 */&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ok'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;    

    &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 배포&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;serverless deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5단계--telegram-bot과-연결&quot;&gt;5단계 : Telegram bot과 연결&lt;/h2&gt;

&lt;p&gt;Portal &amp;gt; Function App -&amp;gt; 만든 functionn app -&amp;gt; function “hello”를 들어가면 url end point를 얻을 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/azure-telegram-sample.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://api.telegram.org/bot&amp;lt;Your Telegram TOKEN&amp;gt;/setWebhook&lt;/code&gt; 로 
	발급받은 endpoint 를 연결해준다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;--url&lt;/span&gt; https://api.telegram.org/bot&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;token&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/setWebhook &lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'content-type: application/json'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--data&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;url&quot;: &quot;{end-point}&quot;}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;6단계--demo&quot;&gt;6단계 : demo!&lt;/h2&gt;

&lt;p&gt;봇에게 말을 걸어보면!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Telegram_Web.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;끄읕!&lt;/p&gt;

&lt;h3 id=&quot;소스코드&quot;&gt;소스코드&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jiyeonseo/azure-telegram-sample&quot;&gt;https://github.com/jiyeonseo/azure-telegram-sample&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;참고-링크들&quot;&gt;참고 링크들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dev.to/lordferquad/telegram-bot-prototype-using-serverless-framework-and-webtask-e7g&quot;&gt;https://dev.to/lordferquad/telegram-bot-prototype-using-serverless-framework-and-webtask-e7g&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] 그로스 해킹 Growth Hacking</title>
   <link href="https://jiyeonseo.github.io/2018/08/12/growth-hacking/"/>
   <updated>2018-08-12T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/08/12/growth-hacking</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=KOR9788966189311&quot;&gt;그로스 해킹 Growth Hacking - 스타트업을 위한 실용주의 마케팅&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;작고 얇은 분량이 맘에 들어 집어든 책인데 정말 알차게 핵심을 짚고 있는 책이라 시간가는 줄 모르고 술술 읽었다. IT 회사 혹은 스타트업에서 일하는 기획자 혹은 개발자를 대상으로 하고 있다.&lt;/p&gt;

&lt;p&gt;전형적인 오래된 마케팅 방법, 예를 들어 정확한 타게팅이 어려우며 비싼 TV광고라던가 신문 지면 광고 등, 보다는 사용자의 피드백 혹은 성장률을 빠르게 추적하며 적은 돈으로 큰 효과를 누릴수 있는 방법에 대해서 이야기 하고 있다.&lt;/p&gt;

&lt;p&gt;최근 들어 광고 쪽에서 일을 하다보니, 모든 광고 그리고 마케팅은, 광고비 ROI , 관심이 있을 법한 고객을 찾는 것, 어떠한 경로로 우리의 서비스에 들어오는지 그리고 어떠한 funnel이 이루어 지고 있는지 등에 대한 끊임없는 질문하고 정확한 타겟이 어떻게 더 깊은 funnel로(방문-&amp;gt;결제) 이어질수 있을지에 대한 방법들로 계속되는 것을 느끼고 있다.&lt;/p&gt;

&lt;p&gt;최근 많은 사람들이 이러한 방법을 추구하다보니 간편하게 유저 트랙킹과 마케팅을 돕는 서비스 그리고 툴이 많아졌다. 대표적으로는 &lt;a href=&quot;https://marketingplatform.google.com/about/analytics/&quot;&gt;Google Analytics&lt;/a&gt;(GA), &lt;a href=&quot;https://www.facebook.com/business/learn/facebook-ads-pixel&quot;&gt;Facebook Pixel&lt;/a&gt;, 국내에서는 Kakao에서도 pixel을 제공하고 있다. 이 외에도 appsflyer, tune 등 고객 측정과 마케팅을 도와주는 곳들이 많다.&lt;/p&gt;

&lt;p&gt;개발자라면 위와 같은 서비스들의 dev doc만 보더라도 구현 방법 그리고 어떠한 원리로 동작하는지 금방 이해할 수 있을 것이다. 꼭 회사, 내가 하고 있는 일에 바로 적용하지 못하더라도, 토이 프로젝트라던가 개인 블로그에 들어오는 사람들이 어떠한 패턴으로 들어오는지 그리고 어떻게 홍보해야할지 고민해보는걸로 시작해보면 좋을 것 같다 :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/growthhacking.JPG&quot;&gt;&lt;img src=&quot;/images/growthhacking.JPG&quot; alt=&quot;growthhacking&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Surge - Static web publishingfor Front-End Developers</title>
   <link href="https://jiyeonseo.github.io/2018/08/09/surge/"/>
   <updated>2018-08-09T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/08/09/surge</id>
   <content type="html">&lt;p&gt;업무를 하다보면 혹은 개발하다보면 가볍게 정적 웹페이지 하나를 만들어야 할 때가 종종 있다. 그때마다 자주 사용하던건 github page 였는데, 우선 무료인데다가 repo하나만 만들면 뚝딱이기 때문에 자주 사용했었다.&lt;/p&gt;

&lt;p&gt;하지만, 역시나 귀찮은것은 ….&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;repo를 만들어야 하고&lt;/li&gt;
  &lt;li&gt;github page를 사용하겠다고 setting 에서 기능을 켜 주어야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;만사가 귀찮은 개발자들에게는 꽤나 번거러운 일이다.&lt;/p&gt;

&lt;p&gt;가볍게 한페이지를 만들어야 할 때, terminal을 벗어나고 싶지 않을 때 사용할 만 한 서비스가 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/surge.png&quot;&gt;&lt;img src=&quot;/images/surge.png&quot; alt=&quot;surge&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;surge&quot;&gt;Surge&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://surge.sh/&quot;&gt;https://surge.sh/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Static web publishing for Front-End Developers&lt;/li&gt;
  &lt;li&gt;정적 웹페이지를 퍼블리싱해주는 서비스다. 끝.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;장점&quot;&gt;장점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;무료 / 무제한 퍼블리싱 / 커스텀 도메인 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내가-한-환경&quot;&gt;내가 한 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Mac OSX Sierra&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; surge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;사용방법&quot;&gt;사용방법&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; 작성 후&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ surge 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;처음 퍼블리싱인 경우 가입해야하는데, email과 pw를 지정해주면 된다.&lt;/li&gt;
  &lt;li&gt;도메인은 자동으로 생성이 되어있는데 수정 가능하다.&lt;/li&gt;
  &lt;li&gt;http 로 지원된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;같은-도메인으로-content-update-할-경우&quot;&gt;같은 도메인으로 content update 할 경우&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; 파일에 도메인을 넣어두면 바로 해당 도메인을 업데이트 시켜준다.&lt;/p&gt;

&lt;script src=&quot;https://asciinema.org/a/aYoyFeN7PsTlOY7dpR2Ps0yYP.js&quot; id=&quot;asciicast-aYoyFeN7PsTlOY7dpR2Ps0yYP&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;example : &lt;a href=&quot;http://hello-cheese.surge.sh/&quot;&gt;http://hello-cheese.surge.sh/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pricing&quot;&gt;Pricing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 단위로 월마다 $13. &lt;a href=&quot;https://surge.sh/pricing&quot;&gt;https://surge.sh/pricing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;부가 제공 서비스는
    &lt;ul&gt;
      &lt;li&gt;커스텀 SSL 지원&lt;/li&gt;
      &lt;li&gt;Https 지원&lt;/li&gt;
      &lt;li&gt;Cross-Origin Resource sharing&lt;/li&gt;
      &lt;li&gt;redirect 지원&lt;/li&gt;
      &lt;li&gt;password protection&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>asciinema - Record and share your terminal sessions</title>
   <link href="https://jiyeonseo.github.io/2018/07/23/asciinema/"/>
   <updated>2018-07-23T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/07/23/asciinema</id>
   <content type="html">&lt;p&gt;Terminal 작업을 공유해야 할 상황에서 크게 두가지를 생각해 볼 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;1-스크린캐스트&quot;&gt;1. 스크린캐스트&lt;/h3&gt;
&lt;p&gt;맥 환경에서는 기본앱인 QuickTime으로 쉽게 스크린캐스트가 가능하지만 보는사람 입장에서는 화면만 볼 수 있고 실습을 해보고자 할때는 다시 손으로 직접 쳐봐야 한다.&lt;/p&gt;

&lt;h3 id=&quot;2-코드-스닛팻-공유&quot;&gt;2. 코드 스닛팻 공유&lt;/h3&gt;

&lt;p&gt;실습하는 입장에서는 복붙이 쉽다. 하지만 작성자가 커맨드 결과에 대해서도 이야기 하고자 할때 결과를 다 복붙하는 것은 귀찮다.&lt;/p&gt;

&lt;p&gt;이 두가지를 해결 할 수 있는 신박한 솔루션을 찾았다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/asciinema.png&quot;&gt;&lt;img src=&quot;/images/asciinema.png&quot; alt=&quot;asciicast&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;asciinema&quot;&gt;asciinema&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://asciinema.org/&quot;&gt;https://asciinema.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Record and share your terminal sessions, the right way.&lt;/li&gt;
  &lt;li&gt;터미널 작업 녹화 + 웹 공유 를 지원하는 솔루션.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;장점&quot;&gt;장점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Simple recording : 커맨드 라인으로 바로 리코딩 시작.&lt;/li&gt;
  &lt;li&gt;Copy &amp;amp; paste : 플레이어 내 커맨드 라인 드래그/복붙 가능.&lt;/li&gt;
  &lt;li&gt;Embedding : embedded player 가능. &lt;a href=&quot;https://asciinema.org/docs/embedding&quot;&gt;링크&lt;/a&gt;를 통해 더 자세히 알아 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내가-한-환경&quot;&gt;내가 한 환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Mac OSX Sierra&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fails after brew installation: ModuleNotFoundError: No module named 'pkg_resources’&lt;/code&gt; 에러가 날 경우. 다음 이슈를 따르면 잘 해결된다. &lt;a href=&quot;https://github.com/asciinema/asciinema/issues/260&quot;&gt;asciinema/asciinema#260&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;사용방법&quot;&gt;사용방법&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ asciinema rec // 녹화시작 

asciinema: recording asciicast to /var/folders/n4/ws_1h7316zb6rjv6_2_tbnqhmll586/T/tmpckm85iin-ascii.cast
asciinema: press &amp;lt;ctrl-d&amp;gt; or type &quot;exit&quot; when you're done

$ exit // or &amp;lt;ctr-d&amp;gt; 녹화 끝  
asciinema: recording finished
asciinema: press &amp;lt;enter&amp;gt; to upload to asciinema.org, &amp;lt;ctrl-c&amp;gt; to save locally

https://asciinema.org/a/DwAilr7WusKCkBYumSqRB5O0v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;무료로 서버에 업로드까지 해준다!!!&lt;/p&gt;

&lt;script src=&quot;https://asciinema.org/a/qCFY7oOgOIb4K7MDHtx60yww2.js&quot; id=&quot;asciicast-qCFY7oOgOIb4K7MDHtx60yww2&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;p&gt;끝으로, &lt;a href=&quot;https://asciinema.org/explore/featured&quot;&gt;Featured asciinema&lt;/a&gt;에 가면 대단한 terminal덕 들의 작품을 볼 수 있다.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>setState() 함수 안에서  this.state 사용하지 않기</title>
   <link href="https://jiyeonseo.github.io/2018/07/16/no-state-in-setstate/"/>
   <updated>2018-07-16T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/07/16/no-state-in-setstate</id>
   <content type="html">&lt;p&gt;오늘 ESLint에서 걸린 warning.&lt;/p&gt;

&lt;p&gt;간단한 state 값 변경시 자주 사용하는 방법이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;button 
  onClick={()=&amp;gt;{
    this.setState({value : this.state.value + 1});
  }}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하지만,
만약 한 function에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.setState()&lt;/code&gt; 한번에 두개가 있고 this.state를 공유한다면,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function increment() {
  this.setState({value: this.state.value + 1});
  this.setState({value: this.state.value + 1});
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;value가 1일 경우,&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;setState({value: 1 + 1}) 
setState({value: 1 + 1})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위처럼 문제가 될 수도 있다.&lt;/p&gt;

&lt;p&gt;이를 피하기 위해서 이전 State 값을 인자로 받는 Callback으로 처리해주는 것이 좋다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;this.setState(prevState =&amp;gt; 
	({value: prevState.value + 1}));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 value가 1일 경우,&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;setState({value: 1 + 1})
setState({value: 2 + 1})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ref : &lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-access-state-in-setstate.md&quot;&gt;https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-access-state-in-setstate.md&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] 시지프스를 다시 생각하다 : 어느 개발자의 직장 생활에 대한 보고서</title>
   <link href="https://jiyeonseo.github.io/2018/05/20/rethink-Sisyphos/"/>
   <updated>2018-05-20T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/05/20/rethink-Sisyphos</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=KOR9788992939638&quot;&gt;‘시지프스를 다시 생각하다 : 어느 개발자의 직장 생활에 대한 보고서’&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이 책은 내가 사회 초년생 때, 단순히 “좋은 개발자가 되고 싶다”라는 생각으로 서점에 가서 “개발자” 혹은 “컴퓨터 공학”에 관련된 책을 사 들일 때 샀던 책 중 한 권이다. 물론 읽지도 못할 정도로 많이 사서 책장 속에 다른 책들과 남겨져 있었다. 인문학이면 인문학, 기술이면 기술 책, 소설이면 소설을 읽어왔지만 뭐랄까 부제목 때문일까, 어중간한 성격의 책 같아 항상 있는 것은 알았으나 꺼내보지 않고 있었다. 주말에 뭘 읽을까 하고 책장을 보던 중 “직장 생활에 대한 보고서”라는 부제가 눈에 들어왔다. 최근 들어 이직을 하게 되면서 “직장”과 “일”에 대해 많이 생각하게 되었다. 아무래도 “최적화되었다” 할 만큼 너무나도 익숙해져 버린 전 회사를 떠나 어찌 되었든 아직 맞지 않은 옷을 입은 느낌의 새직장의 환경은 크고 작은 부분에서 날 힘들게 한다. 좋고 나쁜 것을 떠나 어쨌든 적응 기간이다.&lt;/p&gt;

&lt;p&gt;아마 이 책을 샀을 당시, 즉 내가 사회 초년생일 때 읽었다면 크게 와 닿지 않았을 것 같다. 경험도 부족하고 개발자가 뭔지도 잘 몰랐고. “개발자”의 이야기지만 어쨌든 직장인 에세이 느낌의 책이다. 하긴, 더 나에게 크게 다가왔던 건 진정한 “소프트웨어 개발자”가 되기 원하는 “곧은 나무” 스타일의 저자가 나와 닮았다는 생각이 계속 들었기 때문일 거다. 또, 개발에 대한 열정과 일중독 이 사이에서 내 욕심을 채우면서도 건강한 삶을 살고 싶은 내 고민과 너무 잘 맞아떨어져 정말 순식간에 읽어 내려갔다.&lt;/p&gt;

&lt;p&gt;물론 모든 상황이 저자와 같은 것은 아니다. 사실 내 상황은 귀여울 정도의 불평들 뿐일 거다. 하지만 누구나 그러하듯 자기 자신의 고민이 가장 심각하고 내 문제가 가장 고통스럽게 느껴지는 법. 여러 역경과 상황을 지나 자신이 배운 점을 담담하게 이야기하며 끝나는 책을 보며, 지금 내가 하고 있는 일에서 그리고 겪는 어려움에서 배울 것을 배우며 차근차근 앞으로 나아가야겠다는 다짐을 다시 할 수 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;회사 생활을 하다 보면 이집트 여행의 꿈을 실현한 직원처럼 회사 안에서 자신이 원하는 걸 얻는 사람들이 적지 않다. 회사 돈을 회사 규정을 어겨가며 자신의 쌈짓돈으로 사용하는 사람들을 말하는 게 아니다. 자신이 하고 싶은 걸 하면서 회사에 가치를 제공해 주는 사람들이 바로 회사를 놀이터로 사용하는 이들이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;: 개발을 하는 게 즐거운 사람에게 테크 회사란 놀이터 같은 존재. 즐겁게 개발할 수 있는 환경이 함께 따라주어야겠지만.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그리고 나보다 일을 더 잘하는 동료가 있을 때 그 동료를 보면서 저 동료보다 조금 더 잘하고 싶은 생각이 들었던 적이 있었다. 물론 동료 실력이 감히 넘볼 수 없는 사차원 벽 너머에 있다면 경쟁 자체를 피하게 되지만 조금만 노력하면 그 동료보다 조금 더 잘할 수 있겠다는 생각이 들 때가 있다. 그럴 땐 확실히 그 동료와 경쟁하면서 성장하는 기분이 들었다. 말로 표현하지는 않았지만 내가 애살을 갖도록 자극한, 참 고마운 동료들이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;: 요즘은 페이스북, 트위터를 통해 이러한 (일방적으로) 동료를 찾을 수 있어서 참 좋다. 끊임없이 공부하고 노력하는 사람들을 보며 나 자신을 돌아보곤 한다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction to Kubernetes - 2</title>
   <link href="https://jiyeonseo.github.io/2018/05/16/Introduction-to-Kubernetes-2/"/>
   <updated>2018-05-16T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/05/16/Introduction-to-Kubernetes-2</id>
   <content type="html">&lt;p&gt;refer to edX course &lt;a href=&quot;https://courses.edx.org/courses/course-v1:LinuxFoundationX+LFS158x+1T2018/&quot;&gt;“Introduction to Kubernetes”&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;kubernetes-configuration&quot;&gt;Kubernetes Configuration&lt;/h1&gt;
&lt;p&gt;4가지 주요 설치 방법&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;All-in-One Single-Node Installation
    &lt;ul&gt;
      &lt;li&gt;하나에 다.&lt;/li&gt;
      &lt;li&gt;마스터/워커 컴포넌트를 하나의 노드&lt;/li&gt;
      &lt;li&gt;처음 배울때, 개발, 테스트 시에 좋음. 하지만 production 에서는 사용하지 말아야함.&lt;/li&gt;
      &lt;li&gt;ex) Minikube&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Single-Node etcd, Single-Master, and Multi-Worker Installation
    &lt;ul&gt;
      &lt;li&gt;하나의 마스터 노드/하나의 etcd instance&lt;/li&gt;
      &lt;li&gt;여러 워커 노드가 마스터 노드에 연결&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Single-Node etcd, Multi-Master, and Multi-Worker Installation
    &lt;ul&gt;
      &lt;li&gt;여러 마스터 노드/HA mode/하나의 etcd instance&lt;/li&gt;
      &lt;li&gt;여러 워커 노드가 마스터 노드에 연결&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Multi-Node etcd, Multi-Master, and Multi-Worker Installation
    &lt;ul&gt;
      &lt;li&gt;etcd가 clustered mode에서 설정, Kubernetes cluster 외부에 있으며 노드들과 연결됨.&lt;/li&gt;
      &lt;li&gt;마스터 노드는 HA mode로 설정&lt;/li&gt;
      &lt;li&gt;여러 워커 노드와 연결&lt;/li&gt;
      &lt;li&gt;production에 가장 추천하는 방법.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;choosing-the-right-solution&quot;&gt;Choosing the right solution&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/docs/setup/pick-right-solution/&quot;&gt;https://kubernetes.io/docs/setup/pick-right-solution/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;localhost&quot;&gt;Localhost&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/getting-started-guides/minikube/&quot;&gt;Minikube&lt;/a&gt; : all-in-one 쿠버네티스 셋업시 추천한다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/getting-started-guides/ubuntu/local/&quot;&gt;Ubuntu on LXD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;minikube&quot;&gt;Minikube&lt;/h1&gt;

&lt;h2 id=&quot;requirements&quot;&gt;requirements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;kubectl : binaryused  to access any Kubernetes cluster.&lt;/li&gt;
  &lt;li&gt;hypervisors
    &lt;ul&gt;
      &lt;li&gt;On Linux : Virtual Box or KVM&lt;/li&gt;
      &lt;li&gt;On MacOS : Hyperkit driver, xhyve driver, VirtualBox, or VMware Fusion&lt;/li&gt;
      &lt;li&gt;On Window : VirtualBox or Hyper-V&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Mac OS에 대해서만 정리하겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Install Minikube : 가장 최신버전은 &lt;a href=&quot;https://github.com/kubernetes/minikube/releases&quot;&gt;Minikube release page&lt;/a&gt; 에서 확인.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.26.1/minikube-darwin-amd64 &amp;amp;&amp;amp; chmod +x minikube &amp;amp;&amp;amp; sudo mv minikube /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Start
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ minikube start 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;check the status
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ minikube status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;stop Minikube
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ minikube stop 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;access-to-minikube&quot;&gt;Access to Minikube&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;CLI
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/reference/generated/kubectl/kubectl/&quot;&gt;kubectl&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;쿠버네티스 클러스터 리소스와 어플리케이션을 운영&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GUI
    &lt;ul&gt;
      &lt;li&gt;쿠버네티스 대시보드&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Introduction to Kubernetes - 1</title>
   <link href="https://jiyeonseo.github.io/2018/05/11/Introduction-to-Kubernetes-1/"/>
   <updated>2018-05-11T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2018/05/11/Introduction-to-Kubernetes-1</id>
   <content type="html">&lt;p&gt;refer to edX course &lt;a href=&quot;https://courses.edx.org/courses/course-v1:LinuxFoundationX+LFS158x+1T2018/&quot;&gt;“Introduction to Kubernetes”&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Container Orchestrator 중 하나인 쿠버네티스. 
Container는 무엇이며, Container Orchestration은 왜 필요한지
그리고 쿠버네티스의 특징은 무엇이 있는지 공부하며 정리 하였습니다.&lt;/p&gt;

&lt;h1 id=&quot;containers&quot;&gt;Containers?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;an application-centric way to deliver high-performing, scalable applications on the infrastructure of your choice&lt;/li&gt;
  &lt;li&gt;container image : bundle the application along with its runtime and dependencies.&lt;/li&gt;
  &lt;li&gt;이 이미지를 가지고 컨테이너 환경을 독립적으로 실행 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;container-orchestration&quot;&gt;Container Orchestration?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;QA 단계에서는 하나의 호스트와 하나의 테스트 어플리케이션만으로도 테스트가 가능하다&lt;/li&gt;
  &lt;li&gt;하지만 실제 production 모드에서는
    &lt;ul&gt;
      &lt;li&gt;Fault-tolerant&lt;/li&gt;
      &lt;li&gt;확장 가능해야하며&lt;/li&gt;
      &lt;li&gt;리소스를 효율적으로 사용해야하며&lt;/li&gt;
      &lt;li&gt;각각의 어플리케이션들을 찾고 서로 커뮤니케이션 할 수 있어야 하며&lt;/li&gt;
      &lt;li&gt;외부 세계와도 연결가능하며&lt;/li&gt;
      &lt;li&gt;다운타임 없이 업데이트 혹은 롤백이 되어야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Container orchestrator : 위의 조건들을 모두 만족할수 있도록 도와주며, 클러스터로 모든 호스트들을 묶어주는 툴.&lt;/li&gt;
  &lt;li&gt;ex) Docker Swarm, Kubernetes, Mesos Marathon, Amazon ECS, Hashicorp Nomad.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;why-use-container-orchestrators&quot;&gt;Why use Container Orchestrators?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;여러 호스트들을 묶고 클러스터로 만들어준다.&lt;/li&gt;
  &lt;li&gt;다른 호스트들에서 컨테이너들을 스케쥴링&lt;/li&gt;
  &lt;li&gt;같은 클러스터 내 다른 호스트에서 돌고있는 컨테이너들끼리 통신할수 있게 해준다.&lt;/li&gt;
  &lt;li&gt;컨테이너와 스토리지를 묶어준다.&lt;/li&gt;
  &lt;li&gt;서비스와 같이 higher-level construct와 비슷한 타입의 컨테이너로 묶어준다.&lt;/li&gt;
  &lt;li&gt;계속해서 리소스 사용을 확인하며 필요한 경우 optimize&lt;/li&gt;
  &lt;li&gt;컨테이너 내 application 의 접근을 보장해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;where-to-deploy-container-orchestrators&quot;&gt;Where to deploy container orchestrators?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;대부분의 오케스트레이터들은 원하는 인프라스트럭쳐 위에서 배포 가능하다&lt;/li&gt;
  &lt;li&gt;개인 로컬, AWS, OpenStack 도 가능하며&lt;/li&gt;
  &lt;li&gt;Google Could 내 Google Kubernetes Engine이나 Azure Container Service 의 경우원 클릭으로 설치 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;what-is-kubernetes&quot;&gt;What is Kubernetes?&lt;/h1&gt;

&lt;p&gt;“Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.”&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이름의 어원은 그리스어 κυβερνήτης:&lt;/li&gt;
  &lt;li&gt;조타수, 키잡이 라는 뜻.&lt;/li&gt;
  &lt;li&gt;즉, 컨테이너를 운반하는 매니저 라고 생각하면 된다.&lt;/li&gt;
  &lt;li&gt;k8s 이라고 쓰이기도 한다.&lt;/li&gt;
  &lt;li&gt;Google Borg system에서 시작되었으며, Go language로 쓰여졌다.&lt;/li&gt;
  &lt;li&gt;Apache License Version 2.0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 블로그는 2018년 2월, 1.9 stable version을 기준으로 하고 있습니다.&lt;/p&gt;

&lt;h1 id=&quot;kubernatetes-feature&quot;&gt;Kubernatetes Feature&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Automatic binpacking
    &lt;ul&gt;
      &lt;li&gt;쿠버네티스는 자동으로 리소스 사용량과 제약조건에 따라서 커네이너들을 스케쥴링 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Self-healing
    &lt;ul&gt;
      &lt;li&gt;만약 노드에서 실패가 일어나면 자동적으로 대체하고 재 스케쥴링을 한다.&lt;/li&gt;
      &lt;li&gt;만약 헬스체크에 응답이 제대로 오지않으면 컨테이너를 킬하고 재시작한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Horizontal scaling
    &lt;ul&gt;
      &lt;li&gt;CPU나 메모리와 같은 리소스 사용을 기반으로 자동적으로 확장 가능하다.&lt;/li&gt;
      &lt;li&gt;custom metrics에 따라 다이나믹하게 화장도 가능하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Service discovery and Load balancing
    &lt;ul&gt;
      &lt;li&gt;DNS를 이용하여 컨테이너 그룹을 세팅할수도 있다.&lt;/li&gt;
      &lt;li&gt;이 DNS를 Kunernetes service라고 부른다.&lt;/li&gt;
      &lt;li&gt;쿠버네티스는 이 service들을 자동으로 찾아내고 서비스 내 컨테이너들에게 request를 load-bancing 할수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Automated rollouts and rollbacks
    &lt;ul&gt;
      &lt;li&gt;다운타임 없이 설정값 혹은 새 버전으로 배포 혹은 롤백 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Secrets and configuration management
    &lt;ul&gt;
      &lt;li&gt;새로 이미지를 빌드하지않고도 secrets나 설정값을 변경할 수 있다.&lt;/li&gt;
      &lt;li&gt;secret 을 이용하면 감춰야 하는 정보들을 Github과 같은 stck configuration에 보이지 않고 설정 할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Storage orchestration
    &lt;ul&gt;
      &lt;li&gt;With Kubernetes and its plugins, we can automatically mount local, external, and storage solutions to the containers in a seamless manner, based on software-defined storage (SDS).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Batch execution
    &lt;ul&gt;
      &lt;li&gt;배치성 잡 실행 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;case-studies&quot;&gt;Case studies&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Pearson, eBay, Huawei, …&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kubernetes.io/case-studies/&quot;&gt;https://kubernetes.io/case-studies/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;kubernetes-architecture&quot;&gt;Kubernetes Architecture&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/kubernetes/Kubernetes_Architecture1.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;main-components&quot;&gt;main components&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;master nodes&lt;/li&gt;
  &lt;li&gt;worker nodes&lt;/li&gt;
  &lt;li&gt;distributed key-value store : etcd&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;master-node&quot;&gt;master node&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/kubernetes/Master_Node1.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;쿠버네티스 클러스터 관리&lt;/li&gt;
  &lt;li&gt;모든 administrative task의 시작점&lt;/li&gt;
  &lt;li&gt;CLI, GUI(대시보드) 혹은 API를 통해 커뮤니케이션 할 수 있다.&lt;/li&gt;
  &lt;li&gt;fault tolerance를 위해서 한개 이상의 마스터 노드를 한 클러스터 안에 둘 수 있다.
    &lt;ul&gt;
      &lt;li&gt;한개 이상의 마스터 노드를 가진다면 HA(high availability) 모드라 하며&lt;/li&gt;
      &lt;li&gt;하나의 노드가 leader 모든 동작들을 관장하고 나머지는 follower 임.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클러스터 상태값(state)을 관리하기 위해 etcd(https://coreos.com/etcd/) 를 사용.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;마스터 노드 아래에는 다음과 같은 컴포넌트들이 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API server
    &lt;ul&gt;
      &lt;li&gt;모든 administrative task들은 마스터 노드 내 API server를 통해 들어온다.&lt;/li&gt;
      &lt;li&gt;외부에서 REST로 명령어를 보내면 유효성 및 요청 작업을 처리&lt;/li&gt;
      &lt;li&gt;작업 처리 후 결과를 distributed key-value store에 저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scheduler
    &lt;ul&gt;
      &lt;li&gt;다른 worker node 에서 일할 work들을 스케쥴링&lt;/li&gt;
      &lt;li&gt;각각 노드들의 리소스 사용량을 알고 있다.&lt;/li&gt;
      &lt;li&gt;그 밖에도 유저 혹은 작업자의 constraints 도 알고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Controller manager
    &lt;ul&gt;
      &lt;li&gt;쿠버네티스 클러스터의 상태를 조절하는 control loops들을 관리.&lt;/li&gt;
      &lt;li&gt;각각의 control loop들은 알맞는 상태(desired state)값을 알고 현재의 상태값을 API server를 통해 계속 모니터링 한다.&lt;/li&gt;
      &lt;li&gt;만약 올바른 상태값과 현재 상태값이 다르면 알맞는 단계를 거쳐 같도록 만든다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;etcd
    &lt;ul&gt;
      &lt;li&gt;distributed key-value store&lt;/li&gt;
      &lt;li&gt;마스터 노드의 일부.&lt;/li&gt;
      &lt;li&gt;외부에 의해 설정될수도 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;worker-node&quot;&gt;Worker node&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/kubernetes/Worker_Node.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pod을 통해 어플리케이션이 run되는 머신(VM, physical sever…)&lt;/li&gt;
  &lt;li&gt;master node에 의해 컨트롤링 된다.&lt;/li&gt;
  &lt;li&gt;Pod : worker node에서 스케쥴링되며 run 하고 연결하기 위해 꼭 필요한 tool이다.  Scheduling unit in Kubernetes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;워커 노드 아래에는 다음과 같은 컴포넌트들이 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Container runtime
    &lt;ul&gt;
      &lt;li&gt;컨테이너의 lifecyle을 실행시키고 관리하기 위해 사용&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://containerd.io/&quot;&gt;containerd&lt;/a&gt;, &lt;a href=&quot;https://coreos.com/rkt/&quot;&gt;rkt&lt;/a&gt;, &lt;a href=&quot;https://linuxcontainers.org/lxd/&quot;&gt;lxd&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;간혹 Docker를 container runtime이라고도 하는데 정확히 따지자면 도커는 continer untime으로 containerd를 사용하는 플랫폼이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;kubelet
    &lt;ul&gt;
      &lt;li&gt;각 워커 노드들과 마스터 노드가 커뮤니케이션 할수 있도록 하는 agent.&lt;/li&gt;
      &lt;li&gt;Pod으로 부터 여러가지 정의를 받고 pod과 연결된 컨테이너들을 실행시킨다.&lt;/li&gt;
      &lt;li&gt;Kuberlet은 Container runtime과 Container Runtime Interface(CRI를 통해 연결)
&lt;img src=&quot;/images/kubernetes/CRI.png&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;kubelet &amp;lt;-&amp;gt; CRI shim : to perform container and image operations.
        &lt;ul&gt;
          &lt;li&gt;CRI는 두개의 서비스를 구현 : &lt;code class=&quot;highlighter-rouge&quot;&gt;ImageService&lt;/code&gt; 와 &lt;code class=&quot;highlighter-rouge&quot;&gt;RuntimeService&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ImageService&lt;/code&gt; : Image 와 관련된 동작들을 책임&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RuntimeService&lt;/code&gt; : 모든 Pod과 container와 관련된 동작들을 책임.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CRI shims
    &lt;ul&gt;
      &lt;li&gt;ex) dockershims 
&lt;img src=&quot;/images/kubernetes/dockershim.png&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;ex) cri-containerd   &lt;br /&gt;
&lt;img src=&quot;/images/kubernetes/cri-containerd.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;kube-proxy
    &lt;ul&gt;
      &lt;li&gt;Pods가 어플리케이션과 직접 커넥션 맺는것보다 logical constuct인 &lt;code class=&quot;highlighter-rouge&quot;&gt;Service&lt;/code&gt; 를 endpoint로 연결한다. 이 Service 그룹은 pod과 연결되어 로드발랜싱을 해준다.&lt;/li&gt;
      &lt;li&gt;kube-proxy 는 각각의 워커 노드의 실행해주고, 각 Service endpoint를 위한 API server로 들어오는 network proxy.&lt;/li&gt;
      &lt;li&gt;각각의 Service endpoint마다 kube-proxy가 설정되어 route된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;### etcd를 통한 상태 관리&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;etcd는 &lt;a href=&quot;https://web.stanford.edu/~ouster/cgi-bin/papers/raft-atc14&quot;&gt;Raft Consensus Algorithm&lt;/a&gt; 을 기반으로한 key-value sotre이다.&lt;/li&gt;
  &lt;li&gt;항상 그룹 내 하나는 master이며 나머지는 follower이다.&lt;/li&gt;
  &lt;li&gt;Go language&lt;/li&gt;
  &lt;li&gt;Kubernaetes 에서는 cluster state 저장 뿐만 아니라 configuration detail도 저장한다. ex) subnets, ConfigMaps, Secrets&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;네트워크-setup&quot;&gt;네트워크 setup&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;각 Pod는 반드시 유니크한 IP를 할당해야한다
    &lt;ul&gt;
      &lt;li&gt;container networking을 위해 두가지 선택지가 있다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Container Network Model(CNM)&lt;/strong&gt; proposed by Docker&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Container Network Interface(CNI)&lt;/strong&gt; proposed by CoreOS « Kubernetes uses this&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pod 내 Container들끼리 커뮤니케이션 가능하다
    &lt;ul&gt;
      &lt;li&gt;Linux에서는 모든 엔티티끼리 &lt;strong&gt;network namespace&lt;/strong&gt;를 사용하는데, Pod 내 컨테이너들끼리 이 network namespace를 공유하여 서로 커뮤니케이션을 할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pod 는 클러스터내 다른 Pod과 커뮤니케이션 가능하다
    &lt;ul&gt;
      &lt;li&gt;Routable Pods and nodes, using the underlying physical infrastructure, like Google Kubernetes Engine&lt;/li&gt;
      &lt;li&gt;Using Software Defined Networking, like Flannel, Weave, Calico, etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;설정에 따라 pod 내 배포된 application는 외부와도 연결 가능하다.
    &lt;ul&gt;
      &lt;li&gt;kube-proxy 를 이용해서.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Gitbook 시작해보자</title>
   <link href="https://jiyeonseo.github.io/2017/06/29/move-to-gitbook/"/>
   <updated>2017-06-29T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2017/06/29/move-to-gitbook</id>
   <content type="html">&lt;p&gt;요즘 개발자들에게 블로그는 기본이라고들 한다.
하지만 블로그는 확실히 귀찮다.&lt;/p&gt;

&lt;p&gt;편하게 쓰려고 github.io로 이사 왔는데 여전히 불편하다. github을 사용한다면 어찌되었던 Git의 flow를 따르게 되고 나는 바로 글을 올리고 싶지만 commit &amp;amp; push 역시 귀찮다.&lt;/p&gt;

&lt;p&gt;그리고 사실… 지금의 theme도 고르고 또 고른거지만 100% 맘에 들지 않고 또 내 입맛에 맞게 고치려고 하면 끝도 없고 나의 센스는 더더욱 없다..&lt;/p&gt;

&lt;p&gt;고쳐봤자 나아지지 않더라..
그리고 지금 테마의 가장 큰 문제는 syntax hightlight가 너무너무너무 맘에 안든다 .. ㅠㅠ&lt;/p&gt;

&lt;p&gt;하이라이트가 괜찮은 테마는 그냥 전체적인 페이지가 맘에 안들고
맘에 드는걸 찾으려고 하다보면 오히려 중요한 컨텐츠는 뒷전으로 밀리고 예쁘게 블로그 꾸미기만 2박 3일은 꼬박 걸린다. 그리고 다 적용후에 맘에 안들어서 ㅋㅋ 다른 테마 찾는데 또 2박 3일.&lt;/p&gt;

&lt;p&gt;그래서 간단하게 github의 마크다운(md)을 이용할까 했는데 깃헙의 가장 큰 단점 ㅠ.ㅠ
폴더 구조를 한번에 보기 어렵다. 물론 크롬 extension을 설치하면 되지만… 나 뿐만 아니라 다른 사람에게도 좋은 정보를 전달하기 위해 사용하는 것인데 누구에게나 똑같이 편한 화면이였으면 했다.&lt;/p&gt;

&lt;p&gt;그리하여 고른것이 &lt;a href=&quot;https://www.gitbook.com&quot;&gt;gitbook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;gitbook은 많은 오픈소스들의  API Documentaion 용도로 많이 쓰이고 있다.
실제로 생성시에도 API Document 특화 되어있는 template도 있다.&lt;/p&gt;

&lt;p&gt;내가 생각하는 gitbook의 장점은&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;좌측에 목록이 깔끔하게 나오며 edit 시에 드래그앤드랍을 이용한 순서변경/하이라키 구성이 편하다.&lt;/li&gt;
  &lt;li&gt;syntax hightlight가 깔끔하다 (아직 언어가 많지는 않다. 그래도 대충 잘 됨)&lt;/li&gt;
  &lt;li&gt;저장 후 publish가 클릭 한번에 된다&lt;/li&gt;
  &lt;li&gt;traffic 이라는 메뉴에 들어가게되면 간단한 통계가 나온다 (GA에 비하면 많이 약하지만 이정도면 만족)&lt;/li&gt;
  &lt;li&gt;Discussion을 통해 댓글 이용가능. post마다 안되는건 조금 아쉽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하지만 확실히 긴 글을 읽기에는 그닥 좋은 것 같지도 않다.
그리하여 코드/짧은 개념 정리 레벨로 조금씩 채워 나가는 중.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Gitbook.png&quot; alt=&quot;깃헙페이지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;내 Gitbook : &lt;a href=&quot;https://www.gitbook.com/book/jiyeonseo/daily/&quot;&gt;https://www.gitbook.com/book/jiyeonseo/daily/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책]코딩을 지탱하는 기술</title>
   <link href="https://jiyeonseo.github.io/2017/06/21/skill-for-coding/"/>
   <updated>2017-06-21T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2017/06/21/skill-for-coding</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=BOK00021363945IN&quot;&gt;(더 나은 코딩을 위한) 코딩을 지탱하는 기술원리로 깨우치는 프로그래밍 기법&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;최근 &lt;a href=&quot;http://m.zdnet.co.kr/column_view.asp?article_id=20170616090644#imadnews&quot;&gt;임작가님의 글&lt;/a&gt;을 보고 과연 어떻게 공부를 하는것이 좋을까? 어떻게 해야 기본 실력을 기를 수 있을까? 를 고민하다가 찾게된 책이다.&lt;/p&gt;

&lt;p&gt;책이 작고 얇기도 하고, 문체가 정말 친절하고 재밌어서 술술 읽힌다. 하지만 결코 가벼운 내용이 아니다.
한 줄,한 줄 놓치기 아까울 정도로 깊이 있는 이야기와 설명으로 꽉 차있고, 평소에 깊이 생각해 보지 못했던 부분에 대해 끊임없이 질문을 던지고 있다.&lt;/p&gt;

&lt;p&gt;예를 들어, “if는 왜 있는 걸까?”&lt;/p&gt;

&lt;p&gt;너무 당연해서 고민 없이 썼었던 것들에 대해 물음을 이어나간다.&lt;/p&gt;

&lt;p&gt;아마 나를 비롯한 많은 개발자들이 현업에서는 주로 쓰는 기술, 언어가 정해져있고 또 새로나오는, 새로 뜨는 기술과 언어를 숨가쁘게 따라가고 있을 것이다.
그리고 “개발자는 평생 공부해야해. 너무 바빠.”라고 하며 들어오지 않는 문법, 개념들과 싸우고 있을 것이다.&lt;/p&gt;

&lt;p&gt;언어들을 보면 대부분의 언어가 가지는 공통적인 철학, 개념들이 있는데 이 책에서는 그 개념들이 어떠한 역사적인 원인에 따라 생성되었는지 그리고 그러한 개념을 이어나가는 언어들은 어떻게 해석하고 있는지 재미있게 풀어나간다.&lt;/p&gt;

&lt;p&gt;다 읽고나니 뭐랄까 이제 새로운 언어, 새로운 기술을 배울 때의 마음가짐을 배운 것 같아서 자신감이 솟는다.&lt;/p&gt;

&lt;p&gt;“어떤 언어를 공부해야 하나요?”, “어떤 기술들을 공부해야 하나요?”, “어떤 기술이 앞으로 뜰까요?”, “어떻게 해야 프로그래밍을 잘 할 수 있나요?” 라는 질문을 해본적 있는 사람이라면 꼭 한번 이 책을 읽어보길 바란다.&lt;/p&gt;

&lt;p&gt;너무 당연하게 받아들이고 있던 Class에 대해 설명하는 부분이 너무 크게 와닿아 한 구절 인용하며 마무리 하겠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Java는 프로그램을 만들 때 우선 클래스를 만드는 언어다. Java로 프로그래밍을 가르치기 위해선 우선 상세한 설명 없이 바로 클래스를 사용해야 한다는 사정도 잘 알고 있다. 하지만 클래스는 수십년 전에 누군가가 ‘이런 구조가 있으면 편리하겠다.’고 만들어본 것에 불과하다. 그런데 ‘클래스란 것이 있어. 주문을 외운다고 생각하고 사용해’ 라고 설명해버리면 왜 클래스가 필요한지는 영영 알 수 없다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;클래스란 ‘그렇게 쓰는 게 편하다’는 이유로 만들어진 규칙에 불과하다. 물리 법칙이나 우주의 진리가 아닌, 사람이 정한 규칙이다. 그렇다면 왜 그런 약속을 정했는지, 언어 설계자의 의도를 파악하는 것이 빠르게 이해 할 수 있는 지름길일 것이다.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Github Pages 활용</title>
   <link href="https://jiyeonseo.github.io/2017/05/22/github-pages-practice/"/>
   <updated>2017-05-22T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2017/05/22/github-pages-practice</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/githubpages.png&quot; alt=&quot;깃헙페이지&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Github에서는 소셜 코딩뿐만 아니라 &lt;a href=&quot;https://pages.github.com/&quot;&gt;Pages&lt;/a&gt; 기능도 제공하고 있다.&lt;/p&gt;

&lt;p&gt;가장 많이 사용하는 방법은 이 블로그처럼 블로그로 사용하는 방법이다.
블로그로 사용하기 위해서는 &lt;a href=&quot;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&quot;&gt;Jekyll&lt;/a&gt; 이나 &lt;a href=&quot;https://hexo.io/ko/&quot;&gt;Hexo&lt;/a&gt;를 이용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{username}.github.io&lt;/code&gt; 라는 리파지토리를 생성하면 같은 도메인명으로 바로 블로그를 이용할 수 있다.&lt;/p&gt;

&lt;p&gt;이와 마찬가지 방법으로 다른 repository 마다 Github Pages를 만들 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;자신이 페이지를 만들고자 하는 리파지토리에 들어가 “Settings” 탭을 들어간다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/githubpage-settings.png&quot; alt=&quot;깃헙 리포 세팅&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;가장 먼저 나오는 “Options” 탭에서 아래로 내려가다 보면&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“Github Pages”을 볼 수 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/githubpage-settings-pages.png&quot; alt=&quot;깃헙 페이지 이미지&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;방법-1-theme-chooser&quot;&gt;방법 1. Theme chooser&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;깃헙에서 제공하는 지킬 테마를 그대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;README.MD&lt;/code&gt; 보여준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;방법-2-source&quot;&gt;방법 2. Source&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; 브랜치의 소스를 pages로 제공한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; 브랜치에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;/docs&lt;/code&gt; 하위 폴더에 작성할 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 방법을 통해 간단하게 자신만의 페이지를 만들 수 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이렇게 Pages를 사용하게 되면 github에 있는 raw 소스를 cdn 처럼 사용할 수도 있다.&lt;/p&gt;

&lt;p&gt;예를 들어, Github에 올라간 CSS 파일을 raw를 이용하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;link href=&quot; &quot;&amp;gt;&lt;/code&gt; 적용하게 되면&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Resource interpreted as Stylesheet but transferred with MIME type text/plain: &quot;https://raw.githubusercontent.com/twbs/bootstrap/v4-dev/dist/css/bootstrap.css&quot;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Console에 위와 같은 경고가 뜨며 사용할 수가 없다.&lt;/p&gt;

&lt;p&gt;이를 해결하기 위해서는&lt;/p&gt;

&lt;h3 id=&quot;1-rawgit-cdn-서비스를-이용하거나&quot;&gt;1. &lt;a href=&quot;https://rawgit.com/&quot;&gt;RawGit&lt;/a&gt; cdn 서비스를 이용하거나&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;link href=&quot;https://cdn.rawgit.com/twbs/bootstrap/v4-dev/dist/css/bootstrap.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-위-방법-2-source-로-github-page를-만들어-파일-path를-그대로-사용하면-된다&quot;&gt;2. 위 &lt;em&gt;방법 2. Source&lt;/em&gt; 로 Github Page를 만들어 파일 path를 그대로 사용하면 된다.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;http://{username}.github.io/{repository}/{file}&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&amp;lt;link href=&quot;https://jiyeonseo.github.io/bootstrap/dist/css/bootstrap.css&quot; rel=&quot;stylesheet&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Typescript 시작</title>
   <link href="https://jiyeonseo.github.io/2017/05/14/typescript-introduction/"/>
   <updated>2017-05-14T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2017/05/14/typescript-introduction</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://egghead.io&quot;&gt;Egghead&lt;/a&gt;의 &lt;a href=&quot;https://egghead.io/courses/use-types-effectively-in-typescript&quot;&gt;Use Types Effectively in TypeScript&lt;/a&gt;를 공부하며 정리한 내용입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;typescript&quot;&gt;Typescript&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;TypeScript is JavaScript with static typing.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;환경-세팅&quot;&gt;환경 세팅&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g typescript // npm으로 설치 
$ tsc -v // 버전
$ tsc main.ts // main.ts &amp;gt;&amp;gt; main.js 변환
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;playground&quot;&gt;playground&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/play/&quot;&gt;https://www.typescriptlang.org/play/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;union-types&quot;&gt;Union Types&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;다양한 타입을 받을 수 있도록 해줄 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returnSomthing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Union type을 변수에 선언해 줄 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returnSomthing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;내부에서 타입 검사를 해볼 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returnSomthing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;boolean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;someThing = &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;joinedThings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;someThing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;joinedThings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;joinedThings = &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;joinedThings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;returnSomthing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// someThing = 123&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;returnSomthing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// joinedThings = abc&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;type 에는 object가 아닌 것도 들어갈 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stuff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gimmeStuff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stuff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stuff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;// error TS2339: Property 'name' does not exist on type 'string | { name: string; }'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// object와 not object가 함께 있으면 에러가 남.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;coolThings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gimmeCoolthings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;coolThings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;// error TS2339: Property 'name' does not exist on type '{ name: string; } | { id: number }'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// error TS2339: Property 'name' does not exist on type '{ name: string; } | { id: number }'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// error TS2339: Property 'id' does not exist on type '{ name: string; } | { id: number }'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// error TS2339: Property 'id' does not exist on type '{ name: string; } | { id: number }'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// not object끼리 있더라도 같은 parameter가 없으면 에러가 남&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stuffAndThings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;meh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;lame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gimmeStuffAndThings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stuffandThings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// It works! 같은 parameter가 있으면 된다.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;string-literal-type&quot;&gt;string literal type&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;아무거나 올 수 있다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;miles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MILES&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MILES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// literal type. type과 같은 값, null, undefined 만 가능.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;이걸 이용해서 parameter에 들어올 값들을 제한 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distanceMetric&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MILES&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;KILOMETERS&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;METERS&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;YARDS&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;FEET&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;INCHES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moveCharacter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;distanceMetric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`You moved &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// error TS2345: Argument of type '&quot;dragon&quot;' is not&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// assignable to parameter of type '&quot;MILES&quot; | &quot;KILOMETERS&quot; | ... '&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;interface&quot;&gt;interface&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;superHeroName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superVillain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;superHeroName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;같은 모양의 변수를 많이 만들어야 할 때 interface를 이용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// ? : optional&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// Types of property 'alias' are incompatable. Type 'boolean' is not assignable to type 'string'.&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;      
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superVillain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jack Napier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Object literal may only specify known&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Joker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// properties and 'secretIdentity' does not&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// exist in type 'ComicBookCharacter'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;함수에서 parameter에 interface로 받을 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getSecretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;character&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; has no secret identity`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;getSecretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;superHero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;interface 내에서 다른 interface를 사용도 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AttackFunction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// opponent와 attackWith를 parameter로 받는 function&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KrustyTheClown&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;inebriationLevel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AttackFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; attacked &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, who's health = &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superVillain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;scretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jack Napier&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Joker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;               
  &lt;span class=&quot;na&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;insanity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;175&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackFunc&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;interface를 extends 할 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OptionalAttributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;insanity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;dexterity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;healingFactor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OptionalAttributes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;class&quot;&gt;class&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;타입스크립트에서 class는 function 이다. function 은 object 이고 즉, property를 가질 수 있다.&lt;/li&gt;
  &lt;li&gt;class는 method도 가질 수 있다.&lt;/li&gt;
  &lt;li&gt;method에서는 function이라고 표현하지 않아도 된다.&lt;/li&gt;
  &lt;li&gt;method명(parameter){ }&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;attackFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; attacked &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; who's health = &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;클래스 내 property들은 기본 public. private으로 하면 class 밖에서는 .으로 접근할 수 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;attackFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;getSecretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'s secret identity is $(this.secretIdentity)`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;constructor arguments를 이용하면 property를 따로 정의할 필요가 없다.&lt;/li&gt;
  &lt;li&gt;이 경우 public, private 와 같은 access modifiers를 반드시 함께 써주어야 한다.&lt;/li&gt;
  &lt;li&gt;없으면 그저 constructor의 argument로만 간주된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;attackFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Opponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attackWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;getSecretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'s secret identity is $(this.secretIdentity)`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;class는 static property 역시 가지고 있다.&lt;/li&gt;
  &lt;li&gt;instance에서는 사용할 수 없다.&lt;/li&gt;
  &lt;li&gt;오직 class를 통해서만 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createTeam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;teamName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;teamName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;members&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instanceTeam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;instanceTeam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTeam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oddCouple, [storm, theBlob]); // error!!!!  

let team = ComicBookCharacter.createTeam(&quot;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oddCouple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;theBlob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;class역시 extends할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;traits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;empathy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;strong moral code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;getSecretId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// not working!!!  &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// extends 된 class 에서는 부모 class의 private property에 접근 할 수없다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// private은 자신이 속해있는 container에서만 접근 가능하다.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 이 경우, secretIdentity 를 protected로 변경해주면 된다.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperVillain&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;flaws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hubris&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;always explains evil plan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jubilee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Jubilee&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jubilation Lee&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scarletWitch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperVillain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Scarlet Witch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4444&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wanda Maximoff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;만약 자식 class에서 constructor를 만드려면 반드시 super(); 를 호출해 주어야 한다.&lt;/li&gt;
  &lt;li&gt;부모 class의 argument를 모두 받아야한다.&lt;/li&gt;
  &lt;li&gt;constructor 내부에서 꼭! 첫번째로 불려야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;health&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;strength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;secretIdentity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperVillain&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComicBookCharacter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;flaws&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hubris&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;always explains evil plan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'${this.alias} eats kittens!!!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;type-converting&quot;&gt;Type Converting&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;(something as Type)&lt;/li&gt;
  &lt;li&gt;
    &lt;Type&gt;something


&lt;/Type&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;powers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;savesTheDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BadGuy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;badDeeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;getRandomBadDeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;commitBadDeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveDayOrBadDeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BadGuy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// if (&amp;lt;SuperHero&amp;gt;something.powers) {} // angle bracket syntax&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;powers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;savesTheDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BadGuy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;commitBadDeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;saveDayOrBadDeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dazzler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Dazzler transduces sonic vibrations into light to save the day!!!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;saveDayOrBadDeed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;badGuy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// BadGuy farts on old folks&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;js로 바뀐걸 확인해보면 convert가 모두 사라진 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;generics&quot;&gt;Generics&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jeanGrey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jean Grey&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wolverine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wolverine&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jeanGrey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;powers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;telekinesis&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;esp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cool&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;adamantium claws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [ { name: 'Jean Grey' }, 'cool' ]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [ 'adamantium claws' ]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;위와같이 할 경우, array 내에 각각 다른 type들이 들어가게 됨.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Generics :  function 뒤에 &lt;T&gt; 를 써주고 parameter type에 (param : T) 와 같이 쓴다.&lt;/T&gt;&lt;/li&gt;
  &lt;li&gt;꼭 T 일 필요는 없고, cool, test 와 같이 다른 문자열을 쓸 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;something&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jeanGrey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jean Grey&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wolverine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Wolverine&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jeanGrey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;powers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;telekinesis&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;esp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;meh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// error!!!!!!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jeanGrey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// it works!!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;adamantium claws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;function 뒤에 &lt;T&gt; 를 위와 같이 생략해도 되지만 써주는게 IDE에서 작업할 때 더 좋다.&lt;/T&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;meh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// error!!!&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SuperHero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jeanGrey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;superHeroes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// it works!!  &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pushSomethingIntoCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;adamantium claws&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;interface-generic-constraints&quot;&gt;Interface generic constraints&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Taxes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crocContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mean&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;taxContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Taxes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2011&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RedCroc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BlueCroc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CrocContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;crocUnit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;blueCrocContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CrocContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BlueCroc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;crocUnit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;cool&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;class-generic-constraints&quot;&gt;Class generic constraints&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ClassyContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;classyCrocUnit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classyCrocContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ClassyContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// type argument 를 안알려줘도 됨.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;classyCrocContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classyCrocUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;classy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 하지만  Crocodile을 extends 한 interface들의 property를 사용할 수 없다.&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;classyCrocContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ClassyContainer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RedCroc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// T을 알려주면&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;classyCrocContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classyCrocUnit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;classy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// IDE에서자동완성도 됨.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;constructor를 사용한 경우&lt;/li&gt;
  &lt;li&gt;type argument를 생략하더라도 property에 값을 셋 할수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CCC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crocodile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{]&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cccUnit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ccc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CCC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BlueCroc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ultra classy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ccc2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CCC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;personality&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ultra classy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// it works!!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>github에서 travis-ci 연결하기 </title>
   <link href="https://jiyeonseo.github.io/2016/11/16/setting-travis-ci/"/>
   <updated>2016-11-16T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/11/16/setting-travis-ci</id>
   <content type="html">&lt;h2 id=&quot;ci&quot;&gt;CI&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;지속적 통합, continuous integration.&lt;/li&gt;
  &lt;li&gt;테스트, 빌드를 자동으로 도와주는 툴.&lt;/li&gt;
  &lt;li&gt;대표적으로 &lt;a href=&quot;https://jenkins.io/&quot;&gt;Jenkins&lt;/a&gt;, &lt;a href=&quot;https://www.go.cd/&quot;&gt;Go.cd&lt;/a&gt;, &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;가 있다.&lt;/li&gt;
  &lt;li&gt;빌드 실패, 혹은 테스트 실패를 로컬에서 미처 확인 못 한 경우, CI의 noti를 받을 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;연동-방법&quot;&gt;연동 방법&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://travis-ci.org/&quot;&gt;https://travis-ci.org/&lt;/a&gt;에 github login을 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://travis-ci.org/profile&quot;&gt;https://travis-ci.org/profile&lt;/a&gt;에서 연결하고자 하는
repository를 허용한다.
    &lt;ul&gt;
      &lt;li&gt;만약 없다면 상단 &lt;code class=&quot;highlighter-rouge&quot;&gt;Sync account&lt;/code&gt;를 눌러 새로고침을 해본다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프로젝트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; 설정 파일을 추가한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;각 언어에 맞는 설정은 &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot;&gt;Document&lt;/a&gt;를 참고하길 바란다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;language: java

jdk:
  - oraclejdk8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;2016년 11월 기준, Java의 경우 default가 jdk7이다.
java 8을 쓸 경우 위와같이 반드시 jdk를 명시해 주어야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;commit을 하면 바로 travis-ci가 도는 모습을 확인 할 수 있다.
&lt;img src=&quot;/images/github/2.png&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;기본적으로 각 commit 마다 웹훅을 통해 자동으로 빌드된다.&lt;/li&gt;
  &lt;li&gt;Pull Request를 보내게되면 연결된 커밋에 따른 빌드 결과가 하단에 나타난다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/3.png&quot; /&gt;
예제 : &lt;a href=&quot;https://github.com/jiyeonseo/napucon-cheese-demo/pull/2&quot;&gt;https://github.com/jiyeonseo/napucon-cheese-demo/pull/2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot;&gt;getting-started&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#지프넓얕&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;#지적프로그래밍을위한넓고얕은습관&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Intellij에 Google Style 적용하기</title>
   <link href="https://jiyeonseo.github.io/2016/11/15/setting-java-google-style-to-intellij/"/>
   <updated>2016-11-15T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/11/15/setting-java-google-style-to-intellij</id>
   <content type="html">&lt;p&gt;&lt;em&gt;코딩 컨벤션&lt;/em&gt;은 예쁜 코드를 위해서도 필요하지만, 협업시, 장기로 프로젝트를 운영할 때 유용하다.&lt;/p&gt;

&lt;p&gt;특히, 여러사람과 협업할 때, 코드가 흐트러지는 것을 방지하고, 코드리뷰시 쓸때없는 diff를 줄여줘
더 효과적인 코드 리뷰를 할수 있도록 도와준다.&lt;/p&gt;

&lt;p&gt;다양한 스타일 가이드 라인이 있는데, 본 글에서는 &lt;a href=&quot;https://github.com/google/styleguide&quot;&gt;Google Style Guide&lt;/a&gt; 중 Java Style Guide를 Intellij에 적용해보고자 한다.&lt;/p&gt;

&lt;h2 id=&quot;환경&quot;&gt;환경&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;OSX 10.11&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;Intellij Comminity 2016.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설정-방법&quot;&gt;설정 방법&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/google/styleguide&quot;&gt;https://github.com/google/styleguide&lt;/a&gt;에서
&lt;code class=&quot;highlighter-rouge&quot;&gt;intellij-java-google-style.xml&lt;/code&gt; 를 다운받는다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Intellij에서 환경설정(Preference) -&amp;gt; Editor -&amp;gt; Code Style을 선택.
&lt;img src=&quot;/images/intellij-google/1.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상단 magage &amp;gt; import &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;intellij-java-google-style.xml&lt;/code&gt; »&amp;gt; “GoogleStyle” 선택
&lt;img src=&quot;/images/intellij-google/2.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;리포맷하는-방법&quot;&gt;리포맷하는 방법&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⌥⇧⌘L&lt;/code&gt; (shift + alt + cmd + L) : 키맵에 따라 차이가 있을 수 있음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;code &amp;gt; Refomat Code 클릭&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://github.com/HPI-Information-Systems/Metanome/wiki/Installing-the-google-styleguide-settings-in-intellij-and-eclipse&quot;&gt;Installing the coding style settings in Intellij&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#지프넓얕&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;#지적프로그래밍을위한넓고얕은습관&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>github 컨트리뷰션, 이슈, 풀리퀘스트 템플릿 만들기 </title>
   <link href="https://jiyeonseo.github.io/2016/11/15/setting-github-issue-pr-template/"/>
   <updated>2016-11-15T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/11/15/setting-github-issue-pr-template</id>
   <content type="html">&lt;p&gt;깃헙의 이슈와 풀리퀘스트는 일종의 커뮤니케이션 도구로 자주 사용된다.&lt;/p&gt;

&lt;p&gt;프로젝트가 커지게 되고, 커미터가 많아지게 되면 커뮤니케이션이 중구난방으로 이루어질 수 있는데,
이때 깃헙에서 제공하는 이슈, 풀리퀘스트 템플릿을 사용하면 좋다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/github/1.png&quot; /&gt;
정형화를 시켜 꼭 기입해야할 내용, 체크사항 등을 더 잘 챙길 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;1-root-directory에-github-을-만들고-template들을-readme-파일로-추가해준다&quot;&gt;1. root directory에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.github/&lt;/code&gt; 을 만들고 template들을 readme 파일로 추가해준다.&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTRIBUTING&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;md&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ISSUE_TEMPLATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;md&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PULL_REQUEST_TEMPLATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;md&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-파일에-마크다운-형식으로-형식을-채워-넣는다&quot;&gt;2. 파일에 마크다운 형식으로 형식을 채워 넣는다.&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Fixes # issue_number

Changes proposed in this pull request:
-
-
-

@jiyeonseo

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;예제 : &lt;a href=&quot;https://github.com/jiyeonseo/napucon-cheese-demo/tree/master/.github&quot;&gt;.github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://github.com/blog/2111-issue-and-pull-request-templates&quot;&gt;Issue and Pull Request templates&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#지프넓얕&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;#지적프로그래밍을위한넓고얕은습관&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] '소프트스킬'</title>
   <link href="https://jiyeonseo.github.io/2016/11/10/softskills/"/>
   <updated>2016-11-10T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/11/10/softskills</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=KOR9791186659885&quot;&gt;‘소프트 스킬: 평범한 개발자의 비범한 인생 전략 71가지’&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;자극적인 소개 문구(흔한 개발자, 존 손메즈. 그는 어떻게 33세에 은퇴했을까?)로 알고 있던 책이었는데 주변에서 추천을 해주어서 휴가 기간 동안 후루룩 읽었다.&lt;/p&gt;

&lt;p&gt;개발자를 위한 책이지만 개발 기술보다는 마음가짐, 태도, 그리고 커리어에 관련한 이야기로 가득 차 있어 개발자뿐만 아니라 직장인이라면 한번쯤 읽어보면 좋을 것 같다.&lt;/p&gt;

&lt;p&gt;사실 나는 &lt;a href=&quot;simpleprogrammer.com&quot;&gt;simpleprogrammer.com&lt;/a&gt;을 먼저 알고 있었고 메일링을 정기적으로 받고 있었다. 블로그 운영 방법, 글 쓰는 방법 등 정기적으로 짧게 보내주어 영어 공부 겸으로 딱 알맞았는데 , 이후 페이스북에서 지인이 추천해준 유튜브 영상을 통해 짧은 동영상 강의도 가끔 들어보곤 했었다.&lt;/p&gt;

&lt;p&gt;책을 읽으며 정말 고개를 많이 끄덕였다. 나와 생각도 비슷하고 닮은 점이 많은 것 같았다. 이 책을 추천 해준 한 지인분 역시 이 책에서 말하는 개발자와 내가 많이 닮았다며 한번 읽어보라고 해줄 정도였으니. 하지만 요즘 내 모습을 돌아보면 실패에 두려워하고, 바보 같아 보일까 봐 많이 걱정하고, 정체하려고 하는 듯한 느낌이 든다. 예전에는 안 그랬던 것 같은데. 부딪혀보지 않은 도전에 대해 많이 걱정이 늘었다. 이 글을 읽고 있는 사람도 이러한 시기를 겪을 때가 있었던 적이 있을 것이다.&lt;/p&gt;

&lt;p&gt;작가는 시종일관 이야기를 한다. 성장하기 위해서 자기 자신을 실패할 수도 있는 아주 불편한 상황에 밀어 넣어야 한다고.
실패하더라도 걱정하지 말라고. 아무리 바보 같아 보이더라도 대부분 나 말고 다른 사람들은 잘 기억도 못하고, 아무것도 안 하면서 나를 비웃는 사람보다 실패한 사람이 더 낫다고 말이다. 그리고 실패를 할 것을 알더라도 최선을 다하고 노력한 다음 실패한다면 그것은 패배가 아니다. 다시 도전하고 결국 실패한 밑바탕이 더 멋진 개발자로 만들어 준다는 것을 명심하라고 조언한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;위인들이 거둔 최고의 성공은 최악의 실패 한 걸음 앞에 있었다.     &lt;br /&gt;
      -나폴레온 힐&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;나도 파이팅! 지금 힘들어 하고 있는 모두 파이팅!!&lt;/p&gt;

&lt;h2 id=&quot;작가가-추천하는-책&quot;&gt;작가가 추천하는 책&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;스티븐 프레스필드 - 최고의 나를 꺼내라 (The War of Art)&lt;/li&gt;
  &lt;li&gt;데일 카네기 - 인간관계론 (How to win friends and influence people)&lt;/li&gt;
  &lt;li&gt;나폴레온 힐 - 생각하라! 그러면 부자가 되리라(The Master Key to Riches)&lt;/li&gt;
  &lt;li&gt;맥스웰 몰츠 - 맥스웰 몰츠 성공의 법칙(The New Psycho-Cybernetics)&lt;/li&gt;
  &lt;li&gt;노먼 빈센트 필 - 긍정적 사고방식(The power of Positive Thinking)&lt;/li&gt;
  &lt;li&gt;아인 랜드 - 아틀라스(Atlas shrugged)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;소프트웨어-개발-도서&quot;&gt;소프트웨어 개발 도서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;스티브 맥코넬 - Code Complete&lt;/li&gt;
  &lt;li&gt;로버트 C.마틴 - Clean Code&lt;/li&gt;
  &lt;li&gt;에릭 프리먼 - Head First Design Patterns&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;투자-관련-서적&quot;&gt;투자 관련 서적&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;게리 켈린 - 바닥부터 시작하는 백만장자들의 부동산 투자법(The Millionaire Real Estate Investor)&lt;/li&gt;
  &lt;li&gt;로버트 기요사키 - 부자 아빠 가난한 아빠 (Rich Dad poor dad)&lt;/li&gt;
  &lt;li&gt;케리 기븐 - No-Hype Options Trading:Myths, Realities, and Strategies That Really Work&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;simple-programmer&quot;&gt;Simple programmer&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;메일링 구독과 youtube subscribe를 추천한다. 시간날때 하나씩 꺼내보면 영감을 많이 준다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://simpleprogrammer.com/&quot;&gt;https://simpleprogrammer.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCFxdcuY-S6yjZGq_2cjilHg&quot;&gt;https://www.youtube.com/channel/UCFxdcuY-S6yjZGq_2cjilHg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[후기] Deview 2016</title>
   <link href="https://jiyeonseo.github.io/2016/10/29/deview-2016/"/>
   <updated>2016-10-29T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/29/deview-2016</id>
   <content type="html">&lt;p&gt;개발자 컨퍼런스가 풍성한 10월이다. 저번주 &lt;a href=&quot;http://jiyeonseo.github.io/2016/10/18/tech-planet-2016/&quot;&gt;테크플레닛 2016&lt;/a&gt;을 다녀오고 이번주는 Naver에서 주관하는 &lt;a href=&quot;https://deview.kr/2016/&quot;&gt;Deview 2016&lt;/a&gt;을 다녀왔다.&lt;/p&gt;

&lt;p&gt;Deview는 &lt;a href=&quot;http://jiyeonseo.github.io/2015/09/15/deview2015/&quot;&gt;작년&lt;/a&gt;에 이어 2년째 출석 중이다. 그 전에도 간 적 있었던것 같은데… (블로그에 글이 없으니 헷갈린당…이래서 글을 써놔야해..)&lt;/p&gt;

&lt;p&gt;일단 작년에 비해 참석자가 더 늘어난 것 같았다. 정말 사람 많았다 ;;;
인기 세션은 자리가 모자라서 강연장 곳곳에 그냥 자리에 앉아 듣는 사람들도 많았다.
의자와 의자 사이가 좁아 많이 불편하긴 했다. 노트북을 다들 무릎위에 두고 치다보니 옆사람들과 부딪히는 일이 종종 발생했다.ㅠ
그만큼 Deview 행사의 규모도 커지고 개발자들의 참여도도 높아진 거라 생각한다.&lt;/p&gt;

&lt;p&gt;해가 갈수록 더욱더 볼거리가 풍성해지는 Deview를 보며 한번 놀랐으며, 그 너머로 보이는 네이버의 규모, 로드맵에 대해서 또 한번 감탄사가 절로 나왔다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AI&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;인공지능&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;딥 러닝&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;챗봇 api&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;파파고&lt;/code&gt;까지  다양한 최신 기술을 직접 느껴 볼 수 있는 시간들로 가득했다.&lt;/p&gt;

&lt;p&gt;이 외에도 다른 회사들의 크고 작은 트러블슈팅, 개발기 등을 들으며 직접 현업에 가져다 쓰고 싶은 기술들, 개인적으로 라도 공부해보고 싶은 것들을 많이 배울 수 있었다.&lt;/p&gt;

&lt;p&gt;가장 크게 느낀 점은, 머신러닝, 딥러닝은 이제 미룰 수 없는 과제가 된 것 같다.
늦은 것 같지만 ㅠㅠㅠ 아직 진입하고 있는 사람이 많은 것 같으니 이제 미루지 말고 공부를 시작해야겠다.&lt;/p&gt;

&lt;p&gt;그리고 기억에 남는 세션 중 하나는 1일차에 있었던  &lt;a href=&quot;https://deview.kr/2016/schedule#session/159&quot;&gt;Apache Zeppelin과 오픈소스 비즈니스&lt;/a&gt; 였는데, 아파치 재플린이 어떻게 성공적인 오픈소스 프로젝트가 되었는지 공유한 시간이였다.
이번 deview 에서는 개발자 문화 관련 세션이 두개밖에 없었는데, 그 중  하나로 ,개발자로써, 오픈소스에 대한 갈증이 있다면 꼭 발표영상을 보길 바란다.&lt;/p&gt;

&lt;p&gt;요즘 개발자 치고 오픈소스를 단 한번도 사용하지 않았다!! 라는 사람은 없을 것이다. 근데 기여를 하는 사람은 그렇게 많지 않을 꺼라 생각한다.(나 역시 그러하다..힝) 개발자 커리어에 도움이 된다는 것은 알고 있지만 시간을 내기가 어렵거나, 내 실력으로 저렇게 큰 프로젝트에 어떻게 컨트리뷰트를 할까라는 경우가 많을 것 같다.
하지만 강연을 들으며 오픈소스 매력에 흠뻑 빠지게 되었다. 많은 사람들의 github star(개발자들의 로망이 아닐까)와 전 세계인들과의 커뮤니티, 그리고 다양한 글로벌 회사들의 러브콜까지. 그 로켓에 발 하나쯤 사알짝 올려보고 싶은 생각이 많이 들었다. 빨리 찾아봐야징ㅋ&lt;/p&gt;

&lt;p&gt;개발자 컨퍼런스는 항상 즐겁다. 그저 기술 습득의 즐거움 뿐만 아니라, 오랜만에 만나는 개발자 친구들도 좋고 새롭게 만나게 되는 사람들도 좋다.
이 마음 잊지말고 커뮤니티, 오픈소스 등 참여해보도록 해야겠다.&lt;/p&gt;

&lt;p&gt;강연 발표 자료 : &lt;a href=&quot;https://deview.kr/2016/schedule#session&quot;&gt;Deview 2016 Schedule&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이번 참관 후기 역시 들은 내용 노트를 공유하며 마무리 하고자 한다.
이틀동안 이어진 세션들을 후다닥 정리한거라 저번보다 더 엉망 ㅠ.ㅠ..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;안타깝게도 ㅠ 내가 듣지 못한 세션 중 &lt;a href=&quot;https://deview.kr/2016/schedule#session/137&quot;&gt;Angular2 vs React, React vs Angular2&lt;/a&gt;가 아주 재미있고 핫했다고 한다. 꼭 챙겨보자!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;내-스케쥴과-주제&quot;&gt;내 스케쥴과 주제&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;topic&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article1&quot;&gt;[1] Web Payment API의 현재와 미래 &lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;W3C Web Payments 표준에 대하여 이야기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article2&quot;&gt;[2] REST에서 GraphQL과 Relay로 갈아타기&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GraphQL와 Relay를 풀어나가며 실제 서비스에 어떻게 사용했는지에 대한 경험을 공유&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article3&quot;&gt;[3] Apache Zeppelin과 오픈소스 비즈니스&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Zeppelin 프로젝트를 어떻게 시작해서 성공적인 프로젝트로 만들었는지에 대한 여정을 재미있는 에피소드와 함께 이야기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article4&quot;&gt;[4] 한 달 만에 개발한 하이브리드 앱, 50만 사용자 서비스가 되기까지&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;네이티브 앱 개발 경험이 전혀 없는 웹 프론트엔드 개발자의 100% 웹뷰 하이브리드 앱 개발기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article5&quot;&gt;[5] 5년간의 네이버 웹엔진 개발/삽질기 그리고…&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;웹엔진에 대한 이야기, 그 엔진들의 기술적인 이슈들 뿐만 아니라 새로운 엔진을 만들고 그것으로 제품을 만들려는 시도 속에서 벌어지는 많은 이슈들도 함께 이야기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article7&quot;&gt;[6] 딥러닝을 활용한 이미지 검색: 포토요약과 타임라인&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이미지 검색 서비스를 개선하기 위해 딥러닝을 활용한 다양한 방법을 소개하고, 검색 서비스의 인터페이스 개선에 응용한 대표적인 두가지 사례를 자세하게 소개&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article7&quot;&gt;[7] 딥러닝과 강화 학습으로 나보다 잘하는 쿠키런 AI 구현하기&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;쿠키런 AI 구현에 사용된 네 가지 연구(Deep Q-learning, Double Q-learning, Dueling network, Prioritized Experience Replay)를 소개하고 각각의 기술이 얼마나 성능을 향상시켰는지 보여줍니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article8&quot;&gt;[8] Backend 개발자의 Neural Machine Translation 개발기&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Neural Machine Translation(NMT) 개발에 도전해서 성공한 경험을 공유&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article9&quot;&gt;[9] 네이버 콘텐츠 통계서비스 소개 및 구현 경험 공유&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;람다아키텍쳐를 살펴 보고, Realtime과 Batch 데이타 흐름을 효과적으로 처리할 수 있는 구현체를 직접 구현 내용 공유&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article10&quot;&gt;[10] 딥러닝 예제로 보는 개발자를 위한 통계&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;데이터마이닝, 머신러닝 그리고 통계 , 통계로 바라본 딥러닝 , 개발자를 위한 통계&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;div id=&quot;article1&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;1-web-payment-api의-현재와-미래&quot;&gt;[1] Web Payment API의 현재와 미래&lt;/h1&gt;

&lt;h2 id=&quot;webpayment-api&quot;&gt;webpayment api&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;W3C (참고: &lt;a href=&quot;https://www.w3.org/Payments/&quot;&gt;https://www.w3.org/Payments/&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;working group으로 표준으로 진행하는중&lt;/li&gt;
  &lt;li&gt;2015 oct 에서 시작.&lt;/li&gt;
  &lt;li&gt;지금까지 한 일년정도 된것&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;삼성-인터넷앱&quot;&gt;삼성 인터넷앱&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;크로미움 엔진&lt;/li&gt;
  &lt;li&gt;구글 플레이에 업데이트 햇음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-motivation&quot;&gt;why? Motivation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;카트 &amp;gt; 결제 : 68%&lt;/li&gt;
  &lt;li&gt;다양한 이유가 있음. 근데 모바일만 따로 이유를 찾아봤더니&lt;/li&gt;
  &lt;li&gt;mobile은 66%가 더 pc보다 높음.  ( 거의 90% 는 결제를 안한다)&lt;/li&gt;
  &lt;li&gt;가장 큰 이유. form을 입력하기 싫다. (오타, 화면을 채우는 키보드 등)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;신용카드를-이용한-결제&quot;&gt;신용카드를 이용한 결제&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;3가지 페이먼트 - payment request API, payment method identifiers, basic card payment&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;브라우저 :  지금 준비된건 크롬&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;뭐가 바뀔꺼냐.
    &lt;ul&gt;
      &lt;li&gt;카드넘버나, expire date 등을 입력하지 않아도 되게&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;원버튼 for payment request api&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;어떻게 바뀌냐&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;미국같은 경우에는 checkout 버튼을 누르면 바로 결제 form 이 반이 뜨고 잇어서 더 복잡해 보임.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;온라인쇼핑몰에서는 정해진 api를 주기만 하면 브라우저에서 form 을 알아서 만들어 주겠다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;쇼핑몰이 가격 정보를 넘기면&lt;/li&gt;
  &lt;li&gt;브라우저에 저장된 신용카드와 주소를 저장&lt;/li&gt;
  &lt;li&gt;소비자가 아무런 입력도 하지 않고 바로 결제 할 수 있도록 해주자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;flow&quot;&gt;flow&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;내가 받을 payment method 리스트를 넘겨주고 (아메리카 익스프레스. 비자카드 등)
    &lt;ul&gt;
      &lt;li&gt;내가 얼마를 받아야 한다 .&lt;/li&gt;
      &lt;li&gt;브라우저는 그 저장된거랑 mehods 교집합을 보여줌.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;협의된 결제 네트웍에 대한&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;장점&quot;&gt;장점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;어느 쇼핑몰에 가든 같은 form 을 보니 익숙.편안함.&lt;/li&gt;
  &lt;li&gt;merchant 입장에서는 따로 구현할 필요가 없음.
    &lt;ul&gt;
      &lt;li&gt;서버에 저장 하게 될 경우 보안도 신경써야 하는데 이런 mainteinanace cost가 들지 않음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;code-level&quot;&gt;code level&lt;/h2&gt;

&lt;h3 id=&quot;payment-request&quot;&gt;Payment Request&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;JSON으로 요청
    &lt;ul&gt;
      &lt;li&gt;methodData //  rufwpqkdqjq&lt;/li&gt;
      &lt;li&gt;Details = // 뭘 결제할꺼냐&lt;/li&gt;
      &lt;li&gt;Options // 수집할 내용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;paymentmethod&quot;&gt;paymentMethod&lt;/h4&gt;

&lt;h4 id=&quot;details&quot;&gt;Details&lt;/h4&gt;

&lt;h4 id=&quot;options&quot;&gt;Options&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 어떤 정보를 받을 것인지를 정의
- Ex) request shopping false이면 뭐 아이템? 사는거라 생각하고 택배 정보 노노 ### show()
- Promise
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;shipping-address-change&quot;&gt;Shipping Address Change&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- merchant가 택배이슈가 잇을때 ex) 수도권만 배송등
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;shipping-optionchange&quot;&gt;Shipping OptionChange&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;배송 옵션에 따른 가격 변동 ex) 빠른 배송 + 5000원 같은 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;payment-response&quot;&gt;Payment Response&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- pg로 결제 요청
- Complete 에 따라서 결제 성공/실패를 response 보내줌
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;browser 에서 바로 payment gateway (pg)로 바로 보내는게 아니라 merchant로 다시 보내주시면 알아서 서버호출을 하고 다시 커스터머에게 보여줘야함
이리 되면.. 귀찮아.. UI만 바뀌고 개발자가 해야할 일이 많아짐 .. 그래서!!&lt;/p&gt;

&lt;h2 id=&quot;미래&quot;&gt;미래&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;payment app을 사용한 결제&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;payment-app&quot;&gt;payment app&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이것도 계속 늘어 날텐데 » 이것도 하나의 버튼으로 하자&lt;/li&gt;
  &lt;li&gt;설치된 payment app의 리스트를 고르고 결제 버튼을 누르면 그 페이먼트 앱에서 결제를 진행&lt;/li&gt;
  &lt;li&gt;브라우저가 하는 일  페이먼트 앱으로 merchant의 결제 내역을 넘겨주는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이제는 내가 accept하는 payment app의 리스트를 넘겨줌&lt;/p&gt;

&lt;h3 id=&quot;등록&quot;&gt;등록&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;web based payment app&lt;/li&gt;
  &lt;li&gt;Native payment app&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;웹-베이스의-경우&quot;&gt;웹 베이스의 경우&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;서비스 워커를 브라우저에 install&lt;/li&gt;
  &lt;li&gt;브라우저에 저장 하여 사용.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;이렇게-되면-payment-flow가-조금-바뀐다&quot;&gt;이렇게 되면 payment flow가 조금 바뀐다&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;merchant로 가는게 아니라 payment app으로 바로 가게되고&lt;/li&gt;
  &lt;li&gt;payment app 내에서 payment network를 타게 된다.
    &lt;ul&gt;
      &lt;li&gt;Payment token, reponse (뭐 아이디라던가)&lt;/li&gt;
      &lt;li&gt;이걸 userAgent로 reponse를 내려주게 되고 User에게 보내줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;장점-1&quot;&gt;장점&lt;/h3&gt;
&lt;p&gt;Merchant&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;온라인  웹페이지 변경 없이 payment app에서만 기능 추가/제거 가능
    &lt;ul&gt;
      &lt;li&gt;페이지에대한 유지보수 비용 절감&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Payment app&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;merchant integration이 용이함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;code-level-1&quot;&gt;code level&lt;/h2&gt;

&lt;h3 id=&quot;service-worker&quot;&gt;service worker&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;구글 , 삼성이 주도&lt;/li&gt;
  &lt;li&gt;Event worker :  초기 이름&lt;/li&gt;
  &lt;li&gt;이벤트를 수신 하는 deamon&lt;/li&gt;
  &lt;li&gt;필요한 경우에, 항상 살아있는 데몬&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;securee context가 보장되어 결제와 같은 보안에 중요한 서비스를 할 수 있음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Service worker와 payment app 1:1 매핑&lt;/li&gt;
  &lt;li&gt;동작이 기존과 동일 service worker가 paymentapp이라고 생각해도 괜춘.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;설치&quot;&gt;설치&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;명시적 : 사용자가 직접 설치 ( 버튼을 통해)&lt;/li&gt;
  &lt;li&gt;묵시적 : 쇼핑몰 또는 브라우저의 추천에 의한 설치
    &lt;ul&gt;
      &lt;li&gt;자동으로 설치. (스크립트로 동작이라 1초도 안걸림)&lt;/li&gt;
      &lt;li&gt;맘대로 깔면 넘나 많아지면 어째&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;시나리오 : 만원 이하, 광고를 끝까지 보면 결제해주겟음&lt;/li&gt;
  &lt;li&gt;결제 선택하면 &amp;gt; payment app (광고를 보고) » payment complete&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;worker-입장에서&quot;&gt;worker 입장에서&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 브라우저에 의해서 service worker가 활성화
- Onpaymentrequest가 불리우고 결제 정보를 받고 &amp;gt; 결제에 대한
- OpenWindow &amp;gt;&amp;gt; 광고 화면을
- PostMessage&amp;gt;&amp;gt; 필요한 정보를 보냄
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div id=&quot;article2&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-rest에서-graphql과-relay로-갈아타기&quot;&gt;[2] REST에서 GraphQL과 Relay로 갈아타기&lt;/h1&gt;

&lt;h2 id=&quot;rest-api&quot;&gt;Rest API&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;client &amp;lt;&amp;gt; server&lt;/li&gt;
  &lt;li&gt;리소스를 uri로 표현&lt;/li&gt;
  &lt;li&gt;GET/POST/DELETE/PUT&lt;/li&gt;
  &lt;li&gt;Http response 여러 회사에서 사용중&lt;/li&gt;
  &lt;li&gt;twitter, facebook, naver 등&lt;/li&gt;
  &lt;li&gt;추가 함수, 정렬, pagenation 등등&lt;/li&gt;
  &lt;li&gt;사실상 각자 제멋대로&lt;/li&gt;
  &lt;li&gt;그나마 정해진 것은 JSON:API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jsonapi&quot;&gt;JSON:API&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Relationship
- 부분필드,
- 필터 적용 등등등 그래도 rest의 한계가 느껴짐
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;한계&quot;&gt;한계&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;parse fieldset
    &lt;ul&gt;
      &lt;li&gt;원하는 것만 가져오는것&lt;/li&gt;
      &lt;li&gt;그럼 기본값은? 전부 다 가져와야 하나?&lt;/li&gt;
      &lt;li&gt;접근 권한이 없는 필드는 어떻게 하지&lt;/li&gt;
      &lt;li&gt;admin과 유저 다르게 내려야 하나?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ex) 나를 퐐로 하는 사람들을 가져오고 싶은데&lt;/li&gt;
  &lt;li&gt;내 정보 : 개인정보  + 다른 사람 정보 : 어느정도만&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;필드타입을 전혀 정하지 못함&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;amount : “10.00” // object 타입일 경우 이건 string? Integer?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;side-effect&quot;&gt;Side effect&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;결제라고 했을떄 payment에 대한거, credit의 정보 변경 한번씩 쳐야 한다&lt;/li&gt;
  &lt;li&gt;가져와야 정보가 많을때 param이 기하급수적으로 길어짐&lt;br /&gt;
      ex) query=dsajkd,dsadasd,asdasd,as,das,das&lt;/li&gt;
  &lt;li&gt;라이브러리 부족.&lt;/li&gt;
  &lt;li&gt;endpoint에 따라 json 맞게 답변을 해줘야 한다.&lt;/li&gt;
  &lt;li&gt;클라이언트에서도 데이터를 알맞게 받아서 store 해줘야 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;graphql&quot;&gt;GraphQL&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Rest 방식을 바꿈&lt;/li&gt;
  &lt;li&gt;query 언어&lt;/li&gt;
  &lt;li&gt;rest uri를 그래프 언어로 바꾸면 더 간결해짐&lt;/li&gt;
  &lt;li&gt;여러 method를 표현할 수 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스키마-정의-하기&quot;&gt;스키마 정의 하기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Query : GET&lt;/li&gt;
  &lt;li&gt;Mutation  : UPDATE DELETE PUT
    &lt;ul&gt;
      &lt;li&gt;args와 resolve를 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;스카마가 정의도면 express-graphql 을 이용해서&lt;/p&gt;

&lt;p&gt;Graphql clinet - lokka ?
를 사용해서 클라이언트에서 사용할수 잇음&lt;/p&gt;

&lt;p&gt;GraphiQL&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;postman 같은거&lt;/li&gt;
  &lt;li&gt;자동완성, 자동 문서화도 해줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;relay&quot;&gt;Relay&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;웹 어플리케이션 개발을 편하게 하기 위해 만들어주는것&lt;/li&gt;
  &lt;li&gt;react 와 graphql을 연동을 도와줘 시너지 증가&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;컨셉&quot;&gt;컨셉&lt;/h3&gt;
&lt;h3 id=&quot;노드&quot;&gt;노드&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;단일 interface&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Query {
	node (id:1) {
		id,
		user,
		age
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;데이터 매니지먼트에 용이함, cache를 한다던가
String 만으로는 resource 알기 어려움
type과 id가 합쳐진 GrobalId를 이용하여 알랴줌&lt;/p&gt;

&lt;p&gt;NodeDefinition&lt;/p&gt;
&lt;h2 id=&quot;커넥션&quot;&gt;커넥션&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;다수의 node를 가져올때&lt;/li&gt;
  &lt;li&gt;pagination에 특화되&lt;/li&gt;
  &lt;li&gt;Connection Definition을 정의해서
    &lt;ul&gt;
      &lt;li&gt;PageInfo 와 edges를 내려줌.&lt;/li&gt;
      &lt;li&gt;After before last first를 이용해서&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;react-relay&quot;&gt;React Relay&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Data 의존성과 component가 공존한다.&lt;/li&gt;
  &lt;li&gt;리액트에서는 컴포넌트가 여러개가 잇고 그 안에 그안에 이런식으로 되어있는데&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그 각 컴포넌트들은 필요한 데이터가 각각 다르다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Relay.createContiner&lt;/li&gt;
  &lt;li&gt;각각 컴포넌트에 알맞는 쿼리만 작성하면 알아서 그걸 합쳐서 한번에 불러준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mutation-config&quot;&gt;Mutation Config&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;node방식으로 가져오니 data manage가 더  편함&lt;/li&gt;
  &lt;li&gt;어떻게 반영할 것인지 conf에 추가하면 됨&lt;/li&gt;
  &lt;li&gt;Ex) 이미 불러온 node의 값을 업데이트, 기존에 불러온 connection에 추가/제거&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary&quot;&gt;summary&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;기존 GET/DELE - » Query / Mutation&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터를 미리 정해야 하고 그게 애매햇는데 » 항상 데이터 의존성을 명시  ( 기본이 없고 원하는 것만)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.필드가 정해져 잇지 않아 문서화 하지 않으면 협업이 어렵 ( 이게 integer인지 string인지)
	- 타입이 정해져 잇고 (strong type) 프로토콜 단에서 확인할 수 있음
	- Introspection&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;기존에는 어떤 param을 받는지를 명세 해놔야 함 » 데이터 의존성에 명세할 필요가 없음 .&lt;/li&gt;
  &lt;li&gt;데이터 변경 사항을  클라이언트에서 처리를 각각 해야함 	- mutation config를 잘 써주면 알아서 데이터 변경 사항을 처리한다 .&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;생산성, 속도, 재미 보두 크게 향상&lt;/li&gt;
  &lt;li&gt;스타텁에서는 비지니스 로직을 계속 짜내는게 어려웠는데
서버와 클라이언트에 어떻게 보일때까지 한 큐에 도니까 개발이 더 편하다. (한명이 개발해도 좋다)&lt;/li&gt;
  &lt;li&gt;공식문서가 좀 미비함. Relay의 진입 장벽이 꽤 높은 ㅕㄴ&lt;/li&gt;
  &lt;li&gt;Relay 실시간 지원이 미비. Mutation??을 통해서 바뀐 정보를 relaystore에 넣어줘야하는데 이게 안되서 hack을 이용해야함&lt;/li&gt;
  &lt;li&gt;아직 실험적인 생태&lt;/li&gt;
  &lt;li&gt;하려면 소통 방식부터 바꿔야 하기 때문에 프로젝트를 완전 엎어버려서 해야함.  (기존 rest 에서 넘어가기 어렵. )&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;질문&quot;&gt;질문&lt;/h2&gt;
&lt;p&gt;Q Redux + graphql&lt;/p&gt;

&lt;p&gt;redux를 쓰게 되면 relay 를 같이 쓰긴 어렵.
data와 render가 분리 되어있어서
뷰와 데이터가 분리가 되는게 요즘 대세긴 하지만 그냥 데이터를 받아와서 뷰에서 핸들링 해주는게 더 편하더라 redux보다는 그냥 relay만 사용하는게 더 편하더라&lt;/p&gt;

&lt;p&gt;Awesome graphql&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;mysql&lt;/li&gt;
  &lt;li&gt;mongodb&lt;/li&gt;
  &lt;li&gt;resyncDB사용중 - 직접 만들어서 사용중중
Express graphql&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Q 만약 Spring framework를 쓴다면..&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;graphql 미들웨어를 하나 만들어 놓고 실제 데이터를 가져오는것은 rest로 해서 레거시와 연경 ( facebook 사례 )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Q angular와 같은 다른 framework 와 써도 되나요&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;그거와 종속성이 잇는게 아니니 쓸 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Q 앱에서도 적용해본적 있나유?
	- http 에 국한된게 아니라
	- protocol일뿐.
	- 소켓에서 때리든 자바스크립트에서 ajax에서 string으로 만들어서 보내든
	- 뭐 그래서 상관이 없을 것 같다.&lt;/p&gt;

&lt;p&gt;어느 정도
React Native&lt;/p&gt;

&lt;p&gt;Q SQL 최적화&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;중요하지..&lt;/li&gt;
  &lt;li&gt;join 이나 이런게 중요하지&lt;/li&gt;
  &lt;li&gt;어떤 쿼리가 어떻게 되는건지 보이긴 함.&lt;/li&gt;
  &lt;li&gt;어떤 필드가 필요한지 분석할 수는 있으나 애매하다.&lt;/li&gt;
  &lt;li&gt;화이트 리스트를 만들어서 미리 구현해 놓는 방법도 있을 것 같다.&lt;/li&gt;
  &lt;li&gt;최적화 이슈는 여전히 있음. graphQL 이슈에도 올라와 잇음.
Plan? 이라는걸 누가 fork 따서 해놓은게 잇는데 그걸 참고해보3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Q null이나 제너릭 obj 을 지원하지 않음&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;nonnulll로&lt;/li&gt;
  &lt;li&gt;
    &lt;ol&gt;
      &lt;li&gt;stringlify
        &lt;ol&gt;
          &lt;li&gt;하나하나 명세하는 방법&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이러다간 끝이 없을것 같아 스키마에 추천하는중&lt;/p&gt;

&lt;div id=&quot;article3&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-apache-zeppelin과-오픈소스-비즈니스&quot;&gt;[3] Apache Zeppelin과 오픈소스 비즈니스&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;기능보다는 프로젝트&lt;/li&gt;
  &lt;li&gt;오픈소스 생태계&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;발표자&quot;&gt;발표자&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아파치 제플린 PMC chair&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;어떻게-시작되었나&quot;&gt;어떻게 시작되었나&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2012년 말에 interacitve 분석 커머셜 솔루션 개발&lt;/li&gt;
  &lt;li&gt;작은 회사에서 엔터프라이즈 비지니스를 하기가 어려웟음&lt;/li&gt;
  &lt;li&gt;기능 중  인터렉티브 분석 기능을 오픈 소스로 하면 어떨까?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hadoop in Seoul 2013에서 발표하며 오픈소스 제플린을 제안  » 관심이 없엇음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;회사에서  사이드 프로젝트로 시작 -&amp;gt; 노트북 형식의 소프트 웨어 형식을 만듬&lt;/li&gt;
  &lt;li&gt;2014년 여름부터 사용자가 생기기 시작&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;어떻게-시작할까&quot;&gt;어떻게 시작할까&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;스파크 메일링 리스트에서 관련 질문이 올라오면 제플린을 추천&lt;/li&gt;
  &lt;li&gt;스택 오버플로우에도 계속 답변을 달면서 영업을 함.&lt;/li&gt;
  &lt;li&gt;홍보 1달도 안됬는데 제플린을 이용해서 서비스를 만드는 회사 발생.&lt;/li&gt;
  &lt;li&gt;2014년 12월에 아파치 인큐베이션에 들어가게됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;아파치-프로젝트가-된다는-것은&quot;&gt;아파치 프로젝트가 된다는 것은&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;소스코드 소유권 (copyright)&lt;/li&gt;
  &lt;li&gt;브랜드 등&lt;/li&gt;
  &lt;li&gt;아파치로 기부, 양도를 하게 되는것&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;아파치-재단&quot;&gt;아파치 재단&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;오픈소스 재단은 다양한 곳이 있음
    &lt;ul&gt;
      &lt;li&gt;리눅스 파운데이션&lt;/li&gt;
      &lt;li&gt;모질라 파운데이션&lt;/li&gt;
      &lt;li&gt;아파치 파운데이션 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아파치 재단은
	- Community over code
	- 좋은 커뮤니티를 만드는것이 재단의 목표
	- 인큐베이터 : 아파치방식으로 일하는 방법, 의사결정하는 방법
	- 탑레벨 프로젝트 혹은 subproject&lt;/p&gt;

&lt;p&gt;트롤을 vote를 통해서 쫓아낼수 잇는데
멘토들의 조언&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;커뮤니티와 이야기를 해서 잘 풀어나가보아라&lt;/li&gt;
  &lt;li&gt;멘토들이 코드 이야기가 아니라 커뮤니티를 어떻게 꾸려가는가, 유지시키는가에 집중함.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;탑레벨이-되면&quot;&gt;탑레벨이 되면&lt;/h2&gt;
&lt;p&gt;PMC
Committer
Contributor&lt;/p&gt;

&lt;h2 id=&quot;의사결정&quot;&gt;의사결정&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;코드 커밋부터 시작해서 릴리즈까지 여러가지 결정을 해야함.&lt;/li&gt;
  &lt;li&gt;비슷한 프로세스로
제안 &amp;gt; 토론 &amp;gt; 공감대 형성 &amp;gt; 투표 (consencus 기록의 의미)
** 투표 &amp;gt; 공감대 형성 (X) 투표를 햇으니 공감하라가 아님&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;아파치-프로젝트의-가장-큰-장점&quot;&gt;아파치 프로젝트의 가장 큰 장점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아파치 브랜드 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;오픈소스-프로젝트-종류&quot;&gt;오픈소스 프로젝트 종류&lt;/h2&gt;
&lt;p&gt;크게 두가지로 나눌 수 있을 것 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;소스코드만 공개&lt;/li&gt;
  &lt;li&gt;소스코드와 의사결정 공개&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;어떤 프로젝트의 릴리즈가 그냥 딱 오픈된다. ( 의사결정을 어떤 집단 혹은 회사가 결정)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;물론 이것도 오픈소스
하지만 이렇게되면 컨트리뷰터들이 참여하기가 어렵다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;재플린은 여러 노력을 했음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;왠만하면 모든 토론을 온라인으로&lt;/li&gt;
  &lt;li&gt;회사에서도 가능하면 온라인으로&lt;/li&gt;
  &lt;li&gt;왠만한 모든 대화는 영어로&lt;/li&gt;
  &lt;li&gt;외국인 개발자들이 좀 있엇고, 원격근무, 자율근무를 하고 있어서 오픈소스를 도입하기가 쉬웠음.&lt;/li&gt;
  &lt;li&gt;버그패치만 제공하는게 아니라 어떠한 기능을 만들때 어떠하게 햇음 좋겟다 처럼 참여햇으면 좋겟다.&lt;/li&gt;
  &lt;li&gt;많은 회사들이 비지니스 도입하기 쉽게 했으면 좋겠다 .&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;오픈소스-비지니스&quot;&gt;오픈소스 비지니스&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;서포트/트레이닝/컨설팅 — 일반적인 시도&lt;/li&gt;
  &lt;li&gt;듀얼 라이센스 - 조건부 오픈소스 라이센스 ex) 학술 개발에만 쓰일수 잇고 상업적인 용ㄷ는 안된다&lt;/li&gt;
  &lt;li&gt;엔터프라이즈 버전  - 오픈소스에 추가 기능을 붙혀 commercial production&lt;/li&gt;
  &lt;li&gt;기부 - 개인 기부 / 프로젝트 자체 재단을 만들어 기업들로부터 기부를 받는다.&lt;/li&gt;
  &lt;li&gt;SaaS - 오픈소스를 그대로 서비스로서 제공&lt;/li&gt;
  &lt;li&gt;Open adoption -  제플린은 여기
    &lt;ul&gt;
      &lt;li&gt;오픈소스에서 직접 수익을 얻지 않고&lt;/li&gt;
      &lt;li&gt;다른 product 에서 수익을 만든다.&lt;/li&gt;
      &lt;li&gt;오픈 소스의 기능을 제한하고 비지니스를 독점 할 필요가 없다&lt;/li&gt;
      &lt;li&gt;다른 비지니스를 하는 회사들과 경쟁할 필요가 없다&lt;/li&gt;
      &lt;li&gt;선순한을 만들기 위해.
  ○ 기능을 제한/비지니스 독점하게되면 사용자가 감소 시장 크기가 감소하게됨
  ○ 다양한 비지니스 허용하게 되면 사용자가 증가하고 시장의 크기가 증가 ** 요걸 기대&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zepplinhub&quot;&gt;ZepplinHub&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;제플린 노트북 공유/협업 환경&lt;/li&gt;
  &lt;li&gt;아파치에서만이 아니라 다른 써드파티 회사에서도&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;극대화 하기 위해 다양한 전략을 수행&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;아파치 브랜드를 사용하거나&lt;/li&gt;
  &lt;li&gt;다양한 프로젝트와 인테그레이션
    &lt;ul&gt;
      &lt;li&gt;플링크, 스파크, 카산드라, 알, 구글 빅 쿼리 등등등.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;3rd party 비지니스
    &lt;ul&gt;
      &lt;li&gt;아마존 웹서비스 emr&lt;/li&gt;
      &lt;li&gt;MS azure HD insignt 에서&lt;/li&gt;
      &lt;li&gt;구글 클라우드 데이터 에서도&lt;/li&gt;
      &lt;li&gt;클라우드 서비스 뿐만 아니라&lt;/li&gt;
      &lt;li&gt;Hotonwork HDP 패키지에 제플린 탑재
이런 회사들과 경쟁 하기 보다는 친구가 되는 쪽으로 노력함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;그-결과로&quot;&gt;그 결과로&lt;/h2&gt;
&lt;p&gt;깃헙 별 갯수
아파치 프로젝트 중에서 12번째&lt;/p&gt;

&lt;p&gt;컨트리 뷰터 숫자는
153명으로 8위&lt;/p&gt;

&lt;p&gt;이제는 유명한 프로젝트&lt;/p&gt;

&lt;p&gt;컨트리뷰션 하는 회사들&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;nflabs&lt;/li&gt;
  &lt;li&gt;트위터&lt;/li&gt;
  &lt;li&gt;구글
-허톤워크&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;사용자&quot;&gt;사용자&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;국내외 회사들에서 많이 사용됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;생태계&quot;&gt;생태계&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Contributors
    &lt;ul&gt;
      &lt;li&gt;Users&lt;/li&gt;
      &lt;li&gt;Service provider&lt;/li&gt;
      &lt;li&gt;Technology Integration&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소스코드 오픈 뿐만아니라 이러한 풍부한 생태계가 오픈소스의 생태계라고 생각한다.&lt;/li&gt;
  &lt;li&gt;혼자있을때보다 더 많이 사용되고 더 빨리 성장하고 더 안정적인 프로젝트가 된다 생각한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;비지니스-측면&quot;&gt;비지니스 측면&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;모든 3파티 재플린 배포/서비스에 제플린 허브 integration 이미 탑재하여
재플린 퍼브의 기능/품질이 일정 수준이 오르면 hub integration 스위치를 켜도록 유도&lt;/li&gt;
  &lt;li&gt;hotonworks에서는 데이터 분석 패키지에  이미 재플린을 넣어서 팔고 있음.&lt;/li&gt;
  &lt;li&gt;다른 클라우드 서비스에도 도입되었음 .&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;성공적인-오픈소스-프로젝트를-만들기-위해서는&quot;&gt;성공적인 오픈소스 프로젝트를 만들기 위해서는&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;프로젝트가 주는 가치&lt;/li&gt;
  &lt;li&gt;열린 커뮤니티 (사용자, 개발자) : 커뮤니티가 생성되지 않으면 오픈소스 형태를 굳이 가질 필요가 없다. 그냥 회사에서 하는거랑 뭐가 다르냐&lt;/li&gt;
  &lt;li&gt;3rd party projects/ business  : 다양한 회사들이 integration되어있는 오픈소스가 혼자 덜렁 도는 오픈소스프로젝트보다 더 매력적이다 .&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;오픈소스-프로젝트로-도움된-것&quot;&gt;오픈소스 프로젝트로 도움된 것&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아직 돈 벌 준비를 하고 있는 단계인데도&lt;/li&gt;
  &lt;li&gt;회사가 커지고&lt;/li&gt;
  &lt;li&gt;한국 &amp;gt; 미국&lt;/li&gt;
  &lt;li&gt;한국 seed &amp;gt; 미국에서 Series A 투자를 받음&lt;/li&gt;
  &lt;li&gt;컨퍼런스/밋업  : 한국 &amp;gt; 전세계&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;덧붙여&quot;&gt;덧붙여&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;엔지니어 입장에서는 오픈소스가 괸장히 매력적이다&lt;/li&gt;
  &lt;li&gt;전 세계인과 같이 커뮤니케이션&lt;/li&gt;
  &lt;li&gt;회사 입장에서도 다양한 비지니스 기회를 많이 제공받으니 매력적이다.&lt;/li&gt;
  &lt;li&gt;힌반쯤은 오픈소스에 참여해보시길길&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;질문-1&quot;&gt;질문&lt;/h2&gt;
&lt;p&gt;Q 선순환 구조, 사용자를 늘리고 ,.. 선순환을 시작 되려면? 한정된 리소스, 개발자의 시간. (개발, 홍보, 메일링 리스트 뒤지기 등) 어떻게 시작하셧는지&lt;/p&gt;

&lt;p&gt;A&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;몸으로 떼우기도 하고, 온난하게 대답을 잘해주면서&lt;/li&gt;
  &lt;li&gt;컨퍼런스 에서 다른 개발자들도 만나고 참여 유도도 하고&lt;/li&gt;
  &lt;li&gt;다른 프로젝트와의 integration들도 많이 하고&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article4&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-한-달-만에-개발한-하이브리드-앱-50만-사용자-서비스가-되기까지&quot;&gt;[4] 한 달 만에 개발한 하이브리드 앱, 50만 사용자 서비스가 되기까지&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;iOS 하이브리드 앱 개발기&lt;/li&gt;
  &lt;li&gt;웹 프론트앤드 개발자의 앱 개발기 (100% 웹뷰)&lt;/li&gt;
  &lt;li&gt;디자인 하다가 웹 프론트앤드 개발자 &amp;gt; 풀스택으로 나가고자함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;마이크로-앱으로-간보기&quot;&gt;마이크로 앱으로 간보기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;나도 앱 개발 해보고 싶다.&lt;/li&gt;
  &lt;li&gt;내가 만든 건  흔히 말하는 하이브리드앱과는 다르다. (네이티브에 부분부분 webview)&lt;/li&gt;
  &lt;li&gt;대부분의 기능을 웹 기술로 구현하려고 하기 때문에&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;첫-시도&quot;&gt;첫 시도&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아이템미&lt;/li&gt;
  &lt;li&gt;반응형 웹 제작&lt;/li&gt;
  &lt;li&gt;웹뷰 앱 (Single Webview App)
    &lt;ul&gt;
      &lt;li&gt;사람들을 속이고 있다 라는 생각이 듬.&lt;/li&gt;
      &lt;li&gt;심지어 상을 받음. 의미있는 시도였으나 기술적인 한계가 많았음 .&lt;/li&gt;
      &lt;li&gt;터치 인터페이스 오동작 튜딩, UI 개발 복잡도 증가. 피로도 증가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보이는 것들은 앱 같아 보이지만 앱으로써 당연해야 할 것들이 미흡했음&lt;/p&gt;

&lt;h3 id=&quot;하이브리드가-넘어야-할-장애물&quot;&gt;하이브리드가 넘어야 할 장애물&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;view전환 효과
    &lt;ul&gt;
      &lt;li&gt;쓱쓱 넘어가는&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;터치 반응 지연 시간
    &lt;ul&gt;
      &lt;li&gt;웹뷰 터치 반응시 300ms의 지연시간이 존재&lt;/li&gt;
      &lt;li&gt;single tap과 double tap 구분을 위한 설계 의도&lt;/li&gt;
      &lt;li&gt;이를 해결하기 위해 fastclick.js / hammer.js 가 대표적&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;유려한 애니메이션 처리
    &lt;ul&gt;
      &lt;li&gt;css webkit transition translate3d 하드웨어 가속으로는 괜찮지만&lt;/li&gt;
      &lt;li&gt;css/ javascript 는 뚝뚝 끊김 ( 모바일 쥐쥐)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;푸시
    &lt;ul&gt;
      &lt;li&gt;push notification&lt;/li&gt;
      &lt;li&gt;소설로그인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;두번째-시도&quot;&gt;두번째 시도&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;LCC Finder
    &lt;ul&gt;
      &lt;li&gt;반응형 웹으로 제작&lt;/li&gt;
      &lt;li&gt;제이쿼리 기반&lt;/li&gt;
      &lt;li&gt;SPA&lt;/li&gt;
      &lt;li&gt;Cordova, phongap을 이용해서 pushRkwl goruf
서비스로서 가능성 증명 .&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자신감이 생김&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;여러 앱을 만듬.&lt;/p&gt;

&lt;h2 id=&quot;그-후-개선된-구축-방식&quot;&gt;그 후 개선된 구축 방식&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- IonicFramework로 제작
- Angular + cordova
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정리..&lt;/p&gt;
&lt;h3 id=&quot;하이브리드앱&quot;&gt;하이브리드앱&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;구축이빠름&lt;/li&gt;
  &lt;li&gt;텍스트 위주는 네이티브 수준의 퍼포먼스가 보임&lt;/li&gt;
  &lt;li&gt;Cordova CLI 이외에 앱 개발에 필요한 추가 학습 요소가 없음&lt;/li&gt;
  &lt;li&gt;생각보다 Cordova/PhoneGap 플러그인이 많음&lt;/li&gt;
  &lt;li&gt;유명한 SDK 플러그인 지원 (Facebook, Twtitter, Fabric 등)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;해먹남녀-하이브리드-앱-개발&quot;&gt;해먹남녀 하이브리드 앱 개발&lt;/h2&gt;
&lt;h3 id=&quot;상황&quot;&gt;상황&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;한달뒤에 특정 기능을 추가해야함&lt;/li&gt;
  &lt;li&gt;iOS 개발자 채용 장기화&lt;/li&gt;
  &lt;li&gt;내부 인력들 obj-c 개발 경험 전무&lt;/li&gt;
  &lt;li&gt;클라 개발 가능한 웹개발자 1명&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;하이브리드로 아예 새로 만들죠&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;정리&quot;&gt;정리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;꼭 필요하지 않는 UI 표현을 과감히 포기하면 꽤 괜찮은 퍼포먼스&lt;/li&gt;
  &lt;li&gt;Cordova/PhoneGap 플러그인중에 내가 필요한게 없으면 ..
    &lt;ul&gt;
      &lt;li&gt;없다면.. 그건 정말 common하지않은 걸꺼임. 일단 포기를 해보자&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;앱스토어 순위에 패널티가 있지 않을까? &amp;gt; 그런건 나중에 고민하자&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스팩-산정&quot;&gt;스팩 산정&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;카메라&lt;/li&gt;
  &lt;li&gt;푸시&lt;/li&gt;
  &lt;li&gt;소셜 등등&lt;/li&gt;
  &lt;li&gt;다 plugin이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ionic-framework-개발-착수&quot;&gt;Ionic Framework 개발 착수&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;디버깅도 편했음 ( web view에서 하면 되니까 live reload 기능)&lt;/li&gt;
  &lt;li&gt;다양한 ionic에서 제공하는 기능들이 많앗음&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;패키지 설치, 웹브라우저에서 아이폰 안드로이드폰 동시 개발 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;도구는 도구일뿐 내가 잘 만들어야함.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;제작&quot;&gt;제작!&lt;/h2&gt;
&lt;p&gt;화면을 제일 먼저 만듬. - AngularJS Directive&lt;/p&gt;

&lt;p&gt;가장 고민 되었던것&lt;/p&gt;

&lt;p&gt;1.View 전환의 위계문제&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Router를 이용해서 위계를 짜면 앙대..
    &lt;ol&gt;
      &lt;li&gt;이미지 콘텐츠의 비중이 높기 때문에
목록이 길어지니
 페이지 전환이 느려짐.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&amp;gt;  모두 모달로. 위계가 없는 페이지끼리 모달을 위에 띄워서.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;아이폰5 테스트. 6~70 페이지까지 견디고 꺼짐.
그보다 더 가는 유저는 칭찬 해줘야징ㅋ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;제작-2주차&quot;&gt;제작 2주차&lt;/h2&gt;

&lt;h3 id=&quot;앱-내에서-데이터-sync-맞추기&quot;&gt;앱 내에서 데이터 sync 맞추기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;좋아요, 스크랩, 댓글 수 등.&lt;/li&gt;
  &lt;li&gt;sync directive : 데이터 싱크를 수행하는 diriective를 만들어 View에서 반복 호출&lt;/li&gt;
  &lt;li&gt;이 뒤에 불리는 modal에서는 $rootScop 레벨에 데이터를 넣어서 갱신 및 재호출.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;문제&quot;&gt;문제!&lt;/h3&gt;
&lt;p&gt;하다보니 플러그인이 30여개&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;업데이트 하다보면 애플 디자인 가이드라인,정책 변경 등으로 리젝 받게됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기본적으로 해야하는게 안되는게 있음 .&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;동영상 음소거 없애주세요.
백그라운드에서 켜야 하는데 애플정책에 걸려서 따로
다중 파일 같은경우에도 안되서 서버쪽에서 바꿈&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3주차&quot;&gt;3주차&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;성능 최적화&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다양한 디바이스에서 잘 돌아가야함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;목록 &amp;gt; 상세로 갈떄&lt;/li&gt;
  &lt;li&gt;중간에 안뜨는 것들을 허옇게뜨는게 싫어서  앞에서 어느정도 정보를 가져와서 먼저 뿌려주고 appending 되게&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;infinitescroll&quot;&gt;Infinitescroll&lt;/h3&gt;
&lt;p&gt;indicator 를 띄워서
무리한 scroll을 못하게&lt;/p&gt;

&lt;h3 id=&quot;아이폰5&quot;&gt;아이폰5&lt;/h3&gt;
&lt;p&gt;이미지 리사이즈&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;동적으로 이미지가 내려오도록&lt;/li&gt;
  &lt;li&gt;뒤에 뜨는 이미지같은 것들은 원래 블러였는데 완전 작은걸(40px) 받아서 up-scaleing을 처리해서 마치 블러 한것처럼&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;사용자-피드백-대응&quot;&gt;사용자 피드백 대응&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;안된다 안된다 안된다. ㅠㅠㅠ
앱은 한달만에 만들었는데 후대응은 2달이 소요.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실시간-업데이트&quot;&gt;실시간 업데이트&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;CodePush
진짜 급할때&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;클라우드를 통해서 코드를 넣어주고 install&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;용량이 크면 복사하고 다운받는데 오래걸림 : 자주 사용하지 못했음.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ionic  기본 프로젝트 폴더 구조에다가만 다 넣어버리니
1 file of controller
1 file of service&lt;/p&gt;

&lt;p&gt;컴포넌트별로 목록을 나누는게 좋음.&lt;/p&gt;

&lt;h2 id=&quot;cordova핵심---configxml-프로젝트-설정-파일&quot;&gt;cordova핵심 - config.xml 프로젝트 설정 파일&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;꿀기능들이 많음&lt;/li&gt;
  &lt;li&gt;xcode 프로젝트 Info.plist작성 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;코드의-재사용&quot;&gt;코드의 재사용&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;원소스 멀티플랫폼. :  앱과 웹 모두 한번에
순수 웹 개발이다 보니 웹을 만들때 70% 코드 재활용&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;D3js를 이용해서 앱/웹&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;icook&quot;&gt;iCook&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;전용 동영상 플레이어 웹 앱&lt;/li&gt;
  &lt;li&gt;웹에서도 앱에서도 다 재활용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;회고-및-정리&quot;&gt;회고 및 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;네이티브 : 모듈화가 잘 된 Dell&lt;/li&gt;
  &lt;li&gt;내 하이브리드앱 : 용산에서 만든 조립 PC&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;힘듬…&lt;/p&gt;

&lt;h2 id=&quot;방법론&quot;&gt;방법론&lt;/h2&gt;
&lt;h3 id=&quot;제한적인-환경에서-의사-결정-방식&quot;&gt;제한적인 환경에서 의사 결정 방식.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;해결이 가능 한가 &amp;gt; 대안을 찾는다..&lt;/li&gt;
  &lt;li&gt;굳이 꼭 해야하나.. 라는&lt;/li&gt;
  &lt;li&gt;제품이 되는게 중요한것이, 중간에 막히는건 빠른 결정과 불필요한 욕심을 버려야함.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;추천하는-경우&quot;&gt;추천하는 경우&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;작게 시작할 경우&lt;/li&gt;
  &lt;li&gt;현실과 타협을 잘 하시는 분&lt;/li&gt;
  &lt;li&gt;초기 스타트업 대안 기술로 사용하고 싶은 경우&lt;/li&gt;
  &lt;li&gt;Html css javascript 오래 한 분&lt;/li&gt;
  &lt;li&gt;UI 감각 센스가 좋고 꼼꼼하신 분&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;너무 개발자 욕심만 내기에는
돈이 없어지면… 서비스도 없어지는 것
빠르게 만들어야 함..&lt;/p&gt;

&lt;div id=&quot;article5&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;5-5년간의-네이버-웹엔진-개발삽질기-그리고&quot;&gt;[5] 5년간의 네이버 웹엔진 개발/삽질기 그리고…&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;네이버 : 5년전. 지금이든 web portal
    &lt;ul&gt;
      &lt;li&gt;이 의미 : 웹에서 생존하는 회사&lt;/li&gt;
      &lt;li&gt;그 회사가 가진 기술. 컨텐츠, 프론트, 서버기술  등등.. 근본적으로 웹을 표현하는 기술이란..&lt;/li&gt;
      &lt;li&gt;Web platform ( == web engine)&lt;/li&gt;
      &lt;li&gt;우리가 컨텐츠만 올리지말고 코어에 잇는 기술을 직접 만들자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;엔지니어를 모으자
    &lt;ul&gt;
      &lt;li&gt;오페라, firefox, 크롬 사파리 ie&lt;/li&gt;
      &lt;li&gt;한국형… 이라는 단어가 붙으면 하기 싫어짐.. 부정적.&lt;/li&gt;
      &lt;li&gt;하지만, 한국 소프트웨어에 대한 갈증은 계속 잇음&lt;/li&gt;
      &lt;li&gt;os는 왜 못만드냐 db는 왜 못만드냐&lt;/li&gt;
      &lt;li&gt;부제 : 대형 system software의 꿈&lt;/li&gt;
      &lt;li&gt;많은 기술을 가지고 있지만 대형 system software는 우리나라 핵심이 없음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why&quot;&gt;why&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;당위성은 있지만 타당한 이유가 없엇음 .&lt;/li&gt;
  &lt;li&gt;다시 why를 고민
    &lt;ul&gt;
      &lt;li&gt;무엇을 얻고 싶은가. Web platform&lt;/li&gt;
      &lt;li&gt;많은 사업이 플랫폼에 대한 갈증이 잇음.&lt;/li&gt;
      &lt;li&gt;특성상 매우 좋아보이지만 실제로 가지기도 어렵고 정의하기도 어려움.&lt;/li&gt;
      &lt;li&gt;플랫폼 : 성공한 서비스 + API&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;그럼, 웹 플랫폼이 뭐냐
    &lt;ul&gt;
      &lt;li&gt;자체 엔진 : 크롬, 사파리, IE, 파폭&lt;/li&gt;
      &lt;li&gt;변형 엔진&lt;/li&gt;
      &lt;li&gt;UX/ feature : 돌핀 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;web-os&quot;&gt;Web OS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Tizen  : gear ..&lt;/li&gt;
  &lt;li&gt;Chrome&lt;/li&gt;
  &lt;li&gt;Fire OS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;contents&quot;&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Viewer, Renderer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;특화된-것-&quot;&gt;특화된 것 .&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;App&lt;/li&gt;
  &lt;li&gt;Device&lt;/li&gt;
  &lt;li&gt;Browser&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;app-engine&quot;&gt;App engine&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Cross platform&lt;/li&gt;
  &lt;li&gt;hybrid&lt;/li&gt;
  &lt;li&gt;웹기술 기반으로 앱을 만들면 iOS/ Android&lt;/li&gt;
  &lt;li&gt;Cordova/phonegap&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;device&quot;&gt;Device&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Wearables, IoT, Big screen tablet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그래서… 웹 플랫폼을 만든다는 것
저 위에있는것 모든것.. 너무 큰 일..&lt;/p&gt;

&lt;h2 id=&quot;웹-브라우저-엔진&quot;&gt;웹 브라우저 엔진&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;그 중에 네이버랩에서 고른 것&lt;/li&gt;
  &lt;li&gt;엔진은 뭘 쓸까&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;webkit&quot;&gt;Webkit&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;제품 : mac safari&lt;/li&gt;
  &lt;li&gt;단점 : 32bit 최적화 안함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;chromium&quot;&gt;Chromium&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네이버에서 엔진을 바꾸는 앱을 배포하기도 했음. : 네이버 브라우저 엔진 for kitkat&lt;/li&gt;
  &lt;li&gt;Higgs Engine&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mozila&quot;&gt;Mozila&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Gecko&lt;/li&gt;
  &lt;li&gt;Servo라는 차세대 엔진, 장기 프로젝트라 가져다 쓰기 어렵&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;결론-웹킷&quot;&gt;결론. 웹킷&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;결국 이걸로 골랏다!!!&lt;/li&gt;
  &lt;li&gt;그나마 엔지니어가 가장 많았다.
    &lt;ul&gt;
      &lt;li&gt;tizen도 웹킷 베이스 기능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;할수 있는게 더 많다.
    &lt;ul&gt;
      &lt;li&gt;아키텍쳐가 잘 되어있고&lt;/li&gt;
      &lt;li&gt;windows와 android port 부재.없음 .&lt;/li&gt;
      &lt;li&gt;새로운 cross platform 시도&lt;/li&gt;
      &lt;li&gt;경량화 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;네이버에서-한것&quot;&gt;네이버에서 한것&lt;/h2&gt;
&lt;h3 id=&quot;cross-platform&quot;&gt;cross platform&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;젤 처음한게 android/windows webview&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thin-client&quot;&gt;thin client&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;마리오넷, 아마존 실크 등 다양한 회사가 시도 햇으나 없어짐&lt;/li&gt;
  &lt;li&gt;연산은 서버에서 그림을 그리는 device에 냅두고
    &lt;ul&gt;
      &lt;li&gt;스몰 디바이스에서도 리치 해진다.&lt;/li&gt;
      &lt;li&gt;서버 한대가지고 하면 되니까 다양한 디바이스에서 seamless handoff&lt;/li&gt;
      &lt;li&gt;결국은 잘 안됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;로드맵
Higgs engine을 만들고 웹킷 &amp;gt; 브라우저 &amp;gt; 디바이스 &amp;gt; 앱앤진 &amp;gt; 웹 OS까지 만들자!!!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;브라우저&quot;&gt;브라우저&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;처음 시작은 next generation browser를 만들자!&lt;/li&gt;
  &lt;li&gt;기본적인 task만 뽑아도 엄청남.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;네이버-웹-브라우저-엔진--sling&quot;&gt;네이버 웹 브라우저 엔진 : Sling&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;다윗이 던진 돌 달린 그 무기가 Sling&lt;/li&gt;
  &lt;li&gt;크롬과 싸우기 위해&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;onig&quot;&gt;ONIG&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;자바로만 짜면 C++쪽도 해결되도록 (cross platform)&lt;/li&gt;
  &lt;li&gt;Posix&lt;/li&gt;
  &lt;li&gt;웹킷 개발에 크로스플랫폼을 고려&lt;/li&gt;
  &lt;li&gt;Swig로&lt;/li&gt;
  &lt;li&gt;크로스 플랫폼 개발에 많은 시간과 노력을 절약.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;크롬 좋네
파이어 폭스에 Mor2D가 좋다
MS IE의 chakracore가 좋다.&lt;/p&gt;

&lt;h2 id=&quot;web-browser&quot;&gt;Web browser&lt;/h2&gt;
&lt;h3 id=&quot;데스크탑-브라우저&quot;&gt;데스크탑 브라우저&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;SLING User Agent : 자꾸 맥이라고 나오고(윈도우 인데) , (옛날) Windows Safari로 인식. Unknown
    &lt;ul&gt;
      &lt;li&gt;QA를 해봣더니 이상한 사이트들이 많이 나옴.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Open source (webkit) bugs
    &lt;ul&gt;
      &lt;li&gt;Plugin support&lt;/li&gt;
      &lt;li&gt;javaScoptCore : javascritp엔진&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;결론-크로미움&quot;&gt;결론. 크로미움.&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;결국 모든걸 내려놓고 크로미움 베이스로……&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;제품은 기술을 자랑하는 창구가 아님. 사용자가 쓰는 것.&lt;/li&gt;
  &lt;li&gt;사이트가 ua를 잘못 확인해서 사이트가 이상하게 나온다던가..&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;장점-2&quot;&gt;장점&lt;/h3&gt;
&lt;p&gt;커버리지가 높음.
브라우저 자체의 베이스라인 이 높음. (알아서 해주는게 많음)
크로미움에도 자체 테크를 넣을 수 있음.&lt;/p&gt;

&lt;p&gt;슬링을 버리지 말고&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;멀티엔진으로. sling tab에서 써볼수 있음.&lt;/li&gt;
  &lt;li&gt;웹킷 을 사용하는 사람들을 위해&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whale&quot;&gt;Whale&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;키노트에 나왔던것&lt;/li&gt;
  &lt;li&gt;제품.&lt;/li&gt;
  &lt;li&gt;빠르고 가벼움 (크롬) -&amp;gt; 다양함, 기술 최신성, 커스터마이징&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;고민&quot;&gt;고민&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;익숙함을 넘을까? ie를 생각해보면..&lt;/li&gt;
  &lt;li&gt;체감할 수 있는 효익은 ?&lt;/li&gt;
  &lt;li&gt;사용자가 정말 원하는 것?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;multitaking 을 계속 강요당햇던것 같아.. 이제 그 다음은 ?&lt;/p&gt;

&lt;h3 id=&quot;omni-taking&quot;&gt;Omni-taking&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;내가 한눈에서 처리할수 잇게.&lt;/li&gt;
  &lt;li&gt;메인 테스크가 돌아가는걸 한 컨텍스트 안에서&lt;/li&gt;
  &lt;li&gt;Whale 의 큰 목표&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;투 매니 탭스 (over-tabber)
	- 브라우저에서 탭 넘나 많이 사용하고 잇는거
	- 다 쓰고 잇지도 않은데 왜 그렇게 켜놓고 잇을까?
	- Ex) 쇼핑 하다보면 새로운 탭이 열고 열고
	- EX) 좋은 뉴스라면서 누가 보내주면 일단 올려두고 마음의 안식으로 언젠가 봐야지 하면서 계속 탭을 늘려가게됨.&lt;/p&gt;

&lt;h2 id=&quot;whale-space&quot;&gt;Whale space&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;창 분할처럼 보인다&lt;/li&gt;
  &lt;li&gt;index 페이지와 contents 페이지&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;왼쪽에서 클릭하면 오른쪽에 보임임&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;학습을 시킴 ( 2번 을 누르면 2번이 오늘쪽에 뜸 » 2쪽 누르면 왼쪽이 바뀌도록 )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;밸리&quot;&gt;밸리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;담아놓겠다.&lt;/li&gt;
  &lt;li&gt;관심 있는것, 관심 가질 것, 좋아요 담아두기&lt;/li&gt;
  &lt;li&gt;계속 업데이트 예정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;퀵서치&quot;&gt;퀵서치&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;단순한거 확인할때 탭이 늘어남&lt;/li&gt;
  &lt;li&gt;원하는 정보만 찹이 뜨거나 스페이스 한쪽에서 나오도록&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;사이드바&quot;&gt;사이드바&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;퀵서치와 다른 것.&lt;/li&gt;
  &lt;li&gt;문맥 안에서 누구인지 (동명이인 확인) context 서치 결과&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스마트-팝업&quot;&gt;스마트 팝업&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;too many 팝업
    &lt;ul&gt;
      &lt;li&gt;팝업 블락커를 사용할수 있음.&lt;/li&gt;
      &lt;li&gt;근데 불편한 일들이 잇음 로그인창이라던가 진짜 유용한 정보를 놓친다던가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;웹브라우징을 하면 자동으로 사라지고 누르면 해당 팝업만  팝업이 뜸.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;techlogies&quot;&gt;techlogies&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;파파고&lt;/li&gt;
  &lt;li&gt;텍스트 투 스피치&lt;/li&gt;
  &lt;li&gt;Js engine 튜닝&lt;/li&gt;
  &lt;li&gt;메모리 파워 세이빙 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;장점-3&quot;&gt;장점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다음이라고쓰면 바로 사이트로 연결해줌&lt;/li&gt;
  &lt;li&gt;번역기능 등
이메일도 번역해줘&lt;/li&gt;
  &lt;li&gt;성인 사이트 블락은 옵션으로&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;디자인 : 인간적인 모던함, 좀 더 따뜻하게
기존 : 차가운 툴&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;http://whale.naver.com/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Big Pregmentation 로 만들자&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;질문-2&quot;&gt;질문&lt;/h2&gt;

&lt;h3 id=&quot;q-ua가-어떻게-나오나요&quot;&gt;Q. UA가 어떻게 나오나요&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;크롬. 웨일&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;q-크롬과의-동기화&quot;&gt;Q 크롬과의 동기화&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;그대로 동기화 됨&lt;/li&gt;
  &lt;li&gt;Extention&lt;/li&gt;
  &lt;li&gt;크롬 익스텐션 풀로 그대로 쓸 수 잇다 .&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article6&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;6-딥러닝을-활용한-이미지-검색-포토요약과-타임라인&quot;&gt;[6] 딥러닝을 활용한 이미지 검색: 포토요약과 타임라인&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;이론보다는 어떻게 활용했는지 초점을 맞춰서&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이미지-검색&quot;&gt;이미지 검색&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;search by image : 개발중&lt;/li&gt;
  &lt;li&gt;search by text : 텍스트 질의어로 이미지 검색
    &lt;ul&gt;
      &lt;li&gt;이미지에 대한 description이 잘 되어 잇어야 한다.&lt;/li&gt;
      &lt;li&gt;어케하면 더 잘 보여 줄 수 있을까?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;이미지-description&quot;&gt;이미지 description&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이미지 인식, 언어 처리 기술 활용
    &lt;ul&gt;
      &lt;li&gt;딥러닝을 이용하자&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;품질 개선 사례&lt;/li&gt;
  &lt;li&gt;인터페이스&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이미지-딥러닝&quot;&gt;이미지 딥러닝&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Convolution Neural Network를 활용&lt;/li&gt;
  &lt;li&gt;Topic Modeling, 데이터 분석&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;문제-정의&quot;&gt;문제 정의&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;대규모 데이터 및 이미지 대상 문제 정의&lt;/li&gt;
  &lt;li&gt;ex) 블로그 1개의 제목, n개의 이미지, m개의 문장 : 12억건 (1년 이내에 생성/수정된 블로그)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;이미지-검색-오버뷰&quot;&gt;이미지 검색 오버뷰&lt;/h3&gt;

&lt;h2 id=&quot;deep-learning의-역할&quot;&gt;Deep learning의 역할&lt;/h2&gt;
&lt;h3 id=&quot;문서분석&quot;&gt;문서분석&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;하나의 제목/이미지와 텍스트&lt;/li&gt;
  &lt;li&gt;이미지와 텍스트 거리를 측정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;메타-텍스트-정제&quot;&gt;메타 텍스트 정제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이미지 어노테이션 과정&lt;/li&gt;
  &lt;li&gt;이미지와 텍스트 페어&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자체 엔진으로 질의 -&amp;gt; 도큐먼트 셋 &amp;gt; 텍스트 + 이미지 &amp;gt; 이미지 셋을 통해 &amp;gt; (딥러닝을 통한) 딥 피처 &amp;gt; 이미지 벡터 리스트 &amp;gt; 비슷한 이미지를 묶기 위해 클러스터링 알고리즘 &amp;gt; 텍스트 모델링 &amp;gt; 각 클러스터에 맞는 모델링  &amp;gt; 대표적인 워드 선정&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;특정 스팟을 해보면.. ex) 미용실, 명소
    &lt;ul&gt;
      &lt;li&gt;컬러, 드라이, 클리닉, 염색&lt;/li&gt;
      &lt;li&gt;탁사정 정자 안내판 소나무,&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;이미지태깅&quot;&gt;이미지태깅&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;비슷한 이미지 어노테이션 과정&lt;/li&gt;
  &lt;li&gt;위에는 unsuoervused 가 아닌 supervised leanrning 즉, 사전 학습된 모델 을 이용해서 이미지 어노테이션&lt;/li&gt;
  &lt;li&gt;만오천개 &amp;gt;어떤 클래스로 분류되는지&amp;gt; 이 블로그 사진들이 어디론가 분류 될꺼고 &amp;gt; 텍스트 모델링 &amp;gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정답-도구&quot;&gt;정답 도구&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;사람의 힘에 의해서 이미지 description이 들어가는 것&lt;/li&gt;
  &lt;li&gt;정답 데이터를 직접 넣는게 부끄러웠지만.. 하다보니 딥러닝에서는 이 단계도 중요하다&lt;/li&gt;
  &lt;li&gt;Evaluator가 특정 질의를 해보고 &amp;gt; 그 검색에 대한 딥피처를 뽑고 &amp;gt; 유사도 순으로 &amp;gt; 트레이닝 데이터로 사용되고 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기존 결과중에 괜찮은 것들을 체크하게 함.
그것들을 딥피처를 뽑아내서 좋은 결과가 어떤건지를 찾아냄.&lt;/p&gt;

&lt;h2 id=&quot;딥러닝을-이용한-이미지-검색-사용자-인터페이스-개선&quot;&gt;딥러닝을 이용한 이미지 검색 (사용자 인터페이스 개선)&lt;/h2&gt;

&lt;h2 id=&quot;포토요약&quot;&gt;포토요약&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;비슷한 이미지를 묶어준다.&lt;/li&gt;
  &lt;li&gt;맛집뷰. 포토 요약 전에 되던 서비스  » 좀더 개선하고 싶다.» 분석하여 이미지를 묶어주자&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기술&quot;&gt;기술&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;svm를 이용해 분류&lt;/li&gt;
  &lt;li&gt;음식 클래스 같은 경우에는 더 자세히 클러스터링 하고 싶다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대표 키워드(자체 언어처리 이용)를 추출하여 이 워드를 텍스트 마이닝과 통계 분석을 이용해서 이 클러스터를 대표할 키워드를 꺼냄.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;랭킹/서비스까지 확장
    &lt;ul&gt;
      &lt;li&gt;서비스 별로 서로 다른 클러스터 랭킹&lt;/li&gt;
      &lt;li&gt;식당 : 다출처 우선 (많이 언급한곳)&lt;/li&gt;
      &lt;li&gt;미용실 : 시술사진 (어떤 시술을 하는지)&lt;/li&gt;
      &lt;li&gt;명소 : 대표 이미지 유사도 우선 (이미 대표사진을 가지고 잇으니 그 명소와 가장 가까운 것들을)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vggnet-finetuning&quot;&gt;VGGNet Finetuning&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Food101데이터 : 음식사진 데이터셋&lt;/li&gt;
  &lt;li&gt;요리가 확대된 이미지에대해서는 품질이 좋음&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;요리가 아닌 이미지에 대해서는 클러스터링 품질이 좋지 않음. (간판이라던가..)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;이미지 분석과 텍스트 마이닝 조합이 강력하다.
딥러닝을 잘 이용하면 적은 데이터로도 학습을 통해 좋은 결과를 얻을 수도 있다.
Unsupervised &amp;lt;-&amp;gt; supervised learning을 이용하여 사람의 손을 안타더라도 트레이닝이 계속 되도록&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;타임라인&quot;&gt;타임라인&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;연예인 사진을 좋게 보면 얼마나 좋을까로 시작&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex) 인물과 식당.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;인물 : 같은날, 같은 장소가 찍어도 다르다&lt;/li&gt;
  &lt;li&gt;식당 : 시간이 지나도 같다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이벤트를 타임 라인으로&lt;/p&gt;

&lt;p&gt;같은날/같은 장소면 머리나 스타일이 비슷비슷&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미지를 이벤트 별로 묶어서 시간순으로 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;스타검색/이미지 서비스로 나가는중&lt;/p&gt;

&lt;h1 id=&quot;이벤트를-찾는것-event-detection&quot;&gt;이벤트를 찾는것 event detection&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;소셜 이벤트 디텍션&lt;/li&gt;
  &lt;li&gt;같은 이벤트로 문서를 클래스로 묶어주는것&lt;/li&gt;
  &lt;li&gt;어떤 이벤트를 보여줄 것인가&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이벤트&quot;&gt;이벤트&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;의미가 있는 event&lt;/li&gt;
  &lt;li&gt;ex) 시상식, 공항패션, » 고유한 성격이 잇을것
(X) 열애설 » 대부분 프로필 사진을 가져다 놓는 경우가 많으므로 큰 의미;가 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex) 포토뉴스 데이터
	- 제목이 짧고, n개의 이미지, m개의 문장
	- 서로 다른 어휘, 기자님의 사소한 실수(오타, 이름 헷갈리는것) » 이런 노이즈도 감안해야함&lt;/p&gt;

&lt;h2 id=&quot;데이터-전처리&quot;&gt;데이터 전처리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;데이터 클랜징  : 짧은 문장에서 의미있는 단어를 뽑아낸다 (네이버 자체 엔진을 이용)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;분류&quot;&gt;분류&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;메타데이터, 본문의 단어와 기존에 정의된 이벤트와 매핑&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Doc2Vec feature
    &lt;ul&gt;
      &lt;li&gt;같은 문맥안에서 같은 의미&lt;/li&gt;
      &lt;li&gt;같은 이벤트라면 같은 의미가 잇겟지?&lt;/li&gt;
      &lt;li&gt;문제 발생! 이벤트는 같아도 기사의 목적이 다른 경우가 있음. ( 이미지만 목표기 때문에 이벤트가 같다면 묶고 싶다)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Visual Feature
    &lt;ul&gt;
      &lt;li&gt;같은 이벤트라면 옷차림/스타일이 비슷하지 않을까?&lt;/li&gt;
      &lt;li&gt;다른 이벤트라도 비슷하게 입을 수 있다&lt;/li&gt;
      &lt;li&gt;Ex) 시상식 - 남자 다 턱시도 입음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;중요-task&quot;&gt;중요 task&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;단어 자체가&lt;/li&gt;
  &lt;li&gt;이미지 유사도&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;다양한-사진을-어떻게-정리하나&quot;&gt;다양한 사진을 어떻게 정리하나&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Visual feature  : AlexaNet 이용&lt;/li&gt;
  &lt;li&gt;이걸 가지고 클러스터링 (k-means clustering)&lt;/li&gt;
  &lt;li&gt;처음엔 얼마나 클러스터링 될지 모르므로 일단 임의의 k를 잡고 &amp;gt; 중심과의 거리가 멀어지면 삭제하고 재 정의한 central로&lt;/li&gt;
  &lt;li&gt;DB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;잘 묶이긴 하는데 너무 비슷해서 중복되고 지루하다.&lt;/p&gt;

&lt;p&gt;어디까지 보여줘야 하나가 중요해짐 » 랭킹이 중요&lt;/p&gt;

&lt;p&gt;최대한 다양한 리소스로 랭킹을 묶자.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;클러스터 간의 랭팅&lt;/li&gt;
  &lt;li&gt;각 클러스터 내에 잇는 것들로도 랭킹&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이미지 설명문 찾기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;클러스터의 가장 중심에 잇는 문장을 선정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스&quot;&gt;서비스&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이벤트 카드&lt;/li&gt;
  &lt;li&gt;이벤트 데이트&lt;/li&gt;
  &lt;li&gt;디스크립션&lt;/li&gt;
  &lt;li&gt;이미지  : 너무 많으면 피로도 증가 및 최대 30개 정도로 제한에서  ( 너무 겹치면 비쥬얼 디텍팅을 통해서 정제해주고 잇음)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Event Card 역시 search by text&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;단어와 메타데이터를 이용해 clustering keyword를 찾을 수 있다 .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;서비스를 만들고 싶엇고 그걸 하기 위해서 어떤 기술을 있는지&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;가장 좋은 성능을 내는 기술을 선정하고 활용하는가 에 집중해야한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;짧은 데이터, 오류가 많은 데이터를 이용해보았다.&lt;/li&gt;
  &lt;li&gt;딥러닝/딥피처를 어떻게 활용하느나에 따라 텍스트 /이미지&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article7&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;7-딥러닝과-강화-학습으로-나보다-잘하는-쿠키런-ai-구현하기&quot;&gt;[7] 딥러닝과 강화 학습으로 나보다 잘하는 쿠키런 AI 구현하기&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;딥러닝 + 강화학습&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;딥러닝&quot;&gt;딥러닝&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;뉴럴 네트워크: 인간의 뇌구조를 활용하여 이용하는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;강화-학습&quot;&gt;강화 학습&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Reinforcement learning&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;학습&quot;&gt;학습&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;지도학습
    &lt;ul&gt;
      &lt;li&gt;학습 데이터가 있을때 정답 ㅇㅇ&lt;/li&gt;
      &lt;li&gt;분류&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;비지도 학습
    &lt;ul&gt;
      &lt;li&gt;학습데이터가 잇는데 정답이 없음&lt;/li&gt;
      &lt;li&gt;상관 관계를 학습&lt;/li&gt;
      &lt;li&gt;클러스터링&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;강화 학습
    &lt;ul&gt;
      &lt;li&gt;분류도 군집도도 아닌것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ex)  로봇 걷게 하기&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;막 랜덤으로 관절을 움직이게 되면 못움직임 계속 시행착오를 통해 배운다 &amp;gt; 정답이 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;목표&quot;&gt;목표&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;쿠키를 오래 뛰게 하고 점수를 많이 따도록&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장애물을 피하고 쿠키를 먹기 위해 뛰고&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;행동 주체 agent  = 쿠키
행동을 취하는 공간 environment = 바닷가 들판 등
환경이 주체에게 주는 영향 State » 행렬로 만들 수 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이런 state를 통해 행동을 결정한다.
State &amp;gt; 뉴럴 네트워크로 들어오고
가장 적절한 행동하는것을 뽑아낸다  ex) 점프를 한다.
이를 통해 Action을 하게되고 점수를 타게되면 양수의 리워드를 주고 틀리게 햇으면 음수의 리워드를 돌려주어 학습 시킨다.&lt;/p&gt;

&lt;p&gt;체력이 깍이게 되면 음수 리워드를 줘서 다른 행동을 예측하도록 학습 시킨다.&lt;/p&gt;

&lt;p&gt;목표를 달성할때까지 계속 .&lt;/p&gt;

&lt;p&gt;DL + RL로 뭘 했을까?
alphaRun이라고 하는 것을 만듬 .&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;계기 : 알파고를 보고 알파런 프로젝트를&lt;/li&gt;
  &lt;li&gt;기술발전이 있다면 이걸 쿠키런과 융합시키면 더&lt;/li&gt;
  &lt;li&gt;스스로 달릴수 잇다 &amp;gt; 게임 밸런싱을 자동으로 할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;밸런스 팀&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;게임 밸런스를 맞추기 위해&lt;/li&gt;
  &lt;li&gt;다양한 쿠키 , 펫, 보물, 맵을 가지고 잇음 -&amp;gt; 다양한 조화가 필요&lt;/li&gt;
  &lt;li&gt;평균 플레이 4분 &amp;gt; 모두 다 하면 5040일이 걸림&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AI가 플레이를 하면&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;평균 플레이 4초 : 단일 프레임에 제한시간이 잇지 않음
1개 6프로세스면 14일이 걸림&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;지탱하는-기술들&quot;&gt;지탱하는 기술들&lt;/h1&gt;
&lt;p&gt;Q(s,a) = 기대되는 미래의 가치 Q
Action = 점프, 슬라이드, 가만히
Q 가 가장 높은 행동을 을 선택한다.&lt;/p&gt;

&lt;p&gt;쿠키런의 가치 : 점수&lt;/p&gt;

&lt;p&gt;Q &amp;gt; 쿠키런의 점수 . 미래의 점수의 합&lt;/p&gt;

&lt;p&gt;Loss를 계산. 더블큐 러닝&lt;/p&gt;

&lt;p&gt;가끔 하나씩 놓치기도 하고 가끔 이상한 행동을 함. (가만히 잇으면 되는데 그냥 막 뜀)
	2. 더블 큐 러닝&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;미래의 가치&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;loss = (예측 - 정답 )제곱 &amp;gt; 0에 가깝도록 학습
학습 처음에는 거의 0에가깝다(Q값이 둘다 0에 가깝) 가 예측값이 높아지고 정답도 올라가게 된다.&lt;/p&gt;

&lt;p&gt;우리가 예상하는것보다 더 높아짐 Q는 계속 발산하게 되는데 어째뜬 로스는 계속 작아져서 예상 못하는데로 튀게 됨&lt;/p&gt;

&lt;p&gt;더블큐 러닝 : 너무 커지지 않도록 사용되는 기술&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Q값은 확실히 작지만, 점수는 확실히 높다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;오오오 잘되 근데 새로운 랜드로 들어가니 더 다양한 장애물과&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;속도가 빨라지면 막 점프함. ( 이런 경우가 학습 경우가 적어서 잘 못함)&lt;/li&gt;
  &lt;li&gt;보너스 타임 그냥 막 쩜프만함.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;듀얼링 네트워크
    &lt;ul&gt;
      &lt;li&gt;막 상황이 바뀌어서 정확한 Q를 예측하기 어려울때  ( 10인지 1인지)&lt;/li&gt;
      &lt;li&gt;꼭 정확하게 예측할 필요가 있을까?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;슬라이드를 x라는 기준값을 줫을때 점프를 했을때 x+1인지 가만히 있을때 x+2인지를 확인해서 대강적으로 액션을 취한다.&lt;/p&gt;

&lt;p&gt;하나의 기준을 두고 그 차이를 비교하는게 더 쉽겟다&lt;/p&gt;

&lt;p&gt;Q = V + A(s,a)&lt;/p&gt;

&lt;p&gt;딥 큐네트워크 + 듀얼링 네트워크 하나를 더 추가
V가 예측을 잘 못하더라도 A가 잘해주게 되면 잘 학습 할 수 있음&lt;/p&gt;

&lt;p&gt;Max 듀어링을 선택함.
상황이나 뭐 다른거에 따라 달라질 수 있으므로 이게 정답은 아니다.&lt;/p&gt;

&lt;p&gt;그래도 안된다면&lt;/p&gt;
&lt;h1 id=&quot;엔지니어링&quot;&gt;엔지니어링&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;하이퍼파라미터 튜닝
    &lt;ul&gt;
      &lt;li&gt;학습에 필요한 파라미터들을 바꿔본다.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;네트워크 바꿔보기, 옵티마이저 바꾸기, 리워드식 바꾸기&lt;/li&gt;
      &lt;li&gt;젤리를 먹엇느냐가 아니라 젤리를 얼마나 놓쳣느냐 등&lt;/li&gt;
      &lt;li&gt;70개가 넘는 하이퍼파라미터들이 나왓다.
    - 너무 많으면.. 과유불급
    - 성능은 올릴수 잇지만, 끝이 없어서 힘듬
    - 고정 시킬수 잇는 변수는 정해서 건드리지 않는다.
    - 랜드, 쿠키를 정해두고,  하이퍼 파라미터를 정리하고 돌림.
    - 텐서보드를 사용하는군&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;디버깅
    &lt;ul&gt;
      &lt;li&gt;딥러닝은 디버깅이 어렵다.&lt;/li&gt;
      &lt;li&gt;네트워크가 정확히 어케 판단하게 된건지 알수 없다.&lt;/li&gt;
      &lt;li&gt;쿠키가 이상하게 행동하는데 이유라도 알려줬으면….&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;state 히스토리를 남겨둔다.&lt;/li&gt;
  &lt;li&gt;듀얼링 네트워크 값 V, A를 로그를 남겨둔다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex) 해결한 예제&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;모든 액션에 대한 Q값이 0이엿음.&lt;/li&gt;
  &lt;li&gt;state 값을 바꿔가면서 출력을 해봄 &amp;gt; QV가 바뀌지 않음.&lt;/li&gt;
  &lt;li&gt;Activation function을 None으로 해줌. Default nn.relu&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;시도-해봣다면-좋앗을-디버깅&quot;&gt;시도 해봣다면 좋앗을 디버깅&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;state를 실시간으로 수정하면서 &amp;gt; 변화보기
Ex) 젤리를 쿠키 앞에 그려보며 변화를 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;exploration을-어떻게-하고-있는지&quot;&gt;Exploration을 어떻게 하고 있는지&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Exploration : 액션을 랜덤으로 해보는 것. 탐험을 해보는 것. 이걸 해봣더니 더 점수가 좋으면 그걸로 학습한다&lt;/li&gt;
  &lt;li&gt;Reward는 제대로 학습 될 수 있도록 정해져 있는지&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ex) 부스트 아이템을 먹는지.  리워드가 없으니 안먹는다. 같은 리워드를 줬다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;반복되는 실험의 학습 시간을 단축 시켜야 한다.&lt;/li&gt;
  &lt;li&gt;-&amp;gt; 학습한 네트워크의 weight릏 저장해 나중에도 그 weight을 쓰도록&lt;/li&gt;
  &lt;li&gt;-&amp;gt; 더 높은 점수를 얻을 확률이 높다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Ensumble  method 앙상블 메소드
    &lt;ul&gt;
      &lt;li&gt;여러가지 실험을 통해 얻은 모델들에게 같은 S를 넣어서 그것들을 조합해서&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;하나의 실험으로 만들어진 여러 weight를 동시에 로드하면 ?
Ex) 가장 잘한건 보너스 타임을 잘햇는데 두번째 잘한건 젤리를 잘 먹는다.
하나의 실험에서 얻은 것이지만&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;텐서플로에서는 앙상블 메소드를 사용하기가 어렵&lt;/p&gt;

&lt;p&gt;In 텐서플로&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;왜냐하면 세션 아래에 그래프가 있는데&lt;/li&gt;
  &lt;li&gt;같은 이름의 노드는 하나의 그래프에 듀개 이상 존재 할수 없음.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그럼 그래프 두개를 그린다? 이것도 안대
한 세션에서는 하나의 그래프만 존재&lt;/p&gt;

&lt;p&gt;고로 세션2 그래프 2개 로 해야한다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;텐서플로 코드 예제&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;이러한 방식으로 보너스타임만도 학습.
네트워크 두개를 만들어 보너스 타임일때 일단 게임 모드일때따로따로
보너스타임에는 장애물이 없으니 한번만 학습 시켜도 댐. (시간 단축)&lt;/p&gt;

&lt;h2 id=&quot;밸런싱-자동화-하기&quot;&gt;밸런싱 자동화 하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;쿠키를 바꿔가면서&lt;/li&gt;
  &lt;li&gt;펫을 바꿔가면서 성틍 차이를 확인
사람이 하면 한시간 &amp;gt; 1분내로 결과를 뽑아 낼 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article8&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;8-backend-개발자의-neural-machine-translation-개발기&quot;&gt;[8] Backend 개발자의 Neural Machine Translation 개발기&lt;/h1&gt;

&lt;h2 id=&quot;기계-번역&quot;&gt;기계 번역&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Rule based machine translation (RBMT)
    &lt;ul&gt;
      &lt;li&gt;두 언어의 문법 규칙 기반으로 &amp;gt; 성문 문법 을 직접 프로그래밍&lt;/li&gt;
      &lt;li&gt;그게 쉬운 일이 아님.&lt;/li&gt;
      &lt;li&gt;한국어 영어, 한국어 프랑스, 한국어 일어 » 확장성 어려움&lt;/li&gt;
      &lt;li&gt;기계번역 초기에는 이렇게 많이 사용
        &lt;h2 id=&quot;통계-기반-번역-smt&quot;&gt;통계 기반 번역 SMT&lt;/h2&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;한국어 번역, 영어 번역을 동시에 나타나는 것을 통계내어서 번역을 수행&lt;/li&gt;
  &lt;li&gt;언어 구조가 비슷한 경우 좋은 성능을 내고 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;뉴럴-머신-트랜스레이션-nmt&quot;&gt;뉴럴 머신 트랜스레이션 (NMT)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;뉴럴 네트워크 기반의 머신 트렌스레이션&lt;/li&gt;
  &lt;li&gt;한국어 영어에도 좋은 성능을 내고 잇음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nmt-구조&quot;&gt;NMT 구조&lt;/h3&gt;
&lt;p&gt;입력 &amp;gt; end of sentence (EOS) 넣고&lt;/p&gt;

&lt;p&gt;Encoder와 Decoder로 구성&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;벡터화된 문장을 타겟문장으로 디코딩&lt;/li&gt;
  &lt;li&gt;반복반복&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;주요-nmt&quot;&gt;주요 NMT&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Stacked LSTM  : Google Brain팀&lt;/li&gt;
  &lt;li&gt;RNNEncDec / RNN Search  : NYU 조경현 교수님
가장 많이 참고되고 가장 논문에 많이 레퍼러 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개발에-앞서-어떻게-학습하였나&quot;&gt;개발에 앞서 어떻게 학습하였나&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Word2Vec
    &lt;ul&gt;
      &lt;li&gt;옛날엔 괜찮은 뉴럴 네트워크가 없엇음&lt;/li&gt;
      &lt;li&gt;워드를 벡터화 시킨다.&lt;/li&gt;
      &lt;li&gt;앞 단어와 뒤 단어를 학습해 뒤로올 단어를 예측 확률
극대화 시키게 그 과정에서 Word Vetor들이 조정 됨 &amp;gt; word embedding&lt;/li&gt;
      &lt;li&gt;Man - woman&lt;/li&gt;
      &lt;li&gt;Uncle - aunt&lt;/li&gt;
      &lt;li&gt;King - queen&lt;/li&gt;
      &lt;li&gt;이와같이 비슷한 관계를 가진 단어들 = same vector&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bilingual word embedding을 하고 싶엇음
Uncle - 이모  이렇게 하고 싶엇는데 잘 안됨 »그래도 뉴럴 네트워크 워드 벡터에 대해서 이해를 하게 되었음&lt;/p&gt;

&lt;p&gt;KSTM LM
	- 네이버에서 만든 랭기지 모델
	- 랭기지 모델 : 문장의 생성 확률 분포
		○ Real world의 문장 분포를 기반으로 확률 분포 계산
		○ 엄마는 아기를 매우 (사랑한다)
	- 이 경우 너무 많아.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;N gram language model
N-1개의 이전 단어 열을 이용해 다음 단어를 예측하는 방법&lt;/p&gt;
      &lt;ul&gt;
        &lt;li&gt;다음 올 단어에 대한 확률을 근사값으로 계산 할 수 있다.&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;RNN 이 적용되기 시작
문장의 단어가 순차적으로 들어가면 네트워크로 반복적으로 들어가게되고 다음 나올 단어를 예측.&lt;/p&gt;

&lt;p&gt;LSTM : long shor term memory
1보다 작은 값을 자꾸 계속 하게되면 0으로 수렴해서 희석되서 사라짐  » LSTM을 통해 완화됨.
	- 단기 기억을 오랫동안
	- 구성 : input gate
	- / forget gate
	- / output gate
	- / cell
	- , hidden output&lt;/p&gt;

&lt;p&gt;소프트맥스 레이어를 더 올려서&lt;/p&gt;

&lt;h2 id=&quot;개발-과정&quot;&gt;개발 과정&lt;/h2&gt;
&lt;p&gt;Stacked LSTM 기반 NMT&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;인코더와 디코더
디코더에는 가장 상위에 softmax layer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nmt-vs-lstm&quot;&gt;NMT vs LSTM&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;NMT
    &lt;ul&gt;
      &lt;li&gt;인코더 + 디코더 구성되어있음&lt;/li&gt;
      &lt;li&gt;변형 LSTM&lt;/li&gt;
      &lt;li&gt;인코더 :&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;개발하려고 할떄… 막막해서 찾아보니 슈스케? 분의 동영상을 봄&lt;/p&gt;

&lt;h4 id=&quot;1단계---임력-문장-재생성-하기--입력-문자를-인코딩하고복호화-되도록-다시-디코딩&quot;&gt;1단계  : 임력 문장 재생성 하기 : 입력 문자를 인코딩하고복호화 되도록 다시 디코딩&lt;/h4&gt;
&lt;p&gt;– &amp;gt; 영어로 인코딩 한다음에 독어로 디코딩하니 번역도 되더라
– &amp;gt; 만약 인코딩하는 부분이 그림이라면 description이 디코딩 될 것.&lt;/p&gt;

&lt;h4 id=&quot;2단계--small-parallel-corpus로-작은-nmt만들기&quot;&gt;2단계 : Small parallel Corpus로 작은 NMT만들기&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;작문에 취약
-작은 코퍼스는 괜찮지만 대용량은 퍼포먼스가 안나옴&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3단계--퍼포먼스-향상을-위한-개선&quot;&gt;3단계 : 퍼포먼스 향상을 위한 개선&lt;/h4&gt;
&lt;p&gt;학습속도를 올리기 위해 multi-GPU (ref stacked LSTM 논문에 나오는데로 구현해봄)
멀티 패러렐 로  돌리면 학습시간 단축 .&lt;/p&gt;

&lt;p&gt;계산량이 가장 많이 드는건 softmax쪽
5만개 단어 - 1000차원 == 매트릭스 5만 * 1000
이 연산을 하려면 맥트릭스 연산의 크기는
매트릭스 5만 * 1000  * (1000 * 1 ) 이 필요함.&lt;/p&gt;

&lt;p&gt;–&amp;gt; Vocab 개수 증가하면 계산량 증가&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;해결책
    &lt;ul&gt;
      &lt;li&gt;일부만 샘플링 하여 학습&lt;/li&gt;
      &lt;li&gt;텐서플로에서는 타워 모델 / 발표자는 요거 안쓰고 샘플링 방식&lt;/li&gt;
      &lt;li&gt;계산량도 줄이고 , 실제로 결과값도 잘 나왓다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####4단계 : Attention&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;작문에 여전히 취약점이 있음.
    &lt;ul&gt;
      &lt;li&gt;Attention Layer를 추가  b4 softmax&lt;/li&gt;
      &lt;li&gt;타겟 word생성시 어떤 소스에 포커스를 맞춰서 생성해야하는지 알려주는 모델&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;어텐션을 구축하게 되면 어텐션 맵이라는게 나오는데.
Ex) jon loved Mary.
 -&amp;gt; jonn은 noun으로 매칭이 높에 나옴.&lt;/p&gt;

&lt;p&gt;##N2mt
###소개&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;네이버 뉴럴 머신 트랜스레이션&lt;/li&gt;
  &lt;li&gt;NSMT 2세대 머신 트랜세션&lt;/li&gt;
  &lt;li&gt;자체 기술 개발 (no open source)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;내가 지각(late)했다는 것을 지각(perceive)했을때 너무 늦었다(late).
잘 되는 예문 ㅋㅋㅋㅋㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;실제 파파고앱에서 직접 사용해 볼 수 있다.
Labspace NMT ?&lt;/p&gt;

&lt;h2 id=&quot;정량적-평가&quot;&gt;정량적 평가&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 평가방법 BLEU
- 이거 1점 올리기가 겁나 힘듬. ## 정성적 평가 - blind test
- 거의 2배정도의 향상
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;번역-결과의-주요-특징&quot;&gt;번역 결과의 주요 특징&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;완전한 형태의 문장을 생성 // 예전에는 비문이 생성되는 경우가 있엇음.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;영어 관사/ 한글 조사 등 잘 사용함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;SMT 대비에 많이 우수&lt;/li&gt;
  &lt;li&gt;단점 : 번역결과가 틀리면 아예 딴소리를함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;softmax쪽에 계산량이 너무 많아서 vocab 갯수에 제약이 생김&lt;/p&gt;

&lt;h2 id=&quot;마무리하며&quot;&gt;마무리하며&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;딥 러닝 개발자가 많이 필요함&lt;/li&gt;
  &lt;li&gt;노력 하면 기존 개발자도 진입할 수 있다.&lt;/li&gt;
  &lt;li&gt;꼼꼼해야함. 버그가 잘 안보임.
에러나면 잡지뭐 이런식 개발하게되면 어려움 ..ㅠㅠ (난데..)&lt;/li&gt;
  &lt;li&gt;학습을 막 돌리면 나중에 어디서부터 잘못됫는지 알기 어려움
많은 인내심이 필요. 시간이 오래걸림.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;코드량이 많이 줄어듬&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;팀 빌딩
    &lt;ul&gt;
      &lt;li&gt;하모니가 중요. 여러가지 주특기를 가진 사람들이 함께 잇으면 더 강력!&lt;/li&gt;
      &lt;li&gt;파파고팀 = 기계번역 + 뉴럴 네트워크 전문가 + 시스템 전문가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;뉴럴 네트워크 = 러닝 코스트가 좀 들지만 서비스를 구축할떄 누구 보다 더 유리하다&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article9&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;9-네이버-콘텐츠-통계서비스-소개-및-구현-경험-공유&quot;&gt;[9] 네이버 콘텐츠 통계서비스 소개 및 구현 경험 공유&lt;/h1&gt;

&lt;h2 id=&quot;intro&quot;&gt;intro&lt;/h2&gt;
&lt;h3 id=&quot;개선-배경&quot;&gt;개선 배경&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;설문조사를 통해 개선 사항을 모아봄
    &lt;ul&gt;
      &lt;li&gt;오늘 지표에 대한 실시간 통계&lt;/li&gt;
      &lt;li&gt;게시글 별 통계 (기존엔 유저에 대해서만 나옴)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;어려움&quot;&gt;어려움&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;레거시 통계 시스템&lt;/li&gt;
  &lt;li&gt;주로 배치 작업에 치중 되어있엇음.&lt;/li&gt;
  &lt;li&gt;툴이 너무 많은데 어떤 걸 선택해야하는지 어려움&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;안정적 서비스에 대한 경험 부재&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;째뜬 오픈함.&lt;/li&gt;
  &lt;li&gt;카페에서도 통계 시스템을 사용 할꺼임(내년에)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;overview&quot;&gt;overview&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;가장 기본적으로 로그를 수집함&lt;/li&gt;
  &lt;li&gt;언제 어떤 사용자가 어떤 컨텐츠를 소비햇는지 기록&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;통계결과&quot;&gt;통계결과&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Metric  : 조회수/ 방문수 / 방문자 수 등&lt;/li&gt;
  &lt;li&gt;Demension&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;계산-방식&quot;&gt;계산 방식&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;사람 별로 where 유저로 group&lt;/li&gt;
  &lt;li&gt;배치 : 필터조건 수에 로우수가 너무 많으면 그룹바이 비용 상승.
    &lt;ul&gt;
      &lt;li&gt;제공단위 시간단위로 미리 계산&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리얼타임  : 지금 수집되고 잇는 정보. 미리 계산 노노해&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;규모&quot;&gt;규모&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;로그
    &lt;ul&gt;
      &lt;li&gt;1일 수억 로그&lt;/li&gt;
      &lt;li&gt;1일 수천만 유저&lt;/li&gt;
      &lt;li&gt;1일 수천만 게시글 조회&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;질의:
    &lt;ul&gt;
      &lt;li&gt;1일 수억&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보는것도 다 통계시스템에서 제공&lt;/p&gt;

&lt;h2 id=&quot;아키텍쳐&quot;&gt;아키텍쳐&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;빅데이터 기반에서 realtime/ batch 데이터 처리 설계&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;twitter 나탄 와치? 라는 사람이 람다 아키텍쳐라는 설계를 함.&lt;/li&gt;
  &lt;li&gt;처리해야할 로그 데이터를 배치와 speed layer에 모두 보내고&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서비스 결과는 질의 단에서 배치와 realtime을 묶어서 결과를 내놓는다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;빅데이터 /&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;각 파트마다 다양한 오픈 플랫폼들 존재&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;로그 스태시 등등등 겁나많드아아아아아 ㅏ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;그나마 경험이 많앗던 플랫폼 시스템들로 만들기 시작&lt;/li&gt;
  &lt;li&gt;햇다가 더 좋은 성능이 잇으면 바꾸기도 하고~&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;네이버-아키텍쳐&quot;&gt;네이버 아키텍쳐&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;배치 : 스파트 SQL&lt;/li&gt;
  &lt;li&gt;리얼 : 스파크 스트리밍&lt;/li&gt;
  &lt;li&gt;질의단 nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lessons-learned&quot;&gt;lessons learned&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;시스템을 안정적으로 하기위한 노력&lt;/li&gt;
  &lt;li&gt;집중해서 해결해야할 것들을 선정해야햇다.&lt;/li&gt;
  &lt;li&gt;로그 중복 없이 처리하는 부분&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;로그량이 증가하게 되면 병렬로 처리할 수 있게&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;배치&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;빠르고 쉽게 배치 통계를 만들 수 있게&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;쿼리 체크 파트
    &lt;ul&gt;
      &lt;li&gt;서비스 (사용자입장에서 ) 응답속도를 빠르게 하기 위해&lt;/li&gt;
      &lt;li&gt;운영 서버 통합 모니터링 할 수 있도록&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exactly-once&quot;&gt;Exactly-once&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;로그를 정확하게 한번 처리하도록&lt;/li&gt;
  &lt;li&gt;엔진엑스 최초 로그 아이디 발급&lt;/li&gt;
  &lt;li&gt;둥간 로그스태시 카프카 등을 이용해서 유실없이&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;최종은 엘라스틱에 id에 엔진엑스에서 발급된 로그 ID로 매핑&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;하나씩 다 찍으면 좋지만 그렇게 하면 비용이 너무 많이 듬.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;logstash&quot;&gt;logstash&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;엔진엑스 로그를 받아서 카프카 분산 큐에 넣는 역할&lt;/li&gt;
  &lt;li&gt;sincedb라는걸 따로 관리. 로그스테시가 재시작 하더라도 올바르게 재처리 할수 잇도록&lt;/li&gt;
  &lt;li&gt;대부분 일자별로 하게 되는데&lt;/li&gt;
  &lt;li&gt;새로운 날자로 넘어갈때 유실이 발생하지 않도록. Start_position = beginning 으로 설정해줌.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;kafka&quot;&gt;Kafka&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;로그 유실이 없도록.
    &lt;ul&gt;
      &lt;li&gt;acks option 을 all&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;retries 값을 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;storm&quot;&gt;Storm&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;부하가 많은 경우 로그 유실이 있다. « 앙대!!!!&lt;/li&gt;
  &lt;li&gt;처음 쓸때 많은 삽질을 했다.&lt;/li&gt;
  &lt;li&gt;entry를 잘 받앗어 ack라는걸 알려주면 한다던가.. 째뜬 그리햇어야 햇는데. 자꾸 유실댐. &amp;gt; 그만 사용하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spark-streaming&quot;&gt;Spark streaming&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;로그량이 많을때도 쉽게 잘 되었다.
    &lt;ul&gt;
      &lt;li&gt;Kafka direct api fmf tkdydgotj&lt;/li&gt;
      &lt;li&gt;데이터를 담아주면 elasic 에 쓰기 시도.&lt;/li&gt;
      &lt;li&gt;전체 흐름은 주키퍼 를 통해 offset을 직접 관리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;분산병렬-처리&quot;&gt;분산/병렬 처리&lt;/h2&gt;
&lt;h3 id=&quot;로그-스태시&quot;&gt;로그 스태시&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;필터단계에서 로그를 받게되면 그 여러 필드에서 추가적으로 정보를 포함한다던가 처리를 해야하는게 잇을때.&lt;/li&gt;
  &lt;li&gt;쓰레드 갯수와 필터쓰레드 갯수를 같이 해주면 병렬 프로세싱 극대화 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;카프카&quot;&gt;카프카&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Topic
    &lt;ul&gt;
      &lt;li&gt;메세지를 저장&lt;/li&gt;
      &lt;li&gt;다수의 물리적인 파티션에 저장됨&lt;/li&gt;
      &lt;li&gt;producer와 consumer 입장에서 병렬&lt;/li&gt;
      &lt;li&gt;로그스태시는 » 여러 파티션에 넣고 »&lt;/li&gt;
      &lt;li&gt;균등하게 메세지 전송 하길 원했으나.. Message_key를 잘 명시 안해주면 하나에만 넣더라… (default hash가 음슴)&lt;/li&gt;
      &lt;li&gt;원래 방식 하나에 쭈우욱 넣고 그 다음 파티션에 꾸우욱 넣고&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스파크-스트리밍&quot;&gt;스파크 스트리밍&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;워커(논리적) 갯수
    &lt;ul&gt;
      &lt;li&gt;원하는 throughput이 나올때까지 갯수 계속 증가 시켜도 됨&lt;/li&gt;
      &lt;li&gt;올렷는데도 내가 원하는 퍼포먼스가 안나온다»&amp;gt; repartition을 해줄수 있음.&lt;/li&gt;
      &lt;li&gt;리파티션이라는 추가 비용을 더 쓰는거임. : 이게 정말 좋은지는 테스트 해서 병렬성을 확보해야하는거임.&lt;/li&gt;
      &lt;li&gt;어떤 잡에 따라서 워커 갯수를 늘리는게 좋은지 다르다
        &lt;ul&gt;
          &lt;li&gt;IO bound가 크면 워커를 늘려도 성능 변화 별로 음슴&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;elasic-search&quot;&gt;Elasic search&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;저장단&lt;/li&gt;
  &lt;li&gt;내부적으로는 index ( table 같은거 논리단위)  » 샤드 단위로 쪼개짐&lt;/li&gt;
  &lt;li&gt;질의를 하는 질의쪽과 넣는 색인 쪽이 있는데 샤드에 따라 병렬성이 달라짐&lt;/li&gt;
  &lt;li&gt;클러스터에 샤드를 운영하는 코스트 vs 샤드 병렬성에 따른 코스트&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aggregation-최적화-배치&quot;&gt;Aggregation 최적화 (배치)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;처음에는 M/R(맵리듀스)로   개발
하다보니 스팤이 좋아보인다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스파크sql&quot;&gt;스파크SQL&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;개발이 쉽다.&lt;/li&gt;
  &lt;li&gt;SQL 로 표현이 쉽다,&lt;/li&gt;
  &lt;li&gt;통상적인 DB sql 처럼&lt;/li&gt;
  &lt;li&gt;퍼포먼스도 좋음. ( 메모리 기반)&lt;/li&gt;
  &lt;li&gt;대부분 MR코드를 SQL로 표현&lt;/li&gt;
  &lt;li&gt;재방문율 구하는게 좀 복잡햇음. » 어쨰뜬 잘 해서 SQL로 잘 풀어냄&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;elasticsearch-vs-parquet&quot;&gt;Elasticsearch vs parquet&lt;/h3&gt;
&lt;p&gt;초기에는 엘라스틱 쓰다가
배치 데이터 가져오는걸 parquet colum db라는걸로 바꿈&lt;/p&gt;

&lt;p&gt;배치 처리에는 파켓이 더 적합&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ES hadoop이라는 걸 통해서 전체를 읽어왔엇는데&lt;/li&gt;
  &lt;li&gt;컬럼 디비인 파켓을 사용하게됨.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;응답속도-최적화&quot;&gt;응답속도 최적화&lt;/h2&gt;

&lt;p&gt;###엘라스틱 서치&lt;/p&gt;

&lt;h4 id=&quot;routing&quot;&gt;routing&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;분산하지말고
    &lt;ul&gt;
      &lt;li&gt;특정 샤드에만 넣고 특정 질의만 처리하게되면 오히려 처리량이 증가 (routing)
but 데이터 량이 많으면 분산하는게 더 나음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특정 사용자 기준으로 사용했음.
질의 처리하는 양에 따라서 다르다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;복합-필드&quot;&gt;복합 필드.&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;공통적으로 질의 필드에 대해서만 사용하게 되면 성능향상을 노려볼 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;execution_hint&quot;&gt;execution_hint&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;ordinal : 스트링 필드같은 경우에 생기는 필드 값.&lt;/li&gt;
  &lt;li&gt;별도로 지정하지 않고 map으로 처리하면 ?????????&lt;/li&gt;
  &lt;li&gt;특정 질의 패턴을 ordinal을 쓰지 말고 map을 쓰면 더 나을 수 있음.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터가 큰 경우에 ordinal 순서처리를 잘하고 질의를 잘해서 빠름&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;서치가 아닌 쿼리(매핑방식) 별로 데이터가 안될땐 map이 더 나음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;java-gc&quot;&gt;Java GC&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;다량 데이터가 es 입수시 풀 GC가 일어남&lt;/li&gt;
  &lt;li&gt;CMS  GC를 쓰는데 … aompaction 때 STW가 나타남&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;최대한 풀gc는 없애야하는 상황&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;힙 객체들이 영 영역에서 올드 영역으로 이동할때 객체 이동하면서 sirvivor 영역의 크기가 작아서 GC가 일어나면서 문제가 발생
늘려서 cg를 좀 제거 햇음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그래도 간간히 생김&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;compaction  자체를 없애야 하는거임.&lt;/li&gt;
  &lt;li&gt;월간데이터 입수 후에 문제가 생겻던걵디 월간 데이터 수집 후에는 껏다 켜줘용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;캐시-정책&quot;&gt;캐시 정책&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Batch 결과 캐시
    &lt;ul&gt;
      &lt;li&gt;대체로 길게&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;real time
    &lt;ul&gt;
      &lt;li&gt;캐시를 안하거나 비교적 짧게 하거나&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;실시간 조회수는
    &lt;ul&gt;
      &lt;li&gt;scoreboard&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리얼타임에서 집계하기엔 너무 많음
    &lt;ul&gt;
      &lt;li&gt;n-base-arc 메모리 DB를 이용해 조회수 ++&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;확장성과-가용성&quot;&gt;확장성과 가용성&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;성능/ 처리&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;각 플랫폼의 특징을 이해하고 최적화를 해야한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Elastic 추가 서버를 넣으면 자동으로 분산&lt;/li&gt;
  &lt;li&gt;카프카/ 하둡은 추가 서버를 넣으면 수동 으로 분산&lt;/li&gt;
  &lt;li&gt;각 특징에 맞게 잘 맞춰야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;availability&quot;&gt;availability&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- 이중화를 적절히 적절히
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;운영&quot;&gt;운영&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;cloudera 배포본 사용&lt;/li&gt;
  &lt;li&gt;시스템 설정 및 모니터링을 편하게 함&lt;/li&gt;
  &lt;li&gt;각 구간별로 data가 잘 흐르는지를 Lag 모니터링&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spark-메모리-오류&quot;&gt;spark 메모리 오류&lt;/h3&gt;
&lt;p&gt;Off-heap 메모리 를 기본값보다 큰 값으로 설정하면 메모리 초과 오류가 적어짐.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Elasricsearch : alias
    &lt;ul&gt;
      &lt;li&gt;결과 작업이 끝난 index에 대해서 서비스 노출 가능&lt;/li&gt;
      &lt;li&gt;잘못되엇을떄 롤백도 용이&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;엘라스틱 샤드는 어케 나눌 것인가&lt;/li&gt;
  &lt;li&gt;문서 갯수를 기준 » 운영하는것보다 더 많아짐&lt;/li&gt;
  &lt;li&gt;샤드 크기 기준으로 변경 » 어짜피 이미 그룹바이 된 결과라서 문서내에서 가져오는게 어렵지 않음. 운영가능한 숫자정도로&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;elastic-보안&quot;&gt;elastic 보안&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;아무나 와서 혹은 api로 해서 delete 해버릴수 잇음.
    &lt;ul&gt;
      &lt;li&gt;기본 기능이 없어서 (유로 외부 서비스들이 있긴 함)&lt;/li&gt;
      &lt;li&gt;그래서 네이버는 nginx  basic auth 설정을 통해서 보안 설정을 해줌&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정리-1&quot;&gt;정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;많은 오픈 소스가 있지만. .&lt;/li&gt;
  &lt;li&gt;어떤 라이브러리를 통계 시스템으로 써야하는가&lt;/li&gt;
  &lt;li&gt;자신의 use - case에 맞게 사용하는게 좋음. ( 정답이 있는게 아님)&lt;/li&gt;
  &lt;li&gt;테스트를 통한 검증이 필요하긴 하쥐&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;질문-3&quot;&gt;질문&lt;/h2&gt;
&lt;h3 id=&quot;q-평균적인-es-시간&quot;&gt;Q. 평균적인 es 시간&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;초당 수천 요청량&lt;/li&gt;
  &lt;li&gt;수백 ms정도로 응답&lt;/li&gt;
  &lt;li&gt;조회 기간이 늘어나더라도&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;q-서버-한대-스팩&quot;&gt;Q. 서버 한대 스팩?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;96기가&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article10&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;10-딥러닝-예제로-보는-개발자를-위한-통계&quot;&gt;[10] 딥러닝 예제로 보는 개발자를 위한 통계&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;작년 : 좋은 데이터 를 뽑으려면…. 데이터 마이닝 관련해서&lt;/li&gt;
  &lt;li&gt;머신러닝, 데이터 마이닝, 통계를 적절히 잘해야 분석을 잘 핤 ㅜ 잇다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Data mining
    &lt;ul&gt;
      &lt;li&gt;문제를 푸는데 특화&lt;/li&gt;
      &lt;li&gt;네이버 연관 검색어. 해결한 문제가 많다.&lt;/li&gt;
      &lt;li&gt;하지만 안풀리는것도 많다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;머신 러닝
    &lt;ul&gt;
      &lt;li&gt;역사가 오래되다보니 광범위함 ㅋㅋ&lt;/li&gt;
      &lt;li&gt;AI는 모든 컴퓨터 사이언스다.&lt;/li&gt;
      &lt;li&gt;이 안에 딥러닝이라던가 등등등이 있다.&lt;/li&gt;
      &lt;li&gt;네이버 랭킹&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;통계
    &lt;ul&gt;
      &lt;li&gt;통계 하나로 푼 문제는 별로 없다.&lt;/li&gt;
      &lt;li&gt;데이터 마이닝과 머신러닝을 함께 해서 푸는 방법&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;통계가-왜-필요한가&quot;&gt;통계가 왜 필요한가?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;머신러인 K-means 평균값 구해서 그 중심을 옮겨가는 식&lt;/li&gt;
  &lt;li&gt;데이터마이닝 : Conditional probability&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deep-learning-in-ml&quot;&gt;Deep Learning in ML&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;딥러닝은 운명. 꼭 해야해..&lt;/li&gt;
  &lt;li&gt;relu 덕에 딥러닝을 통계적 관점에서 보게된 첫 시작!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;relu-의-정체&quot;&gt;ReLU 의 정체&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;hinton 교수&lt;/li&gt;
  &lt;li&gt;양수면 값을 위로&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;통계 배울떄 봣엇어 이거! - 이것은 통계랑도 관계가 잇을 것이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;sigmoid 자리에 다른 함수가 들어가도 된다.&lt;/li&gt;
  &lt;li&gt;non- linear하게&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Generalized linear model
-통계에서는 굉장히 익숙한 모델&lt;/p&gt;

&lt;p&gt;통계에서는 이미 있는 함수인데 머신러닝 함수에도 다 매핑되는 게 있음 .&lt;/p&gt;

&lt;h2 id=&quot;머신-러닝&quot;&gt;머신 러닝&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Drop out(2015)
    &lt;ul&gt;
      &lt;li&gt;데이터 갯수가 100개인데 추정해야할 weight이  100개 이상이면 문제가 생긴다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;통계에서는 이미 1988 년에 잇엇음.
    &lt;ul&gt;
      &lt;li&gt;Pike and slab&lt;/li&gt;
      &lt;li&gt;break through&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;딥 가우시안 mixture
    &lt;ul&gt;
      &lt;li&gt;딥러닝을 통계적 시점으로 보면서 눈이 띄임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;어떻게-통계를-공부를-했는가&quot;&gt;어떻게 통계를 공부를 했는가&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;통계 공부… 고통 그 자체&lt;/li&gt;
  &lt;li&gt;베이지안 통계추론 - 네이버 검색 랭킹도 저걸로. 겁나 어려움.
가우시언믹스쳐를 알고는 있지만 사용할수 없을 것 같앗는데.&lt;/li&gt;
  &lt;li&gt;네이버에서 실제 상황을 느껴볼 수 있엇음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;통계--발표자가-생각하는-개발자가-알아야할-통계&quot;&gt;통계  (발표자가 생각하는 개발자가 알아야할 통계)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;기술통계&lt;/li&gt;
  &lt;li&gt;회귀 통계 *&lt;/li&gt;
  &lt;li&gt;분포 통계 *&lt;/li&gt;
  &lt;li&gt;검정통계&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기초통계&quot;&gt;기초통계&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;송중기가 어떻게 생겻나
    &lt;ul&gt;
      &lt;li&gt;(평균) 잘생겻네&lt;/li&gt;
      &lt;li&gt;눈은 어떻고 코는 어떻고 media… 데이터가 어떻게 생겻는지 알고 싶다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;분포-통계&quot;&gt;분포 통계&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이게 제에에일 중요하다고 생각한다&lt;/li&gt;
  &lt;li&gt;drichlet 드리쉴레
    &lt;ul&gt;
      &lt;li&gt;다항 분포와 관련&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분포의 관계로 부터 출발한다.
    &lt;ul&gt;
      &lt;li&gt;지금 분포 구조를 이렇게 생각하신답니다
      § 동전던지기 : 베르누이 분포 » 여러번 : 이항분포 »  무한번 :정규분포 …
        &lt;ul&gt;
          &lt;li&gt;주사위 던지기 » 여러번 : 다항분포 » 다변량정규분포
            &lt;h3 id=&quot;lda&quot;&gt;LDA&lt;/h3&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;분포구조를 잘 알고있느냐가 중요함.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LDA를 책으로 공부햇으면 몰랏을꺼다. 네이버에서 어쩔수 없이 적용하게 되면서 알게됨&lt;/p&gt;

&lt;h2 id=&quot;회귀-통계&quot;&gt;회귀 통계&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;각 feature의 weight 학습&lt;/li&gt;
  &lt;li&gt;제뉴얼라이즈드 리니어 모델 (첨에 말햇던 그것)&lt;/li&gt;
  &lt;li&gt;노출되는 랭킹과 클릭수와의 관계&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;지수 분포를 이용한 리니어 분포 모델..&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 마이닝이나 머신 러닝을 할떄 통계를 알면 많은 것들을 영감 받을 수 있다 .&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[후기] Tech planet 2016</title>
   <link href="https://jiyeonseo.github.io/2016/10/18/tech-planet-2016/"/>
   <updated>2016-10-18T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/18/tech-planet-2016</id>
   <content type="html">&lt;p&gt;SK planet에서 주최하는 &lt;a href=&quot;http://techplanet.skplanet.com/&quot;&gt;Tech planet 2016&lt;/a&gt;을 다녀왔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Commerce Everywhere&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;라는 주제로 다양한 &lt;a href=&quot;http://techplanet.skplanet.com/agenda.html&quot;&gt;프로그램&lt;/a&gt;이 발표되었다.&lt;/p&gt;

&lt;p&gt;최근 핫한 기술들을 화두로 40분씩 발표가 꽉꽉 차있었다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;빅데이터&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;머신러닝&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;딥러닝&lt;/code&gt; 그리고 그를 이용한 &lt;code class=&quot;highlighter-rouge&quot;&gt;추천&lt;/code&gt;에 대한 이야기가 행사를 가득 매꾸고 있었고,&lt;br /&gt;
SKP에서 뿐만 아니라 전 세계적으로도 트랜드인 &lt;code class=&quot;highlighter-rouge&quot;&gt;챗봇&lt;/code&gt;에 대한 시간도 있었다.&lt;/p&gt;

&lt;p&gt;주제만큼이나 다양한 글로벌 회사들의 후원도 있었는데,&lt;br /&gt; 오전 키노트에서는 &lt;em&gt;알리바바&lt;/em&gt;와 &lt;em&gt;IBM&lt;/em&gt;의 핵심 연구원들이 행사의 문을 열었으며
전 세계적으로 딥러닝과 챗봇 플랫폼의 선두로 나서고 있는 &lt;em&gt;구글&lt;/em&gt;과 &lt;em&gt;페이스북&lt;/em&gt;에서도 재밌는 경연의 시간을 가졌다.&lt;/p&gt;

&lt;p&gt;아침 9시부터 저녁 6시까지 쉴 틈 없이 꽉 차있는 프로그램을 듣고 나니 녹초가 되었지만,
평소 키워드만 듣고 흘려보내던 최신 트렌드의 기술을 짧은 시간안에 전파 받은 것 같아 뜻깊은 시간을 보낸 것 같다.&lt;/p&gt;

&lt;p&gt;특히, SKP 매니저분들의 발표는 대부분 사내, 특히 &lt;a href=&quot;http://www.11st.co.kr/&quot;&gt;11번가&lt;/a&gt;에 적용된 실용적인 내용으로
내가 일하고 있는 분야에 대해서도 많은 영감을 주었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_booth_1.JPG&quot; /&gt;
이외에도 다양한 &lt;a href=&quot;http://techplanet.skplanet.com/exhibit.html&quot;&gt;전시 부스들&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;아주 작은 아쉬운 점이 있다면은..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3트랙이 동시진행되면서 직접 못들은 것들도 있고 (컨퍼런스 갈때마다 느끼지만ㅠ 난 헤르미온느가 아니다..)&lt;/li&gt;
  &lt;li&gt;행사장 규모에 비해 너무 사람이 많아 자리가 좀 비좁았다 (유료행사다 보니 노쇼가 적었던것 같다. 좋은건가?)&lt;/li&gt;
  &lt;li&gt;다양한 스타트업 부스들이 있었는데 세션 중간 쉬는시간이 적어 제대로 돌아보지 못했다ㅠㅠ&lt;/li&gt;
  &lt;li&gt;그리고 언어 이야기가 한 세션 뿐이였다. (이번 주제는 요게 아닌것 같아 그냥 이건 소소한 내 의견)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위의 아쉬운점은 어느 기술 컨퍼런스를 가나 있는거니 그냥 툴툴거리는 정도로 생각하면 될 것 같다.&lt;/p&gt;

&lt;p&gt;그리고 이번 기념품은 VR Box와 텀블러! VR박스는 &lt;a href=&quot;https://www.facebook.com/events/319731425039417/&quot;&gt;페이스북 페이지&lt;/a&gt; 에서 해시태그 #techplanet2016 #테크플래닛2016 이벤트를 통해 받았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplnet2016_gift.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;강의 자료 : &lt;a href=&quot;http://readme.skplanet.com/?p=13174&quot;&gt;SK플래닛 기술 블로그&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 오늘 들은 내용들을 잊지 않기위해 러프한 노트이지만 공유하고자 한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;내-스케쥴과-주제&quot;&gt;내 스케쥴과 주제&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;topic&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article1&quot;&gt;[1] Large-scale Robust Online Matching with Its applications in Alibaba &lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;알리바바의 응용 프로그램을 이용한 대규모 Robust 온라인 매칭&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article2&quot;&gt;[2] Cognitive Computing with Multilingual Watson&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;다국어 왓슨시스템을 통한 인지컴퓨팅&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article3&quot;&gt;[3] 파이썬 에코시스템&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;파이썬 커뮤니티와 파이썬 생태계에 대해서 설명하고 다양한 파이썬 활용 사례에 대해서 소개&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article4&quot;&gt;[4] Visual search at SK Planet&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SK Planet에서 개발한 Visual search technology와 11번가 패션상품 검색 적용 사례 소개&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article5&quot;&gt;[5] Apache Spark은 어떻게 가장 활발한 빅데이터 프로젝트가 되었나&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Spark 핵심 개념과 인기의 비결, Spark 도입 전략 소개&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article6&quot;&gt;[6] In-App Messaging and Chatbot&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;In-App Messaging SDK 개발과 적용 사례소개, 2016년 화두인 대화형 커머스(Conversational Commerce)와 Chatbot&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article7&quot;&gt;[7] Google Tensor Flow &amp;amp; Machine Learning in the Cloud&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;구글의 딥 러닝 클라우드 제품들과 텐서플로우 소개&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article8&quot;&gt;[8] 빅데이터와 자연어처리 기술을 이용한 11번가 상품 추천&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SK플래닛에서의 자연어처리와 텍스트 마이닝 기술 소개와 이를통한 상품 추천, 마케팅 및 컨시어지 서비스 기술 개발 등에 활용하는 현황을 소개&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#article9&quot;&gt;[9] Facebook Chatbot M messenger&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;인공지능과 봇의 역사를 간략하게 짚어보고 봇을 만들며 활용 할 수 있는 베스트프랙티스(best-practice)들을 논의&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;div id=&quot;article1&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;1-large-scale-robust-online-matching-with-its-applications-in-alibaba&quot;&gt;[1] Large-scale Robust Online Matching with Its applications in Alibaba&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_alibaba.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Robust matching&lt;/li&gt;
  &lt;li&gt;Online matching&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;collaborative-intelligence&quot;&gt;collaborative intelligence&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;machine intelligence :  Q&amp;amp;A engine&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article2&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-cognitive-computing-with-multilingual-watson&quot;&gt;[2] Cognitive Computing with Multilingual Watson&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;자연어 처리를 위한 머신러닝&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_ibm_1.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;congnitive-computing&quot;&gt;congnitive computing&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;machine leanging&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;diff-w-programmiatic-computing&quot;&gt;diff w/ programmiatic computing&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;learn behavior rather than predefined specification or behavior&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보의 변화를 받아드림.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;watson 퀴즈 프로그램에서 이겼음.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;언어에 대한 deep analysis 등&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;watson이 헬스케어에도 쓰임&lt;/li&gt;
  &lt;li&gt;rich-data, keep tracking informations&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;api&quot;&gt;api&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;personality insignt&lt;/li&gt;
  &lt;li&gt;language identification&lt;/li&gt;
  &lt;li&gt;machine translation&lt;/li&gt;
  &lt;li&gt;speech to text&lt;/li&gt;
  &lt;li&gt;conversation 등등&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_ibm_2.JPG&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;intent 를 나눠서 질문에 따라서 intent를 나눈고 그에 따라 answer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;알고리즘-컨셉&quot;&gt;알고리즘 컨셉&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;형태소 분석한걸 머신 러닝한다. 각 나라의 회사에서 제공받음.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;한국은 SK가 주고 잇네&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;영어로 머신 러닝을 하지만 같은 방식으로 다양한 언어들도 러닝을 한다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다양한 언어들도 다 같은 퍼포먼스를 낸다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;만약 질문을 알아듣지 못하면 관련한 질문 리스트를 다시 돌려줘서 답을 찾을 수 있게 해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;watson-conversation&quot;&gt;Watson Conversation&lt;/h2&gt;

&lt;h2 id=&quot;data-extraction&quot;&gt;data extraction&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;article에서 분석을 위해 각 알맞는 도메인들을 꺼냄&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;data, person, age  도메인 등등..&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기존에 배웟던 도메인을 다른 글에서 도메인을 꺼내는데 사용함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;글 속에 잇는 사람이 위키피디아에서 context를 이해해서 누구인지 찾아냄&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://www.ibm.com/watson/developercloud/&quot;&gt;watson develop cloud&lt;/a&gt;&lt;/p&gt;

&lt;div id=&quot;article3&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-파이썬-에코시스템&quot;&gt;[3] 파이썬 에코시스템&lt;/h1&gt;

&lt;h2 id=&quot;파이썬이란&quot;&gt;파이썬이란&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;89년 크리스마스에 만들엇음.&lt;/li&gt;
  &lt;li&gt;멀티 페러다임 - 객체지향 +  스트럭쳐 프로그래밍&lt;/li&gt;
  &lt;li&gt;functional — 지원하는가.? 제한적이지만 가능하다.  // 파이썬 3.6 에서 개발중. doc 참고&lt;/li&gt;
  &lt;li&gt;다양한 구현체들이 있음.
    &lt;ul&gt;
      &lt;li&gt;c로 구현된  python&lt;/li&gt;
      &lt;li&gt;python python » pypy&lt;/li&gt;
      &lt;li&gt;java jpython&lt;/li&gt;
      &lt;li&gt;등등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;indent 강제하는 언어&lt;/li&gt;
  &lt;li&gt;pep20 : 파이썬 스펙? 기능제한? 파이썬이 지향하는 철학&lt;/li&gt;
  &lt;li&gt;complex is better than complicated - many vs difficult&lt;/li&gt;
  &lt;li&gt;쉽고 명확하고 단순한 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;파이썬-어디에-좋은가&quot;&gt;파이썬 어디에 좋은가&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;os interface&lt;/li&gt;
  &lt;li&gt;인터넷 프로토콜&lt;/li&gt;
  &lt;li&gt;소프트웨어 엔지니어링 등등등등&lt;/li&gt;
  &lt;li&gt;python package index : 파이썬 리파지토리들&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install {package_name}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;docker도 처음에는 파이썬으로 짜여짐.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;프로토타입이 파이콘에서 처음 발표됨 ( dcloud ?)&lt;/li&gt;
  &lt;li&gt;도커 회사에서 &amp;gt; pip를 py-docker file이 올라오니 이름 저작권 내려라.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;use-cases&quot;&gt;use cases&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;drop box 등등&lt;/li&gt;
  &lt;li&gt;막 말하자면 다 쓰고 잇다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;웹-프레임-워크&quot;&gt;웹 프레임 워크&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;flaskm, django pyramid tornado&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;회사&quot;&gt;회사&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;인스타그램 레딧 프레쯔&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;빅-데이터---pydata&quot;&gt;빅 데이터 - PyData&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_python_1.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;과학&quot;&gt;과학&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;NASA (중력파를 파이썬으로 검증?!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;교육&quot;&gt;교육&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;bbc :  microbit&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cg&quot;&gt;CG&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;maya,  : 애니메이션 관전들을 이어서 부드럽게 연결하는걸 파이썬 스크립트로 처리한다고 함.&lt;/li&gt;
  &lt;li&gt;Blender&lt;/li&gt;
  &lt;li&gt;Disney : &lt;a href=&quot;https://github.com/disney&quot;&gt;https://github.com/disney&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;음악-분야&quot;&gt;음악 분야&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Ableton Live&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;제조업&quot;&gt;제조업&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;philips, d-link&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;게임&quot;&gt;게임&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;문명!&lt;/li&gt;
  &lt;li&gt;몬스터 슈퍼리그 - 스마트 스터디&lt;/li&gt;
  &lt;li&gt;python booster : c++로&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;스마트스터디-use-case&quot;&gt;스마트스터디 use case&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;빠르게 후딱 만들다 보니 마이크로서비스 가 만들어짐&lt;/li&gt;
  &lt;li&gt;api service들에서 사용됨, 700여개의 앱을 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex) 게임 몬스터 슈퍼 리그&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;게임에서는 orm을 쓰기 어려워서 걷어내고 제작&lt;/li&gt;
  &lt;li&gt;어드민 툴&lt;/li&gt;
  &lt;li&gt;ranking : flask&lt;/li&gt;
  &lt;li&gt;동접이 높아도 잘 되고 잇음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;파이썬이-이리도-유명한-이유&quot;&gt;파이썬이 이리도 유명한 이유&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;커뮤니티.
&lt;img src=&quot;/images/techplanet2016_python_2.JPG&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;좀 더 friendly 하당 ㅎ&lt;/li&gt;
  &lt;li&gt;파이썬 코리아, 파이콘,  등등&lt;/li&gt;
  &lt;li&gt;파이콘&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;처음-시작이라면&quot;&gt;처음 시작이라면&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;jupyther / 주피터 노트북&lt;/li&gt;
  &lt;li&gt;pip and awesome list&lt;/li&gt;
  &lt;li&gt;위와같은걸로 하면 더 편행&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;python-3-로-시작하세요&quot;&gt;python 3 로 시작하세요&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;2는 더이상 release 안될 예정 (PEP404)&lt;/li&gt;
  &lt;li&gt;패키지가 2만 지원한다. » 3로 찾아봐라 80%는 잇을꺼임&lt;/li&gt;
  &lt;li&gt;20% ? 만든 사람에게 push push  너만 2다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article4&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-visual-search-at-sk-planet&quot;&gt;[4] Visual search at SK Planet&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;주로 패션 검색  ( 11st)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개발-배경&quot;&gt;개발 배경&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;쉽게 검색&lt;/li&gt;
  &lt;li&gt;ex) 키워드&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개발-목표&quot;&gt;개발 목표&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;영상을 쿼리로 상품 검색&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;사전-지식&quot;&gt;사전 지식&lt;/h2&gt;

&lt;h3 id=&quot;딥러닝&quot;&gt;딥러닝&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;딥 뉴럴 네트워크 + 머신 러닝&lt;/li&gt;
  &lt;li&gt;artificial neural network - 사람의 신경망을 모방한 컴퓨터&lt;/li&gt;
  &lt;li&gt;학습 할 수 있음&lt;/li&gt;
  &lt;li&gt;학습을 위한 데이터가 필요 (딥러닝의 단점)&lt;/li&gt;
  &lt;li&gt;학습시간이 오래걸림&lt;/li&gt;
  &lt;li&gt;종류 : dbn rnn cnn …&lt;/li&gt;
  &lt;li&gt;참고 : &lt;a href=&quot;http://readme.skplanet.com/wp-content/uploads/1-3-%EC%B5%9C%EC%B0%AC%EA%B7%9C_SK-planet_Deep-Learning-%EA%B8%B0%EB%B0%98-%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%8B%A0%EC%9A%A9%EC%B9%B4%EB%93%9C-%EB%B2%88%ED%98%B8-%EC%9E%90%EB%8F%99-%EC%9D%B8%EC%8B%9D%EA%B8%B0.pdf&quot;&gt;최찬규 매니저의 테크플래닛 2015 발표&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;첫-접근-방법&quot;&gt;첫 접근 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;영상 입력&lt;/li&gt;
  &lt;li&gt;카테고리 예측(딥러닝) - ex) 티셔츠, 가방, 신발 등&lt;/li&gt;
  &lt;li&gt;관심영역 추출 - grab-cut saliency , Hog + SVM를 통한 검증&lt;/li&gt;
  &lt;li&gt;특징 추출(딥러닝)  - pattern feature , Color feature&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;카테고리&quot;&gt;카테고리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;처음 카테고리가 잘 나오지 않으면 뒤에가 다 잘 안됨.&lt;/li&gt;
  &lt;li&gt;최대한 다양한 카테고리가 나오게 해서 확률을 뽑아서 동의어 처리를 통해 카테고리를 뽑아냄&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;관심영역&quot;&gt;관심영역&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_1.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;영역을 crop 해서 관심영역 추출
— 문제점 : 상하의가 같이 잇으면 한개씩 접근해야해는데 하나의 옷처럼 인식&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개선&quot;&gt;개선&lt;/h2&gt;

&lt;h3 id=&quot;기존-시스템에-대한-평가&quot;&gt;기존 시스템에 대한 평가&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;ask to 기획자. 잘 됏나? 잘 됐다..&lt;/li&gt;
  &lt;li&gt;but.. single object에 대해서만 잘된다 : 판매자는 한장의 사진에 여러 상품을 넣기도 함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단순한 배경에서 : 소호몰 같은 경우 복잡&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;실제 DB 안에는..&lt;/li&gt;
  &lt;li&gt;멀티 오브젝트&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;야외 촬영 ( 공항에서 트렌치코트, 가방을 들고 잇고 부츠를 신고 있음)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;유사상품이다 아니다를 딱 잘라 말하기 어렵다. ex ) 남/녀 차이&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;개선-방향&quot;&gt;개선 방향&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;여러 상품이 잇어도 모두 검색 : 딥러닝 detection 기술 적용&lt;/li&gt;
  &lt;li&gt;야외도 해주자 : 딥러닝을 적용한 특징 추출&lt;/li&gt;
  &lt;li&gt;누구나 유사하다고 느끼도록 : 속성 기반의 인식 (단추, 벨트 등)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;detection&quot;&gt;Detection&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_2.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;feature-extractor&quot;&gt;Feature extractor&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Deep feature&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_3.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;유사상품에 대한 ground truth를 만드는 것이 어려움 (유사한거다 아니다 판단)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공개 DB를 대상으로 가능성 평가
—&amp;gt; &lt;a href=&quot;http://vis.uky.edu/~stewe/ukbench/&quot;&gt;ukbench dataset&lt;/a&gt; 대상으로 검색 실험&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;symentic 검색에 매우 적합하다 라는 결론을 내림&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Google lab?&lt;/li&gt;
  &lt;li&gt;MS : residual learning :  너무 많은 메모리, 학습시간 이 듬&lt;/li&gt;
  &lt;li&gt;두개를 합해서 특별한 feature extractor를 만듬 : ResCeption&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_4.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;attribute&quot;&gt;Attribute&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;의상의 속성&lt;/li&gt;
  &lt;li&gt;어떤 것이 비슷한 것인가  : 동일한 속성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;먼저-데이터-셋을-모으자--fashion-attribute-dataset&quot;&gt;먼저 데이터 셋을 모으자 ( Fashion-attribute dataset)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;100 맨먼스&lt;/li&gt;
  &lt;li&gt;일년동안&lt;/li&gt;
  &lt;li&gt;90여개의 속성&lt;/li&gt;
  &lt;li&gt;조합하면 수천가지&lt;/li&gt;
  &lt;li&gt;detectio을 위해 ROI 데이터셋. 의류의 위치를 알아낼 수 있는&lt;/li&gt;
  &lt;li&gt;multi-label  classification - &amp;gt; conditional probability
큰 클래시피케이션이 잇으면 뒤에있는 값에 영향을 줌
ex) 바지 뒤에는 티셔츠가 들어올 수 없고, 청바지, 레깅스 뭐 이런것만 올 수 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하나씩 통과하면 대표되는 값들이 넘어가며 feature를 추출&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_5.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feed-forward network&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;guided-search&quot;&gt;Guided search&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;영상이 주워졌을때 배경/상의/하의/신발 등이 섞여있음 » 검색되기 원하는 상품을 선택하도록 하자.&lt;/li&gt;
  &lt;li&gt;판매의 경우 입력된 tag 정보를 이용. » (문제) 판매자의 tag 정보가 정제되어잇지 않다.
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;blockquote&gt;
          &lt;blockquote&gt;
            &lt;p&gt;넘어온 태그를 자연어 처리(형태소 분석, 동의어 처리 등)를 통해서 키워드를 추출&lt;/p&gt;
          &lt;/blockquote&gt;
        &lt;/blockquote&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;검색-시스템&quot;&gt;검색 시스템&lt;/h3&gt;
&lt;p&gt;information을 뽑고 , 속성을 뽑아내고, 그 속성을 index로&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_6.JPG&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;분산-검색-시스템-적용&quot;&gt;분산 검색 시스템 적용&lt;/h2&gt;

&lt;h3 id=&quot;문제&quot;&gt;문제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;검색 대상이 너무 많다 ( dataset이 너무 크다)&lt;/li&gt;
  &lt;li&gt;DB관리도 해야한다&lt;/li&gt;
  &lt;li&gt;결론 : redis 기반의 분산 인메모리 병렬처리 기술 적용&lt;/li&gt;
  &lt;li&gt;효율적인 DB관리&lt;/li&gt;
  &lt;li&gt;검색 속도 개선&lt;/li&gt;
  &lt;li&gt;Mosaic : 캐시 시스템 적용.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_visualsearch_7.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://arxiv.org/abs/1609.07859&quot;&gt;Visual Fashion-Product Search at SK Planet 논문&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;11 번가 앱에 beta로 올라가 잇으니 사용해 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article5&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;5-apache-spark은-어떻게-가장-활발한-빅데이터-프로젝트가-되었나&quot;&gt;[5] Apache Spark은 어떻게 가장 활발한 빅데이터 프로젝트가 되었나&lt;/h1&gt;

&lt;h2 id=&quot;saprk&quot;&gt;Saprk&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;많은 양의 데이터를 (수gb - 수천 tb)&lt;/li&gt;
  &lt;li&gt;여러대의 컴퓨터를 이용해서 (clustering) (1 ~ 수천대)&lt;/li&gt;
  &lt;li&gt;분석&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;왜-인기가-잇을까&quot;&gt;왜 인기가 잇을까&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;아파치 탑레벨 프로젝트 — 안정적이고 활발한 커뮤니티가 형성되어야 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;아차피-특징&quot;&gt;아차피 특징&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;인메모리컴퓨터 엔진의 압도적인 성능 (2배에서 100배&lt;/li&gt;
  &lt;li&gt;쉬운 사용법&lt;/li&gt;
  &lt;li&gt;sql, 스트리밍 머신러닝 R등의 확장성&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;인메모리&quot;&gt;인메모리&lt;/h2&gt;

&lt;h3 id=&quot;기존-데이터-분석&quot;&gt;기존 데이터 분석&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;매우 무식한 방식 : 연산 &amp;gt; 데이터 저장 &amp;gt; 연산 &amp;gt; 데이터 저장&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;반복 연산일수록 효율이 떨어짐&lt;/li&gt;
  &lt;li&gt;분산 처리 및 장애 복구를 위한 어쩔 수 없는 설계상의 선택.&lt;/li&gt;
  &lt;li&gt;클러스터 컴퓨팅에서는 일부 컴퓨터가 고장나는 경우에 대비 해야함.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spark&quot;&gt;spark&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;다단계의 연산이나 반복 연산의 경우 중간 결과를 메모리에 저장 (빠르게)&lt;/li&gt;
  &lt;li&gt;데이터가 전부 들어갈 정도의 메모리가 필요하다.&lt;/li&gt;
  &lt;li&gt;실제로 데이터도 분산 저장 연산도 분산처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fault-tolerance&quot;&gt;fault tolerance&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;그럼… 중간 복구 지점이 없는데 (장애복구)는 어떻게?&lt;/li&gt;
  &lt;li&gt;누락된 데이터 연산 과정을 기록한 lineage(계보) 리니지 ㅋㅋㅋ 를 이용해 해당 부분을 처음부터 다시 계산.&lt;/li&gt;
  &lt;li&gt;무식하긴 해도.. 메모리를 활용한거기 때문에 다시 하는것도 빠름.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rdd&quot;&gt;RDD&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Resilient Distributed Dataset&lt;/li&gt;
  &lt;li&gt;탄력잇는 분산 데이터셋&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;분산 처리 및 장애복구가 가능하다 라는 뜻을 내포&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;“Scala”, python java 지원&lt;/li&gt;
  &lt;li&gt;기존 맵 리듀스보다 훨씬 간단&lt;/li&gt;
  &lt;li&gt;spark shell 제공 , 탐색적인 데이터 분석이 가능
    &lt;blockquote&gt;
      &lt;p&gt;제플린과 같은 시각화 노트북 툴 활용 가능&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;탐색적인 데이터 분석 » 인터렉티브 하게 코드 실행이 가능. 질의하고 확인하고 질의하고 확인하고&lt;/p&gt;

&lt;h2 id=&quot;확장성이-좋음&quot;&gt;확장성이 좋음&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Spark SQL  : 코드대신 sql로 데이터 분석&lt;/li&gt;
  &lt;li&gt;Spark streaming  : 코드 베이스를 많이 바꾸지 않고도 실시간 분석 가능&lt;/li&gt;
  &lt;li&gt;MLLib&lt;/li&gt;
  &lt;li&gt;GraphX : 대용량 그래프 분석 등&lt;/li&gt;
  &lt;li&gt;sparkR&lt;/li&gt;
  &lt;li&gt;제플린&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_spark_1.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스팍을 익히면 다른 분야로도 건드리기 쉬움&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;이렇게-되기까지&quot;&gt;이렇게 되기까지&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;열정 넘치고&lt;/li&gt;
  &lt;li&gt;지라에서 창립자도 열심히&lt;/li&gt;
  &lt;li&gt;성능향상 &amp;amp; 인터페이스 개선&lt;/li&gt;
  &lt;li&gt;투자를 잘 받음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;예상되는-질답&quot;&gt;예상되는 질답&lt;/h2&gt;

&lt;h3 id=&quot;spark이-하둡을-대체-할까요&quot;&gt;spark이 하둡을 대체 할까요?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네 - 니요.&lt;/li&gt;
  &lt;li&gt;Spark을 단독 설치해도 되고 하둡 작업을 스팍으로 옮길 수 도 잇긴 하지만….&lt;/li&gt;
  &lt;li&gt;스팍이 shuffling이 많이 일어나는 연산들 ( id별로 그룹을 만든다던가) 하는 경우 Spark에서 잘 안되는 경우가 잇음.&lt;/li&gt;
  &lt;li&gt;물론 하둡을 사용해도 굉장히 오래걸리거나 비효율&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;공부해야할까용&quot;&gt;공부해야할까용?&lt;/h3&gt;
&lt;p&gt;—  네네 시작해보세요.
고성능, 편리한 인터페이스, 시간과 비용도 많이 아낄 수 있고 ,  점점더 많이 쓰이고 있으므로 커리어 면에서 지금 시작하십쇼&lt;/p&gt;

&lt;h3 id=&quot;첫-데이터-분석&quot;&gt;첫 데이터 분석!?&lt;/h3&gt;
&lt;p&gt;— GA, firebase Analytics facebook anaylitics 등 무료 분석 툴 먼저 사용해 보고 그 다음 spark 를 써보세요&lt;/p&gt;

&lt;h3 id=&quot;기존-하둡을-번속하고-있습니다-spark-으로-옮길까요&quot;&gt;기존 하둡을 번속하고 있습니다. spark 으로 옮길까요?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;네넹 저는 그랫습ㄴ다.  cloud로&lt;/li&gt;
  &lt;li&gt;2~5개 정도의 성능향상과 코드가 간단해지고 생산성이 크게 향상&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;쓰고있는--클러스터-메모리가-부족합니다&quot;&gt;쓰고있는  클러스터 메모리가 부족합니다.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;반복 작업이 아닌 ETL 의 경우 메모리에 꼭 올릴 필요 없으므로 문제가 없당 .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다만 grouping ( shuffling이 많은) 연산의 경우 메모리가 넉넉해야하니 (작업이 정상 작동안되거나 안끝나는 경우가 있음) 주의 요망&lt;/p&gt;

&lt;h2 id=&quot;스팍의-미래&quot;&gt;스팍의 미래&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Spark SQL이 점점 좋아지고 중요해짐&lt;/li&gt;
  &lt;li&gt;saprk 2.0의 DataSet API&lt;/li&gt;
  &lt;li&gt;RDD API도 점점 중요도 상승 (자유도가 높음) - 예전보다는 많이 복잡해진건 사실이지만 더 다양한 분야로 나가기 위함일듯&lt;/li&gt;
  &lt;li&gt;tensorflow 등 프로젝트의 대용량 고성능 엔진 역할&lt;/li&gt;
  &lt;li&gt;기존 BI 툴들과 경쟁&lt;/li&gt;
  &lt;li&gt;빅데이터 분석 엔진에서 General 컴퓨팅 엔진으로 확산&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mllib-vs-tensor-flow&quot;&gt;MLlib vs tensor flow&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;2.0에서 spark mllib이 나오긴 햇는데 다시 없어지지 않을까??&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article6&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;6-in-app-messaging-and-chatbot&quot;&gt;[6] In-App Messaging and Chatbot&lt;/h1&gt;

&lt;h2 id=&quot;in-app-messaging&quot;&gt;in-app messaging&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_1.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;챗 ui + 메세징 sdk를 제공하여 내제화된 chat 기능을 구현.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;메세지&quot;&gt;메세지&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;기본 : text, image 등등&lt;/li&gt;
  &lt;li&gt;확장 메세지 : 쿠폰, 배송 조회 등 -  fully customize 된 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;conversational-commerce&quot;&gt;conversational commerce&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;챗 인터페이스 내에서 상거래 또는 상거래를 지원하는 형태 ( 사람, 브랜드, 서비스, 봇 등)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_5.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;최근-주목받게된-배경&quot;&gt;최근 주목받게된 배경&lt;/h3&gt;
&lt;p&gt;— 모바일 메세징 서비스가 스마트 폰의 gateway
— 텔레폰 포비아 현상의 확대
— 대화창 내에서 모든 상거래 행위 완결 가능
— 최근 상거래 트렌드  : 최근 가장 친숙한 인터페이스&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_6.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인앱챗 형태의 커머스: skp&lt;/li&gt;
  &lt;li&gt;메신저 플랫폼 기반의 대화형 커머스 : 카카오톡 라인&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_7.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;나중에는 AI chatbot 으로 발전 가능성이 잇지&lt;/p&gt;

&lt;h2 id=&quot;chatbot&quot;&gt;Chatbot&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_8.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;챗 ui에서 동작하며, 자연어를 통해 context에 맞는 응답을 제공하는 커뮤니테이션 소프트 웨어
— 최근 주요 ICT 기업들의 AI 투자 및 챗봇 platform 시도
— line, Facebook, MS, google also chatbot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_9.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;커머스-입장에서-필요한-것들&quot;&gt;커머스 입장에서 필요한 것들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;메세지 플랫폼&lt;/li&gt;
  &lt;li&gt;다이얼로그 시스템&lt;/li&gt;
  &lt;li&gt;커머스 백엔드&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다 모바일향으로 잘 조합해야함. 그냥 제공한다고 되는 것이 아님.&lt;/p&gt;

&lt;h3 id=&quot;구현&quot;&gt;구현&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;skp 내 요구사항&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_10.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;— 셀러톡
— 지인톡
— 상담톡
— 문자쇼핑&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_11.JPG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;자사 서비스, 11번가, 시럽 스타일 프로젝트 앤 등에 적용했음.&lt;/p&gt;

&lt;h2 id=&quot;client-side&quot;&gt;Client side&lt;/h2&gt;

&lt;h3 id=&quot;talk-framework&quot;&gt;talk framework&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_12.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;서비스 모듈, 톡모듈, 코어 모듈 등. 을 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;고민들&quot;&gt;고민들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;표준화. (서비스별 서버 protocol 의 표준화 노력)&lt;/li&gt;
  &lt;li&gt;모듈화 - block 단위로 재사용 가능하도록&lt;/li&gt;
  &lt;li&gt;컨트롤 (기능별 on/off)&lt;/li&gt;
  &lt;li&gt;커스터마이즈 UI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;size-reduction&quot;&gt;Size Reduction&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;사용하지 않는 reoucese 제거. 정적 분석을 활용해서 리소스 제거 (50%절감)&lt;/li&gt;
  &lt;li&gt;필요한 해상도로만 제공  : xhdpi, xxhdpi만 유지&lt;/li&gt;
  &lt;li&gt;remove duplicate library  :ex) network library dependency 중복 —&amp;gt; okhttp3&lt;/li&gt;
  &lt;li&gt;reuse resources :&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;structured-message-type&quot;&gt;structured message type&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_13.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_inapp_14.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_inapp_15.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_inapp_16.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;fb 책봇 가이드 보면 msg template» 의 슈퍼셋 정도로 이해하면 될듯&lt;/li&gt;
  &lt;li&gt;자유도를 많이 주고 싶엇다.&lt;/li&gt;
  &lt;li&gt;json 으로 내려주면 UI가 나눠져서 그려진다.&lt;/li&gt;
  &lt;li&gt;json에 action 값도 내려줘서 어떠한 버튼에 대한 액션도 다 넣어줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;server-side&quot;&gt;Server side&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_17.JPG&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;talk-server-구조&quot;&gt;talk server 구조&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_18.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;가장 상위에는 각 서비스들이 잇고 그 아래에는 인앱 메세지 sdk가 잇고&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;stack&quot;&gt;stack&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_19.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;nodejs&lt;/li&gt;
  &lt;li&gt;relay server : 이벤트 드리분인데 메세지 순서 보장을 위해 서버시간을 부가 정보로 전달 하여 판단&lt;/li&gt;
  &lt;li&gt;network 이슈 처리 대한 처리&lt;/li&gt;
  &lt;li&gt;IE 지원 후덜덜&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;웹훅&quot;&gt;웹훅&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_inapp_20.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;structured msg, 웹훅, send api&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;암호화, 데이터 변조 방지, 메세지&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article7&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;7-google-tensor-flow--machine-learning-in-the-cloud&quot;&gt;[7] Google Tensor Flow &amp;amp; Machine Learning in the Cloud&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;발표자 : 클라우드 플랫폼 팀에잇는 advocate&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;뉴럴-네트워크--딥러닝&quot;&gt;뉴럴 네트워크 &amp;amp; 딥러닝&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;뉴럴 네트워크 :  function that can learn&lt;/li&gt;
  &lt;li&gt;어떤 어플리케이션이든 적용할 수 있다. ex) 게임 서버,..&lt;/li&gt;
  &lt;li&gt;텐서플로 플레이 그라운드 써볼수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;머신러닝이-구글-어디서-쓰이는지&quot;&gt;머신러닝이 구글 어디서 쓰이는지&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;구글 검색 : rankbrain이라는 딥 뉴럴 네트워킹을 사용하는데 이게 서치 랭킹 매기는데 사용댐.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ex&quot;&gt;ex&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Google Photos&lt;/li&gt;
  &lt;li&gt;Google gmail : 답장 10%가 모바일에서 누른걸로 답변이 되고 잇음. (선택지가 밑에 나오네)&lt;/li&gt;
  &lt;li&gt;Google translation&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Google 뉴럴 사용하고 나서 data center cooling energy 40% 아낌.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;딥 러닝을 점점 더 쓰고 잇음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;머신러닝의-확장&quot;&gt;머신러닝의 확장&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;구글에서 제공하는 machine learning&lt;/li&gt;
  &lt;li&gt;기존 ml api는 사용하기 쉽고&lt;/li&gt;
  &lt;li&gt;텐서플로, 클라우드 머신의 경우 커스터마이즈를 더 할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;could-vision-api&quot;&gt;Could Vision API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://vision-explorer.reactive.ai/&quot;&gt;http://vision-explorer.reactive.ai/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/vision/docs/samples&quot;&gt;https://cloud.google.com/vision/docs/samples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;cat이라는걸 봣을때 pet이라는것까지 꺼냄. 아마 배경이 집이라서? (wow)&lt;/li&gt;
  &lt;li&gt;사람/ 사람마다 detect 기분, 틸트 등 분석. Wow&lt;/li&gt;
  &lt;li&gt;랜드마크 detection 사진속에 장소가 어디인지 map에 표시&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cloud-speech-api&quot;&gt;Cloud Speech API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;pre-trained models&lt;/li&gt;
  &lt;li&gt;ml 스킬은 요구되지 않음.&lt;/li&gt;
  &lt;li&gt;오디오를 들으면 txt로 변환&lt;/li&gt;
  &lt;li&gt;natural language api. 문장을 쓰면 그 안에 entity, sentiment, syntax들을 뽑아냄.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;텐서플로&quot;&gt;텐서플로&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;위의 api로는 모든 것들을 다 포괄 하기가 어려움.&lt;/li&gt;
  &lt;li&gt;오픈소스,  머신 인텔리전스&lt;/li&gt;
  &lt;li&gt;2015년 11월에 런치&lt;/li&gt;
  &lt;li&gt;많은 ML 프로젝트에 쓰이고 잇음&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;가장 popular한 ml 프로젝트&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;시작하기가 쉬움.&lt;/li&gt;
  &lt;li&gt;예전에는 이해 안되는 부분도 알앗어야 햇는데 텐서플로 같은 경우에는 내용물을 다 알필요 없고 interface구현만 잘 하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;portable-and-scalable&quot;&gt;portable and scalable&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;맥, 윈도우에서 다 돌고&lt;/li&gt;
  &lt;li&gt;GPU&lt;/li&gt;
  &lt;li&gt;prediction on :
    &lt;ul&gt;
      &lt;li&gt;Android and iOS&lt;/li&gt;
      &lt;li&gt;rasPi and TPU&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tensorflow-in-the-wold-democratization-of-deep-learning&quot;&gt;TensorFlow in the Wold (democratization of deep learning)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;텐서플로가 어디쓰이는지&lt;/li&gt;
  &lt;li&gt;ex) 오이 농사&lt;/li&gt;
  &lt;li&gt;텐서플로를 통해서 모양별로 cucumber sorting 하도록.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;참고 : &lt;a href=&quot;https://cloud.google.com/blog/big-data/2016/08/how-a-japanese-cucumber-farmer-is-using-deep-learning-and-tensorflow&quot;&gt;tensorflow cnn cucumber&lt;/a&gt;
후라이드 치킨도 분류해준다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;soring garbages등 recyle인지 compost 인지&lt;/li&gt;
  &lt;li&gt;드론에 적용해서 트럭 갯수 새기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;challenges&quot;&gt;Challenges&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;dnn은 은 트레이닝할 dataset이 필요하고 시간도 많이 필요함&lt;/li&gt;
  &lt;li&gt;고로 google cloud가 필요하다.&lt;/li&gt;
  &lt;li&gt;Google Cloud 는 the datacenter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_tensorflow_1.JPG&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;구글 자체 jupiter 네트워크를 가지고 있음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;distributed Training with Tensorflow&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tensor-processing-unit&quot;&gt;Tensor Processing Unit&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_tensorflow_2.JPG&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CPU GPU도 아닌 TPU라는걸 만들고 잇음.&lt;/li&gt;
  &lt;li&gt;Cloud를 쓰면&lt;/li&gt;
  &lt;li&gt;스펙이 빠방함.&lt;/li&gt;
  &lt;li&gt;엄청 오래걸릴꺼 금방 끝냄.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cloud-machine-learning-cloud-ml&quot;&gt;Cloud Machine learning (Cloud ML)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;커스텀 텐서플로 그래프.&lt;/li&gt;
  &lt;li&gt;클라우드 데이터 플러우와 integrated&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;use-cases-1&quot;&gt;use cases&lt;/h2&gt;
&lt;p&gt;ex) AUCNET - 일본기업&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;내 차 여러개의 사진들을 올리면 각 차의 파트를 detect 하고 (using tensor flow)&lt;/li&gt;
  &lt;li&gt;이게 앞면인지 뒷면인지 등등&lt;/li&gt;
  &lt;li&gt;그리고 어떤 차인지 , 가격대는 어떻게 되는지 내줌.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article8&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;8-빅데이터와-자연어처리-기술을-이용한-11번가-상품-추천&quot;&gt;[8] 빅데이터와 자연어처리 기술을 이용한 11번가 상품 추천&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;사용자의 소비 패턴, 을 모델링을 하고 그 결과에 따라 사용자가 관심을 가진 부분을 알아내서 추천하는것&lt;/li&gt;
  &lt;li&gt;사용자가 소비 성향을 보여주는 것 . 이력상에 잇는 상품들을 분석하고, 소비자를 모델링 »&amp;gt; 추천&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;추천-시스템-배경과-목적&quot;&gt;추천 시스템 배경과 목적&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_1.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;상품수는 많지만 20%가 거의&lt;/li&gt;
  &lt;li&gt;80%를 버리는게 아니라 20% 못지않은 큰 가치를 창출해 내야한다 &amp;gt; 새로운 서비스. 새로운 수익모델을 만들어 내는것 . : 롱테일&lt;/li&gt;
  &lt;li&gt;개인의 다양성을 중시해 롱테일을 실형&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;netflix , amazon&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;요즘은 정보홍수, 기호에 맞게 취사 선택 환경 제공이 중요해짐.&lt;/li&gt;
  &lt;li&gt;방대한 데이터 속에서 사용자에게 맞게&lt;/li&gt;
  &lt;li&gt;사용자 행동 이력, 관계, 상품 유사도 등으로 관심 상품을 자동으로 예층하고 제공하는 시스템 : 추천 시스템 정의.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;추천-알고리즘-고찰&quot;&gt;추천 알고리즘 고찰&lt;/h2&gt;

&lt;h3 id=&quot;협업-필터링--cf--collaborative-filtering-&quot;&gt;협업 필터링 ( CF : collaborative filtering )&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;kNN-based : 나의 이력을 기록했다가 추천 , 사용자 간의 유사도 : 나랑 비슷한 사람이 소비한걸 추천 user-based, item- based&lt;/li&gt;
  &lt;li&gt;Model-based:&lt;/li&gt;
  &lt;li&gt;ex) 아마존&lt;/li&gt;
  &lt;li&gt;item similiarity DB를 구축하여&lt;/li&gt;
  &lt;li&gt;사용자가 사고 &amp;gt; 평점 남기고 &amp;gt; user-pforile에 기록, 유사 상품 DB를 미리 만들어놓고 랭킹하여 추천&lt;/li&gt;
  &lt;li&gt;사용자의 구매, 방문 클릭 을 기반으로&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기존-cf의-장단점&quot;&gt;기존 CF의 장단점&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_2.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;장점: 최소한의 기본 정보만으로도 구현 가능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다양하게 적용 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;단점 : 고차원, 저밀도.&lt;/li&gt;
  &lt;li&gt;새로운 사용자나 아이템이 추가되는 따르는 확장성이 떨어짐.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;더-완화한-모델&quot;&gt;더 완화한 모델&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Model-based CF 알고리즘
— 데이터 내에 잠제되어있는 속성을 leanring하여&lt;/li&gt;
  &lt;li&gt;패턴 속성을 알아내서&lt;/li&gt;
  &lt;li&gt;공통된 속성을 뽑아내서&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;content-based-filtering&quot;&gt;content-based filtering&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아이템의 속성을 기반으로 유사 속성 아이템을 추천.&lt;/li&gt;
  &lt;li&gt;아이템 자체를 분석하여 추천 (반면,CF는 사용자의 행동이력 )&lt;/li&gt;
  &lt;li&gt;아이템 분석 및 유사도를 측정하는 것이 핵심 — 자연어 처리등을 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;추천-알고리즘의-장단점&quot;&gt;추천 알고리즘의 장단점&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_3.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CF vs CBF&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;두가지를 융합하여  + 딥러닝 추천알고리즘을 만듬&lt;/p&gt;

&lt;p&gt;-상품과 사용자에 대해 연관성을 확인해 distributional semanric model&lt;/p&gt;

&lt;h3 id=&quot;distributional-semanric-model&quot;&gt;distributional semanric model&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_5.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;언어에서 많이 쓰이는것&lt;/li&gt;
  &lt;li&gt;단어에 의미는 그것이 사용되는 용례에 대해 그 의미가 추론 될 수 있다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DSM은. 단어가 각각 다른곳에서 쓰일때 통계를 내서 단어의 의미를 추론하는것&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;사용되는 기술
— word embedding
단어의 의미와 맥락을 고려해 단어를 벡터로 표형한것 » Word2Vec 알고리즘. 을 이용 : 같이 자주 출연할수록 단어의 뜻이 유사하다. 추론 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;그럼-추천에는-어케-사용되엇는가&quot;&gt;그럼 추천에는 어케 사용되엇는가&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_6.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용자와 상품을 모델링
-&amp;gt; 이 둘 사이 메트릭스에서 유사도를 찾아냄.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_7.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_suggsystem_8.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_suggsystem_9.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;law data :  상품 디비와, 행동이력 디비, 사용자 디비 를 쌓아서&lt;/li&gt;
  &lt;li&gt;이걸 기반으로 word embedding을 이용하여 Item과 User DSM modeling&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;모델링은-어떻게-하는가&quot;&gt;모델링은 어떻게 하는가&lt;/h2&gt;

&lt;p&gt;사용자 소비 관련 행동 분석과 그에 관련된 상품 정보 속성을 모델링
— 검색/클릭/구매/리뷰 같은 행동을 분석
-(사진) 키워드 검색, 감성 분석 등.&lt;/p&gt;

&lt;p&gt;과거 상품에 대한 분석&lt;/p&gt;

&lt;h2 id=&quot;시스템-구성&quot;&gt;시스템 구성&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_10.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_suggsystem_11.JPG&quot; /&gt;
&lt;img src=&quot;/images/techplanet2016_suggsystem_12.JPG&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Data Analysis &amp;amp; training preparation&lt;/li&gt;
  &lt;li&gt;Model training&lt;/li&gt;
  &lt;li&gt;model serving&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/techplanet2016_suggsystem_13.JPG&quot; /&gt;&lt;/p&gt;

&lt;div id=&quot;article9&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;9-facebook-chatbot-m-messenger&quot;&gt;[9] Facebook Chatbot M messenger&lt;/h1&gt;

&lt;h3 id=&quot;cybelle&quot;&gt;cybelle&lt;/h3&gt;
&lt;p&gt;-&lt;/p&gt;

&lt;h3 id=&quot;튜링&quot;&gt;튜링&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;튜링 테스트 20s 후 이게 휴민인지 컴퓨터인지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;eliza&quot;&gt;eliza&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;1966년&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ai-come-back&quot;&gt;AI come back&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;machine learning eventually work:  make fomular and input to output
    &lt;ul&gt;
      &lt;li&gt;예전과 다르게 머신 러닝이 잘 동작함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Messaging platform are exploding
—&amp;gt; offline &amp;gt; website » mobile app » messaing
— 이제 메세징이 인터넷을 쓰는데 보편적인 방법이 되엇음.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;bot&quot;&gt;Bot&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;conversation : in direction&lt;/li&gt;
  &lt;li&gt;natural language is optional&lt;/li&gt;
  &lt;li&gt;채널이 많아짐 messager, sms, web, voice , siri 등등&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;use-cases-2&quot;&gt;use cases&lt;/h2&gt;

&lt;h3 id=&quot;spring&quot;&gt;Spring&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;shopspring.com : e-commerce 플랫폼&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;klm&quot;&gt;KLM&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;airline company&lt;/li&gt;
  &lt;li&gt;question을 넣으면 굉장히 자세한 답이 오네.. 신ㄱㅣ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;봇-vs-앱&quot;&gt;봇 vs 앱&lt;/h2&gt;

&lt;h3 id=&quot;봇-장점&quot;&gt;봇 장점&lt;/h3&gt;
&lt;p&gt;— 따로 깔 필요요가 없고&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;공짜 . (메세지 플랫폼에 따라 다르긴 하지)&lt;/li&gt;
  &lt;li&gt;노티피케이션, authentication , 페이먼트 등등&lt;/li&gt;
  &lt;li&gt;문맥이 항상 이어짐 the thread always cantina contest&lt;/li&gt;
  &lt;li&gt;collabration ( 대화 윗 여러 사람과 봇) : 대화창 내에서 여러사람과 함께 사용할수 잇음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;만들기&quot;&gt;만들기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;write “job spec” 스펙 짜기&lt;/li&gt;
  &lt;li&gt;start with a simple implementation
    &lt;ul&gt;
      &lt;li&gt;질문이 들어오면 자연어 처리를 통해서 intent 와 recipe을 나눠서 Dialog manager에 넣어줘서 답을 찾고 자연어 처리를 통해 인간 언어로 바꿔주고&lt;/li&gt;
      &lt;li&gt;simplify the world&lt;/li&gt;
      &lt;li&gt;development workflow&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://wit.ai/&quot;&gt;wit.ai&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;natural&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Set expectation&lt;/li&gt;
  &lt;li&gt;Ship early and ofter&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>[Play framework] play-scala 시작하기</title>
   <link href="https://jiyeonseo.github.io/2016/10/10/start-play-scala/"/>
   <updated>2016-10-10T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/10/start-play-scala</id>
   <content type="html">&lt;h3 id=&quot;환경&quot;&gt;환경&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Mac OSX 10.11&lt;/li&gt;
  &lt;li&gt;brew 0.9.9&lt;/li&gt;
  &lt;li&gt;activator 1.3.10&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;typesafe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Fetching&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;templates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Browse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;templates:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//lightbend.com/activator/templates&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Choose&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;these&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;featured&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;templates&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;play&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;templates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;being&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;play-scala&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cd {프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;then:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cd {프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;then:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;To&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cd {프로젝트명}&quot;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;then:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;커맨드 라인에서는 바로 프로젝트로 들어가면 activator가 있는 것 처럼 나오지만..&lt;/p&gt;

&lt;p&gt;sbt 버전업이 되면서 activator가 bin/activator로 path가 변경되었다. 따라서 아래와 같이 실행하여야 한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;프로젝트명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;activator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://www.playframework.com/documentation/2.5.x/NewApplication&quot;&gt;play framework 2.5 Doc&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] '신입 탐정의 데이터 분석 입문'</title>
   <link href="https://jiyeonseo.github.io/2016/10/10/data-analysis-entry/"/>
   <updated>2016-10-10T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/10/data-analysis-entry</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=BOK00030489594YE&quot;&gt;‘신입 탐정의 데이터 분석 입문’&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;급하게 데이터 분석이 무엇인가를 공부해보기 위해 읽은 기초 입문 책.&lt;/p&gt;

&lt;p&gt;내 목적과 정확히 부합했고,
“통계”의 정의와 같은 기초적인 내용부터 시작하여 다양한 분석 방법까지, 요점만 콕콕 찝어주는 아주 시원한 책이다!&lt;/p&gt;

&lt;p&gt;큰 내용은.. 제목에서도 알 수 있다시피 탐정 사무소에 신입으로 들어간 주인공이
사건(?) 해결을 위해 데이터 분석을 시작하게 되고 점점 성장해 나가는 내용이다.
데이터 분석에만 집중 한게 아니라 배경내용까지 치밀(???) 하게 구성되어 있으니 끝까지 읽기 추천한다.&lt;/p&gt;

&lt;p&gt;무엇보다 쉽고, 요점은 또 따로 정리해주며, R문법 설명과 Rstudio 실습까지 돕고 있으니
데이터 분석을 시작하는 모든 사람에게 도움이 될 것 같다.&lt;/p&gt;

&lt;p&gt;후반부에 텍스트 마이닝이 개인적으로는 많이 흥미로웠는데,
소개된 MeCab의 한글용은 제약이 많다는 글 내용을 보니 많이 안타까웠다.&lt;/p&gt;

&lt;p&gt;검색을 해보니 국내에는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitbucket.org/eunjeon/mecab-ko&quot;&gt;은전한닢 프로젝트&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kkma.snu.ac.kr/documents/&quot;&gt;꼬꼬마 한국어 형태소 분석기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;가 대표적으로 많이 쓰이고 있는것 같다.&lt;/p&gt;

&lt;p&gt;다음에 시간이 되면 책 실습을 위의 라이브러리들로 적용해 봐야겠다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Special methods</title>
   <link href="https://jiyeonseo.github.io/2016/10/04/17-scala-special-methods/"/>
   <updated>2016-10-04T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/04/17-scala-special-methods</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;직접 +, - 와 같은 method도 구현 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Vect3D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;x:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;y:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;z:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vect3D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vect3D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;v:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vect3D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vect3D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;c:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vect3D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Case Class</title>
   <link href="https://jiyeonseo.github.io/2016/10/04/15-scala-case-class/"/>
   <updated>2016-10-04T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/04/15-scala-case-class</id>
   <content type="html">&lt;h3 id=&quot;case-class&quot;&gt;case class&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;class + companion object를 사용 하듯이 new 없이 객체 생성 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;copy method&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;office:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;role:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fred&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Fred&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Anchorage&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Salesman&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// fred: Employee = Employee(Fred,Anchorage,Salesman)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fred&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Joe&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// joe: Employee = Employee(Joe,Anchorage,Salesman)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://www.scala-exercises.org/std_lib/case_classes&quot;&gt;scala-exercies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://twitter.github.io/scala_school/ko/basics2.html#caseclass&quot;&gt;스칼라스쿨&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Object</title>
   <link href="https://jiyeonseo.github.io/2016/10/04/14-scala-object/"/>
   <updated>2016-10-04T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/04/14-scala-object</id>
   <content type="html">&lt;h3 id=&quot;object&quot;&gt;Object&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;companion object : class 명과 같은 object. factory 를 만들때 자주 사용.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testBar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// new 사용하지 않고 바로 생성 가능&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://www.scala-exercises.org/std_lib/objects&quot;&gt;scala-exercies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://twitter.github.io/scala_school/ko/basics2.html#object&quot;&gt;스칼라스쿨&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Trait</title>
   <link href="https://jiyeonseo.github.io/2016/10/04/13-scala-trait/"/>
   <updated>2016-10-04T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/04/13-scala-trait</id>
   <content type="html">&lt;h3 id=&quot;trait&quot;&gt;trait&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자바 interface와 비슷&lt;/li&gt;
  &lt;li&gt;argument를 받을 수 없음.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Character&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;items:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;currentRoom:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Player&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;items:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;currentRoom:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Characters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;immutable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://www.scala-exercises.org/std_lib/traits&quot;&gt;scala-exercies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://twitter.github.io/scala_school/ko/basics.html#trait&quot;&gt;스칼라스쿨&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Syntactic Sugar</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/12-scala-Syntactic-sugar/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/12-scala-Syntactic-sugar</id>
   <content type="html">&lt;h2 id=&quot;syntactic-sugar&quot;&gt;Syntactic Sugar&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;



  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// String = hi&lt;/span&gt;





  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myWhile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;cond:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;body:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;
      &lt;span class=&quot;nf&quot;&gt;myWhile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cond&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;myWhile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Partial Functions</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/11-scala-partial-function/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/11-scala-partial-function</id>
   <content type="html">&lt;h3 id=&quot;partial-functions&quot;&gt;Partial Functions&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// complete function&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;???&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;// partial function&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;pf:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PartialFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Number&quot;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;s:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;The string &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// String = Number&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// String = The string Hello&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Loops</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/10-scala-loops/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/10-scala-loops</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;in Java&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;in Scala&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;to 와 until의 차이점&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res1:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Inclusive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res2:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;yield&quot;&gt;yield&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Unit 이 아니라 Seq 를 return해 준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// Array[Double] = Array(0.22942607856489816, 0.42670896833696664, 0.2115497274377164, 0.4793313932180108, 0.0640459561805972)&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;//scala.collection.immutable.IndexedSeq[(Int, Int)] = Vector((0,5), (0,6), (0,7), (0,8), (0,9), (1,5), (1,6), (1,7), (1,8), (1,9), (2,5), (2,6), (2,7), (2,8), (2,9), (3,5), (3,6), (3,7), (3,8), (3,9), (4,5), (4,6), (4,7), (4,8), (4,9))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;for 문 안에서 다양한 연산 및 if문 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// for 문 안에서도 연산 가능&lt;/span&gt;

 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// for 문 안에서도 filter도 가능&lt;/span&gt;


 &lt;span class=&quot;c1&quot;&gt;// {}로 바꾸면 ;(세미콜론) 생략 가능&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;


 &lt;span class=&quot;c1&quot;&gt;// parallel 하게도 가능&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;par&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// scala.collection.parallel.immutable.ParSeq[(Int, Int)] = ParVector((0,5), (0,6), (0,7), (0,8), (0,9), (4,5), (4,6), (4,7), (4,8), (4,9), (8,5), (8,6), (8,7), (8,8), (8,9))&lt;/span&gt;
 &lt;span class=&quot;c1&quot;&gt;// return 값도 scala.collection.parallel.immutable.ParSeq 로 변함.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Sets and Maps</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/09-scala-sets-maps/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/09-scala-sets-maps</id>
   <content type="html">&lt;h2 id=&quot;set&quot;&gt;Set&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;default : immutable&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;s:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res0:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res1:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;mutable로 하고 싶으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;import collection.mutable&lt;/code&gt; 임포트!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collection.mutable&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collection.mutable&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;mutSet:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res3:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;map&quot;&gt;Map&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;default : immutable&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Taxas&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Austin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Colorado&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Denver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Taxas&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Austin&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Colorado&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Denver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collection.mutable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Patterns</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/08-scala-patterns/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/08-scala-patterns</id>
   <content type="html">&lt;h3 id=&quot;patterns&quot;&gt;Patterns&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something Something string&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;s&quot;&gt;&quot;5:36:43&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Array[String] = Array(5, 36, 43)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;5:36:43&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//hour: String = 5&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//minute: String = 36&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//second: String = 43&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Nil&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// same&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;listLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;lst:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Nil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;h:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// head :: tail&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;listLength&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Int = 5&lt;/span&gt;


  &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Not found&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Found &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// String = Found 3&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;age:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mark&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Amber&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//n: String = Mark&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//a: Int = 40&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Higher-order Methods and Lambda Expressions</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/07-scala-higher-order-Methods-lambda-expressions/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/07-scala-higher-order-Methods-lambda-expressions</id>
   <content type="html">&lt;h3 id=&quot;higher-order-methods-and-lambda-expressions&quot;&gt;Higher-order Methods and Lambda Expressions&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HigerOrderMethods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tabulate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// map : transformation&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same.&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// filter&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;take&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// flatmap : 하나의 plain array로&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;take&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatten&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;take&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// filter and return boolean&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Boolean = true&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Boolean = false&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reduceLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Int = 15&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reduceLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;foldLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// default value and function&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;foldLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//  String = 012345&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Option[Int] = Some(8)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Option[Int] == None&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Option[Int] = Some(3)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOrElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Int = 3&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOrElse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Int = 0&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;option&quot;&gt;Option&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Some type 과 None&lt;/li&gt;
  &lt;li&gt;값이 있는 경우 Some(3) 과 같이 return&lt;/li&gt;
  &lt;li&gt;값이 없는 경우 None 으로 return&lt;/li&gt;
  &lt;li&gt;cf) Java의 Null&lt;/li&gt;
  &lt;li&gt;getOrElse() 를 이용해 None 대신 default 값을 지정 가능.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Collections</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/06-scala-collections/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/06-scala-collections</id>
   <content type="html">&lt;p&gt;크게 두가지 Collection이 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import scala.collection.mutable&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import scala.collection.immutable&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://backtobazics.com/wp-content/themes/twentyfourteen/images/scala/collections.png&quot;&gt;&lt;img src=&quot;http://backtobazics.com/wp-content/themes/twentyfourteen/images/scala/collections.png&quot; /&gt;&lt;/a&gt;
참고 : &lt;a href=&quot;http://www.scala-lang.org/api/current/index.html#scala.collection.package&quot;&gt;http://www.scala-lang.org/api/current/index.html#scala.collection.package&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sequences--array-list-vector-buffer-and-range&quot;&gt;Sequences : Array, List, Vector, Buffer and Range&lt;/h2&gt;

&lt;h3 id=&quot;생성&quot;&gt;생성&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res0:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res1:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res2:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res3:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res4:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AnyVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res0: Int = 1 // index값&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// function 사용처럼 보일 수 있다. like below&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 기본 Array는 mutable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res2: Array[Int] = Array(99, 2, 3)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 기본 List는 Immutable&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// lst(0) = 99 // value update is not a member of List[Double]&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// List[AnyVal] = List(1, 7.2, 4, 9) // return new value, not change value&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// List[Double] = List(7.2, 4, 9) // not changed&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Array.fill({array size})({담고자 하는 값})&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// arr2: Array[String] = Array(hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi, hi)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// val arr2 = Array.fill(10)(math.random)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// pass by name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;littleArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;i:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;littleArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tabulate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Array.tabulate({array size})({function})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;vector&quot;&gt;Vector&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;indexable sequence&lt;/li&gt;
  &lt;li&gt;immutable collection&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res15: scala.collection.immutable.Vector[Int] = Vector(1, 2, 3)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;buffer-type&quot;&gt;Buffer type&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;mutable&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res16: scala.collection.mutable.Buffer[Int] = ArrayBuffer(1, 2, 3)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;scala에서 기본  collection은 immutable이라서 Buffer를 쓰려면 위와같이 쓰거나&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import collection.mutable._&lt;/code&gt; 를 import 받아야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;range&quot;&gt;Range&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (1).to(10) 로 컴파일 됨. like 1+2 == (1).+(2)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res17:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Inclusive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res18:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res19:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Partial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NumericRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;$Partial&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75332&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dcf&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res20:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NumericRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NumericRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.30000000000000004&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8999999999999999&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res21:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Inclusive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res22:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;api&quot;&gt;API&lt;/h2&gt;

&lt;p&gt;api 문서 : http://www.scala-lang.org/api/current/index.html#scala.collection.package&lt;/p&gt;

&lt;h3 id=&quot;array&quot;&gt;array&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Array는 자바의 array를 상속받아 따로 있음.(collection 아래에 있지 않음)  http://www.scala-lang.org/api/current/index.html#scala.Array&lt;/li&gt;
  &lt;li&gt;scala.collection.mutable 아래에 ArrayOps
— wapper for Arrays&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res25:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;arr2:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res29:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res30:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.++(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res31:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res32:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res34:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res35:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;head&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res36:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;last&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res37:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tail&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res38:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res39:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;take&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res40:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reverse&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res41:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;splitAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res42:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;splitAt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;before:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;after:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res45:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res47:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nonEmpty&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res50:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res51:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res52:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indices&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res53:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res54:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;max&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res55:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res56:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;104&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;product&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res57:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;594&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res63:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;lst:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;error:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;found:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;
       &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toArray&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res59:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toVector&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res60:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;par&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// not a good idea&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res61:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;immutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ParSeq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;updated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res62:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;arr4:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;intersect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res64:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 교집합&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res65:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 합집합&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;distinct&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res69:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// distinct&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res66:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 차집합. arr4 - arr&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mkString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res70:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mkString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;(&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res72:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;view&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res73:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mutable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IndexedSeqView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SeqView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(...)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res75:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;zipWithIndex&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res77:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;indices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res79:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 위와 같은 결과값&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;한글 참고 : https://twitter.github.io/scala_school/ko/collections.html&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Function &amp; Recursion</title>
   <link href="https://jiyeonseo.github.io/2016/10/03/05-scala-function-recursion/"/>
   <updated>2016-10-03T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/03/05-scala-function-recursion</id>
   <content type="html">&lt;h2 id=&quot;functions&quot;&gt;Functions&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;x:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// def {name}({paramname} :{paramtype}) : {return type} = {function}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res0 : Double = 25.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;function에서 마지막 값이 return 되는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ 3
4
5} // res0:Int = 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;return type 생략해도 됨. 추론 가능. but 에러 혹은 실수를 막기위해 써주는게 좋다.&lt;/li&gt;
  &lt;li&gt;함수 안에서 return 을 사용하면 반드시 return type을 명시해 주어야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;greet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Unit : doesn’t return anything (생략 가능)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;pintln&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, $name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;greet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mark&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hello, Mark&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;recursion&quot;&gt;Recursion&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// n! = n * (n-1) * (n-2) * … * 3 * 2 * 1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;factorial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;recursive function은 반드시 return 타입을 명시해 주어야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;estimatePi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;estimatePi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// StackOverFlow Exception occured&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;StackOverFlow Exception을 잡기 위해서 꼬리재귀함수를 만들어야함&lt;/li&gt;
  &lt;li&gt;꼬리 재귀 함수 조건 : return 값에 어떠한 operate를 하면 안됨.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scala.annotation._&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;estimatePi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nd&quot;&gt;@tailrec&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;sum:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;random&lt;/span&gt;
          &lt;span class=&quot;nf&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;helper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;estimatePi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Nothing exception appeared.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;@tailrec을 명시적으로 분펴주면 return에 어떠한 opertation이 들어가면 컴파일 단계에서 에러를 뱉어준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://github.com/jiyeonseo/exercises-fpinscala/blob/master/src/test/scala/puruni/Recursion.scala&quot;&gt;puruni/Recursion.scala&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Match Expression</title>
   <link href="https://jiyeonseo.github.io/2016/10/02/04-scala-match-expression/"/>
   <updated>2016-10-02T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/02/04-scala-match-expression</id>
   <content type="html">&lt;h3 id=&quot;match-expression&quot;&gt;Match Expression&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;zero&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something bigger, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// _ : general wide , Something or Anything&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;zero&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something bigger, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result2 : String Something bugger, 15&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// tuple OK&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;zero&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something bigger, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result2 : String =  Something bugger, (15, 6)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;zero&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Same as b&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// result4 : String = Same as b // bcz this b is new variable.&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something bigger, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;// 위 경우 b를 val로 바꾸고 아래와 같이 바꾸면 원하는 대로 나올 수 있음.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;zero&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;one&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Same as b&quot;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Something bigger, &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// result2 : String Something bugger, 15&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] If Expression</title>
   <link href="https://jiyeonseo.github.io/2016/10/02/03-scala-if-expression/"/>
   <updated>2016-10-02T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/02/03-scala-if-expression</id>
   <content type="html">&lt;h3 id=&quot;if-expression&quot;&gt;If Expression&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Int = 16&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// (a%2==0)?(a/2):(3*a+1) // in Java&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;less&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// if(expression)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res0: AnyVal = 4 //AnyVal인 이유? else가 생략되면 else ( ) 를 Unit으로 추론하기 때문&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// res0: Any = hi //Any인 이유? Int는 AnyVal을 상속받았고 String은 AnyRef를 상속 받음.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 근데 위의 이유와 같이 else의 ( ) 는 unit이라 더 상위 개념인 Any로 추론&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;scala 는 functional natured language&lt;/li&gt;
  &lt;li&gt;if express의 결과 역시 return되어 변수에 할당 가능.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Variable</title>
   <link href="https://jiyeonseo.github.io/2016/10/01/02-scala-variable/"/>
   <updated>2016-10-01T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/01/02-scala-variable</id>
   <content type="html">&lt;h3 id=&quot;variable&quot;&gt;Variable&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Int = 5,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// non-changable value, final in Java, prefered in Scala&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Int = 5,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//  x = 0, y = 0,  z = 0&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// pattern usring tuples&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// tuple&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (Int, Int)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>[beginning-scala-programming] Type</title>
   <link href="https://jiyeonseo.github.io/2016/10/01/01-scala-type/"/>
   <updated>2016-10-01T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/10/01/01-scala-type</id>
   <content type="html">&lt;p&gt;udemy 강좌 &lt;a href=&quot;https://www.udemy.com/beginning-scala-programming&quot;&gt;Beginning Scala Programming&lt;/a&gt; 을 들으며 노트한 내용 입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;ex) Int, Double …&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res0:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res1:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.5&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;res2:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.scala-lang.org/resources/images/classhierarchy.img_assist_custom.png&quot;&gt;&lt;img src=&quot;http://docs.scala-lang.org/resources/images/classhierarchy.img_assist_custom.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;가장 상위 타입 : Any&lt;/li&gt;
  &lt;li&gt;Null : NullPointException 이 나는건 매우 귀찮음. 나중에 Option으로 극복해 보자&lt;/li&gt;
  &lt;li&gt;Unit : 아무것도 return 하지 않는 값. ex) void&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.scala-lang.org/api/2.11.7/index.html#scala.Nothing&quot;&gt;Nothing&lt;/a&gt; : bottom type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;더 자세한 타입 hierarchy 구조는 &lt;a href=&quot;http://docs.scala-lang.org/tutorials/tour/unified-types.html&quot;&gt;여기&lt;/a&gt;를 참고&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] '인터랙티브 디벨로퍼'를 읽고</title>
   <link href="https://jiyeonseo.github.io/2016/09/30/jongmin-kim-interactive-developer/"/>
   <updated>2016-09-30T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/09/30/jongmin-kim-interactive-developer</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=KOR9788968481840&quot;&gt;김종민의 ‘인터랙티브 디벨로퍼’&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;우연치 않게 보게된 이 책은 정말 술술 읽을 수 있었다.
일단 컬러책에 다양한 디자인들 그리고 인스타그램에서 볼 법한 멋진 사진들이 가득하다.
작가의 프로젝트들을 넋놓고 하나씩 보다보면 누군가의 이력서를 보는 듯한 느낌이긴 하지만 정말 즐겁다.&lt;/p&gt;

&lt;p&gt;작가님은 자신을 겸손하게 그려내시지만
곳곳에 그려진 결과물들을 보면서
재능 못지 않을 추진력과 용기를 느낄 수 있다.&lt;/p&gt;

&lt;p&gt;개인 프로젝트를 완벽하게 끝내는 모습,
개인이 꿈꿔오던 기업에 도전하는 모습,
해외 취업을 준비하는 모습 등.&lt;/p&gt;

&lt;p&gt;사실 “내가 능력만 있으면” “내가 영어만 잘했으면” “내가 시간만 있었으면” 이라면서
미뤄온 것들이 많은 나였다. 그리고 어느정도에서 만족해 왔다.&lt;/p&gt;

&lt;p&gt;항상 “장인”이 어떻게 될수 있는지 HOW 에만 집중 했지,
정작 내 마음가짐은 많이 부족했던 것 같다.&lt;/p&gt;

&lt;p&gt;노력하고 또 용기내자.&lt;/p&gt;

&lt;p&gt;끝으로 내가 기억하고 싶은 내용을 짤막히 남겨놔야 겠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“개인의 아이디어에 대해 사람들이 부정적인 평가를 할 때가 있다. 하지만 한 가지 명심할 점은 아이디어를 평가하는 사람들이 항상 옳지는 않다는 점이다. 취향이 다를 수도 있고 수준이 못 미칠 수도 있다.높은 직급의 사람이라고 해서 모든 것을 다 아는 절대적인 평가자는 아니다. 다른 사람의 말에 휩쓸리지 말고 직접 시도해보고 경험해보는 것이 자신을 성장시키는 방법이라고 생각한다”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;구글 인터뷰 결과를 전해 듣는 부분에서..&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“내가 어떤 생각, 어떤 의도로 작업을 했는지 설명했다. 그래서 인터뷰 준비에 시간이 많이 필요하지 않았고 힘들지도 않았다. 인터뷰 준비가 힘든 이유는 내가 가진 것보다 더 이야기하려고 하기 때문이다.”&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>[후기] SpringOne Platform re:Cap</title>
   <link href="https://jiyeonseo.github.io/2016/09/07/springone-platform-recap-seoul/"/>
   <updated>2016-09-07T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/09/07/springone-platform-recap-seoul</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.meetup.com/Seoul-Cloud-Foundry-Meetup/events/233547901/&quot;&gt;SpringOne Platform re:cap&lt;/a&gt; 밋업을 다녀왔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/springoneplatform.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://springoneplatform.io/&quot;&gt;SpringOne Platform&lt;/a&gt; 이라 하면 전자정부 표준프레임워크 spring framework를 개발 및 컨설팅 하고 있는 &lt;a href=&quot;https://pivotal.io/&quot;&gt;Pivotal&lt;/a&gt; 에서 주최하는 컨퍼런스이다. 올해 컨퍼런스는 8월 1일부터 4일, 총 4일동안 진행되었고, 올해 발표된 스프링 관련 기술부터 내년 발표될 실험적인 기술까지 다양한 주제에 대해서 다뤄졌다고 한다.&lt;/p&gt;

&lt;p&gt;Youtube 에도 &lt;a href=&quot;https://www.youtube.com/playlist?list=PLAdzTan_eSPQ1fuLSBhyB4eEZF7JQM0Mx&quot;&gt;SpringOne Platform 2016 &lt;/a&gt;이 올라오고 있으니 필요한 세션들을 찾아보자.&lt;/p&gt;

&lt;p&gt;오늘 다녀온 SpringOne Platform re:Cap은 Pivotal Korea에서 주최한 밋업으로 SpringOne 컨퍼런스에서 발표된 주제중에 몇가지 포인트 되는 세션들을 “한국말”로 소개해주셨다. (넘나 좋은 것!)&lt;/p&gt;

&lt;p&gt;그리고 &lt;a href=&quot;https://download3.vmware.com/vmworld/2015/downloads/oreilly-cloud-native-archx.pdf&quot;&gt;migrating to cloud native application architectures&lt;/a&gt; 요 책도 나눠주었는데. 이건… 나중에봐야징ㅋ&lt;/p&gt;

&lt;p&gt;시간이 지나기 전에 오늘 들은 귀중한 지식들을 짧게 정리해보고자 한다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#article1&quot;&gt;[1] Spring framework 5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#article2&quot;&gt;[2] Spring Boot 1.4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#article3&quot;&gt;[3] Spring Reactor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#article4&quot;&gt;[4] Spring Cloud Stream / Task / Data Flow&lt;/a&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:13px;&quot;&gt;아래 내용은 들으면서 후다닥 적은 내용이라 많이 부족합니다. ㅠㅠ&lt;br /&gt;
슬라이드 제공받는대로 함께 업데이트 하도록 하겠습니다.&lt;/div&gt;

&lt;hr /&gt;

&lt;div id=&quot;article1&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;1-spring-framework-5&quot;&gt;1. Spring framework 5&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;곧 나옵니다.&lt;/li&gt;
  &lt;li&gt;자바9 과 함께 나오는걸 계획 (아마 내년 3월? 자바는 모르겟다.)&lt;/li&gt;
  &lt;li&gt;프로젝트 직소 때문에 밀렷대.&lt;/li&gt;
  &lt;li&gt;5.1 부터 자바9 fully support (내년 11월 12월 정도?)&lt;/li&gt;
  &lt;li&gt;9~10개월로 minor update 중 ( x.1, x.2 … )&lt;/li&gt;
  &lt;li&gt;jdk 8+ 서포트 (6,7 not anymore)&lt;/li&gt;
  &lt;li&gt;멀티 쓰래드로 부트스트랩&lt;/li&gt;
  &lt;li&gt;지금 자르파일을 bean을 모두 scan &amp;gt; index 파일을 만들어서 그걸로 스캔 할지 고민중 .&lt;/li&gt;
  &lt;li&gt;자바9에 주요 feature : &lt;a href=&quot;http://openjdk.java.net/projects/jigsaw/&quot;&gt;jigsaw project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;http2&lt;/li&gt;
  &lt;li&gt;lambda 형식으로 http routing&lt;/li&gt;
  &lt;li&gt;자바9에서  GC enhancements 잇을 것.&lt;/li&gt;
  &lt;li&gt;Reactor가 큰 테마다 » Mono, Flux 등.. &lt;a href=&quot;#article3&quot;&gt;후 세션&lt;/a&gt;에서 더 자세히 다뤄보겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAccount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div id=&quot;article2&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-spring-boot-14&quot;&gt;2. Spring Boot 1.4&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Spring boot - 2.25M in maven downloads in 2015 (Wow!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;major-update&quot;&gt;major update&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;spring 4.3&lt;/li&gt;
  &lt;li&gt;third party lib upgrade - 제티, 톰캣 등등&lt;/li&gt;
  &lt;li&gt;new auto-configuration support - 더 많은 라이브러리 redis, Jta, caffeine(cache) elasricsearch jest ? 등등&lt;/li&gt;
  &lt;li&gt;startup failures 분석 - 리포팅 기능 추가.&lt;br /&gt;ex) 같은 포트가 이미 떠있다와 같은. 더 보기 편해짐&lt;/li&gt;
  &lt;li&gt;@SpringBootTest - @springpplicationConfiguration, contextconfiguration, integrationtest, webintegrationtest 등 다 통합&lt;/li&gt;
  &lt;li&gt;@MockBean 추가&lt;/li&gt;
  &lt;li&gt;slice ,, @jsonTest, @WebMvcTest 등 역할별로 테스트 해 고거랑 관련된 설정만 가지고 와서  퍼포먼스 향상
@RestClientTest, @DataJpaTest SpringRestDoc&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;demo&quot;&gt;demo&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;simple wether app&lt;/li&gt;
  &lt;li&gt;youtube : &lt;a href=&quot;https://www.youtube.com/watch?v=7U90Lfxatpk&quot;&gt;https://www.youtube.com/watch?v=7U90Lfxatpk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;github :  &lt;a href=&quot;https://github.com/SpringOnePlatform2016/weather-app&quot;&gt;https://github.com/SpringOnePlatform2016/weather-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;new-features&quot;&gt;new features&lt;/h3&gt;

&lt;div&gt;1. @ConfigurationProperties 을 통해서 properties에 잇는 정보를 그대로 가져올 수 있다.&lt;/div&gt;

&lt;div&gt;2. error code define &amp;gt;&amp;gt;  resources/static/error/404.html 바로 디파인 해줌&lt;/div&gt;

&lt;div&gt;3. test 강화&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;@RunWith(SpringRunner.class) « 내부적으로 알아서&lt;/li&gt;
  &lt;li&gt;Configuration 통합&lt;/li&gt;
  &lt;li&gt;slice 기능으로 WebMvcTest &amp;gt; 웹 관련 테스트만 하겟다&lt;/li&gt;
  &lt;li&gt;Mock을 하려면 예전에는 @before 에서 인젝트 해줘야 햇엇는데 이제는 @MockBean으로 할 수 있따.&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;4. Autowired를 따로 안해줘도 알아서 inject&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;&amp;lt; 생략 가능&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;someclass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SomeService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;someServce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div&gt;5. in-memory-cache&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ben-manes/caffeine&quot;&gt;caffeine&lt;/a&gt; 이라는 게 기본으로 들어가 잇음&lt;/li&gt;
  &lt;li&gt;dependencies
– spring-boot-starter-cache
– com.github.ben-manes.caffeine&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@cacheable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &amp;lt;&amp;lt; 이렇게만하면  캐시 하겟다&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@EnableCaching&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;proxyTargetClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// &amp;lt;&amp;lt; 캐시 쓰겟다&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;actuator로 캐시size ,hit ,hit ratio 등 도 추가 되어잇음&lt;/li&gt;
  &lt;li&gt;localhost:8080/metrics 에서  확인 가능.&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;6. info end-point&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;boot-maven-plugin 으로 추가/&lt;/li&gt;
  &lt;li&gt;깃, 리비전 번호 등등. buildinfo. properties라는 프로퍼티를 자동 생성해서 넣어줘서 빌드떄 메타정보를 넣을 수 있다.&lt;/li&gt;
  &lt;li&gt;빌드 하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;target/classes/META-INFo/build-info.properties&lt;/code&gt; 라는게 추가 됨.&lt;/li&gt;
  &lt;li&gt;localhost:8080/info 에서 확인 가능.&lt;/li&gt;
&lt;/ul&gt;

&lt;div&gt;7. RestDoc&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;dependencies
&lt;code class=&quot;highlighter-rouge&quot;&gt;restdoc-mockmvc&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;plugin
&lt;code class=&quot;highlighter-rouge&quot;&gt;asciidoctor&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;각각 api 별로 조각조각 파일 떨어짐.&lt;/li&gt;
  &lt;li&gt;asciidoc 와꾸 정보 넣기&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;asciidoc 안 snippets « 정보가 들어간다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;테스트 케이스에 어노테이션을 넣어준다&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@AutoConfiguraeRestDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/~~&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;테스트 돌리면 맨 마지막에 doc이 생성된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snippets&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;generated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;docs&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 여기에 들어가서 보면 html로 나옴&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div id=&quot;article3&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;3-spring-reactor&quot;&gt;3. Spring Reactor&lt;/h1&gt;

&lt;h3 id=&quot;reactive-programming이란&quot;&gt;reactive programming이란?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;데이터의 흐름과 변화를 전달해주는 페러다임&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;등장-배경&quot;&gt;등장 배경&lt;/h3&gt;
&lt;p&gt;— (java8) Future&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;완벽한 비동기는 아니다 future.get() 올때까지 기다린다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비동기성 @Async  - ListenableFuture&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;java8에서 이런식으로 …&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;CompletableFuture&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;somethingcallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;somethingcallback2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;reactive-streams&quot;&gt;Reactive Streams&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;비동기 스트림&lt;/li&gt;
  &lt;li&gt;RxJava&lt;/li&gt;
  &lt;li&gt;ReactiveX&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJavaReactiveStreams&quot;&gt;RxJavaReactiveStreams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reactive-manifesto&quot;&gt;Reactive Manifesto&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가장 큰 키포인트
    &lt;ol&gt;
      &lt;li&gt;responsive&lt;/li&gt;
      &lt;li&gt;resilient&lt;/li&gt;
      &lt;li&gt;elastic&lt;/li&gt;
      &lt;li&gt;message driven&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마이크로서비스 &amp;gt; 네트웤으로 통신해서 그걸 조합하는거 &amp;gt; 15개를 부르는게  하나라도 대답을 못하면 화면을 렌더링 해줄수 잇는가?! &amp;gt; 고로 리액티브가 필요하다 .&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;netflix - 주울&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서킷브레이커-패턴&quot;&gt;서킷브레이커 패턴&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;넷플릭스가 마이크로서비스로 넘어가면서&lt;/li&gt;
  &lt;li&gt;두꺼비집&lt;/li&gt;
  &lt;li&gt;한 서비스가 오래걸리면 장애 전파를 막기위해 :  hystrix&lt;/li&gt;
  &lt;li&gt;히스트릭스 커맨드 안을 보면 리액티브 프로그래밍을 하고 잇다.&lt;/li&gt;
  &lt;li&gt;장애의 전파를 끊고 / 비동기때 밀리는걸 막아줌.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lmax&quot;&gt;LMAX&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;log4j2 링 버퍼 - 하나의 쓰레드가 멀티쓰레드보다 더 빠르게. 600만 tps를 처리.&lt;/li&gt;
  &lt;li&gt;nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;리액티브-프로그래밍&quot;&gt;리액티브 프로그래밍&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;java ocncurrency in practice - 정석 책! 추천!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;10년 &amp;gt; today&lt;/li&gt;
  &lt;li&gt;monorithic &amp;gt; microservice&lt;/li&gt;
  &lt;li&gt;app server  &amp;gt; cloud&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;async&quot;&gt;ASYNC!!&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;scalability에 유리하다&lt;/li&gt;
  &lt;li&gt;non-blocking&lt;/li&gt;
  &lt;li&gt;event driven&lt;/li&gt;
  &lt;li&gt;small number of thread  »»&amp;gt; mechanical sympathy : hardware and software working together in harmony. 소프트웨어 개발자가 잘 하려면 실제 cpu, cache 구조를 이해하는게 퍼포먼스에 더 좋다.&lt;/li&gt;
  &lt;li&gt;lmax 적용&lt;/li&gt;
  &lt;li&gt;flow control : like back pressure 받을수 잇는 만큼만 보내준다. 효율적으로 굴리기 위해 감당할수 잇는 만큼만 일을 시킨다. like 야근&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기존 동기식&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Del&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Del&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 을 하게 되면 결국 여기서 block 이 되니 진정한 비동기가 아니다 .&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;completablefuture를-통해-완벽한-비동기&quot;&gt;CompletableFuture를 통해 완벽한 비동기&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;CompletableFuture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;future&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;whenComplete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(???)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;CompletableFuture&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// void임!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;단점
– 컬렉션 리턴 밸류가 적당치 않앗다.
– 끊임없이 들어오는 스트림에는 적당하지 않다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reactive-stream&quot;&gt;Reactive Stream&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;계속 들어오는걸 받아주고 Error/Complete가 되엇을때를 callback으로 지원 like onError, onComplete …&lt;/li&gt;
  &lt;li&gt;onNext(param)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;java-8-stream-api&quot;&gt;java 8 stream api&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;액티브한 소스에 대한걸 처리하기가 적당치 않다.  (단점)&lt;/li&gt;
  &lt;li&gt;latency sensitive data sequesnces에 적당치 않다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reactive-stream-1&quot;&gt;Reactive stream&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;TCK를 포함한다 : 자바표준에 부합하는지 테스트 해주는 툴&lt;/li&gt;
  &lt;li&gt;publish , subscribe with back- pressure&lt;/li&gt;
  &lt;li&gt;java8 stream이랑 똑같이 생겨쪙&lt;/li&gt;
  &lt;li&gt;version 3.0  (6월 released)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;개념&quot;&gt;개념&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Mono
    &lt;ul&gt;
      &lt;li&gt;기거나 아니거나 (1 or 0)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Flux
    &lt;ul&gt;
      &lt;li&gt;끊임없는 데이터 스트림&lt;/li&gt;
      &lt;li&gt;interval, 중간 operator를 둬서 처리.&lt;/li&gt;
      &lt;li&gt;스프링 클라우드에 대해서&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Flux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;useCapacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 한번에 두개만 받것다. (이거 없으면 by default consume without back-pressure )&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// tapping&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{})&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;reactive-web-application&quot;&gt;Reactive Web application&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Reactive Processing pipeline&lt;/li&gt;
  &lt;li&gt;httpserver &amp;gt; web framework &amp;gt; controller &amp;gt; repository&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;controller 에서 Return 타입이 달라짐 like mono , flux&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;if RxJava&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Single&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Obserbable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;reactive-http-adaption&quot;&gt;Reactive Http Adaption&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Flux라던가 이런걸로 http 통신 하고 이씀&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reactive stream으로 tomcat I/O 지금 bridge 작업중, 제티는 이미 bridge 작업 됨(?)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시리얼라이즈 jackson 이용한거 json/xml 하는것도 Mono 라던가 이런걸로 받을 수 잇음&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//synchronouse, non-blocking method&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mono&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Async, non-blocking method&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;장단이 잇으니 서비스 성격에 맞춰서 결정해야한다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;repo.spring.io/milestone&quot;&gt;5.0&lt;/a&gt; 나왓어유.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/reactor/lite-rx-api-hands-on&quot;&gt;lite-rx-api-hands-on&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;mono / flux&lt;/li&gt;
  &lt;li&gt;consume /&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;influx db 를 사용하고 잇음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;주기적으로 내가 스트림으로 짜서 찌르는게 아니라 Flux를 이용, 설정을 통해&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;experimental&quot;&gt;experimental&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;아직 실험 단계지만 &lt;a href=&quot;http://start.spring.io/&quot;&gt;start.spring.io&lt;/a&gt;에서 사용해 볼 수 있다.
&lt;img src=&quot;/images/start-spring-io-reactive-web.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;쓰는 작업 병목, 실시간 성 처리
    &lt;ol&gt;
      &lt;li&gt;&lt;a href=&quot;http://geode.apache.org/&quot;&gt;아파치 GEODE&lt;/a&gt;를 사용&lt;/li&gt;
      &lt;li&gt;큐 사용 (worker들이 적절히)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;스프링 세션??
– 레디스, 대신 geode 한번 써보세요!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;akka / reator
– 언어적 차이는 잇지만 사상은 똑같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article4&quot;&gt;&lt;/div&gt;

&lt;h1 id=&quot;4-spring-cloud-data-flow&quot;&gt;4. Spring Cloud Data Flow&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;from micro service to data micro service&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;스프링 클라우드 데이터 플로우.&lt;/li&gt;
  &lt;li&gt;아마존, 오픈스택, 위에 “피보탈 클라우드 파운더리” 를 올리고&lt;/li&gt;
  &lt;li&gt;각각의 모노리딕을 » CI 로 묶어주고&lt;/li&gt;
  &lt;li&gt;datasource는 쉐어하지 않도록&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;전통적인-data-analysis&quot;&gt;전통적인 data analysis&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;각각의 서비스의 database를 ETL을 해서 Data warebouse에 넣고 데이터를 콩짝콩짝 하겟지&lt;/li&gt;
  &lt;li&gt;이러한거는 data를 분석하는 사람들은 대부분 밤에 움직이니까 로긴해서 쿼리 해보고&lt;/li&gt;
  &lt;li&gt;(최대 단점) 중간에 데이터 처리하기가 힘듬&lt;/li&gt;
  &lt;li&gt;data warehouse를 보고 데이터 사이언스가 뭘 콩짝 콩짝 하고 그걸 다시 어플리케이션에 적용하고&lt;/li&gt;
  &lt;li&gt;일련의 데이터 파이프라인이 monolith 임&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data &amp;gt; source &amp;gt; processing &amp;gt; processing processing &amp;gt; destination &amp;gt; data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;뭔가 껴넣기 힘들다 싶으면 모노리틱임 « 한 덩어리로 되어잇으니까 재배포/확장/서버 OS업데이트라던가 이런게 어려움.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그러니.. 스프링 어플리케이션으로 저 하나하나를 다 떼어버리자.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spring-cloud-stream&quot;&gt;spring cloud stream&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;각각의 스프링부트 어플리케이션 이 데이터를 쿵짝쿵짝 한 데이터를 bus에 태워서&lt;/li&gt;
  &lt;li&gt;받아온 데이터를 가공하고 다시 때려넣고&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;spring-cloud-data-flow가-하는일&quot;&gt;spring cloud data flow가 하는일&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;데이터가 들어오면 &amp;gt; ETL을 하고 &amp;gt; 각 db나 데이터하우징 하는곳에 넣는다 &amp;gt; 이걸 각각 boot app으로 띄워서 연결 해주는것&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cloud.spring.io/spring-cloud-stream/&quot;&gt;http://cloud.spring.io/spring-cloud-stream/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;예제-1&quot;&gt;예제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://cloud.spring.io/spring-cloud-dataflow/&quot;&gt;spring-cloud-dataflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;스프링-클라우드-웹-ui&quot;&gt;스프링 클라우드 웹 UI&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;파이프라인을 디자인하기 편하게&lt;/li&gt;
  &lt;li&gt;source(데이터들어온다) / processor(쿵짝쿵짝) / sink(결과 던지기)&lt;/li&gt;
  &lt;li&gt;streams/create stream 메뉴를 클릭하면 스트림 디자인 가능
— 드래그앤드랍, 설정 가능&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;definition 에서 deploy
예제 : &lt;a href=&quot;https://github.com/melofred/FraudDetection-DataMicroservices&quot;&gt;melofred/FraudDetection-DataMicroservices&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;각각의 기능을 하는 앱서버를 만들고 파이프라인을 만드는데 편해졌다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;전통적인거는 그 파이프라인 자체가 스케일 업햇는데 이건 필요한 부분만 scale늘려주면 된다 (ex. eval부분만 늘린다)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;businesss microservice + data microservice&lt;/li&gt;
  &lt;li&gt;각각을 이용해서 서비스를 구성할 수 잇다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;롤백처리&quot;&gt;롤백처리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;트랜젝션.
—&amp;gt; 이벤트 소싱.
—&amp;gt; 각각 떨어진는 로그들을 처리할 수 있도록
—&amp;gt; 나중에 그런 문제 가 잇을때 취합된 로그를 받아서 재현도 해볼수 잇다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>[HackerRank] Functiontional programming </title>
   <link href="https://jiyeonseo.github.io/2016/09/04/hackerrank-fp1/"/>
   <updated>2016-09-04T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/09/04/hackerrank-fp1</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com&quot;&gt;HackerRank 함수형 프로그래밍&lt;/a&gt; 수련 시작!&lt;/p&gt;

&lt;h2 id=&quot;my-github&quot;&gt;my github&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jiyeonseo/HankerRank-FunctionalProgramming&quot;&gt;jiyeonseo/HankerRank-FunctionalProgramming&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Spring - 환경변수 static 변수에 넣기 </title>
   <link href="https://jiyeonseo.github.io/2016/08/27/spring-inject-static-variables/"/>
   <updated>2016-08-27T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/08/27/spring-inject-static-variables</id>
   <content type="html">&lt;p&gt;스프링 프레임 워크에서는 static 변수에 값을 삽입(inject) 할 수 없다.&lt;/p&gt;

&lt;p&gt;예를 들어 다음과 같은 환경변수를 설정 하였을 때&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// application.yml
hello: spring.profiles.active is default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${hello}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${hello}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// spring.profiles.active is default&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getStaticHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// null&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;해결방법&quot;&gt;해결방법&lt;/h2&gt;

&lt;p&gt;non static 메소드를 통해 받은 환경변수를 static 변수에 넣어 줄 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${hello}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${hello}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;staticHello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getStaticHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;staticHello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// spring.profiles.active is default&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Github : &lt;a href=&quot;https://github.com/jiyeonseo/spring-static-value-sample&quot;&gt;https://github.com/jiyeonseo/spring-static-value-sample&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[책] 로버트 마틴의 ‘클린 코더'를 읽고</title>
   <link href="https://jiyeonseo.github.io/2016/08/18/robert-martin-clean-coder/"/>
   <updated>2016-08-18T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/08/18/robert-martin-clean-coder</id>
   <content type="html">&lt;p&gt;글쓰기 연습으로 읽은 책에 대한 생각을 짤막하게나마 남겨볼까 한다.&lt;/p&gt;

&lt;h1 id=&quot;로버트-마틴의-클린-코더&quot;&gt;&lt;a href=&quot;http://book.daum.net/detail/book.do?bookid=KOR9788960778818&quot;&gt;로버트 마틴의 ‘클린 코더’&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;또 한권의 잔소리 책을 읽었다. 아니 사실 한 사람의 일기장을 본 기분이다.&lt;/p&gt;

&lt;p&gt;이런 책들을 읽을 때마다 느끼는거지만 과거(그것도 몇십년 전)에 자신이 어떠한 프로젝트를 했고 그때 기술 스펙이라던지, 그리고 어떠한 실수를 저질렀는지 어떻게 그렇게 잘 묘사하는 걸까?&lt;/p&gt;

&lt;p&gt;목차만 대충 둘러보면 알겠지만 개발자가 가져야할 소양, 그리고 “장인”이 되기 위해 갖춰야 할 것들에 대해서 이야기 하고 있고 구구절절 다 맞는 이야기이다. 하지만 현실은 호락호락하지 않고 그 모든 것들을 다 지키는 것은 (구차한 변명이지만) 어렵다고 생각한다. 제품이 썩어가는 모습을 보면서도 사이드이펙트가 두려워 건들지 못하고, 시간이 없다는 핑계로 테스트 코드를 제대로 못짜기도 한다.&lt;/p&gt;

&lt;p&gt;다만 나보다 이 업계에 나보다 오래 몸담고 있었던 사람의 발자취를 보며, 장인이라는 사람도 예전에는 나와 비슷한 사람이였겠구나 라고 느꼈다. (하지만 실력의 차이는…ㅜ )&lt;/p&gt;

&lt;p&gt;밥 아저씨의 실패 경험담을 보며 내가 저질렀던 이불킥들을 떠올리고 멘토링 챕터를 읽으며 많은 가르침을 주고있는 주변 초고수님들이 떠올랐다.&lt;/p&gt;

&lt;p&gt;아직 갈 길이 멀지만 지금의 실력과 공부하는 방법을 배운 것도 다 주변 초고수님들 덕분인 것 같다. 직접적으로 코드를 봐주시는 분 부터 오픈소스나 블로그를 통해 영감과 자극을 주시는 분들, 이 책을 소개해준 친구까지. 모두 고마워요!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;사실 프로그래밍은 너무 어려워서 한 사람의 능력으로는 잘 해내기가 어렵다. 아무리 기술이 뛰어나도 반드시 다른 프로그래머의 생각과 아이디어에서 도움을 받는다.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>CentOS에서 스프링 부트가 잘 안뜨는 경우 (SecureRandom)</title>
   <link href="https://jiyeonseo.github.io/2016/08/06/springboot-centos-tomcat-issue/"/>
   <updated>2016-08-06T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/08/06/springboot-centos-tomcat-issue</id>
   <content type="html">&lt;p&gt;사내 개발용 가상서버에 평소처럼 스프링부트 프로젝트를 생성하여 run 했는데 멈춰버렸다. 그냥 안뜬다 ;;;&lt;/p&gt;

&lt;h2 id=&quot;문제-환경-및-현상&quot;&gt;문제 환경 및 현상&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;spring-boot
    &lt;ul&gt;
      &lt;li&gt;1.4.0 버전&lt;/li&gt;
      &lt;li&gt;gradle&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;로컬 환경 (OSX 10.11, jdk 1.8) 에서는 잘 뜬다.&lt;/li&gt;
  &lt;li&gt;개발용 가상 서버 (centOS 7.1, jdk 1.8)&lt;/li&gt;
  &lt;li&gt;첫 빌드시에는 잘 뜨고 두번째 빌드부터 뜨지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/spring-centos-tomcat.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;딱 여기서 멈춘다.
그리고 한 5분쯤 지나면 한 줄이 뜨면서 갑자기 주르륵 실행이 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2016-08-04 15:02:41.239  INFO 26709 — [ost-startStop-1] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [188,679] milliseconds.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;으아아아 이게 문제였다.&lt;/p&gt;

&lt;h2 id=&quot;문제-원인&quot;&gt;문제 원인&lt;/h2&gt;
&lt;p&gt;SecureRandom instance를 생성하는데 오래 걸린다.
문제는 CentOS와 Tomcat의 문제였다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tomcat 7+ heavily relies on SecureRandom class to provide random values for its session ids and in other places. Depending on your JRE it can cause delays during startup if entropy source that is used to initialize SecureRandom is short of entropy. You will see warning in the logs when this happens, e.g.:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;참고 : &lt;a href=&quot;https://wiki.apache.org/tomcat/HowTo/FasterStartUp#Entropy_Source&quot;&gt;https://wiki.apache.org/tomcat/HowTo/FasterStartUp#Entropy_Source&lt;/a&gt;
참고 : &lt;a href=&quot;http://stackoverflow.com/questions/36078745/why-spring-boot-embedded-tomcat-cant-start-on-google-compute-engine&quot;&gt;http://stackoverflow.com/questions/36078745/why-spring-boot-embedded-tomcat-cant-start-on-google-compute-engine&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;해결-방법&quot;&gt;해결 방법&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;방법1&lt;/em&gt;.
스프링 run 시 다음 system property를 추가해준다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-Djava.security.egd=file:/dev/./urandom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;방법2&lt;/em&gt;.
스프링 부트에서 제공하는 다른 Embedded servlet containter을 사용한다.
tomcat 뿐만 아니라 undertow, jetty 등을 제공하고 있다.
    &lt;ul&gt;
      &lt;li&gt;참고 : &lt;a href=&quot;http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#howto-embedded-servlet-containers&quot;&gt;http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#howto-embedded-servlet-containers&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>파이썬 나중에봐야징ㅋ</title>
   <link href="https://jiyeonseo.github.io/2016/08/02/bookmark-python/"/>
   <updated>2016-08-02T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/08/02/bookmark-python</id>
   <content type="html">&lt;h1 id=&quot;e-book&quot;&gt;#e-book&lt;/h1&gt;

&lt;p&gt;역시 언어를 익히려면 책부터! 순서는 그냥 생각 나는 대로.&lt;/p&gt;

&lt;h3 id=&quot;1-한글점프-투-파이썬&quot;&gt;1. (한글)점프 투 파이썬&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wikidocs.net/book/1&quot;&gt;https://wikidocs.net/book/1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-한글모두의-파이썬&quot;&gt;2. (한글)모두의 파이썬&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://thebook.io/006855/&quot;&gt;https://thebook.io/006855/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-한글파이썬-3에-뛰어들기&quot;&gt;3. (한글)파이썬 3에 뛰어들기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://codeonweb.com/course/5c550b25-9638-4d0f-8043-97ac01415f62&quot;&gt;https://codeonweb.com/course/5c550b25-9638-4d0f-8043-97ac01415f62&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;articles&quot;&gt;#articles&lt;/h1&gt;

&lt;h3 id=&quot;1-한글영어파이썬을-여행하는-히치하이커를-위한-안내서&quot;&gt;1. (한글/영어)파이썬을 여행하는 히치하이커를 위한 안내서&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://python-guide-kr.readthedocs.io/ko/latest/&quot;&gt;http://python-guide-kr.readthedocs.io/ko/latest/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;안타깝게도 반밖에 번역이 안되어 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;flask&quot;&gt;#flask&lt;/h1&gt;

&lt;h3 id=&quot;1-한글flask&quot;&gt;1. (한글)Flask&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://flask-docs-kr.readthedocs.io/ko/latest/#&quot;&gt;http://flask-docs-kr.readthedocs.io/ko/latest/#&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;django&quot;&gt;#Django&lt;/h1&gt;

&lt;h3 id=&quot;1-한글장고-걸스-튜토리얼&quot;&gt;1. (한글)장고 걸스 튜토리얼&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tutorial.djangogirls.org/ko/&quot;&gt;http://tutorial.djangogirls.org/ko/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>프로그래밍 수련</title>
   <link href="https://jiyeonseo.github.io/2016/08/01/programming-edu-sites/"/>
   <updated>2016-08-01T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/08/01/programming-edu-sites</id>
   <content type="html">&lt;p&gt;안하면 까먹고 녹슨다. 당연한 얘기이고 뻔한 얘기이다.
그렇다면 어떻게 단련할 것인가.
요즘 즐겨 찾고 있는 교육 및 코딩 수련장을 소개해보겠다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;1-hakerrank-언어-문법-알고리즘-등&quot;&gt;1. Hakerrank (언어 문법, 알고리즘 등)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackerrank.com/&quot;&gt;https://www.hackerrank.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;다양한 도메인을 제공.
    &lt;ul&gt;
      &lt;li&gt;언어 : Java, C++, Python, Ruby 등&lt;/li&gt;
      &lt;li&gt;알고리즘 , 인공지능, 세큐리티 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;알고리즘과 같은 도메인은 다양한 언어로도 풀어볼 수 있다.&lt;/li&gt;
  &lt;li&gt;“뱃지” 와 “submitssion” 으로 동기부여!&lt;/li&gt;
  &lt;li&gt;내 해답과 discussion의 답을 비교하며 더 나은 방법에 대해 생각해볼 수 있었다. (세상은 넓고 천재도 많다)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/my-hackerank.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-scala-exercies-스칼라&quot;&gt;2. scala-exercies (스칼라)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.scala-exercises.org&quot;&gt;https://www.scala-exercises.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;스칼라 std lib, cat, shapeless 에 관련된 교육 사이트&lt;/li&gt;
  &lt;li&gt;여러 챕터로 나눠져 있고 빈칸채우기 형식.&lt;/li&gt;
  &lt;li&gt;github : &lt;a href=&quot;https://github.com/scala-exercises&quot;&gt;https://github.com/scala-exercises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;이건 내가 풀고 있는 github : &lt;a href=&quot;https://github.com/jiyeonseo/exercises-stdlib&quot;&gt;https://github.com/jiyeonseo/exercises-stdlib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/my-scala-exercise.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>python 개발 환경을 위한 pyenv 설치하기</title>
   <link href="https://jiyeonseo.github.io/2016/07/27/install-pyenv/"/>
   <updated>2016-07-27T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/07/27/install-pyenv</id>
   <content type="html">&lt;h1 id=&quot;pyenv&quot;&gt;pyenv?&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Simple Python version management&lt;/li&gt;
  &lt;li&gt;프로젝트 별로 각각 맞는 다양한 python 버전으로 실행해 볼 수 있도록 환경 제공.&lt;/li&gt;
  &lt;li&gt;이 프로젝트에서는 python 2, 저 프로젝트에서는 python 3 일때!&lt;/li&gt;
  &lt;li&gt;github : &lt;a href=&quot;https://github.com/yyuu/pyenv&quot;&gt;https://github.com/yyuu/pyenv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;환경&quot;&gt;환경&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;OSX El Capitan (10.11)&lt;/li&gt;
  &lt;li&gt;Homebrew 0.9.9&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;설치--osx-기준으로-작성-&quot;&gt;설치 ( OSX 기준으로 작성 )&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pyenv-업그레이드&quot;&gt;pyenv 업그레이드&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew upgrade pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;path-설정&quot;&gt;path 설정&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yyuu/pyenv#basic-github-checkout&quot;&gt;https://github.com/yyuu/pyenv#basic-github-checkout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo 'export PYENV_ROOT=&quot;$HOME/.pyenv&quot;' &amp;gt;&amp;gt; ~/.bash_profile
$ echo 'export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bash_profile
$ echo 'eval &quot;$(pyenv init -)&quot;' &amp;gt;&amp;gt; ~/.bash_profile
$ source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;각자 환경에 맞게 .bash_profile 대신 .bashrc 혹은 .zshrc 로 적용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;설치할-수-있는-목록-확인&quot;&gt;설치할 수 있는 목록 확인&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv install --list
Available versions:
  2.1.3
  2.2.3
  2.3.7
  2.4
  2.4.1
  2.4.2
  2.4.3
  2.4.4
  2.4.5
  2.4.6
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;원하는-python-버전-설치&quot;&gt;원하는 python 버전 설치&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv install 3.6.0
python-build: use openssl from homebrew
python-build: use readline from homebrew
Downloading Python-3.6.0.tar.xz...
-&amp;gt; https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tar.xz
Installing Python-3.6.0...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;에러가 났다.. 힝&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;zipimportzipimporterror-cant-decompress-data-zlib-not-available&quot;&gt;zipimport.ZipImportError: can’t decompress data; zlib not available&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;xcode command line tools 설치 (참고 : https://github.com/yyuu/pyenv/issues/454)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;zlib 설치
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ brew install homebrew/dupes/zlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib&quot;&gt;ERROR: The Python ssl extension was not compiled. Missing the OpenSSL lib?&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;만약 homebrew openssl과 pyenv를 함께 쓴다면, 아래와 같이 openssl package 위치를 알려주어야 한다. (환경에 따라 설정 방법이 다를 수 있으므로 아래의 방법이 안될 경우 &lt;a href=&quot;https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib&quot;&gt;링크&lt;/a&gt;를 참고해 주세요. )
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ CFLAGS=&quot;-I$(brew --prefix openssl)/include&quot; \
 LDFLAGS=&quot;-L$(brew --prefix openssl)/lib&quot; \
 pyenv install -v 3.6.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;설치 성공하면 다음과 같이 나온다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installed Python-3.6.0 to /Users/jiyeonseo/.pyenv/versions/3.6.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;설치된-pyenv-확인&quot;&gt;설치된 pyenv 확인&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv versions
* system (set by /root/.pyenv/version)
  2.7.11
  3.6.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;둘러보기&quot;&gt;둘러보기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv help
Usage: pyenv &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]

Some useful pyenv commands are:
   commands    List all available pyenv commands
   local       Set or show the local application-specific Python version
   global      Set or show the global Python version
   shell       Set or show the shell-specific Python version
   install     Install a Python version using python-build
   uninstall   Uninstall a specific Python version
   rehash      Rehash pyenv shims (run this after installing executables)
   version     Show the current Python version and its origin
   versions    List all Python versions available to pyenv
   which       Display the full path to an executable
   whence      List all Python versions that contain the given executable

See `pyenv help &amp;lt;command&amp;gt;' for information on a specific command.
For full documentation, see: https://github.com/yyuu/pyenv#readme
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;바로-써보자&quot;&gt;바로 써보자&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python -V
Python 2.7.11 ## 원래 버전
$ pyenv shell 3.6.0 ## 바꿔보자
$ python3.6 --version
Python 3.6.2+ ## 바뀐 버전
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;더 다양한 commend이 이 &lt;a href=&quot;https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#pyenv-commands&quot;&gt;링크&lt;/a&gt; 에서 확인 가능하다.&lt;/p&gt;

&lt;h1 id=&quot;virtualenv&quot;&gt;virtualenv&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;이번엔 python 프로젝트마다 각각의 가상환경을 만들어 줄 수 있는 virtualenv를 설치해 보겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;설치하기&quot;&gt;설치하기&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install pyenv-virtualenv
$ echo 'eval &quot;$(pyenv virtualenv-init -)&quot;' &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;가상환경-만들기-시작하기activate-끝내기deactivate&quot;&gt;가상환경 만들기, 시작하기(activate), 끝내기(deactivate)&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv virtualenv 2.7.11 {환경명} ## 만들기
$ pyenv activate ## 시작하기
...
(test_env) $ python -V
Python 2.7.11
(test_env) $ pyenv deactivate ## 끝내기
pyenv-virtualenv: deactivate {환경명}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;가상환경-목록보기&quot;&gt;가상환경 목록보기&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv virtualenvs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;가상환경-삭제하기&quot;&gt;가상환경 삭제하기&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pyenv uninstall {환경명}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;autoenv&quot;&gt;autoenv&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Python 프로젝트 진입시점시에 자동으로 virtualenv 환경을 로딩.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;autoenv-설치&quot;&gt;autoenv 설치&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install autoenv
To finish the installation, source activate.sh in your shell:
  source /usr/local/opt/autoenv/activate.sh
...
...

$ echo 'source /usr/local/opt/autoenv/activate.sh' &amp;gt;&amp;gt; ~/.bash_profile ## 위에 나온 shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;프로젝트에-맞게-env-설정&quot;&gt;프로젝트에 맞게 env 설정&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi .env
pyenv activate {환경명}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;설정 후 프로젝트로 들어오면&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;autoenv:
autoenv: WARNING:
autoenv: This is the first time you are about to source {local path}/.env:
autoenv:
autoenv:     --- (begin contents) ---------------------------------------
autoenv:     pyenv activate {환경명}
autoenv:     --- (end contents) -----------------------------------------
autoenv:
autoenv: Are you sure you want to allow this? (y/N) y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 바로 적용된다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CS105x Introduction to Apache Spark 1편</title>
   <link href="https://jiyeonseo.github.io/2016/07/21/edx-spark-01/"/>
   <updated>2016-07-21T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/07/21/edx-spark-01</id>
   <content type="html">&lt;p&gt;MOOC 사이트인 edx의 Spark 수업을 들으면서 정리하는 내용입니다.
부족한 내용 계속 업데이트해 나갈 예정입니다 :) 혹시 부족한 내용 혹은 틀린 부분이 있다면 언제든 알려주세요!&lt;/p&gt;

&lt;p&gt;강의는 &lt;a href=&quot;https://courses.edx.org/courses/course-v1:BerkeleyX+CS105x+1T2016/info&quot;&gt;CS105x Introduction to Apache Spark&lt;/a&gt;
이며 언어는 Python 2.7 입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;apache-spark란&quot;&gt;&lt;a href=&quot;http://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt;란?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Scalable, efficient analysis of Big Data&lt;/li&gt;
  &lt;li&gt;빅 데이터를 위한 확장 가능한 효과적인 분석 툴&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Scalable, efficient analysis of Big Data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;빅-데이터란&quot;&gt;빅 데이터란?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;온라인에서의 정보 ( ex. 클릭지표, 네트워크 메세지, 광고 지표 등 )&lt;/li&gt;
  &lt;li&gt;유저에 의해 생성된 정보 ( ex. 페이스북, 인스타그램, 트위터 등 )&lt;/li&gt;
  &lt;li&gt;건강 및 과학 컴퓨팅&lt;/li&gt;
  &lt;li&gt;그래프 데이터 ( ex. Social networks, Road networks.. )&lt;/li&gt;
  &lt;li&gt;로그 파일 ( ex. 아파치 웹 서버 로그.. )&lt;/li&gt;
  &lt;li&gt;Machine Syslog File&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;주요-데이터-컨셉&quot;&gt;주요 데이터 컨셉&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;data model&lt;/em&gt; : 데이터를 이루는 컨셉들의 모음&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;schema&lt;/em&gt; : data model 의 특정 모음을 나타내는 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-structure-spectrum&quot;&gt;The Structure Spectrum&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/spark-The-Structure-Spectrum.png&quot; /&gt;
ETL : Extract-Transform-Load&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unstructured 데이터를 Structured 혹은 Semi-Structured 데이터로 변환.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;옛날-분석-툴의-문제점&quot;&gt;옛날 분석 툴의 문제점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;모든 걸 다 한 머신에서! &amp;gt; 데이터가 점점 커진다  &amp;gt; 나눠서 처리하자
&lt;img src=&quot;/images/spark-data-frame.png&quot; /&gt;
스파크 프레임 워크&lt;/li&gt;
  &lt;li&gt;Provides programming abstraction and parallel runtime to hide complexities of fault-tolerance and slow machines&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;스파크-컴포넌트-구성&quot;&gt;스파크 컴포넌트 구성&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/spark-component.png&quot; /&gt;
이 강의에서는 SparkSQL을 사용하며 Python Spark (&lt;a href=&quot;http://spark.apache.org/docs/latest/api/python/&quot;&gt;pySpark&lt;/a&gt;)를 사용함.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pySpark provides an easy-to-use programming abstraction and parallel runtime:&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;spark-driver-와-workers&quot;&gt;Spark Driver 와 Workers&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;(간단히) Driver Program이 시키면 Worker들이 일한다.
&lt;img src=&quot;/images/cluster-overview.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sparkcontext&quot;&gt;SparkContext&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;스파크가 어떻게 어디서 클러스터를 접근할 지 알려준다.&lt;/li&gt;
  &lt;li&gt;pySpark 나, Databricks CE에서는 자동으로 SparkContext를 생성&lt;/li&gt;
  &lt;li&gt;iPython이나 프로그램에서는 반드시 new SparkContext를 해주어야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그리고 sqlContext 객체를 생성.
sqlContext를 이용하여 DataFrames를 생성.&lt;/p&gt;

&lt;h2 id=&quot;dataframes&quot;&gt;DataFrames&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;불변 객체 (Immutable once constructed). 한번 생성되면 절때 불변!&lt;/li&gt;
  &lt;li&gt;parellel 하게 작동할수 있음.&lt;/li&gt;
  &lt;li&gt;Python collection(list) 를 사용할 수 있음&lt;/li&gt;
  &lt;li&gt;Spark나 pandas DFs를 DataFrame으로 바꿀 수 있음&lt;/li&gt;
  &lt;li&gt;HDFS에서 가져 올 수 있음.&lt;/li&gt;
  &lt;li&gt;각 로우는 Row 오브젝트임&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ex )
&amp;gt;&amp;gt;&amp;gt; row = Row(name=“Cheese”, age=11)
&amp;gt;&amp;gt;&amp;gt; row
Row(age = 11, name=“Cheese”)
&amp;gt;&amp;gt;&amp;gt; row[‘name’], row[‘age’]
(‘Cheese’, 11)
&amp;gt;&amp;gt;&amp;gt; row.name, row.age
(‘Cheese’,11)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;두개의 타입의 작업이 가능 : &lt;em&gt;transformation&lt;/em&gt; 과 &lt;em&gt;action&lt;/em&gt; (기억하자!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;transformation&quot;&gt;Transformation&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;lazy (not computed immediately&lt;/li&gt;
  &lt;li&gt;transformed DF는 action이 run 되는 시점에 실행이 됨&lt;/li&gt;
  &lt;li&gt;Persist (cache) DF는 메모리 혹은 disk에 저장됨.
&lt;img src=&quot;/images/spark-transformation.png&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;action&quot;&gt;Action&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/spark-action.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스파크-프로그램의-life-cycle-정리&quot;&gt;스파크 프로그램의 life cycle 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;외부 데이터를 가져오거나 “createDataFrame” 을 통해 DF을 생성&lt;/li&gt;
  &lt;li&gt;-&amp;gt; transform 을 이용해 새로운 DataFrame에 lazy로&lt;/li&gt;
  &lt;li&gt;-&amp;gt; cache()를 이용하면 다시 사용 가능&lt;/li&gt;
  &lt;li&gt;-&amp;gt; action을 통해 parallel하게 실행되고 결과 값을 생성&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>React/Redux를 위한 더 나은 파일 구조</title>
   <link href="https://jiyeonseo.github.io/2016/07/11/A-Better-File-Structure-For-React-Redux-Applications/"/>
   <updated>2016-07-11T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/07/11/A-Better-File-Structure-For React-Redux-Applications</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://marmelab.com/blog/2015/12/17/react-directory-structure.html&quot;&gt;A Better File Structure For React/Redux Applications&lt;/a&gt; 를 번역한 글입니다. 매끄럽지 못한 번역 양해 부탁드리며, 오역이나 다른 의견이 있으시다면 편히 댓글 달아주세요.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;대부분의 React/Redux 예제들은 클라이언트 사이드나, 유니버셜이든 매우 간단한 모습이다. 대부분 action, component, container, reducer끼리 모아놓은 모습이다. 다음과 같은 구조를 많이 봤을 것이다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;actions/
    CommandActions.js
    UserActions.js
components/
    Header.js
    Sidebar.js
    Command.js
    CommandList.js
    CommandItem.js
    CommandHelper.js
    User.js
    UserProfile.js
    UserAvatar.js
containers/
    App.js
    Command.js
    User.js
reducers/
    index.js
    command.js
    user.js
routes.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://redux.js.org/docs/advanced/ExampleRedditAPI.html&quot;&gt;Redux Book&lt;/a&gt;에서도 이와 같은 모습을 보이고 있고  Redux boilerplate 인 &lt;a href=&quot;https://github.com/GordyD/3ree&quot;&gt;3ree&lt;/a&gt;와 &lt;a href=&quot;https://github.com/erikras/react-redux-universal-hot-example&quot;&gt;react-redux-universal-hot-example&lt;/a&gt; 역시 같은 구조를 가지고 있다.&lt;/p&gt;

&lt;p&gt;좋은 방법이다. 하지만 새로운 도메인에 대한 action과 component 그리고 reducer가 추가될 땐 어떨까? 그 예로,상품의 카달로그를 다루기 위한 파일들을 다음과 같이 각각의 경로에 추가해 보자.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;actions/
    CommandActions.js
    ProductActions.js   &amp;lt;= 여기
    UserActions.js
components/
    Header.js
    Sidebar.js
    Command.js
    CommandList.js
    CommandItem.js
    CommandHelper.js
    Product.js          &amp;lt;= 여기
    ProductList.js      &amp;lt;= 여기
    ProductItem.js      &amp;lt;= 여기
    ProductImage.js     &amp;lt;= 여기
    User.js
    UserProfile.js
    UserAvatar.js
containers/
    App.js
    Command.js
    Product.js          &amp;lt;= 여기
    User.js
reducers/
    index.js
    foo.js
    bar.js
    product.js          &amp;lt;= 여기
routes.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 될 것이다. 지금으로부터 두 달 후를 생각해보자. &lt;code class=&quot;highlighter-rouge&quot;&gt;components/&lt;/code&gt; 경로에는 열댓개의 파일들이 있을 것이고 한 기능에 대해 작업할때마다 각각 다른 4경로에 있는 4개의 파일들을 열어야 한다.&lt;/p&gt;

&lt;p&gt;위와 같은 방법 대신, 파일 구조를 도메인 기준으로 하면 어떨까? 액션, 컴포넌트, 리듀스를 분리시키기 위해 다음과 같이 파일명에 접미사를 쓸 수도 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/
    Header.js
    Sidebar.js
    App.js
    reducers.js
    routes.js
command/
    Command.js
    CommandContainer.js
    CommandActions.js
    CommandList.js
    CommandItem.js
    CommandHelper.js
    commandReducer.js
product/
    Product.js
    ProductContainer.js
    ProductActions.js
    ProductList.js
    ProductItem.js
    ProductImage.js
    productReducer.js
user/
    User.js
    UserContainer.js
    UserActions.js
    UserProfile.js
    UserAvatar.js
    userReducer.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;더 나아가, 컨테이너와 관련된 컴포넌트를 합치면 좀 더 보기 편해진다.&lt;/p&gt;

&lt;p&gt;Redux에서는 상태값(state) 를 관리하는 &lt;em&gt;컨테이너&lt;/em&gt;와 상태값이 없는(stateless) &lt;em&gt;컴포넌트&lt;/em&gt;를 구분한다. 그리고 대부분의 튜토리얼에서는 다음과 같이 두개의 파일을 나눈다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// in Product.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// in ProductContainer.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductActions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./ProductActions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./Product'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapStateToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapDispatchToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProductActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapStateToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapDispatchToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;컴포넌트와 컨테이너를 구분하는 이유는 컴포넌트를 (Redux를 전혀 사용하지 않고) 유닛 테스트를 용이하게 하기 위해서다. 하지만 대부분의 경우, 컴포넌트는 컨테이너 밖에서 사용되지 않는다.&lt;/p&gt;

&lt;p&gt;ES6를 이용해보자. ES6에서는 한개 이상의 element에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt;를 허용한다. 그러므로 두개의 파일을 하나로 합치고 &lt;code class=&quot;highlighter-rouge&quot;&gt;export default&lt;/code&gt; 는 컨테이너로 &lt;code class=&quot;highlighter-rouge&quot;&gt;export product&lt;/code&gt;는 컴포넌트로 나타낼 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// in Product.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react-redux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductActions&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./ProductActions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// component part&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// container part&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapStateToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapDispatchToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bindActionCreators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProductActions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapStateToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapDispatchToProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;컴포넌트 유닛 테스트에서는 간단히 &lt;code class=&quot;highlighter-rouge&quot;&gt;import { Product }  from ‘./Product.js’&lt;/code&gt; 로 할 수 있다. 이제 각 경로마다 파일이 한개씩 줄어들었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/
    Header.js
    Sidebar.js
    App.js
    reducers.js
    routes.js
command/
    Command.js         // component &amp;amp; container
    CommandActions.js
    CommandList.js
    CommandItem.js
    CommandHelper.js
    commandReducer.js
product/
    Product.js         // component &amp;amp; container
    ProductActions.js
    ProductList.js
    ProductItem.js
    ProductImage.js
    productReducer.js
user/
    User.js            // component &amp;amp; container
    UserActions.js
    UserProfile.js
    UserAvatar.js
    userReducer.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;계속해서 테스트에 대해 이야기 해보자. 대체로 테스트 파일들은 &lt;code class=&quot;highlighter-rouge&quot;&gt;test/&lt;/code&gt; 경로에 있고, 런타임 코드에서 멀리 떨어져 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;src/
    app/
        Header.js
        Sidebar.js
        App.js
        reducers.js
        routes.js
    command/
        Command.js
        CommandActions.js
        CommandList.js
        CommandItem.js
        CommandHelper.js
        commandReducer.js
    product/
        Product.js
        ProductActions.js
        ProductList.js
        ProductItem.js
        ProductImage.js
        productReducer.js
    user/
        User.js
        UserActions.js
        UserProfile.js
        UserAvatar.js
        userReducer.js
test/
    app/
        Header.js
        Sidebar.js
        App.js
        reducers.js
        routes.js
    command/
        Command.js
        CommandActions.js
        CommandList.js
        CommandItem.js
        CommandHelper.js
        commandReducer.js
    product/
        Product.js
        ProductActions.js
        ProductList.js
        ProductItem.js
        ProductImage.js
        productReducer.js
    user/
        User.js
        UserActions.js
        UserProfile.js
        UserAvatar.js
        userReducer.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;컴포넌트 테스트를 빠뜨린 것들을 찾기 어렵고, 도메인이 추가됨에 따라 파일 구조를 찾기 어려워 짐을 알 수 있다.
모든 테스트 파일에 &lt;code class=&quot;highlighter-rouge&quot;&gt;-spec.js&lt;/code&gt; 라는 접미사를 써서 같은 경로로 옮겨보자.&lt;/p&gt;

&lt;p&gt;이로써 테스트까지 포함한 모든 스크립트가 연관된 context별로 각각의 경로로 그룹지어졌다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;src/
    app/
        Header.js
        Header-spec.js
        Sidebar.js
        Sidebar-spec.js
        App.js
        App-spec.js
        reducers.js
        reducers-spec.js
        routes.js
        routes-spec.js
    command/
        Command.js
        Commands-spec.js
        CommandActions.js
        CommandActions-spec.js
        CommandList.js
        CommandList-spec.js
        CommandItem.js
        CommandItem-spec.js
        CommandHelper.js
        CommandHelper-spec.js
        commandReducer.js
        commandReducer-spec.js
    product/
        Product.js
        Product-spec.js
        ProductActions.js
        ProductActions-spec.js
        ProductList.js
        ProductList-spec.js
        ProductItem.js
        ProductItem-spec.js
        ProductImage.js
        ProductImage-spec.js
        productReducer.js
        productReducer-spec.js
    user/
        User.js
        User-spec.js
        UserActions.js
        UserActions-spec.js
        UserProfile.js
        UserProfile-spec.js
        UserAvatar.js
        UserAvatar-spec.js
        userReducer.js
        userReducer-spec.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jest 혹은 Mocha와 같은 테스트 프레임워크 설정 역시 아주 간단하다. 다음의 경로를 테스트 하면 된다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;./src/**/*-spec.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이러한 구조 역시 프로젝트 크기에 따라 함께 커진다. 이 후에, 재활용성이 높은 컴포넌트가 다른 프로젝트에서도 쓰이기 위해 독립된 다른 리파지토리로 분리될 때, 이 구조에서 리팩토링은 아주 간편할 것이다. 강력 추천한다!&lt;/p&gt;

&lt;p&gt;추가. 레딧 커뮤니티에서도 이 포스트에 대해서 이야기 되고 있다. 이에 대한 이야기는 다음 링크에서 계속 되고 있다.
&lt;a href=&quot;https://www.reddit.com/r/reactjs/comments/47mwdd/a_better_file_structure_for_reactredux/&quot;&gt;https://www.reddit.com/r/reactjs/comments/47mwdd/a_better_file_structure_for_reactredux/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Flask 시작하기</title>
   <link href="https://jiyeonseo.github.io/2016/05/29/start-flask/"/>
   <updated>2016-05-29T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2016/05/29/start-flask</id>
   <content type="html">&lt;h2 id=&quot;python-다운로드&quot;&gt;Python 다운로드&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;추천 Coursera 코스 : &lt;a href=&quot;https://www.coursera.org/learn/python&quot;&gt;Programming for Everybody&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;python 다운로드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ide-pycham-다운로드&quot;&gt;[IDE] Pycham 다운로드&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;jetbrains 에서 제공하는 python IDE.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/download/&quot;&gt;Pycham 다운로드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pycham-에서-flask-시작하기&quot;&gt;Pycham 에서 flask 시작하기&lt;/h2&gt;

&lt;h3 id=&quot;1-project-생성&quot;&gt;1. Project 생성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;File &amp;gt; New Project &amp;gt; Flask &amp;gt; “create”
&lt;img src=&quot;/images/pycham1.png&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;나중에 알았는데… community edition 에는 pure python 밖에 없다. 아래의 package를 맞춰 세팅해야 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;다음과 같은 package가 자동 생성됨.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/pycham2.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start_flask.py&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello_world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Hello World!'&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;2-실행해보기&quot;&gt;2. 실행해보기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;ide로 실행하기
    &lt;ul&gt;
      &lt;li&gt;우측 “Run” 버튼 클릭!
&lt;img src=&quot;/images/pycham3.png&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;명령어로 실행하기&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; python start_flask.py
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Running on http://127.0.0.1:5000/ &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Press CTRL+C to quit&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;http://127.0.0.1:5000/ 로 들어가면 고전적인 Hellow World! 가 찍혀있는 화면을 확인 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-1-debug-모드로-실행하기&quot;&gt;2-1. Debug 모드로 실행하기&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello_world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Hello World!'&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# Debugger is active!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Debug 모드에서는 저장하면 다시 restart 됨.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-routing&quot;&gt;3. Routing&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/tuna'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tuna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;h2&amp;gt;Tuna is good&amp;lt;/h2&amp;gt;'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;http://127.0.0.1:5000/tuna 로 들어가면 Tuna is good&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/profile/&amp;lt;username&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# plain string&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;h3&amp;gt;hey there &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&amp;lt;/h3&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/post/&amp;lt;int:post_id&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# specific type&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show_post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;h3&amp;gt;Post ID is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&amp;lt;/h3&amp;gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;url path 가져오기&lt;/li&gt;
  &lt;li&gt;type 값을따로 주지 않으면 string, 특정 type으로 받고 싶을 때는 {type}:{값}&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-http-method&quot;&gt;4. Http method&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;## HTTP method : import request&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/method'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Method used : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/bacon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bacon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'You are using POST'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'You are probably using GET'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;request를 import 받아야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-html-templates&quot;&gt;5. HTML Templates&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;flask&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Flask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# need packages : templates , static&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/profile/&amp;lt;name&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profileWithTemplate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'profile.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- profile.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Welcome!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ url_for('static',filename='style.css')}} &quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- dynamic generate path--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hey! there {{name}}, yo!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;render_template 를 import 받아야 한다.&lt;/li&gt;
  &lt;li&gt;templates 패키지 아래에 html 파일을 생성.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;## Mapping Multiple URLs&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/multi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/multi/&amp;lt;user&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;multi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;## None by default&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- user.html --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Welcome!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- dynamic generate path--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hey! there , yo!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;여러 url 매핑 위와같이 @app.route()로 나열&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;## Passing Objects into Templates&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@app.route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/shopping'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shopping&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cheese&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Tuna&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Beef&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render_template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'shopping.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Shopping&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;위와 같이 넘어온 파라미터를 iterate 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;github-repository&quot;&gt;Github repository&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;위 예제는 &lt;a href=&quot;https://github.com/jiyeonseo/start_flask&quot;&gt;jiyeonseo/start_flask&lt;/a&gt; 에서 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>FP101x - week 5 Recursive Functions</title>
   <link href="https://jiyeonseo.github.io/2015/11/05/introduction_to_functional_programming_week5/"/>
   <updated>2015-11-05T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/11/05/introduction_to_functional_programming_week5</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;factorial :: Int -&amp;gt; Int&lt;/li&gt;
  &lt;li&gt;factorial n = product [1..n]&lt;/li&gt;
  &lt;li&gt;factorial maps any integer n to the product of the integers between 1 and n&lt;/li&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;factorial 4
= product [1..4]
= product [1,2,3,4]
= 1*2*3*4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;recursive-function&quot;&gt;Recursive Function&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;functions can also be defined in terms of themselves&lt;/li&gt;
  &lt;li&gt;factorial 0 = 1&lt;/li&gt;
  &lt;li&gt;factorial n = n * factorial (n-1)&lt;/li&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;factorial 3
= 3 * factorial 2
= 3 * ( 2 * factorial 1)
= 3 * ( 2 * ( 1 * factorial 0 ) )
= 3 * ( 2 * ( 1 * 1 ) )
= 3 * ( 2 * 1 )
= 3 * 2
= 6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;why&quot;&gt;why&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;simpler to defined in terms of other functions.&lt;/li&gt;
  &lt;li&gt;naturally be defined in terms of themselves&lt;/li&gt;
  &lt;li&gt;simple but powerful mathematical technique of induction&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;recursion-of-lists&quot;&gt;Recursion of Lists&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Recursion is not restricted to numbers, but can also be used to define functions on lists&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;product :: [Int] -&amp;gt; Int
product [] = 1
product (n:ns) = n * product ns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;product maps the empty list to 1 and any non-empty list to its head multiplied by the product of its tail&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;product [2,3,4]
= 2 * product [3,4]
= 2 * ( 3 * product [4])
= 2 * ( 3 * ( 4 * product [] ) )
= 2 * ( 3 * ( 4 * 1 ) )
= 24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ex ) function length&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;length :: [a] -&amp;gt; Int
length [] = 0
length (_:xs) = 1 + length xs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;length [ 1 , 2 , 3 ]
= 1 + length [ 2 , 3 ]
= 1 + ( 1 + length [ 3 ] )
= 1 + ( 1 + ( 1 + length [ ] )
= 1 + ( 1 + ( 1 + ( 1 + 0 ) )
= 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ex ) reverse&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reverse :: [a] -&amp;gt; [a]
reverse [] = []
reverse (x:xs) = reverse xs ++ [x]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reverse [1,2,3]
= reverse [2,3] ++ [1]
= ( reverse [3] ++ [2] ) ++ [1]
= ( (reverse [] ++ [3] ) ++ [2] ) ++ [1]
= ( ([] ++ [3] ) ++ [2] ) ++ [1]
= [3,2,1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;appending the element from right to left&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;multiple-arguments&quot;&gt;Multiple Arguments&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;zip&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zip :: [a] -&amp;gt; [b] -&amp;gt; [(a,b)]
zip [] _ = []
zip _ [] = []
zip (x:xs) (y:ys) = (x,y) : zip xs ys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;drop&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drop :: Int -&amp;gt; [a] -&amp;gt; [a]
drop 0 xs = xs
drop _ [] = []
drop n (_:xs) = drop (n-1) xs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;appending&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(++) :: [a] -&amp;gt; [a] -&amp;gt; [a]
[] ++ ys = ys
(x:xs) ++ ys  = x : (xs ++ ys)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;quicksort&quot;&gt;Quicksort&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;rule 1 : The empty list is already sorted&lt;/li&gt;
  &lt;li&gt;rule 2 : Non-empty lists can be sorted by sorting the tail values &amp;lt;= the head sorting the tail values &amp;gt; the head, and then appending the resulting list on either side of the head value&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;qsort :: [Int] -&amp;gt; [Int]
qsort [] = []
qsort ( x : xs ) =
     sort smaller ++ [x] ++ sort larger
     where
          smaller = [ a | a &amp;lt;- xs, x &amp;lt;= x]
          larger = [ b | b &amp;lt;- xs, b &amp;gt; x ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;q [ 3,2,4,1,5 ]
q  [2,1] ++ [3] ++ q [4,5]
q[1] ++ [2] ++ q[] ++ [3] ++ q[] ++ [4] ++ q[5]
[1] ++ [2] ++ [] ++ [3] ++ [] ++ [4] ++ [5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;produce a list with n identical elements&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;replicate :: Int -&amp;gt; a -&amp;gt; [a]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;select the nth element of a list&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(!!) :: [a] -&amp;gt; Int -&amp;gt; a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;decide if a value is an element of a list&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elem :: Eq a =&amp;gt; a -&amp;gt; [a] -&amp;gt; Bool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>FP101x - week 4 List Comprehensions</title>
   <link href="https://jiyeonseo.github.io/2015/11/01/introduction_to_functional_programming_week4/"/>
   <updated>2015-11-01T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/11/01/introduction_to_functional_programming_week4</id>
   <content type="html">&lt;h3 id=&quot;set-comprehensions&quot;&gt;Set Comprehensions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;the comprehension notation can be used to construct new sets from old sets&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;x &amp;lt;- [1..5] : generator&lt;/li&gt;
  &lt;li&gt;Comprehensions can have multiple generators , separated bu commas&lt;/li&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [(x,y) | x &amp;lt;- [1,2,3] , y &amp;lt;- [4,5]]
[(1,4),(1,5),(2,4),(2,5),(3,4),(3,5)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;changing the order of the generators changes the order of the elements in the final list&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [(x,y) | y &amp;lt;- [4,5], x &amp;lt;- [1,2,3] ]
[(1,4),(2,4),(3,4),(1,5),(2,5),(3,5)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;dependant-generators&quot;&gt;dependant Generators&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Later generators can depend on the variables
ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [(x,y) | x &amp;lt;- [1..3], y &amp;lt;-[x..3]]
[(1,1),(1,2),(1,3),(2,2),(2,3),(3,3)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;concatenates a list of lists&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;concat :: [[a]] -&amp;gt; [a]
concat xss = [x|xs &amp;lt;- xss, x &amp;lt;- xs]

&amp;gt; concat [[1,2,3], [4,5], [6]]
[1,2,3,4,5,6]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;guards&quot;&gt;Guards&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;List comprehensions can use guards to restrict the values&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [ x | x &amp;lt;- [1..10], even x]
[2,4,6,8,10]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;factors&lt;/li&gt;
  &lt;li&gt;maps a positive integer to its list of factors:&lt;/li&gt;
  &lt;li&gt;인자, 인수&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;factors :: Int -&amp;gt; [Int]
factors n = [ x | x &amp;lt;- [1..n], n ‘mod’ x == 0]

&amp;gt; factor 15
[1,3,5,15]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;prime&lt;/li&gt;
  &lt;li&gt;A positive integer is prime if its only factors are 1 and itself.&lt;/li&gt;
  &lt;li&gt;Hence, using factors we can define a function that decides it a number is prime&lt;/li&gt;
  &lt;li&gt;소수&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;prime :: Int -&amp;gt; Bool
prime n = factors  == [1,n]

&amp;gt; prime 15
false
&amp;gt; prime 7
truer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;primes&lt;/li&gt;
  &lt;li&gt;the list of all primes up to a given limit&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;primes :: Int -&amp;gt; [Int]
primes n = [x | x &amp;lt;- [2..n], prime x]

&amp;gt; primes 40
[2,3,5,7,11,13,17,19,23,29,31,37]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-zip-function&quot;&gt;the Zip Function&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;maps two lists to a list of pairs of their corresponding elements&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zip :: [a] -&amp;gt; [b] -&amp;gt; [(a,b)]

&amp;gt; zip [‘a’,’b’,’c’] [1,2,3,4]
[(‘a’,1),(‘b’,2),(‘c’,3)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;pairs&lt;/li&gt;
  &lt;li&gt;Using zip we can define a function returns the list of all pairs of adjacent elements from a list&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pairs :: [a] -&amp;gt; [(a,a)]
pairs xs = zip xs (tail xs)

&amp;gt; pairs [1,2,3,4]
[(1,2),(2,3),(3,4)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;sorted&lt;/li&gt;
  &lt;li&gt;Using pairs we can define a function that decides if the elements in a list are sorted&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sorted :: Ord a =&amp;gt; [a] -&amp;gt; Bool
sorted xs = and [ x &amp;lt;= y | (x,y) &amp;lt;- pairs xs ]

&amp;gt; sorted [1,2,3,4]
True
&amp;gt; sorted [1,3,2,4]
False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;positions&lt;/li&gt;
  &lt;li&gt;Using zip, functions that returns the list of all positions of a value in a list&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;positions :: Ez a =&amp;gt; a -&amp;gt; [a] -&amp;gt; [Int]
positions x xs =
     [ i | (x’ ,i) &amp;lt;- zip xs [0..n], x == x’]
      where n = length xs - 1

&amp;gt; positions 0 [1,0,0,1,0,1,1,0]
[1,2,4,7]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;string-comprehensions&quot;&gt;String Comprehensions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A string is a sequence of characters enclosed in double quotes&lt;/li&gt;
  &lt;li&gt;Strings are represented as lists of characters&lt;/li&gt;
  &lt;li&gt;“abc” :: String&lt;/li&gt;
  &lt;li&gt;means [‘a’,’b’,’c’] :: [Char]&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; length “abcde&quot;
5

&amp;gt;take 3 “abcde&quot;
“abc&quot;

&amp;gt; zip “abc” [1,2,3,4]
[(‘a’,1),(‘b’,2),(‘c’,3)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;lowers&lt;/li&gt;
  &lt;li&gt;function that counts the lower-case letters in a string&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lowers :: String -&amp;gt; Int
lowers xs = length [x | x &amp;lt;- xs, isLower x]

&amp;gt; lowers “Haskell&quot;
6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>FP101x - week 3 Defining Functions</title>
   <link href="https://jiyeonseo.github.io/2015/11/01/introduction_to_functional_programming_week3/"/>
   <updated>2015-11-01T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/11/01/introduction_to_functional_programming_week3</id>
   <content type="html">&lt;h3 id=&quot;conditional-expressions&quot;&gt;Conditional Expressions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;abs :: Int -&amp;gt; Int&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;abs n = if n &amp;gt;= 0 then n else -n&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;signum :: Int -&amp;gt; Int&lt;/li&gt;
  &lt;li&gt;signum n = if n &amp;lt; 0 then -1 else
                  if n == 0 then 0 else 1&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;guarded-equations&quot;&gt;Guarded Equations&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; abs n | n &amp;gt;= 0     = n
          | otherwise = -n

 signum n | n &amp;lt; 0 = -1
                    | n == 0 =0
                    | otherwise = 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pattern-matching&quot;&gt;Pattern Matching&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;not :: Bool -&amp;gt; Bool&lt;/li&gt;
  &lt;li&gt;not False = True&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;not True = False&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;(&amp;amp;&amp;amp;) :: Bool -&amp;gt; Bool -&amp;gt; Bool&lt;/li&gt;
  &lt;li&gt;True &amp;amp;&amp;amp; True = True&lt;/li&gt;
  &lt;li&gt;True &amp;amp;&amp;amp; False = False&lt;/li&gt;
  &lt;li&gt;False &amp;amp;&amp;amp; True = False&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;False &amp;amp;&amp;amp; False = False&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;True &amp;amp;&amp;amp; True = True&lt;/li&gt;
  &lt;li&gt;_ &amp;amp;&amp;amp; _ = False&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;so..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;True &amp;amp;&amp;amp; b = b&lt;/li&gt;
  &lt;li&gt;False &amp;amp;&amp;amp; _ = False&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;list-pattern&quot;&gt;List Pattern&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;[1,2,3,4] means 1:(2:(3:(4:[])))&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Functions on lists can be defined using x:xs patterns&lt;/li&gt;
  &lt;li&gt;ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;head :: [a] -&amp;gt; a
head (x:_) = x
tail :: [a] -&amp;gt; [a]
tail (_:xs) = xs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;x:xs patterns only matches non-empty lists:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; head []
ERROR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;lambda-expressions&quot;&gt;Lambda Expressions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Functions can be constructed without naming the functions by using lambda expressions&lt;/li&gt;
  &lt;li&gt;\x -&amp;gt; x+x&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add x y = x + y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;means&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;add = \x -&amp;gt; (\y -&amp;gt; x+y)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Lambda expressions are also useful when defining functions that return functions as results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const :: a -&amp;gt; b -&amp;gt; a
const x _ = x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to lambda&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const :: a -&amp;gt; ( b -&amp;gt; a )
const x = \_ -&amp;gt; x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;sections&quot;&gt;Sections&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;An operator written before its arguments by using parentheses
ex)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 1+ 2
3
&amp;gt; (+) 1 2
3
&amp;gt; (1+) 2
3
&amp;gt; (+2) 1
3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Useful functions can sometimes be constructed in a simple way using sections.&lt;/li&gt;
  &lt;li&gt;ex)&lt;/li&gt;
  &lt;li&gt;(1+) : successor function&lt;/li&gt;
  &lt;li&gt;(1/) : reciprocation function&lt;/li&gt;
  &lt;li&gt;(*2) : doubling function&lt;/li&gt;
  &lt;li&gt;(/2) : halving function&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>FP101x - week 2 Types and Classes</title>
   <link href="https://jiyeonseo.github.io/2015/10/31/introduction_to_functional_programming_week2/"/>
   <updated>2015-10-31T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/10/31/introduction_to_functional_programming_week2</id>
   <content type="html">&lt;h3 id=&quot;type-error&quot;&gt;Type Error&lt;/h3&gt;
&lt;p&gt;ex )&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 1+ False
Error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;type-in-haskell&quot;&gt;Type in Haskell&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;(expression)e :: (type)t&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;type-in-ghci&quot;&gt;:type in GHCi&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; not False
True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;calculates the type of an expression&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; :type not False
not False :: Bool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;basic-types&quot;&gt;Basic Types&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Bool&lt;/li&gt;
  &lt;li&gt;Char&lt;/li&gt;
  &lt;li&gt;String&lt;/li&gt;
  &lt;li&gt;Int&lt;/li&gt;
  &lt;li&gt;Integer&lt;/li&gt;
  &lt;li&gt;Float&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;list-types&quot;&gt;List Types&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;sequence of value of the same type&lt;/li&gt;
  &lt;li&gt;[False, Trye, False] :: [Bool]&lt;/li&gt;
  &lt;li&gt;[‘a’, ‘b’, ‘c’ ] :: [Char]&lt;/li&gt;
  &lt;li&gt;[[‘a’], [‘b’, ‘c’]] :: [‘Char’]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tuple-types&quot;&gt;Tuple Types&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;A tuple is a sequence of values of different types&lt;/li&gt;
  &lt;li&gt;(False, Ture) :: (Bool, Bool)&lt;/li&gt;
  &lt;li&gt;(False, ‘a’, True) :: (Bool, Char, Bool)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;function-types&quot;&gt;Function Types&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;not :: Bool -&amp;gt; Bool&lt;/li&gt;
  &lt;li&gt;isDigit :: Char -&amp;gt; Bool
— 0, 1&lt;/li&gt;
  &lt;li&gt;argument and resist types are unrestricted&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;curried-functions&quot;&gt;Curried Functions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;functions as results&lt;/li&gt;
  &lt;li&gt;add’      :: Int -&amp;gt; (Int -&amp;gt; Int)
add’ x y = x+y&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;more flexible then functions on tuples&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;associate to the left
mult x y z
means (((mult x) y) z)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;polymorphic-fuctions&quot;&gt;Polymorphic Fuctions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;a function is called polymorphic (“of many forms”) if its type contains one or more type variables.&lt;/li&gt;
  &lt;li&gt;length :: [a] -&amp;gt; Int&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex )&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; length [False, True]
2
&amp;gt; length [1,2,3,4]
4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;fst :: (a,b) -&amp;gt; a&lt;/li&gt;
  &lt;li&gt;head :: [a] -&amp;gt; a&lt;/li&gt;
  &lt;li&gt;take :: Int -&amp;gt; [a] -&amp;gt; [a]&lt;/li&gt;
  &lt;li&gt;zip :: [a] -&amp;gt; [b] -&amp;gt; [(a,b)]&lt;/li&gt;
  &lt;li&gt;id :: a -&amp;gt; a&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;overloaded-functions&quot;&gt;Overloaded Functions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;a polymorphic function is called overloaded of its type contains one or more class contains&lt;/li&gt;
  &lt;li&gt;sum :: Num a =&amp;gt; [a] -&amp;gt; a&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; sum [1,2,3]
6
&amp;gt; sum [‘a’,’b’,’c’]
ERROR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;haskell-has-a-number-of-type-classes&quot;&gt;Haskell has a number of type classes&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Num : Numeric types&lt;/li&gt;
  &lt;li&gt;Eq : Equality types&lt;/li&gt;
  &lt;li&gt;Ord : Ordered types&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ex )&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(+) :: Num a =&amp;gt; a -&amp;gt; a -&amp;gt; a&lt;/li&gt;
  &lt;li&gt;(==) :: Eq a =&amp;gt; a -&amp;gt; a -&amp;gt; Bool&lt;/li&gt;
  &lt;li&gt;(&amp;lt;) :: Ord a =&amp;gt; a -&amp;gt; a -&amp;gt; Bool&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>FP101x - week 1</title>
   <link href="https://jiyeonseo.github.io/2015/10/18/introduction_to_functional_programming_week1/"/>
   <updated>2015-10-18T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/10/18/introduction_to_functional_programming_week1</id>
   <content type="html">&lt;p&gt;몇 주 전, Coursera에서 시작하는 한 코스를 등록했는데… 너무 빡쎄서 ㅠ.ㅠ  어쩌지 하고 있던 상황에서 괜찮은 코스를 알게되었다.&lt;/p&gt;

&lt;bold&gt;&lt;a href=&quot;https://courses.edx.org/courses/course-v1:DelftX+FP101x+3T2015/info&quot; target=&quot;_blank&quot;&gt;FP101x Introduction to Functional Programming&lt;/a&gt;&lt;/bold&gt;

&lt;p&gt;edx 역시 Coursera와 같은 MOOC로 이 코스는 &lt;a href=&quot;http://www.tudelft.nl/&quot;&gt;Delft University of Technology&lt;/a&gt; 라는 네덜란드 대학에서 진행되는 수업이다. 사실 제목에 101 이 보여서 더 끌렸다.ㅋㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;그리고 요즘 대세인 Functional Programming. 제목만 보고는 왠지 스칼라로 진행 할 것 같았는데 Haskell이다. 아 당황스러웠다. 전혀 모르는데..
다행히 첫 수업은 하스켈의 문법부터 차근차근 알려주고 이 수업을 들으면 하스켈 뿐만 아니라 자바, 스칼라 등 다른 언어에서도 functional programming을 바로 써먹을 수 있다고 약을 판.. 아니 격려해 주니 맘 놓고 시작해 볼 만 한 것 같다.&lt;/p&gt;

&lt;p&gt;수업은 총 8주로 이루어져 있고 avg 60% 이상 점수를 받아야 Certificate를 받을 수 있다.
점수는 11번의 homework와 7번의 lab assignment로 이루어진다.&lt;/p&gt;

&lt;p&gt;###Github repo&lt;/p&gt;
&lt;bold&gt;&lt;a href=&quot;https://github.com/fptudelft/FP101x-Content-2015&quot; target=&quot;_blank&quot;&gt;https://github.com/fptudelft/FP101x-Content-2015&lt;/a&gt;&lt;/bold&gt;
&lt;p&gt;수업 mp3, slide, transcript, exercise 들이 올라온다.&lt;/p&gt;

&lt;p&gt;#Week 1&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Functional Programming의 역사와 간단한 설명&lt;/li&gt;
  &lt;li&gt;하스켈 설치부터 간단한 문법을 알려준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;p&gt;Glasgow Haskell Compiler (GHC)
&lt;a href=&quot;https://www.haskell.org/platform/&quot; target=&quot;_blank&quot;&gt;https://www.haskell.org/platform/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;하스켈-문법&quot;&gt;하스켈 문법&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Select the first element of a list&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; head [1,2,3,4]
1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Remove the first element from a list :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; tail [1,2,3,4,5]
[2,3,4,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Select the nth element of a list :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [1,2,3,4,5] !! 2
3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Select the first e elements of a list :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; take 3 [1,2,3,4,5]
[1,2,3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Remove the first n elements from a list :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; drop 3 [1,2,3,4,5]
[4,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Calculate the length of a list :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; length [1,2,3,4,5]
5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Calculate the sum of a list of numbers :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; sum [1,2,3,4,5]
15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Calculate the product of a list of numbers :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; product [1,2,3,4,5]
120
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Append two lists :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; [1,2,3] ++ [4,5]
[1,2,3,4,5]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Reverse a list :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reverse [1,2,3,4,5]
[5,4,3,2,1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;function-application&quot;&gt;Function Application&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(Mathematics) f(a,b) + c d &amp;gt;&amp;gt; (Haskell) f a b + c*d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;f a + b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;(f a) + b 를 의미한다&lt;/li&gt;
  &lt;li&gt;f (a + b) 가 아니라&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Mathematics&lt;/th&gt;
      &lt;th&gt;Haskell&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;f(x)&lt;/td&gt;
      &lt;td&gt;f x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f(x,y)&lt;/td&gt;
      &lt;td&gt;f x y&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f(g(x))&lt;/td&gt;
      &lt;td&gt;f ( g x )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f(x, g(y) )&lt;/td&gt;
      &lt;td&gt;f x ( g y )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f(x)g(y)&lt;/td&gt;
      &lt;td&gt;f x * g y&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;하스켈 확장자&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.hs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;example&quot;&gt;example&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;test.hs&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;double x = x + x
quadruple x = double ( double x )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ghci test.hs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ quadruple 10
&amp;gt; 40
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ take (double 2) [1,2,3,4,5,6]
&amp;gt; [1,2,3,4]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;factorial n = product [1..n]
average ns = sum ns ‘div’ length ns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;x ‘f’ y == f x y&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$ :reload &lt;br /&gt;
– reading file
– GHCi 는 파일 수정을 detect 하지 않기 때문에 새로 리 로드를 해줘야 함&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;naming&quot;&gt;Naming&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;lower-case로 시작
ex)
myFun
fun1
arg_2
x`&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;list arguments는 s로
ex)
xs
ns
nss&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;layout-rules&quot;&gt;Layout Rules&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;same column 맞추기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;useful-ghci-commands&quot;&gt;Useful GHCi Commands&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Mathematics&lt;/th&gt;
      &lt;th&gt;Haskell&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:load {name}&lt;/td&gt;
      &lt;td&gt;load script {name}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:reload&lt;/td&gt;
      &lt;td&gt;reload current script&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:edit {name}&lt;/td&gt;
      &lt;td&gt;edit script {name}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:edit&lt;/td&gt;
      &lt;td&gt;edit current script&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:type {expr}&lt;/td&gt;
      &lt;td&gt;show type of {expo}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:?&lt;/td&gt;
      &lt;td&gt;show all commands&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:quit&lt;/td&gt;
      &lt;td&gt;quit GHCi&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:t {expr}&lt;/td&gt;
      &lt;td&gt;{expr} :: {type}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>jhipster 맛보기</title>
   <link href="https://jiyeonseo.github.io/2015/10/13/jhipster/"/>
   <updated>2015-10-13T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/10/13/jhipster</id>
   <content type="html">&lt;p&gt;트위터 이것저것 보다가 &lt;a href=&quot;https://twitter.com/java_hipster&quot;&gt;@JHipster&lt;/a&gt;를 발견하였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://jhipster.github.io/images/logo-jhipster-drink-coffee.png&quot; alt=&quot;My helpful screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;젠킨스 아저씨가 떠오르는 이 로고때문에 다시 돌아봤던 것 같다 ㅎㅎ&lt;/p&gt;

&lt;h2 id=&quot;jhipster란&quot;&gt;jhipster란&lt;/h2&gt;

&lt;p&gt;페이지 : &lt;a href=&quot;http://jhipster.github.io/&quot;&gt;http://jhipster.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Spring boot를 이용한 생산성을 향상된 튼튼한 자바 스택 서버 사이드&lt;/li&gt;
  &lt;li&gt;AngularJS와 Bootstrap을 이용한 모던하고 모바일에 적합한 프론트 앤드&lt;/li&gt;
  &lt;li&gt;Yeoman, Bower, Grunt, Maven을 이용한 파워풀한 빌드 툴들&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;을 이용한 모던 웹앱을 Generator 이다.&lt;/p&gt;

&lt;h2 id=&quot;일단-만들어보자&quot;&gt;일단 만들어보자&lt;/h2&gt;
&lt;p&gt;1.yeoman &amp;amp; generator-jhipster 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g yo
$ npm install -g generator-jhipster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2.JHipster yeoman으로 generate&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yo jhipster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/jhipster_generate.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;generate 이전에 몇몇 meta 정보/빌드툴에 대한 입력 및 선택이 진행 된다.
(아래는 예시이다.)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;? (1/15) What is the base name of your application? (jhipster)
? (2/15) What is your default Java package name? (com.mycompany.myapp)
? (3/15) Do you want to use Java 8? Yes (use Java 8)
? (4/15) Which *type* of authentication would you like to use? HTTP Session Authentication (stateful, default Spring Security mechanism)
? (5/15) Which *type* of database would you like to use? SQL (H2, MySQL, PostgreSQL, Oracle)
? (6/15) Which *production* database would you like to use? MySQL
? (7/15) Which *development* database would you like to use? H2 in-memory with Web console
? (8/15) Do you want to use Hibernate 2nd level cache? Yes, with ehcache (local cache, for a single node)
? (9/15) Do you want to use a search engine in your application? No
? (10/15) Do you want to use clustered HTTP sessions? No
? (11/15) Do you want to use WebSockets? No
? (12/15) Would you like to use Maven or Gradle for building the backend? Maven
? (13/15) Would you like to use Grunt or Gulp.js for building the frontend? Grunt (recommended)
? (14/15) Would you like to use the LibSass stylesheet preprocessor for your CSS? No
? (15/15) Would you like to enable translation support with Angular Translate? (Y/n) y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3.실행하기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;maven 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$mvn 혹은 $ mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;gradle 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./gradlew 혹은 $ ./gradlew bootRun
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;localhost:8080&quot;&gt;localhost:8080&lt;/a&gt; 로 실행 확인!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/jhipster_demo.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4.client side live reload&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ grunt serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;entity-더해보기&quot;&gt;Entity 더해보기&lt;/h2&gt;
&lt;p&gt;yeoman으로 엔티티도 추가할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yo jhipster:entity foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;he entity foo is being created.
Generating field #1
? Do you want to add a field to your entity? Yes
? What is the name of your field? name
? What is the type of your field? String
? Do you want to add validation rules to your field? Yes
? Which validation rules do you want to add?
=================Foo=================
name (String)
Generating field #2
? Do you want to add a field to your entity? No
=================Foo=================
name (String)
Generating relationships with other entities
? Do you want to add a relationship to another entity? No
===========Foo==============
name (String)
-------------------
? Do you want to use a Data Transfer Object (DTO)? [BETA] Yes, generate a DTO with MapStruct
? Do you want pagination on your entity? Yes, with a simple pager
Everything is configured, generating the entity...
   create .jhipster/Foo.json
   create src/main/java/net/jiyeon/demo/domain/Foo.java
   create src/main/java/net/jiyeon/demo/repository/FooRepository.java
   create src/main/java/net/jiyeon/demo/web/rest/FooResource.java
   create src/main/java/net/jiyeon/demo/web/rest/dto/FooDTO.java
   create src/main/java/net/jiyeon/demo/web/rest/mapper/FooMapper.java
   create src/main/resources/config/liquibase/changelog/20151012163422_added_entity_Foo.xml
   create src/main/webapp/scripts/app/entities/foo/foos.html
   create src/main/webapp/scripts/app/entities/foo/foo-detail.html
   create src/main/webapp/scripts/app/entities/foo/foo-dialog.html
   create src/main/webapp/scripts/app/entities/foo/foo.js
   create src/main/webapp/scripts/app/entities/foo/foo.controller.js
   create src/main/webapp/scripts/app/entities/foo/foo-dialog.controller.js
   create src/main/webapp/scripts/app/entities/foo/foo-detail.controller.js
   create src/main/webapp/scripts/components/entities/foo/foo.service.js
   create src/test/java/net/jiyeon/demo/web/rest/FooResourceTest.java
   create src/test/gatling/simulations/FooGatlingTest.scala
   create src/main/webapp/i18n/en/foo.json
   create src/main/webapp/i18n/fr/foo.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;yeoman generator는 진짜 무궁무진 한것 같다.&lt;/li&gt;
  &lt;li&gt;기존 MEAN 스택 관련은 몇몇가지 프로젝트를 본 적 있는데, 개인적으로는 spring-boot를 좋아하는 지라 맘에 든다.&lt;/li&gt;
  &lt;li&gt;AngularJS 뿐만 아니라 요즘 뜨고 있는 React도 되면 좋을것 같다.&lt;/li&gt;
  &lt;li&gt;Gradle, Gulp도 지원하긴 하지만 recommended 는 Maven과 Grunt.. 크게 트랜디 한 것 같진 않다.&lt;/li&gt;
  &lt;li&gt;프로젝트 열어보면 뭐 엄청 복잡해 보이는데 그만큼 기본 제공하는 기능들이 많다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;– Swagger2 : &lt;a href=&quot;http://localhost:8080/#/docs&quot;&gt;http://localhost:8080/#/docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– SpringLiquibase&lt;/p&gt;

&lt;p&gt;– Application metrics : &lt;a href=&quot;http://localhost:8080/#/metrics&quot;&gt;http://localhost:8080/#/metrics&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;sample-app&quot;&gt;sample app&lt;/h2&gt;
&lt;p&gt;github : &lt;a href=&quot;https://github.com/jhipster/jhipster-sample-app&quot;&gt;https://github.com/jhipster/jhipster-sample-app&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Deview 2015</title>
   <link href="https://jiyeonseo.github.io/2015/09/15/deview2015/"/>
   <updated>2015-09-15T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/09/15/deview2015</id>
   <content type="html">&lt;p&gt;2015.09.14~ 2015.09.15&lt;/p&gt;

&lt;p&gt;이틀동안 Deview에 참석하였다. 스프링캠프2015 이후 국내 컨퍼런스 참관은 오랜만이여서 정말정말 재밌게 들었다.
항상 컨퍼런스 참가할 때 마다 느끼는 것. 세상은 넓고 초고수는 많다.&lt;/p&gt;

&lt;p&gt;많은 것들을 배웠던 이틀을 나름의 스케치를 남기며 일단 마무리를 할까 한다.(메모에 가깝다. 오타가 많다)
워낙 한정된 시간(50분)에 발표다 보니 대부분 속도도 빠르고 잘 모르는 부분은 잘못된 정보도 있을 수 있다.
(혹 틀린 내용이 있거나 좋은 의견이 있으실 경우 댓글로 남겨주시면 감사하겠습니다!)&lt;/p&gt;

&lt;p&gt;물론 후에 오픈될 발표 영상이 더 도움이 많이 되겠지만, 많은 발표중 어떤 것들을 들어야 할까. 혹은 다른 사람은 어떤 점을 주목했는가.
에 대해 조금이나마 도움이 되고자 포스팅을 해본다.&lt;/p&gt;

&lt;p&gt;Deview 공식 페이지 : &lt;a href=&quot;http://deview.kr/2015&quot; target=&quot;_blank&quot;&gt;http://deview.kr/2015&lt;/a&gt;&lt;br /&gt;
발표 slide : &lt;a href=&quot;http://deview.kr/2015/schedule&quot; target=&quot;_blank&quot;&gt;http://deview.kr/2015/schedule&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;내-스케쥴&quot;&gt;내 스케쥴&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;#article1&quot;&gt;[1] 네이버 효과툰은 어떻게 만들어졌나?&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article2&quot;&gt;[2] 네이버 효과툰 구현 이야기&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article3&quot;&gt;[3] Packetbeat 과 Elasticsearch 를 이용한 실시간 모니터링&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article4&quot;&gt;[4] React Everywhere&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article5&quot;&gt;[5] 웹 브라우저 감옥에서 살아남기&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article6&quot;&gt;[6] JPA와 모던 자바 데이터 저장 기술&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article7&quot;&gt;[7] JPA BOF&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article8&quot;&gt;[8] Large scale backend service development using Node.js, Docker and AWS&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article9&quot;&gt;[9] Docker Orchestration&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article10&quot;&gt;[10] Them simplicity of cluster apps with the Circuit: Implementing a job scheduler&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article11&quot;&gt;[11] Pesto 내부 구조 파헤치기&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;#article12&quot;&gt;[12] S2Graph: A Large scale graph database with HBase&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/media/CO1unuKUsAAXH0d.jpg:large&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘Day 1’&lt;/p&gt;

&lt;div id=&quot;article1&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[1] 네이버 효과툰은 어떻게 만들어졌나?&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/111-52720751&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/111-52720751&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;스크롤에 디펜던시를 / 타임라인 » 스크롤에 맞춰서&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;저작툴&quot;&gt;저작툴&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Angularjs + node webkit&lt;/li&gt;
  &lt;li&gt;빠른 개발 가능, 향후 web으로 갈 수 있음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;서비스&quot;&gt;서비스&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;모션 구현.
— 앱 : cocos2dx
— Web Viewer 호환성 확보
— PC wheel » smooth croll
— 이미지 용량 문제 » auto crop&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;todo&quot;&gt;TODO&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;누구나 쉽게 쓸 저작툴&lt;/li&gt;
  &lt;li&gt;다국어 번역 » 이미지에서 text 뽑기.&lt;/li&gt;
  &lt;li&gt;flash와 경쟁할 모션 플랫폼.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;parallax&quot;&gt;parallax&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;고고고, 악의는 없다, 소름&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;하이브리드-개발자의-장점&quot;&gt;하이브리드 개발자의 장점&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;개발자가 기획을 많이 들어가는 프로젝트&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;직접 작가의 요구사항 파악&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;효과툰은 애니메이션이 아니다.&lt;/li&gt;
  &lt;li&gt;scroll mapping, instantly 등등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;동작-원리&quot;&gt;동작 원리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;json 으로 packaging(위치와 event mapping)&lt;br /&gt;
– AssetManager
– PageMangeer&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;scrolll position에 따라.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DOM mode / Canvas mode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;최적화 / 안정성 / 호환성&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;이미지 적절히 자르기
– 그냥 2048px 이 아니라 공백찾아서 알아서 거기서 자르게&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;render-line&quot;&gt;render line&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;가변 최적화 선.&lt;/li&gt;
  &lt;li&gt;모바일 화면 크기마다 최적화선이 다르다&lt;/li&gt;
  &lt;li&gt;ex) mobile 75% 쯤 , PC 85% 쯤&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;스크롤-이벤트-구현&quot;&gt;스크롤 이벤트 구현&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;PC는 native scroll&lt;/li&gt;
  &lt;li&gt;사파리 7, 웹뷰 scrpit scroll  나머지 아이폰은 native scroll&lt;/li&gt;
  &lt;li&gt;안드로이드 같은 경우는 sciprt, natibe, stillcut, canvas 다양하게 사용하고 잇음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스-런칭까지&quot;&gt;서비스 런칭까지&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;9월 고민 시작 » 11월 1.0 비슷 릴리즈 » 서비스준비 4개월&lt;/li&gt;
  &lt;li&gt;개발자 3.5명&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article2&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[2] 네이버 효과툰 구현 이야기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/121-52734801&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/121-52734801&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;저작툴-1&quot;&gt;저작툴&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;$watch &amp;gt; dirty checking
해결
$emit(‘{event’}) »
Controller.$on()
$Broadcast&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;ng-route 메모리 부족&lt;br /&gt;
자식 창이 끄고 키고» 3기가까지 올라갓다.
    &lt;ul&gt;
      &lt;li&gt;html 파일로 직접 접근&lt;/li&gt;
      &lt;li&gt;ui-route 를 더 추천&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ng-repeat
    &lt;ul&gt;
      &lt;li&gt;directive in directive
$scope가 계속 물고가서
안그러면 나중에 노드/리스너 등이 계속 늘어남&lt;/li&gt;
      &lt;li&gt;명시적으로 $destroy 해주어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;SVG 렌더링 이슈&lt;br /&gt;
ng-show를 같이 사용&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;외부-모듈-사용하여-개발할때의-이슈&quot;&gt;외부 모듈 사용하여 개발할때의 이슈&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;$scope 변수가 반영되는 조건
    &lt;ul&gt;
      &lt;li&gt;dom 이벤트
—&amp;gt; $safeApply
in Directive &amp;gt; scope.$root.$safeApply&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;undo/redo
opensource   memento
네이버 : memento-promise&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;psd.js
    &lt;ul&gt;
      &lt;li&gt;문제 한글이름이 깨짐&lt;/li&gt;
      &lt;li&gt;이름이 너무 길면 파싱이 깨짐
        &lt;blockquote&gt;
          &lt;blockquote&gt;
            &lt;p&gt;python psd-tools
— 한글 레이어 이름 해결
— 긴 height psd 메모리 문제 없음.
— psd 자동 나누기도 가능&lt;/p&gt;
          &lt;/blockquote&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;unit-test&quot;&gt;unit test&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Strider cd 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test&quot;&gt;test&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Protractor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;문제 발생 » 노드js 파싱 못함.
화면을 보면서 테스트 코드를 넣고 싶다 »  자스민jasmine 활용&lt;/p&gt;

&lt;h3 id=&quot;뷰어-이슈&quot;&gt;뷰어 이슈&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;스크롤&lt;/li&gt;
  &lt;li&gt;사운드&lt;/li&gt;
  &lt;li&gt;ie 구버전&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;스크롤&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;스크롤 이벤트 특성의 문제.
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;스크립트 스크롤 사용
다 움직이니 메모리를 먹어서 최신기기도 버버벅
거대한 &amp;lt;div&amp;gt;가 아니라 해당 구간의 작은 &amp;lt;div&amp;gt;를 움직이자.
display:none 하면 reflow 비용이 있지만 display:block으로 레이어 생성 비용이 더 큼으로&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;적당한 크기로 나눌 필요가 있다
가로 * 세로 = 1024 * 1024 * 3&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;lazy loading
&lt;img /&gt; src 지정하는 순간 » Paint (ImageDecode) 발생 버벅거림이 느껴짐
scrollEnd 이벤트
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;스크롤이 잠시 멈췃을때 다음 구간 이미지 불러오기 pre-lolad + 미리 IamgeDecode해두기&lt;br /&gt;
체감 성능을 올릴수 잇음.&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GPU 가속을 받는 소성을 사용.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;컨텐츠 영역일때만 활성화. 스크립트 스크롤을 비활성화.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;사운드&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;HTML5 Audio 동시에 여러 리소스 재생 불가능&lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;WebAudio Api 사용&lt;/dt&gt;
      &lt;dd&gt;동시에 여러 사운드 리소스 재상 가능
는 문제는 갤럭시 시리즈.. 리소스가 여러개 겹치면 브라우저 크래시&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;iOS 명시적인 사용자 액션에 의해서만 사운드 재생 가능. (한번만 하면 나중에는 프로그래밍 적으로 가능 » 첨 시작할떄 아무 소리 없는 오디오를 틀어서 나중에 쓸수 잇게 꼼수)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;자동 재생의 문제 &amp;gt; 갤럭시는 안댐 -_-;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;다른 음악 앱 재생이 멈추는 경우.
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;딱 node를 받는 event 순간을 알 수 있음. 맞춰 재생 가능&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;@webkit-animate르 해결 &amp;gt; 미리 set
ccss파일로 선언 » ie8~ie9의 경우 자바스크립트 정규식으로 분석하여 스크립트로 해결&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article3&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[3] Packetbeat 과 Elasticsearch 를 이용한 실시간 모니터링&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/131-packetbeat-elasticsearch&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/131-packetbeat-elasticsearch&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;layer 에서 모든 프로토콜을 받아서 실제 pysical protocol 몸을 받아서
request와 reponse를 해서&lt;/p&gt;

&lt;p&gt;no- pipiline의 경우 꼬리에 꼬리를 물고 잇어서 쉽지만
 pipelining이 되어있으면 request랑 response 페어를 맞춰줘야함.&lt;/p&gt;

&lt;p&gt;따라서 모든 request-response pair json obj를 만들어주고
그 안에 관련 info들을 넣음. ( ex. response code, get method 등등)&lt;/p&gt;

&lt;p&gt;SQL / DNS » json 으로 info packaging&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;packetbeat로 만든 data &amp;gt;  elastic search cluster &amp;gt; cabin / dashboard
(기존 logstash와 비슷?)&lt;/li&gt;
  &lt;li&gt;packet beat : listens to the beat of the network packets&lt;/li&gt;
  &lt;li&gt;Top beat : operating system metrics&lt;/li&gt;
  &lt;li&gt;File Beat : logs&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;metrics beat : internal beats of systems via apis&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;TOP BEAT&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sample :  output obj : Device name. mount point 등등&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;File beat&lt;/li&gt;
  &lt;li&gt;based &amp;gt; Logstash-forwarder spice code&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sample : log level, 등등&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;libbeat &amp;gt; common&lt;/li&gt;
  &lt;li&gt;go library&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ligging, handling  등등. enable to fork?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;deployment&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;send to log stash&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Date histogram&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Percentiles aggregation » can get average » approximate values, T-digest&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;date_time + percentiles response  » can be combinable&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Latency histogram&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;response time repartition 리스폰스 얼마나 걸렷는지 애버리지 알랴주는건가?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;kibana config 제공&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Pipieline aggregations&lt;/li&gt;
  &lt;li&gt;new in elasticsearch 2.0&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;derivative aggregation
    &lt;ul&gt;
      &lt;li&gt;constantly gworing /&lt;/li&gt;
      &lt;li&gt;caculating moving average.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;오래된 데이터는 important를 낮춰서 계산. 최신이 더 중요한 data
수집된 데이터와, 무빙 에버리지, threshold, mean&lt;/p&gt;

&lt;p&gt;파도 모양 트랜드의 경우&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;문제는 average/예측이 늦음. 실제 일어나는것 보다.
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;cyclic trenad
그래서 » Holt-Winters(triple exponential) model works better for seasonal data
데모 http://demo.elastic.co/packetbeat&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;why go?
    &lt;ul&gt;
      &lt;li&gt;cpu/memory 를 많이 쓰고 싶지 않았다.&lt;/li&gt;
      &lt;li&gt;자바는 너무 무거워&lt;/li&gt;
      &lt;li&gt;파이썬/루비는 너무 느려&lt;/li&gt;
      &lt;li&gt;씨 » 너무 어려웡. 오래걸릴것 같아.&lt;/li&gt;
      &lt;li&gt;고 » 굿 랭기지&lt;/li&gt;
      &lt;li&gt;여러 플랫폼에 쓰여야함. » 따로 deployment를 해야하지만. supportable&lt;/li&gt;
      &lt;li&gt;logstash를 사용 하는게 편하지만 만약 json parser를 뭐 만들면 뭐 쓸 수 잇긴 허지&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;aggregation
    &lt;ul&gt;
      &lt;li&gt;모든 aggregation을 직접 custom해서 쓸 수 있다.&lt;/li&gt;
      &lt;li&gt;예로 보여준것은 standard 뿐이고 직접 맞춰 할수 잇다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Flume 이용중 flume vs .filebeat
    &lt;ul&gt;
      &lt;li&gt;elastic search 를 붙히기 쉽다.&lt;/li&gt;
      &lt;li&gt;simple&lt;/li&gt;
      &lt;li&gt;flume의 검색?(이게 뭔지 안들렷..ㅠ) 은 엘라스틱보다 느리다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다운타임동안 어케 처리할꺼임.
    &lt;ul&gt;
      &lt;li&gt;ping을 계속 날림. &amp;gt; 만약 missing data가 잇는지 확인&lt;/li&gt;
      &lt;li&gt;도커 지원 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;performance, benchmark?
    &lt;ul&gt;
      &lt;li&gt;pretty row resouces&lt;/li&gt;
      &lt;li&gt;지금은 샘플을 auto로 가지고 잇으면서 하지만 앞으로는 좀더 주요한 데이터를 가지고 있고 아닌건 drop data 를 할 수 있도록&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div id=&quot;article4&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[4] React Everywhere&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/141-react-everywhere&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/141-react-everywhere&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;믿고 듣는 초고수&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;react&quot;&gt;React&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;npm으로 설치&lt;/li&gt;
  &lt;li&gt;babel로 하위 커버&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;lt;script type=“text/babel”&amp;gt; » babel-core/browser 로 translate
— jsx가 아니네  » 0.14 부터 폐기 –&amp;gt; 나도 바꿔야 겟다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;관심사의 분리&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예전에 뷰와 로직을 분리했던 것을 관심사에 따라 분리시켰다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Angular 의 directive보다 훨씬 쉬움.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;state와 props&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;비교 조정 » 아직 효율적인 알고리즘 발견 ㄴㄴ&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;휴리스틱을 이용해 현실적인 효율을 찾아낸다 » 일반적 사용할때 문제를 없앰&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;virtual dom&lt;/li&gt;
  &lt;li&gt;virtual dom에서 동일 레벨끼리 비교하여 필요한 부분만&lt;/li&gt;
  &lt;li&gt;같은 컴포넌트는 그대로 사용(효율성)  아닌경우에는 다시 그린다&lt;/li&gt;
  &lt;li&gt;key 가 없는 컴포넌트는 철번쨰 요소부터 재사용&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;list에서는 key를 사용하는게 더 효율적 »&amp;gt; 가끔 Key 안해주면 계속 warn 해댐…
어케 버츄어 돔이 구현되엇는지 slide 링크 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Life Cycle&lt;/li&gt;
  &lt;li&gt;componentwillmount —&amp;gt;—&amp;gt;— willunmount (공식페이지에 있는 내용이니 참고하자)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;웹팩핫모듈대체유니버셜-랜더링&quot;&gt;웹팩/핫모듈대체/유니버셜 랜더링&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Webpack&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;nescape 3,0 대 이후로 ? require module 가 음스짐..&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;requirejs로 하는 안되나???&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;비슷한 다른거 browserify&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;의존석에 맞게 static asset으로 변환
– commonjs 와 AMD 모두 지원&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;핫 모듈 대체를 이용&lt;/li&gt;
  &lt;li&gt;watch를 하거나, 리빌드를 하거나 뭐 이런거.를 기존에 해왓지&lt;/li&gt;
  &lt;li&gt;핫 모듈 대체를 이용하면 실시간으로 기능을 갱신 가능 » 오오오 스고이 써봐야겟다!!&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;
$ npm install webpack
$ babel-core 바벨 번역기 (dev에 사용하기 위해서)
$ babel-loader 바벨 로더 ( 웹팩에서 바벨을 수행하기 위해서)
$ react
&lt;/pre&gt;

&lt;p&gt;webpack.config.js&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;emtry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;진입하는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파일&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_dirname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/build&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}
&lt;/span&gt;          &lt;span class=&quot;na&quot;&gt;filenaem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;loaders&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jsx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;끝나는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파일을&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;node_module&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;파일들을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;압ㅇㅇ압축&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;별도의 jsx 파일에서는 CommonJS 방식으로 react 참조해야함.&lt;/p&gt;

&lt;p&gt;실행&lt;/p&gt;
&lt;pre&gt;
$ webpack
$ webpack -w (watch)
&lt;/pre&gt;

&lt;p&gt;ES6 style&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                                         &lt;span class=&quot;c1&quot;&gt;// ES6 import&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HelloClass&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// 상속&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;장점 : 훨씬 깔끔해보임 익숙한 class모델&lt;/li&gt;
  &lt;li&gt;단점 : 이벤트 전파 부분이나 기존과 다름.&lt;/li&gt;
  &lt;li&gt;확인을 좀 더 한뒤 넘어가는게 더 좋을듯.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;hot-module-replacement-핫-모듈-대체&quot;&gt;Hot module replacement 핫 모듈 대체&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;동적으로 코드 모듈 교체 기법&lt;/li&gt;
  &lt;li&gt;업데이트 메니페스트 json&lt;/li&gt;
  &lt;li&gt;하나이상 청크 가 업뎃되면&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;파일 하나? 가 청크
“웹 소켓”이 열려서 작업햇던 청크를 핫모듈에게 알려주고 그때마다 적절한 용량으로 상채 보관등을 하며 업데이트가 된다.
ㅣ플레이스 없이 알아서 바꿔줌.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리액트/플럭스/리덕스 프레임워크에 거의 잇음..&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;모듈 단위로 라이브 리로드가능.&lt;/li&gt;
  &lt;li&gt;그때그떄 매니페스트 만들어야함 » 고로 직접 만들기 힘듬 -_- 이미 있는걸 사용하자 ..&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ex ) React HMR&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;loaders : “react-hot” « Dan 로더깍는 노인&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;universal-rendering&quot;&gt;Universal Rendering&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;과거 Front와 Backend가 구분이 나누어져 잇엇음.. ex) Angular 1.x / Express.js&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Isomorphic/Universial rendering 백앤드와의 장벽이 무너짐
ex ) React, Angular 2.x&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
 virtual DOM &amp;gt; renderToString  &amp;gt; HTML String
                    &amp;gt; render                &amp;gt; DOM
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;demo : 일렉트론&lt;/li&gt;
  &lt;li&gt;리액트 네이티브는 하이브리드가 아님&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article5&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[5] 웹 브라우저 감옥에서 살아남기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/152-52736153&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/152-52736153&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;회사 Entry&lt;/li&gt;
  &lt;li&gt;HTML5&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;내부 interpreting  »  60fps&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;루프기반의 인터프터여서 클라이언트 연산량이 높아 부하가 높음 (특수사항)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;jQuery/angular를 쓰면 안되는 case&lt;/li&gt;
  &lt;li&gt;selector : sizzle 라이브러리가 돔을 찾아냄.. &amp;gt; sql로 select문으로 찾는거랑 비슷.. 클라이언트가 계산. 난 양심이 없음 막씀.&lt;/li&gt;
  &lt;li&gt;초당 39만~ 84만 엘레멘트를 찾아야함.&lt;/li&gt;
  &lt;li&gt;Dom이 복잡하고 업데이트가 잦은 상황에서 jQuery Selector를 거의 사용할수 음슴…
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;그래서 2웨이 바인딩으로 Dom과 Data연동
 $digest 루프가 돌면서 $watch list 모델 변경을 dirty-check ( 변화있는 얘를 찾아서 뭐가 변햇는지 보고 data를 변화시킴)  » 어짜피 비대한 모델에 잦은 변화 » 초당 3천에서 24만 체크
극도로 느려짐 coz of dirty-check&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;대안&quot;&gt;대안&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;직접 ViewClass가 DomElement에 property를 줘서 구현.&lt;/li&gt;
  &lt;li&gt;Modal Obj 구현(getter/setter) &amp;gt; observer를 구현 »&amp;gt; 빨라짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;observer-패턴&quot;&gt;Observer 패턴&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;getter/setter에 이벤트가 들어오면 observer에게 notify를 날려 바뀜.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연산이 따로 들어가지 않기때문에 빠름&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Dom 을 많이 고치지 않는게 빠르게 할 수 잇다&lt;/li&gt;
  &lt;li&gt;Model Obj 도  Store에 해놓고 listener 등록해서 하면 될듯?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;게임-디자인-패턴을-이용한-웹개발&quot;&gt;게임 디자인 패턴을 이용한 웹개발&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Entity Component System&lt;/li&gt;
  &lt;li&gt;각각의 엔티티(객체)는 컴포넌트(기능)을 갖는다.&lt;/li&gt;
  &lt;li&gt;엔티티의 기능을 추가하고 싶으면 component를 개발
    &lt;ol&gt;
      &lt;li&gt;기능 추가가 용이&lt;/li&gt;
      &lt;li&gt;Component 디펜던시 분리 성공 기능이 명확하게 분리&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;단점&quot;&gt;단점&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;초기 개발 공수&lt;/li&gt;
  &lt;li&gt;최적화된 형태구현은 아니다.
ex) 유저 entity의 경우 초기 init만 해주면 되는데 위에서와 같이 초당 몇번씩 같이 update됨&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;웹소켓으로-구현한-웹과-하드웨어&quot;&gt;웹소켓으로 구현한 웹과 하드웨어&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;오프라인 실제 프로그래밍을 위해&lt;/li&gt;
  &lt;li&gt;HW CONNECT SERVER 웹소켓으로&lt;/li&gt;
  &lt;li&gt;아두이노  websocket 내장시켜 궈궈 ,&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;whats-next&quot;&gt;What’s next&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;code analysis&lt;/li&gt;
  &lt;li&gt;real-time letter&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;10월중 open source &amp;gt; 재밋겟당&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Canvas / SVG&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article6&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[6] JPA와 모던 자바 데이터 저장 기술&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/162-jpa&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/162-jpa&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;객체/관계형 데이터베이스 다름&lt;/li&gt;
  &lt;li&gt;객체  &amp;gt; sql에 맞게 바꾸고 넣고 등등등 하는 일들이 계속 됨.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;성능-최적화&quot;&gt;성능 최적화&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1차 캐시와 동일성 보장
SQL에서 가져온거 를 다시 가져오면 1차 캐시(같은 트랜젝션 안에서 보장) 에&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;트랜젝션을 지원하는 쓰기 지연&lt;/li&gt;
  &lt;li&gt;트랜젝션 커밋때까지 insert sql모음&lt;/li&gt;
  &lt;li&gt;jdbc batch sql 기능을 사용해서 한번에 sql 전송  » 알아서 최적화 해줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;지연-로딩--즉시-로딩&quot;&gt;지연 로딩 / 즉시 로딩&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;지연 로딩 : 객체가 실제 사용 될 때 로딩&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;즉시로딩 : 한방에 로딩!&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memberDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memberId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;jpa-기반-프로젝트&quot;&gt;JPA 기반 프로젝트&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring data API&lt;/li&gt;
  &lt;li&gt;queryDSL&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;spring data api
    &lt;ul&gt;
      &lt;li&gt;인터페이스만 작성.&lt;/li&gt;
      &lt;li&gt;스프링 데이터 jpa가 구현 객체를 동적(런타임에) 으로 생성 주입. 짱짱!&lt;/li&gt;
      &lt;li&gt;paging /Sorting 도 해줌&lt;/li&gt;
      &lt;li&gt;메소드 이름으로 추론하여 찾아줌.
— parameter로 Sort sort 넘기면 알아서
— parameter로 Pageable pageable 알아서 페이지 » 두번이 날라감. find all 해오고, page 전체를 select해옴&lt;/li&gt;
      &lt;li&gt;@Query(), jpql 도 가능 .&lt;/li&gt;
      &lt;li&gt;Web domain class convertor도 바로 가능하다. 오오 스고이&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;queryDSL
    &lt;ul&gt;
      &lt;li&gt;동적 쿼리&lt;/li&gt;
      &lt;li&gt;sql, JPQL을 코드로 작성할 수 있도록 도와주는 빌더 API&lt;/li&gt;
      &lt;li&gt;오픈소스&lt;/li&gt;
      &lt;li&gt;JPQL의 문제점 type-check 불가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;장점&quot;&gt;장점&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;문자가 아닌 코드로 작성 &amp;gt; 컴파일 시점에 문법 오류 발경&lt;/li&gt;
  &lt;li&gt;코드 자동완성&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;제약조건은 따로 빼서 재사용 조립 가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;데이터 베이스 변경에도 매우 유연함.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;성능-이슈&quot;&gt;성능 이슈&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;실무에서는 즉시보다는 지연로딩이 더 나음( 한번에 하면 쿼리가 튈 확률이 높음)&lt;/li&gt;
  &lt;li&gt;N+1문제 &amp;gt; 대부분 페치 조인으로 해결&lt;/li&gt;
  &lt;li&gt;내부 파서 문제가 잇을 경우 &amp;gt; 정적 쿼리로 해결 (한번 가져온거 재사용)&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article7&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[7] JPA BOF&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;집에 가려고 하다가 칠판에서 보고 급 참석&lt;/li&gt;
  &lt;li&gt;왠지 커머스 관련 개발자들이 많이 계셨음.&lt;/li&gt;
  &lt;li&gt;평소 개발 커뮤니티에서 뵙던 연예인들이 계셨음. 신기신기&lt;/li&gt;
  &lt;li&gt;다른 개발자들의 삽질기를 들어 보니 내가 했던 삽질과 똑같고.. 고민도 똑같아서.. 왠지
세상은 넓고 삽질은 똑같다…라는 생각이 들었음.&lt;/li&gt;
  &lt;li&gt;아직 ORM이 많이 안쓰이고 있음을 한번 더 느낌.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://fbcdn-sphotos-e-a.akamaihd.net/hphotos-ak-xlf1/v/t1.0-9/11951322_1058166744218326_5797563996820155909_n.jpg?oh=1022963a5b412b404f4f6be60946ea05&amp;amp;oe=569FFC80&amp;amp;__gda__=1450081051_1cc5096bc79239c5c1dfd94b6b4f9b98&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‘Day 2’&lt;/p&gt;

&lt;div id=&quot;article8&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[8] Large scale backend service development using Node.js, Docker and AWS
slide &lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/212-large-scale-backend-service-develpment&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/212-large-scale-backend-service-develpment&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;늦어서…뒤에서 서서 듣느라 필기 못함.&lt;/li&gt;
  &lt;li&gt;성능 최적화를 통해 비용절감을 드라마틱하게 할 수 있음을 보여주심.&lt;/li&gt;
  &lt;li&gt;게임 서버 구축 혹은 AWS를 쓰는 사람에게 정말 도움될만한 좋은 사례 발표.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article9&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[9] Docker Orchestration &lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/221-docker-orchestration&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/221-docker-orchestration&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;docker&quot;&gt;Docker&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;하나의 배포 서버를 다 한번에 하면 comflict 문제가 날수 잇다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;배포-서비스의-고민&quot;&gt;배포 서비스의 고민&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;커스터 마이즈를 하고 싶다.&lt;/li&gt;
  &lt;li&gt;pakage &amp;gt; deploy &amp;gt; service&lt;/li&gt;
  &lt;li&gt;서비스 상태를 관리해 주고 싶다 (history를 가지고 잇다가 rollback,deploy
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;“상태”를 이미지로 배로  deploy == rollback&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;도커-주목&quot;&gt;도커 주목&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;가상머신보다 가벼운 컨테이너 » 효율적 리소스 공유&lt;/li&gt;
  &lt;li&gt;이미지단위 빌드, 배포, 롤백이 용이&lt;/li&gt;
  &lt;li&gt;write once, run anywhere&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;도커 설명은 생략&lt;/p&gt;

&lt;p&gt;Orchestration 오케스트레이션
여러개의 컨테이너로 하나의 서비스로&lt;/p&gt;

&lt;h4 id=&quot;why&quot;&gt;Why?&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;composition 여러종류의 컨테이너로 구성된 서비스 설정 및 연동&lt;/li&gt;
  &lt;li&gt;replication 스케일러빌리티, high availability&lt;/li&gt;
  &lt;li&gt;write once, run anywhere 같은 이미지가 local/cluster에서 모두 동작하도록&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;요소&quot;&gt;요소&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;스케쥴링 ( 서비스 컨텍스트에 따라서 나눠주는거 ex) 병렬해야하는거 하나가 아니라 각각 컨테이너에게 할당 )&lt;/li&gt;
  &lt;li&gt;컨테이너 사이/ 외부 네트워킹&lt;/li&gt;
  &lt;li&gt;discovery - 컨테이너 찾는 방법 ex) membership , DNS ..&lt;/li&gt;
  &lt;li&gt;로깅 모니터링 얼럿 등&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docker ecosystem 에 여러가지들이 일군 ..&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;첫 논의 docker swarm, kubernetes&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;콜록콜록 9년동안 빌드 배포하면서 몸이 많이 망가짐..ㅠㅠ&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;docker-swarm&quot;&gt;docker swarm&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;하나의 도커에는 좋지만 여러개의 오케스트라에는 적절치 못한것 같다&lt;/li&gt;
  &lt;li&gt;but develop 속도가 빨라 나중에 다시 고려해볼만 하다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;kubernetes&quot;&gt;kubernetes&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;google style의 클라우드 서비스 관리&lt;/li&gt;
  &lt;li&gt;클러스터를 가장 빠르게 구축, 안정성 좋음
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;가장 적합&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;step-1-build-pool&quot;&gt;step 1. build pool&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;기존 jenkins &amp;gt; dockerize&lt;/li&gt;
  &lt;li&gt;기존 빌드 시스템에서 kube 서버에 도커 create 요청하게되면 docker registry 에 image를 가지고 생성&lt;/li&gt;
  &lt;li&gt;효과
    &lt;ol&gt;
      &lt;li&gt;fast build ( vm 보다 더 효율적이다 &amp;gt; 빌드 자원의 공유로 고성능 빌드 가능 )&lt;/li&gt;
      &lt;li&gt;pre built&lt;/li&gt;
      &lt;li&gt;no management&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;배운점&quot;&gt;배운점&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;컨테이너는  stateless&lt;/li&gt;
  &lt;li&gt;이미지는 docker registry에 이미지를 계속 올린다. » 백업이 제대로 되고 잇는지 확인 어려움. (직접 받아서 실행해 봐야함 )
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;Environment Variable 변경이 어려움 (ex. JAVA_HOME 을 나중에 바꾸기 힘듬 , 백개 다 받아서 다시 고쳐서 뭐 등등등)&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;컨테이너 데이터의 저장 방법이 필요
— 컨테이너 종료 후에도 info 들이 필요. (history)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;multi-cluster 관리가 필요하다.
— 하나 띄우고 나서 생각하자. 라고 하면 늦엉 ㅋ.ㅋ 이른 시점부터 를 고려야함.
— ex) Multi-IDC, Network ACL
— local, alpha용 .&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;step-2-shipdock--shipping-docker&quot;&gt;step 2. ShipDock : shipping docker&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;테스트 풀 확보.(기술 기반과 “돌아가는 버전”)&lt;/li&gt;
  &lt;li&gt;continuous deployment  ( 푸시 앤 빌드/디플로이 )&lt;/li&gt;
  &lt;li&gt;PAAS 준비 (platform as a service) » write once run anywhere&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;overview&quot;&gt;overview&lt;/h4&gt;
&lt;p&gt;개발자가 &amp;gt; dogsight(UI) &amp;gt; 빌다가 만들면 도커레지스트리에 올리고  doh에서 도커가 mamange 하다가 kube api에 침. 실제 서버 디스커버리는 nginx로&lt;/p&gt;

&lt;h4 id=&quot;doh---도커오케스트레이션헤드쿼터&quot;&gt;DOH :  도커오케스트레이션헤드쿼터&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;멀티 클러스터 관리( + 스케쥴링)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;도로시---도커-베이스-빌더&quot;&gt;도로시  : 도커 베이스 빌더&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;인스턴스하게 도커 컨테이너 생성하여 이미지 빌드/푸시&lt;/li&gt;
  &lt;li&gt;젠킨스보다 stateless/가볍게 빌드&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;docksight&quot;&gt;Docksight&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;GUI 지원.&lt;/li&gt;
  &lt;li&gt;여러 클러스터를 지원하는 적절한 UI/CLI 음슴&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;step3-service-cluster&quot;&gt;step3. Service Cluster&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Consul
    &lt;blockquote&gt;
      &lt;p&gt;Networking&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article10&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[10] Them simplicity of cluster apps with the Circuit: Implementing a job scheduler&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/231-the-simplicity-of-cluster-apps-with-circuit&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/231-the-simplicity-of-cluster-apps-with-circuit&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;command-line&lt;/p&gt;
&lt;pre&gt;
$ circuit mkproc
$ circuit stdout
$ circuit wait
$ circuit stderr
&lt;/pre&gt;

&lt;h4 id=&quot;system-overview&quot;&gt;System Overview&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;System architecture&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
$ circuit start
&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;설킷끼리 서로 server를 찾아서 » failure가 잇는지 찾고
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;각각이 api endpoint를 갖고&lt;/p&gt;
        &lt;blockquote&gt;
          &lt;p&gt;만약 호스트 A에 설킷 클라이언트가 잇으면 host B(서킷 클라이언트가 죽어잇는) 에 찔러도 Host A에서 api 를 가지고 return&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;never fail,  bcoz of colocation&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;go-api-overview&quot;&gt;go API overview&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Error handling&lt;/li&gt;
  &lt;li&gt;네트워크 다운이나 host가 죽엇다던가&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;anchor&quot;&gt;Anchor&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;클러스터 노드. single node&lt;/li&gt;
  &lt;li&gt;children을 가지고 있음 . hierarchy&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;root Anchor&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;지금 available 한 앵커에서 값 return&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Proc 으로 Anchor의 state나 이런걸 떨거 줄 수 잇다?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;듣다가 범상치 않아 발표자 소개 읽어보니 지니어스.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;implementing-a-job-scheduler&quot;&gt;implementing a job scheduler&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;design&lt;/li&gt;
  &lt;li&gt;user spec   : per host 얼마나 할수 잇는지&lt;/li&gt;
  &lt;li&gt;http api server :어떤 집들이 돌고잇는지 보여줄것&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;architect&quot;&gt;architect&lt;/h4&gt;
&lt;p&gt;host A에는 스케쥴러  »» http api 제공
B,C에는 잡 1,2 그리고 3을 돌린다.
각 ABC에는 서킷 클라이언트가 잇음&lt;/p&gt;

&lt;h4 id=&quot;state-and-logic&quot;&gt;State and logic&lt;/h4&gt;

&lt;p&gt;유저가 job을 더한다던가 status를 보겟다는 요청이 들어오면 일단 pend 에 쌓이고
써킷이 job을 뺀다던가 호스트를 넣거나 빼거나
스케쥴러는 컨트롤러랑 connect되서 job execute&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;golang을 좀 공부해야겟다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;컨트롤러레 실제 잡들을 넣고&lt;/p&gt;

&lt;p&gt;Controller state는 서킷에 의해 컨트롤 되며 job 쌓인 것들 pending 같은거 이런것도 다 관리 해주나방&lt;/p&gt;

&lt;p&gt;scheduler에 잡이 들어오면
클라이언트 serverId를 가지고 어디에 커넥트 해야하는지를 보고  (HOST)
스케쥴 서비스 네임을 넘겨서 (SERVICE)&lt;/p&gt;

&lt;p&gt;스케쥴러는 그걸 받고
일단 controller를 안락하고 jobs를 업뎃/add하고 다시 schedule()시킴.&lt;/p&gt;

&lt;p&gt;만약 user로 부너 status 요청이 들어오면 controller lock을 하고 ……값 리턴? (놓쳣넹)&lt;/p&gt;

&lt;p&gt;Run a job
jobAnchor에 work({host}, “job”, {job.name})&lt;/p&gt;

&lt;p&gt;github에 올라와 잇으니 한번 돌려봐야 알것다..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Universal cluster binaries
— 확장해서 master 아래에 scheduler 가 있고 그 아래에 job을 실행 할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
master
ㄴ sched1
ㄴㄴ job1
ㄴㄴ job2
ㄴ sched2
ㄴㄴ job3
&lt;/pre&gt;

&lt;p&gt;docker image를 이용해서 하나의 master/sched/job 을 다시 circuit sever로 쌓아서 여러 host끼리 묶을 수도 잇음.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;클라우드 시스템에서 어플리케이션 사이  share에 편하도록?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ship with Circuit included vs Hadoop required&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;inplinciple&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;새로 인프라를 띄우는게 부담스러움.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 랭기지랑도 합쳐서 쓸 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;센터 서버가 따로 음슴. » 발표자는 이게 weak point라 생각 » 센터가 죽으면 다 죽엉&lt;/li&gt;
  &lt;li&gt;이건 peer to peer 컨셉으로 master가 같이 잇기때문에 어떤 host가 살앗는지 죽엇는지 서로 알수 잇음.&lt;/li&gt;
  &lt;li&gt;아니면 그냥 세임 로직을 넣어도 댐&lt;/li&gt;
  &lt;li&gt;master는 유머와 connect 역할만하고 마스터 죽어도 스케쥴러는 알아서 돌고 잇음.
그냥 마스터만 다시 살리면 됨.
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;스케쥴러가 이미 돌고 잇으면 그냥 유저에게 알려줄뿐&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;살아잇는걸 찾기위해 뭐 주키퍼라던가 이런걸 사용하지 않아도 댐&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&quot;article11&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[11] Pesto 내부 구조 파헤치기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/245-presto&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/245-presto&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 분석 DB&lt;/li&gt;
  &lt;li&gt;페이스북, 넷플릭스(페북다음) 드랍박스, 큐블 에어비엔비 등에서 사용중&lt;/li&gt;
  &lt;li&gt;페북 :  하루 3만건  ( 데이터 사이언티스트 1000명이 사용중)&lt;/li&gt;
  &lt;li&gt;넷플릭스  : 하루 2500건 /&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;에어비엔비 : Airpal 이라는 presto query execution tool »  open source&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;안써본 사람은 잇는 사람은 잇어서 한번만 쓰는 사람은 음성 ~ 마법의 툴&lt;/li&gt;
  &lt;li&gt;비슷 비슷 : 타조 / 임팔라&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;presto&quot;&gt;presto&lt;/h4&gt;
&lt;pre&gt;
$ presto  
$ describe
$ select
&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;기존 db와 비슷 like mySql&lt;/li&gt;
  &lt;li&gt;따로 러닝 커브가 없이 업무에 바로 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;장점-1&quot;&gt;장점&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;빠르다.interactive&lt;/li&gt;
  &lt;li&gt;기가바이트 부터 petabyte 급 도 빠르게&lt;/li&gt;
  &lt;li&gt;hive 보다 훨씬 빠르다&lt;/li&gt;
  &lt;li&gt;ORC 파일 reader를 쓰면 더 빠르게 대용량 처리 가능&lt;/li&gt;
  &lt;li&gt;자바로 짜여져있고,  플러그인 작성 가능. » 플러그인 작성법은 낭중에 ㅋ&lt;/li&gt;
  &lt;li&gt;ANSI-SQL 표준 질의문을 사용&lt;/li&gt;
  &lt;li&gt;코드 제너레이션 가능&lt;/li&gt;
  &lt;li&gt;오픈 소스&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;임팔라는 소스가 오픈되어잇지만 풀리퀘 안받는데 여기는 받음 ㅋㅋㅋㅋㅋ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;coordinator + worker (하이브랑 비슷)&lt;/li&gt;
  &lt;li&gt;http로 rest api로 커넥트&lt;/li&gt;
  &lt;li&gt;하이브/몽고 디비 등과 연결 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;
SELECT *
FROM hive.world.orders
JOIN mongo.deview.lineitem i
&lt;/pre&gt;
&lt;p&gt;이런식으로 가능&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;기존에는 각각의 DB에서 가져온다음 어플단에서 combine해줫는데 그럴필요가 없음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;노드 사이의 전달&lt;/li&gt;
  &lt;li&gt;(기존에는) “  ”라는 raw data가 지나갔는데 “PAGE”로 컬럼 형태로 전송&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cluster-memory-manager&quot;&gt;Cluster memory manager&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;메모리 상에서 처리
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;특정 쿼리가 메모리를 많이 차지할 경우 » out of memory&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;but Presto는 메모리 매니저가 위의 경우를 magaging 함
– General pool
– Reseved Poool
– system pool&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;현재 실행중인 것 중에 많이 차지하는 얘가 먼저 끝나고 다른 얘들 돌도록 매니징&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;코디네이터는 각초마다 워커들의 메모리를 체크해서&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;내부 캐시를 통해 워커 메모리에 직접 key/value를 사용해서 올려놓고
나중에 join 해서 쓸 수 잇다고 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;security&quot;&gt;Security&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;kerveros ssl&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;내부-기능&quot;&gt;내부 기능&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;버전이 괜춘한지 verifier&lt;/li&gt;
  &lt;li&gt;benchmark&lt;/li&gt;
  &lt;li&gt;query queue&lt;/li&gt;
  &lt;li&gt;JDBC driver&lt;/li&gt;
  &lt;li&gt;python/ruby 프레스코 클라이언트&lt;/li&gt;
  &lt;li&gt;Presto metrics &amp;lt; 내부 시스템 spec 확인 쉽게 해주는 툴 제공 (오픈소스)&lt;/li&gt;
  &lt;li&gt;Event Controller 외부 시스템에서 테러나 이런 것들 등등 받을 수 있도록 &amp;gt; 얼마만큼의 쿼리가 들어왓는지, 스텍 트레이스 등등&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;library&quot;&gt;Library&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;/airlift/slice&lt;/li&gt;
  &lt;li&gt;자바의 기본 바이트 버퍼가 느리다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그래서 unsafe를 이용해 자체 만들어서 더 빠르게 읽어들임.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/airlift/airlift
— 분산 시스템을 만드는 framework.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fastutil
— Fast Java Collection
— 큰 자바 콜렉션을  더 빠르게 처리&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ASM
— Bytecode manapulation&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;그 밖에&lt;/li&gt;
  &lt;li&gt;jdk1.8&lt;/li&gt;
  &lt;li&gt;guice,&lt;/li&gt;
  &lt;li&gt;guaba&lt;/li&gt;
  &lt;li&gt;jetty&lt;/li&gt;
  &lt;li&gt;jackson&lt;/li&gt;
  &lt;li&gt;jersey&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Biding&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SqlType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@SqlType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Slice&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@SqlType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BOOLEAN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@SqlType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Slice&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;자동 바인딩이 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;plugin&quot;&gt;Plugin&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;데이터를 읽어 엔진에 보내주는 기능&lt;/li&gt;
  &lt;li&gt;하이브 버젼별, postgres kafka 등등&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;몽고디비는 내(발표자)가 만듬&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Raptor&lt;/li&gt;
  &lt;li&gt;워커에 직접 orc format으로 넣어주고 그대로 빼주고&lt;/li&gt;
  &lt;li&gt;따로 하둡을 깔 필요 없음.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본 하이브보다 더 빠르게 할수 잇음
— 실제 페북에서도 리얼타임 처리를 이걸로 하고 있다고 .&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;mongoDB plugin 만드는 방법 demo&lt;/li&gt;
  &lt;li&gt;타입 추가를 @JsonCreator로 더할수 잇음
ex ) 몽고 디비의 ObjectId&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;future&quot;&gt;Future&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;cost based optimization&lt;/li&gt;
  &lt;li&gt;join hint&lt;/li&gt;
  &lt;li&gt;곧 추가가 되지 않을까?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;표준 질의 사용
spark 와 대비 햇을때
계속해서 안정화 되어가고 잇음.&lt;/p&gt;

&lt;p&gt;억단위 데이터가 잇을때 정확한 값을 안주고 근사치를 준다?&lt;/p&gt;

&lt;h4 id=&quot;데이터-샘플링-방법&quot;&gt;데이터 샘플링 방법&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;실제 질의
    &lt;ul&gt;
      &lt;li&gt;정확한 값 select * from hive.world where condition&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;샘플링 기능 제공 ( 근사치를 뽑아주는)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하이브보다
정확성은 똑같고
스피드는 평균적으로 10배정도&lt;/p&gt;

&lt;div id=&quot;article12&quot;&gt;&lt;/div&gt;
&lt;h3&gt;[12] S2Graph: A Large scale graph database with HBase&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
slide : &lt;a href=&quot;http://www.slideshare.net/deview/263-s2graph-largescalegraphdatabasewithhbase2&quot; target=&quot;_blank&quot;&gt;http://www.slideshare.net/deview/263-s2graph-largescalegraphdatabasewithhbase2&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;서비스들에서 관계들을 모아 모아서&lt;/li&gt;
  &lt;li&gt;문제점
— 데이터가 엄청 커 : 대략 관계 10억건, 사용자 2억건&lt;/li&gt;
  &lt;li&gt;계속 유저 액티비티가 늘어남 데이터 사이즈 10억건&lt;/li&gt;
  &lt;li&gt;업데이트 만 2억권&lt;/li&gt;
  &lt;li&gt;계속 변화하는 데이터&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;하고-싶엇던것&quot;&gt;하고 싶엇던것&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;바로바로 서비스에 가져다 쓸 수 있게&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;친구가 좋아한건 바로바로 업뎃 되엇으면 좋겟다 ( 5분뒤 동기화 ㄴㄴ )
고로, 결과를 캐싱하면 안댐.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;시간순서(timestamp)가 아닌 랭킹 로직이 들어갓으면 좋겟다.&lt;/li&gt;
  &lt;li&gt;pull strategy (차용한것 ) ( push strategy 라는것 도 잇음. 나중에 설명)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;before&quot;&gt;BEFORE&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;원래는 각 서비스 별로 데이터 베이스가 샤딩 되어잇음.&lt;/li&gt;
  &lt;li&gt;만약 웹툰을 좋아한 사람을 찾으려면 카카오API를 통해 친구를 얻고 웹툰 DB 또 찾아야함&lt;/li&gt;
  &lt;li&gt;api 를 통해 하다보니 케파 문제도 잇고&lt;/li&gt;
  &lt;li&gt;api 계속 뚤어줘야 하고 그러다 보니 개발 속도가 느려짐&lt;/li&gt;
  &lt;li&gt;한쪽이 바뀌면 다른쪽도 바꿔야 하는 구조적 문제&lt;/li&gt;
  &lt;li&gt;mysql를 저장하다보니 클릭이라던가 이런건 수집이 어려웟음.&lt;/li&gt;
  &lt;li&gt;비지니스적으로 의미잇는 데이터를 insett 하지 못햇엇음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;after&quot;&gt;AFTER&lt;/h4&gt;
&lt;p&gt;서비스앱 » 다 쏴줘 » S2GraphDB (stateless app servers) » HBase&lt;/p&gt;

&lt;h4 id=&quot;그래서-s2graph를-왜-만들엇는가&quot;&gt;그래서 S2Graph를 왜 만들엇는가&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;다른 솔루션들을 찾아보앗지만 성능 이슈/복잡도/입맛에 맞춰 바꾸기 힘듬 등&lt;/li&gt;
  &lt;li&gt;(사내에서 일케 쓰여요) Storage as a Service + Graph API = Realtime Breatdth First Search&lt;/li&gt;
  &lt;li&gt;단순 BFS를 빠르게 집중.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;왜-마이에스큐엘-안하고-그래프db왜-써&quot;&gt;왜 마이에스큐엘 안하고 그래프DB왜 써?&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;성능/유지보수가 더 용이함&lt;/li&gt;
  &lt;li&gt;사실 뒤에서 써도댐. » DB 디펜던시가 음슴.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;추천&quot;&gt;추천&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Batch 로 취향이 비슷한 사람을 뽑고 » S2graph에 올리면 취향이 비슷한 사람들이 반응한것들을 뽑을 수 잇음&lt;/li&gt;
  &lt;li&gt;이 Batch 부분은 S2Graph는 완전 별개임 (S2Graph는 서빙하는 곳임)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쿼리 타임을 어케 주느냐에 따라 다이나믹 정도가 달라질 수 잇음.( 최근순을 더 가중치를 주면 다이나믹, 최근에 가중치를 낮추면 static)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;similar Users는 배치지만 user-product interaction은 계속 다이나믹하게 달라지고 잇음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;item-based-cf&quot;&gt;Item-based CF&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;batch layer가 뒤로 빠짐&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;similar products 부분은 배치로&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Grouping으로 나눠서  배치 작업을 없앨 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;spreading-activation&quot;&gt;Spreading Activation&lt;/h4&gt;
&lt;p&gt;나랑 같은 프로덕트를 반응한 사람들을 찾아서 그 사람들이 반응한 다른 product들을 뽑을 수 있다 (no batch)
마이에스큐엘의 경우 self join 때문에 성능 문제가 나오지만 hbase의 경우 성능이 좋아짐)
컨텐츠의 생명 주기가 짧을 경우 효과가 크다 ex) 뉴스&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;다음카카오 19개 서비스&lt;/li&gt;
  &lt;li&gt;설득 힘들엇음 (graph로 표현 가능한지)&lt;/li&gt;
  &lt;li&gt;object =  vertex&lt;/li&gt;
  &lt;li&gt;Relation = Edge&lt;/li&gt;
  &lt;li&gt;BFS가 필요하더라&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####API&lt;/p&gt;

&lt;p&gt;####Vertex&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Vertex 를 insert/delete/select 가능 (inser overide)&lt;/li&gt;
  &lt;li&gt;key/value&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;edge&quot;&gt;Edge&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;CRUD&lt;/li&gt;
  &lt;li&gt;관계까지 들어간다.&lt;/li&gt;
  &lt;li&gt;key/value&lt;/li&gt;
  &lt;li&gt;임의의 프로퍼티 저장 가능.&lt;/li&gt;
  &lt;li&gt;정렬이 되어잇음. 속도 보장을 위해&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;query&quot;&gt;Query&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;queryparam으로 스텝을 이루고 그 스텝들이 쿼리를 구성&lt;/li&gt;
  &lt;li&gt;스텝을 멀티플로 지원&lt;/li&gt;
  &lt;li&gt;사내 서비스들이 rails를 많이 쓰는데 쓰레드를 구현하기 힘들어서 concurrent 하게 오퍼레이션을 해줄 수 잇도록 만들엇다.&lt;/li&gt;
  &lt;li&gt;pinterest도 비슷한가 쓰는데 이런 기능 음슴&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;indices&quot;&gt;Indices&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;index 추가 가능.&lt;/li&gt;
  &lt;li&gt;int long float string data 다 서포트&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;결론--s2grpah는-스토리지-서비스-그래프-모델&quot;&gt;결론 : S2Grpah는 스토리지 서비스/ 그래프 모델&lt;/h4&gt;
&lt;p&gt;아파치 지라프랑 다른게 몬데?
시작점 vertex를 찍고 거기에 연관된 것들을 뽑아오는것에 집중
친구가 젤 많은 사람은? 이런고 노노&lt;/p&gt;

&lt;p&gt;####PUSH
내가 라이크 하나할 경우 모든 친구 feed queue에 write 해야함.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;select 가 빠름&lt;/li&gt;
  &lt;li&gt;timestamp로 하기에는 좋음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;pull&quot;&gt;PULL&lt;/h4&gt;
&lt;p&gt;내가 라이크 해도 딱 하나만 write (post에 대해) 저장 event에 대해 update 1 번&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;대신 쿼리타임에 여러가지를 처리해야함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pull / push모두 지원하긴 하지만 pull이 response를
초당 2만 tps를 견딜 수 잇엇음
reponse 100ms under&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기존 redis cache를 빼낼 수 잇엇음&lt;/li&gt;
  &lt;li&gt;WAL log 를 카프카에 남겨줌
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;데이터 분석가한것들이 S2Graph에 들어감&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;오픈소스&quot;&gt;오픈소스&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;벌크 로더도 오픈소스&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ab-테스트&quot;&gt;AB 테스트&lt;/h4&gt;
&lt;p&gt;Edge 그래프가 지원되어서 사내에서 사용중&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;어떤 쿼리가 어떤 노출되엇고 어떤게 클릭이 되엇는지 그래프 그려줌&lt;/li&gt;
  &lt;li&gt;서비스에서는 edge 인서트만 해주면 됨.only&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;s2graph-internal&quot;&gt;S2Graph internal&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;예전 발표를 한번 보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;성능&quot;&gt;성능&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;거의 디폴트의 hBase 사용&lt;/li&gt;
  &lt;li&gt;열악한 환경의 서비스
    &lt;blockquote&gt;
      &lt;blockquote&gt;
        &lt;p&gt;벤치마크 천개의 컬럼 1억 row  퍼포먼스 결과&lt;/p&gt;
      &lt;/blockquote&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;ex. 친구 100명에 10명씩  43ms&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;linear-스케일러블&quot;&gt;linear 스케일러블&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;쿼리 스텝이 늘어나도 성능 차이가 없다&lt;/li&gt;
  &lt;li&gt;모든 데이터를 모으고 추천을 편히 해주고 싶다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;####벤치마크 툴&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;nglinder&lt;/li&gt;
  &lt;li&gt;뭔가 말할려다가 더이상의 설명은 생략한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;그래프db&quot;&gt;그래프DB&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;orientDB? 100억건 넣어봤더니 느령.. insert가 오래걸리나보네.
** 실제로 어떤게 그사람들에게 노출되엇는지도 저장중.
**  샤딩 보다는 linear 스케일러빌리티&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;쿼리-리밋&quot;&gt;쿼리 리밋&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;성능상 갱장히 중요&lt;/li&gt;
  &lt;li&gt;BMT 미리 검수를 한다 b4&lt;/li&gt;
  &lt;li&gt;paging를 추천함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;개인-느낀점&quot;&gt;개인 느낀점&lt;/h3&gt;

&lt;p&gt;아쉬웠던 점부터 공유하자면..
4개의 트랙이 동시진행 되다보니 듣고 싶어도 못들을 세션들이 좀 있다 ㅠ.ㅠ
아파치 스팍 관련이라던가 swift 프로그래밍, 로봇, pinpoint, 추천 등등. 참관하신 다른 분들의 이야기만 들어도 흥미진진한 발표들이 참 많았다.
그리고 머신러닝, 빅데이터, 추천은 역시 큰 화두였는데.. 그에 비해 내가 아는 빅데이터는 너무 초보적이여서..편식하며 듣지 않았나 싶다.
또, 부스들이 다양하지 못했다. 그동안 다른 컨퍼런스에서 보았던 다양한 기술 커뮤니티들이 없어서 조금 아쉬웠다.&lt;/p&gt;

&lt;p&gt;당장 써먹어봐야겠다! 했던 것은..
우선 최근 가장 많이 사용하고 있는 &lt;a href=&quot;#article4&quot;&gt;React 관련&lt;/a&gt;. React 세션에서는 “리액트”에 대한 기술 뿐만 아니라 함께 사용되는 Babel, Hot module replacement 와 같은
같이 쓸만한 기술들을 소개해 준 부분이 정말 좋았다. 생산성을 크게 올릴 수 있을 것 같다!
또한 &lt;a href=&quot;#article6&quot;&gt;JPA 세션&lt;/a&gt;을 통해 알게 된 성능최적화/지연로딩 즉시로딩 등. 앞으로 jpa를 쓸 때 좀 더 꼼꼼히 생각해볼 수 있을 것 같다.&lt;/p&gt;

&lt;p&gt;기억에 남는 세션은 &lt;a href=&quot;#article10&quot;&gt;Circuit&lt;/a&gt;이였다.
서킷 클라이언트들의 P2P 네트워크와 마스터-스케쥴러-잡의 역할 등이 기존 내가 생각하던 시스템 아키텍쳐와는 달라 정말 신선했다!
고랭이 항상 관심은 있지만 차일피일 미뤄오고 있었는데, 서킷 써보기 위해 고랭을 공부해볼까 한다.
아직 공개된 demo 에 대한 문서화가 완료되지 않았다고 하는데, 얼른 보고싶다!&lt;/p&gt;

&lt;p&gt;발표 중 인상깊었던 경험 공유는 &lt;a href=&quot;#article2&quot;&gt;네이버 효과툰 구현 발표&lt;/a&gt;에서 임대현님 이였다.
2011년 데뷰 참석 때 감명받으시고 저 자리에 서보고 싶다 라고 꿈꾸셨는데 2015년 드디어 그 자리에 섰다는 이야기였다.
개인적으로는 &lt;a href=&quot;http://devon.daum.net/2012/&quot; target=&quot;_blank&quot;&gt;2012년 DevOn&lt;/a&gt;을 보며 아 저 회사 참 좋다. 나도 저 멋진 개발자들과 함께 일해보고 싶다! 라고 생각했는데 정말 입사하여 &lt;a href=&quot;http://devon.daum.net/2013/#!/&quot; target=&quot;_blank&quot;&gt;2013년 DevOn&lt;/a&gt;때 자원봉사활동으로 참가했었다 ㅎㅎ
완전히 같지는 않지만 비슷한(?) 감회를 느껴봐서 그런지 더 와닿았다. 언젠간 나도 저런 자리에 서 볼 수 있지 않을까?ㅎㅎ 과연ㅋㅋ&lt;/p&gt;

&lt;p&gt;짧았던 이틀동안 많은 경험을 공유받았고 자극도 많이 받았다! 좋은 컨퍼런스 참관할 수 있게 도움 준 주변 많은 분들께 감사드리며 글을 마치겠다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Dozer Custom-Converter 사용법</title>
   <link href="https://jiyeonseo.github.io/2015/09/06/Spring-Boot-Dozer-Sample/"/>
   <updated>2015-09-06T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/09/06/Spring-Boot-Dozer-Sample</id>
   <content type="html">&lt;p&gt;최근 DTO(Data Transfer Object) 를 적용하면서 Dozer라는 자바 라이브러리를 알게되었다. ( DTO를 혹시 모른다면 &lt;a href=&quot;http://www.slipp.net/wiki/pages/viewpage.action?pageId=2031636&quot;&gt;이 글&lt;/a&gt; &lt;a href=&quot;#article1&quot;&gt;[1]&lt;/a&gt;을 추천합니다)&lt;/p&gt;

&lt;h3 id=&quot;dozer란&quot;&gt;Dozer란?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;http://www.bloomberg.com/ss/08/07/0717_idea_winners/image/s_d51dozer.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dozer.sourceforge.net/&quot;&gt;http://dozer.sourceforge.net/&lt;/a&gt;
우리가 흔히 불도저로 알고 있는 그 도저다. ( 그냥 밀어버린다는 건가? )&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dozer is a Java Bean to Java Bean mapper that recursively copies data from one object to another.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;쉽게 말해, &lt;strong&gt;자바 빈을 다른 자바 빈에 매핑을 시켜주는 라이브러리이다.&lt;strong&gt; Hibernate Object를 DTO로 매핑 시켜야 할 때, 편리하게 사용할 수 있다.&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;문법도 간단해서 금방 적용시키기 쉽다.
우선 pom.xml 혹은 gradle.build 에 추가해주고&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;net.sf.dozer&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;dozer&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;5.4.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;compile(&quot;net.sf.dozer:dozer:5.4.0&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;다음과 같이 매핑시켜 줄 수 있다.&lt;a href=&quot;#article3&quot;&gt;[3]&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Mapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DozerBeanMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DestinationObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sourceObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DestinationObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://terasolunaorg.github.io/guideline/5.0.x/en/_images/dozer-functionality-overview.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(본 글은 Custom-Converter를 설명하고자 하기 때문에 자세한 내용은 생략!)&lt;/p&gt;

&lt;p&gt;이렇게 쉬운 문법이다보니 남용하고 있는데… 어김없이 문제가 타나났다.&lt;/p&gt;

&lt;h3 id=&quot;문제발생&quot;&gt;문제발생&lt;/h3&gt;
&lt;p&gt;내가 하고 있는 프로젝트에서는 joda-time 을 사용하고 있는데 mapping 후에는 계속 현재의 시간으로 바뀌는 문제가 있었다.
스택오버플로우 검색 결과&lt;a href=&quot;#article2&quot;&gt;[2]&lt;/a&gt; Dozer 내부에서 DateTime를 new DateTime() 으로 새로 생성하기때문에, 기존 데이터를 덮어씌워버리는 문제가 있다.&lt;/p&gt;

&lt;p&gt;이를 해결하기위해 Custom Converter를 설정해보겠다.&lt;a href=&quot;#article4&quot;&gt;[4]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;본 글에서는 Spring boot + maven을 사용해본다.&lt;/p&gt;

&lt;h3 id=&quot;dozer-custom-converter를-설정&quot;&gt;Dozer Custom Converter를 설정&lt;/h3&gt;
&lt;p&gt;1.pom.xml 에 dozer와  joda-time 추가&lt;/p&gt;

&lt;p&gt;pom.xml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;net.sf.dozer&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;dozer&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;5.4.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;joda-time&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;joda-time&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.8.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2.오브젝트(Source와 Destination) 추가&lt;/p&gt;

&lt;p&gt;EmployeeA.java&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.joda.time.DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EmployeeA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;EmployeeB.java&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.joda.time.DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EmployeeB&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;birthday&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;3.dozerConfig 추가&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;dozerConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;org.dozer.Mapper&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DozerBeanMapper&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dozerBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mappingFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;dozer-configration-mapping.xml&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;DozerBeanMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dozerBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DozerBeanMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dozerBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setMappingFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mappingFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dozerBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;4.dozer-configration-mapping.xml&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;mappings&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://dozer.sourceforge.net&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://dozer.sourceforge.net
          http://dozer.sourceforge.net/schema/beanmapping.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;custom-converters&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;converter&lt;/span&gt;
                    &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo.DateTimeCustomConverter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;class-a&amp;gt;&lt;/span&gt;org.joda.time.DateTime&lt;span class=&quot;nt&quot;&gt;&amp;lt;/class-a&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;class-b&amp;gt;&lt;/span&gt;org.joda.time.DateTime&lt;span class=&quot;nt&quot;&gt;&amp;lt;/class-b&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/converter&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/custom-converters&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mappings&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;5.적용!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DozerBeanMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dozerBeanMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DozerBeanMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmployeeB&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EmployeeA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employeeA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmployeeA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;employeeA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBirthday&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2012-08-10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//        EmployeeB employee = mapper.map(employeeA, EmployeeB.class); // (1) 기본 DozerBeanMapper&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;EmployeeB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dozerBeanMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;employeeA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmployeeB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (2) Custom-Converter가 적용된 DozerBeanMapper&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;localhost:8080/test&quot;&gt;localhost:8080/test&lt;/a&gt; 를 접속해 실제로 잘 적용 되었는지를 확인 할 수 있다.
(1) 주석을 풀고 다시 빌드해보면 기본 Dozer에서 joda time to joda time이 안되는 문제도 볼 수 있다.&lt;/p&gt;

&lt;p&gt;위 내용은 아래 github에서 소스를 다운 받아 볼 수 있습니다.
&lt;a href=&quot;https://github.com/jiyeonseo/springboot-dozer-sample&quot; target=&quot;_blank&quot;&gt;https://github.com/jiyeonseo/springboot-dozer-sample&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;참고-아티클&quot;&gt;참고 아티클&lt;/h4&gt;
&lt;div id=&quot;article1&quot;&gt;[1] &lt;a href=&quot;http://www.slipp.net/wiki/pages/viewpage.action?pageId=2031636&quot;&gt;최근에 느낀 DTO와 관련한 이야기&lt;/a&gt;&lt;/div&gt;
&lt;div id=&quot;article2&quot;&gt;[2]&lt;a href=&quot;http://stackoverflow.com/questions/12013833/dozer-mapping-jodatime-property-not-working-as-expected&quot;&gt; Dozer mapping JodaTime property not working as expected&lt;/a&gt;&lt;div&gt;
&lt;div id=&quot;article3&quot;&gt;[3] &lt;a href=&quot;http://dozer.sourceforge.net/documentation/gettingstarted.html&quot;&gt;Getting Started&lt;/a&gt;&lt;/div&gt;
&lt;div id=&quot;article4&quot;&gt;[4] &lt;a href=&quot;http://terasolunaorg.github.io/guideline/5.0.x/en/ArchitectureInDetail/Utilities/Dozer.html#how-to-extend&quot;&gt;Creating custom convertor&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>[번역]Flux 패턴을 이용한 간단한 React 어플리케이션 만들어보기</title>
   <link href="https://jiyeonseo.github.io/2015/08/30/Building-A-Simple-React-Application-Using-The-Flux-Pattern/"/>
   <updated>2015-08-30T00:00:00+00:00</updated>
   <id>https://jiyeonseo.github.io/2015/08/30/Building-A-Simple-React-Application-Using-The-Flux-Pattern</id>
   <content type="html">&lt;p&gt;공부하기 위해 막 번역한 문서입니다. 매끄럽지 못한 번역 양해 부탁드리며, 오역이나 다른 의견이 있으시다면 편히 댓글 달아주세요~&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tonyspiro.com/building-a-simple-react-application-using-the-flux-pattern/&quot;&gt;Tony Spiro의 Building A Simple React Application Using The Flux Pattern: A Step-By-Step Guide&lt;/a&gt;를 번역 글입니다.&lt;/p&gt;
&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;리액트는 인터렉티브한 자바스크립트 어플리케이션을 만들기 좋은 강력한 라이브러리다. 가장 강력한 한가지를 꼽으라면 단방향 데이터 흐름을 만들 수 있다는 것이다. 이는 다른 프레임 워크에서의 양방향 데이터 바인딩과 큰 다른점이다. 리액트를 이용한다면 모든 어플리케이션의 부분 부분들지 자기 자신 하나의(single) 소스에 의해 컨트롤 된다. 이 자신은 컴포넌트라 정의 되고 이것은 “props”를 통해 자신이 가진 컴포넌트에게 다시 전해진다.&lt;/p&gt;

&lt;p&gt;컴포넌트가 더 더해질 수록, 로직은 더 복잡해져가고 컴포넌트에서 컴포넌트로 이어지는 이벤트들을 따라가기 힘들어진다. 바로 이러한 점 때문에 Flux가 단계적으로 이벤트를 실행시키고 데이터를 바꾸는 outlet을 제공하는 이유이다.&lt;/p&gt;

&lt;p&gt;Flux의 그래프와 모델들을 설명하기에 앞서 쉬운 Flux 예제 어플리케션을 만들어보자. 여기서 우리는 ES6와 babel의 도움을 받아 볼 것이다. 만약 위의 것들과 친숙하지 않다면 &lt;a href=&quot;https://babeljs.io/&quot;&gt;이 글&lt;/a&gt;을 참고하길 바란다. 바벨은 es6와 jsx()를 동시에 사용 할 수 있게 해주며 ES5로 컴파일 시켜준다. 이를 통해 최신 그리고 오래된 브라우저 모두 호환될 수 있다. 그럼 이제 시작해보자.&lt;/p&gt;

&lt;h3 id=&quot;간략하게&quot;&gt;간략하게&lt;/h3&gt;

&lt;p&gt;이번 튜토리얼의 전체 소스는 &lt;a href=&quot;https://github.com/tonyspiro/easy-flux-example&quot;&gt;깃허브&lt;/a&gt;에서 다운받아 볼 수 있다. 만약 스텝 바이 스텝으로 알아보고 싶다면 계속 읽어 보도록 하자.&lt;/p&gt;

&lt;h3 id=&quot;시작하기&quot;&gt;시작하기&lt;/h3&gt;
&lt;p&gt;먼저, 실습해 볼 위치에서 아래의 명령어를 실행 시켜보자.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir easy-flux-example
cd easy-flux-example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 dependency들을 추가해 보자. 보통 package.json 파일과 함께 npm install 을 실행시키겠지만,
우리는 공부하고 있으니 어떤 것들이 추가되고 왜 필요한지 알아보기 위해 아래와 같이 명령어를 실행시켜보겠다:
(아래 명령어를 한번에 실행시켜야 한다)&lt;/p&gt;

&lt;pre&gt;
npm install react babelify browserify flux lodash vinyl-source-stream events gulp gulp-uglify gulp-rename run-sequence
&lt;/pre&gt;

&lt;p&gt;(혹은 다음과 같이 한번에 하나씩 도 해볼수 있다.)&lt;/p&gt;

&lt;pre&gt;
npm install react // 리액트(react)
npm install babelify // 바벨(babel) 컴파일러
npm install browserify // 노드 모듈 로더
npm install flux // 플럭스(flux)
npm install lodash // 멋진 JS 유틸
npm install vinyl-source-stream // 쉬운 걸프 이용을 위한
npm install events // 노드 이벤트 emmiiter
npm install gulp // 컴파일과 빌드를 할 테스크 러너
npm install gulp-uglify //
// bundle.js(2.7MB)를 bundle.min.js(251K)로 압축
npm install gulp-rename //  bundle.js를 bundle.min.js로 이름 변경
npm install run-sequence // gulp 프로세스를 순서대로 실행하도록
&lt;/pre&gt;

&lt;p&gt;이제 필요한 모든 것들을 준비했다. 이제 테스크 러너부터 만들어보자. 나는 Gulp를 선호하지만, 원한다면 &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;를 사용해도 좋다.(나를 포함해, &lt;a href=&quot;http://sixrevisions.com/web-development/grunt-vs-gulp/&quot;&gt;다수의 개발자들이 Gulp가 더 낫다고 주장하고 있지만&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;다음 코드를 더해보자 :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// gulpfile.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gulp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'browserify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;babelify&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'babelify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vinyl-source-stream'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uglify&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gulp-uglify'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gulp-rename'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runSequence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'run-sequence'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'build'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browserify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'app.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;extensions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.jsx'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;babelify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bundle.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'compress'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./dist/bundle.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uglify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;suffix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;runSequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'build'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'compress'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;파일을 한번 살펴보자. default build는 Browserify로 모든 모듈들을 묶고, Babel을 이용해 bundle.js로 변환시켜본다. 그리고 dist 폴더에 넣음으로써 끝난다. 정말 간단하고 명료하다.&lt;/p&gt;

&lt;p&gt;자, 이제 모든 준비를 마쳤다. 이제 (드디어!) 우리의 어플리케이션을 만들어보자.&lt;/p&gt;

&lt;p&gt;먼저, index.html을 만든다.&lt;/p&gt;

&lt;pre&gt;
vim index.html
&lt;/pre&gt;

&lt;p&gt;다음과 같이 index.html에 추가해 보자:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Easy Flux Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Easy Flux Example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;app-root&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dist/bundle.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;프론트앤드를 위한 것은 이게 전부다. 모든 다른 것들은 React와 Flux로 제어된다.&lt;/p&gt;

&lt;p&gt;이제 메인 app 파일로 어플리케이션 만들기를 시작하자.&lt;/p&gt;

&lt;pre&gt;
vim app.js
&lt;/pre&gt;

&lt;p&gt;아래 코드를  app.js에 더해보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// app.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./components/AppRoot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 이후에 이 파일을 만들 것이다.&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'app-root'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ES6 문법은 바벨(Babel)을 통해 ES5와 호환될 수 있음을 명심하자. 노드 모듈 importing 역시 Browserify에 의해 제어 된다.&lt;/p&gt;

&lt;p&gt;다음으로는 AppRoot 컴포넌트를 만들어보자 .&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir components
cd components
vim AppRoot.jsx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파일에 다음과 같이 입력해보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// AppRoot.jsx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 후에 이 곳에 list를 넣을 것이다.&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemHtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/li&amp;gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemHtml&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이제 돌아가 모든 것들이 잘 돌아가는지 확인해 보자.&lt;/p&gt;

&lt;pre&gt;
cd ../
&lt;/pre&gt;

&lt;p&gt;gulp 명령어를 실행시켜 ES6와 JSX를 ES5로 변환하고(Bebelify), 모든 파일을 bundle.js로 로드시키자(Browserify). 만약 처음 gulp를 실행 시키는 것이라면, 먼저 CLI를 이용해 gulp를 글로벌로 설치하자.&lt;/p&gt;

&lt;pre&gt;
sudo npm install gulp -g
&lt;/pre&gt;

&lt;p&gt;이제 빌드해보자.&lt;/p&gt;

&lt;pre&gt;
gulp
&lt;/pre&gt;
&lt;p&gt;지금까지 우리가 한 것들을 체크해보자. 그저 쉽게 브라우저에서 index.html을 볼 수 있다. 하지만 localhost에서 보는게 더 좋을 것 같다. 만약 http-server 가 설치되어 있지 않다면, 아래와 같이 실행시켜보자.&lt;/p&gt;

&lt;pre&gt;
sudo npm install http-server -g
http-server
&lt;/pre&gt;
&lt;p&gt;자, 이제  &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; 으로 가보자. React 어플리케이션이 잘 실행 되었음을 알 수 있는 메세지를 볼 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;React가 잘 작동됨을 확인했다. 이제 Flux를 이용해 좀 더 인터랙티브한 것들을 더해보자.&lt;/p&gt;

&lt;h3 id=&quot;flux-적용하기&quot;&gt;Flux 적용하기&lt;/h3&gt;

&lt;p&gt;Flux 아키텍쳐에서 주요 부분은 컴포넌트(Components), 스토어(Store), 그리고 디스패쳐(Dispatcher)이다. 우리는 이미 하나의 컴포넌트가 있으니, 이제 스토어를 만들어보자. 스토어는 다음 3가지 역할을 할 것이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;어플리케이션의 data를 초기화&lt;/li&gt;
  &lt;li&gt;어플리케이션 실행 과정에 필요한 함수를 저장&lt;/li&gt;
  &lt;li&gt;어플리케이션 re-render를 위한 event들을 등록(emit)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;스토어store로-부터-데이터-읽기&quot;&gt;스토어(Store)로 부터 데이터 읽기&lt;/h3&gt;

&lt;p&gt;스토어를 만들기 위해 다음과 같은 명령어를 실행 시켜 보자:&lt;/p&gt;

&lt;pre&gt;
mkdir stores
cd stores
vim ListStore.js
&lt;/pre&gt;
&lt;p&gt;ListStore.js에 다음과 같이 추가해 보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ListStore.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'events'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lodash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 가짜 기본 데이터&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Item 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Item 2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;getItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이 코드에서 우리는 노드의 EventEmmiter 를 추가하였다. 이를 통해 스토어에 컴포넌트의 UI 렌더링을 트리거 시킬 수 있는  이벤트를 등록 할 수 있다. Lodash는 EventEmmiter을 ListStore 객체에 바인딩 되도록 돕는다.(다른 메소드를 사용할 수도 있다) 그리고 보여줄 가짜 기본 데이터도 생성하였다. &lt;code class=&quot;highlighter-rouge&quot;&gt;getItems&lt;/code&gt; 함수는 스토어의 items를 가져올 수 있다.&lt;/p&gt;

&lt;p&gt;이제 AppRoot 컴포넌트에 ListStore를 추가하여 기본 스토어 데이터(default Store data)를 뿌려줄 수 있도록 해보자. 아래의 명령어를 실행하자:&lt;/p&gt;

&lt;pre&gt;
cd ../
cd components
vim AppRoot.jsx
&lt;/pre&gt;
&lt;p&gt;AppRoot.jsx 를 아래와 같이 바꿔보자:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// AppRoot.jsx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../stores/ListStore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Store로 부터 데이터를 가져오는 메소드&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getListState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getListState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemHtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/li&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemHtml&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;아래와 같이 명령어를 실행시켜 bundle.js를 다시 빌드하자:&lt;/p&gt;

&lt;pre&gt;
cd ../
gulp
&lt;/pre&gt;
&lt;p&gt;다음 명령어를 실행 시키자:&lt;/p&gt;

&lt;pre&gt;
http-server
&lt;/pre&gt;
&lt;p&gt;이제 &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;에서 달라진 모습을 확인해보자.&lt;/p&gt;

&lt;h3 id=&quot;store에서-아이템-추가삭제하기&quot;&gt;Store에서 아이템 추가/삭제하기&lt;/h3&gt;

&lt;p&gt;Store에서 새로운 아이템을 추가해보도록 하자. 먼저, 이 기능을 수행할 새로운 컴포넌트 부터 만들어 보겠다. 다음과 같은 명령어를 실행시켜보자.&lt;/p&gt;

&lt;pre&gt;
cd components
vim NewItemForm.jsx
&lt;/pre&gt;
&lt;p&gt;NewItemForm.jsx에 다음과 같은 코드를 더해 본다:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// NewItemForm.jsx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppDispatcher&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../dispatcher/AppDispatcher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewItemForm&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;createItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 페이지를 리로드하지 않겠다.&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// ID를 만든다&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

     &lt;span class=&quot;c1&quot;&gt;// 입력창으로 부터 값을 가져온다.&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item_title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findDOMNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 입력창의 값을 삭제한다.&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findDOMNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 여기에서 바로 마술이 일어난다.&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// state를 수정하기위해 이곳에서 action을 부를 필요가 없다.&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// AppDispatcher가 다 해줄 것이다.&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;AppDispatcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'add-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;new_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item_title&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSubmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;item_title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/form&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewItemForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이 부분에서 어떤 일이 있는지 짧게 설명해 보겠다. &lt;code class=&quot;highlighter-rouge&quot;&gt;createItem&lt;/code&gt; 함수가 연결된 텍스트 입력창(input box)이 나타난다. 폼 완료후 submit 버튼을 누르게 되면, &lt;code class=&quot;highlighter-rouge&quot;&gt;createItem&lt;/code&gt; 함수는 새로운 ID를 만들고, 입력창을 초기화 시키고, ‘add-item’ 액션을 통과하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;new_item&lt;/code&gt; 데이터는 AppDispatcher로 가게된다.&lt;/p&gt;

&lt;p&gt;이제, 데이터를 받을 AppDispatcher를 만들어보겠다. 다음 명령어를 실행해보자:&lt;/p&gt;
&lt;pre&gt;
cd ../
mkdir dispatcher
cd dispatcher
vim AppDispatcher.js
&lt;/pre&gt;
&lt;p&gt;그리고 다음과 같이 AppDispatcher.js를 작성해준다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Dispatcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'flux'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppDispatcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Dispatcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../stores/ListStore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// AppDispatcher에 콜백 등록AppDispatcher.register((payload) =&amp;gt; {&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;new_item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;new_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// add-item 액션 시 실행.    case 'add-item':&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;new_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

     &lt;span class=&quot;c1&quot;&gt;// remove-item 액션 시 실행.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'remove-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 액션이 모두 완료된 이후 change 이벤트를 emit&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emitChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppDispatcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이부분이 Flux를 이해하기 어려운 부분이다. 하지만 이 간단한 예제를 통해, AppDispatcher 호출 시, 어떤 액션이 실행되고 어떤 데이터가 전달되는지 결정하는 payload의 로직이 어떻게 실행되는지 훨씬 명료하게 이해할 수 있을거라 생각한다.
‘add-item’ 액션은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ListStore.addItem&lt;/code&gt;을 트리거 시키고, ‘remove-item’ 액션은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ListStore.removeItem&lt;/code&gt;를 트리거 시킨다. 아직 이 함수들이 우리 스토어에 작성되어 있지 않다. ListStore에 추가해 보자.&lt;/p&gt;

&lt;p&gt;다음 명령어를 실행해 보자:&lt;/p&gt;

&lt;pre&gt;
cd ../stores
vim ListStore.js
&lt;/pre&gt;
&lt;p&gt;다음과 같이 ListStore.js를 다시 작성해보자:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ListStore.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'events'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lodash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 기본 데이터&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Item 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Item 2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 모든 아이템 가져오기&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;getItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 아이템 더하기&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;new_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;new_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 아이템 삭제하기&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;removeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// change 이벤트 emit&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;emitChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'change'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// change listener 등록&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;addChangeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'change'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// change listener 삭제&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;removeChangeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'change'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;우리가 추가한 &lt;code class=&quot;highlighter-rouge&quot;&gt;addItem&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;deleteItem&lt;/code&gt; 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.items&lt;/code&gt;에서 아이템이 추가하거나 삭제한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;emitChange&lt;/code&gt;는 AppRoot 컴포넌트의 &lt;code class=&quot;highlighter-rouge&quot;&gt;_onChange&lt;/code&gt;를 실행 시켜 ListStore에서 새로운 state를 받아 다시 렌더링하도록 한다.&lt;/p&gt;

&lt;p&gt;AppRoot 컴포넌트에 ListStore의 새로운 이벤트를 트리거를 받을 수(listen) 있도록 수정해보겠다.&lt;/p&gt;

&lt;p&gt;다음 명령어를 실행 시켜 보자:&lt;/p&gt;

&lt;pre&gt;
cd ../components
vim AppRoot.jsx
&lt;/pre&gt;

&lt;p&gt;다음과 같이 AppRoot 를 수정해 보자:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// AppRoot.jsx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'react'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../stores/ListStore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppDispatcher&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../dispatcher/AppDispatcher'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sub components&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewItemForm&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./NewItemForm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Store로 부터 state를 받아옴.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getListState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Store에서 바꾼 값을 토대로 setState를 해준다.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getListState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getListState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 스토어(store)에 change listener를 더한다.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addChangeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 스로어(store)로부터 change listener를 삭제한다.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChangeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_onChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;removeItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;AppDispatcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'remove-item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ListStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemHtml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/li&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemHtml&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewItemForm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AppRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;새로 추가된 &lt;code class=&quot;highlighter-rouge&quot;&gt;_onChange&lt;/code&gt; 를 통해 Flux app에서 state가 바뀔 때 마다 불려질 것이다. 또 removeItem 함수에서는 AppDispatcher에 등록된 &lt;code class=&quot;highlighter-rouge&quot;&gt;remove-item&lt;/code&gt; 액션을 부를 것 이다.&lt;/p&gt;

&lt;p&gt;자, 이제 우리의 예상대로 실행되는지 확인해보자. 아래의 명령어를 통해 bundle.js를 다시 빌드해보도록 하겠다.&lt;/p&gt;

&lt;pre&gt;
cd ../
gulp
&lt;/pre&gt;

&lt;p&gt;gulp가 완료되면 실행 시켜보자:&lt;/p&gt;
&lt;pre&gt;
http-server
&lt;/pre&gt;
&lt;p&gt;이제 &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt; 에서 아이템이 추가/삭제가 되는지 확인해 볼 수 있다.&lt;/p&gt;

&lt;p&gt;이 튜토리얼을 통해 React와 Flux의 강력한 장점을 이해하는데 도움이 되었기를 바란다. 전체 소스를 원한다면 &lt;a href=&quot;https://github.com/tonyspiro/easy-flux-example&quot;&gt;이 링크&lt;/a&gt;를 통해 Flux 예제 어플리케이션을 다운 받아 볼 수 있다.&lt;/p&gt;

&lt;p&gt;질문이나 코멘트, 의견이 있다면 아래 코멘트를 달아주거나 &lt;a href=&quot;https://twitter.com/tonyspiro&quot;&gt;트위터&lt;/a&gt;를 통해 이야기 해주길 바란다.&lt;/p&gt;

&lt;p&gt;– Tony Spiro&lt;/p&gt;
</content>
 </entry>
 

</feed>
