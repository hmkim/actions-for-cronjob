<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-7756251120285753281</id><updated>2019-04-29T18:57:24.764-07:00</updated><category term="java"/><category term="docker"/><category term="aws"/><category term="design pattern"/><category term="rabbitmq"/><category term="개발환경"/><category term="기타"/><category term="annotation"/><category term="httpRequest"/><category term="javascript"/><category term="logging"/><category term="mybatis"/><category term="mysql"/><category term="oauth"/><category term="rest api"/><category term="spring"/><category term="spring security"/><category term="클라우드"/><title type='text'>나도 한번 해보자!! 류재영 </title><subtitle type='html'>새롭게 시작하는 IT 인생</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default?start-index=26&amp;max-results=25'/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>53</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-9147948458740410064</id><published>2017-08-02T00:09:00.001-07:00</published><updated>2017-08-02T00:09:17.788-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="java"/><category scheme="http://www.blogger.com/atom/ns#" term="spring security"/><title type='text'>외부 인증 정보를 기반으로 Authentication 처리 </title><content type='html'>자제 로그인처리가 아닌 외부연동을 통한 로그인 선처리가 필요한 경우가 있다.&lt;br /&gt;&lt;br /&gt;spring security를 사용하여 인증 처리를 하던 프로젝트의 경우 어떤 부분을 건들여야 할지 애매모호한 부분이 있다.&lt;br /&gt;&lt;br /&gt;해당 기능 처리를 위해서 본인은 filter를 이용하여 BasicAuthenticationFilter가 실행되기 전에 전처리로 해당 세션에 authentication 정보를 주입하는 방식으로 처리를 하였다.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;선처리 filter 코드 일부&lt;br /&gt;&lt;br /&gt;1.해당 context에 인증 정보가 있는지 체크 (현재 인증된 정보가 있으면 스킵)&lt;br /&gt;2.인증 정보를 연동 및 습득&lt;br /&gt;3.해당 정보 기반으로 현재 context 인증 정보를 입력(인증은 security의 Authentication interface &amp;nbsp;기반으로 필요한 구현체로 선택해서 결정)&lt;br /&gt;&lt;br /&gt;&amp;nbsp;if(!SecurityContextHolder.getContext().getAuthentication().isAuthenticated()){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Map&amp;lt;String,Object&amp;gt; loginInfo = (Map&amp;lt;String,Object&amp;gt;)request.getSession().getAttribute(&quot;loginInfo&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(loginInfo !=null){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; LoginOperator loginOperator = loginService.searchLoginOperator((String)loginInfo.get(&quot;oprtrId&quot;));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean enabled = true;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean accountNonExpired = true;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean credentialsNonExpired = true;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; boolean accountNonLocked = true; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Collection&amp;lt;? extends GrantedAuthority&amp;gt; authorities = getAuthorities();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(loginOperator !=null){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Authentication authentication = new UsernamePasswordAuthenticationToken(new LoginUser(&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String.valueOf(loginOperator.getLoginId()),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; loginOperator.getLoginPassword(),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; enabled,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; accountNonExpired,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; credentialsNonExpired,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; accountNonLocked,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; getAuthorities(),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new ArrayList&amp;lt;String&amp;gt;(),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; loginOperator.getOperatorNumber(),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; loginOperator.getLoginId(),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; loginOperator.getOperatorName()&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ), &amp;nbsp;loginOperator.getLoginPassword(), authorities);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SecurityContextHolder.getContext().setAuthentication(authentication);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/9147948458740410064/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://longbe00.blogspot.com/2017/08/authentication.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/9147948458740410064'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/9147948458740410064'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/2017/08/authentication.html' title='외부 인증 정보를 기반으로 Authentication 처리 '/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-20848958859321129</id><published>2017-08-01T02:28:00.000-07:00</published><updated>2017-08-16T02:14:49.970-07:00</updated><title type='text'>Consul에 대해서 </title><content type='html'>&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Consul에 대해서 대략적으로 설명하고자 한다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;HashiCorp에서 만든 OpenSource로 기존의 Zookeeper의 역활을 하는 Application으로 보면 된다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;아래는 해당 consul 홈페이지에 기제된 내용으로 기본적으로 4가지으로 항목으로 구분하여 설명하고 있다.&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Service Discovery/Failure Detection/Multi Datacenter/KV Storage&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;Service Discovery&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;DNS 또는 HTTP 인터페이스를 통해 서비스를 스스로 등록하고 다른 서비스를 발견 할 수 있도록합니다. SaaS(&lt;span style=&quot;background-color: white; color: #222222; font-family: &amp;quot;apple sd gothic neo&amp;quot; , &amp;quot;arial&amp;quot; , sans-serif; font-size: 16px;&quot;&gt;Software as a Service) 제공되는 외부 서비스에 또한 등록할 수 있다&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;Failure Detection&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;각 노드에 대해서 health check를 통하여 서비스 정상 여부를 체크하고 Service Discovery를 하거나 서비스가 가능한 노드로 routing을 제공한다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;Multi Datacenter&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;여러개의 Datacenter를 구축하고 Datacenter간 WAN GOSSIP 프로토콜을 이용하여 정보를 조회 할 수 있도록 기능 제공한다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;KV Storage&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both;&quot;&gt;Key/Value를 저장할 수 있는 저장소를 제공하여 서비스 별 Config 정보나 특정 데이타를 저장하여 instance간 config 정보 수정이나 데이타 공유를 할 수 있도록 지원한다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-2-ZwKgDRPG8/WYAgWxnqkbI/AAAAAAAAAMc/c3YTMAoZUUsHJukwg_KGuucNY6JLQ6pwQCLcBGAs/s1600/2017-08-01%2B15%253B31%253B37.PNG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;487&quot; data-original-width=&quot;1207&quot; height=&quot;258&quot; src=&quot;https://1.bp.blogspot.com/-2-ZwKgDRPG8/WYAgWxnqkbI/AAAAAAAAAMc/c3YTMAoZUUsHJukwg_KGuucNY6JLQ6pwQCLcBGAs/s640/2017-08-01%2B15%253B31%253B37.PNG&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;아래의 이미지는 Stackshare에서 consul vs Zookeeper vs Eureka를 비교한 화면이다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;선호도나 사용 횟수면에서 Consul이 우월 하다는 것이 보여집니다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;저도 stackshare의 데이타를 신용하여 해당 Consul을 이용하여 Monitoring 시스템을 구현하는 것으로 결정하였습니다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-IEwgjO58xfI/WYAgA17LAtI/AAAAAAAAAMY/gcxATFEEkaYOEGV2EzQ78G9Miyhv9snwwCLcBGAs/s1600/2017-08-01%2B15%253B30%253B04.PNG&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;892&quot; data-original-width=&quot;860&quot; height=&quot;640&quot; src=&quot;https://3.bp.blogspot.com/-IEwgjO58xfI/WYAgA17LAtI/AAAAAAAAAMY/gcxATFEEkaYOEGV2EzQ78G9Miyhv9snwwCLcBGAs/s640/2017-08-01%2B15%253B30%253B04.PNG&quot; width=&quot;616&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;공식 사이트&lt;span lang=&quot;EN-US&quot;&gt; :&amp;nbsp;&lt;a href=&quot;https://www.consul.io/&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://www.consul.io&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;설치 가이드&lt;span lang=&quot;EN-US&quot;&gt; :&amp;nbsp;&lt;a href=&quot;https://www.consul.io/intro/getting-started/install.html&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://www.consul.io/intro/getting-started/install.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;다운로드&lt;span lang=&quot;EN-US&quot;&gt; :&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;u&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #0000ee; font-family: 돋움;&quot;&gt;&lt;a href=&quot;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&lt;/a&gt;&lt;/span&gt;&lt;/u&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://4.bp.blogspot.com/-R35nZ9cMdYA/WZPMZRkQhfI/AAAAAAAAANM/_kIZ_ESW5wsZFQBW2PTSEHQtC6xWr_l4gCEwYBhgL/s1600/consul-arch-420ce04a.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;1600&quot; data-original-width=&quot;1543&quot; height=&quot;640&quot; src=&quot;https://4.bp.blogspot.com/-R35nZ9cMdYA/WZPMZRkQhfI/AAAAAAAAANM/_kIZ_ESW5wsZFQBW2PTSEHQtC6xWr_l4gCEwYBhgL/s640/consul-arch-420ce04a.png&quot; width=&quot;616&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;span style=&quot;background-color: white; color: #555555; font-family: klavika-web, Helvetica, sans-serif; font-size: 36px;&quot;&gt;Consul Architecture&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;consul 공식 사이트에 등록된 Architecture 이미지이다.&lt;br /&gt;&lt;br /&gt;Consul의 Check 기능을 이용하여 해당 서버의 Resource 현황과 health 체크를 할 수 있도록 Consul 서버 및 클라이언트를 설치하고 설정을 진행 하도록 하겠습니다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;Consul Agent&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서버 노드 설치&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;- Master 서버에 &lt;span lang=&quot;EN-US&quot;&gt;consul&lt;/span&gt;과&lt;span lang=&quot;EN-US&quot;&gt;web-ui&lt;/span&gt;를 같이 설치&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;wget &amp;nbsp;&lt;a href=&quot;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&lt;/a&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;압축 해제&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;/data/consul&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;/data/consul-ui &amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 10pt;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: #666666; font-size: 10pt;&quot;&gt;디렉토리 이름 주의&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;두개의 디렉토리를 생성 후&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666;&quot;&gt; web_ui&lt;/span&gt;&lt;span style=&quot;color: #666666;&quot;&gt;관련 파일을 다운받아 압축을 푼다&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666;&quot;&gt;.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; cd &amp;nbsp;/data/consul-ui&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;&amp;nbsp;wget &amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;a href=&quot;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;font-size: 12.0pt;&quot;&gt;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_web_ui.zip&lt;/span&gt;&lt;/a&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; unzip &amp;nbsp;consul_0.8.5_web_ui.zip&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&amp;nbsp; consul keygen&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;해시값을 생성성&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;이 해시값으로 모든 서버의 환경설정&lt;span lang=&quot;EN-US&quot;&gt;(encrypt)&amp;nbsp;&lt;/span&gt;값을 설정해야하니 꼭 저장해둘것&lt;span lang=&quot;EN-US&quot;&gt;!&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; vim &amp;nbsp;/etc/consul.d/server/config.json&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;br /&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;config 파일 생성&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;config.json &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;내용은 아래와 같이 설정한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;bootstrap&quot;: true,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;server&quot;: true,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;datacenter&quot;: &quot;test&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;ui_dir&quot;: &quot;/data/consul-ui&quot;, &amp;nbsp;// &amp;lt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;디렉토리&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;경로&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;확인&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;data_dir&quot;: &quot;/data/consul&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;encrypt&quot;: &quot;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;위에서얻은해시값&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;addresses&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;http&quot;: &quot;외부망&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;IP&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; },&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: inherit , serif;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666; font-family: inherit , serif;&quot;&gt;&amp;nbsp; &quot;bind_addr&quot;: &quot;내부망 IP&quot;,&lt;/span&gt;&lt;br /&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;advertise_addr&quot;: &quot;외부망 IP&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;consul 서버 시작&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;nohup consul agent --server -config-dir=/etc/consul.d/server -bind=&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서버&lt;span lang=&quot;EN-US&quot;&gt;IP &amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666;&quot;&gt;config-dir 옵션으로 config 파일 위치 설정&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #666666;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;위와같이 설정하고 위의 명령어로 실행한뒤에&lt;span lang=&quot;EN-US&quot;&gt;localhost:8500&lt;/span&gt;으로 접속하면&lt;span lang=&quot;EN-US&quot;&gt; 404&lt;/span&gt;에러가 남&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;이때&lt;span lang=&quot;EN-US&quot;&gt; sudo reboot&lt;/span&gt;를하면 위에서 만들어둔&lt;span lang=&quot;EN-US&quot;&gt; /data/consul-ui &lt;/span&gt;디렉토리가 삭제되어 있는데&lt;span lang=&quot;EN-US&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;디렉토리를 다시 만들고&lt;span lang=&quot;EN-US&quot;&gt;1&lt;/span&gt;번 명령어로 실행하면 정상 작동함&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;Consul Agent &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;설치&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;방법&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;wget &amp;nbsp;&lt;a href=&quot;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://releases.hashicorp.com/consul/0.8.5/consul_0.8.5_linux_amd64.zip&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;압축&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;해제한&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; consul&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;을&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;아래의&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;두&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;경로로&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;복사&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;이동&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;시킨다&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;.&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; cp &amp;nbsp;./consul &amp;nbsp; /usr/local/bin&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; mv &amp;nbsp;./consul &amp;nbsp;/usr/bin&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;설치&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;확인을&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;위해&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;consul version &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;명령&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;실행&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;아래의&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;디렉토리를&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;만든다&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;.&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; /data/consul&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;아래의&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;경로에&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; config.json &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;파일을&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;만든다&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; vim &amp;nbsp;/etc/consul.d/agent/config.json&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp;config.json &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;내용은&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;아래와&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;같이&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;설정한다&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;.&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;server&quot;: false,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;datacenter&quot;: &quot;test&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;data_dir&quot;: &quot;/data/consul&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;encrypt&quot;: &quot;7mASsjRU1X0ORmQyymo9Hw==&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;start_join&quot;: [&quot;192.168.1.155&quot;] &amp;nbsp; // &amp;lt;- Array&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;형식으로&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움; mso-ascii-font-family: inherit; mso-hansi-font-family: inherit;&quot;&gt;입력해야됨&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: &amp;quot;inherit&amp;quot; , serif; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- Agent &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;실행&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; (1) consul agent &amp;nbsp;-config-dir=/etc/consul.d/agent&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; (2) nohup consul agent &amp;nbsp;-config-dir=/etc/consul.d/agent -bind=AgentIP &amp;amp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;정상적으로 실행되었다면 서버쪽 웹화면의&lt;span lang=&quot;EN-US&quot;&gt; [node]&lt;/span&gt;탭에&lt;span lang=&quot;EN-US&quot;&gt; Agent&lt;/span&gt;가 추가된다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# consul&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;을 서버&lt;span lang=&quot;EN-US&quot;&gt;(&lt;/span&gt;개발&lt;span lang=&quot;EN-US&quot;&gt;) &lt;/span&gt;모드로 실행하는 방법&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; consul &amp;nbsp;agent &amp;nbsp;-dev&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;터미널을 하나 떠 띄워서 아래와 같은 명령어를 치면&lt;span lang=&quot;EN-US&quot;&gt; Cluster Members&lt;/span&gt;를 볼 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; consul members &amp;nbsp;[-detailed]&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# consul&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;에서 사용하는 포트 번호&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; SERVER RPC : 8300/tcp&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Serf LAN : 8301/tcp&amp;amp;udp&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Serf WAN : 8302/tcp&amp;amp;udp&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; CLI RPC : 8400/tcp&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; HTTP API : 8500/tcp (UI&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;접속용&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; DNS Interface : 8600/tcp&amp;amp;udp&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;ufw &amp;nbsp;allow &amp;nbsp;8300/tcp&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;ufw &amp;nbsp;allow &amp;nbsp;8301/tcp&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;ufw &amp;nbsp;allow &amp;nbsp;8500/tcp&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;ufw &amp;nbsp;allow &amp;nbsp;8600/tcp&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# # &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스 정의&lt;span lang=&quot;EN-US&quot;&gt; (Defining a Service)&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스는&lt;span lang=&quot;EN-US&quot;&gt; json&lt;/span&gt;을 통해 정의하는 방법과&lt;span lang=&quot;EN-US&quot;&gt; HTTP API&lt;/span&gt;를 이용해 정의하는 두가지 방법이 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- /etc/consul.d/server &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;폴더를 만든다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;다음의 명령으로&lt;span lang=&quot;EN-US&quot;&gt; [80&lt;/span&gt;번 포트를 사용하고&lt;span lang=&quot;EN-US&quot;&gt;, rails&lt;/span&gt;라는 태그를 가진&lt;span lang=&quot;EN-US&quot;&gt; &quot;web&quot;&lt;/span&gt;이라는 서비스&lt;span lang=&quot;EN-US&quot;&gt;]&lt;/span&gt;를 만든다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; echo &#39;{&quot;service&quot;: {&quot;name&quot;: &quot;web&quot;, &quot;tags&quot;: [&quot;rails&quot;], &quot;port&quot;: 80}}&#39; | sudo tee /etc/consul.d/server/web.json&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스를 등록하기 위해 다음의 명령어로&lt;span lang=&quot;EN-US&quot;&gt;Consul&lt;/span&gt;을 재시작한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; consul agent -dev -config-dir=/etc/consul.d/server&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;&amp;nbsp;&quot;Synced service &#39;web&#39;&quot;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;라는 출력을 통해 웹 서비스를&lt;span lang=&quot;EN-US&quot;&gt; &quot;&lt;/span&gt;동기화&lt;span lang=&quot;EN-US&quot;&gt;&quot;&lt;/span&gt;한 것을 알 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;이는 에이전트가 위에서 만든&lt;span lang=&quot;EN-US&quot;&gt; json &lt;/span&gt;파일에서 서비스 정의를 로드했으며&lt;span lang=&quot;EN-US&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스 카탈로그에 성공적으로 등록했음을 의미한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;추가 서비스 역시 위와같은 방식으로 만들 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- agent&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;가 시작되고 서비스가 동기화되면&lt;span lang=&quot;EN-US&quot;&gt; DNS&lt;/span&gt;나&lt;span lang=&quot;EN-US&quot;&gt; HTTP API&lt;/span&gt;를 사용해 서비스를 쿼리할 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# DNS API&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;를 이용한 쿼리 방법&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- dig &amp;nbsp;@&lt;a href=&quot;http://127.0.0.1/&quot;&gt;127.0.0.1&lt;/a&gt; &amp;nbsp;-p 8600 web.service.consul&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- dig &amp;nbsp;@&lt;a href=&quot;http://127.0.0.1/&quot;&gt;127.0.0.1&lt;/a&gt; &amp;nbsp;-p 8600 web.service.consul &amp;nbsp;SRV&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- DNS API&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;를 이용해 태그로 필터링해서 서비스를 요청하는 방법&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; dig &amp;nbsp;@&lt;a href=&quot;http://127.0.0.1/&quot;&gt;127.0.0.1&lt;/a&gt; &amp;nbsp;-p 8600 rails.web.service.consul&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# HTTP API&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;를 이용한 쿼리 방법&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;- curl&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;a href=&quot;http://localhost:8500/v1/catalog/service/web&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;font-size: 12.0pt;&quot;&gt;http://localhost:8500/v1/catalog/service/web&lt;/span&gt;&lt;/a&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;주어진 서비스를 호스팅하는 모든 노드를 출력한다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;1&quot; class=&quot;MsoNormalTable&quot; style=&quot;background: #B7BBB5; height: 40px; mso-cellspacing: .7pt; mso-yfti-tbllook: 1184;&quot;&gt; &lt;tbody&gt;&lt;tr&gt;  &lt;td style=&quot;background: white; padding: .75pt .75pt .75pt .75pt;&quot;&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;[&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ID&quot;: &quot;15e1a433-8f0a-2996-cfdd-ed788d9c6a83&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Node&quot;: &quot;ef06bc916151&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Address&quot;: &quot;127.0.0.1&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Datacenter&quot;:   &quot;dc1&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;TaggedAddresses&quot;:   {&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;lan&quot;:   &quot;127.0.0.1&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;wan&quot;:   &quot;127.0.0.1&quot;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; },&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;NodeMeta&quot;:   {},&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ServiceID&quot;:   &quot;web&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ServiceName&quot;:   &quot;web&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ServiceTags&quot;:   [&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;rails&quot;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ],&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ServiceAddress&quot;:   &quot;&quot;,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ServicePort&quot;:   80,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ServiceEnableTagOverride&quot;:   false,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;CreateIndex&quot;:   6,&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ModifyIndex&quot;:   6&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;font-family: &amp;quot;inherit&amp;quot; , serif; mso-fareast-font-family: 돋움;&quot;&gt;]&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;- curl &#39;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;a href=&quot;http://localhost:8500/v1/health/service/web?passing&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;font-size: 12.0pt;&quot;&gt;http://localhost:8500/v1/health/service/web?passing&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&#39;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;노드 중에&lt;span lang=&quot;EN-US&quot;&gt;healthy&lt;/span&gt;한것만 출력&lt;span lang=&quot;EN-US&quot;&gt; (&lt;/span&gt;문제없이 작동하는것만 출력&lt;span lang=&quot;EN-US&quot;&gt;?) &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;----------------------------------------------------------------------------------&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# AWS&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;에서 설치하는 방법&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;a href=&quot;https://github.com/andrewpuch/consul_demo&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://github.com/andrewpuch/consul_demo&lt;/a&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;---------------------------------------------------------------------------------&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: red; font-size: 14.0pt;&quot;&gt;### Health HTTP Request ===================================&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;참고&lt;span lang=&quot;EN-US&quot;&gt; :&amp;nbsp;&lt;a href=&quot;https://www.consul.io/api/health.html&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://www.consul.io/api/health.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# List Checks for Node&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; node&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;별로 모든&lt;span lang=&quot;EN-US&quot;&gt;Check&lt;/span&gt;를 요청한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;예&lt;span lang=&quot;EN-US&quot;&gt;)&amp;nbsp;&lt;a href=&quot;http://192.168.1.155:8500/v1/health/&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;http://192.168.1.155:8500/v1/health/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: red; font-family: 돋움;&quot;&gt;node&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;/&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #ffaa00; font-family: 돋움;&quot;&gt;Client&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;Client&quot; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;노드의 모든&lt;span lang=&quot;EN-US&quot;&gt; Check&lt;/span&gt;를&lt;span lang=&quot;EN-US&quot;&gt; json &lt;/span&gt;형식으로 출력한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# List Checks for Service&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Service&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;별로 모든&lt;span lang=&quot;EN-US&quot;&gt;Check&lt;/span&gt;를 요청한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;예&lt;span lang=&quot;EN-US&quot;&gt;)&amp;nbsp;&lt;a href=&quot;http://192.168.1.155:8500/v1/health/&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;http://192.168.1.155:8500/v1/health/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: red; font-family: 돋움;&quot;&gt;checks&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;/&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #ffaa00; font-family: 돋움;&quot;&gt;consul&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# List Nodes for Service&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;지정한 서비스에 대한 결과 출력&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;예&lt;span lang=&quot;EN-US&quot;&gt;)&amp;nbsp;&lt;a href=&quot;http://192.168.1.155:8500/v1/health/&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;http://192.168.1.155:8500/v1/health/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: red; font-family: 돋움;&quot;&gt;service&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;/&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #ffaa00; font-family: 돋움;&quot;&gt;consul&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# List Checks in State&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;모든&lt;span lang=&quot;EN-US&quot;&gt; Server/Agent&lt;/span&gt;에 대해 상태&lt;span lang=&quot;EN-US&quot;&gt;(state)&lt;/span&gt;가&lt;span lang=&quot;EN-US&quot;&gt; passing&lt;/span&gt;인것을 출력&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;예&lt;span lang=&quot;EN-US&quot;&gt;)&amp;nbsp;&lt;a href=&quot;http://192.168.1.155:8500/v1/health/&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;http://192.168.1.155:8500/v1/health/&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: red; font-family: 돋움;&quot;&gt;state&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;/&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #ffaa00; font-family: 돋움;&quot;&gt;passing&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: red; font-size: 14.0pt;&quot;&gt;### SERVICE ==========================================&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;참고&lt;span lang=&quot;EN-US&quot;&gt; :&amp;nbsp;&lt;a href=&quot;https://www.consul.io/docs/agent/services.html&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://www.consul.io/docs/agent/services.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스는 아래와 같은&lt;span lang=&quot;EN-US&quot;&gt; json &lt;/span&gt;형식으로 정의할 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;agent &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;실행시&lt;span lang=&quot;EN-US&quot;&gt; -config-file&lt;/span&gt;의 옵션으로 지정하거나&lt;span lang=&quot;EN-US&quot;&gt; -config-dir &lt;/span&gt;명령줄 옵션으로&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스 파일의 경로를설정해서 읽어들일 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;HTTP API&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;를 사용해서 동적으로 등록 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;개별 서비스 설정 예제&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;service&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;redis&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;tags&quot;: [&quot;primary&quot;],&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;address&quot;: &quot;&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;port&quot;: 8000,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;enableTagOverride&quot;: false,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;checks&quot;: [&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/usr/local/bin/check_redis.py&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;... or ...&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{ &amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp;&quot;service&quot;:{ &amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;:&quot;web&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;tags&quot;:[ &quot;rails&quot; ],&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;port&quot;:80&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;멀티 서비스 설정 예제&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;services&quot;: [ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// services&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;처럼&lt;span lang=&quot;EN-US&quot;&gt; s&lt;/span&gt;가 붙고&lt;span lang=&quot;EN-US&quot;&gt;, Array&lt;/span&gt;형식&lt;span lang=&quot;EN-US&quot;&gt;([])&lt;/span&gt;이다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;red0&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;redis&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;tags&quot;: [&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;primary&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ],&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;address&quot;: &quot;&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;port&quot;: 6000,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;checks&quot;: [&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/bin/check_redis -p 6000&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;5s&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ttl&quot;: &quot;20s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;red1&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;redis&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;tags&quot;: [&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;delayed&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;secondary&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ],&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;address&quot;: &quot;&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;port&quot;: 7000,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;checks&quot;: [&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/bin/check_redis -p 7000&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;30s&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;ttl&quot;: &quot;60s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; ]&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;은 필수고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;이외의 값은 선택적으로 사용 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;는 지정하지 않을경우&lt;span lang=&quot;EN-US&quot;&gt; name&lt;/span&gt;값으로 설정되지만&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;노드마다 고유값을 가져야하기 때문에&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;가급적 고유한 이름으로 직접 지정해주는게 좋다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;tags&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;는 노드나 서비스에서 필터링 조건으로 사용된다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스마다&lt;span lang=&quot;EN-US&quot;&gt; IP&lt;/span&gt;와&lt;span lang=&quot;EN-US&quot;&gt; port&lt;/span&gt;번호를 지정할 수 있는데&lt;span lang=&quot;EN-US&quot;&gt;, address/port&lt;/span&gt;에서 지정해주면되지만&lt;span lang=&quot;EN-US&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;기본적으로&lt;span lang=&quot;EN-US&quot;&gt; agent&lt;/span&gt;의&lt;span lang=&quot;EN-US&quot;&gt; ip&lt;/span&gt;와&lt;span lang=&quot;EN-US&quot;&gt; port&lt;/span&gt;번호가 지정되기 때문에 별도로 지정할 필요는 없다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;check/checks&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;에 가능한 속성은&lt;span lang=&quot;EN-US&quot;&gt; script, HTTP, TCP, TTL&lt;/span&gt;이고&lt;span lang=&quot;EN-US&quot;&gt;, script, http, tcp &lt;/span&gt;속성이&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;사용될경우 꼭&lt;span lang=&quot;EN-US&quot;&gt; interval &lt;/span&gt;속성을 사용해 시간간격을 설정해줘야한다&lt;span lang=&quot;EN-US&quot;&gt;. (10s = 10&lt;/span&gt;초&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;ttl&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;은&lt;span lang=&quot;EN-US&quot;&gt; ttl&lt;/span&gt;만 제공하면된다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;check/checks &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;이름은&lt;span lang=&quot;EN-US&quot;&gt;service:&amp;lt;service-id&amp;gt; &lt;/span&gt;형식으로 자동 생성된다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;enableTagoverride&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;는 이 서비스의&lt;span lang=&quot;EN-US&quot;&gt; anti-entropy&lt;/span&gt;기능을 비활성화 시키기 위해 선택적으로 사용한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;CHECK 관련&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;참고&lt;span lang=&quot;EN-US&quot;&gt; :&amp;nbsp;&lt;a href=&quot;https://www.consul.io/docs/agent/checks.html&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://www.consul.io/docs/agent/checks.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;노드들에 대한 확인이 필요한 항목을 정의해서 주기적으로 체크를 진행할 수 있다.&amp;nbsp;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;서비스처럼&lt;span lang=&quot;EN-US&quot;&gt; json&lt;/span&gt;형식으로 설정하거나&lt;span lang=&quot;EN-US&quot;&gt; HTTP API&lt;/span&gt;를 이용해 등록할 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;체크는 크게&lt;span lang=&quot;EN-US&quot;&gt; 5&lt;/span&gt;가지 형식이 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;1)script + Interval&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;스크립트 파일을 읽어서&lt;span lang=&quot;EN-US&quot;&gt;Interval&lt;/span&gt;로 지정한 시간마다 실행시켜준다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;스크립트 파일 크기는 최대&lt;span lang=&quot;EN-US&quot;&gt; 4k&lt;/span&gt;이고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;그 이상은 잘린다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;스크립트 파일의 최대 실행 시간은 기본값이&lt;span lang=&quot;EN-US&quot;&gt; 30&lt;/span&gt;초이고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;별도의 속성값으로 증감이 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;check&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;mem-util&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;Memory utilization&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/usr/local/bin/check_mem.py&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;timeout&quot;: &quot;1s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;2)HTTP + Interval&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Interval&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;로 지정한 시간마다&lt;span lang=&quot;EN-US&quot;&gt; HTTP GET &lt;/span&gt;요청을한다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; HTTP &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;응답 코드가&lt;span lang=&quot;EN-US&quot;&gt;2XX&lt;/span&gt;일때는 통과로 처리되고&lt;span lang=&quot;EN-US&quot;&gt;, 429(&lt;/span&gt;너무 많은 요청&lt;span lang=&quot;EN-US&quot;&gt;)&lt;/span&gt;는 경고&lt;span lang=&quot;EN-US&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;그 외에는 모두 실패로 처리된다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; HTTP &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;요청시&lt;span lang=&quot;EN-US&quot;&gt;TIMEOUT&lt;/span&gt;은&lt;span lang=&quot;EN-US&quot;&gt; 10&lt;/span&gt;초이고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;별도의 속성값으로 증감이 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; HTTP &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;응답 코드는 최대&lt;span lang=&quot;EN-US&quot;&gt; 4K&lt;/span&gt;만 받고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;나머지는 잘린다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; SSL &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;검사시&lt;span lang=&quot;EN-US&quot;&gt; SSL&lt;/span&gt;인증서를 설치하고&lt;span lang=&quot;EN-US&quot;&gt;, tls_skip_verify : true&lt;/span&gt;로 설정한다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;check&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;api&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;HTTP API on port 5000&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;http&quot;: &quot;&lt;a href=&quot;https://localhost:5000/health&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;https://localhost:5000/health&lt;/a&gt;&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;tls_skip_verify&quot;: false,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;method&quot;: &quot;POST&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;header&quot;: {&quot;x-foo&quot;:[&quot;bar&quot;, &quot;baz&quot;]},&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;timeout&quot;: &quot;1s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;3)TCP + Interval&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Interval&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;로 지정한 시간마다 지정한&lt;span lang=&quot;EN-US&quot;&gt; IP/Port&lt;/span&gt;로 연결을 시도합니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;호스트 이름이 없을경우 기본값으로&lt;span lang=&quot;EN-US&quot;&gt; &quot;localhost&quot;&lt;/span&gt;가 설정됩니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;연결 시도는&lt;span lang=&quot;EN-US&quot;&gt; IPv4&lt;/span&gt;와&lt;span lang=&quot;EN-US&quot;&gt; IPv6(&lt;/span&gt;가능할경우&lt;span lang=&quot;EN-US&quot;&gt;) &lt;/span&gt;둘 다 수행되고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;하나라도 성공하면&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;성공을 리턴하고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;실패할 경우&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;응답 코드를 확인해야한다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;이 방식의&lt;span lang=&quot;EN-US&quot;&gt;timeout&lt;/span&gt;값은&lt;span lang=&quot;EN-US&quot;&gt; 10&lt;/span&gt;초이고&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;별도의 속성값으로 증감이 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;check&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;ssh&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;SSH TCP on port 22&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;tcp&quot;: &quot;localhost:22&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;timeout&quot;: &quot;1s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;4)TTL (Time to Live)&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Agent&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;의 상태를&lt;span lang=&quot;EN-US&quot;&gt;HTTP&lt;/span&gt;를 통해 주기적으로 갱신하면서 상태를 체크한다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;check&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;web-app&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;Web App Status&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;notes&quot;: &quot;Web app does a curl internally every 10 seconds&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;ttl&quot;: &quot;30s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;5)Docker + Interval&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;이 검사는&lt;span lang=&quot;EN-US&quot;&gt; Docker &lt;/span&gt;컨테이너 내에 패키지 된 외부 응용 프로그램을 호출하는&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;방법에 따라 달라집니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;애플리케이션은&lt;span lang=&quot;EN-US&quot;&gt;Docker Exec API&lt;/span&gt;를 통해 실행중인 컨테이너 내에서 트리거됩니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Consul &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;에이전트 사용자는&lt;span lang=&quot;EN-US&quot;&gt; Docker HTTP API &lt;/span&gt;또는&lt;span lang=&quot;EN-US&quot;&gt; Unix &lt;/span&gt;소켓에 액세스 할 수&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;있어야합니다&lt;span lang=&quot;EN-US&quot;&gt;. Consul&lt;/span&gt;은&lt;span lang=&quot;EN-US&quot;&gt; $ DOCKER_HOST&lt;/span&gt;를 사용하여&lt;span lang=&quot;EN-US&quot;&gt;Docker API &lt;/span&gt;끝점을 결정합니다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;응용 프로그램이 실행되고 컨테이너 내부에서 실행중인 서비스의 상태 검사를 수행&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;한 다음 적절한 종료 코드로 종료해야합니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;점검은 호출 간격과 쌍을 이루어야합니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;검사를 수행해야하는 쉘은 구성 가능하며 동일한 호스트에서 다른 쉘을 가진&lt;span lang=&quot;EN-US&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;컨테이너를 실행할 수 있습니다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; Docker&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;에 대한 응답 결과는 최대&lt;span lang=&quot;EN-US&quot;&gt; 4K&lt;/span&gt;이며&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;이보다 클 경우 잘립니다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&quot;check&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;mem-util&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;Memory utilization&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;docker_container_id&quot;: &quot;f972c95ebf0e&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;shell&quot;: &quot;/bin/bash&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/usr/local/bin/check_mem.py&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;# &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;체크 관련 주의사항&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- name&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;은 필수이며&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;다른 속성들은 선택적으로 필요한것만 사용 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- id &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;속성값이 없을경우&lt;span lang=&quot;EN-US&quot;&gt; name&lt;/span&gt;으로 자동 설정되지만&lt;span lang=&quot;EN-US&quot;&gt;, id &lt;/span&gt;충돌을 방지하기 위해 직접&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; id &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;속성값을 설정해주는게 좋다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- notes &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;속성값은 사용자를 위한 설명이다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- script, TCP, Docker, HTTP &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;속성을 사용할때&lt;span lang=&quot;EN-US&quot;&gt; interval &lt;/span&gt;속성값은 필수로 설정해줘야하고&lt;span lang=&quot;EN-US&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;시간 설정은&lt;span lang=&quot;EN-US&quot;&gt; 10&lt;/span&gt;진수를 이용해 아래와 같은 방식으로 설정 가능하다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;300ms&quot;, &quot;-1.5h&quot;, &quot;2h45m15s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- deregister_critical_service_after &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;속성값은 특정&lt;span lang=&quot;EN-US&quot;&gt; &quot;&lt;/span&gt;체크&lt;span lang=&quot;EN-US&quot;&gt;&quot;&lt;/span&gt;가 이 속성으로 지정된&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;시간을 초과할 경우 자동으로 등록을 취소시키게된다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;기본값은&lt;span lang=&quot;EN-US&quot;&gt; 1&lt;/span&gt;분이지만&lt;span lang=&quot;EN-US&quot;&gt;, 30&lt;/span&gt;초마다 실행되기 때문에 최대&lt;span lang=&quot;EN-US&quot;&gt; 1&lt;/span&gt;분&lt;span lang=&quot;EN-US&quot;&gt;30&lt;/span&gt;정도의 텀이 생길 수 있다&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- &quot;&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;체크&lt;span lang=&quot;EN-US&quot;&gt;&quot;&lt;/span&gt;를 설정하기 위해&lt;span lang=&quot;EN-US&quot;&gt; -config-file &lt;/span&gt;옵션으로 설정하거나&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;에이전트 실행시&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; -config-dir&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;로 설정할 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;새로운&lt;span lang=&quot;EN-US&quot;&gt; &quot;&lt;/span&gt;체크&lt;span lang=&quot;EN-US&quot;&gt;&quot;&lt;/span&gt;가 등록되면 기본적으로&lt;span lang=&quot;EN-US&quot;&gt; &quot;critical&quot;&lt;/span&gt;로 설정되는데&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;이것은 서비스 풀이&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;정상이 되기전에 서비스풀에 등록되는것을 막기 위한것이다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;즉&lt;span lang=&quot;EN-US&quot;&gt;, &lt;/span&gt;경우에 따라&lt;span lang=&quot;EN-US&quot;&gt; &quot;&lt;/span&gt;체크&lt;span lang=&quot;EN-US&quot;&gt;&quot;&lt;/span&gt;의 초기&lt;span lang=&quot;EN-US&quot;&gt; status&lt;/span&gt;값을 직접 설정하는게 좋을 수 있다&lt;span lang=&quot;EN-US&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;check&quot;: {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;mem&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/bin/check_mem&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;status&quot;: &quot;passing&quot; &amp;nbsp; &amp;nbsp; // &amp;lt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;초기값 설정&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; }&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;멀티 체크&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;{&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &quot;checks&quot;: [ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// &amp;lt;- checks&lt;/span&gt;&lt;span style=&quot;color: #666666; font-family: 돋움;&quot;&gt;처럼&lt;span lang=&quot;EN-US&quot;&gt; s&lt;/span&gt;가 붙고&lt;span lang=&quot;EN-US&quot;&gt;, Array &lt;/span&gt;형식&lt;span lang=&quot;EN-US&quot;&gt;([])&lt;/span&gt;이다&lt;span lang=&quot;EN-US&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;chk1&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;mem&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/bin/check_mem&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;5s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;chk2&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;/health&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;http&quot;: &quot;&lt;a href=&quot;http://localhost:5000/health&quot; style=&quot;text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;http://localhost:5000/health&lt;/a&gt;&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;15s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;id&quot;: &quot;chk3&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;cpu&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;script&quot;: &quot;/bin/check_cpu&quot;,&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;interval&quot;: &quot;10s&quot;&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; },&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;&amp;nbsp; ]&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-family: 돋움;&quot;&gt;}&lt;/span&gt;&lt;span lang=&quot;EN-US&quot; style=&quot;color: #666666; font-size: 9.0pt;&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/20848958859321129/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://longbe00.blogspot.com/2017/08/consul.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/20848958859321129'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/20848958859321129'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/2017/08/consul.html' title='Consul에 대해서 '/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://1.bp.blogspot.com/-2-ZwKgDRPG8/WYAgWxnqkbI/AAAAAAAAAMc/c3YTMAoZUUsHJukwg_KGuucNY6JLQ6pwQCLcBGAs/s72-c/2017-08-01%2B15%253B31%253B37.PNG" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-8589864273069611789</id><published>2016-12-27T22:40:00.001-08:00</published><updated>2016-12-27T22:40:18.695-08:00</updated><title type='text'>redirect와 forward의 차이</title><content type='html'>redirect와 forward의 차이&lt;br /&gt;&lt;br /&gt;&amp;nbsp; * Forward : Web Container 차원에서 페이지 이동만 있다. 실제로 웹 브라우저는 다른 페이지로 이동했음을 알 수 없다.&lt;br /&gt;브라우져상에서 URL은 기존의 요청된 URL과 동일한 정보를 노출한다.&lt;br /&gt;동일한 &amp;nbsp;웹 컨테이너에 있는 페이지로만 이동할 수 있다.&lt;br /&gt;현재 실행중인 페이지와 forwad에 의해 호출될 페이지는 request와 response 객체를 공유한다.&lt;br /&gt;&lt;br /&gt;&amp;nbsp; * Redirect : Web Container는 Redirect 명령이 들어오면 웹 브라우저에게 다른 페이지로 이동하라고 명령을 내린다. 그러면 웹 브라우저는 URL을 지시된 주소로 바꾸고 그 주소로 이동한다. 다른 웹 컨테이너에있는 주소로 이동이 가능하다.&lt;br /&gt;새로운 페이지에서는 request와 response객체가 새롭게 생성된다.&lt;br /&gt;즉 새로운 페이지가 로딩된 것과 동일하다.</content><link rel='replies' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/8589864273069611789/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://longbe00.blogspot.com/2016/12/redirect-forward.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/8589864273069611789'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/8589864273069611789'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/2016/12/redirect-forward.html' title='redirect와 forward의 차이'/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-4627132493222547806</id><published>2016-12-12T18:25:00.001-08:00</published><updated>2016-12-12T18:41:18.993-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="java"/><category scheme="http://www.blogger.com/atom/ns#" term="oauth"/><title type='text'>spring security를 이용한 oauth 2.0 구현 </title><content type='html'>&lt;br /&gt;spring security를 이용한 대부분의 예제들이 spring boot를 이용하여 구현이 되어 있다.&lt;br /&gt;하지만 꼭 boot로 구동을 해야 되는 건 아니니 프로젝트별 구성에 따라 맞게 구현을 하는게 좋을 것이다.&lt;br /&gt;&lt;br /&gt;본인의 경우 boot를 지향하지 않기 때문에 tomcat 기반으로 구성을 진행했다.&lt;br /&gt;&lt;br /&gt;기존에 spring security를 이용하여 maven 프로젝트를 구성하고 있다면 아래의 dependency만 추가해 주면 된다.&lt;br /&gt;사실 oauth를 구성하는데 org.springframework.security.oauth 해당 라이브러리만 있으면 되는 것이나 관련 dendency추가해준다.&lt;br /&gt;commons-lang3는 scope나 grant-types에 대해서 ,를 구분자로 리스트를 입력되어 있는 경에 대한 StringUtil이나 token발급에 필요한 util등을 사용한다.&lt;br /&gt;&lt;br /&gt;================POM.xml===========================&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;!-- spring security--&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;artifactId&amp;gt;spring-security-core&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;version&amp;gt;${springframework.security-version}&amp;lt;/version&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;/dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;artifactId&amp;gt;spring-security-config&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;version&amp;gt;${springframework.security-version}&amp;lt;/version&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;/dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;groupId&amp;gt;org.springframework.security&amp;lt;/groupId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;artifactId&amp;gt;spring-security-web&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;version&amp;gt;${springframework.security-version}&amp;lt;/version&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;/dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;dependency&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;artifactId&amp;gt;spring-context-support&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;&amp;lt;version&amp;gt;${springframework.security-version}&amp;lt;/version&amp;gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;   &lt;/span&gt;&amp;lt;/dependency&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;dependency&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;artifactId&amp;gt;commons-lang3&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;version&amp;gt;${commons-lang3.version}&amp;lt;/version&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/dependency&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;!-- oauth --&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;dependency&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;groupId&amp;gt;org.springframework.security.oauth&amp;lt;/groupId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;artifactId&amp;gt;spring-security-oauth2&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;version&amp;gt;${spring-security-oauth2-version}&amp;lt;/version&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/dependency&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;dependency&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;groupId&amp;gt;com.jayway.restassured&amp;lt;/groupId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;artifactId&amp;gt;rest-assured&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;version&amp;gt;${rest-assured.version}&amp;lt;/version&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;exclusions&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;exclusion&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;artifactId&amp;gt;commons-logging&amp;lt;/artifactId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;groupId&amp;gt;commons-logging&amp;lt;/groupId&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/exclusion&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/exclusions&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;lt;/dependency&amp;gt;&lt;br /&gt;===================================================&lt;br /&gt;&lt;br /&gt;실제 Oauth의 구현은 간단하다.&lt;br /&gt;org.springframework.security.oauth라이브러리 내에 기능 구현이 거의 대부분이 되어 있다고해도 과언이 아니다.&lt;br /&gt;customizing을 진행하기 위해서는 기능에 대한 구현체에 대한 확인이 필요하다.&lt;br /&gt;하지만 그 일이 만만치가 않다. interface기반으로 실제 구현체들이 주입이 되는 방식으로 코드들이 숨겨져 있어서 일일이 찾아서 확인해야 한다.&lt;br /&gt;&lt;br /&gt;https://projects.spring.io/spring-security-oauth/docs/oauth2.html에 설명된 아래의 3개의 configurer를 중심을 trace를 해 간다면 좀 더 쉽게 이해가 되었다.&lt;br /&gt;&lt;br /&gt;&lt;ul style=&quot;background-color: #f1f1f1; color: #34302d; font-family: &amp;quot;Varela Round&amp;quot;, sans-serif; font-size: 14px; margin: 0px 0px 10px 25px; padding: 0px;&quot;&gt;&lt;li style=&quot;line-height: 20px; padding: 5px 0px;&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot; style=&quot;background-color: #f7f7f9; border-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; padding: 2px 4px; white-space: nowrap;&quot;&gt;ClientDetailsServiceConfigurer&lt;/code&gt;: a configurer that defines the client details service. Client details can be initialized, or you can just refer to an existing store.&lt;/li&gt;&lt;li style=&quot;line-height: 20px; padding: 5px 0px;&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot; style=&quot;background-color: #f7f7f9; border-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; padding: 2px 4px; white-space: nowrap;&quot;&gt;AuthorizationServerSecurityConfigurer&lt;/code&gt;: defines the security constraints on the token endpoint.&lt;/li&gt;&lt;li style=&quot;line-height: 20px; padding: 5px 0px;&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot; style=&quot;background-color: #f7f7f9; border-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; padding: 2px 4px; white-space: nowrap;&quot;&gt;AuthorizationServerEndpointsConfigurer&lt;/code&gt;: defines the authorization and token endpoints and the token services.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;ClientDetailsServiceConfigurer&lt;br /&gt;&amp;nbsp;- clientDetailsService에 대한 config를 설정&lt;br /&gt;&amp;nbsp;- clientDetails에 대한 clientId나 grantType,scopes,TokenValiditySeconds등에 대해서 설정을 로직에 대해서 주입&lt;br /&gt;&amp;nbsp;- inMemory/jdbc/withClientDetails 3가지 방식을 제공하는 것으로 보아도 무방하다.&lt;br /&gt;&amp;nbsp;- inMemory source에서 clientDetails에 대해서 정의를 하고 말그대로 메모리에 올려서 처리하는 방식&lt;br /&gt;&amp;nbsp;- jdbc jdbcTemplate(spring jdbcMapper) 방식의 구현체&lt;br /&gt;&amp;nbsp;- withClientDetails bean로&amp;nbsp;ClientDetailsService구현체를 주입을 하던 custom&amp;nbsp;ClientDetailsService의 구현체를 작성하여 주입이 가능/ 본인의 경우 해당 부분을 구현하여 처리&lt;br /&gt;&lt;br /&gt;===================OAuth2AuthorizationServerConfig.java=============&lt;br /&gt;@Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void configure(final ClientDetailsServiceConfigurer clients) throws Exception {// @formatter:off&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;clients&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.jdbc(dataSource).withClient(&quot;sampleClientId&quot;).authorizedGrantTypes(&quot;implicit&quot;)&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.scopes(&quot;read&quot;, &quot;write&quot;, &quot;foo&quot;, &quot;bar&quot;).autoApprove(false).accessTokenValiditySeconds(3600)&lt;br /&gt;//&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.and().withClient(&quot;fooClientIdPassword&quot;).secret(&quot;secret&quot;)&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;refresh_token&quot;,&quot;client_credentials&quot;).scopes(&quot;foo&quot;, &quot;read&quot;, &quot;write&quot;)&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.accessTokenValiditySeconds(3600) // 1 hour&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.refreshTokenValiditySeconds(2592000) // 30 days&lt;br /&gt;//&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.and().withClient(&quot;barClientIdPassword&quot;).secret(&quot;secret&quot;)&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;refresh_token&quot;).scopes(&quot;bar&quot;, &quot;read&quot;, &quot;write&quot;)&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.accessTokenValiditySeconds(3600) // 1 hour&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.refreshTokenValiditySeconds(2592000) // 30 days&lt;br /&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //clients.jdbc(dataSource).;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: red;&quot;&gt;clients.withClientDetails(clientDetailsService);&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;AuthorizationServerSecurityConfigurer&lt;br /&gt;- token endpoint에 대한 대한 제약을 config&lt;br /&gt;- 접근제어 및 접근 제어 방식에 대한 정의&lt;br /&gt;&lt;br /&gt;===================OAuth2AuthorizationServerConfig.java=============&lt;br /&gt;&amp;nbsp;@Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void configure(final AuthorizationServerSecurityConfigurer oauthServer) throws Exception {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //oauthServer.passwordEncoder(passwordEncoder)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; oauthServer.tokenKeyAccess(&quot;permitAll()&quot;).checkTokenAccess(&quot;isAuthenticated()&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;AuthorizationServerEndpointsConfigurer&lt;br /&gt;-&lt;br /&gt;&lt;br /&gt;===================OAuth2AuthorizationServerConfig.java=============&lt;br /&gt;@Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void configure(final AuthorizationServerEndpointsConfigurer endpoints) throws Exception {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // @formatter:off&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;final TokenEnhancerChain tokenEnhancerChain = new TokenEnhancerChain();&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;tokenEnhancerChain.setTokenEnhancers(Arrays.asList(tokenEnhancer()));&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;endpoints.approvalStore(approvalStore).tokenStore(tokenStore).authorizationCodeServices(authorizationCodeServices())&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt; .tokenEnhancer(tokenEnhancerChain).authenticationManager(authenticationManager);&lt;br /&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;// @formatter:on&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;여기서 중요한 포인트는 EndPoint라는 건데 결론적으로는 controller와 동일한 기능을 처리 한다.&lt;br /&gt;&lt;br /&gt;FrameworkEndpointHandlerMapping라는 클래스가&amp;nbsp;RequestMappingHandlerMapping를 상속 받아서&amp;nbsp;@FrameworkEndpoint라는 SpringSecurity에서 생성한 인터페이스 기반으로 Endpoint를 조회해서 requestMapping을 등록하는 역활을 한다.&lt;br /&gt;즉 @FrameworkEndpoint를 붙혀주면 해당 클래스는 FrameworkEndpointHandlerMapping를 통해서 controller와 같이 동작한다고 보면 된다.&lt;br /&gt;&lt;br /&gt;기존에 라이브러리에서 제공되는 FrameworkEndpoint의 리스트 아래와 같다.&lt;br /&gt;AuthorizationEndpoint&lt;br /&gt;&amp;nbsp;- authorize_code 발급을 위한 로직&lt;br /&gt;&amp;nbsp;-&amp;nbsp;/oauth/authorize api에 대한 기능 구현&lt;br /&gt;CheckTokenEndpoint&lt;br /&gt;&amp;nbsp;- accessToken에 대한 체크 로직&lt;br /&gt;&amp;nbsp;-&amp;nbsp;/oauth/check_token api에 대한 기능 구현&lt;br /&gt;TokenEndpoint&lt;br /&gt;&amp;nbsp;- accessToken를 발급하는 로직&lt;br /&gt;&amp;nbsp;- /oauth/token api에 대한 기능 구현&lt;br /&gt;TokenKeyEndpoint&lt;br /&gt;&amp;nbsp;- JWT관련된 tokenKey 관련 기능 (사용안함)&lt;br /&gt;&amp;nbsp;-&amp;nbsp;/oauth/token_key api에 대한 기능 구현&lt;br /&gt;WhitelabelApprovalEndpoint&lt;br /&gt;&amp;nbsp;- authorize_code 발급시 scope에 대한 approval 를 정의하는 UI페이지에 대한 처리&lt;br /&gt;&amp;nbsp;-&amp;nbsp;/oauth/confirm_access 페이지에 대한 기능 구현&lt;br /&gt;WhitelabelErrorEndpoint&lt;br /&gt;&amp;nbsp;- error페이지에 대한 기능&lt;br /&gt;&amp;nbsp;-&amp;nbsp;/oauth/error 페이지에 대한 기능 구현&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;아래는 필요한 api에 대하서 작성한 예제이다.&lt;br /&gt;&amp;nbsp;- 물론 해당 API를 controller로 구현하여도 무방하다.&lt;br /&gt;&amp;nbsp;- 하지만 기존 Oauth코드와 통일성을 유지하기 위하여 custom API에 대해서 동일하게 FrameworkEndpoint 형태로 개발 진행&lt;br /&gt;===============ClientManageEndpoint .java=============&lt;br /&gt;@FrameworkEndpoint&lt;br /&gt;public class ClientManageEndpoint {&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;br /&gt;&amp;nbsp; &amp;nbsp; private ClientDetailsService clientDetailsService;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;br /&gt;&amp;nbsp; &amp;nbsp; private ClientRegistrationService clientRegistrationService;&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; protected final Log logger = LogFactory.getLog(getClass());&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; private WebResponseExceptionTranslator exceptionTranslator = new DefaultWebResponseExceptionTranslator();&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; public ClientManageEndpoint(ClientDetailsService clientDetailsService) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.clientDetailsService = clientDetailsService;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; /**&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* @param exceptionTranslator the exception translator to set&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void setExceptionTranslator(WebResponseExceptionTranslator exceptionTranslator) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.exceptionTranslator = exceptionTranslator;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @RequestMapping(value = &quot;/oauth/clients/{clientId}&quot;, &amp;nbsp;method = RequestMethod.GET)&lt;br /&gt;&amp;nbsp; &amp;nbsp; @ResponseBody&lt;br /&gt;&amp;nbsp; &amp;nbsp; public Object checkToken(@PathVariable(&quot;clientId&quot;) String clientId) {&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ClientDetails client = clientDetailsService.loadClientByClientId(clientId);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (client == null) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; throw new InvalidClientException(&quot;Client was not recognised&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return client;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; ...중략&lt;br /&gt;&lt;br /&gt;Oauth를 위한 Service를 구성하는 있어서 springSecurity에서 제공하는 jdbc 방식을 이용하여 구현한다면 개발 공수는 거의 없다고 할수있다. 하지만 customizing을 하는데 있어 제약이 많은 관계로 요구사항이 많은 프로젝트라고 한다면 Service를 구현하여 &amp;nbsp;customizing하는 것을 추천한다.&lt;br /&gt;&lt;br /&gt;저는 기존에 사용하던 Mybatis를 기반으로 구현을 진행하였다.&lt;br /&gt;&lt;br /&gt;=================clientDetailMapper.groovy&lt;br /&gt;&lt;br /&gt;@Mapper&lt;br /&gt;public interface ClientDetailsMapper {&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Results(id=&quot;ClientDetailsResult&quot;, value = [&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;clientId&quot;, column = &quot;client_id&quot;),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;clientSecret&quot;, column = &quot;client_secret&quot;),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;resourceIds&quot;, column = &quot;resource_ids&quot;, typeHandler=CommaDelimitedListTypeHandler.class),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;scope&quot;, column=&quot;scope&quot;, typeHandler=CommaDelimitedListTypeHandler.class),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;authorizedGrantTypes&quot;, column = &quot;authorized_grant_types&quot;, typeHandler=CommaDelimitedListTypeHandler.class),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;registeredRedirectUris&quot;, column = &quot;web_server_redirect_uri&quot;,typeHandler=CommaDelimitedListTypeHandler.class),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;authorities&quot;, column = &quot;authorities&quot;, jdbcType=JdbcType.VARCHAR, typeHandler=AuthorityListTypeHandler.class),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;accessTokenValiditySeconds&quot;, column = &quot;access_token_validity&quot;),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;refreshTokenValiditySeconds&quot;, column = &quot;refresh_token_validity&quot;),&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;additionalInformation&quot;, column = &quot;additional_information&quot;, typeHandler=JsonMappedTypeHandler.class),&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Result(property = &quot;autoApproveScopes&quot;, column = &quot;autoapprove&quot;,typeHandler=CommaDelimitedListTypeHandler.class)&lt;br /&gt;&amp;nbsp; &amp;nbsp; ])&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Select(&quot;&quot;&quot;&amp;lt;script&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SELECT client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FROM oauth_client_details&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; WHERE client_id = #{clientId}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/script&amp;gt;&quot;&quot;&quot;)&lt;br /&gt;&amp;nbsp; &amp;nbsp; public BaseClientDetails selectClientDetails(String clientId);&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; @Insert(&quot;&quot;&quot;&amp;lt;script&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; INSERT INTO oauthdb.oauth_client_details(&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; client_id&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,client_secret&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,resource_ids&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,scope&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,authorized_grant_types&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,web_server_redirect_uri&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,authorities&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,access_token_validity&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,refresh_token_validity&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,additional_information&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,autoapprove&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ) VALUES (&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #{clientId}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{clientSecret}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{resourceIds,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.CommaDelimitedListTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{scope,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.CommaDelimitedListTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{authorizedGrantTypes,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.CommaDelimitedListTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{registeredRedirectUri,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.CommaDelimitedListTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{authorities,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.AuthorityListTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{accessTokenValiditySeconds}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{refreshTokenValiditySeconds}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{additionalInformation,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.JsonMappedTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ,#{autoApproveScopes,jdbcType=VARCHAR, typeHandler=com.oneplat.oap.oauth.common.mybatis.handler.CommaDelimitedListTypeHandler}&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/script&amp;gt;&quot;&quot;&quot;)&lt;br /&gt;&amp;nbsp; &amp;nbsp; public int insertClientDetails(ClientDetails clientDetails);&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; @ResultMap(&quot;ClientDetailsResult&quot;)&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Select(&quot;&quot;&quot;&amp;lt;script&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SELECT client_id, client_secret, resource_ids, scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, refresh_token_validity, additional_information, autoapprove&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FROM oauth_client_details&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;lt;/script&amp;gt;&quot;&quot;&quot;)&lt;br /&gt;&amp;nbsp; &amp;nbsp; public List&amp;lt;ClientDetails&amp;gt; selectClientDetailsList();&lt;br /&gt;&amp;nbsp; &lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;================ClientDetailServiceImpl.java===========&lt;br /&gt;@Service(&quot;ClientDetailServiceImpl&quot;)&lt;br /&gt;public class ClientDetailServiceImpl implements ClientDetailsService, ClientRegistrationService {&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;br /&gt;&amp;nbsp; &amp;nbsp; ClientDetailsMapper clientDetailsMapper;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public ClientDetails loadClientByClientId(String clientId) throws ClientRegistrationException {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO Auto-generated method stub&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return clientDetailsMapper.selectClientDetails(clientId);&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; @Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void addClientDetails(ClientDetails clientDetails) throws ClientAlreadyExistsException {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO Auto-generated method stub&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; clientDetailsMapper.insertClientDetails(clientDetails);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void updateClientDetails(ClientDetails clientDetails) throws NoSuchClientException {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO Auto-generated method stub&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void updateClientSecret(String clientId, String secret) throws NoSuchClientException {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO Auto-generated method stub&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public void removeClientDetails(String clientId) throws NoSuchClientException {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO Auto-generated method stub&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; @Override&lt;br /&gt;&amp;nbsp; &amp;nbsp; public List&amp;lt;ClientDetails&amp;gt; listClientDetails() {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO Auto-generated method stub&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return clientDetailsMapper.selectClientDetailsList();&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;}&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;=====================OAuth2AuthorizationServerConfig.java&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;@Configuration&lt;/div&gt;&lt;div&gt;@EnableAuthorizationServer&lt;/div&gt;&lt;div&gt;public class OAuth2AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter {&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; private Environment env;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; DataSource dataSource;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Qualifier(&quot;authenticationManagerBean&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; private AuthenticationManager authenticationManager;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Value(&quot;classpath:schema.sql&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; private Resource schemaScript;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired PasswordEncoder passwordEncoder;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ApprovalStore approvalStore;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TokenStore tokenStore;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Qualifier(&quot;ClientDetailServiceImpl&quot;)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ClientDetailsService clientDetailsService;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public PasswordEncoder passwordEncoder(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new BCryptPasswordEncoder();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public void configure(final AuthorizationServerSecurityConfigurer oauthServer) throws Exception {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //oauthServer.passwordEncoder(passwordEncoder)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; oauthServer.tokenKeyAccess(&quot;permitAll()&quot;).checkTokenAccess(&quot;isAuthenticated()&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public void configure(final ClientDetailsServiceConfigurer clients) throws Exception {// @formatter:off&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;clients&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.jdbc(dataSource).withClient(&quot;sampleClientId&quot;).authorizedGrantTypes(&quot;implicit&quot;)&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.scopes(&quot;read&quot;, &quot;write&quot;, &quot;foo&quot;, &quot;bar&quot;).autoApprove(false).accessTokenValiditySeconds(3600)&lt;/div&gt;&lt;div&gt;//&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.and().withClient(&quot;fooClientIdPassword&quot;).secret(&quot;secret&quot;)&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;refresh_token&quot;,&quot;client_credentials&quot;).scopes(&quot;foo&quot;, &quot;read&quot;, &quot;write&quot;)&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.accessTokenValiditySeconds(3600) // 1 hour&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.refreshTokenValiditySeconds(2592000) // 30 days&lt;/div&gt;&lt;div&gt;//&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.and().withClient(&quot;barClientIdPassword&quot;).secret(&quot;secret&quot;)&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.authorizedGrantTypes(&quot;password&quot;, &quot;authorization_code&quot;, &quot;refresh_token&quot;).scopes(&quot;bar&quot;, &quot;read&quot;, &quot;write&quot;)&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.accessTokenValiditySeconds(3600) // 1 hour&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt;.refreshTokenValiditySeconds(2592000) // 30 days&lt;/div&gt;&lt;div&gt;//&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //clients.jdbc(dataSource).;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;clients.withClientDetails(clientDetailsService);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;} // @formatter:on&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Override&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public void configure(final AuthorizationServerEndpointsConfigurer endpoints) throws Exception {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // @formatter:off&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;final TokenEnhancerChain tokenEnhancerChain = new TokenEnhancerChain();&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;tokenEnhancerChain.setTokenEnhancers(Arrays.asList(tokenEnhancer()));&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;endpoints.approvalStore(approvalStore).tokenStore(tokenStore).authorizationCodeServices(authorizationCodeServices())&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;    &lt;/span&gt; .tokenEnhancer(tokenEnhancerChain).authenticationManager(authenticationManager);&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;// @formatter:on&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;@Bean&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;public ClientDetailsService clientDetailsService() {&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return new JdbcClientDetailsService(dataSource);&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;@Bean&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;public ApprovalStore approvalStore() {&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return new JdbcApprovalStore(dataSource);&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public AuthorizationCodeServices authorizationCodeServices() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new JdbcAuthorizationCodeServices(dataSource);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Primary&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public DefaultTokenServices tokenServices() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; final DefaultTokenServices defaultTokenServices = new DefaultTokenServices();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; defaultTokenServices.setTokenStore(tokenStore);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; defaultTokenServices.setSupportRefreshToken(true);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return defaultTokenServices;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public TokenEnhancer tokenEnhancer() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new CustomTokenEnhancer();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;@Bean&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;public TokenStore tokenStore() {&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return new JdbcTokenStore(dataSource);&lt;/div&gt;&lt;div&gt;// &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //신규 EndPoint 등록&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public ClientManageEndpoint clientManageEndpoint() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new ClientManageEndpoint(clientDetailsService);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/4627132493222547806/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://longbe00.blogspot.com/2016/12/spring-security-oauth-20.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/4627132493222547806'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/4627132493222547806'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/2016/12/spring-security-oauth-20.html' title='spring security를 이용한 oauth 2.0 구현 '/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-6604196314799119357</id><published>2016-12-12T17:41:00.002-08:00</published><updated>2016-12-12T18:41:41.240-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="mysql"/><title type='text'>mysql에서 공백과 null 동시 체크</title><content type='html'>mysql에서 공백과 null 동시 체크&lt;br /&gt;여러가지 방법이 있겠으나 제가 선호 하는 방식에 대한 설명입니다.&lt;br /&gt;&lt;br /&gt;NULLIF(컬럼명,&#39;&#39;) IS NULL&lt;br /&gt;NULLIF를 이용하여 해당 컬럼명이 &#39;&#39; 공백과 같다면 null 치환하여 해당 컬럼이 null인지 여부를 체크하는 방식입니다.&lt;br /&gt;&lt;br /&gt;관련 참고 함수&lt;br /&gt;&lt;br /&gt;1. CASE value WHEN [compare_value] THEN result [WHEN [compare_value] THEN result &amp;nbsp;...] [ELSE result] END&lt;br /&gt;switch 문과 유사항 방식&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; CASE WHEN [condition] THEN result [WHEN [condition] THEN result ...] [ELSE result] END&lt;br /&gt;switch 문 - IF문 의 조합형&lt;br /&gt;&lt;br /&gt;2. IF(expr1, expr2, expr3)&lt;br /&gt;&amp;nbsp; : expr1이 TRUE 이면 expr2를 리턴하고, 그렇지 않은 경우 expr3를 리턴한다.&lt;br /&gt;&lt;br /&gt;3. IFNULL(expr1, expr2)&lt;br /&gt;&amp;nbsp; : expr1이 NULL이면 expr2를 리턴하고, NULL이 아니면 expr1을 리턴한다.&lt;br /&gt;&lt;br /&gt;4. NULLIF(expr1, expr2)&lt;br /&gt;&amp;nbsp; : expr1 = expr2가 TRUE이면 NULL을 리턴하고, 그렇지 않으면 expr1을 리턴한다.&lt;br /&gt;&amp;nbsp; &amp;nbsp; 이것은 CASE WHEN expr1=expr2 THEN NULL ELSE expr1 END 와 같다.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/6604196314799119357/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://longbe00.blogspot.com/2016/12/mysql-null.html#comment-form' title='1개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/6604196314799119357'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/6604196314799119357'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/2016/12/mysql-null.html' title='mysql에서 공백과 null 동시 체크'/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-7504848083009209715</id><published>2016-04-17T19:04:00.000-07:00</published><updated>2016-04-17T19:04:12.111-07:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="annotation"/><category scheme="http://www.blogger.com/atom/ns#" term="java"/><category scheme="http://www.blogger.com/atom/ns#" term="spring"/><title type='text'>Custom Annotation Scan만들기</title><content type='html'>1. Scan을 할 Annotation Interface를 생성&lt;br /&gt;2.&amp;nbsp;ImportBeanDefinitionRegistrard 구현체 생성&lt;br /&gt;&amp;lt;- 해당 구현체는 Spring&amp;nbsp;@Configration이 선언된 클래스에 대해서 실행된다.&lt;br /&gt;3. 테스트를 진행할 Annotation Interface를 생성&lt;br /&gt;4.TestContext객체생성&lt;br /&gt;&lt;br /&gt;테스트 클래스들은 Mybatis mapperScan을 기반으로 생성하였음.&lt;br /&gt;&lt;br /&gt;TestScan 클래스&lt;br /&gt;&lt;br /&gt;@Retention(RetentionPolicy.RUNTIME)&lt;br /&gt;@Target(ElementType.TYPE)&lt;br /&gt;@Documented&lt;br /&gt;@Import(TestSannerRegistarar.class)&lt;br /&gt;public @interface TestScan {&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; String[] value() default {};&lt;br /&gt;&lt;br /&gt;&amp;nbsp; String[] basePackages() default {};&lt;br /&gt;&lt;br /&gt;&amp;nbsp; Class&amp;lt;?&amp;gt;[] basePackageClasses() default {};&lt;br /&gt;&lt;br /&gt;&amp;nbsp; Class&amp;lt;? extends BeanNameGenerator&amp;gt; nameGenerator() default BeanNameGenerator.class;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; Class&amp;lt;? extends Annotation&amp;gt; annotationClass() default Annotation.class;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; Class&amp;lt;?&amp;gt; markerInterface() default Class.class;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; String sqlSessionTemplateRef() default &quot;&quot;;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; String sqlSessionFactoryRef() default &quot;&quot;;&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;div&gt;TestScannerRegistarar 클래스&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;public class TestSannerRegistarar implements ImportBeanDefinitionRegistrar, ResourceLoaderAware {&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; private ResourceLoader resourceLoader;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; /**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;* {@inheritDoc}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;*/&lt;/div&gt;&lt;div&gt;&amp;nbsp; public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) {&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; AnnotationAttributes annoAttrs = AnnotationAttributes.fromMap(importingClassMetadata.getAnnotationAttributes(TestScan.class.getName()));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ClassPathMapperScanner scanner = new ClassPathMapperScanner(registry);&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (resourceLoader != null) { // this check is needed in Spring 3.1&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; scanner.setResourceLoader(resourceLoader);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;? extends Annotation&amp;gt; annotationClass = annoAttrs.getClass(&quot;annotationClass&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!Annotation.class.equals(annotationClass)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; scanner.setAnnotationClass(annotationClass);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;?&amp;gt; markerInterface = annoAttrs.getClass(&quot;markerInterface&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!Class.class.equals(markerInterface)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; scanner.setMarkerInterface(markerInterface);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Class&amp;lt;? extends BeanNameGenerator&amp;gt; generatorClass = annoAttrs.getClass(&quot;nameGenerator&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!BeanNameGenerator.class.equals(generatorClass)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; scanner.setBeanNameGenerator(BeanUtils.instantiateClass(generatorClass));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; scanner.setSqlSessionTemplateBeanName(annoAttrs.getString(&quot;sqlSessionTemplateRef&quot;));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; scanner.setSqlSessionFactoryBeanName(annoAttrs.getString(&quot;sqlSessionFactoryRef&quot;));&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; List&amp;lt;String&amp;gt; basePackages = new ArrayList&amp;lt;String&amp;gt;();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (String pkg : annoAttrs.getStringArray(&quot;value&quot;)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (StringUtils.hasText(pkg)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; basePackages.add(pkg);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (String pkg : annoAttrs.getStringArray(&quot;basePackages&quot;)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (StringUtils.hasText(pkg)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; basePackages.add(pkg);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; for (Class&amp;lt;?&amp;gt; clazz : annoAttrs.getClassArray(&quot;basePackageClasses&quot;)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; basePackages.add(ClassUtils.getPackageName(clazz));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; scanner.registerFilters();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; scanner.doScan(StringUtils.toStringArray(basePackages));&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; /**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;* {@inheritDoc}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;*/&lt;/div&gt;&lt;div&gt;&amp;nbsp; public void setResourceLoader(ResourceLoader resourceLoader) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; this.resourceLoader = resourceLoader;&lt;/div&gt;&lt;div&gt;&amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;TestMapper 클래스&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;@Target(ElementType.TYPE)&lt;/div&gt;&lt;div&gt;@Retention(RetentionPolicy.RUNTIME)&lt;/div&gt;&lt;div&gt;@Documented&lt;/div&gt;&lt;div&gt;public @interface TestMapper {&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a name=&#39;more&#39;&gt;&lt;/a&gt;&lt;div&gt;TestContext 클래스&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;@Configuration&lt;/div&gt;&lt;div&gt;@EnableTransactionManagement&lt;/div&gt;&lt;div&gt;@MapperScan(&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; annotationClass=TestMapper.class,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; basePackages=&quot;com.kg.uppp&quot;,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sqlSessionFactoryRef=&quot;sqlSessionFactoryBean&quot;)&lt;/div&gt;&lt;div&gt;public class TestContext {&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; protected final Logger log = LoggerFactory.getLogger(this.getClass());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public SqlSessionFactoryBean sqlSessionFactoryBean(&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; DataSource dataSource, ApplicationContext applicationContext) throws IOException {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 마이바티스가 사용한 DataSource를 등록&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; factoryBean.setDataSource(dataSource);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return factoryBean;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; /**&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* 마이바티스 {@link org.apache.ibatis.session.SqlSession} 빈을 등록한다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;*&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* SqlSessionTemplate은 SqlSession을 구현하고 코드에서 SqlSession를 대체하는 역할을 한다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;* 쓰레드에 안전하게 작성되었기 때문에 여러 DAO나 매퍼에서 공유 할 수 있다.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Bean&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; public SqlSessionTemplate sqlSession(SqlSessionFactory sqlSessionFactory) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new SqlSessionTemplate(sqlSessionFactory);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://longbe00.blogspot.com/feeds/7504848083009209715/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://longbe00.blogspot.com/2016/04/custom-annotation-scan.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/7504848083009209715'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7756251120285753281/posts/default/7504848083009209715'/><link rel='alternate' type='text/html' href='http://longbe00.blogspot.com/2016/04/custom-annotation-scan.html' title='Custom Annotation Scan만들기'/><author><name>훅훅훅</name><uri>http://www.blogger.com/profile/01638748140750954261</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7756251120285753281.post-2213289880213785518</id><published>2016-04-17T18:42:00.003-07:00</published><updated>2016-12-14T20:35:32.553-08:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="java"/><category scheme="http://www.blogger.com/atom/ns#" term="mybatis"/><title type='text'>Mybatis MapperScan에 대해서</title><content type='html'>&lt;div class=&quot;section&quot; style=&quot;background-color: white; color: #333333; font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;&quot;&gt;&lt;div style=&quot;margin-bottom: 10px; margin-left: 7px; margin-right: 7px;&quot;&gt;UserMapper가 매퍼 인터페이스와 같은 경로의 클래스패스에 마이바티스 XML매퍼 파일을 가지고 있다면&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: monaco, &amp;quot;andale mono&amp;quot;, &amp;quot;courier new&amp;quot;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;MapperFactoryBean&lt;/tt&gt;이 자동으로 파싱할것이다. 매퍼 XML파일을 다른 클래스패스에 두는게 아니라면 마이바티스 설정파일에 매퍼를 지정할 필요가 없다. 좀더 세부적인 정보는&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: monaco, &amp;quot;andale mono&amp;quot;, &amp;quot;courier new&amp;quot;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;SqlSessionFactoryBean&lt;/tt&gt;의&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: monaco, &amp;quot;andale mono&amp;quot;, &amp;quot;courier new&amp;quot;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;&lt;a href=&quot;http://www.mybatis.org/spring/ko/factorybean.html&quot; style=&quot;color: #0088cc; text-decoration: none;&quot;&gt;configLocation&lt;/a&gt;&lt;/tt&gt;&amp;nbsp;프로퍼티를 살펴보자.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 10px; margin-left: 7px; margin-right: 7px;&quot;&gt;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;MapperFactoryBean&lt;/tt&gt;은&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;SqlSessionFactory&lt;/tt&gt;&amp;nbsp;나&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;SqlSessionTemplate&lt;/tt&gt;가 필요하다.&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;sqlSessionFactory&lt;/tt&gt;&amp;nbsp;와&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;sqlSessionTemplate&lt;/tt&gt;&amp;nbsp;프로퍼티를 셋팅하면 된다. 둘다 셋팅하면&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;SqlSessionFactory&lt;/tt&gt;가 무시된다. 세션 팩토리 셋은&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;SqlSessionTemplate&lt;/tt&gt;이 필요하고&amp;nbsp;&lt;tt style=&quot;background-color: #fee9cc; border-radius: 3px; color: rgba(0, 0, 0, 0.74902); font-family: Monaco, &#39;Andale Mono&#39;, &#39;Courier New&#39;, monospace; font-size: 0.9em; padding: 1px 3px;&quot;&gt;MapperFactoryBean&lt;/tt&gt;는 팩토리를 사용할것이다.&lt;/div&gt;&lt;div style=&quot;margin-bottom: 10px; margin-left: 7px; margin-right: 7px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;section&quot; style=&quot;background-color: white;&quot;&gt;&lt;h4 style=&quot;background-color: white; color: inherit; font-family: inherit; font-size: 17.5px; line-height: 20px; margin: 10px 0px;&quot;&gt;&lt;a href=&quot;https://www.blogger.com/null&quot; name=&quot;a_&quot; style=&quot;color: #0088cc;&quot;&gt;&lt;/a&gt;자바설정 사용&lt;/h4&gt;&lt;div class=&quot;source&quot; style=&quot;background-color: white; line-height: 20px;&quot;&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;background-color: whitesmoke; border-radius: 4px; border: 1px solid rgb(136, 136, 136); margin-bottom: 20px; padding: 2px; word-break: break-all; word-wrap: break-word;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; font-family: &amp;quot;monaco&amp;quot; , &amp;quot;menlo&amp;quot; , &amp;quot;consolas&amp;quot; , &amp;quot;courier new&amp;quot; , monospace; font-size: 13px; white