<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>프로그래머의 블로그</title>
<link>https://genesis8.tistory.com/</link>
<description></description>
<language>ko</language>
<pubDate>Sun, 12 May 2019 14:36:47 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>GENESIS8</managingEditor>
<image>
<title>프로그래머의 블로그</title>
<url>http://cfile30.uf.tistory.com/image/213EA54855ADF0CF02D66D</url>
<link>https://genesis8.tistory.com</link>
<description></description>
</image>
<item>
<title>이벤트 스케줄러(Event Scheduler)</title>
<link>https://genesis8.tistory.com/298</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;DB 기록을 주기적으로 할 수 있는 기능..&lt;/p&gt;&lt;p&gt;작업 스케줄러처럼 주기적으로 쓸 수 있는데다가 쿼리를 넣어두거나 프로시저 호출 등을 지정해둘 수 있다!... 이런 기능을 몰랐었다니..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;show variables like 'event%';&lt;/p&gt;&lt;p&gt;ㄴ이벤트 스케줄러가 켜져 있는지를 체크할 수 있다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:170px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/267CF0495769363E2A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;x.PNG&quot; height=&quot;41&quot; width=&quot;170&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;SET GLOBAL event_scheduler = ON ;&lt;/p&gt;&lt;p&gt;SET GLOBAL event_scheduler = OFF&amp;nbsp;;&lt;/p&gt;&lt;p&gt;ㄴ 이벤트 스케줄러를 껐다 킬 수 있다. (이벤트 동작 여부를 총체적으로 결정)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;SELECT * FROM information_schema.EVENTS;&lt;/p&gt;&lt;p&gt;ㄴ 현재 db에 작성된 event 들을 볼 수 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/274FE13A576938742F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.PNG&quot; height=&quot;73&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;CREATE EVENT 이벤트명&lt;/div&gt;&lt;div&gt;ON SCHEDULE EVERY 1 MONTH STARTS TIMESTAMP('2016-01-01')&lt;/div&gt;&lt;div&gt;DO&amp;nbsp;&lt;/div&gt;&lt;div&gt;수행할 작업;&lt;/div&gt;&lt;div&gt;ㄴ 이벤트를 생성할 수 있다. MONTH면 달, HOUR면 시, DAY면 일 등.. 주기적인 설정이 가능하다. 수행할 작업에는 프로시저를 호출할 수도 있고, 그냥 쿼리문을 쓸 수도 있다.&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/247E12385769389626&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.PNG&quot; height=&quot;175&quot; style=&quot;text-align: center;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;show create event 이벤트명;&lt;/p&gt;&lt;p&gt;ㄴ 해당 이벤트를 어떻게 생성하는 지 구문을 볼 수 있다. (다른 곳에서 옮겨오기도 좋다)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/27020C385769388A22&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.PNG&quot; height=&quot;40&quot; style=&quot;text-align: center;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ALTER EVENT 이벤트명&amp;nbsp;&lt;/p&gt;&lt;p&gt;ON 시작 설정 등등..&amp;nbsp;;&lt;/p&gt;&lt;p&gt;ㄴ 이벤트 수정이 가능&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/253DA841576939920F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4.PNG&quot; height=&quot;119&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;DROP EVENT 이벤트명;&amp;nbsp;&lt;/p&gt;&lt;p&gt;ㄴ 이벤트를 삭제할 수 있다.&lt;/p&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/22467643576939A314&quot; filemime=&quot;image/jpeg&quot; filename=&quot;6.PNG&quot; height=&quot;104&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;덧붙여 At을 붙여서&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;CREATE EVENT test&lt;/p&gt;&lt;p&gt;ON SCHEDULE AT '2016-06-21 22:04:00'&lt;/p&gt;&lt;p&gt;DO&lt;/p&gt;&lt;p&gt;create table tt(id int(10))&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;과 같이 만들면 한번 쓰고 버리게 된다!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/298</guid>
<comments>https://genesis8.tistory.com/298#entry298comment</comments>
<pubDate>Tue, 21 Jun 2016 21:57:17 +0900</pubDate>
</item>
<item>
<title>윈도우 서비스</title>
<link>https://genesis8.tistory.com/297</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;윈도우 서비스가 필요한 경우가 있어서 학습 시도..&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그러고보니.. 그냥 가동되는 서비스라고만 알았지 윈도우 서비스란 뭘까..&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;위키백과를 읽어본다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;윈도우 서비스(windows service)는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;오랜 시간 동안 실행되며 특정한 기능을 수행하는 실행 파일! 사용자 간섭을 요구하도록 설계 되지 않음&amp;nbsp;&lt;/span&gt;윈도우가 실행되는 동안&amp;nbsp;백 그라운드 모드로&amp;nbsp;(숨어서)&amp;nbsp;실행된다.&lt;/div&gt;&lt;div&gt;그리고 유닉스의 데몬과 개념이 비슷하다고 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;서비스 관리는 services.msc 를 통해서 실행 중인 서비스를 관리 가능.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그냥 운영체제에 의해서&amp;nbsp;실행되는 실행 파일이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;자 그럼 이런 서비스는 어떻게 등록 삭제 등을 하는 지 알아봐야겠다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2137EE3C57692EC42E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.PNG&quot; height=&quot;293&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;막상 서비스에 가보면 등록도 삭제도 없다. 중지와 실행 정도가 있을 뿐...&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;알아보니 윈도우 서비스는 sc.exe 라는 것의 도움을 받아야 한다고 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;sc 하니까 스타크래프트가 생각나지만 생각해보니 ServiCe의 약자인 것 같다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;MS의 기능 설명.&lt;/div&gt;&lt;div&gt;https://support.microsoft.com/ko-kr/kb/251192&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;항상 느끼는 거지만 MS 가서 보면 내용은 많고 분명하지만 설명이 빡치게 어렵다. 이해가 잘 안된다. 그래서 어떻게 쓰라는 건데 ;; 하는 생각이 먼저 든다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;좋은 블로그를 읽자!&lt;/div&gt;&lt;div&gt;http://gentian.tistory.com/1&lt;/div&gt;&lt;div&gt;http://joont.tistory.com/44&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;결론적으로 서비스 등록은&amp;nbsp;&lt;/div&gt;&lt;div&gt;sc create 서비스명 binpath= 파일경로&lt;/div&gt;&lt;div&gt;삭제는&lt;/div&gt;&lt;div&gt;sc delete 서비스명&lt;/div&gt;&lt;div&gt;ex)&amp;nbsp;&lt;/div&gt;&lt;div&gt;시작은&lt;/div&gt;&lt;div&gt;&lt;div&gt;net start 서비스명&lt;/div&gt;&lt;/div&gt;&lt;div&gt;중지는&lt;/div&gt;&lt;div&gt;&lt;div&gt;net start 서비스명&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;이라는 걸 배웠다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;세상에 조회라는 것도 있다. (sc query&amp;nbsp;서비스명)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;간단하게 실습을 남겨두자.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;명령 프롬프트 (CMD) 창을 소환한다. 단 이때 주의할 점은 '관리자 권한'으로 부른다. 그러지 않으면 ..거부된다.&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26502A44576932532A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.PNG&quot; height=&quot;326&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/255554445769325426&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.PNG&quot; height=&quot;326&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;관리자 권한으로 하면 바로 성공한다.&amp;nbsp;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2745BC405769328628&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4.PNG&quot; height=&quot;294&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;등록이 된 것을 확인할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/23424F345769338609&quot; filemime=&quot;image/jpeg&quot; filename=&quot;캡처.PNG&quot; height=&quot;140&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;다시 삭제를 통해서 간단하게 제거가 된다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Windows</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/297</guid>
<comments>https://genesis8.tistory.com/297#entry297comment</comments>
<pubDate>Tue, 21 Jun 2016 21:31:14 +0900</pubDate>
</item>
<item>
<title>ASP란 뭘까..</title>
<link>https://genesis8.tistory.com/295</link>
<description>&lt;p&gt;전에 글을 작성했지만 다시한번 복습해보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Active Server Page&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;동작하는 서버&amp;nbsp;쪽&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위키백과를 읽어보니 MS사에서 동적으로 웹 페이지를 생성하기 위해 개발한 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;서버 측 스크립트 엔진&lt;/span&gt;!!!&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;덧붙여 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;현재는 ASP.NET이 ASP를 대체하고 있다&lt;/span&gt;고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;장점&amp;nbsp;&lt;/p&gt;&lt;p&gt;java나 html과 달리 코드가 노출되지 않는다. 코드 대신 코드의 '결과'만이 노출된다.&lt;/p&gt;&lt;p&gt;html이나 java script로&amp;nbsp;5*1&amp;nbsp;라고&amp;nbsp;쓴 것과.. asp로 같은 내용을&amp;nbsp;쓰면 결과가 다르다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;asp에서는 결과 5 밖에 보이지 않는다!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Active 라는 이름에서 알 수 있듯이, 동적인 작용이 가능하다. 유저의 행동에 반응하여&amp;nbsp;변동이&amp;nbsp;가능한 동적인&amp;nbsp;사이트가 작성될 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;단점&lt;/p&gt;&lt;p&gt;IIS 및 Windows&amp;nbsp;플랫폼에서만 동작하는 거지 같은 플랫폼 종속성이&amp;nbsp;있다. (MS 종특)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;VBScript 외에도 동적 스크립팅 엔진은 @Language 지시문이나 &amp;lt;script language=&quot;language&quot; runat=&quot;server&quot;&amp;gt; 구문으로 선택하여 사용 할 수 있다&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ASP.NET에서는 Visual Basic, C# 및 J# C++.NET 등을&amp;nbsp;지원한댄다.&lt;/p&gt;&lt;p&gt;J#? 이게 뭐지?.. visual studio에서 제공하는 자바(JAVA) 툴... (현재는 선 마이크로 시스템즈에 극딜당해서 업데이트가 나오지 않는다고 한다)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>ASP</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/295</guid>
<comments>https://genesis8.tistory.com/295#entry295comment</comments>
<pubDate>Mon, 20 Jun 2016 22:03:14 +0900</pubDate>
</item>
<item>
<title>IIS 및 ASP 사용 환경 구성</title>
<link>https://genesis8.tistory.com/294</link>
<description>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1. IIS가 있는가? -&amp;gt; 없다&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;IIS는 윈도우에 내장되어 있다고 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;제어판에 가면 윈도우 기능 사용/사용 안함(또는 켜기 끄기)가&amp;nbsp;있다. (영어판이면 windows 머시기.. turn on off.. 라고 되어 있다.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/21127D4B5767D59F1F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.PNG&quot; height=&quot;233&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그걸 눌러주면..&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:448px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/251E044B5767D6F71A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.PNG&quot; height=&quot;376&quot; width=&quot;448&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:480px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/240DB04B5767D6F62B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.PNG&quot; height=&quot;389&quot; width=&quot;480&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;ASP는 닷넷 기반의 플랫폼이기 때문에 .NET(윈도우 버전 등에 따라 상기와 차이가 날 수 있지만 어쨌든 닷넷)을 설치해준다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;인터넷 정보 서비스 쪽에 체크를 해주는데, 필수 구성이 되는 몇몇만 설치해줘도 괜찮지고 속편하게 다 설치해도 상관 없다. 어느 쪽이던 체크를 다시 풀어서 제거하거나, 추가로 설치할 수 있기 때문에 취향에 맞게 해주면 된다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;(전부 설치하면 불 필요한 부분이 추가될 수 있긴 하지만...)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그렇게 설정이 끝났으면 확인을 눌러준다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/243DB84B5767D8E007&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4.PNG&quot; height=&quot;263&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;IIS를 검색하면 IIS 관리자가 뜬다. (6.0 호환등을 포함하여 체크한&amp;nbsp;경우 iis 6.0도 뜨게 된다)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;혹시나 신경써야할 점&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;IIS Server의 경우 주기적인 세션 정리 시간이 존재(default). 1740분(29시간)으로 설정되어 있다. 이를 0분으로 설정해줘야 세션 정리를 하지 않는다. (잠깐 잠깐&amp;nbsp;끊겨도 되는 서비스면 상관 없다)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26225C4D5767D9681C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;5.PNG&quot; height=&quot;202&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;변경할 응용 프로그램 풀 대상 선택 - 고급설정 - 표준 시간 간격 0 을 설정시... 유휴 시간보다 적을 수 없다고 난리를 치기 때문에 유휴시간도&amp;nbsp;0으로 해주어야한다.&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그리고 사용을 하려고 하면.. ASP.NET이 없다는&amp;nbsp;사실을 깨닫게 된다&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/210D75385767D9D103&quot; filemime=&quot;image/jpeg&quot; filename=&quot;6.PNG&quot; height=&quot;263&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;나처럼&amp;nbsp;멍청하게 .NET으로 ASP 서비스 실행하고서는 왜 실행이 되지 않는 지 모르는 현상이 발생할 수 있으므로...&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ASP 서비스를 위해서는 ASP를&amp;nbsp;사용해야한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;분명 위에서 windows 기능 사용&amp;nbsp;/ 사용 안함 단계의 트리노드를 세세히 보다보면 ASP 서비스가 있다. 설치는 분명했는 데 보이지 않는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이는 등록이 되지 않았기 때문에 그렇다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/25262B355767DBF310&quot; filemime=&quot;image/jpeg&quot; filename=&quot;7.PNG&quot; height=&quot;337&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;v4.0.30319 라는 건 어디까지나 내가 사용하는 .Net에 따라 다르다. (2.0을 써야한다면 그쪽에서 해봐야한다.)&amp;nbsp;내친김에 가보게 되면...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2465DC335767DC3224&quot; filemime=&quot;image/jpeg&quot; filename=&quot;8.PNG&quot; height=&quot;279&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;무수히 많은 폴더가 있는 것을 알 수 있다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/23784C385767DC992B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;9.PNG&quot; height=&quot;332&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;방금 실행한 응용 프로그램이 이것이라는 것을 확인할 수 있다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;(그렇다고 더블 클릭으로 실행하는 우를 범하지는 말자.. 인자를 받아야하는 응용프로그램인 만큼 그런식으로 실행하면 도움말만 뜰 뿐이다)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 IIS 관리자에게 가보면!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/271568395767DDA321&quot; filemime=&quot;image/jpeg&quot; filename=&quot;11.PNG&quot; height=&quot;204&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ASP.NET 이 생긴 것을 확인할 수 있다.&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;이제 asp, aspx 등을 실행할 수 있다!&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>ASP</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/294</guid>
<comments>https://genesis8.tistory.com/294#entry294comment</comments>
<pubDate>Mon, 20 Jun 2016 20:55:02 +0900</pubDate>
</item>
<item>
<title>클라우드 컴퓨팅(Cloud Computing)이란</title>
<link>https://genesis8.tistory.com/273</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위키백과 , 나무위키&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;클라우드(Cloud)의 의미는 컴퓨터 통신망이 구름과 같은 것에 싸여 안이 보이지 않고, 일반 사용자는 이 복잡한 내부를 굳이 알 필요도 없이 어디에서나 구름 속으로 손을 집어넣어 자기가 원하는 작업을 할 수 있다는 것이다. 이른바 동일한 체험을, 인터넷이 연결된 어디에서나 보장해주는 것.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;인터넷 상의 유틸리티 데이터 서버에 프로그램을 두고 그때 그때 컴퓨터나 휴대폰 등에 불러와서 사용하는 웹에 기반한 소프트웨어 서비스이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;클라우드 컴퓨팅의 정의는 개인이 가진 단말기를 통해서는 주로 입/출력 작업만 이루어지고, 정보분석 및 처리, 저장, 관리, 유통 등의 작업은 클라우드라고 불리는 제3의 공간에서 이루어지는 컴퓨팅 시스템 형태라고 할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;클라우드 컴퓨팅은 IT 관련된 기능들이 서비스 형태로 제공되는 컴퓨팅 스타일이다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;사용자들은 지원하는 기술 인프라스트럭처에 대한 전문 지식이 없거나 제어할 줄 몰라도 인터넷으로부터 서비스를 이용할 수 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/IEEE&quot; title=&quot;IEEE&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;IEEE&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;에서는 &quot;정보가 인터넷 상의 서버에 영구적으로 저장되고 데스크탑이나 테이블 컴퓨터, 노트북, 벽걸이 컴퓨터, 휴대용 기기 등과 같은 클라이언트에는 일시적으로 보관되는 패러다임이다.&quot;&lt;/span&gt; 라고 말한다.&lt;/li&gt;&lt;/ul&gt;&lt;dl style=&quot;margin-top: 0.2em; margin-bottom: 0.5em; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;&lt;dl style=&quot;margin-top: 0.2em; margin-bottom: 0.5em;&quot;&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;일반적인 클라우드 컴퓨팅에서 소프트웨어와 데이터는 서버에 저장된다.&lt;/dd&gt;&lt;/dl&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;클라우드 컴퓨팅은&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9B%B9_2.0&quot; title=&quot;웹 2.0&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;웹 2.0&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/SaaS&quot; title=&quot;SaaS&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;SaaS&lt;/a&gt;(software as a service)와 같이 최근 잘 알려진 기술 경향들과 연관성을 가지는 일반화된 개념이다.&lt;/li&gt;&lt;/ul&gt;&lt;dl style=&quot;margin-top: 0.2em; margin-bottom: 0.5em; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;&lt;dl style=&quot;margin-top: 0.2em; margin-bottom: 0.5em;&quot;&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;이들 개념들의 공통점은 사용자들의 컴퓨팅 요구를 만족시키기 위해 인터넷을 이용한다는 사실이다. 예로서&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B5%AC%EA%B8%80_%EC%95%B1%EC%8A%A4&quot; title=&quot;구글 앱스&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;구글 앱스&lt;/a&gt;(Google Apps)가 있다.&lt;/dd&gt;&lt;/dl&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;이 외에도 IaaS, PaaS 등의 개념이 있다.&lt;/p&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;IaaS(Infrastructure as a Service): 서비스로써의 인프라라는 뜻으로, AWS에서 제공하는 EC2가 대표적인 예이다. 이는 단순히 서버 등의 자원을 제공해 주면서 사용자가 디바이스에 제약없이 데이터에 접근할 수 있도록 해준다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;PaaS(Platform as a Service): 서비스로써의 플랫폼이라는 뜻으로, 사용자(개발자)가 소프트웨어 개발을 할 수 있는 환경을 제공해 준다. 구글의 APP 엔진, Heroku 등이 대표적인 예다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;SaaS(Software as a Service): 서비스로써의 소프트웨어라는 뜻으로,&amp;nbsp;drop box, google docs 등 과 같은 것을 말한다.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2457704756F3754520&quot; filemime=&quot;image/jpeg&quot; filename=&quot;600px-Cloud_computing-ko.svg.png&quot; height=&quot;453&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;클라우드 컴퓨팅의 개념은 1965년 미국의 컴퓨터 학자인&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A1%B4_%EB%A7%A4%EC%B9%B4%EC%8B%9C_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99%EC%9E%90)&quot; title=&quot;존 매카시 (컴퓨터 과학자)&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;존 매카시&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;가 &quot;컴퓨팅 환경은 공공 시설을 쓰는 것과도 같을 것&quot; 이라는 개념을 제시한데에서 유래하였다. 1993년부터는 이미 클라우드라는 용어가 거대한 규모의&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%EB%8F%99%EA%B8%B0_%EC%A0%84%EC%86%A1_%EB%B0%A9%EC%8B%9D&quot; title=&quot;비동기 전송 방식&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;ATM&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;을 지칭하는 데 쓰였다. General Magic라는 회사는 1995년 3월부터&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/AT%26T&quot; title=&quot;AT&amp;amp;T&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;AT&amp;amp;T&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;와 다른 여러 통신사들과 제휴를 맺고 클라우드 컴퓨팅 서비스를 최초로 시작했다. 하지만 이 시기는 소비자 중심의 웹 기반이 형성되기 전의 일이었기 때문에 클라우드 컴퓨팅 사업은 당연히 실패했다. 그러나 10년이 지난 2005년에서야 클라우드 컴퓨팅이라는 단어가 널리 퍼지기 시작했다. 하지만 2005년 당시 클라우드 컴퓨팅의 대부분의 내용들은&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/SaaS&quot; title=&quot;SaaS&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;SaaS&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;에 집중되어 있었다. 2007년까지는&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/SaaS&quot; title=&quot;SaaS&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;SaaS&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;에 집중되어 있었지만 2008년부터는 더이상&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/SaaS&quot; title=&quot;SaaS&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;SaaS&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;에만 집중되어 있지 않으며,&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/IaaS&quot; title=&quot;IaaS&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;IaaS&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/PaaS&quot; title=&quot;PaaS&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;PaaS&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;로 그 영역을 넓혀가게 되었다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EC.9E.A5.EC.A0.90&quot;&gt;장점&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C_%EC%BB%B4%ED%93%A8%ED%8C%85&amp;amp;action=edit&amp;amp;section=5&quot; title=&quot;부분 편집: 장점&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;초기 구입 비용과 비용 지출이 적으며 휴대성이 높다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;컴퓨터 가용율이 높다. 이러한 높은 가용율은 그린 IT 전략과도 일치한다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;다양한 기기를 단말기로 사용하는 것이 가능하며 서비스를 통한 일관성 있는 사용자 환경을 구현할 수 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;사용자의 데이터를 신뢰성 높은 서버에 보관함으로써 안전하게 보관 할 수 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;전문적인 하드웨어에 대한 지식 없이 쉽게 사용 가능하다.&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.8B.A8.EC.A0.90&quot;&gt;단점&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C_%EC%BB%B4%ED%93%A8%ED%8C%85&amp;amp;action=edit&amp;amp;section=6&quot; title=&quot;부분 편집: 단점&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;서버가 공격 당하면 개인정보가 유출될 수 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;재해에 서버의 데이터가 손상되면, 미리 백업하지 않은 정보는 되살리지 못하는 경우도 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;사용자가 원하는 애플리케이션을 설치하는 데에 제약이 심하거나 새로운 애플리케이션을 지원하지 않는다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;통신환경이 열악하면 서비스 받기 힘들다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;개별 정보가 물리적으로 어디에 위치하고 있는지 파악할 수 없다&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;정확한 개념이 의외로 복잡한데, 대부분의 작업을 온라인에 분산되어 존재하는&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;not-exist wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%8D%B0%EC%9D%B4%ED%84%B0%20%EC%84%BC%ED%84%B0&quot; title=&quot;데이터 센터&quot; style=&quot;box-sizing: inherit; color: red; font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;데이터 센터&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;(Data Center, 이하 클라우드)에 맡겨 수행하고, 사용자의 컴퓨터는 클라우드에 접속하여 상호작용하는 단말기 역할만 하는 것이다. 이 때문에 모든 데이터와 연산 자원이 클라우드 안에만 존재하게 되며, 이 자원을 유연하게 관리하기 위해 가상화 기술 등이 투입되게 된다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;또한 &lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;인터넷 서비스 운영자의 입장에서는 직접 서버를 운영하는 대신에,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EA%B5%AC%EA%B8%80&quot; title=&quot;구글&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;구글&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;이나&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EC%95%84%EB%A7%88%EC%A1%B4%EB%8B%B7%EC%BB%B4&quot; title=&quot;아마존닷컴&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;아마존닷컴&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%86%8C%ED%94%84%ED%8A%B8&quot; title=&quot;마이크로소프트&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;마이크로소프트&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;등의 대기업의 클라우드 자원을 빌려 서비스를 운영하는 편이 차후에 서비스의 규모가 커졌을 때 대처하기 편하다.&lt;/span&gt; 서버 세팅/확장 등은 신경쓰지 말고 서비스 운영 자체에만 집중할 수 있게 해 준다. 컴퓨팅 자원을 마치 전기 끌어다 쓰듯이 쓸 수 있도록 해 준다고 보면 된다.&lt;/span&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;또한 이러한 서비스를 이용한 실상품으로는 구글에서 추진하고 있는&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%ED%81%AC%EB%A1%AC%EB%B6%81&quot; title=&quot;크롬북&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;크롬북&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;이 대표적이다. 크롬북은 컴퓨터 전원을 켜면&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%ED%81%AC%EB%A1%AC&quot; title=&quot;크롬&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;크롬&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;브라우저 하나만&lt;/span&gt;&lt;a class=&quot;wiki-fn-content&quot; title=&quot;엄밀히 말하면 운영체제가 실행되면서 크롬브라우저만 실행되도록 세팅한 [[리눅스]]운영체제, 컴퓨터를 켜고 로그온 화면에서 로그온 하면 바탕화면 대신 크롬브라우저만 보여지는 환경이다.&quot; href=&quot;https://namu.wiki/w/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%20%EC%BB%B4%ED%93%A8%ED%8C%85#fn-4&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-size: 0.8em; vertical-align: super; font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif;&quot;&gt;&lt;span class=&quot;target&quot; id=&quot;rfn-4&quot; style=&quot;box-sizing: inherit;&quot;&gt;&lt;/span&gt;[4]&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;덩그러니 실행된다. 다른 프로그램은 어떻게 쓰냐고? 클라우드에 접속하면 문서도구, 그래픽, 게임을 불문한 모든 작업이 가능하다. 컴퓨터에 아무것도 저장하지 않은 상태로 오직 클라우드 내에서만 구글 크롬 스토어에서 취급되는 앱들을 비롯한 다양한 클라우드 앱을 이용할 수 있으므로 굳이 프로그램을 깔아서 쓸 필요가 없다는 컨셉이다. 다만 크롬북은 모든 작업을 웹과 클라우드상에서 처리하다 보니 인터넷이 없으면 말 그대로&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EA%B9%A1%ED%86%B5&quot; title=&quot;깡통&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;깡통&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;이 된다는 치명적인 단점이 있다.&lt;/span&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;애플의&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%A7%A5%EB%B6%81%20%EC%97%90%EC%96%B4&quot; title=&quot;맥북 에어&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;맥북 에어&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;도 어떻게 보면 비슷한데,&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/iCloud&quot; title=&quot;iCloud&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;iCloud&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%93%9C%EB%A1%AD%EB%B0%95%EC%8A%A4&quot; title=&quot;드롭박스&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;드롭박스&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;등의 여러 클라우드 서비스 등장으로 굳이 하드 탑재로 용량을 늘릴 필요가 없어졌기에 맥북 에어의 경우 두께를 위해 용량을 희생하고 그 두께의 거의 모든 부분이&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%B0%B0%ED%84%B0%EB%A6%AC&quot; title=&quot;배터리&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;배터리&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;확충에 치중되고 있다. 저장 용량이 중요하지 않고 되려 사용자의 편의성과 직결되어 있는 배터리 양이 더 중요하다는 것이다. 다만 크롬북과는 달리 인터넷에 연결되지 않아도 웬만한 건 다 할 수 있기 때문에 아래에 서술된 클라우드의 단점 역시 어느 정도 극복할 수 있는 형태라는 결정적 차이점을 가진다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 style=&quot;box-sizing: inherit; margin: 1.2em 0px 0.8em; font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; line-height: 1.1; color: rgb(55, 58, 60); font-size: 1.8em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); padding-bottom: 5px;&quot;&gt;&amp;nbsp;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EC%9E%90%EC%BF%A0%EC%99%80%EB%8A%94%20%EB%8B%A4%EB%A5%B4%EB%8B%A4%20%EC%9E%90%EC%BF%A0%EC%99%80%EB%8A%94&quot; title=&quot;자쿠와는 다르다 자쿠와는&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); background-color: transparent;&quot;&gt;그리드 컴퓨팅과는 다르다, 그리드 컴퓨팅과는!&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;왠지&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EA%B7%B8%EB%A6%AC%EB%93%9C%20%EC%BB%B4%ED%93%A8%ED%8C%85&quot; title=&quot;그리드 컴퓨팅&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;그리드 컴퓨팅&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;이라는 개념과 혼동하는 경우가 많은데, 분산처리라는 점에서는 같으나, 다음 면에서 큰 차이를 보이고 있다.&lt;/span&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;/p&gt;&lt;ul class=&quot;wiki-list&quot; style=&quot;box-sizing: inherit; margin: 0.4em 0px 0.4em 1.5em; list-style: inherit; padding-left: 0.5rem; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;li style=&quot;box-sizing: inherit; margin: 0.4em 0px; font-size: 0.9rem !important; list-style-position: inherit !important; list-style-image: inherit !important;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;그리드 컴퓨팅은 '분산'에, 클라우드 컴퓨팅은 '중앙집중'에 초점이 맞춰져 있다&lt;/span&gt;. 실제로 그&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;리드 컴퓨팅은 흩어져 있는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;컴퓨터의 여유자원을&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(9, 0, 255);&quot;&gt;인터넷으로&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;합쳐서&lt;/span&gt; 특정 프로그램을 돌리는 것&lt;/span&gt;이고, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;클라우드 컴퓨팅은&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(255, 0, 0);&quot;&gt;같&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;은 내부 네트워크 내&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;컴퓨터들의 자원을 합쳐&lt;/span&gt; 특정 프로그램들을 돌리는 것&lt;/span&gt;이다.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;클라우드 컴퓨팅은 협업&amp;nbsp;처럼 한 그룹에 있는 애들이 같이 으쌰으쌰해서 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;파워를 합치는 것 &lt;/span&gt;이고,&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그리드 컴퓨팅은 군대처럼&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;지가 해야될 일을 다른 애들한테 짬시키는 것&amp;nbsp;&lt;/span&gt;이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;여기까지만 들으면&amp;nbsp;거의&amp;nbsp;같지 않나 싶지만.. 클라우드 컴퓨팅은 자기 내부 그룹에서 하는 일이고, 그리드 컴퓨팅은 얼굴도 모르는 애들한테 막 시키고 난리를 친다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul class=&quot;wiki-list&quot; style=&quot;box-sizing: inherit; margin: 0.4em 0px 0.4em 1.5em; list-style: inherit; padding-left: 0.5rem; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;li style=&quot;box-sizing: inherit; margin: 0.4em 0px; font-size: 0.9rem !important; list-style-position: inherit !important; list-style-image: inherit !important;&quot;&gt;그리드 컴퓨팅은 자원 자체가 흩어져 있기 때문에 중간에&amp;nbsp;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%ED%95%B4%EC%BB%A4&quot; title=&quot;해커&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); background-color: transparent;&quot;&gt;해커&lt;/a&gt;가 개입될 수 있지만, 클라우드 컴퓨팅은 자원이 중앙집중 및 가상화되어 있기 때문에 이런 일이 불가능하다. 클라우드를&amp;nbsp;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%ED%95%B4%ED%82%B9&quot; title=&quot;해킹&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); background-color: transparent;&quot;&gt;해킹&lt;/a&gt;하려면 어차피 네트워크 전체를 침입해야 하는데, 중간에&amp;nbsp;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%B0%A9%ED%99%94%EB%B2%BD&quot; title=&quot;방화벽&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); background-color: transparent;&quot;&gt;방화벽&lt;/a&gt;에 막히기라도 하면 말짱 도루묵. 또한 클라우드 컴퓨팅은 용량과 성능의 제약에서 벗어나게 되므로 운영체제 레벨의 보안 처리와 함께 예외처리 떡칠을 해버리게 되면 암호 문제나 내부적인 문제를 제외한 모든 침입면에서는 해커들이 떡실신 당하게 된다. 물리적으로 데이터 센터 내부에 직접 접속하거나 협조를 얻으면 몰라도, 최소한 단말기로 하려는 원격 소프트웨어 해킹 시도는 불가능에 가까울 것이다.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;또한&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EC%8A%88%ED%8D%BC%EC%BB%B4%ED%93%A8%ED%84%B0&quot; title=&quot;슈퍼컴퓨터&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;슈퍼컴퓨터&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;와도 혼동하는 일이 있는데, 슈퍼컴퓨터는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;전용 OS&lt;/span&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;를 이용하여 모든 노드를 하나로 묶는 반면 클라우드 컴퓨팅은 각 노드마다 OS가 따로 깔리고 상호간 처리는 클라우드 미들웨어 간의 네트워크 전송으로 해결한다. 물론 슈퍼컴퓨터를 여러대 연결해서 그걸 클라우드 컴퓨팅으로 돌리는 것도 가능하고, 외부에서 보면 슈퍼컴퓨팅이나 클라우드 컴퓨팅이나 그게 그거다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/2000%EB%85%84%EB%8C%80&quot; title=&quot;2000년대&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;2000년대&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;들면서 급부상한 IT떡밥 중 하나이나, 정작 통신 보안쪽으로는 크게 골머리다. 클라우드 컴퓨팅 환경에서는 사용자의 개인 정보가 클라우드에 저장되면 사실상 사용자가 그 정보의 위치를 통제할 수 없기 때문.&lt;/span&gt;&lt;a class=&quot;wiki-fn-content&quot; title=&quot;이 점은 OwnCloud라는 설치형 클라우드 스토리지를 쓰면 어느 정도 해결되긴 한다. 일단 파일이 자신 혹은 아는 사람의 웹서버 디렉터리 내에 저장되니 정보 위치 통제가 쉬워진다. 대신 다른 클라우드 스토리지보다 삽질이 귀찮을 뿐이지... 다른 클라우드 스토리지에선 가입만 하면 장땡이나, 이놈은 웹 서버 프로그램 깔고, PHP, MySQL 깔고 필요하면 자체 설정까지 해야 되는 물건이다.&quot; href=&quot;https://namu.wiki/w/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C%20%EC%BB%B4%ED%93%A8%ED%8C%85#fn-5&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-size: 0.8em; vertical-align: super; font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif;&quot;&gt;&lt;span class=&quot;target&quot; id=&quot;rfn-5&quot; style=&quot;box-sizing: inherit;&quot;&gt;&lt;/span&gt;[5]&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;이를&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EB%A6%AC%EC%B2%98%EB%93%9C%20%EC%8A%A4%ED%86%A8%EB%A8%BC&quot; title=&quot;리처드 스톨먼&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;리처드 스톨먼&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;이 딱 한 단어,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;덫&lt;/span&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;(Trap)으로 지적한 바 있다. 덧붙여 사실상의 처리를 사용자의 시스템에서 처리하지 않기 때문에, 통상 시스템에 비해 트래픽이 증가하게 된다.&amp;nbsp;&lt;/span&gt;&lt;del style=&quot;box-sizing: inherit; color: gray; font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EC%9D%B8%ED%84%B0%EB%84%B7%20%EC%A2%85%EB%9F%89%EC%A0%9C&quot; title=&quot;인터넷 종량제&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); background-color: transparent;&quot;&gt;인터넷 종량제&lt;/a&gt;라도 시행했다간...컴퓨터를 켜는 거 자체가 요금&lt;/del&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;그나마 대부분의 트래픽이 클라우드 내에서 처리될 수 있다는 점에선 그리드 컴퓨팅에 비해 약과. 그리드 컴퓨팅의 경우 처리되는 모든 트래픽을 떠안아야 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;여하튼 가벼움이 가장 큰 장점이고,&amp;nbsp;&lt;/span&gt;&lt;del style=&quot;box-sizing: inherit; color: gray; font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;보안 전문가들이&amp;nbsp;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EA%B3%B5%EB%B0%80%EB%A0%88&quot; title=&quot;공밀레&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); background-color: transparent;&quot;&gt;공밀레&lt;/a&gt;가 되는 대신에&lt;/del&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;일반 사용자는 보안에 그다지 신경을 쓸 필요도 없기에 MS의&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/Microsoft%20Azure&quot; title=&quot;Microsoft Azure&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;Microsoft Azure&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;를 필두로 여러 곳에서 적극 도입이 진행 중.&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EC%95%84%ED%8C%8C%EC%B9%98&quot; title=&quot;아파치&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;아파치&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;재단의 프로젝트인&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-external&quot; href=&quot;http://hadoop.apache.org/&quot; target=&quot;_blank&quot; title=&quot;http://hadoop.apache.org&quot; style=&quot;box-sizing: inherit; color: rgb(0, 153, 0); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;Hadoop&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&amp;nbsp;및 관련 프로젝트들은 이걸 오픈소스로 구현한 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;클라우드 컴퓨팅에는 개인목적으로 저장해둔 데이터들이 사용자 본인이 아무리 관리를 철저하게 한다 해도 하루아침에 사라지거나, 전혀 상관없는 제3자에게 공개될 수 있는 매우 치명적인 단점이 존재한다. 이러한 문제가 발생하는 원인은 전적으로 당신의 데이터를 관리하는 회사에게 있다. 즉 클라우드를 관리하는 회사가&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;망하거나, 변심하거나, 관리를 소홀히 한다면&lt;/span&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-internal&quot; href=&quot;https://namu.wiki/w/%EC%9D%8C%EB%AA%A8%EB%A1%A0&quot; title=&quot;음모론&quot; style=&quot;box-sizing: inherit; color: rgb(2, 117, 216); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;음모론&lt;/a&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;처럼 들리는 이 단점이 곧바로 현실이 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;관리소홀로 인해 데이터가 통째로 증발한 사례는 이미 현실에서 실현되었다.&amp;nbsp;&lt;/span&gt;&lt;a class=&quot;wiki-link-external&quot; href=&quot;http://ddaily.co.kr/cloud/view.php?id=94571&quot; target=&quot;_blank&quot; title=&quot;http://ddaily.co.kr/cloud/view.php?id=94571&quot; style=&quot;box-sizing: inherit; color: rgb(0, 153, 0); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;일본 퍼스트서버 사고&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;가 그것이다. 클라우드 서비스 업체가 5698개 기업의 데이터를 몽땅 날려먹은 초대형 사고가 발생하였다.&lt;/span&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;차라리 망하면 다행인데 더 끔찍한 비극은 클라우드를 관리하는 회사가&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;임의로 사용자의 정보를 제3자에게 제공하는 경우다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;구름이란 의미답게 정의도 뜬구름 잡는 듯한 것이 많다. 용어 자체가 굉장히 넓은 범위를 포함하고 있으며, 사람마다 정의하는 의미가 전부 다르다. 실제로 관련 서적을 봐도, 기본적인 내용은 다 같을지라도 세부적인 정의가 전부 다 다르다.&lt;/span&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;br style=&quot;box-sizing: inherit; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;K모 대학에서 관련된 강의를 했었던 기업에서 실무를 담당하고 있는 누군가의 말을 빌리자면, &quot;누군가와 클라우드 컴퓨팅에 대해 토의할 일이 있으면 시간의 80%를&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: inherit; font-weight: 700; color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;그 사람이 생각하는 클라우드와, 내가 생각하는 클라우드를 비교하는데 쓴다&lt;/span&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: 'Open Sans', arial, 'Apple SD Gothic Neo', 'Noto Sans Korean', 본고딕, 'KoPubDotum Medium', 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, 'Malgun Gothic', sans-serif; font-size: 14.4px; line-height: 21.6px;&quot;&gt;&quot;라고 했을 정도로 사람마다, 기업마다, 부서마다 생각하는 게 다르다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/273</guid>
<comments>https://genesis8.tistory.com/273#entry273comment</comments>
<pubDate>Thu, 24 Mar 2016 14:07:19 +0900</pubDate>
</item>
<item>
<title>MySql DB 작성해보기</title>
<link>https://genesis8.tistory.com/266</link>
<description>&lt;p&gt;Mysql 설치부터 말썽이더니.. 이번에는 접속이 제대로 안됬다.&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;Workbench를 이용하려는데 접속이 안되서 무엇인고 하니.. MySql 자체를 실행을 안해서 그랬다;;;;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2475094C56E57B5F23&quot; filemime=&quot;image/jpeg&quot; filename=&quot;x.PNG&quot; height=&quot;327&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ㄴ 요 창 보기 싫으면 반드시 관리자 권한으로&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;가동한 후&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;net start mysql로 키고 net stop mysql로 끄거나 할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다 필요없고, Mysql Notifier라는 프로그램으로 원버튼 클릭에 껐다 켰다 할 수 있으니 그것도 좋다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2413FD4D56E57BE938&quot; filemime=&quot;image/jpeg&quot; filename=&quot;xx.PNG&quot; height=&quot;269&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;테스트용으로 db를 작성해보려는데..&amp;nbsp;localhost가 아닌 127.0.0.1를 입력하는 참사를 일으켰다.&amp;nbsp;그러지 말고 정상적으로 localhost를 입력했더니 정상적으로 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;schema를 작성하려고 하니..&amp;nbsp;&lt;/p&gt;&lt;p&gt;name과&lt;/p&gt;&lt;p&gt;collation 이라는 것이 나온다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/262E6F4F56E57CC718&quot; filemime=&quot;image/jpeg&quot; filename=&quot;xxx.PNG&quot; height=&quot;269&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;collation은 사전을 보니&amp;nbsp;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;①&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000018020&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;대조&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;②&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kkw000041702&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;간단한&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000045104&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;식사&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;③&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000065239&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;조사&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;라는 의미로 나온다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;찾아보았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처 :&amp;nbsp;http://blog.daum.net/warmfeel/106&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ol style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;문자셋(Character Set)&lt;ul&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;말 그대로 특정 '문자(좀 더 정확히는 symbol)'가 컴퓨터에 저장될 때 어떠한 '코드'로 인코딩되어 저장될 것인지에 대한 규칙이 정의되어있는 집합을 말함. (&lt;font color=&quot;#ff0000&quot;&gt;A&amp;nbsp;&lt;em class=&quot;firstterm&quot;&gt;&lt;strong&gt;character set&lt;/strong&gt;&lt;/em&gt;&amp;nbsp;is a set of symbols and encodings.&lt;/font&gt;)&amp;nbsp;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;대표적인 것으로는 ASCII, 한글을 지원하는 EUC-KR, 유니코드 UTF-8, UTF-16 등이 있음.&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;문자셋은 자신이 처리할 문자 집합이 얼마나 큰가에 따라 하나의 '문자'를 저장하는데 필요한 저장공간의 크기가 달라지게 된다. 또한 항상 모든 문자들을 동일한 크기로 인코딩하는 고정폭 방식의 문자셋이 있는가하면, EUC-KR(1~2바이트)이나 UTF-8(1~3바이트)과 같이 가변폭 방식의 인코딩을 사용하는 문자셋도 있다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;콜레이션(Collation)&lt;/span&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;이것은 특정 문자셋에 의해 데이터베이스에 저장된 값들을 검색하거나 정렬 등의 작업을 위해 문자들간에 서로 '비교'할때 사용하는 규칙들의 집합이다. (&lt;font color=&quot;#ff0000&quot;&gt;A&amp;nbsp;&lt;em class=&quot;firstterm&quot;&gt;&lt;strong&gt;collation&lt;/strong&gt;&lt;/em&gt;&amp;nbsp;is a set of rules for comparing characters in a character set.&lt;/font&gt;) 따라서, 일반적인 Data Type에는 적용되지 않고, CHAR, VARCHAR, TEXT와 같은 데이터 타입을 가지는 칼럼들에 대해서만 적용된다.&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;주로 대소문자를 구별하는 binary 형식을 사용할 것인지, 대소문자를 구별하지 않는 Case Insensitive 형식을 사용할 것인지로 나누어진다. Case Insensitive 형식을 사용하는 collation들은&amp;nbsp;모두 collation 이름의 끝에 'ci'라는 문자가 붙어있다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;'특정 문자 셋'에 의해 &lt;/span&gt;DB에 저장된 값들을 검색 , 정렬등을 위해 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;문자들을&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;'비교'할 때 사용되는 규칙의 집합&lt;/span&gt;...&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;특별히, MySQL에서의 문자셋과 collation 에 대한 문제는 단순히&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#0075c8&quot; style=&quot;font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;데이터를 저장하는 공간에 대한 관점&lt;/font&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;만이 아니라,&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#0075c8&quot; style=&quot;font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;MySQL 서버와 MySQL 서버에게 요청을 하는 클라이언트 사이에 주고받는 상호작용에 대한 관점&lt;/font&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;까지도&amp;nbsp;포함한다는 것을 꼭 기억할 필요가 있다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;데이터를 저장하는&amp;nbsp;관점 : MySQL은&amp;nbsp;&lt;font color=&quot;#0075c8&quot;&gt;Server 레벨, Database 레벨, Table 레벨, Column 레벨&lt;/font&gt;까지 총 4개의 레벨을 지원하는 특징을 가지고 있음.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;서로 지원하는 문자 규칙이 안맞는 경우 아예 변환 자체도 불가능한데 (가까운 예로 ANSI와 UTF-8) 클라이언트 (주로 웹)와의 상호 작용에 대한 관점 까지 포함하는 듯 하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;서버와 클라이언트간의 상호작용 관점 : MySQL은 이&amp;nbsp;관점에서 문자셋과 관련한 총 3개의&amp;nbsp;서로 다른 타입을 제공한다.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;character_set_&lt;font color=&quot;#0075c8&quot;&gt;client&lt;/font&gt;&amp;nbsp;: 클라이언트에서 문장이 떠날 때 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;해당 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;문장은 어떤 문자셋&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;으로 이루어져있는&lt;/span&gt;가의 문제&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;character_set_&lt;font color=&quot;#0075c8&quot;&gt;connection&lt;/font&gt;&amp;nbsp;: 클라이언트에서 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;넘어온 문장을 서버에서는 어떤 문자셋을 기준으로 해석&lt;/span&gt;해야하는가의 문제.&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;character_set_&lt;font color=&quot;#0075c8&quot;&gt;results&lt;/font&gt;&amp;nbsp;:&amp;nbsp;서버에서 클라이언트로 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;응답을 넘겨줄때 어떤 문자셋으로 넘겨야하는가&lt;/span&gt;의 문제.&lt;/li&gt;&lt;/ul&gt;&lt;ol style=&quot;color: rgb(51, 51, 51); font-family: 굴림, gulim, verdana, sans-serif; line-height: 15.6px;&quot;&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;따라서, 데이터베이스 레벨에서 euckr 문자셋이 기본값으로 지정되어있는 데이터베이스를 생성한 후 해당 데이터베이스에 데이터를 잘 입력하였는데 이상하게 브라우저로 넘기면&amp;nbsp;&lt;u&gt;데이터베이스에서 읽어온 문자만 글자가 깨지는 상황이 벌어진다면&lt;/u&gt;(브라우저의 인코딩 설정 등은 정상적이라고 가정) 다음과 같이 체크해봐야 한다.&lt;/font&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;Database 레벨, Table 레벨, Column 레벨에서 원하는 문자셋으로 잘 지정되어있는지를 확인&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;client, connection, results 에서의 문자셋도 적절하게&amp;nbsp;지정되어있는지를 확인. (&lt;u&gt;대개 글자가 깨지는 경우라면, 아마도 이쪽이 잘못 지정되어있을 가능성이 높다&lt;/u&gt;)&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;SQL 문장 중에 'SET NAMES euckr [COLLATE collation_name]'을 사용하면&amp;nbsp;앞에서 살펴본 client, connection, results 3가지에 대한 문자셋을 한꺼번에 지정해줄 수 있음. (서버 실행중에도 변경이 가능. 단, 서버 실행중에 SQL 문장으로 변경하는 것은 영구 변경이 아니라 현재 연결에 한해서만 임시로 변경하는 것임)&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;임시 변경이 아닌 영구 변경을 하려면, MySQL 서버가 처음 시작할 때 참고하는 my.cnf 환경설정 파일내에 'init_connect=SET NAMES euckr' 이런식으로 지정해두면 됨.&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;이렇게 영구 변경과 임시 변경 방법을 활용하면 좀 더 다양한 응용이 가능해진다.&lt;ul&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;font color=&quot;#0075c8&quot;&gt;서버가 시작하는 단계에서 지정하는 경우&lt;/font&gt;&amp;nbsp;: 대개 환경설정 파일인 my.cnf 파일에서 'init_connect=SET NAMES euckr' 명령어로 지정. 이렇게 했을때는 해당 서버를 사용하는 모든 애플리케이션들에게 이 설정이 기본값으로서의 영향을 미친다.&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;font color=&quot;#0075c8&quot;&gt;시작 단계가 아니라 서버가 실행중에 데이터베이스 별로 다른 문자셋을 사용하도록 지정하는 경우&lt;/font&gt;&amp;nbsp;: 일단 클라이언트가 서버로 연결을 한 이후에 곧바로 'SET NAMES euckr' 명령어를 실행시켜서&amp;nbsp;현재 연결에 대한 연결 관련 문자셋들을 수정해놓고 시작한다.&amp;nbsp;&lt;font color=&quot;#0075c8&quot;&gt;&lt;u&gt;이렇게 하면, 각각의 데이터베이스별로 서로 다른 연결 관련 문자셋을 지정할 수 있게 됨(!!!)&lt;/u&gt;&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;즉, 동일한 서버내에서 대부분의 애플리케이션은&amp;nbsp;utf-8 문자셋을 사용하는데 특정 애플리케이션만&amp;nbsp;euckr 문자셋을 사용하고자 할 경우에 위와 같은 방법을 사용하면 가능.&lt;/font&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;참고로, PHP에서 사용하는 mysqli 확장에서는 'SET NAMES ...'를 query 메소드로 실행시키는 방법 이외에&amp;nbsp;'set_charset' 이라는&amp;nbsp;더 나은 메소드를 통해서 동일한 효과를 얻을 수도 있음.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;(질문) PHPMyAdmin에서 새로운 데이터베이스를 생성할 때, 해당 데이터베이스에서 사용할 Default collation 만을 지정하게 되는데... 그렇다면, 해당 데이터베이스이 Default Character Set은 어떻게 되는 것일까?&lt;ul&gt;&lt;li style=&quot;line-height: 1.3;&quot;&gt;(대답) 뭐... 당연한 이야기겠지만, Default collation 만을 지정하게 되면 해당 collation이 속해있는 Character Set이 자동으로 그 데이터베이스의 Default Character Set으로 지정됨. 물론, PHPMyAdmin의 GUI 방식을 사용하지 않고, 직접 DDL 문장을 사용하면 하나 하나 별도로 지정해줄 수도 있음. 또한, PHPMyAdmin에서 데이터베이스를 생성할 때, Default collation 조차도 지정하지 않게 되면, 당연히 MySQL의 환경설정 파일인 my.cnf(또는 my.ini)에서 지정되어있는 시스템의 기본적인 Character Set이 적용되게 되며 Collation은 해당 Character Set의 Default collation이 적용되게 됨.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결론적으로 내가 이 db의 데이터를 어떤 문자셋으로 관리할 것인지, 또 그것과 상호작용할 대상은 누구인지를 생각하고 써야하는 것 같다. 이번에 해보려고 한 것은 웹에서 구동되게&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;만들어보려 했으니, UTF-8을 선택하게 되었다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;예약하는 것을 만들어보려고 했는데, 해당 날짜에 존재하는 몇 곳 테이블(자리)에 대한 작성이었기 때문에 같은 날짜의 행이 있을 수 없고, 그것을 기반으로 테이블이 딸려오기 때문에 날짜(date)를 PK 값으로 잡고, 나머지는 예약이 있을 수도 없을 수도 있기에&amp;nbsp;NOT NULL을 설정하지 않을까&amp;nbsp;하였으나.. 무결성이 날아가는 것 같아 &quot;&quot;라도 쓰도록 NOT NULL을 강제했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2312893B56E584DE2B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;캡처.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;상당히 단촐한 테이블 구성이 완료되었는데, 이곳에 쓰일 SP를 작성하면 DB에서의 작업은 거의 끝난 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/266</guid>
<comments>https://genesis8.tistory.com/266#entry266comment</comments>
<pubDate>Sun, 13 Mar 2016 23:57:51 +0900</pubDate>
</item>
<item>
<title>php 기초 실습</title>
<link>https://genesis8.tistory.com/265</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2615554C56E4F1B21E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2318394C56E4F1B31C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2502634C56E4F1B428&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;내가 원한 것과 달리 한글이 특수문자로 번역되어 나온다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2122814C56E4F1B512&quot; filemime=&quot;image/jpeg&quot; filename=&quot;5.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음의 설정을 해주자. 인코딩 방식을 변경해주지 않으면&amp;nbsp;웹 환경에서 한글을 원활히 쓸 수가 없다. (아마도 iis와 파일 사이의 문제인듯 ..)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;-&amp;gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;.NET 에서는 문자열 처리를 명시적으로 지정하지 않는 한, 기본적으로 &quot;System.Text.UTF8Encoding&quot; 으로 처리를 합니다. 문제는 거기서 발생을 하지요.&lt;/span&gt;&lt;br style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;&lt;br style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;&lt;span style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;해당 HTML 텍스트 한글 파일은 메모장에서 &quot;ASCII&quot;&amp;nbsp;형식으로 저장된 것이었고, 디코딩을 UTF-8 로 해버리니 당연히 깨질 수 밖에 없습니다.&lt;/span&gt;&lt;br style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: 'Malgun Gothic', Consolas, Verdana; line-height: normal;&quot;&gt;라는 답변을 찾을 수 있었다. ANSI를 말하는 것인 듯하다. ASCII 표준에 각국에 맞는 상태로 변경을 한다고 하니..&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2228414E56E4F58A17&quot; filemime=&quot;image/jpeg&quot; filename=&quot;6.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;작은 따옴표에서는 특수문자(\n 등)와&amp;nbsp;변수가 작동을 안한다는 강좌의 내용을 확인한다.&lt;/p&gt;&lt;p&gt;웹 페이지 상에서는 \n가 안 먹히길래 보니까.. &amp;lt;BR&amp;gt;로 개행할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/25531C3956E4FBAB1F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;7.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2260F23956E4FBAB13&quot; filemime=&quot;image/jpeg&quot; filename=&quot;8.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;배열은 다른 언어와 다를 게 없다... 고 하는 데 출력이 좀 웃긴다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/256A994456E5153621&quot; filemime=&quot;image/jpeg&quot; filename=&quot;9.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/216C664456E515371F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;10.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1차원 배열은 변수와 마찬가지로 &quot; &quot; 내부에 작성하게 될 경우 정상적으로 값이 보이는 반면,&lt;/p&gt;&lt;p&gt;2차원 배열은 저처럼 ehco $arr[0][0] 과 같이 해주지 않으면 arr 0 과 같이 값이 보인다..&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;마치 값이 아니라 포인터를 출력하고 있는 듯한 느낌인데.. 이거야 원..&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;아무튼 다음은 클래스다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;php도 c와 마찬가지로 클래스를 구성할 수 있다.&lt;/p&gt;&lt;p&gt;심지어 기호도 -&amp;gt;다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/24682C4156E52E3C09&quot; filemime=&quot;image/jpeg&quot; filename=&quot;13.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2159034156E52E3C19&quot; filemime=&quot;image/jpeg&quot; filename=&quot;14.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;클래스 내에서 변수를 사용한다면 꼭 $this-&amp;gt;a 와 같이 해주어야한다. 그 사실을 모르고 찾으니 암에 걸릴 뻔.. 친절한 분들 감사하다. 연산자는 애로우연산자는 물론 스코프 연산자(::)도 &amp;nbsp;c와 같은 방식으로 사용한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음은 폼이다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2107E73356E529CC35&quot; filemime=&quot;image/jpeg&quot; filename=&quot;11.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/231C503356E529CC1C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;12.PNG&quot; height=&quot;269&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;폼을 이용할 때&amp;nbsp;&lt;span style=&quot;font-family: verdana; line-height: 19.2px;&quot;&gt;register_globals 옵션을 안 키면 겪는 여러 문제 때문에 헤맸는데, 보안적인 문제 ex) 비밀번호가 맞으면 이동을 위해 지역 플래그를 변경하는 코드일 때, 그것을 전역에서 간섭할 수 있는 문제.. 같은 문제가 있으므로 키지 않고 쓰는 코딩 습관이 옳다고 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/265</guid>
<comments>https://genesis8.tistory.com/265#entry265comment</comments>
<pubDate>Sun, 13 Mar 2016 18:57:16 +0900</pubDate>
</item>
<item>
<title>php 입문 사전 지식</title>
<link>https://genesis8.tistory.com/264</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:489px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/23335A3A56E4ADC803&quot; filemime=&quot;image/jpeg&quot; filename=&quot;cgi.jpg&quot; height=&quot;97&quot; width=&quot;489&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;CGI는 위와 같은 구조를 가지는데.. ( HTML은 1과 4의 과정만 있음 )&lt;br /&gt;보시는 바와 같이 HTML 보다 한단계 더 처리를 함으로써 계산과 처리 기능이 추가되었습니다.&amp;nbsp;이로인해 우리는 정적인 변화 없는 웹 페이지에서 변화가 자유롭고 방문자와 홈페이지 제작자간에&amp;nbsp;서로 상호작용이 가능한 웹 페이지를 만들 수 있게 된 것입니다.&lt;br /&gt;그러나 여기서 주의해야 할 점은 3번에서 보듯이 CGI로 처리된 값은 HTML로 전송되어 집니다.&lt;br /&gt;웹 브라우저는 HTML밖에 모르니 HTML로 바꿔서 보여줘야 하는 것입니다.&lt;br /&gt;( PHP를 하려면 당연히 HTML을 알고 있어야겠죠? )&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;font color=&quot;black&quot;&gt;&lt;b&gt;그러면 CGI와 PHP는 어떤 관계인가?&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; color: rgb(255, 0, 0);&quot;&gt;PHP는 약간 다르긴 하지만 일종의 CGI라고 볼 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;CGI는 일반적으로 웹서버로 요청이 들어오면 CGI 프로그램을 실행하여 하나의 프로세스를 생성하고&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;그 처리 결과를 웹서버로 전송한 후 프로세스가 종료되는 형식입니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;100개의 요청이 들어오면 CGI 프로세스가 100개가 생성이 됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; line-height: 19.2px;&quot;&gt;&lt;br style=&quot;font-family: verdana; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;PHP는 CGI와 달리 아파치 웹서버에 모듈로 장착되어 있습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;따라서 매회 실행시마다 프로세스가 생성되는 CGI와 달리 하나의 프로세스에 여러개의&amp;nbsp;쓰레드를 생성하여&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;처리가 가능합니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;그래서 프로세스방식인 CGI 보다 쓰레드방식인 PHP가 성능이 우수합니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;font size=&quot;2&quot; color=&quot;black&quot;&gt;&lt;b&gt;PHP는 무엇인가?&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;PHP (공식적 PHP Hypertext Preprocessor) 는 Server - side HTML-embedded 스크립트 언어입니다.&lt;br /&gt;즉, PHP는 서버에서 실행되며 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;HTML을 포함한 스크립트 언어&lt;/span&gt;라는 말입니다.&lt;br /&gt;HTML을 포함하고 있기 때문에 HTML 파일을 PHP 확장자 (.php )로 저장하여도 아무 지장없이 사용할 수 있습니다.&lt;/font&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;img src=&quot;http://www.ezphp.net/lect/39/img/example1-1.jpg&quot; width=&quot;354&quot; height=&quot;142&quot; border=&quot;0&quot;&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; font-size:10pt; line-height: 19.2px;&quot;&gt;시작(&amp;lt;?php)과 끝 태그(?&amp;gt;)를 이용하여 HTML과 PHP를 구분합니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; color: rgb(9, 0, 255); background-color: rgb(255, 255, 225);&quot;&gt;php도 세미콜론으로 한 문장을 파악하므로 줄의 끝에는 세미콜론이 필요.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;주석은 // , # , /* */&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;font color=&quot;black&quot;&gt;&lt;b&gt;Type (변수형)&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;진리값&amp;nbsp;, 정수 , 실수 , 문자열 , 배열 , 객체 , 리소스 , 널&lt;/b&gt;&amp;nbsp;총 8가지의 변수형&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;table border=&quot;1&quot; cellpadding=&quot;3&quot; cellspacing=&quot;0&quot; bordercolor=&quot;#999999&quot; bordercolordark=&quot;white&quot; bordercolorlight=&quot;black&quot; style=&quot;font-family: verdana;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;#CCCCCC&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;b&gt;특수문자&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;#CCCCCC&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;b&gt;의미&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;\n&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&amp;nbsp;개행문자 ( 줄 바꿈 )&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;\r&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&amp;nbsp;캐리지 리턴&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;\\&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&amp;nbsp;역 슬래쉬&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana; height: 27px;&quot;&gt;&lt;p style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;\t&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana; height: 27px;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&amp;nbsp;수평 탭&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;\&quot;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&amp;nbsp;따옴표&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;83&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;\$&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;226&quot; bgcolor=&quot;white&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&amp;nbsp;달러 표시&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p align=&quot;left&quot; style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&amp;lt;php?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;안의 내용이 php 내용이 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;2) 따옴표 내의 변수사용&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;큰 따옴표내에서는 변수의 사용이 가능합니다.&lt;br /&gt;예를 들어 $name 이라는 변수에 &quot;조명진&quot; 이라는 문자열이 저장되어 있다면,&lt;br /&gt;&lt;font color=&quot;blue&quot;&gt;$str&lt;/font&gt;&amp;nbsp;=&amp;nbsp;&lt;font color=&quot;#CC0000&quot;&gt;&quot;나의 이름은 $name입니다.&quot;;&lt;/font&gt;&lt;br /&gt;라고 하였을 때&amp;nbsp;&lt;font color=&quot;#0033FF&quot;&gt;$str&lt;/font&gt;&amp;nbsp;=&amp;nbsp;&lt;font color=&quot;#CC0000&quot;&gt;&quot;나의 이름은 조명진입니다.&quot;;&amp;nbsp;&lt;/font&gt;와 같은 효과를 가지게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;2. 작은 따옴표&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;'나는 문자열이다.' 와 같이 작은 따옴표 안에 문자열을 넣으면 됩니다.&lt;br /&gt;작은 따옴표를 이용한 방법은 큰 따옴표를 이용할 때와 차이가 있는데,&lt;br /&gt;작은 따옴표 내부에 쓰여진 특수문자와 변수가 허용되지 않는 다는 것입니다.&lt;code style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font color=&quot;#0000cc&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;font color=&quot;#006600&quot;&gt;echo&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#cc0000&quot;&gt;'작은 따옴표 안에서는\n 특수문자와 변수가 $name 동작을 안해요.';&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;/code&gt;&lt;font color=&quot;black&quot;&gt;의 결과는 작은 따옴표 안에서는\n 특수문자와 변수가 $name 동작을 안해요. 처럼 그대로 표현됩니다.&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;3. 히어닥 문법&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;font color=&quot;#0033FF&quot;&gt;$str&lt;/font&gt;&amp;nbsp;=&amp;nbsp;&lt;font color=&quot;#006600&quot;&gt;&amp;lt;&amp;lt;&amp;lt;EOD&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#0033CC&quot;&gt;문자열이라네~&lt;br /&gt;나도 문자열이라네~&lt;/font&gt;&lt;font color=&quot;#006600&quot;&gt;&lt;br /&gt;EOD;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px;&quot;&gt;PHP에서는 0부터 시작하는 숫자형 인덱스와 foo 같이 문자로 구분하는 인덱스 두가지가 있습니다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;line-height: 14.4px; font-family: verdana;&quot;&gt;&lt;code style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;font color=&quot;#8b0000&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;?&lt;/font&gt;
&lt;font color=&quot;#0000ff&quot;&gt;class&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Human&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;{&lt;/font&gt;  &lt;font color=&quot;#228b22&quot;&gt;//인간 클래스를 정의 합니다.&lt;/font&gt;

        &lt;font color=&quot;#0000ff&quot;&gt;var&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;$&lt;/font&gt;&lt;font color=&quot;#008080&quot;&gt;Name&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;;&lt;/font&gt;
        &lt;font color=&quot;#0000ff&quot;&gt;var&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;$&lt;/font&gt;&lt;font color=&quot;#008080&quot;&gt;Age&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;;&lt;/font&gt;
        &lt;font color=&quot;#0000ff&quot;&gt;var&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;$&lt;/font&gt;&lt;font color=&quot;#008080&quot;&gt;Height&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;;&lt;/font&gt;
        &lt;font color=&quot;#0000ff&quot;&gt;var&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;$&lt;/font&gt;&lt;font color=&quot;#008080&quot;&gt;Weight&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;;&lt;/font&gt;  

        &lt;font color=&quot;#0000ff&quot;&gt;function&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Eat&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;(&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;)&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;{&lt;/font&gt; 먹는 행위를 함수로 정의 &lt;font color=&quot;#ff0000&quot;&gt;}&lt;/font&gt;
        &lt;font color=&quot;#0000ff&quot;&gt;function&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Walk&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;(&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;)&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;{&lt;/font&gt; 걷는 행위를 함수로 정의 &lt;font color=&quot;#ff0000&quot;&gt;}&lt;/font&gt;
        &lt;font color=&quot;#0000ff&quot;&gt;function&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Work&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;(&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;)&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;{&lt;/font&gt; 일하는 행위를 함수로 정의 &lt;font color=&quot;#ff0000&quot;&gt;}&lt;/font&gt;
        &lt;font color=&quot;#0000ff&quot;&gt;function&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Talk&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;(&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;$&lt;/font&gt;&lt;font color=&quot;#008080&quot;&gt;words&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;)&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;{&lt;/font&gt; 말하는 행위를 함수로 정의 &lt;font color=&quot;#ff0000&quot;&gt;}&lt;/font&gt;
&lt;font color=&quot;#ff0000&quot;&gt;}&lt;/font&gt;    

    $철수 &lt;font color=&quot;#ff0000&quot;&gt;=&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;new&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Human&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;;&lt;/font&gt; &lt;font color=&quot;#228b22&quot;&gt;//인간 클래스를 이용해 철수 객체를 생성&lt;/font&gt;
    $철수&lt;font color=&quot;#ff0000&quot;&gt;-&amp;gt;&lt;/font&gt;&lt;font color=&quot;#8b0000&quot;&gt;Eat&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;();&lt;/font&gt; &lt;font color=&quot;#228b22&quot;&gt;// 철수야!! 밥먹어라~!&lt;/font&gt;
    $철수&lt;font color=&quot;#ff0000&quot;&gt;-&amp;gt;&lt;/font&gt;&lt;font color=&quot;#8b0000&quot;&gt;Talk&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;(&lt;/font&gt;$철수&lt;font color=&quot;#ff0000&quot;&gt;-&amp;gt;&lt;/font&gt;&lt;font color=&quot;#008080&quot;&gt;Age&lt;/font&gt;&lt;font color=&quot;#ff0000&quot;&gt;);&lt;/font&gt; &lt;font color=&quot;#228b22&quot;&gt;// 철수야~ 몇살이야? 말해봐!!&lt;/font&gt;
&lt;font color=&quot;#ff0000&quot;&gt;?&amp;gt;&lt;/font&gt;&lt;/font&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;php에서는&amp;nbsp;클래스를 이렇게 정의한다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;상속도 있다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;line-height: 14.4px; font-family: verdana;&quot;&gt;&lt;code style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;font color=&quot;#8b0000&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;?&lt;/font&gt;
&lt;/font&gt;&lt;/code&gt;&lt;p&gt;&lt;font color=&quot;#0000ff&quot;&gt;class&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Baby&lt;/font&gt; &lt;font color=&quot;#0000ff&quot;&gt;Extends&lt;/font&gt; &lt;font color=&quot;#8b0000&quot;&gt;Human&lt;/font&gt; &lt;font color=&quot;#ff0000&quot;&gt;{&lt;/font&gt;  &lt;font color=&quot;#228b22&quot;&gt;//인간 클래스를 상속받아 아기 클래스를 정의 합니다.&lt;/font&gt;
 &lt;font color=&quot;#ff0000&quot;&gt;}&lt;/font&gt;    &lt;/p&gt;&lt;/pre&gt;&lt;pre style=&quot;line-height: 14.4px; font-family: verdana;&quot;&gt;&lt;code style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;font color=&quot;#8b0000&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;?&amp;gt;&lt;/font&gt;&lt;/font&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;static은 지역 변수 허용,&lt;/p&gt;&lt;p&gt;전역 변수는 전역 위치에 선언하되 지역변수와 혼선시&amp;nbsp;global $a와 같이&amp;nbsp;식별가능&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-family: verdana; line-height: 19.2px;&quot;&gt;define(&quot;상수명&quot;,&quot;상수에 저장될 값&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-family: verdana; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-family: verdana; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;미리 정의된 변수&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;변수에는 우리가 만들어 사용할 수 있는 변수와 미리 정의되어진 변수가 있습니다.&lt;br /&gt;우선 미리 정의된 변수는 서버 종류, 버전 등이나 기타 환경에 따라 변하는 변수들입니다.&lt;br /&gt;아파치와 PHP 각각 몇 개의 변수를 지정해 놓은 상태이며 이 변수들은 우리가 인위적으로 값을&lt;br /&gt;수정하거나 일반 변수로 사용할 수 없습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;수퍼 전역변수&lt;/b&gt;&lt;/p&gt;&lt;table border=&quot;1&quot; cellpadding=&quot;3&quot; cellspacing=&quot;0&quot; width=&quot;518&quot; bordercolordark=&quot;white&quot; bordercolorlight=&quot;black&quot; style=&quot;font-family: verdana;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width=&quot;119&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;$_G&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ET&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;383&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;HTTP GET 방식으로 넘어온 변수&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;119&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;$_POST&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;383&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;HTTP POST 방식으로 넘어온 변수&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;119&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;$_COOKIE&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;383&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;HTTP 쿠키 변수&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;119&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;$_FILES&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;383&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;업로드시 파일 정보 변수&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;119&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana; height: 27px;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;$_SESSION&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;383&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana; height: 27px;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;세션 변수&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;119&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;$_SERVER&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;383&quot; align=&quot;center&quot; style=&quot;font-size: 9pt; line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;p align=&quot;left&quot; style=&quot;font-size: 9pt; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;웹서버와 PHP 환경에서의 환경 설정 변수&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;&lt;b&gt;외부로 부터의 변수&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 19.2px; font-family: verdana;&quot;&gt;내부에 선언없이 외부로부터 넘어오는 변수입니다.&lt;br /&gt;예제를 보시면 이해가 가실 겁니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;font face=&quot;verdana&quot;&gt;출처 : http://www.ezphp.net/lecture/lecture5.php&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;였었는데..&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;보던 곳이 &amp;lt;?php 와 &amp;lt;?에 의한 문제 발생이라던가, 코드가 제대로 실행되지 않는 등.. 상태가 좋지 않아 다른 곳으로.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 225); line-height: 19.2px;&quot;&gt;&lt;font face=&quot;verdana&quot;&gt;출처 : http://www.apmsetup.com/php.php&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;논리 연산자&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;$a and $b&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;:&amp;nbsp;&amp;nbsp;$a 와 $b 가 모두 참(true) 이면 참(true)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;$a or $b&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;:&amp;nbsp;&amp;nbsp;$a 와 $b 중 하나라도 참(true) 이면 참(true)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;$a xor $b&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;:&amp;nbsp;&amp;nbsp;$a 와 $b 중 하나만 참(true) 이면 참(true)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;!$a&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;:&amp;nbsp;&amp;nbsp;$a 가 참(true) 이면 거짓(false), 거짓(false) 이면 참(true)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;$a &amp;amp;&amp;amp; $b&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;:&amp;nbsp;&amp;nbsp;$a 와 $b 가 모두 참(true) 이면 참(true)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;$a || $b&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;:&amp;nbsp;&amp;nbsp;$a 와 $b 중 하나라도 참(true) 이면 참(true)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;$_POST[변수명]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;$_POST[$변수명] -&amp;gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 19.2px;&quot;&gt;PHP 설정 파일 (ini)의 register_globals = on 인 상태에서만 가능하다.&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px;&quot;&gt;register_globals를 켜면 변수등을 사용할 때 앞에 _SERER 등을 안 붙이거나 하는 등 전역변수를 편히 쓸 수 있지만.. 안전성이 떨어진다고 한다/&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;div&gt;&lt;font face=&quot;verdana&quot;&gt;&lt;span style=&quot;line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;산술 , 대입 연산은 동일하니 생략.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;비교 연산은 다음과 같이 한다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-family: 굴림, 돋움, verdana;&quot;&gt;if($a == &quot;hi&quot; &amp;amp;&amp;amp; $b == &quot;bye&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;switch case도 동일하다. $변수 로 넣어야한다는 것 뿐..&lt;/p&gt;&lt;p&gt;그 외의 경우를 의미하는 default도 그대로다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;include 제어문&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&amp;lt;header.inc&amp;gt;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br /&gt;&amp;lt;?&lt;br /&gt;$string = &quot;Hello World&quot;;&lt;br /&gt;?&amp;gt;&lt;br /&gt;&lt;/font&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&amp;lt;output.php&amp;gt;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-family: 굴림, 돋움, verdana;&quot;&gt;&lt;br /&gt;&amp;lt;?&lt;br /&gt;include &quot;./header.inc&quot;;&lt;br /&gt;&lt;br /&gt;echo(&quot;$string&quot;);&lt;br /&gt;?&amp;gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;class는 C와 같으며, 상속은 자바와&amp;nbsp;같이 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;extends &lt;/span&gt;를 사용한다.&lt;/p&gt;&lt;p&gt;상위 클래스 접근 시 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;parent &lt;/span&gt;키워드를 사용할면 된다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;심지어 접근 연산자 (access modifier)도 있다;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; line-height: 19.2px; background-color: rgb(255, 255, 225);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/264</guid>
<comments>https://genesis8.tistory.com/264#entry264comment</comments>
<pubDate>Sun, 13 Mar 2016 13:50:25 +0900</pubDate>
</item>
<item>
<title>도구 상자가 보이지 않는다!!!</title>
<link>https://genesis8.tistory.com/263</link>
<description>&lt;p&gt;Visual Studio 2010 도구상자 문제 해결&lt;/p&gt;&lt;p&gt;어느 날 상용 컴포넌트를 추가 삭제 하다 보니&lt;/p&gt;&lt;p&gt;도구상자가 미친 듯이 로딩되고 글자가 겹쳐서 보이는 등 이상현상이 발생&lt;/p&gt;&lt;p&gt;초기화 방법을 찾다가 발견한 방법이다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;* Windows7 기준으로&lt;/p&gt;&lt;p&gt;c:\Users\Administrator\appdata\local\microsoft\VisualStudio\10.0\&lt;/p&gt;&lt;p&gt;폴더에 들어가서 &amp;nbsp;toolbox로 시작하는 파일을 삭제해 주고&lt;/p&gt;&lt;p&gt;Visual Studio 를 다시 실행하면 도구상자를 다시 빌드 해서 표시한다.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>C++++ (C#)</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/263</guid>
<comments>https://genesis8.tistory.com/263#entry263comment</comments>
<pubDate>Fri, 26 Feb 2016 16:50:30 +0900</pubDate>
</item>
<item>
<title>왜 동기화(Synchronization)을 해야하는 걸까?</title>
<link>https://genesis8.tistory.com/261</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;속도는 느려지고, 쓰기 위해서 이것 저것 해야해서 불편한 동기화를 대체 왜 해야하는 걸까?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;동기화의 이유는 순서 또는&amp;nbsp;공유 자원 때문이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;순서는 말 그대로.. A가 처리 된 이후에 B가 처리되어야하는 상황(입금이 되면 상품을 발송할 게 같은.)일 때 두 작업을 처리하는 작업자가 서로 다르다면 순서가 안 맞는 (입금이 안됬어도 상품을 줄게) 상황이 일어날 수 있으므로.. 순서를 맞출 때 쓰는 것이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2778DC3A56CCDBE224&quot; filemime=&quot;image/jpeg&quot; filename=&quot;asd.png&quot; height=&quot;500&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;두 작업자가 하나의 자원에 동시 접근(Write / Read)하는&amp;nbsp;것인데...&lt;/p&gt;&lt;p&gt;그림은 그냥 동시에 접근하는 것 처럼 보이지만 실제로는 한 대가 다닐 수 있는 병목 구간에&amp;nbsp;두 자동차가 같이 들어가려는 것 같은 상황이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사실 컴퓨터가 작업을 동시에 처리하는 능력이 없고, 하나 씩 처리한다는 것에 비춰볼 때.. 순서가 있다면 그렇다면 사실상 '동시 접근' 은 없는 게 아닌가? 하는 생각이 들었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;동시 접근이 없다? 그런데 왜 문제가?..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;OS가 행하는 스케쥴링은 각 작업자에게 시간을 잘게 잘라서(time slice) 분배하는데.. 위 같은 경우 작업자 A가 공유자원을 미처 다 쓰지 못했을 때, B가 바로 들어오게 된다. 그러니까 상황이 이렇게 된다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2355794456CCDDDB22&quot; filemime=&quot;image/jpeg&quot; filename=&quot;제목 없음.png&quot; height=&quot;500&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;빨간 선 간의 간격이 작업을 하게 지급된 퀀텀(quantum)이라고 가정했을 때,&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;위와 같이 작업을 하러 들어&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;와서 A를 처리하고 B를 처리한다면 공유자원 문제는 절대로 발생하지도 않을 것이고, 모든 동기화 기법들은 장사를 접어야한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;그런데 현실은 녹록치 않아서 (단위가 무려 천분의 1초인 millisecond를 10 ~ 20초 지급 받는다) 간격은 더럽게 짧고, 해당 간격이 끝났다면 다음 작업자 (B)에게 넘어가는 식이다.&lt;/p&gt;&lt;p&gt;즉 A - B - A - B - A - B 로 작업이 끝나게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;물론 이 상황은 스케쥴러의 정책에 따라 다르다. 라운드 로빈 같은 경우는 다 똑같이 공평한 시간이 분배되고, HRN 같은 경우 긴 작업과 짧은 작업에 차등성을 부여하는 등 차이가 있을 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아무튼 문제가 되는 것은&lt;/p&gt;&lt;p&gt;ABAB.. 로 시작되었을 때 이다. 공유자원이 문제라고 했는데..&lt;/p&gt;&lt;p&gt;A -&amp;gt; B -&amp;gt; B 로 돌아오는 이 과정의 사이 사이에는 문맥[상황]&amp;nbsp;교환(context switching)이 일어나게 된다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:460px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/27787E3956CCE11E34&quot; filemime=&quot;image/jpeg&quot; filename=&quot;cc.png&quot; height=&quot;414&quot; width=&quot;460&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이처럼 시간이 지날 때마다 CPU는 A - B - A - B로 작업자가 전환되게 된다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;문제는 작업이 전부 끝나지 않았을 때, 쓰레드에게 모든 했던 처리를 버리라고하면?&lt;/p&gt;&lt;p&gt;인셉션이 된다. A(10%) - [A버림]&amp;nbsp;&amp;gt; B(10%) - [B버림] -&amp;gt; A(다시 10%) ...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;당연히 처리해놓았던 것을 저장해두어야하고, 그것을 메모리 내에&amp;nbsp;저장해두게 된다. 그리고서는 다시 레지스터에 올려 작업을 시작하게 되는 데...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우리가 두 스레드 A , B 를 통해&amp;nbsp;공유 자원(주로&amp;nbsp;데이터 영역)을 변경한다면&lt;/p&gt;&lt;p&gt;A B가 작업하고 난 뒤에 우리가 원하는 형태는&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;A와 B의 작업이 완료된 공유자원. 의 상태일 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;즉&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;[ 공유자원 ]&lt;/p&gt;&lt;p&gt;[ A의 작업이 반영된 공유자원 ] &amp;lt;- A 작업 끝&lt;/p&gt;&lt;p&gt;[ A의 작업이 반영된 B의 작업이 반영된 공유자원] &amp;lt; - B 작업 끝&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 현실은..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;[ 공유자원 ]&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;lt; --- 공유 자원을 가져온&amp;nbsp;A의 작업 중...&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; ㄴ 인터럽트 / 스레드 B 실행&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ㄴ A의 상태&amp;nbsp;저장 (context switching)&lt;/p&gt;&lt;p&gt;[ 공유자원 ]&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;lt; ---&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;공유 자원을 가져온&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;B의 작업 중...&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; ㄴ 인터럽트 / 스레드 A 실행&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;ㄴ B의 상태&amp;nbsp;저장 (context switching)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;lt; --- A의 작업을 반영&lt;/p&gt;&lt;p&gt;[ A의 작업이 반영된&amp;nbsp;공유자원 ]&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;lt; --- B의 작업을 반영&lt;/p&gt;&lt;p&gt;[ B의 작업이 반영된 공유자원 ]&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;...?!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;최종적으로 B의 작업이 반영된 공유자원이 남았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이는 B가 [A의 작업이 반영된 공유자원]을 가져간 게 아니기 때문이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;[ 공유자원 ]&lt;/p&gt;&lt;p&gt;- &amp;gt; 공유자원을 가져온 A의 작업 시작&lt;/p&gt;&lt;p&gt;[ A의 작업이 반영된 공유자원 ] &amp;lt;- A 작업 끝&lt;/p&gt;&lt;p&gt;- &amp;gt; A의 작업이 반영된 공유자원을 가져온 B의 작업 시작&lt;/p&gt;&lt;p&gt;[ A의 작업이 반영된 B의 작업이 반영된 공유자원] &amp;lt; - B 작업 끝&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;의 구조로 이루어져야하는 절차가&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;[공유자원 ]&lt;/p&gt;&lt;p&gt;- &amp;gt; 공유자원을 가져온 A의 작업 시작&lt;/p&gt;&lt;p&gt;&amp;nbsp; ㄴ interrupt / context switching&lt;/p&gt;&lt;div&gt;&lt;p&gt;- &amp;gt; 공유자원을 가져온 B의 작업 시작&lt;/p&gt;&lt;p&gt;[ A의 작업이 반영된 공유자원 ] &amp;lt;- A 작업 끝&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;[ B의 작업이 반영된 공유자원 ] &amp;lt;- B&amp;nbsp;작업 끝&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;와 같이 되기 때문이다.&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;물론 스레드 예제를 실행시켜보면 알겠지만.&lt;/div&gt;&lt;div&gt;ABABABABABAB 가 아니라.&lt;/div&gt;&lt;div&gt;AAAABBBABABBBAB 라던가 ABAABBAABBBBAA처럼&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;균일하지 않게 스레드가 실행되므로 위처럼 순서가 지켜지지 않고&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;B나 A가 연속적으로 처리되는 일도 있을 수 있다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;이런 것을&amp;nbsp;비 결정론적 성질(버그)&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;이라고 하는데.. 간단히 말해서 할 때마다 다르다는 얘기다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;우리가 원하는&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;[ A의 작업이 반영된 B의 작업이 반영된 공유자원 ] 이라는 상태는&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;AAA BBB 해서 작업이 끝나버린다면 완벽하게 반영될 것이고...&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;이는 오류 없음 의 결과를 도출하게 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;그렇지만 스케쥴링이&amp;nbsp;ABABAB 라던가 AABBBA 같이 된다면 결과는 예측할 수 없게 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;비단 멀티 스레드만이 아니라 멀티 프로세스 환경 등에서도 일어날 수 있다. 공유자원을 두고 둘 이상의 작업자가 진입하면 일어날 수 있는 현상인 것이다. 이를 경쟁 상태(race condition)이라고 한덴다...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아무튼 그래서 둘 이상의 작업자가 공유자원에 접근하게 되는 환경에서는 연산이 섞이는 일이 없도록 원자적 연산(atomic operation)을 보장해주거나 [이 경우 값 넣고 있는 동안은 세트로 묶여서 섞이지 않는 범위 까지&amp;nbsp;연산을 보장해준다]&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;동기화 기법을&amp;nbsp;쓰게 되는 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/261</guid>
<comments>https://genesis8.tistory.com/261#entry261comment</comments>
<pubDate>Wed, 24 Feb 2016 08:18:11 +0900</pubDate>
</item>
<item>
<title>MySQL 저장 프로시져 내에서 발생한 에러 처리 (Error Handling)</title>
<link>https://genesis8.tistory.com/260</link>
<description>&lt;p&gt;원본&amp;nbsp;출처 :&amp;nbsp;http://www.kim-taesuk.com/11&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;MySQL 저장 프로시져 ( Stored Procedure ) 내에서, 쿼리 에러 발생시,&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;그 에러에 대한 HANDLER 가 정의되어 있지 않으면, 에러 발생 위치에서 Stored Procedure 가 종료됨.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;이 때,&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;1) 에러 처리 구문 실행 후, Stored Procedure 종료 하는 방법&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;2) 에러 처리 구문 실행 후, 다음 쿼리를 계속 실행 하는 방법&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;3) DECLARE ... HANDLER 구문 분석&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;4) DECLARE ... HANDLER 구문 특이사항&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;- 아 래 -&amp;nbsp;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;1) 에러 처리 구문 실행 후, Stored Procedure 종료 하는 방법&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;margin: 0px; padding: 10px; border: 1px solid rgb(254, 254, 184); line-height: 15.6px; font-family: 돋움, Dotum, AppleGothic, sans-serif; color: rgb(42, 43, 108); background-color: rgb(254, 254, 184);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;DECLARE&amp;nbsp;&lt;b&gt;EXIT&lt;/b&gt;&amp;nbsp;HANDLER FOR SQLEXCEPTION&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; BEGIN&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; &amp;nbsp; -- 여기에 에러 처리 구문 추가!&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; END;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;2) 에러 처리 구문 실행 후, 다음 쿼리를 계속 실행 하는 방법&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;margin: 0px; padding: 10px; border: 1px solid rgb(254, 254, 184); line-height: 15.6px; font-family: 돋움, Dotum, AppleGothic, sans-serif; color: rgb(42, 43, 108); background-color: rgb(254, 254, 184);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;DECLARE&amp;nbsp;&lt;b&gt;CONTINUE&lt;/b&gt;&amp;nbsp;HANDLER FOR SQLEXCEPTION&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; BEGIN&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; &amp;nbsp; -- 여기에 에러 처리 구문 추가!&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; END;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;3) DECLARE ... HANDLER 구문 분석&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;margin: 0px; padding: 10px; border: 1px solid rgb(254, 254, 184); line-height: 15.6px; font-family: 돋움, Dotum, AppleGothic, sans-serif; color: rgb(42, 43, 108); background-color: rgb(254, 254, 184);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;구문 : DECLARE [handler_action] HANDLER [condition_value] [statement]&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;[handler_action]&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;CONTINUE : 계속 진행&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;EXIT : 중지, 종료&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;[condition_value]&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;mysql_error_code&lt;/b&gt;&amp;nbsp;: MySQL 에러 코드 ( number 값 ) &amp;nbsp;[&lt;b&gt;참조&lt;/b&gt;:&amp;nbsp;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/error-messages-server.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;text-decoration: underline; color: rgb(138, 138, 138);&quot;&gt;Server Error Codes and Messages&lt;/a&gt;]&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;SQLSTATE [VALUE]&lt;/b&gt;&amp;nbsp;:&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;5 자리의 문자로 정의된, SQL 상태값.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;'00' 으로 시작하는 경우 정상.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;SQLSTATE 는 ODBC 에서 정의된 상태값이므로, mysql의 에러 코드와 100% 매칭되지는 않음.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;[&lt;b&gt;참조&lt;/b&gt;:&amp;nbsp;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/error-messages-server.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;text-decoration: underline; color: rgb(138, 138, 138);&quot;&gt;Server Error Codes and Messages&lt;/a&gt;]&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;condition_name&lt;/b&gt;&amp;nbsp;: 미리 정의한 조건의 상수값&amp;nbsp;[&lt;b&gt;참조&lt;/b&gt;:&amp;nbsp;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/declare-condition.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;text-decoration: underline; color: rgb(138, 138, 138);&quot;&gt;DECLARE ... CONDITION Syntax&lt;/a&gt;]&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;예) mysql 에러 코드 1051 발생시의 에러 처리&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;margin: 0px; padding: 10px; border: 1px solid rgb(254, 254, 184); line-height: 15.6px; font-family: 돋움, Dotum, AppleGothic, sans-serif; color: rgb(42, 43, 108); background-color: rgb(254, 254, 184);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;DECLARE CONTINUE HANDLER FOR 1051&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; BEGIN&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; &amp;nbsp; -- body of handler&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; END;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;또는&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;margin: 0px; padding: 10px; border: 1px solid rgb(254, 254, 184); line-height: 15.6px; font-family: 돋움, Dotum, AppleGothic, sans-serif; color: rgb(42, 43, 108); background-color: rgb(254, 254, 184);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;DECLARE no_such_table CONDITION FOR 1051;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;DECLARE CONTINUE HANDLER FOR&amp;nbsp;&lt;b&gt;no_such_table&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; BEGIN&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; &amp;nbsp; -- body of handler&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&amp;nbsp; END;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;SQLWARNING&lt;/b&gt;&amp;nbsp;: SQLSTATE 값이 '01' 로 시작하는 경우&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;NOT FOUND&lt;/b&gt;&amp;nbsp;: SQLSTATE 값이 '02' 로 시작하는 경우&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 2em; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;SQLEXCEPTION&lt;/b&gt;&amp;nbsp;: SQLSTATE 값이 '00', '01', '02' 로 시작하지 않는 경우.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;[statement]&lt;/b&gt;&amp;nbsp;:&amp;nbsp;조건 만족시 실행할 구문&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;4) DECLARE ... HANDLER 구문 특이사항&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(42, 43, 108); font-family: 돋움, Dotum, AppleGothic, sans-serif; line-height: 15.6px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;[statement] 위치에 &amp;nbsp;ITERATE 또는 LEAVE 구문을 사용할 수 없음.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/260</guid>
<comments>https://genesis8.tistory.com/260#entry260comment</comments>
<pubDate>Tue, 23 Feb 2016 23:38:01 +0900</pubDate>
</item>
<item>
<title>html 중급?</title>
<link>https://genesis8.tistory.com/259</link>
<description>&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;padding: 10px 0px 5px 10px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221); height: 86px;&quot;&gt;&lt;p&gt;&lt;font color=&quot;#0e709f&quot;&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;b&gt;출처 원본 : http://www.homejjang.com/05/layout.php&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;font color=&quot;#0e709f&quot;&gt;&lt;span style=&quot;font-size: 10pt; line-height: 20px;&quot;&gt;&lt;b&gt;테이블을 이용한 레이아웃(Layout)&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;홈페이지를 제작할때 가장 많이 사용되는 태그는 &amp;lt;table&amp;gt;태그입니다.(&amp;lt;tr&amp;gt;,&amp;lt;td&amp;gt;와 함께)&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이유는 레이아웃을 잡을때 &amp;lt;table&amp;gt;태그만큼 효율적인 것이 없기 때문입니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;대부분의 홈페이지는 top 부분과 left 부분에 네비게이션(메뉴)이 위치합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이를 최대한 간단하게 만들어 보겠습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;table width=&quot;800&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot;&amp;gt;&lt;br /&gt;&amp;lt;tr bgcolor=&quot;#8080FF&quot; align=&quot;center&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;100&quot;&amp;gt;홈페이지 로고&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;100&quot;&amp;gt;메뉴1&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;100&quot;&amp;gt;메뉴2&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;100&quot;&amp;gt;메뉴3&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;100&quot;&amp;gt;메뉴4&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;100&quot;&amp;gt;메뉴5&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;200&quot;&amp;gt;&amp;lt;!-- 여백 --&amp;gt;&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;tr height=&quot;5&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td colspan=&quot;7&quot;&amp;gt;&amp;lt;!-- 여백 --&amp;gt;&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;/table&amp;gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;table width=&quot;800&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot;&amp;gt;&lt;br /&gt;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;150&quot; valign=&quot;top&quot; bgcolor=&quot;#8080FF&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;table width=&quot;130&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;td&amp;gt;하위메뉴1&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;td&amp;gt;하위메뉴2&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;td&amp;gt;하위메뉴3&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;td&amp;gt;하위메뉴4&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;td&amp;gt;하위메뉴5&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/table&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td width=&quot;650&quot; valign=&quot;top&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;table width=&quot;600&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;td&amp;gt;여기에 본문이 옵니다.&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;lt;/table&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;/table&amp;gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;다소 복잡한 테이블이지만 실제로 만들어 보면 크게 어렵지 않습니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr align=&quot;middle&quot; bgcolor=&quot;#8080ff&quot; height=&quot;35&quot;&gt;&lt;td width=&quot;20%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;홈페이지 로고&lt;/td&gt;&lt;td width=&quot;10%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;메뉴1&lt;/td&gt;&lt;td width=&quot;10%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;메뉴2&lt;/td&gt;&lt;td width=&quot;10%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;메뉴3&lt;/td&gt;&lt;td width=&quot;10%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;메뉴4&lt;/td&gt;&lt;td width=&quot;10%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;메뉴5&lt;/td&gt;&lt;td width=&quot;30%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr height=&quot;5&quot;&gt;&lt;td colspan=&quot;7&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;20%&quot; bgcolor=&quot;#8080ff&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;하위메뉴1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;하위메뉴2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;하위메뉴3&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;하위메뉴4&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;하위메뉴5&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;80%&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;여기에 본문이 옵니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;너비의 단위는 %를 사용하였지만 100% 레이아웃을 차지하는 홈페이지가 아닌 이상 % 보다는 픽셀을 사용하는 것이 보다 일반적입니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;그리고 테이블의 셀안에 다시 테이블이 들어가는 것을 볼 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;테이블을 이렇게 중첩시켜 나가면서 복잡한 레이아웃을 구현합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;예제에서는 이미지를 전혀 쓰지 않았지만 대부분의 홈페이지 작업은 전체적인 화면의 이미지를 먼저 만들고 이 이미지를 잘라서 테이블을 이용하여 배치를 하는 방식으로 진행됩니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;아이프레임이란 내부 프레임(inline frame)이라는 의미로 하나의 HTML문서내에서 다른 HTML문서를 보여주고자 할때 사용합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;일반적인 프레임(frame)과 비교해보면 아이프레임은 &amp;lt;frameset&amp;gt; 태그 사이에 올 필요가 없으며, 독립적으로 마치 &amp;lt;img&amp;gt; 태그를 사용하듯 문서내의 원하는 위치에 삽입할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;아이프레임에서 사용할 수 있는 속성도 &amp;lt;img&amp;gt; 태그과 유사합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;src 속성&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;inline frame 내에 불러올 문서의 주소를 적어주면 됩니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;홈짱 홈페이지를 불러오는 예제를 만들어 보겠습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;iframe&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;src&lt;/font&gt;=&quot;http://www.homejjang.com&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;width와 height 속성&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;inline frame의 너비와 높이를 지정할 수 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;iframe src=&quot;http://www.homejjang.com&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;width&lt;/font&gt;=&quot;600&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;height&lt;/font&gt;=&quot;300&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;frameborder 속성&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;inline frame의 경계선의 두께를 지정할 수 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;iframe src=&quot;http://www.homejjang.com&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;frameborder&lt;/font&gt;=&quot;0&quot; width=&quot;600&quot; height=&quot;300&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;marginwidth와 marginheight&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;inline frame의 여백을 지정할 수 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;iframe src=&quot;http://www.homejjang.com&quot; frameborder=&quot;0&quot; width=&quot;600&quot; height=&quot;300&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;marginwidth&lt;/font&gt;=&quot;0&quot;&lt;font color=&quot;#ff0000&quot;&gt;marginheight&lt;/font&gt;=&quot;0&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;scrolling&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;inline frame내에서 스크롤바 사용여부를 지정할 수 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;iframe src=&quot;http://www.homejjang.com&quot; frameborder=&quot;0&quot; width=&quot;600&quot; height=&quot;300&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;scrolling&lt;/font&gt;=&quot;yes&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;scrolling 값을 no로 지정하면 스크롤바가 생기지 않습니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr height=&quot;5&quot;&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;배경음악 사용하기 Bgsound와 Embed&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;좀더 분위기 있는 홈페이지를 만들기 위해서 배경 음악을 사용하는 경우가 많습니다. 그러나 방문자가 배경음악을 원하지 않는 경우도 있으므로 배경음악을 사용할때 아래의 내용을 고려해 봐야 합니다.&lt;/p&gt;&lt;ol&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;꼭 필요한 곳에만 배경 음악이나 배경음을 넣습니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;배경음악을 사용자가 직접 제어 할 수 있도록 합니다. 배경음악을 원치 않는 사용자들이 쉽게 소리를 줄이거나 끌 수 있어야 합니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;용량이 많은 배경음악은 페이지 로딩을 방해하는 요소로 작용할 수 있기에 페이지 전체적인 용량을 고려해서 배경음악을 선택합니다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;span style=&quot;line-height: 18px; font-weight: bold;&quot;&gt;배경음악 사용 방법&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;① bgsound&lt;br /&gt;&lt;br /&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;line-height: 19.2px; border-collapse: collapse; color: black; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;bgsound src=&quot;[Abba] Happy New Year.wma&quot; loop=&quot;0&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;bgsound element는 인터넷 익스플로러에서만 작동합니다. 그리고 화면에 아무런 내용이 출력되지 않으므로 방문자가 음악을 끄기가 힘듭니다.&lt;br /&gt;&lt;br /&gt;loop 속성은 배경음악의 반복 횟수를 지정합니다. -1 이나 INFINITE 값으로 지정하면 계속적으로 반복됩니다.&lt;br /&gt;&lt;br /&gt;② embed&lt;br /&gt;&lt;br /&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;line-height: 19.2px; border-collapse: collapse; color: black; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;embed src=&quot;[Abba] Happy New Year.wma&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;line-height: 18px; font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;br /&gt;embed는 익스플로러뿐 아니라 다른 웹브라우저에서도 작동을 합니다. 그리고 웹브라우저상에 미디어 플레이어가 표시됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 18px; font-size: 9pt;&quot;&gt;embed 엘리먼트에서 사용할 수 있는 속성은 아래와 같습니다.&lt;/p&gt;&lt;ul style=&quot;line-height: 18px;&quot;&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;autostart=&quot;true/false&quot; : true의 경우 페이지 로딩시 자동실행되고 false로 지정하면 플레이 버튼을 눌러야 음악이 재생됩니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;hidden=&quot;true/false&quot; : 미디어 플레이어가 화면에 출력되는지 여부를 지정합니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;loop=&quot;true/false&quot; : 음악의 반복여부를 지정합니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;width=&quot;수치&quot; height=&quot;수치&quot; : 미디어 플레이어의 크기를 지정합니다. 음악 파일인 경우는 상관없지만 동영상 파일을 재생할때 이 값을 적절하게 조절해 주면 좋습니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;Showcontrols=&quot;value&quot; : 미디어 플레이어, value 값은 0 , 1&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;VOLUME = &quot;수치값&quot; : 플레이 되는 음악의 소리 크기를 임의로 설정하는 속성입니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;hspace=&quot;value&quot; vspace=&quot;value&quot; : 미디어 플레이어의 수직/수평 여백값을 조절하는 옵션입니다. IMG element에서 사용되는거와 동일합니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;mute=1 : 음소거&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;입력양식(form)은 홈페이지에서 사용자에게 정보를 받을때 사용됩니다.&lt;br /&gt;&lt;br /&gt;회원가입을 하거나 혹은 쇼핑몰에서 주문을 하는 경우 사용자의 정보를 입력받을 필요가 있습니다. 이때 입력양식(form) 페이지를 제공하여 정보를 입력하게한 다음 이를 처리하는 페이지를 만들어서 DB에 저장을 합니다.&lt;br /&gt;&lt;br /&gt;회원가입 입력폼을 member.html 이라고 한다면 member_confirm.php 와같은 페이지를 만들어서 회원가입 처리를 합니다. 이때 member.html 페이지는 &amp;lt;form&amp;gt; 태그를 이용하여 간단하게 만들수 있지만 member_confirm.php 페이지는 입력받은 정보를 DB에 저장하는 역할을 하기 때문에 프로그래밍 처리를 해야 합니다.&lt;br /&gt;&lt;br /&gt;그래서 HTML 만으로는 입력양식만을 만들 수 있을뿐 이를 DB에 저장하는 기능은 만들 수가 없습니다.&lt;br /&gt;&lt;br /&gt;대부분의 웹프로그램이 사용자의 정보를 받아서 처리하는 프로세스를 가지므로 &amp;lt;form&amp;gt; 태그는 웹프로그램에서 아주 중요한 위치를 차지합니다.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;입력양식(form)의 구성&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;form&amp;gt; 태그는 입력양식의 범위를 지정할뿐 화면상에는 아무런 내용이 표시되지 않습니다.&lt;br /&gt;&lt;br /&gt;&amp;lt;form&amp;gt;과 &amp;lt;/form&amp;gt; 사이에 사용자가 실제적으로 값을 넣을수 있는 텍스트 박스나 체크 박스 등이 위치합니다.&lt;br /&gt;&lt;br /&gt;회원가입을 하는 경우 이름이나 주소 등을 텍스트로 입력하는 경우도 있지만 성별이나 생년월일 등은 라디오 버튼이나 셀렉트 박스에서 선택하는 경우도 있습니다.&lt;br /&gt;&lt;br /&gt;그러므로 &amp;lt;form&amp;gt;과 &amp;lt;/form&amp;gt; 사이에 위치하는 다양한 &amp;lt;form&amp;gt; 요소들을 모두 익혀야 상황에 맞는 입력양식을 만들수 있습니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;&amp;lt;form&amp;gt; 태그의 속성&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;form&amp;gt; 태그에서 사용할 수 있는 주요 속성은 method와 action이 있습니다.&lt;br /&gt;&lt;br /&gt;&lt;table class=&quot;templateTable&quot; align=&quot;center&quot; border=&quot;1&quot; bordercolor=&quot;#505050&quot; cellpadding=&quot;5&quot; cellspacing=&quot;0&quot; width=&quot;90%&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;form method=&quot;get&quot; action=&quot;member_confrim.php&quot;&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;/form&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;(1) method&lt;br /&gt;웹서버와의 통신 방법을 지정합니다. post와 get 두가지 값 중 하나를 사용할 수 있습니다.&lt;br /&gt;&lt;br /&gt;(2) action&lt;br /&gt;입력양식에 입력된 값을 받아서 DB에 저장하는 페이지를 지정합니다. 이는 php나 asp와 같은 웹스크립트 언어를 이용하여 제작합니다.&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;Fieldset과 Legend element&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;fieldset element는 서로 연관성있는 컨트롤들을 하나로 묶을 수 있도록 해 주며, legend element는 제목을 붙이는 역할을 합니다. 어떻게 보면 legend element를 사용하기 위해서 fieldset element를 사용한다고 볼 수도 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;fieldset&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;legend&amp;gt;&amp;lt;b&amp;gt;메일링 리스트&amp;lt;/b&amp;gt;&amp;lt;/legend&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;input type=checkbox&amp;gt;html&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;input type=checkbox&amp;gt;css&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;input type=checkbox&amp;gt;javascript&lt;br /&gt;&amp;lt;/fieldset&amp;gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;간단한 예제이니 한번 만들어보면 쉽게 이해가 갈겁니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;fieldset&gt;&lt;legend&gt;&lt;b&gt;메일링 리스트&lt;/b&gt;&lt;/legend&gt;&lt;input type=&quot;checkbox&quot;&gt;html&amp;nbsp;&lt;input type=&quot;checkbox&quot;&gt;css&amp;nbsp;&lt;input type=&quot;checkbox&quot;&gt;javascript&lt;/fieldset&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;마퀴 엘리먼트(Marquee element) 스크롤 되는 영역을 지정&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;marquee element 는 스크롤 되는 영역을 지정합니다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;lt;marquee&amp;gt;와 &amp;lt;/marquee&amp;gt; 사이에 텍스트나 이미지 등이 위치하면 스크롤이 됩니다. 제한된 공간에서 보다 많은 정보를 보여주기 위한 용도로 사용됩니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;direction&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;direction 속성은 움직이는 방향을 지정합니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;marquee direction=&quot;right&quot;&amp;gt;오른쪽 방향으로 흐르는 텍스트...&amp;lt;/marquee&amp;gt;&lt;br /&gt;&amp;lt;marquee direction=&quot;left&quot;&amp;gt;왼쪽 방향으로 흐르는 텍스트...&amp;lt;/marquee&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;marquee direction=&quot;right&quot;&gt;오른쪽 방향으로 흐르는 텍스트...&lt;/marquee&gt;&lt;marquee&gt;왼쪽 방향으로 흐르는 텍스트...&lt;/marquee&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;behavior&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;behavior 속성은 컨텐츠가 어떻게 스크롤 될것인지를 지정합니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;scroll : 기본값으로 마퀴 영역의 경계에서부터 스크롤됩니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;slide : scroll과 거의 동일하지만 마퀴 영역의 경계에서 더이상 스크롤 되지 않고 멈춥니다. 컨텐츠가 화면상으로 슬라이딩 되면서 출력되는 느낌입니다.&lt;/li&gt;&lt;li style=&quot;line-height: 14.4px; margin: 0px 0px 10px;&quot;&gt;alternate : 마퀴 영역의 경계까지 갔다가 다시 돌아옵니다. 왔다 갔다하면서 화면상에 언제나 보이죠.&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;아래 예제를 보시면 쉽게 이해할 수 있습니다.&lt;br /&gt;&lt;br /&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;marquee behavior=&quot;scroll&quot;&amp;gt;behavior=&quot;scroll&quot;&amp;lt;/marquee&amp;gt;&lt;br /&gt;&amp;lt;marquee behavior=&quot;slide&quot;&amp;gt;behavior=&quot;slide&quot;&amp;lt;/marquee&amp;gt;&lt;br /&gt;&amp;lt;marquee behavior=&quot;alternate&quot;&amp;gt;behavior=&quot;alternate&quot;&amp;lt;/marquee&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;marquee&gt;behavior=&quot;scroll&quot;&lt;/marquee&gt;&lt;marquee behavior=&quot;slide&quot;&gt;behavior=&quot;slide&quot;&lt;/marquee&gt;&lt;marquee behavior=&quot;alternate&quot;&gt;behavior=&quot;alternate&quot;&lt;/marquee&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;scrollamount&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scrollamount 속성은 한번 스크롤될때마다 얼마만큼 스크롤되는지를 지정합니다. 기본값은 1픽셀입니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;marquee scrollamount=&quot;10&quot;&amp;gt;scrollamount 속성을 10픽셀로 지정&amp;lt;/marquee&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;위와 같이 scrollamount 속성을 10픽셀로 지정하면 한번 스크롤될때마다 10픽셀씩 움직이므로 좀더 빠르게 움직이는 느낌을 받습니다. 그러나 이 값을 지나치게 높이면 자연스럽지 못하므로 적당하게 올려야 합니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;marquee scrollamount=&quot;10&quot;&gt;scrollamount 속성을 10픽셀로 지정&lt;/marquee&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;loop&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;loop 속성은 스크롤되는 횟수를 지정합니다. 기본값은 -1 이며 이는 계속적으로 반복해서 스크롤 된다는 의미입니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;marquee loop=&quot;1&quot;&amp;gt;loop 속성을 1로 지정&amp;lt;/marquee&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;위와 같이 loop 속성을 1로 지정하면 한번만 스크롤되고 더이상 스크롤되지 않습니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;marquee loop=&quot;1&quot;&gt;loop 속성을 1로 지정&lt;/marquee&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;width와 height&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;marquee element 는 스크롤 되는 영역을 지정하므로 그 영역의 width와 height를 지정할 수 있습니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;marquee width=&quot;300&quot; height=&quot;100&quot; bgcolor=&quot;#8080FF&quot;&amp;gt;loop 속성을 1로 지정&amp;lt;/marquee&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;marquee width=&quot;300&quot; bgcolor=&quot;#8080ff&quot; height=&quot;100&quot; style=&quot;width: 300px; height: 100px; background-color: rgb(128, 128, 255);&quot;&gt;loop 속성을 1로 지정&lt;/marquee&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;기타&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;align, hspace, vspace, transparency 등의 속성을 사용할 수 있습니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;이미지맵(image map)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이미지맵은 하나의 이미지에 여러개의 링크를 걸때 사용합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이미지맵을 사용하면 HTML 소스가 간단해 지는 장점이 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;img src=&quot;imgmap.gif&quot; alt=&quot;imgmap.gif&quot;&amp;nbsp;&lt;font color=&quot;#00aa00&quot;&gt;usemap=&quot;#001&quot;&lt;/font&gt;&amp;nbsp;border=&quot;0&quot;&amp;gt;&lt;br /&gt;&amp;lt;map&amp;nbsp;&lt;font color=&quot;#00aa00&quot;&gt;name=&quot;001&quot;&lt;/font&gt;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;area&amp;nbsp;&lt;font color=&quot;#00aa00&quot;&gt;shape=&quot;rect&quot; coords=&quot;42,41,154,66&quot;&lt;/font&gt;&amp;nbsp;href=&quot;/01/homepage.php&quot; target=&quot;_blank&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;area shape=&quot;rect&quot; coords=&quot;42,76,152,100&quot; href=&quot;/03/html.php&quot; target=&quot;_blank&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;area shape=&quot;rect&quot; coords=&quot;40,113,150,138&quot; href=&quot;/05/html2.php&quot; target=&quot;_blank&quot;&amp;gt;&lt;br /&gt;&amp;lt;/map&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;img alt=&quot;imgmap.gif&quot; src=&quot;http://homejjang.cdn1.cafe24.com/imgmap.gif&quot; usemap=&quot;#001&quot; border=&quot;0&quot;&gt;&amp;nbsp;&lt;map name=&quot;001&quot;&gt;&lt;area shape=&quot;RECT&quot; target=&quot;_blank&quot; coords=&quot;42,41,154,66&quot; href=&quot;http://www.homejjang.com/01/homepage.php&quot;&gt;&lt;area shape=&quot;RECT&quot; target=&quot;_blank&quot; coords=&quot;42,76,152,100&quot; href=&quot;http://www.homejjang.com/03/html.php&quot;&gt;&lt;area shape=&quot;RECT&quot; target=&quot;_blank&quot; coords=&quot;40,113,150,138&quot; href=&quot;http://www.homejjang.com/05/html2.php&quot;&gt;&lt;/map&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;먼저 이미지맵을 적용할 이미지에 usemap 속성을 사용하여 이미지맵의 이름을 지정해 주어야 합니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;font color=&quot;#00aa00&quot;&gt;&lt;font color=&quot;#333333&quot;&gt;&amp;lt;img src=&quot;imgmap.gif&quot; alt=&quot;imgmap.gif&quot;&amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#00aa00&quot;&gt;usemap=&quot;#001&quot;&lt;/font&gt;&lt;/font&gt;&lt;font color=&quot;#333333&quot;&gt;&amp;nbsp;border=&quot;0&quot;&amp;gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;001이라는 이름을 가진 이미지맵을 사용하겠다는 의미이니다. 이때 #을 사용함에 주의를 기울여야 합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;그리고 나서는 &amp;lt;map&amp;gt;태그를 사용하여 이미지맵을 만듭니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;map&amp;nbsp;&lt;font color=&quot;#00aa00&quot;&gt;name=&quot;001&quot;&lt;/font&gt;&amp;gt;&lt;br /&gt;...&lt;br /&gt;&amp;lt;/map&amp;gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이미지맵에서 하이퍼링크의 영역을 지정하기 위해서 &amp;lt;area&amp;gt;태그를 사용합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;area&amp;gt;태그의 shape속성은 이미지맵의 형태를 지정합니다. rect(사각형), circle(원형),&amp;nbsp;poly(다각형) 등의 속성값을 가질 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;coords속성은 좌표값을 지정합니다. 이미지의 왼쪽 모서리를 기준으로 하이퍼링크 영역의 시작과 끝 부분을 지정합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이 coords속성값을 지정하기가 까다롭습니다. 그래서 이 부분은 텍스트 에디터에서 직접 코딩하지 않고 이미지맵을 생성하는 유틸리티를 사용하는 것이 좋습니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;나모나 드림위버를 사용하면 이미지 상에서 영역을 지정하기에 아주 쉽게 이미지맵을 생성할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;그러나 텍스트 에디터를 사용하는 경우 이 부분이 불편합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이미지맵을 생성하는 프로그램을 이용하면 이미지상에서 바로 영역을 지정하고 이를 HTML 문서로 저장할 수 있어 텍스트 에디터의 단점을 보완해 줄 수 있습니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr height=&quot;5&quot;&gt;&lt;td bgcolor=&quot;#D1D8FF&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr height=&quot;120&quot;&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;br /&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;오브젝트 엘리먼트(Object element) HTML 문서에 멀티미디어 삽입&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;object element 는 문서내에 플래시나 동영상과 같은 개체(Object)를 삽입하는데 사용됩니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;HTML 문서에 개체를 삽입하는 태그는 여러가지가 있습니다. 동영상과 음악과 같은 멀티미디어를 삽입하는 embed, 자바 애플릿을 삽입하는 applet 엘리먼트 등이 있습니다. 최근의 추세는 object 엘리먼트로 통합되는 방향입니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;embed 와 object 의 차이점&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;embed 엘리먼트는 개채삽입으로 자신의 컴퓨터에 해당 미디어파일을 실행할수 있는 프로그램이 없다면 실행이 되지 않습니다. 그러나 object 엘리먼트는 웹에서 개채를 로드해서 재생되므로 프로그램이 없어도 실행이 가능합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;HTML 페이지에 멀티미디어를 추가하는데 embed 엘리먼트도 사용할 수 있지만&amp;nbsp;embed 엘리먼트를 사용하면 보다 다양한 미디어를 사용 가능합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;플래시 삽입&lt;/strong&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;object type=&quot;application/x-shockwave-flash&quot; data=&quot;images/menu.swf&quot; width=&quot;500&quot; height=&quot;70&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;movie&quot; value=&quot;menu.swf&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/object&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;슬라이더 삽입&lt;/strong&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;object classid=&quot;clsid:F08DF954-8592-11D1-B16A-00C0F0283628&quot; id=&quot;Slider1&quot; width=&quot;100&quot; height=&quot;50&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;BorderStyle&quot; value=&quot;1&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;MousePointer&quot; value=&quot;0&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;Enabled&quot; value=&quot;1&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;Min&quot; value=&quot;0&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;Max&quot; value=&quot;10&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/object&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;퀵타임 무비 삽입&lt;/strong&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;object width=&quot;160&quot; height=&quot;144&quot; classid=&quot;clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B&quot; codebase=&quot;http://www.apple.com/qtactivex/qtplugin.cab&amp;gt;&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;src&quot; value=&quot;test.mov&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;autoplay&quot; value=&quot;true&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;controller&quot; value=&quot;false&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;embed src=&quot;sample.mov&quot; width=&quot;160&quot; height=&quot;144&quot; autoplay=&quot;true&quot; controller=&quot;false&quot; pluginspage=&quot;http://www.apple.com/quicktime/download/&quot;&amp;gt;&amp;lt;/embed&amp;gt;&lt;br /&gt;&amp;lt;/object&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;리얼 비디오 삽입&lt;/strong&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;p&gt;&amp;lt;object width=&quot;320&quot; height=&quot;240&quot; classid=&quot;clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA&quot;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;controls&quot; value=&quot;ImageWindow&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;autostart&quot; value=&quot;true&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;param name=&quot;src&quot; value=&quot;test.ram&quot; /&amp;gt;&lt;br /&gt;&amp;lt;/object&amp;gt;&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table width=&quot;710&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td colspan=&quot;3&quot; height=&quot;10&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td width=&quot;350&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;td width=&quot;10&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;td width=&quot;350&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;3&quot; height=&quot;10&quot; style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;HTML과 XHTML&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;XHTML은 HTML의 단점을 보안하기 위해서 만들어진 언어라 할 수 있습니다. 문법적으로 xml을 따랐다고는 하나 대부분 HTML과 큰차이를 보이지 않습니다. 그러므로 HTML을 기본적으로 아는 사람들은 HTML과 XHTML의 차이만 이해하면 XHTML을 어렵지 않게 사용할 수 있습니다.&lt;br /&gt;&lt;br /&gt;다음은 HTML과 XHTML의 차이점입니다. 전체적으로 HTML에 비해 문법적으로 엄격해 졌습니다. 두리뭉실한 HTML, 까칠한 XHTML 입니다.^^&lt;br /&gt;&lt;br style=&quot;font-weight: bold;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;종료태그가 반드시 있어야 한다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;HTML 은 종료태그가 없는 것을 허용하였습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;p&amp;gt;문단&lt;br /&gt;&amp;lt;p&amp;gt;문단&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;이런식으로 종료태그(&amp;lt;/p&amp;gt;)를 붙히지 않아도 문제가 생기지 않았습니다. XHTML 의 경우 반드시 종료태그를 사용하여 닫아주어야 합니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;잘못된 중첩을 허용하지 않는다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;HTML 은 태그가 잘못 중첩되어도 화면표시(렌더링)에 별 영향을 미치지 않았지만 XHTML의 경우 잘못된 중첩은 화면표시(렌더링)에 직접적인 영향을 주기도 합니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;요소(element)와 속성(Attribute)은 소문자로 표기되어야 한다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;HTML은 요소와 속성에 대소문자를 함께 사용하는 것을 허용하였으나 XHTML은 요소와 속성들을 반드시 소문자로 표기해야 합니다. xml이 대소문자를 구별하기 때문입니다. HTML에서는 대소문자의 구별이 없죠.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;속성 ‘값’들은 항상 따옴표로 감싸주어야 합니다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;HTML 의 경우 속성 값들을 따옴표로 감싸지 않는 것을 허용하였지만 XHTML 에서는 반드시 속성값은 따옴표 안에 있어야 한다.&lt;br /&gt;&lt;br /&gt;&amp;lt;p align=center&amp;gt;로 하면 안되고 &amp;lt;p align=&quot;center&quot;&amp;gt;와 같이 반드시 따옴표를 사용해야 합니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;속성과 값의 단축표기를 허용하지 않는다.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;HTML 에서는 속성과 속성 값의 단축표기를 허용하였으나 XHTML 에서는 단축표기 하는 것을 허용하지 않습니다.&lt;br /&gt;&amp;lt;input checked&amp;gt; 는 &amp;lt;input checked=&quot;checked&quot;&amp;gt; 와 같이 사용해야 합니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;비어있는 태그(종료태그가 없는 태그)도 종료 되어야 한다.&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;HTML 에서 &amp;lt;br&amp;gt;, &amp;lt;hr&amp;gt; 과 같이 콘텐트를 담지 않는 빈 태그들은 &amp;lt;br /&amp;gt;, &amp;lt;hr /&amp;gt; 과 같이 표기하여 시작태그에서 곧 종료됨을 표기해 주어야 한다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;XHTML의 필요성?&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;간단하게 나마 XHTML이 HTML에 비해서 어떤 점이 틀리다는 것을 짚어봤습니다. 서두에서도 말했듯이 문법적으로 좀더 엄격해 졌다고 할 수 있죠. 이런 엄격함으로 인해 보다 다양한 브라우저에서 정확하게 문서가 표시될 수는 있습니다. 예를 들어서 PDA에서 사용되는 웹브라우저에서도 PC의 웹브라우저와 거의 똑같은 화면을 표시할 수 있다는 겁니다. 아무래도 다소&amp;nbsp;느슨한 HTML로는 웹브라우저가 달라지면 다른 모양으로 보일 여지가 많거든요.&lt;br /&gt;&lt;br /&gt;그래도 XHTML은 홈짱닷컴에서 자세하게 다루지 않을 예정입니다.&lt;br /&gt;&lt;br /&gt;HTML 보다 분명 장점을 가지고 있지만 현실적으로 HTML을 대체하는 새로운 마크업이 된다는 보장은 없습니다. 아직도 대부분의 홈페이지에서는 아무런 문제없이 HTML을 잘 쓰고 있고 변화의 움직임도 크지 않기 때문이죠. 물론 분위기가 XHTML로 바뀌면 XHTML 강좌도 추가하겠지만요^^;&lt;br /&gt;&lt;br /&gt;XHTML에 대한 좀더 자세한 내용은 related link를 참고하시면 됩니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr height=&quot;5&quot;&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;line-height: 14.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/259</guid>
<comments>https://genesis8.tistory.com/259#entry259comment</comments>
<pubDate>Sun, 21 Feb 2016 21:01:15 +0900</pubDate>
</item>
<item>
<title>HTML  기초</title>
<link>https://genesis8.tistory.com/258</link>
<description>&lt;div style=&quot;padding: 5px 0px 15px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;font face=&quot;Malgun Gothic&quot;&gt;&lt;b&gt;원본 출처 : http://www.homejjang.com/03/Tag_element_attribute.php&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;font face=&quot;Malgun Gothic&quot;&gt;&lt;b&gt;ㄴ 이곳의 내용들을 가져온 것...&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;font face=&quot;Malgun Gothic&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; width: 700px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;요소(Elements)&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;HTML에서 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;시작 태그와 종료태그로 이루어진 모든 명령어&lt;/span&gt;들을 의미합니다.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;태그(Tag)&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;요소(Elements)의 일부&lt;/span&gt;로 시&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;작 태그와 종료 태그 두 종류&lt;/span&gt;가 있습니다.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;시작 태그는 요소를 시작하며, 종료태그는 요소를&amp;nbsp;끝내는 기능을 가지고 있습니다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;일부 태그 중에는 종료 태그가 없는 것도 있습니다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;요소와 태그의 개념이 뚜렷이 구별되지 않고 혼용되는 경우가 많은데 HTML을 배우는데는 굳이 요소라는 말을 쓰지 않아도 되지만 CSS나 Javascript를 배울때는 요소라는 말이 아주 중요한 용어가 됩니다.&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; padding: 5px 0px 15px;&quot;&gt;&lt;div style=&quot;width: 700px; border: 1px solid rgb(204, 204, 204); padding: 15px 0px 0px; background: url(&amp;quot;http://www.homejjang.com/images/img_bg.gif&amp;quot;) 50% 0% no-repeat scroll transparent;&quot;&gt;&lt;div id=&quot;highlighter_434423&quot; class=&quot;syntaxhighlighter  &quot; style=&quot;width: 693px; margin: 1em 0px !important; padding: 1px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: relative !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background-image: none !important; background-attachment: initial !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;&quot;&gt;&lt;div class=&quot;lines&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;div class=&quot;line alt1&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background-image: none !important; background-attachment: initial !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;&quot;&gt;&lt;table style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; border-collapse: collapse !important; background: none !important;&quot;&gt;&lt;tbody style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;tr style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;td class=&quot;number&quot; style=&quot;font-size: 1em !important; line-height: 1.1em !important; margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 3em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: auto !important; color: rgb(175, 175, 175) !important; background: none !important;&quot;&gt;&lt;code style=&quot;margin: 0px !important; padding: 0px 0.3em 0px 0px !important; border: 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; display: block !important; background: none !important;&quot;&gt;1&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;content&quot; style=&quot;font-size: 1em !important; line-height: 1.1em !important; margin: 0px !important; padding: 0px 0px 0px 0.5em !important; border-width: 0px 0px 0px 3px !important; border-left-style: solid !important; border-left-color: rgb(108, 226, 108) !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&amp;lt;&lt;/code&gt;&lt;code class=&quot;keyword&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: auto !important; color: rgb(0, 102, 153) !important; background: none !important;&quot;&gt;p&lt;/code&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&amp;gt;하나의 문단내용이 여기에들어 옵니다.&amp;lt;/&lt;/code&gt;&lt;code class=&quot;keyword&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: auto !important; color: rgb(0, 102, 153) !important; background: none !important;&quot;&gt;p&lt;/code&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px; height: 55px; margin-top: 10px; background: url(&amp;quot;/images/ie_bg01.gif&amp;quot;);&quot;&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px; background: url(&amp;quot;/images/ie_bg02.gif&amp;quot;);&quot;&gt;&lt;iframe src=&quot;http://www.homejjang.com/src/source_view.php?uid=93&quot; frameborder=&quot;no&quot; width=&quot;680&quot; height=&quot;100&quot; scrolling=&quot;auto&quot; id=&quot;update_tb&quot; style=&quot;margin-left: 10px;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; padding: 5px 0px 15px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;위의 예제에서 요소는 &amp;lt;p&amp;gt;하나의 문단내용이 여기에들어 옵니다.&amp;lt;/p&amp;gt; 전체를 의미합니다. 그러나 태그는 &amp;lt;p&amp;gt;와 &amp;lt;/p&amp;gt;만을 의미하죠.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;속성(Attributes)&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;요소의 시작 태그 안에서 사용되는 것으로 좀 더 구체화된 명령어 체계를 의미&lt;/span&gt;합니다.&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; padding: 5px 0px 15px;&quot;&gt;&lt;div style=&quot;width: 700px; border: 1px solid rgb(204, 204, 204); padding: 15px 0px 0px; background: url(&amp;quot;http://www.homejjang.com/images/img_bg.gif&amp;quot;) 50% 0% no-repeat scroll transparent;&quot;&gt;&lt;div id=&quot;highlighter_392682&quot; class=&quot;syntaxhighlighter  &quot; style=&quot;width: 693px; margin: 1em 0px !important; padding: 1px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: relative !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background-image: none !important; background-attachment: initial !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;&quot;&gt;&lt;div class=&quot;lines&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;div class=&quot;line alt1&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background-image: none !important; background-attachment: initial !important; background-size: initial !important; background-origin: initial !important; background-clip: initial !important; background-position: initial !important; background-repeat: initial !important;&quot;&gt;&lt;table style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; border-collapse: collapse !important; background: none !important;&quot;&gt;&lt;tbody style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;tr style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;td class=&quot;number&quot; style=&quot;font-size: 1em !important; line-height: 1.1em !important; margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 3em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: auto !important; color: rgb(175, 175, 175) !important; background: none !important;&quot;&gt;&lt;code style=&quot;margin: 0px !important; padding: 0px 0.3em 0px 0px !important; border: 0px !important; outline: 0px !important; text-align: right !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: 2.7em !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; display: block !important; background: none !important;&quot;&gt;1&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;content&quot; style=&quot;font-size: 1em !important; line-height: 1.1em !important; margin: 0px !important; padding: 0px 0px 0px 0.5em !important; border-width: 0px 0px 0px 3px !important; border-left-style: solid !important; border-left-color: rgb(108, 226, 108) !important; outline: 0px !important; float: none !important; vertical-align: top !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: auto !important; background: none !important;&quot;&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&amp;lt;&lt;/code&gt;&lt;code class=&quot;keyword&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: auto !important; color: rgb(0, 102, 153) !important; background: none !important;&quot;&gt;p&lt;/code&gt;&amp;nbsp;&lt;code class=&quot;color1&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; color: rgb(128, 128, 128) !important; background: none !important;&quot;&gt;align&lt;/code&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;=&lt;/code&gt;&lt;code class=&quot;string&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; color: blue !important; background: none !important;&quot;&gt;&quot;center&quot;&lt;/code&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&amp;gt;태그에 속성을 부여하면 태그의 성격을 좀더 구체화 시킵니다.&amp;lt;/&lt;/code&gt;&lt;code class=&quot;keyword&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-weight: bold !important; font-size: 1em !important; min-height: auto !important; color: rgb(0, 102, 153) !important; background: none !important;&quot;&gt;p&lt;/code&gt;&lt;code class=&quot;plain&quot; style=&quot;margin: 0px !important; padding: 0px !important; border: 0px !important; outline: 0px !important; float: none !important; vertical-align: baseline !important; position: static !important; left: auto !important; top: auto !important; right: auto !important; bottom: auto !important; height: auto !important; width: auto !important; line-height: 1.1em !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: auto !important; background: none !important;&quot;&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px; height: 55px; margin-top: 10px; background: url(&amp;quot;/images/ie_bg01.gif&amp;quot;);&quot;&gt;&lt;/div&gt;&lt;div style=&quot;width: 700px; background: url(&amp;quot;/images/ie_bg02.gif&amp;quot;);&quot;&gt;&lt;iframe src=&quot;http://www.homejjang.com/src/source_view.php?uid=95&quot; frameborder=&quot;no&quot; width=&quot;680&quot; height=&quot;100&quot; scrolling=&quot;auto&quot; id=&quot;update_tb&quot; style=&quot;margin-left: 10px;&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; padding: 5px 0px 15px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&amp;lt;p&amp;gt;태그안에 align 이라는 속성(Attributes)을 추가적으로 사용하였습니다.&lt;br /&gt;&lt;br /&gt;단순히 &amp;lt;p&amp;gt;는 문단을 의미하지만 &amp;lt;p&amp;gt;안에 정렬을 의미하는 align 이라는 속성을 사용하면, 중앙정렬을 하는 문단을 의미합니다.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;변수(Arguments)&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;속성과 관련된 값입니다.&lt;br /&gt;&lt;br /&gt;위의 예제에서 align 이라는 속성에 center라는 변수를 지정했습니다.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;HTML은 공백(스페이스)과 엔터를 여러번 입력하더라도 하나의 공백으로만 인식합니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;그래서&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;홈짱닷컴의&lt;br /&gt;홈페이지 제작강좌는&lt;br /&gt;아주&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 쉽습니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이처럼&amp;nbsp;엔터와 공백을 여러번 입력하더라도 아래와 같이 한줄로 출력됩니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;홈짱닷컴의 홈페이지 제작강좌는 아주 쉽습니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;줄바꾸기 기능을 하는 가장 일반적인 태그는&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;와&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#ff0000&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;lt;br&amp;gt;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;태그입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;하나의 문단을 의미하는 &amp;lt;p&amp;gt; 태그&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;p는 paragraph의 약자로 문단을 의미합니다.&lt;br /&gt;&lt;br /&gt;&amp;lt;p&amp;gt;태그와 &amp;lt;/p&amp;gt;태그 사이에&amp;nbsp;위치하는 내용이 하나의 문단을 구성합니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;p&amp;gt;&lt;/font&gt;첫번째 문단(paragraph)&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;/p&amp;gt;&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;p&amp;gt;&lt;/font&gt;두번째 문단(paragraph)&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;/p&amp;gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;위와 같이 코딩하면 아래와 같이 첫번째 문단과 두번째 문단 사이에 공백라인이 들어갑니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;첫번째 문단(paragraph)&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;두번째 문단(paragraph)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;한글의 경우에는 문단의 첫글자를 들여쓰기 하지만 영문의 경우에는 문단과 문단 사이에는 한줄의 공백이 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;강제 줄바꿈을 할때는 &amp;lt;br&amp;gt; 태그&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;br은 Line Break를 의미하며 우리말로 하면 강제 줄바꿈이라고 할 수 있습니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;홈짱닷컴의&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;br&amp;gt;&lt;/font&gt;&lt;br /&gt;홈페이지 제작강좌는&lt;font color=&quot;#ff0000&quot;&gt;&amp;lt;br&amp;gt;&lt;br /&gt;&lt;/font&gt;아주 쉽습니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이렇게 줄바꿈을 할 위치에 &amp;lt;br&amp;gt; 태그를 넣어주면 아래와 같이 줄바꿈이 일어납니다.&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;홈짱닷컴의&lt;br /&gt;홈페이지 제작강좌는&lt;br /&gt;아주 쉽습니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&lt;strong&gt;&amp;lt;br&amp;gt; 태그의 남용을 피하자&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;글이 좌우로 너무 넓게 출력되면 가독성이 떨어지기에 글을 쓰면서 &amp;lt;br&amp;gt; 태그를 습관적으로 사용하는 경우가 많습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;그러나 가능한 글의 한문단을 의미하는 &amp;lt;p&amp;gt; 태그를 사용하고 넓게 출력되는 것을 방지하기 위해서 CSS를 함께 사용해 주는 방식이 좋습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;p&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;style=&quot;width:400px;&quot;&lt;/font&gt;&amp;gt;홈짱닷컴의 홈페이지 제작강좌는 초보자를 대상으로 합니다. 그러므로 가능한 쉬운 용어를 일관성 있게 사용할려고 노력하고 있습니다.&amp;lt;/p&amp;gt;&lt;br /&gt;&amp;lt;p&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;style=&quot;width:400px;&quot;&lt;/font&gt;&amp;gt;홈짱닷컴의 HTML 강좌는 단순히 화면에 출력되는 문서의 모양만 설명하지 않고 보다 의미있는 HTML 문서를 작성하는 방법을 추구하고 있습니다.&amp;lt;/p&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이와 같이 style 속성을 사용하면 문단의 좌우 폭을 지정할 수 있기 때문에 굳이 &amp;lt;br&amp;gt; 태그를 사용하지 않아도 자연스럽게 줄바꿈이 일어나게 할 수 있습니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;p style=&quot;font-size: 9pt; width: 400px;&quot;&gt;홈짱닷컴의 홈페이지 제작강좌는 초보자를 대상으로 합니다. 그러므로 가능한 쉬운 용어를 일관성 있게 사용할려고 노력하고 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt; width: 400px;&quot;&gt;홈짱닷컴의 HTML 강좌는 단순히 화면에 출력되는 문서의 모양만 설명하지 않고 보다 의미있는 HTML 문서를 작성하는 방법을 추구하고 있습니다.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;style 속성은 CSS 강좌 부분에서 자세하게 다루는 내용이므로 HTML 강좌에서는 설명을 생략하도록 하겠습니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr height=&quot;5&quot;&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;a&amp;gt; 태그를 사용하면 링크를 만들 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&quot;a&quot;는 앵커(Anchor)를 의미합니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;strong&gt;href&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;a&amp;gt; 태그는 기본적으로 href 속성을 가집니다. 이동할 페이지 주소를 적어주면 되죠.&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;a&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;href&lt;/font&gt;=&quot;http://www.naver.com&quot;&amp;gt;네이버&amp;lt;/a&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;strong&gt;target&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;a&amp;gt; 태그에서 사용할 수 있는 또 하나의 중요한 속성은 target입니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;target 속성은 링크가 걸린 페이지를 어떻게 열것인가를 결정합니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;a href=&quot;http://www.naver.com&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;target&lt;/font&gt;=&quot;_blank&quot;&amp;gt;네이버&amp;lt;/a&amp;gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;위와 같이 target 속성의 값을 _blank로 지정하면 새창에서 네이버 홈페이지가 열립니다.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;a href=&quot;http://www.naver.com/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(14, 112, 159);&quot;&gt;네이버&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;strong&gt;title&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;a&amp;gt;태그에서 살펴볼만한 3번째 속성은 title 속성입니다. 이는 링크의 이름을 지정하는 속성입니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;a href=&quot;http://www.naver.com&quot; target=&quot;_blank&quot;&amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;title&lt;/font&gt;=&quot;네이버 홈페이지 열기&quot;&amp;gt;네이버&amp;lt;/a&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;title을 지정해 주면 링크에 마우스를 올렸을때 타이틀이 표시됩니다. 아래 링크에 마우스를 올려서 확인해 보세요.&lt;/p&gt;&lt;table class=&quot;templateTable2&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; line-height: 19.2px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px;&quot;&gt;&lt;a title=&quot;네이버 홈페이지 열기&quot; href=&quot;http://www.naver.com/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(14, 112, 159);&quot;&gt;네이버&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;테이블 태그는 HTML 문서에서 가장 많이 사용되는 태그입니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;테이블 태그에서 가장 기본적인 태그는 &amp;lt;table&amp;gt;, &amp;lt;tr&amp;gt;, &amp;lt;td&amp;gt; 이 3가지 태그입니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;table&amp;gt;태그는 테이블의 시작을 알려주는 태그입니다. 테이블의 끝은 &amp;lt;/table&amp;gt;태그로 표시합니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;tr&amp;gt;태그는 table row의 약자로 행을 정의 합니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&amp;lt;td&amp;gt;태그는 table data의 약자로 각 행에 셀을 정의합니다. 즉 행에서 칸(열)을 나누는 기능을 합니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;이를 이해하기 위해서 가장 간단한 1행, 1열을 가지고 있는 테이블을 만들어 보면 다음과 같습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;table border=&quot;1&quot;&amp;gt;&lt;br /&gt;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;1*1 테이블&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;/table&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;테이블의 경계선(border)을 지정해주어야 테이블의 모양을 볼 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;1행에 2개의 칸(열)을 가진 테이블은 다음과 같습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;table border=&quot;1&quot;&amp;gt;&lt;br /&gt;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;1*1 셀&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;1*2 셀&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;/table&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;이번에는 행(row)을 확장하여 2*2 테이블을 만들어 보겠습니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;table border=&quot;1&quot;&amp;gt;&lt;br /&gt;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;1*1 셀&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;1*2 셀&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;tr&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;2*1 셀&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;lt;td&amp;gt;2*2 셀&amp;lt;/td&amp;gt;&lt;br /&gt;&amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;/table&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-family: 'Malgun Gothic';&quot;&gt;테이블을 만드는 순서는 먼저 테이블을 정의하고(table), 행(tr)을 지정한 다음, 그 행을 나누어서 셀(td)을 만드는겁니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;table width=&quot;745&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; border=&quot;0&quot; align=&quot;center&quot; bgcolor=&quot;white&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr height=&quot;30&quot;&gt;&lt;td style=&quot;font-size: 10pt; line-height: 20px; font-weight: bold; padding: 10px 0px 5px 10px; color: rgb(14, 112, 159); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(221, 221, 221);&quot;&gt;HTML문서에 이미지를 삽입하는 방법&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 0px 20px; height: 337px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;HTML문서에 이미지를 삽입하기 위해서는 &amp;lt;img&amp;gt;태그를 사용합니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;img src=&quot;이미지경로&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;&amp;lt;img&amp;gt;태그의 가장 기본적인 속성은 이미지 경로를 지정하는 src 속성입니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;만일 이미지 파일과 HTML 파일이 같은 폴더내에 있다면 그냥 이미지 파일명만 입력해 주면 됩니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이미지의 너비와 높이를 지정하기 위해서는 width 속성과 height 속성을 사용합니다. 이 속성을 지정해주지 않으면 기본적으로 이미지 자체의 너비와 높이로 삽입됩니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;img src=&quot;이미지경로&quot; width=&quot;100&quot; height=&quot;200&quot;&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;이미지에 링크를 거는 경우 링크가 걸린 이미지라는 것을 표시해주기 위해서 기본적으로 이미지의 경계선이 1픽셀로 표시됩니다. 그래서 이 경계선을 없앨려면 border 속성을 0으로 지정해 줍니다.&lt;/p&gt;&lt;table class=&quot;templateTable&quot; bordercolor=&quot;#505050&quot; cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;90%&quot; align=&quot;center&quot; border=&quot;1&quot; style=&quot;border-collapse: collapse; color: black; line-height: 19.2px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 30px 5px 5px; background: url(&amp;quot;http://homejjang.cdn1.cafe24.com/source.gif&amp;quot;) 0px 0px no-repeat;&quot;&gt;&amp;lt;a href=&quot;url&quot;&amp;gt;&amp;lt;img src=&quot;이미지경로&quot; border=&quot;0&quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;위의 예제에서 border 속성을 지우고 테스트 해보면 쉽게 이해할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;font-size: 9pt;&quot;&gt;초보자들이 HTML문서에 이미지를 삽입할때 가장 실수를 많이 하는 부분이 바로 이미지&amp;nbsp;경로입니다.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-size: 9pt; line-height: 18px; padding: 10px 10px 10px 20px; height: 20px;&quot;&gt;&lt;div style=&quot;width: 700px;&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/258</guid>
<comments>https://genesis8.tistory.com/258#entry258comment</comments>
<pubDate>Sun, 21 Feb 2016 19:31:49 +0900</pubDate>
</item>
<item>
<title>IIS 외부 게시</title>
<link>https://genesis8.tistory.com/256</link>
<description>&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;출처 :&amp;nbsp;http://ddochea.tistory.com/8&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;ASP.NET을 통해 개발된 페이지를 게시하기 위해선 IIS 가 필요하다.&amp;nbsp;물론 IIS가 아닌 다른&amp;nbsp;서비스를 사용할 수 있지만,&amp;nbsp;정식 Windows엔 기본적으로 포함되어 있으며 구축이 간단하기 때문에 &amp;nbsp;IIS로 구축하는 것이&amp;nbsp;가장 일반적이라 볼 수 있다. 이전에 해당 포스트를 다음(Daum) 블로그에서 작성한 적이 있어 내용을 조금 보강하여 포스트를 작성하였다. (그래봐짜 기존내용에서 몇 자 추가한게 전부다 -_-;;)&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;1. IIS 설치 과정&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;1)&amp;nbsp;제어판에서 '제어판-&amp;gt;프로그램-&amp;gt;Windows 기능 사용/사용안함' 으로 들어간다. Windows 8에선 'Windows 기능 사용/사용안함' 이 'Windows 기능 켜기/끄기'로 명칭이 변경되었다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 600px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/230D5A4354A52A1F35?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/230D5A4354A52A1F35&quot; width=&quot;600&quot; height=&quot;445&quot; style=&quot;border: 0px none; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;strong&gt;[그림 1] 프로그램 및 기능에 있는 Windows 기능 사용/사용안함 화면&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;2) 다음 항목들을 선택한다.&lt;br /&gt;- 보안 (해당 트리노드까지만 선택)&lt;br /&gt;- 응용 프로그램 개발 (해당 트리노드의 하위노드를 모두 선택)&lt;br /&gt;- 일반적인 HTTP 기능 (해당 트리노드까지만 선택)&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;- 웹 관리 도구 (해당 트리노드까지만 선택)&lt;br /&gt;* 일반적인 ASP.NET 기반 웹서버 구축에 대한 체크항목이므로 실제 필요한 사항과 차이가 있을 수 있다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 416px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/222C754154A52D2E2D?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/222C754154A52D2E2D&quot; width=&quot;416&quot; height=&quot;366&quot; style=&quot;border: 0px none; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;strong&gt;[그림 2] 인터넷 정보 서비스 선택항목&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: justify; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;3)&amp;nbsp;&lt;a href=&quot;http://localhost/&quot; style=&quot;color: rgb(125, 125, 125);&quot;&gt;http://localhost&lt;/a&gt;&amp;nbsp;로 접속하여 IIS 환영페이지가 나오는지 확인한다. 나온다면 웹서버 설치가 완료된 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: justify; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: justify; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;2. 외부(동일망 내)에 다른 기기에서 게시한 웹페이지&amp;nbsp;접근하기&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: justify; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: justify; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;1) 제어판 -&amp;gt; 시스템 및 보안 -&amp;gt; Windows 방화벽으로 들어간 뒤, 고급 설정을 선택한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 600px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/274EF84254A52ED222?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/274EF84254A52ED222&quot; width=&quot;600&quot; height=&quot;273&quot; style=&quot;border: 0px none; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span id=&quot;callbacknestddocheatistorycom89336&quot; style=&quot;width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;strong&gt;[그림 3] Window 방화벽 고급 설정 위치&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;2). 고급 설정란에서 인바운드 규칙을 누른뒤, 새 규칙을 누른다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 600px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2145CF4154A52FB520?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2145CF4154A52FB520&quot; width=&quot;600&quot; height=&quot;201&quot; style=&quot;border: 0px none; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;strong&gt;[그림 4] 인바운드 규칙에 새 규칙만들기&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;3). 새 인바운드 규칙 마법사가 실행되면 각 단계마다 다음과 같이 진행한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;1. 규칙종류 단계 :&amp;nbsp;미리정의됨을 선택한후 World Wide Web 서비스(HTTP)를 찾아 선택.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;2.&amp;nbsp;미리 정의된 규칙 :&amp;nbsp;항목을 선택하고 (한개 나올 것입니다.) 다음을 클릭.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; margin-left: 4em; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;3. 작업 : 연결 허용상태에서 그대로 마침 클릭&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 600px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/210ADB4454A530872E?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/210ADB4454A530872E&quot; width=&quot;600&quot; height=&quot;324&quot; style=&quot;border: 0px none; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;strong&gt;[그림 5] 규칙 종류 단계&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 600px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2442573E54A530EB2E?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2442573E54A530EB2E&quot; width=&quot;600&quot; height=&quot;324&quot; style=&quot;border: 0px none; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;strong&gt;[그림 6] 미리 정의된 규칙 단계&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; float: none; text-align: center; clear: none; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display: inline-block; width: 600px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/272F504354A531051F?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/272F504354A531051F&quot; width=&quot;600&quot; height=&quot;321&quot; style=&quot;border: 0px none; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&lt;strong&gt;[그림 7] 작업 단계&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;설정을 모두 완료한 후 스마트폰이나 태블릿으로 WI-FI에 연결한 후, IIS 를 설치한 PC의 IP로 웹 접속을 시도해본다. IIS 설치완료 후 나타나던 IIS 환영페이지가 나타난다면 보안설정에 성공한 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;Note 1. 만일 웹 서버에서 게시하고자 하는 웹의 포트를 기본 HTTP(80) 이 아닌 다른 포트로 설정한다면 규칙 종류 단계에서 포트를 선택하고 포트번호를 직접 입력하는 방법도 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; text-align: justify; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;Note 2. Windows 7 및 Windows Server 2008의 경우 ASP.NET 4.0이 등록되어있지 않을 수 있다. 따라서 아래와 과정을 거쳐야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;1.cmd 를 관리자 권한으로 실행 후, 해당 경로로 이동&lt;br /&gt;&amp;nbsp; C:\Windows\Microsoft.NET\Framework\v4.0.30319&lt;/p&gt;&lt;p style=&quot;color: rgb(99, 99, 99); font-family: Dotum; letter-spacing: -1px; line-height: 19.8px; padding-top: 0px !important; padding-bottom: 0px !important; background-color: rgb(37, 37, 37);&quot;&gt;2. aspnet_regiis.exe -i 명령어를 치면 설치메시지가 뜸. 기다리면 끝&lt;/p&gt;</description>
<category>Network</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/256</guid>
<comments>https://genesis8.tistory.com/256#entry256comment</comments>
<pubDate>Sun, 21 Feb 2016 13:43:13 +0900</pubDate>
</item>
<item>
<title>WAN과 LAN. MAN</title>
<link>https://genesis8.tistory.com/255</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원본 출처 :&amp;nbsp;&lt;/p&gt;&lt;p&gt;http://mindnet.tistory.com/entry/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-6%ED%8E%B8-WAN-%EC%9D%B4%EB%9E%80-%EC%9B%90%EA%B1%B0%EB%A6%AC-%ED%86%B5%EC%8B%A0%EB%A7%9D&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 5px 0px; display: inline-block; width: 400px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2263304451FB280308?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2263304451FB280308&quot; width=&quot;400&quot; height=&quot;300&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; line-height: 1.3; font-family: NanumGothic, Dotum, AppleGothic, sans-serif; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;이젠 LAN과 MAN에 대해서 알아봤으니 WAN 에 대해서도 알아봐야 겠죠?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;WAN 이란 녀석은 Wide Area Network 로써&amp;nbsp;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;&lt;b&gt;&quot; LAN 과 LAN을 연결하는, 즉 서로 멀리 떨어진 지역의 네&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;&lt;b&gt;트워&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;b style=&quot;color: rgb(0, 51, 153); font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;크를 연결해주게 됩니다&quot;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;즉, 우리는 WAN 을 통해 회사와 회사, 나라와 나라, 대륙과 대륙을 연결 해준다 보시면 됩니다&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;인터넷에 접속 한다라는 말은 WAN을 이용한다 보시면 되겠죠?&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 5px 0px; display: inline-block; width: 400px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/233F2E4751FB279D01?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/233F2E4751FB279D01&quot; width=&quot;400&quot; height=&quot;300&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; line-height: 1.3; font-family: NanumGothic, Dotum, AppleGothic, sans-serif; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;본격적으로 WAN에 대해 알아 보겠습니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;지구촌 시대라는 말, 전 세계의 많은 지역과 인터넷이나 전화를 통해 통신 할 수 있습니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;바로 네트워크가 가능하기 때문이지요, 한정적인 범위에서 사용 되는 네트워크가 LAN이라면&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; color: rgb(71, 200, 62);&quot;&gt;&lt;b&gt;넓은 범위에서 사용 되는 네트워크가 WAN(Wide Area Network) 입니다.&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;br /&gt;&lt;span id=&quot;callbacknestmindnettistorycom199495&quot; style=&quot;width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;Communication(통신)은&amp;nbsp;장비, 기기간에 정보를 네트워크를 통하게 됩니다. &amp;nbsp;즉 누구라도 네트워크에&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;연결 되어 있다라고 하면 통신이 가능하게 되는 것이지요&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;멀리 떨어진 상대와 통신하기 위한 네트워크를 WAN 또는 광역 네트워크라고 합니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;하나의 가정, 학교, 회사내의 빌딩에서 장비간에 통신에 사용 되는 네트워크를 LAN ( Local Area Network)&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;라 하면, WAN은 학교와 학교, 회사와 회사, 나라와 나라를 연결 하는 네트워크가 WNA 입니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 5px 0px; display: inline-block; width: 300px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/210F503D51FB27B435?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/210F503D51FB27B435&quot; width=&quot;300&quot; height=&quot;257&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; line-height: 1.3; font-family: NanumGothic, Dotum, AppleGothic, sans-serif; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(126, 65, 217);&quot;&gt;LAN과 WAN의 차이점으로는,&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;LAN은 거리가 비교적 짧기 때문에&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;고속 전송( 일반적으로 100Mbps 의 속도&amp;nbsp;)를 가지며&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;초기 설치 비용이 많으며 유지비용이 적은 LAN은&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;관리자가 직접 관리하는 만큼, 자유롭게 네트워크를 구축&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;할수 있게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;WAN은 물리적으로 넓은 범위를 가지기 때문에 고속 전송이 어려우며(수십 Kbps, 전용선&amp;nbsp;10~100Mbps)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;b&gt;ISP ( Internet Service Provider ) 인터넷 제공업체&lt;/b&gt;&amp;nbsp;에서 관리하며&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;허가 없이 네트워크를 구축 할수는 없지만 전문 업체&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;( 우리나라에선 대표적인 KT, SK, LG )&lt;/span&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot; style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;가&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&amp;nbsp;관리하기&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;때&lt;/span&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;문에 관리가&amp;nbsp;용이하다라고 할수 있습니&lt;/span&gt;&lt;span style=&quot;font-family: 돋움, Dotum, AppleGothic, sans-serif; font-size: 14px; line-height: 25px;&quot;&gt;다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;또한 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;WAN은 크게 두 종류로 분류할수 있는데, 바로&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;전용선과 교환회선 방식&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;입니다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;전용선은, 연결 되는 상대를 미리 결정하여 신뢰성이 높고, 향상된 품질로 데이터를 전송 할 수 있으며&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;고속 전송이 가능하게 됩니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;교환 회선 방식은 전화망이나 ISDN이 있으며 상대과의 사이에 회선은 연결,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;Bandwidth(대역폭)을 통&lt;/span&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px; font-family: 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;해 어떠한 정보라도 전달 가능합니다. 하지만 패킷 교환 방식에 비해 회선 이용도가 낮아 데이터 현재 데이터&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;통신에는 사용 되지 않습니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;추가적으로 패킷 교환 방식은 데이터 통신에 사용되는 축적 교환 방식으로, 송신처의 정보를 받아&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;수신처로 모든 정보를 일정한 길이의 데이터&amp;nbsp;또는 패킷(Packet)로 나누어 전송하는 방식입니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 5px 0px; display: inline-block; width: 350px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/22379E4251FB27C835?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/22379E4251FB27C835&quot; width=&quot;350&quot; height=&quot;250&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; line-height: 1.3; font-family: NanumGothic, Dotum, AppleGothic, sans-serif; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;오늘의 정리&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px; padding: 0px 0px 0px 25px; border: 0px; line-height: 15.6px; font-family: NanumGothic, Dotum, AppleGothic, sans-serif; color: rgb(138, 138, 138); list-style-type: square;&quot;&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px; line-height: 1.3;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;b&gt;WAN(Wide Area Network) 는 광대역 네트워크, 광역 종합 통신망, 원거리 통신망&lt;/b&gt;&amp;nbsp;이라 불리우며&lt;/span&gt;&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;한 국가나 한 대륙 또는 전세계에 걸친 넓은 지역의 수많은 컴퓨터들이 연결 되어 있는 통신 망을 나타 낸다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;WAN은 주로 LAN이 모여 그들이 고속 전송 가능한 회선으로 기기 들간에 접속 되는 형태이며&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;우리가 흔히 말하는 인터넷(INTERNET)도 WAN으로 볼 수 있으며&amp;nbsp;유무선 통신 이외에 인공위성 같은 무선&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;통신 또한 WAN 으로 연결된 네트워크라고 할수 있습니다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;http://gmng.tistory.com/52&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; display: block; overflow: hidden; position: relative; line-height: 0; -webkit-text-stroke-width: 0.3px; padding-bottom: 7px; color: rgb(0, 0, 0); font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; padding-top: 0px !important; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/277B114D561B8DA82C?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/277B114D561B8DA82C&quot; width=&quot;500&quot; height=&quot;193&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; border: 0px; display: block; box-sizing: border-box; max-width: 100%; height: auto; margin: auto; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; text-align: center; clear: none; float: none; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 18pt;&quot;&gt;LAN&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;LAN(Local Area Network)는 작은범위의 컴퓨터 네트워크를 말한&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;이더넷으로 구성되어 있어 물리계층(1계층)과 데이터링크 계층(2계층)과 관련있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;LAN을 구축하는 환경을 만들기 위해서는 UDP케이블, LAN카드, 스위치가 필요하&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; line-height: 24px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;LAN에서는 데이터를 전송할 시에는&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;브로드캐스트&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;방식으로 전달&lt;/span&gt;한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;케이블구분&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; border: 1px solid rgb(203, 203, 203); padding: 10px;&quot;&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;다이렉트 케이블&lt;/b&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;은 PC 단말과 스위치, 스위치와 라우터간 접속용으로 사용된다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;(간단하게 다른 계층간 연결을 위해 사용된&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;다.)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px;&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;크로스 케이블&lt;/b&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;은 스위치 간이나 라우터와 PC단말을 직접 연결할 때 사용된다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;(같은 계층끼리 혹은 1계층과 3계층을 이을시 사용된&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;다.)&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span id=&quot;callbacknestgmngtistorycom526203&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14pt;&quot;&gt;MAN(Metropolitan Area Network)&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;LAN보다 큰 지역을 지원.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;국제 표준안은 DQDB(Distributed Queue Dual Bus)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 12pt;&quot;&gt;이 규격은 전송 방향이 다른 두 버스로 모든 호스트를 연결하는 구조.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/div&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 18pt;&quot;&gt;WAN&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;WAN이란 멀리 떨어진 LAN이나 내선 전화망을 상호 연결하기 위한 다리역할을 하는 광범위 대규모 네트워크이다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;보통 KT, SK, LG같은 전기 통신업자가 운영하고, 우리는 서비스 요금을 지불하고 WAN회선을 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;WAN 에서는 데이터를 point to point 방식으로 주고 받는다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 18pt;&quot;&gt;WAN 구성요소&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; text-align: center; clear: none; float: none; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; display: block; overflow: hidden; position: relative; line-height: 0; -webkit-text-stroke-width: 0.3px; padding-top: 7px; padding-bottom: 7px; color: rgb(0, 0, 0); font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/216F454F561B8DD618?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/216F454F561B8DD618&quot; width=&quot;500&quot; height=&quot;254&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; border: 0px; display: block; box-sizing: border-box; max-width: 100%; height: auto; margin: auto; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; text-align: center; clear: none; float: none; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;①&amp;nbsp;엑세스라우터&lt;/b&gt;&amp;nbsp;: WAN에 접속하기 위한 라우터이다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;②&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;회선종단장치&lt;/b&gt;&amp;nbsp;: LAN과 WAN을 구분 짓는 장치이다. 액세스 라우터의 WAN쪽 인터페이스 까지 WAN이다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;보통 WAN전송방식과 LAN전송방식을 변환&lt;/b&gt;시킨다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;예를 들면 데이터가 광케이블로 들어왔다면 LAN에서 사용하는 UTP케이블 전송 방식으로 바꾸어야 한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;대표적인 회선종단장치에는 ONU, 모뎀, TA, DSU가 있다.&lt;/span&gt;&lt;/p&gt;&lt;p id=&quot;more52_0&quot; class=&quot;moreless_fold&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding: 33px 0px; position: relative; height: 1px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-right: 30px; position: absolute; z-index: 9; top: 33.5px; left: 0px; height: 47px; margin: -23.5px 0px; font-size: 15px; line-height: 47px; cursor: pointer; color: rgb(102, 102, 102); background-color: rgb(255, 255, 255);&quot;&gt;[ONU?]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;③&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;액세스 회선&lt;/b&gt;&amp;nbsp;: WAN 서비스를 이용하기 위해 WAN 중계국까지 접속하는 회선이다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;④&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;WAN중계망&lt;/b&gt;&amp;nbsp;: 출발지와 목적지(액세스 포인트 사이)를 중계해주는 역할을 한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 11pt;&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 18pt; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;IP VPN과 인터넷 VPN&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;IP VPN&lt;/b&gt;은 통신사업자가 독자적으로 구축한 폐쇄 IP망입니다. 중.대규모 크기에 보안성과 품질성이 높습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;인터넷 VPN&lt;/b&gt;은 인터넷상에서 구현된 VPN(Virtual Private Network,가상 사설망)입니다. 보통 VPN장치 사이가 가상의 암호화 터널로 되어있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;소규모 크기의 네트워크용 으로써 품질은 낮지만 비용도 그만큼 쌉니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;&lt;b style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 18pt;&quot;&gt;인터넷&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;컴퓨터 네트워크를 상호 연결시킨 세계 규모의 일반 공중 네트워크입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; font-size: 14.6667px; line-height: 22px;&quot;&gt;ISP(Internet Service Provider,인터넷 서비스 제공자)는 각 ISP간 상호 접속점을 공유하여 인터넷에 접속합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; text-align: center; clear: none; float: none; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; display: block; overflow: hidden; position: relative; line-height: 0; -webkit-text-stroke-width: 0.3px; padding-top: 7px; padding-bottom: 7px; color: rgb(0, 0, 0); font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; background-color: rgb(239, 239, 239);&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2723E84B561B8EFF12?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2723E84B561B8EFF12&quot; width=&quot;500&quot; height=&quot;354&quot; style=&quot;-webkit-font-smoothing: subpixel-antialiased; border: 0px; display: block; box-sizing: border-box; max-width: 100%; height: auto; margin: auto; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px; padding-top: 0px; padding-bottom: 0px; font-family: 'KoPubDotum Roboto', Roboto, 'San Francisco Display', 'Helvetica Neue', Arial, 'KoPub Dotum', 'KoPub 돋움', NanumBarunGothicOTF, NanumBarunGothic, 나눔바른고딕, Dotum, 돋움, sans-serif; font-size: 16px; line-height: 28px; text-align: center; clear: none; float: none; background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;-webkit-font-smoothing: subpixel-antialiased; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; color: rgb(138, 138, 138); font-family: NanumGothic; line-height: 15.6px;&quot;&gt;&lt;font color=&quot;#8a8a8a&quot; face=&quot;돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 25px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;</description>
<category>서버 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/255</guid>
<comments>https://genesis8.tistory.com/255#entry255comment</comments>
<pubDate>Sun, 21 Feb 2016 10:19:53 +0900</pubDate>
</item>
<item>
<title>올레 공유기 설정 로그인</title>
<link>https://genesis8.tistory.com/254</link>
<description>&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;/span&gt;출처 :&amp;nbsp;http://www.clien.net/cs2/bbs/board.php?bo_table=lecture&amp;amp;wr_id=264717&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/225DC04E56C90F6B21&quot; filemime=&quot;image/jpeg&quot; filename=&quot;20150324145446_Ra6NMDje_EAB8B0EAB080.jpg&quot; height=&quot;314&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;이번에 혹시 올레 기가와이파이홈 이라고 새로 출시된&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;공유기를 설치하신 분들이 있을거같습니다.&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;a href=&quot;http://smartblog.olleh.com/4700&quot; target=&quot;_blank&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(55, 66, 115); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;http://smartblog.olleh.com/4700&lt;/a&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;저도 또한 이 이벤트를 통하여&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;무료로 설치를 받아서 사용하니&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;생각보다&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;전에 사용하던 iptime 904ns 보다 신호가 약해 안터지던 5ghz 범위도 늘어나고&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;속도도 정말 엄청나게 빨라졌더라구요 2.4ghz 부분도 기기가 달라지니 최대속도까지 잘 나오구요 (5c 로도 90mbs 다운이 나옵니다.)&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;그러나 공유기를 설정하려면&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;ip 와 password 값이 전에 올레에서 제공하던 홈공유기와 아이디 패스워드가 다른 이유로&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;접속이 안되고&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;최신에 출시된 제품이라 접속방법은 전무하고&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;기가와이파이홈 홍보글들만 주루룩 나와서 당황스러웠습니다.&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;(실 사용자는 블로그에 올리지않고 정말좋아요 라는 홍보성 블로그들만 쭈르륵..)&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;거두절미하고&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;접속방법을 알려드리겠습니다.&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;①&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://172.30.1.254/&quot; target=&quot;_blank&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(55, 66, 115); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;http://172.30.1.254&lt;/a&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&amp;nbsp;또는&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://homehub.olleh.com/&quot; target=&quot;_blank&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(55, 66, 115); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;http://homehub.olleh.com&lt;/a&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&amp;nbsp;접속&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;② id: ktuser&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;password: homehub&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Verdana, 굴림; line-height: 18px;&quot;&gt;입력하시면 접속이 가능합니다.&lt;/span&gt;&lt;/p&gt;</description>
<category>프로그래밍 관련</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/254</guid>
<comments>https://genesis8.tistory.com/254#entry254comment</comments>
<pubDate>Sun, 21 Feb 2016 10:14:46 +0900</pubDate>
</item>
<item>
<title>MySql 설치하기</title>
<link>https://genesis8.tistory.com/253</link>
<description>&lt;p&gt;http://withcoding.com/26&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위의 글을 통해서 설치&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/253</guid>
<comments>https://genesis8.tistory.com/253#entry253comment</comments>
<pubDate>Sun, 21 Feb 2016 09:06:41 +0900</pubDate>
</item>
<item>
<title>IIS로 웹페이지를 열어보자.</title>
<link>https://genesis8.tistory.com/252</link>
<description>&lt;p&gt;IIS를 먼저 키고 페이지를 만들자..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2116263756C907E81D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;0.jpg&quot; height=&quot;480&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;IIS를 먼저 해보자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2617F33B56C907F22E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;자 이제 눌러서 켜보면.. 오잉?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2322083B56C908542B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;처음 튜토리얼로 만들어진 곳을 보면&amp;nbsp;C:\inetpub\wwwroot의 내부에&amp;nbsp;iisstart.htm이 있는 것을 볼 수 있다. 즉 진입점이 필요하다는 것인데.. 복사해서 내용을 좀 바꿔본다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/273E523656C909C929&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&quot;바탕&quot; 이라고 해놓았지만 이 경우 정상적으로 적용이 안되므로, 영어로 작성하자.&lt;/p&gt;&lt;p&gt;추후 background.JPG와 같이 수정하였다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/245DDB3656C909EF21&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;누르면 블로그로 잘 들어가진다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;로컬 ip로도 잘 들어가진다. 자 이걸로&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&amp;nbsp;접속이 되는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;지 확인해보자.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2540143856C90AAF03&quot; filemime=&quot;image/jpeg&quot; filename=&quot;캡처.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그렇다면 외부에서는?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;창이 뜨지 않는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이유가 뭘까 하고 보니..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;나는 공유기를 쓰고 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;포트 포워딩을 해줘야 했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;짤막하게 적는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/27491E4656C94C2022&quot; filemime=&quot;image/jpeg&quot; filename=&quot;zxczxc.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;등록을 하려고 보면 몇 개의 내역들이 있는 데 다음과 같다.&lt;/p&gt;&lt;p&gt;소스 IP 주소 -&amp;gt; 트래픽을 일으킨 대상의 IP&lt;/p&gt;&lt;p&gt;소스 포트 -&amp;gt; 위의 IP에서 연결할 때 사용한 포트 번호&lt;/p&gt;&lt;p&gt;외부 포트 -&amp;gt; 나에게 던져주는 공유기가 접근 받은 포트 번호&lt;/p&gt;&lt;p&gt;내부 IP 주소 -&amp;gt; 실제 IP가 아니라, '공유기에게' 내가 할당받은 ip 주소.&lt;/p&gt;&lt;p&gt;내부 포트 -&amp;gt;그래서 외부 포트로 부터, 내 어디에 받을 것인지?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;범위가 설정 가능하게 [ ] ~ [ ] 로 되어 있는 게 보이는데, 범위로 설정한다면&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;이를테면&lt;/span&gt;&lt;/p&gt;&lt;p&gt;외부 포트 -&amp;gt; 80 ~ 81&amp;nbsp;&lt;/p&gt;&lt;p&gt;내부 IP -&amp;gt; ~~~~&lt;/p&gt;&lt;p&gt;내부 포트 -&amp;gt; 80 ~ 81&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;공유기에게 80&amp;nbsp;포트로 접근한 애들은 내 80&amp;nbsp;포트에 연결이 들어 올 수 있고&lt;/p&gt;&lt;p&gt;81은 81 포트로 갈 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;외부 80에서 내부 80, 81로 했을 경우 80 -&amp;gt;80 으로만 연결이 된 것으로 보아.. 설정상의 차이거나 아니면 처음부터 그렇게 되어 있는 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서 끝이 아니었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 해서 나한테선 잘 되는데, 외부에서는 전혀 먹통일 수가 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이는 방화벽 때문에 일어나는 현상인데&lt;/p&gt;&lt;p&gt;방화벽 -&amp;gt; 고급 으로 간 뒤, 인바운드 규칙을 추가해주어야한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2103AC3656C94F2A37&quot; filemime=&quot;image/jpeg&quot; filename=&quot;캡처.jpg&quot; height=&quot;471&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;80은&amp;nbsp;기본적으로 잘 작동 될 수도 있다. World Wide Web 때문에 기존에 있을 수 있는 설정이니까.. 그렇지만 새로운 포트를 파고자 할 경우 꼭 인바운드 규칙을 만들어주자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2221253D56C94F4904&quot; filemime=&quot;image/jpeg&quot; filename=&quot;eee.jpg&quot; height=&quot;271&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;81 포트로도 아주 원만하게 접속이 잘 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Network</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/252</guid>
<comments>https://genesis8.tistory.com/252#entry252comment</comments>
<pubDate>Sat, 20 Feb 2016 22:49:37 +0900</pubDate>
</item>
<item>
<title>ASP란 무엇인가</title>
<link>https://genesis8.tistory.com/251</link>
<description>&lt;p&gt;http://www.tiptech.net/lcture/asp/basic/whatasp.html&lt;/p&gt;&lt;p&gt;http://minsookim.tistory.com/entry/ASP-ASP-%EB%9E%80&lt;/p&gt;&lt;p&gt;http://blog.naver.com/mobilism/70151511306&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 16.3636px;&quot;&gt;http://blog.daum.net/ssc1978/13852608&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 16.3636px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;ASP란?&lt;/p&gt;&lt;p&gt;Active Server Page의 약자로, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;동적으로 서버에서 작동하는 페이지를 의미&lt;/span&gt;. (반응에 의한 변화가 없고 고정적인 HTML은 정적인 페이지에 해당한다.)&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;서버 측의&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;스크립트(Server Side Script)다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(서버 측에서 작업의 처리를&amp;nbsp;위해 사용하는 언어다. 반대되는 개념으로 클라이언트 사이드 스크립트로 대표주자 자바 스크립트가 있다. 자바스크립트는 '사용자' 쪽에서 실행되는 반면, ASP 는 서버 측에서 실행된다.)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;서로 대화를 주고 받듯이 웹 페이지를 만들 수 있도록 MS사가 제공한 application&lt;/p&gt;&lt;p&gt;NT에 IIS(Internet Information Server)를 설치하므로써 사용 가능&lt;/p&gt;&lt;p&gt;IIS는 MS사에서 제공하는 웹 서버로, ASP는 IIS 3.0 이상에서만 동작&lt;/p&gt;&lt;p&gt;ASP 파일은 *.ASP 형태로 저장되어야 하며, 보통 서버 스크립트 언어를 사용&lt;/p&gt;&lt;p&gt;&amp;nbsp;서버 스크립트란?&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;ASP는 기존의 VBScript나 JavaScript와 크게 다를바 없는 스크립트&lt;/span&gt;입니다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;다만 '서버사이드 스크립트'라고 해서 서버에서 실행된다&lt;/span&gt;는 것이 다릅니다.&lt;/p&gt;&lt;p&gt;ASP에서 서버 스크립트를 구분하는 구분자는 &amp;lt;% 와 %&amp;gt;로, 이 사이에 사용된 스크립트는 서버에서 실행됩니다.&lt;/p&gt;&lt;p&gt;그렇기 때문에 브라우저에서 HTML 보기를 해도 ASP 코드 내용은 보이지 않습니다.&lt;/p&gt;&lt;p&gt;서버에서 실행되고 그 결과만을 가져다 보여주기 때문에 HTML 소스에는 그 결과값만 보이게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;PHP와는 다르게 윈도우 운영체제에서만 작동한다는 단점이 있다. 정확하게는 마이크로소프트사의 NT머신 IIS3.0 이상에서만 동작하는 특별한 페이지이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;작동원리&lt;/p&gt;&lt;p&gt;웹사이트 이용자가 어떠한 ASP페이지에 접속하면 이 ASP페이지는 ASP.DLL을 거처 해석된다음 HTML태그로 바뀌어진다. 그럼 웹브라우저가 이 HTML을 해석하여 화면에 보여주는것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;왜 ASP를 사용하나요&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;나모나 HTML로 홈페이지를 만들어 본 사람들은&amp;nbsp;어느 정도 시간이 지나면 자기의 생각을 홈페이지에서 마음대로&amp;nbsp;구현할 수 없다는 것에 실망을 하게 될 것입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;자바스크립트도&amp;nbsp;해 보고 플래쉬도 해 보지만 역시 만족스럽지 못합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;이&amp;nbsp;때 눈을 돌리게 되는 것이 ASP라고 할 수 있지요.&amp;nbsp;물론 대신에 CGI나 PHP라는 말도 많이 듣게 되겠지만.....그러면&amp;nbsp;사람들은 왜 ASP를 사용하고 있을까요?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;1) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사용자와의 동적인 상호작용&lt;/span&gt;을 원하기&amp;nbsp;때문입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;u&gt;HTML은 기본적으로 정보를 보여주기만&amp;nbsp;합니다. 하이퍼링크를 통해 사용자가 요청을 하면 웹서버가&amp;nbsp;그 요청에 응답하여 원하는 웹 페이지를 보여주는 방식으로&amp;nbsp;작업이 진행&lt;/u&gt;되지요.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;그것도 일종의 상호작용이라고 할&amp;nbsp;수는 있겠지만 웹 서버를 운영하는 사람과 사용자가 서로&amp;nbsp;어떤 정보를 주고 받는다든지 아니면 사용자들간에 서로&amp;nbsp;정보를 주고 받는다든지 하는 일은 기본적으로 불가능합니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); line-height: 1.6;&quot;&gt;ASP는 HTML로 불가능한 이런 일들을 가능하게 해 줍니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;2) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;서버측 자원을 사용해야 하는 경우&lt;/span&gt;입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;사용자로부터 어떤 내용을 입력받아 데이터베이스에&amp;nbsp;저장해야 할 경우와 같은 건데 이럴 경우는 반드시 ASP를&amp;nbsp;사용해야만 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;예를 들어 게시판 작성, 파일 업로드,&amp;nbsp;ID 인증 등과 같이 서버에 어떤 정보를 저장하거나 저장된&amp;nbsp;정보를 이용해 일을 하는 경우에는 ASP를 사용해야만 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;왜냐하면 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;HTML은 원칙적으로 클라이언트에서 번역되는 문서이기 때문에 서버의 다른 자원에 접근할 수가 없기 때문&lt;/span&gt;입니다&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;3) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;스크립트의 안정적인 실행을 위해서&lt;/span&gt;입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;자바스크립트를 예를 들어 볼까요? 자바스크립트도&amp;nbsp;날이 갈수록 버전이 높아지고 있습니다. v1.0, v1.1, v1.2,&amp;nbsp;v1.3... 그러다보면 상위 버전의 자바스크립트를 삽입한&amp;nbsp;HTML문서가 어떤 웹 브라우저에서는 의도하는대로 번역이&amp;nbsp;되지 않는 사태가 벌어질 수도 있습니다. 이럴 경우 서버에서&amp;nbsp;실행되는 스크립트라면 서버에서 HTML형태로 번역된 후&amp;nbsp;넘겨지게 되니까 어떤 웹 브라우저에서라도 잘못될 염려가&amp;nbsp;없을 것입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;4) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;스크립트 소스를 감추기 위해서&lt;/span&gt;입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;클라이언트측 스크립트들은 HTML 속에&amp;nbsp;포함되어 서버에서 클라이언트로 전송된 다음 클라이언트의&amp;nbsp;웹 브라우저에서 번역됩니다. 따라서 사용자들은 소스보기를&amp;nbsp;통해 스크립트의 내용을 볼 수가 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;그러나, 서버측&amp;nbsp;스크립트를 사용함으로써 개발자는 자신의 독특한 알고리즘을&amp;nbsp;감출 수가 있습니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); line-height: 1.6;&quot;&gt;물론 이런 목적을 위해 ASP를&amp;nbsp;사용한다는 것을 좋다고 할 수는 없겠지만 이런 기술로&amp;nbsp;밥먹고 사는 사람들에게는 꼭 필요한 것이 아닐까요? &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(214, 214, 214); font-family: 굴림, gulim, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;</description>
<category>ASP</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/251</guid>
<comments>https://genesis8.tistory.com/251#entry251comment</comments>
<pubDate>Sat, 20 Feb 2016 22:15:35 +0900</pubDate>
</item>
<item>
<title>다중 스레딩(multi threading)</title>
<link>https://genesis8.tistory.com/243</link>
<description>&lt;p&gt;&lt;font color=&quot;#252525&quot; face=&quot;sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;b&gt;출처 : 위키백과&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;멀티스레딩&lt;/b&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;(Multithreading) 컴퓨터는 여러 개의&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8A%A4%EB%A0%88%EB%93%9C&quot; title=&quot;스레드&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;스레드&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;를 효과적으로 실행할 수 있는 하드웨어 지원을 갖추고 있다. 이는 스레드가 모두 같은 주소 공간에서 동작하여 하나의&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/CPU_%EC%BA%90%EC%8B%9C&quot; title=&quot;CPU 캐시&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;CPU 캐시&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&amp;nbsp;공유 집합과 하나의&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B3%80%ED%99%98_%EC%83%89%EC%9D%B8_%EB%B2%84%ED%8D%BC&quot; title=&quot;변환 색인 버퍼&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;변환 색인 버퍼&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&amp;nbsp;(TLB)만 있는&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%84%9C&quot; title=&quot;멀티프로세서&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;멀티프로세서&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&amp;nbsp;시스템 (&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%A9%80%ED%8B%B0_%EC%BD%94%EC%96%B4&quot; title=&quot;멀티 코어&quot; style=&quot;color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;멀티 코어&lt;/a&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;시스템)과는 구별한다. 그러므로 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;멀티스레딩은 프로그램 안에서 병렬 처리의 이점을 맛볼 수 있지만 &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;멀티프로세싱 시스템은 여러 개의 프로그램들을 병렬로 처리할 수 있다.&lt;/span&gt; 멀티프로세싱 시스템이 여러 개의 완전한 처리 장치들을 포함하는 반면 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;멀티스레딩은 스레드 수준뿐 아니라 명령어 수준의 병렬 처리에까지 신경을 쓰면서 하나의 코어에 대한 이용성을 증가&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;하는 것에 초점을 두고 있다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EC.9E.A5.EC.A0.90&quot;&gt;장점&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%94%A9&amp;amp;action=edit&amp;amp;section=2&quot; title=&quot;부분 편집: 장점&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ol style=&quot;margin: 0.3em 0px 0px 3.2em; padding: 0px; list-style-image: none; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;b&gt;응답성&lt;/b&gt;&amp;nbsp;: 대화형 프로그램을 멀티스레드화하면, 프로그램의 일부분(스레드)이 중단되거나 긴 작업을 수행하더라도 프로그램의 수행이 계속되어, 사용자에 대한 응답성이 증가된다. 예를 들어, 멀티스레드가 적용된 웹 브라우저 프로그램에서 하나의 스레드가 이미지 파일을 로드하고 있는 동안, 다른 스레드에 사용자와의&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%83%81%ED%98%B8_%EC%9E%91%EC%9A%A9&quot; title=&quot;상호 작용&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;상호 작용&lt;/a&gt;이 가능하다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;b&gt;자원 공유&lt;/b&gt;&amp;nbsp;: 스레드는 자동적으로 그들이 속한 프로세스의 자원들과 메모리를 공유한다. 코드 공유의 이점은, 한 응용 프로그램이 같은 주소 공간 내에 여러 개의 다른 활동성 스레드를 가질 수 있다는 점이다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;b&gt;경제성&lt;/b&gt;&amp;nbsp;: 프로세스 생성에 메모리와 자원을 할당하는 것은 비용이 많이 든다. 스레드는 자신이 속한 프로세스의 자원들을 공유하기 때문에, 스레드를 생성하고 문맥교환을 하는 편이 보다 경제적이다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;b&gt;멀티프로세서 활용&lt;/b&gt;&amp;nbsp;: 멀티프로세서 구조에서는 각각의 스레드가 다른 프로세서에서 병렬로 수행될 수 있다. 단일 스레드 프로세스는 CPU가 많아도 CPU 한개에서만 실행된다. 즉, 다중 스레드화를 하면 다중 CPU에서 병렬성이 증가된다.&lt;/li&gt;&lt;/ol&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.8B.A8.EC.A0.90&quot;&gt;단점&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%94%A9&amp;amp;action=edit&amp;amp;section=3&quot; title=&quot;부분 편집: 단점&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;다중 스레드는&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BA%90%EC%8B%9C&quot; title=&quot;캐시&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;캐시&lt;/a&gt;나&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B3%80%ED%99%98_%EC%83%89%EC%9D%B8_%EB%B2%84%ED%8D%BC&quot; title=&quot;변환 색인 버퍼&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;변환 색인 버퍼&lt;/a&gt;(TLB)와 같은 하드웨어 리소스를 공유할 때 서로를 간섭할 수 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;하나의 스레드만 실행 중인 경우 싱글 스레드의 실행 시간이 개선되지 않고 오히려 지연될 수 있다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;멀티스레딩의 하드웨어 지원을 위해 응용 프로그램과 운영 체제 둘 다 충분한 변화가 필요하다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;스레드 스케줄링은 멀티스레딩의 주요 문제이기도 하다.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;margin: 1em 0px 0.25em; overflow: hidden; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(170, 170, 170); font-family: 'Linux Libertine', Georgia, Times, serif; line-height: 1.3; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.A9.80.ED.8B.B0.EC.8A.A4.EB.A0.88.EB.93.9C_.EB.AA.A8.EB.8D.B8&quot;&gt;멀티스레드 모델&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate; font-family: sans-serif;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%94%A9&amp;amp;action=edit&amp;amp;section=4&quot; title=&quot;부분 편집: 멀티스레드 모델&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.8B.A4-.EB.8C.80-.EC.9D.BC.28Many-to-One.29&quot;&gt;다-대-일(Many-to-One)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%94%A9&amp;amp;action=edit&amp;amp;section=5&quot; title=&quot;부분 편집: 다-대-일(Many-to-One)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;여러 개의 사용자 수준 스레드들이 하나의 커널 스레드(프로세스)로&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%A7%A4%ED%95%91&quot; title=&quot;매핑&quot; class=&quot;mw-disambig&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;매핑&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;되는 방식&lt;/span&gt;으로, &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사용자 수준에서 스레드 관리가 이루어진다&lt;/span&gt;. 주로 커널 스레드를 지원하지 않는 시스템에서 사용하며, &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;한 번에 하나의 스레드만이 커널에 접근할 수 있다는 단점&lt;/span&gt;이 있다. 하&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;나의 스레드가 커널에 시스템 호출을 하면 나머지 스레드들은 대기해야 하기 때문에 진정한 의미의 동시성을 지원하지 못한다.&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;다시 말해, 여러 개의 스레드가 동시에 시스템 호출을 사용할 수 없다. &lt;/span&gt;&lt;u&gt;또한 커널 입장에서는 프로세스 내부의 스레드들을 인식할 수 없고 하나의 프로세스로만 보이기 때문에 다중처리기 환경이라도 여러 개의 프로세서에 분산하여 수행할 수 없다.&lt;/u&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EC.9D.BC-.EB.8C.80-.EC.9D.BC.28One-to-One.29&quot;&gt;일-대-일(One-to-One)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%94%A9&amp;amp;action=edit&amp;amp;section=6&quot; title=&quot;부분 편집: 일-대-일(One-to-One)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;div&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사용자 스레드들을 각각 하나의 커널 스레드로 매핑시키는 방식&lt;/span&gt;이다. 사용자 스레드가 생성되면 그에 따른 커널 스레드가 생성되는 것이다. 이렇게 하면&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 다-대-일 방식에서 시스템 호출 시 다른 스레드들이 중단되는 문제를 해결할 수 있으며 여러 개의 스레드를 다중처리기에 분산하여 동시에 수행할 수 있는 장점&lt;/span&gt;이 있다. &lt;u&gt;그러나 커널 스레드도 한정된 자원을 사용하므로 무한정 생성할 수는 없기 때문에, 스레드를 생성할 때 그 개수를 염두에 두어야 한다.&lt;/u&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.8B.A4-.EB.8C.80-.EB.8B.A4.28Many-to-Many.29&quot;&gt;다-대-다(Many-to-Many)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%A9%80%ED%8B%B0%EC%8A%A4%EB%A0%88%EB%94%A9&amp;amp;action=edit&amp;amp;section=7&quot; title=&quot;부분 편집: 다-대-다(Many-to-Many)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;여러 개의 사용자 스레드를 여러 개의 커널 스레드로 매핑시키는 모&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;델&lt;/span&gt;이다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;다-대-일 방식과 일-대-일 방식의 문제점을 해결하기 위해 고안&lt;/span&gt;되었다.&lt;u&gt; 커널 스레드는 생성된 사용자 스레드와 같은 수 또는 그 이하로 생성되어 스케줄링&lt;/u&gt;한다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;다-대-일 방식에서 스레드가 시스템 호출시 다른 스레드가 중단되는 현상&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;과 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;일-대-일 방식에서 사용할 스레드의 수에 대해 고민하지 않아도 된다. &lt;/span&gt;커널이 사용자 스레드와 커널 스레드의 매핑을 적절하게 조절한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/243</guid>
<comments>https://genesis8.tistory.com/243#entry243comment</comments>
<pubDate>Wed, 17 Feb 2016 14:25:25 +0900</pubDate>
</item>
<item>
<title>유저 레벨 스레드(user level thread) / 커널 레벨 스레드(kernel level thread)</title>
<link>https://genesis8.tistory.com/242</link>
<description>&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;Thread-Package Architectures 는 다음의 구조&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;user-level threads (1-on-N)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;kernel supported threads (1-on-1)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;multi-level (userland/kernel hybrid) threads (M-on-N)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;[User-level threads]&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;User-Level threads는 &lt;/span&gt;응용 프로그램과 Link/Load가 되는&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 라이브러리로 구현되어집니다.&lt;/span&gt; 이 라이브러리에 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;동기화, 스케줄링 기능을 모두 담고 있습니다.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;커널에서는 아무런 지원을 해주지 않으며, 커널이 보기에는 단지 그냥 Single process일 뿐&lt;/span&gt;입니다. 프로세스마다 런타임 라이브러리의 Copy가 호출되므로 스케줄링 정책을 프로세스마다 달리 취할 수 있으며, 각 Thread마다 time quantum을 소모할 필요 없고, 런타임 라이브러리가 context를 유지하기때문에 switching을 할 필요가 없습니다. 그래서 User-Level Threads는 빠르고, 매우 효율적입니다. 그러나&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 장애가 꽤 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;1. Blocking System Calls&lt;br /&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Blocking function이란 처리가 완료되지않으면 return되지 않는 함수인데, 만약 특정 Thread에서 Blocking이 되어 버리면, 전체 process가 Blocking이 되어버립니다&lt;/span&gt;. &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이런 이유로 운영체제가 제공하는 non-blocking 함수들만 사용해야 하며, 사용 빈도가 높은 함수(read,select,wait,...)들은 해당 함수의 non-blocking 버젼으로 대체해야할 필요가 있습니다.&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;2. Shared System Resources&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;동기화나 Locking없이 Thread끼리 공유하는 변수(드러나지 않고 감춰져 있는 경우)가 있을때, 그 Thread가 thread-safe하지 않으면 Overwrite되는 문제가 생길 수 있습니다. &lt;/span&gt;이 이유로 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;사용할 함수는 재진입이 가능해야합니다. User-Level뿐만아니라 Kernel-Level 함수까지 모두.&lt;/span&gt;&lt;br /&gt;3. signal Handling, Thread Scheduling&lt;br /&gt;User-Level에서 이것을 구현하기란 상당히 어렵습니다. Timeslice를 다루기 위해 Hardware Clock 인터럽트를 보통의 방법으로는 받지 못합니다. 선점형(Preemptive) 스케줄링을 하기 위해서는 커널로 부터 Time Siganl을 받는 함수를 등록해두어야 하며, Timer Alarm Siganl을 다루는것은 다른 시그널을 다루는 것보다 아주 어렵습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;4. Multiprocess Utilization&lt;br /&gt;하나의 프로세스에서 Time을 공유하고 있기때문에 여러개의 CPU를 동시에 사용할 수는 없습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;정리 - &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;구현상의 어려움과 복잡성 그리고, 몇가지 장애에도 불구하고, concurrency와 efficiency의 이득을 가져다 줍니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;[Kernel-level threads]&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Kernel-level에 있는 Threads는 독립적으로 스케줄되므로 특정 Thread에서의 Blocking이 process로 전파되지 않습니다. 그래서 Blocking System Calls를 이용할수 있습니다. 또한 각 Threads끼리 Signal을 주고 받을 수 있습니다.&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;Kernel-level threads는 특별히 고려할만한 장애를 가지고 있지는 않습니다. 물론 마찬가지로 Thread-Safe해야 하지만, OS 개발자들은 대개의 표준 라이브러리를 Thread-Safe하게(재진입해도 문제없겠끔) 만들기에 User-level threads보다 통상적으로 보다 덜 말썽을 피웁니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Kernel-level threads는 안정성에 비해서 너무 느리다는게 큰 단점&lt;/span&gt;입니다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;바로 Thread Context-Switch 때문입니다. 마로비치의 연구에 의하면 10배정도 느리다고 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;[multiplexed threads]&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;User-level threads와 Kernel-level threads를 섞은 방법입니다. User-level thread(줄여서 Thread)는 LWP(가벼워진 프로세스, Lightweight Processes)에 의해 multiplex됩니다. 커널은 LWP를 스케줄링/실행하고, LWP는 대기중인 thread를 골라서 실행합니다. thread는 하나의 LWP에서 실행이 되어지며, Time slice가 바뀔때 LWP도 바뀌어질 수 있습니다. 프로그래머는 thread를 사용할 수도 있고, LWP를 직접 사용할수 있고, 둘 모두를 동시에 사용할 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;User-level threads처럼 작동하면서 Hardware Parallelism과 Blocking calls에 대처할 수 있으며, Context-Switch을 많이 하지 않습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;이것의 장애는, LWP가 Blocking이 되면 이 LWP가 가진 몇개의 Thread도 동시에 Blocking이 됩니다. 또한 LWP의 Context-Switch 비용은 Kernel-level threas보다 결코 싸지 않습니다. 또한 다중 CPU에서 효율적일려면 각 Thread는 각각 다른 LWP에 할당되어 있어야 합니다. 각 Thread의 LWP 할당과 LWP의 CPU 할당은 별개로서 이루어지기 때문에, 각 Thread가 서로다른 CPU에 할당될려면 이렇게 작동하겠끔 하는 매커니즘이 따로 존재하여야합니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;이러한 이유로 인해 LWP에 의한 multiplexed threads는 궁극의 해결책은 못됩니다. 이상적으로, Kernel-level threads의 결정적인 단점인 Thread Context-Switch를 user-level threds만큼 빠르게만 한다면 그것으로서 모든 장애는 해결됩니다. 물론 이 방법은 있지만 여전히 문제점을 가지고 있습니다. 아래 방법입니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;[Scheduler Activation(kernel-supported user-level threads)]&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;이 방법은 User-level threads들을 위한 특별한 지원을 kernel이 해주는겁니다. 그 부분은 Scheduler Activation이라 합니다. User-level threads 라이브러리는 커널에게 프로세스를 요구할때와 양도할때를 알려줍니다. 그러면 커널의 Scheduler Activation은 이것을 커널에 의한 프로세스 주소 공간으로 할당된 Virtual Processor로 표현합니다. 여기서 스케줄링과 Blocking 감지가 이루어지며, Granted processor,Preemptive thread,Blocked,Unblocked등등의 Event를 User-level의 런타임 시스템에게 알려줍니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;개념적으로 이 방법이 가장 확실합니다만 이것은 단 한가지, 그러나 치명적일 수도 있는, 약점이 있습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;커널과 라이브러리 코드가 효율적인 교신을 위해 같은 주소 공간을 공유하기 때문에 예외적으로 높은 신뢰를 가지고 있어야 하며 bug-free이어야합니다. 이 방법은 개념적으로 비정상적인 작동(의도적인 비정상적 작동 포함)과 버그에 대해서 강건함(robust)을 가지지 못합니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;SunOS는 multiplexed threads를 지원합니다. 그외(WindowsNT,MACH,OS/2)는 Kernel-level threads를 지원합니다. 이 책에서는 MACH가 Kernel-level threads를 지원한다고 되어 있지만 어떤 Web site에 가니 MACH도 LWP도 지원하는걸로 되어 있군요. 이것이 multiplexed threads를 지원한다라는건지 아님 User-level threads의 구현상의 한방법인지는 모르겠습니다. 어쩌면 둘은 말만 다를뿐 별로 차이가 없는 것일지도 모르겠고.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;Linux에서 작동되는 User-level threads는 아래와 같습니다.&lt;br /&gt;Bare-Bones Threads,CLthreads,DCEthreads,FSU Pthreads,JKthread,LinuxThreads,LWP,NThreads (Numerical Threads),PCthreads,Provenzano Pthreads,QuickThreads,RexThreads.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;a href=&quot;http://www.sftw.umac.mo/resource/LDP/FAQ/Threads-FAQ/ThreadLibs.html&quot; target=&quot;_blank&quot; style=&quot;font-weight: bold; color: rgb(51, 102, 153);&quot;&gt;http://www.sftw.umac.mo/resource/LDP/FAQ/Threads-FAQ/ThreadLibs.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;https://kldp.org/node/295#comment-764&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;bb-quote&quot; style=&quot;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;Quote:&lt;blockquote class=&quot;bb-quote-body&quot;&gt;사용자 수준은 문맥교환(context switching)의 오버해드가 없다.&lt;/blockquote&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사용자 쓰레드 방식이 커널 쓰레드보다 오버헤드가 적은(없지는 않음) 이유는&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;쓰레드간&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;전환할 때마다 커널 스케줄러를 호출할 필요가 없기 때문&lt;/span&gt;입니다.&lt;br /&gt;커널 스케줄러로 진입하려면 프로세서 모드를 사용자 모드에서 커널 모드로&lt;br /&gt;전환해야 하는데, 이때 사용자쪽 하드웨어 레지스터를 전부 저장시키고, 커널&lt;br /&gt;레지스터를 복구하고, 기타 등등...의 수많은 작업이 밑에서 일어납니다.&lt;br /&gt;따라서 사용자 모드와 커널 모드를 많이 왔다갔다 할 수록 성능은 급격하게&lt;br /&gt;떨어지는 것이죠. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;사용자 쓰레드는 쓰레드 스케줄러가 사용자 모드에만 있기&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;때문에 그런 오버헤드는 발생하지 않습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;bb-quote&quot; style=&quot;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;Quote:&lt;blockquote class=&quot;bb-quote-body&quot;&gt;커널 수준은 사용자 수준 보다 효율적일 수 있다.&lt;br /&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;그런데 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사용자 쓰레드의 결정적인 단점은 프로세스내의 한 쓰레드가 커널로&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;진입하는 순간 나머지 쓰레드들도 전부 정지된다&lt;/span&gt;는 점입니다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널이 쓰레드의&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;존재를 알지 못하므로 불가피한 현상&lt;/span&gt;입니다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;쓰레드가 커널로 진입할 때는&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;write(), read(), ...같은 시스템 호출을 부를 때&lt;/span&gt;인데, 시스템 호출 길이가&lt;br /&gt;짧아서 바로 리턴할 때는 문제가 없지만 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;연산이 길어지면 상당한 문제&lt;/span&gt;가&lt;br /&gt;됩니다. 전체 프로세스의 응답성이 확~ 떨어지죠.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;그리고 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널 쓰레드를 쓰면 멀티프로세서를 활용할 수 있다는 큰 장점&lt;/span&gt;이&lt;br /&gt;있습니다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;사용자 쓰레드는 CPU가 아무리 많더라도 커널 모드에서 쓰레드&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;단위로 스케줄이 안되므로 각 CPU에 효율적으로 쓰레드를 배당할 수 없는&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;문제가 있습니다(프로세스 단위로만 배당이 되므로).&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;그래서 리눅스, 윈도, 솔라리스를 비롯한 대부분의 운영체제는 사용자 쓰레드를&lt;br /&gt;쓰지 않고 커널 쓰레드, 또는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널/사용자 쓰레드 혼합 방식을 쓰는 추세&lt;/span&gt;입니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;bb-quote&quot; style=&quot;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;Quote:&lt;blockquote class=&quot;bb-quote-body&quot;&gt;그리고 현재 리눅스에서는 두가지 쓰레드 모델이 모두 지원 되나요?&lt;br /&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;예, 모두 지원됩니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;쓰레드 방식은 크게 세가지가 있습니다. 이중 사용자 쓰레드는 요즘들어&amp;nbsp;&lt;br /&gt;리눅스에서는 별로 쓰는 사람이 없는 것 같고, 1-on-1 커널 쓰레드 방식인&lt;br /&gt;glibc내의 LinuxThreads가 가장 널리 쓰입니다. 최근에는 이걸 더 발전시킨&lt;br /&gt;NPTL(Native POSIX Threading Library)가 활발히 개발중에 있습니다.&amp;nbsp;&lt;br /&gt;커널/사용자 쓰레드 혼합 방식인 NGPT(Next Generation POSIX Threads)&lt;br /&gt;도 IBM의 지원하에 최근 2.2.0까지 나와 있습니다. 둘간의 차이를 여기서&lt;br /&gt;설명하기엔 좀 긴 것 같고, 전자가 후자보다 훨씬 간단한 반면, 후자의 성능이&lt;br /&gt;전자보다 다소 높은 것으로 알려져 있습니다. 여담입니다만, NPTL이 처음&lt;br /&gt;나왔을 때 우리 것이 NGPT보다도 성능이 훨씬 좋다고 자랑(?)을 했더니&lt;br /&gt;NGPT팀이 자극을 받았나 봅니다. NGPT 홈페이지에 가면 새버전(2.2.0)&lt;br /&gt;성능이 LinuxThreads는 물론 NPTL도 능가한다고 큼지막하게 써놨습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;bb-quote&quot; style=&quot;font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;Quote:&lt;blockquote class=&quot;bb-quote-body&quot;&gt;kernel thread는 user thread에서 LWP 자료구조를 통해 연결되는데&lt;/blockquote&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;중요한 것은 아닙니다만...&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;LWP는 경량 프로세스(lightweight process)의 준말로, 솔라리스에서(그리고&lt;br /&gt;최근의 NetBSD에서) 내부적으로 쓰는 말입니다. 리눅스, 윈도, FreeBSD에선&lt;br /&gt;그냥 thread라고 합니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;http://mesl.khu.ac.kr/?document_srl=271099&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;font-family: 'Malgun Gothic'; font-size: 12px; line-height: 19.2px;&quot;&gt;커널쓰레드는 커널단위로 쓰레드가 할당되기 때문에 운영체제가 각 커널 쓰레드 목록을 관리하구요&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; line-height: 19.2px;&quot;&gt;유저 레벨 쓰레드는 말그대로 프로세스 안에 유저단위로 쓰레드가 움직이는 양상이기때문에&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; line-height: 19.2px;&quot;&gt;운영체제입장에서 보면 결국은 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;하나의 프로세스가 모든 쓰레드를 관리하는 모양&lt;/span&gt;이 됩니다.&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; line-height: 19.2px;&quot;&gt;(운영체제가보면 프로세스는 하나가 돌고있는거라고 볼수 있겠네요)&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; line-height: 19.2px;&quot;&gt;그렇기 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;때문에 만일 그 프로세스 내에서 문제가 생겨서 프로세스에러가 생긴다면&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic'; line-height: 19.2px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;유저레벨 쓰레드에서는 프로세스의 망가짐으로 인해 모든 유저가 큰 타격을 받을수가 있습니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 19.2px;&quot;&gt;하지만 커널모드쓰레드는 각 커널이 개별적이라 그런 위험부문에선 안정적이라고 볼 수도 있겠네요&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;font-family: 'Malgun Gothic'; font-size: 12px; line-height: 19.2px;&quot;&gt;더 붙여 말하자면 user-level thread는 커널자체에서 개념을 바꾸기 힘들기 때문에 임시적으로 사용하는 방법이었고,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: 'Malgun Gothic'; font-size: 12px; line-height: 19.2px;&quot;&gt;추후에 나오는 커널들에서 완벽한 스레드를 지원하는 kernel-level thread로 바뀌었다&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;http://dakuo.tistory.com/93&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/230AFD4256C3EAFF0D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;thread_5.jpg&quot; height=&quot;308&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;유저 영역 : 사용자가 구현한 프로그램 동작시 사용하게 되는 메모리 영역&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;커널 영역 : 운영체제 동작시 사용하게 되는 메모리 영역&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;커널 레벨 쓰레드 :&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;쓰레드를 생성 및 스케줄링하는 주체가 커널&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;imageblock center&quot; style=&quot;border: 1px solid rgb(221, 221, 221); padding: 5px; margin: 5px 0px; color: rgb(102, 102, 102); font-family: dotum; text-align: center; clear: both;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/151B49194B8EF36129?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/151B49194B8EF36129&quot; width=&quot;352&quot; height=&quot;275&quot; alt=&quot;&quot; style=&quot;border: 0px; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;장점 : 안전성과 다양한 기능&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;단점 : 유저 모드와 커널 모드로의 전환으로 인해 성능이 저하된다.&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;(참고 : 사용자가 구현한 프로그램은 기본적으로 유저모드에서 동작하다가 Windows 커널이 실행되어야 하는 경우&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;커널 모드로의 전환이 일어나고 일을 마치면 다시 유저 모드로 전환된다)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;유저 레벨 쓰레드 :&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;커널에 의존적이지 않은 형태로 쓰레드의 기능을 제공하는 라이브러리를 활용&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;imageblock center&quot; style=&quot;border: 1px solid rgb(221, 221, 221); padding: 5px; margin: 5px 0px; color: rgb(102, 102, 102); font-family: dotum; text-align: center; clear: both;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/1217D5184B8EF37A3B?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/1217D5184B8EF37A3B&quot; width=&quot;349&quot; height=&quot;274&quot; alt=&quot;&quot; style=&quot;border: 0px; cursor: pointer; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;(참고 : 스케줄러는 쓰레드를 지원하지 않아 쓰레드의 존재를 모른다. 따라서 프로세스 단에서 스케줄링을 한다&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;따라서 쓰레드 끼리의 스케줄링은 유저가 구현해야 한다)&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;장점 : 유저모드에서 커널모드로의 전환이 필요없다. 성능이 좋다&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;단점 : 프로그래밍 하기 어렵고 커널 레벨 쓰레드에 비해 결과 예측이 어렵다.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em;&quot;&gt;&lt;font face=&quot;Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 12.16px; line-height: 17.024px;&quot;&gt;http://hyunbogi.tistory.com/88&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2340E73E56C3EB3E1C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;vv.PNG&quot; height=&quot;639&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 0.5em; margin-bottom: 0.9em; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12.16px; line-height: 17.024px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/242</guid>
<comments>https://genesis8.tistory.com/242#entry242comment</comments>
<pubDate>Wed, 17 Feb 2016 11:42:54 +0900</pubDate>
</item>
<item>
<title>커널(kernel)</title>
<link>https://genesis8.tistory.com/241</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;위키백과&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;kernel&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;①&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000013466&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;낟알&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;②&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000082561&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;핵심&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;③&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kkw000264199&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;커&lt;/span&gt;&lt;/daum:word&gt;&lt;daum:word id=&quot;kew000014604&quot; style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;널&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;item item_fst &quot; style=&quot;margin: 0px; padding: 0px; position: relative; width: 581px; font-size: 14px; font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;span class=&quot;num2&quot; style=&quot;position: absolute; left: -24px; top: 0px; font-family: Arial; font-size: 9pt;&quot;&gt;1.&lt;/span&gt;&lt;p class=&quot;txt_sense &quot; style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 13px; overflow: hidden; line-height: 22px; font-family: 굴림, gulim, 'Apple SD Gothic Neo', sans-serif;&quot;&gt;&lt;daum:important style=&quot;color: rgb(227, 56, 42);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;(&lt;/span&gt;&lt;daum:word id=&quot;kew000007074&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;과실&lt;/span&gt;&lt;/daum:word&gt;&lt;daum:word id=&quot;kew000057346&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;의&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000058444&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;인&lt;/span&gt;&lt;/daum:word&gt;&lt;/daum:important&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;(仁); (&lt;/span&gt;&lt;daum:word id=&quot;kew000074734&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;콩&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000020850&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;등&lt;/span&gt;&lt;/daum:word&gt;&lt;daum:word id=&quot;kew000057346&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;의&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000012411&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;꼬투리&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;·&lt;/span&gt;&lt;daum:word id=&quot;kew000003458&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;겉껍질&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kkw000147301&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;속의&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000065909&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;종자&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;[&lt;/span&gt;&lt;daum:word id=&quot;kew000051478&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;열매&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;]; (&lt;/span&gt;&lt;daum:word id=&quot;kew000028064&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;밀&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000020850&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;등&lt;/span&gt;&lt;/daum:word&gt;&lt;daum:word id=&quot;kew000057346&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;의&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;daum:important style=&quot;color: rgb(227, 56, 42);&quot;&gt;&lt;daum:word id=&quot;kew000013466&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;낟알&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;.&lt;/span&gt;&lt;/daum:important&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;item &quot; style=&quot;margin: 20px 0px 0px; padding: 0px; position: relative; width: 581px; font-size: 14px; font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;span class=&quot;num2&quot; style=&quot;position: absolute; left: -24px; top: 0px; font-family: Arial; font-size: 9pt;&quot;&gt;2.&lt;/span&gt;&lt;p class=&quot;txt_sense &quot; style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 13px; overflow: hidden; line-height: 22px; font-family: 굴림, gulim, 'Apple SD Gothic Neo', sans-serif;&quot;&gt;&lt;daum:word id=&quot;kew000067153&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;중심부&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000067346&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;중핵&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;;&amp;nbsp;&lt;/span&gt;&lt;daum:important style=&quot;color: rgb(227, 56, 42);&quot;&gt;&lt;daum:word id=&quot;kew000082561&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;핵심&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000054038&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;요점&lt;/span&gt;&lt;/daum:word&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;,&lt;/span&gt;&lt;/daum:important&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;daum:word id=&quot;kew000054047&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;요지&lt;/span&gt;&lt;/daum:word&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;컴퓨터 과학에서 커널(kernel)은 운영 체제의 핵심 부분으로서, 운영 체제의 다른 부분 및 응용 프로그램 수행에 필요한 여러 가지 서비스를 제공한다. 핵심(核心)[1]이라고도 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;커널의 역할&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;커널은 운영 체제의 핵심 부분이므로, 커널의 역할 역시 운영 체제의 핵심 역할이라 할 수 있다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;보안&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;커널은 컴퓨터 하드웨어와 프로세스의 보안을 책임진다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;자원 관리&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;한정된 시스템 자원을 효율적으로 관리하여 프로그램의 실행을 원활하게 한다. 특히 프로세스에 처리기를 할당하는 것을 스케줄링이라 한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;추상화&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;같은 종류의 부품에 대해 다양한 하드웨어를 설계할 수 있기 때문에 하드웨어에 직접 접근하는 것은 문제를 매우 복잡하게 만들 수 있다. 일반적으로 커널은 운영 체제의 복잡한 내부를 감추고 깔끔하고 일관성 있는 인터페이스를 하드웨어에 제공하기 위해 몇 가지 하드웨어 추상화(같은 종류의 장비에 대한 공통 명령어의 집합)들로 구현된다. 이 하드웨어 추상화는 프로그래머가 여러 장비에서 작동하는 프로그램을 개발하는 것을 돕는다. 하드웨어 추상화 계층(HAL)은 제조사의 장비 규격에 대한 특정한 명령어를 제공하는 소프트웨어 드라이버에 의지한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;초기의 커널&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;초창기의 컴퓨터에서 운영 체제 커널은 필수적인 것이 아니었다. 초기의 프로그램은 하드웨어 추상화나 운영 체제의 지원을 받지 않고도 컴퓨터만으로 불러들인 다음 실행될 수 있었으며, 이것은 초창기 컴퓨터들의 일반적인 운영 방식이었다. 다른 프로그램을 실행하기 위해서는 컴퓨터의 전원을 껐다가 켬으로써 다시 입력자료를 읽어들여야 하는 방식이었다. 이러한 과정이 반복되면서 사람들은 로더와 디버거 같은 작은 프로그램들이 상주해 있는 것이, 다른 프로그램으로 교체하거나 새로운 프로그램을 개발하는 데 유리하다는 사실을 알게 되었다. 이와 같은&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 로더, 디버거들이 초기 운영 체제 커널의 기초가 되었다&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;종류&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;단일형 커널(monolithic kernel) - 커널의 다양한 서비스 및 높은 수준의 하드웨어 추상화를 하나의 덩어리(주소 공간)로 묶은 것이다. 운영 체제 개발자 입장에서 유지 보수가 일반적으로 더 어려우나 성능이 좋다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;마이크로커널(microkernel) - 하드웨어 추상화에 대한 간결한 작은 집합을 제공하고 더 많은 기능은 서버라고 불리는 응용 소프트웨어를 통해 제공한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;혼합형 커널(hybrid kernel) - 성능 향상을 위해 추가적인 코드를 커널 공간에 넣은 점을 제외하면 많은 부분은 순수 마이크로커널과 비슷하다. 수정 마이크로커널이라고도 한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;나노커널(nanokernel) - 실질적으로 모든 서비스를 책임진다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;엑소커널(exokernel) - 낮은 수준의 하드웨어 접근을 위한 최소한의 추상화를 제공한다. 전형적으로 엑소커널 시스템에서는 커널이 아닌 라이브러리가 단일형 커널 수준의 추상을 제공한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p id=&quot;more241_0&quot; class=&quot;moreless_fold&quot;&gt;
    &lt;span style=&quot;cursor: pointer;&quot; onclick=&quot;toggleMoreLess(this, '241_0','커널 별 구조','접기'); return false;&quot;&gt;
        커널 별 구조    &lt;/span&gt;
&lt;/p&gt;
&lt;div id=&quot;content241_0&quot; class=&quot;moreless_content&quot; style=&quot;display: none;&quot;&gt;&lt;p&gt;&lt;b style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;단일형 커널의 구조&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;단일형 커널은&amp;nbsp;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;하드웨어 위에 높은 수준의 가상 계층을 정의&lt;/span&gt;한다.&amp;nbsp;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;높은 수준의 가상 계층은 기본 연산 집합과 관리자 모드에 작동하는 모듈인 프로세스 관리, 동시성, 메모리 관리 등의 운영 체제 서비스를 구현하기 위한 시스템 콜으로 되어 있다.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;이 연산들을 제공하는 모든 모듈이 전체로부터 분리되어 있더라도 모든 모듈이 같은 주소 공간에서 실행되기 때문에 코드의 집적도는 매우 조밀하며 수정하기 어렵고 한 모듈의 버그는 시스템 전반을 멈추게 할 수 있다. 그러나 구현이 신뢰할 수 있을 정도로 완성되면 구성 요소의 내부 집적이 내부의 시스템 이용을 효과적이게 하여 좋은 단일형 커널은 높은 효율을 보인다. 단일형 커널의 지지자들은 코드의 정확성 여부와 그런 코드(부정확한 코드)가 커널에 포함되었는지를 확인할 수 있고 그것은 마이크로커널에 비해 조금 더 우위에 있다고 주장한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;리눅스, FreeBSD, 솔라리스와 같은 최신의 단일형 커널은 실행 모듈을 실시간으로 읽어들일 수 있다. 실시간으로 실행 모듈을 읽는 특징은 커널이 허용하는 범위 내에서 손쉽게 확장할 수 있게 커널 공간의 코드의 양을 최소한으로 유지시켜 준다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;마이크로소프트 윈도 NT 제품군(NT, 2000, XP, 2003, 비스타)은 처음에는 혼합형 커널이었으나 나중에 나온 것들은 단일형 커널로 바뀌었다. 윈도 NT 시리즈는 상위의 서비스들을 NT executive이라는 서버로 구현하였다. Win32 특성은 처음에는 사용자 모드의 서버 형태로 구현되었으나, 최근 버전에서는 관리자 주소 영역으로 이동하였다. 다양한 서버들이 로컬 프로시저 콜(LPC: Local Procedure Call)이라 불리는 주소 영역간 매커니즘을 통해 통신하며, 성능을 최적화하기 위해 공유 메모리를 이용한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;주로 다음 운영 체제들의 커널이 단일형 커널인 것으로 알려져 있다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;유닉스&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;BSD&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;리눅스&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;솔라리스&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;윈도 NT&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;벨로나2&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;AIX&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;AGNIX&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;마이크로커널의 구조&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;마이크로커널은 하드웨어 위에&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;매우 간결한 추상화를 정의&lt;/span&gt;한다.&amp;nbsp;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;기본 연산 집합과 운영 체제 서비스를 구현한 스레드 관리, 주소 공간, 프로세스간 통신의 작은 시스템 콜으로 이루어져 있다.&amp;nbsp;&lt;/span&gt;일반적으로 커널이 제공하는 네트워킹과 같은 다른 서비스들은 사용자 공간 프로그램인 서버로 구현한다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;운영 체제는 서버를 다른 일반적인 프로그램처럼 간단히 시작하고 끌 수 있다. 이를테면 네트워킹 지원이 필요 없는 작은 시스템에서는 간단히 서버를 끄면 된다. 이 경우 전통적인 시스템에서는 재컴파일이 필요했고 일반 사용자의 능력 밖의 일이다. 이론적으로 마이크로커널에서 시스템은 더 안정적이다. 서버가 중단될 때 커널의 충돌이 아니기 때문에 단 하나의 프로그램만 내려버리면 된다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;그러나 서버가 실패한 후 시스템 상태도 잃어버릴 경우 응용 프로그램이 계속 수행되는 것은 그 응용 프로그램이 막 복사된 다른 서버를 이용하게 되더라도 보통은 매우 힘들다. 예를 들어 TCP/IP 연결을 요구하는 (이론적인) 서버가 다시 시작되면 응용 소프트웨어는 연결이 &quot;끊어졌습니다.&quot;라고 말하고 서버의 새 인스턴스를 찾아서 다시 연결한다. 그러나 파일과 같은 다른 시스템 객체는 이렇게 편리한 의미론이 없다. 이러한 편리가 믿음직스럽지 못하고 마음대로 이용할 수 없다. 기록할 정보들은 모두 미리 보관해 두어야 한다. 서버 간의 하나의 서버를 다시 시작할 때 중요 상태를 보호하기 위해 트랜잭션, 복제, 대조점의 데이터베이스 기술이 요구된다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;일반적으로 마이크로커널은 전통적인 디자인의 수행을 잘못하고 때로는 극적이다. 이유는 응용과 서버 간의 자료 교환을 위해 커널을 출입하는 문맥 교환 때문이다. 주의 깊은 조율이 오버헤드를 극적으로 줄여줄 것으로 믿어져 왔으나 90년대 중반부터 대부분의 연구원들은 시도를 포기했다. 최근에 새 마이크로커널은 성능을 최우선으로 설계하며 이 문제를 넓은 부분에서 다루었다. 그러나 현재 운영 체제 시장은 자기 몸 사리며 마이크로커널 설계에 소극적이다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;마이크로커널과 마이크로커널에 기반한 운영 체제의 예&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;AmigaOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;Amoeba&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;ChorusOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;EROS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;Haiku&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;K42&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;LSE/OS (나노커널)&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;KeyKOS (나노커널)&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;L4 마이크로커널&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;마하 - GNU 허드, 넥스트스텝, 오픈스텝,OS X에 사용 됨.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;MERT&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;미닉스&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;MorphOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;NewOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;QNX&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;Phoenix-RTOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;RadiOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;Spring operating system&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;VSTa&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;심비안 OS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;혼합형 커널(수정 마이크로커널)[편집]&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;이 부분의 본문은 하이브리드 커널입니다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;혼합형 커널의 구조&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;혼합형 커널은 본질적으로 마이크로커널을 따르나, 일부 커널의 비(非)본질적 기능이더라도 사용자 레벨에서 수행될 때 성능상 느린 코드들을 커널 레벨에서 수행하도록 수정한 것을 말한다. 이는 다양한 운영 체제 개발자들이 마이크로커널 기반의 설계를 받아들이던 시점에 순수한 마이크로커널의 성능상의 한계를 인식하고 타협한 결과이다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;예를 들어, OS X의 커널인 XNU는 Mach 커널 3.0 마이크로커널에 기반을 두고 있지만, 전통적인 마이크로커널 설계의 지연 현상을 줄이기 위해 BSD 커널의 일부 코드들을 들여와 동일한 주소 영역에서 실행하고 있다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;DragonFly BSD는 첫 번째 비 Mach 기반의 BSD OS로 혼합형 커널 구성을 적용한 예이다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;하이브리드 커널로는 다음과 같은 것들도 포함된다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;ReactOS&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;BeOS 커널&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;넷웨어 커널&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;혼합형 커널이라는 말을 부팅 후에 모듈을 읽어들일 수 있는 단일형 커널과 혼용하는 사람들이 있다. 이것은 사실이 아니다. 혼합형 커널은 단일형 커널과 마이크로커널 설계 양쪽의 구조적 개념과 작동방법에 대한 특히 메시지 전달과 어떤 중요하지 않은 코드는 사용자 공간에 들어가는 반면 어떤 코드는 성능의 이유로 커널 공간에 포함해야 하는지에 대한 문제의식을 가진다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;b&gt;엑소커널의 구조&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;이 부분의 본문은 엑소커널입니다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;엑소커널은 운영 체제 설계에 대한 급진적인 신개념으로 말단 이론을 따르는 수직 구조의 운영 체제이다.엑소커널의 구상은 개발자에게 강제적인 추상화를 줄여 하드웨어 추상화에 대해 선택지를 다양하게 하는 것이다. 엑소커널은 기능이 보호를 보장하는 것과 자원을 분배하는 것만 하기에 매우 작아 편익보다 단순함을 제공한다. 이런 특성은 오히려 모든 사용자가 각기 실제 호스트 컴퓨터의 자원을 모방한 컴퓨터를 받는VM/370 운영 체제와 비슷하다. 반면에 모놀리식 커널이든 마이크로 커널이든 전통적인 커널 설계는 하드웨어 추상화 계층(HAL)이나 장치 드라이버 아래 자원을 숨김으로써 하드웨어를 추상화한다. 한 예로 전통적인 시스템에서 물리 메모리가 할당할 때 실제 위치를 알려주지 않기 때문에 오프셋과 기억 관리 장치를 통해서만 문제를 해결 할 수 있다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;http://www.terms.co.kr/kernel.htm&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;커널은 컴퓨터 운영체계의 가장 중요한 핵심으로서, &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;운영체계의 다른 모든 부분에 여러 가지 기본적인 서비스를 제공&lt;/span&gt;한다. 비슷한말로는 '뉴클리어스'라는 용어가 있다. 커널은 쉘과 대비될 수 있는데, 쉘은 운영체계의 가장 바깥부분에 위치하고 있으면서, 사용자 명령에 대한 처리를 담당한다. 커널과 쉘이라는 용어는 IBM 메인프레임을 제외하고, 유닉스와 기타 몇몇 운영체계에서 자주 사용된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일반적으로, &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널에는 종료된 입출력 연산 등, 커널의 서비스를 경쟁적으로 요구하는 모든 요청들을 처리하는 인터럽트 처리기와, 어떤 프로그램들이 어떤 순서로 커널의 처리시간을 공유할 것인지를 결정하는 스케줄러, 그리고 스케줄이 끝나면 실제로 각 프로세스들에게 컴퓨터의 사용권을 부여하는 수퍼바이저 등이 포함되어 있다&lt;/span&gt;. 커널은 또한,&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 메모리나 저장장치 내에서 운영체계의 주소공간을 관리&lt;/span&gt;하고, &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;이들을 모든 주변장치들과 커널의 서비스들을 사용하는 다른 사용자들에게 고루 나누어주는 메모리 관리자를 가지고 있다&lt;/span&gt;. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;커널의 서비스는 운영체계의 다른 부분이나, 흔히 시스템 호출이라고 알려진 일련의 프로그램 인터페이스들을 통해 요청된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;커널을 유지하기 위한 코드는 지속적으로 사용되기 때문에, 보통 커널은 자주 사용되지 않는 운영체계의 나머지 부분에 의해 덮어씌워져 훼손되지 않도록, 보호된 메모리 영역에 적재된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;커널을 바이오스와 혼동하면 안된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;https://namu.wiki/w/%EC%BB%A4%EB%84%90&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 9pt;&quot;&gt;OS의 심장이자, OS를 규정짓는 매우 중요한 부분. &lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;하드웨어의 자원을 자원이 필요한 프로세스에 나눠주고, 덩달아 프로세스 제어(태스크 매니저), 메모리 제어, 프로그램이 운영체제에 요구하는 시스템 콜 등을 수행하는 부분으로 운영체제 맨 하부에서 돌아간다. 쉽게 말해, OS를 하나의 기업체로 비유한다면 커널은 인사담당 부서인 셈이다. 현재 많이 사용되고 있는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;OS는 커널 위에 여러 가지 레이어를 올린 것. &lt;/span&gt;이렇기 때문에 커널이 날아가게 되면 운영체제를 못 쓰게 된다. 이 커널도 한번씩 오작동 하여 정지할 때가 있는데, 이를 가리켜 커널 패닉이라고 부른다. 물론, 현재는 억지로 볼 수는 있지만, 일반적인 상황에선 꽤나 보기 힘들다.&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;어쨌든 커널로 운영체제의 정체성을 결정하기에 매우 중요하다고 볼 수 있다. 페도라, 우분투등이 다 리눅스로 묶이는 것도 이들이 리눅스 커널을 사용하고 있기 때문.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;아직 와 닿지 않는다면, NT 커널 기반에서 KERNEL32.dll, Hal.dll, ntdll.dll, ADVAPI32.dll, KERNELBASE.dll(윈7) 등을 날려보면 된다. 이제 부팅이 되지 않는다. 정말로 망했어요 그리고 재부팅하고 비명을 지르면 된다. 자신이 리눅스를 쓴다면 실행 중인 init 프로세스를 날려보자 근데 요즘은 init 에다가 kill 날려도 안 죽는다&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;1.2. 커널의 종류&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/22642A4D56C3D67811&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Linux_kernel_diagram.png&quot; height=&quot;375&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;line-height: 1.5;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/245F914D56C3D67812&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Figure-1.png&quot; height=&quot;352&quot; style=&quot;line-height: 1.5;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;---&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;원본 출처&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;http://blog.naver.com/quwoo/120029090135&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;100%&quot; border=&quot;0&quot; style=&quot;color: rgb(118, 123, 134); font-size: 12px; line-height: 18px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;td_bodyt&quot; background=&quot;http://blog.naver.com/skin/PowerBook/images/title_bg.gif&quot; height=&quot;51&quot; style=&quot;word-break: break-all;&quot;&gt;&lt;a target=&quot;_blank&quot; class=&quot;con_link&quot; href=&quot;http://babycat.co.kr/entry/%EB%A6%AC%EB%88%85%EC%8A%A4-%EC%BB%A4%EB%84%90%EC%9D%98-%EA%B8%B0%EB%8A%A5&quot; style=&quot;word-wrap: break-word;&quot;&gt;&lt;font class=&quot;head_title&quot;&gt;리눅스 커널이란?&lt;/font&gt;&lt;/a&gt;&amp;nbsp;&lt;br /&gt;&lt;a target=&quot;_blank&quot; class=&quot;con_link&quot; href=&quot;http://babycat.co.kr/category/majoR/Sp/Os&quot; style=&quot;word-wrap: break-word;&quot;&gt;majoR/Sp/Os&lt;/a&gt;&lt;font class=&quot;goya_white&quot;&gt;&amp;nbsp;| 2006/05/25 14:46&lt;/font&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;td_body&quot; align=&quot;right&quot; style=&quot;word-break: break-all; height: 0px;&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;td_body&quot; style=&quot;word-break: break-all; height: 1026px;&quot;&gt;&lt;p&gt;리눅스를 만지면서 커널 커널 하지만 의외로 커널이 뭐야? 라고 물으면 모르는 사람들이 많다.&amp;nbsp;간단히 정리해보자&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;커널&lt;/strong&gt;은 시스템에 존재하는 자원을 효율적으로 관리하는 자원 관리자로, 그 기능을 간단히 살펴보면&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로세서 관리&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;- 처리 속도를 향상시키기 위해 여러 프로세서를 병렬로 연결하여 사용한다. 시스템에서 동작하는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로세스도 커널에서는 관리해야할 자원&lt;/span&gt;이고, 운영체제의 처리 요구에 맞춰 동작할 수 있도록 각 프로세스에 필요한 프로세서를 효율적으로 할당하고 수행하도록 관리한다.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로세스 관리&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;- 운영체제에서는 최소한 하나 이상의 프로세스가 동작한다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로세스는 다른말로 태스크&lt;/span&gt;라고도 하며, 주어진 일을 수행하는 기본 단위다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널은 스케줄러를 이용하여 여러 프로세스가 동작할 수 있도록 각 프로세스를 생성하고 제거하며, 외부환경과 프로세스를 연결하고 관리&lt;/span&gt;한다.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;메모리 관리&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;- 각각의 프로세스가 독립적인 공간에서 수행할 수 있도록 가상 주소 공간을 제공한다. 가상메모리를 바탕으로 물리적인 한계를 극복할수 있는 기능을 제공한다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;이외에도&lt;strong&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;파일 시스템 관리,&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;디바이스 제어, 네트워크 관리&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;정도가 있다.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;리눅스 커널은 운영체제에서 가장 중요한 부분이다. 프로세서와 시스템 메모리에 상주하면서 디바이스나 메모리 같은 하드웨어 자원을 관리하고, 프로세스의 스케줄을 관리하여 다중 프로세스를 구현하고, 시스템에 연결된 입출력을 처리하는 운영체제의 핵심 역할을 수행한다.&lt;br /&gt;&lt;br /&gt;그렇다면&amp;nbsp;&lt;strong&gt;&lt;font color=&quot;#0000ff&quot;&gt;리눅스 커널의 특징&lt;/font&gt;&lt;/strong&gt;은 무엇일까&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;모놀리식 커널&lt;/strong&gt;&amp;nbsp;- 리눅스 커널은 대부분 유닉스 커널과 같은 모놀리식(monolithic)이다. 모놀리식이기 때문에 논리적으로 구분되는 여러 구성요소들이 상호간에 연결되어 동작한다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;비선점형(커널 2.4)과 선점형(커널2.6)&lt;/strong&gt;&amp;nbsp;- 비선점형 커널은 프로세스의 동작 상태가 사용자 모드에서 커널 모드로 진입하면 외부에서 해당 프로세스를 중지시키지 못한다. 반대로 프로세스가 커널 모드로 동작하더라도 스케줄링 정책이나 다른 외부적인 접근을 통해 프로세스를 강제로 중지시킬 수 있는 경우를 선점형이라고 한다. 2.6커널은 선점형과 비선점형을 선택할 수 있다.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;가상 메모리 시스템(VM)&lt;/strong&gt;&amp;nbsp;- 리눅스 커널은 다양한 플랫폼에서 동작하는 운영체제이므로 i386에서 동작되던 메모리 관리 시스템을 표준화 하여 다양한 MMU 디바이스에 적용할 수 있도록 구성되어있다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;No MMU 지원&lt;/strong&gt;&amp;nbsp;- 리눅스 커널은 주로 MMU를 이용한 메모리 관리를 수행하지만 임베디드 시스템에서 사용하는 프로세서의 경우는 MMU디바이스가 없는 경우도 있다. 커널 2.6에서는 MMU가 없는 시스템도 지원한다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;가상 파일 시스템(VFS)&lt;/strong&gt;&amp;nbsp;- 리눅스에서는 ext2를 비롯 다양한 파일 시스템을 사용할수 있고, 윈도우에서 동작하는 NTFS파일 시스템과 FAT32도 처리할 수 있다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;모듈을 이용한 커널 확장&lt;/strong&gt;&amp;nbsp;- 운영 체제가 동작하는 중에도 커널 코드를 추가하거나 삭제할수 있다.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;커널 스레드&lt;/strong&gt;&amp;nbsp;- 커널 2.4이전에는 매우 제한된 커널 스레드를 지원했지만, 2.6에서부터는 NPTL(Native POSIX Threading Libray)과 NGPT(Next Generation POSIX Threading Package)를 지원한다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;멀티스레드 지원, 멀티 프로세서 지원, GPL 라이센스&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;autosourcing-stub-extra&quot; style=&quot;position: absolute; opacity: 0; line-height: 1.5;&quot;&gt;&lt;p style=&quot;margin: 11px 0px 7px; padding: 0px; line-height: 1.5; font-family: Dotum;&quot;&gt;&lt;strong style=&quot;padding: 0px 7px 0px 0px;&quot;&gt;[출처]&lt;/strong&gt;&amp;nbsp;&lt;a href=&quot;http://blog.naver.com/quwoo/120029090135&quot; target=&quot;_blank&quot;&gt;리눅스 커널이란?&lt;/a&gt;&lt;span style=&quot;padding: 0px 7px 0px 5px;&quot;&gt;|&lt;/span&gt;&lt;strong style=&quot;padding: 0px 7px 0px 0px;&quot;&gt;작성자&lt;/strong&gt;&amp;nbsp;&lt;a href=&quot;http://blog.naver.com/quwoo&quot; target=&quot;_blank&quot;&gt;quwoo&lt;/a&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;http://software-engineer.gatsbylee.com/%EB%A6%AC%EB%88%85%EC%8A%A4-linux-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80-%EA%B8%B0%EC%B4%88%EA%B3%B5%EB%B6%80/&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;h2 style=&quot;margin: 3rem 0px 1.71429rem; padding: 0px 0px 0px 10px; border-width: 0px 0px 1px 10px; border-bottom-style: solid; border-left-style: solid; border-bottom-color: rgb(0, 0, 102); border-left-color: rgb(0, 0, 102); font-size: 1.28571rem; vertical-align: baseline; clear: both; line-height: 1.6; color: rgb(0, 0, 102); font-family: 'Open Sans', Helvetica, Arial, sans-serif;&quot;&gt;커널 ( Kernel ) 이란 무엇인가?&lt;/h2&gt;&lt;ul style=&quot;margin: 0px 0px 1.71429rem; padding: 0px; border: 0px; font-size: 14px; vertical-align: baseline; list-style-position: outside; line-height: 24px; color: rgb(24, 24, 24); font-family: 'Open Sans', Helvetica, Arial, sans-serif;&quot;&gt;&lt;li style=&quot;margin: 0px 0px 0px 2.57143rem; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Kernel_%28computing%29&quot; style=&quot;margin: 0px; padding: 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-style: dotted; border-bottom-color: rgb(33, 117, 155); vertical-align: baseline; outline: none; color: rgb(33, 117, 155);&quot;&gt;http://en.wikipedia.org/wiki/Kernel_%28computing%29&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px 0px 0px 2.57143rem; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;a href=&quot;http://bash.cyberciti.biz/guide/Kernel&quot; style=&quot;margin: 0px; padding: 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-style: dotted; border-bottom-color: rgb(33, 117, 155); vertical-align: baseline; outline: none; color: rgb(33, 117, 155);&quot;&gt;http://bash.cyberciti.biz/guide/Kernel&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-right: 0px; margin-bottom: 1.71429rem; margin-left: 0px; padding: 0px 0px 0px 15px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(24, 24, 24); font-family: 'Open Sans', Helvetica, Arial, sans-serif;&quot;&gt;쉽게 말하면, 소프트웨어와 하드웨어간의 커뮤니케이션을 관리하는 프로그램이다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-bottom: 1.71429rem; margin-left: 0px; padding: 0px 0px 0px 15px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(24, 24, 24); font-family: 'Open Sans', Helvetica, Arial, sans-serif;&quot;&gt;구체적으로 말하면, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;커널이란&lt;/span&gt; 운영체제 ( Operating System )에서 가장 중요한 구성요소로서&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 입출력을 관리하고 소프트웨어로부터의 요청 ( System Call ) 을 컴퓨터에 있는 하드웨어 ( CPU, 메모리, 저장장치, 모니터 등등 )가 처리 할 수 있도록 요청(&amp;nbsp; System Call )을 변환하는 역할&lt;/span&gt;을 한다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-bottom: 1.71429rem; margin-left: 0px; padding: 0px 0px 0px 15px; border: 0px; font-size: 14px; vertical-align: baseline; line-height: 24px; color: rgb(24, 24, 24); font-family: 'Open Sans', Helvetica, Arial, sans-serif;&quot;&gt;( User는 Shell을 이용하여 Kernel을 통해 하드웨어를 사용 할 수 있다. )&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;http://www.devpia.com/MAEUL/Contents/Detail.aspx?BoardID=69&amp;amp;MAEULNO=28&amp;amp;No=11050&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;커널은 실제적으로 CPU를 제어는 S/W 로 생각 하시면 되겠네요.&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;그다음 OS 서비스(스케줄링,IPC,동기화)및 드라이버가 올라가죠 실제적으로 OS 포팅할떄에&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;IPC 및 메모리 ,동기화관련 서비스는 뺴고 포팅이 되는&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;Embeded OS 도 있습니다.&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;자세한건 책한건 사시던가 OS 포팅 한번 해보시면 감이 오실듯 합니다.&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;추천 하는 OS 는 uCOS2 입니다 시중에 책(Micro C/OS-II)도 있죠.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;저는 임베디드쪽을 공부했고 지금은 단말기 디바이스 개발일을 하고 있습니다&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;질문하신 내용으로 봐서는 커널의 기능 및 역활을 잘 이해를 못하시는 부분이 있으신거 같네요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;운영체제만 전공으로 해서 공부해도 스케줄링 기법등.. 많은부분이 있지만..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;윈도우 아키텍처에서 OS 부팅 모드가 크게 3가지 레벨이이 있는거로 알고 있습니다..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;Ring 0 모드 ( 일반적으로 커널모드라고 함 ) Ring 3 모드 (일반적으로 유저모드라고 함)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;(Ring 모드 개념은 리눅스에도 비슷해요 부팅 옵션에서 3이면 유저, 0이면 커널 모드&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;참고로 제가 많이 사용했던 ubuntu linux 의경우 0-5 Level 이 있었고요 3,4,5 레벨이 유저 레벨,&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;각 레벨의 차이는 콘솔 모드로 부팅할것인지 GUI로 할것인지 차이 정도 였던거 같네요..;)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;그외 레벨들도 존재 했던 거 같은데 이론을 놓은지가 좀돼서 가물가물 하네요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;여튼 중요한건 윈도우라는 OS를 예로 설명 한다고 할때..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;OS 에서도 엄연하게 유저 영역과 커널 영역으로 구분이 되어 있습니다..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;이건 윈도우를 설계한 개발자들이 만든 아키텍처가 그렇기 때문이죠..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;위사항을 확인 하기 위해서 Ring 레벨 대해서 검색해보시면 보다 자세한 설명을 보실수 있고요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;실제 윈도우에서 파일로 존재하는 라이브러리를 확인 해보시려면 (xp 기준)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;C:\WINDOWS\system32\kernal32.dll&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;C:\WINDOWS\system32\user32.dll&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;위 두가지 dll 파일이 존재 합니다 파일명에서 보시면 아시겠지만 ..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;위에서 말씀드린 커널 모드 부분은 kernal32.dll 파일에 구현되어 있고, 유저 모드는 user32.dll 파일에서&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;구현 되어 있습니다..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;커널 모드와 유저 모드는 윗분들 께서 간략하게 설명 해놓으셨는데요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;가장 간단하게 설명 해드리면&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;커널 모드는 유저모드를 포함한 윈도우 OS 의 모든 부분을 제어할수가 있습니다&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;반면&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;유저모드의 경우 일정부분만 제어가 가능하며 커널모드로 작업이 필요 한부분은 커널모드에 작업을&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;요청하는 방식으로 이루어지며 유저모드에서 직접적으로 커널모드의 크리티컬한 작업을 할수없습니다 (권한이 없음)&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;위 처럼 커널모드가 OS의 실질적인 모든 작업을 관리 하기 때문에 보안쪽 회사에서는 커널모드 쪽 작업을 베이스로&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;하게 되어집니다..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;그리고 위에서 말씀 드린 dll 을 이용하여 Win32 API 를 통하여 사용 되고 있습니다&lt;/span&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;Window 쪽으로 일하시려면 API 는 기본이죠 .. 특히 보안쪽 가시려면 Native API 까지 알아야..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;하는거로 알고 있습니다 실제 Native API 들이 해킹, 보안 의 주축이 되는 함수들이 많이 들어 있기 때문에..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;모든 보안제품들, 공격 루틴들이 Native API 들을 통해서 많은 해킹기법으로 이용되는거로 알고 있어요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;커널의 역활설명을 간략히 드렸는데요..&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;dt class=&quot;content_body_dt dt&quot; id=&quot;comment_content_376744&quot; style=&quot;float: left; width: 623.188px; color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;책보다 사이트가 좀더 공부하시는데 도움 되실꺼 같네요&lt;br /&gt;&lt;br /&gt;http://kldp.org/&amp;nbsp;&lt;br /&gt;&lt;br /&gt;리눅스에 관심이 있으시면 잘 아실테지만 .. 우리나라 리눅스 포럼중 가장 큰 규모이며 업데이트가 잘되고 있습니다&lt;br /&gt;&lt;br /&gt;고수분들도 많으시고요.. ^^ 윈도우쪽은 저도 그닥 잘모르겠네요..&lt;br /&gt;&lt;br /&gt;(참고로.. 전 임베디드쪽을 공부하면서 윈도우도 시스템 공부를 했지만 리눅스쪽을 좀더 많이 공부를 해서요..^^;;)&lt;br /&gt;&lt;br /&gt;윈도우쪽은 API 는 윗분들 의견에서 나온 winapi 사이트에서 기본 베이스 공부하시기 좋고요&lt;br /&gt;&lt;br /&gt;Native API 는 블로그나 검색으로 찾으셔야 할꺼에요.. 영어 압박이 좀 있을꺼에요..^^;&lt;br /&gt;&lt;br /&gt;그리고 많은 OS 종류들이 존재 합니다.. 윈도우, 리눅스, RTOS 등..&lt;br /&gt;&lt;br /&gt;이 중 사람들이 리눅스에 관심을 많이 가지며 작업하는거중 하나가 open 소스 기반이기 때문에..&lt;br /&gt;&lt;br /&gt;리눅스의 라이센스 GNU 정책 때문에 open 소스 기반으로 개발 되어서 커널이 공개 되고 있습니다.&lt;br /&gt;&lt;br /&gt;리눅스 장점중 하나죠.. 윈도우 같은경우 철저히 소스 공개를 하지 않기 때문에 지금 알려진 대부분의&lt;br /&gt;&lt;br /&gt;내용들은 많은 해커들이 해킹을 통해서 알아낸것 입니다. 물론 Microsoft MVP 자격을 얻으면 windows 소스를&lt;br /&gt;&lt;br /&gt;열람할수 있는 기회가 주어지는 것도 있더군요.. ;; (요즘은 해킹을통해서 윈도우가 많이 공개 된거로 알고 있어요..)&lt;br /&gt;&lt;br /&gt;쓸데 없는 얘기가 길어졌는데요.. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;커널 내부를 공부하시기에는 윈도우 보다는 리눅스가 접근&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;하기 용이&amp;nbsp;합니다.&lt;/span&gt;.&lt;br /&gt;&lt;br /&gt;하지만 중요한건 윈도우와 리눅스는 아키텍처가 틀린 부분이 많기 때문에.. 리눅스를 공부했다고 윈도우를 다 아는게&lt;br /&gt;&lt;br /&gt;아니죠.. 그점을 유의 하셔야 하고요.. 윈도우 같은경우 처음부터 접급해서 공부하기 어려운 부분이 많습니다..&lt;br /&gt;&lt;br /&gt;그래서 전 리눅스 기반에서 공부를 많이 했고요.. 핵심적인 개념들은 비슷한게 많아요..;;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;RTOS 중에서도 보시면 아시겠지만 리눅스 기반으로 개발 된것들이 많이 있습니다..&lt;br /&gt;&lt;br /&gt;어느 부분을 공부하시던지 공통적인 부분은 나오길 마련이죠..^^&lt;/dt&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;윈도우쪽에 보시면 rootkit 이란 사이트가 있고요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;www.rootkit.com // 윈도우 쪽애서 고급 기법들이 많이 공개 되고 있습니다.&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;최근에 루트킷 이란 책으로 발간된 국내 서적도 있습니다..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;http://book.naver.com/bookdb/book_detail.php?bid=4298506 링크 참조&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;저도 WDK 쪽이나 rootkit 쪽은 관심이 많아서.. ^^&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;책은 구입해뒀는데 .. 시간상.. 이런 저런 핑계로 못보고 있네요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;평은 좋은거로 알고 있는데요 .. 기초가 없으면 처음 보기는 다소 어려운 내용 이지만..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;기본적인 내용이 많아서 보시면 도움 될꺼 같네요..&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;해킹 기법적인 내용이 많지만.. 커널을 공부하는데 있어서 해킹 기법 만한게 없죠..ㅎ&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;그럼 수고하세요..ㅎ&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;커널이라고 하면 보통 운영체제에 많이 쓰이는 개념인데요.&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;다른말로 뉴클레어스, 코어라고도 합니&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;dt class=&quot;content_body_dt dt&quot; id=&quot;comment_content_379001&quot; style=&quot;float: left; width: 623.188px; color: rgb(102, 102, 102); background-color: rgb(239, 239, 239);&quot;&gt;OS의 핵심부분을 의미하고요, 가장빈번하게 프로세스를 제어하는 부분이라고 할 수 있습니다.&lt;br /&gt;&lt;br /&gt;대부분의 인터럽트가 처리되기 때문에 오퍼레이팅시스템에서 중요한 부분이고요,&lt;br /&gt;&lt;br /&gt;때문에 주로 메인 메모리에 상주됩니다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;제가 전공이 거의 OS라서요.&lt;br /&gt;&lt;br /&gt;오에스 책보시면 자세히 알 수 있어요.&lt;br /&gt;&lt;br /&gt;뭐 책들은 많습니다. 일단 기본적인 운영체제론 만 보셔도 확실할듯..&lt;/dt&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2173925056C5219A03&quot; filemime=&quot;image/jpeg&quot; filename=&quot;111.PNG&quot; height=&quot;314&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/261A465056C5219B25&quot; filemime=&quot;image/jpeg&quot; filename=&quot;222 (1).PNG&quot; height=&quot;485&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/21621E5056C5219D39&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4434.PNG&quot; height=&quot;419&quot; style=&quot;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;커널(Kernel)&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널은 운영체제의 핵심을 이루는 요소로서 &lt;u&gt;컴퓨터내의 자원을 사용자 프로그램(User Application)이 사용할 수 있도록 관리하는 &lt;/u&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로그램&lt;/span&gt;&lt;/span&gt;이다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;커널은 프로세스, 파일 시스템, 메모리, 네트워크의 관리를 맡는다. 사용자 프로그램은 이러한 기능들을 정해진 규칙에 따라서 커널에 요구하게 되며, 커널은 이러한 요구들을&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;만족시켜 주도록 구성되어 있다.&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(9, 0, 255); font-family: 돋움, dotum, sans-serif;&quot;&gt;사용자 프로그램은 시스템 라이브러리(System Library)의 도움을 받거나 아니면 직접적으로 소프트웨어 인터럽트(Softw are Interrupt)를 이용해서 트랩(Trap)을 걸어 커널에&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(9, 0, 255);&quot;&gt;접근하게 되며, 이러한 모든 접근은 시스템 콜 인터페이스(System Call Interface)를 통하여 이루어진다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;커널은 대부분이 C 코드(Code)로 작성되어 있으며, 프로세스의 구조에 의존적인(Processor Architecture Dependent) 부분들과 속도를 요하는 부분만 기계어 코드&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;(Assembly Code)로 작성되어 있다. 따라서 커널의 구조에 의존적인(Architecture Dependent) 부분을 고침으로 해서 새로운 프로세스로의 포팅(Porting)이 가능해진다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;[참고] Add-on L i nu x Ke rne l P rogrammi ng[2001. 11 이귀영 著]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;이하 내용은 `Running Linux 4rd` 에서 발췌하였습니다. 06. 5. 15 - subz ero&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;커널은 운영체제의 핵심에 해당한다. 커널은 사용자 프로그램과 하드웨어 장치간의 인터페이스를 제어하고, 다중 작업을 지원하려고 프로세스 스케쥴링을 하며, 기타 시스템&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;의 다양한 측면을 관리하는 소스 코드이다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커널은 시스템에서 동작하는 어떤 개별 프로세스가 아니라, 항상 메모리에 존재하면서 모든 프로세스가 사용할 수 있는 루틴&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;(routines)들의 집합&lt;/span&gt;이라고 할 수 있다. 커널 루틴은 여러 가지 방법으로 호출된다. 커널을 사용하는 직접적인 방법은 시스템 호출(system call)을 사용하는 것으로 커널이 호출&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;한 프로세스를 위해 특별한 코드를 실행한다. 예를 들어, read 시스템 호출은 파일 기술자(file descriptor)로부터 자료를 읽는다. 프로그래머에게는 C 함수처럼 보이지만 read&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;의 실제 코드는 커널 안에 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;커널 코드는 다른 상황에서도 실행된다. 예를 들어, 하드웨어 장치가 인터럽트(interrupt)를 발생시키면 커널 내부의 인터럽트 처리기를 찾는다. 어떤 프로세스가 어떤 행동을&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;취하고 결과를 기다려야 할 때는 커널이 개입하여 그 프로세스를 잠들게 하고 다른 프로세스가 활동할 수 있게 스케쥴링한다. 마찬가지로 커널은 한 프로세스에서 다른 프로세&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;스로 이동할 때 클럭 인터럽트를 사용하여 프로세스간의 제어권을 신속하게 옮긴다. 다중 작업은 대개 이런 방식으로 이루어진다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;리눅스 커널은 단일(monolithic) 커널 방식으로, 모든 핵심 함수와 장치 드라이버가 커널의 일부다. 일부 운영체제는 장치 드라이버와 다른 코드가 필요할 때 적재되고 실행되&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;는 마이크로 커널(micro kernel) 아키텍처를 사용하고 있다. 따라서 이 코드는 항상 메모리에 있을 필요가 없다. 두 방식에는 각각 장 · 단점이 있다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;대부분의 유닉스 구현에서는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;일반적으로 단일 커널 아키텍쳐가 사용되며, 이는 시스템 V, BSD 와 같은 전통적인 커널에서 채택한 방식이다. 하지만 리눅스는(사용자의 명령에 따라 메모리에 적재하거나 빼&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;낼 수 있는) 적재 가능한 장치 드라이버도 지원하고 있다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;인텔 플랫폼에서 동작하는 리눅스 커널은 인텔 x86 프로세서(80386 부터 현재의 펜티엄 4 가지)의 특별한 보호모드 특성을 사용하도록 개발되었다. 특히 리눅스는 보호모드,&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;기술자 기반의 메모리 관리 정책과 기타 수많은 인텔 프로세서의 향상된 기능을 활용한다. x86 보호 모드 프로그래밍에 익숙한 사람은 이 프로세서가 유닉스 같은 다중 작업 시&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;스템용(사실은 멀틱스의 영향을 받은 것이다)으로 설계된 것을 알고 있을 것이다. 리눅스는 이 기능을 십분 활용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;대부분의 현대적인 운영체제와 마찬가지로 리눅스는 다중 프로세서(M ulti Processing) 운영체제다. 메인보드에 하나 이상의 CPU 가 있는 시스템을 지원한다. 이 기능을 통해&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;동시에(또는 `병렬로`) 다른 프로그램을 서로 다른 CPU 에서 실행할 수 있다. 리눅스는 또한 하나의 프로그램 안에서 메모리의 데이터를 공유하고 있는 `제어 스레드`를 다중으&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;로 생성하는 프로그래밍 기법인 스레드(thread)도 지원한다. 리눅스는 여러 가지 커널-레벨 그리고 사용자-레벨 스레드 패키지를 지원한다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;리눅스의 &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;커&lt;/span&gt;널 스레드는 다중 CPU&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;에서 동작&lt;/span&gt;하므로, 하드웨어 병렬 처리 능력을 제대로 활용한다고 할 수 있다. 리눅스 커널 스레드 패키지는 POSIC 1003.1c 표준과 호환된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;리눅스 커널은 필요에 따라 페이징하고, 적재하는 실행 파일을 지원한다. 즉 프로그램 세그먼트 중 실제로 쓰이는 부분만 메모리로 읽어들인다. 그리고 한 프로그램이 동시에&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;여러번 실행 중일 때에는 프로그램의 복사본 하나만 메모리에 적재한다. 실행 프로그램은 동적으로 링크된 공유 라이브러리를 사용한다. 즉 실행 프로그램들은 디스크에 있는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;라이브러리 파일 내의 공용 라이브러리 코드를 공유할 수 있다. 이렇게 하면 실행 파일이 차지하는 디스크 공간을 줄일 수 있다. 또한 라이브러리 코드 복사본 하나가 메모리에&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;올라가므로, 전체 메모리 사용량을 줄일 수 있다. 물론 공유 라이브러리에 의존하지 않고 `완전한` 실행파일을 가지고 싶은 사람들을 위해 정적 링크 라이브러리도 있다. 리눅스&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;공유 라이브러리는 실행 중 동적으로 링크되므로, 프로그래머는 실행 파일을 변경하지 않고도 라이브러리 모듈을 자신이 만든 루틴으로 변경할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;시스템 메모리를 최대한 활용하기 위해, 리눅스는 디스크 페이징이라는 기능으로 가상 메모리(virtual memory)를 구현한다. 즉 일정량의 스왑 영역(sw ap space) 을 디스크에&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;할당할 수 있다. 애플리케이션이 머신에 실제 설치되어 있는 물리적인 메모리보다 많은 메모리를 필요로 하는 경우, 리눅스는 사용하지 않는 페이지를 디스크에 스왑시킨다(페&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;이지page란 운영체제가 메모리를 할당하는 단위다. 대부분의 아키텍처에서는 4KB다). 그리고 스왑아웃시킨 페이지에 다시 접근할 때는 디스크에서 페이지를 읽어와 메인 메모&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;리에 다시 넣는다. 이 기능을 통해 큰 애플리케이션을 실행할 수 있고, 동시에 더 많은 사용자를 지원할 수 있다. 물론 스왑으로 물리적인 RAM 을 대신할 수는 없다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;이는 메모&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;리보다 디스크에서 페이지를 읽는 것이 더 느리기 때문이다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;리눅스 커널은 메모리보다 디스크에 자주 접근하는 것을 피하기 위해, 최근 접근한 일부파일을 메모리에 보관한다. 커널은 디스크 접근 캐시를 위해 시스템에 남은 모든 메모&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;리를 사용하므로, 시스템 부하가 적을 때는 여러 파일에 접근해도 메모리에서 재빨리 처리한다. 만약 사용자 애플리케이션이 더 많은 물리적인 메모리를 요구하면, 디스크 캐시&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px; color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif;&quot;&gt;의 크기를 줄인다. 물리 메모리를 쓰지 않고 방치하는 경우는 절대 없다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;또한 디버깅을 쉽게 하기 위해 잘못된 메모리 주소에 접근하는 등의 잘못된 연산을 수행한 프로그램의 코어 덤프(core dump)를 발생시킨다. 프로그래머는 프로그램을 실행시&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;킨 디렉토리에 저장된 core 라는 코어 덤프를 사용하여 비정상 종료의 원인을 판단한다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;----------&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;커널의 버전 번호&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;major.minor.patchlevel&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;리눅스 커널에는 항상 두 개의 `최신` 커널이 존재한다. 하나는 `안정(stable) 버전`이고 다른 하나는 `개발(development) 버전`이다. 안정 버전은 가장 최신의 실험적인 기능을&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;해킹하기 보다는 안정적이며 잘 작동하는 시스템을 원하는 대부분의 리눅스 사용자를 위한 것이다. 반면 개발 버전은 인터넷을 통해 개발자들이 새로운 기능을 추가하고, 테스&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;트하기 때문에 빠르게 변화한다. 안전 버전의 변화는 주로 버그 수정이나 보안 패치인 반면, 개발 버전의 변화는 완전히 다른 커널 하부시스템에서부터 좀더 나은 성능을 위해&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;장치 드라이버를 개선한 것까지 모든 것이 그 대상이다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;안전 버전이 짝수 마이너(minor) 버전 번호(예를 들어, 2.4)를 가지는 반면, 개발 버전은 홀수 마이너 버전 번호(예를 들어, 2.5)를 갖는다. 따라서 현재 안정 버전이 2.6 이라&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;면 개발 버전은 2.7 이 된다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#333333&quot; face=&quot;돋움, dotum, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 9pt; letter-spacing: -1px; line-height: 23px;&quot;&gt;각 커널 버전은 2.4.19 또는 2.5.12 와 같이 셋째 `패치 레벨(patch level)` 버전 번호를 사용한다. 패치 레벨은 각 커널 버전의 갱신 횟수를 나타내며 높은 번호일수록 최신판이다.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 돋움, dotum, sans-serif; font-size: 16px; font-weight: bold; letter-spacing: -1px; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/241</guid>
<comments>https://genesis8.tistory.com/241#entry241comment</comments>
<pubDate>Wed, 17 Feb 2016 11:10:31 +0900</pubDate>
</item>
<item>
<title>재 진입성(re-entrant)</title>
<link>https://genesis8.tistory.com/240</link>
<description>&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;출처 :&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;http://www.terms.co.kr/reentrant.htm&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;재진입성은&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 메모리 내의 동일한 사본이 다중 사용자들에 의해 공유될 수 있도록 작성된 컴퓨터 프로그램이나 루틴을 설명하기 위한 형용사&lt;/span&gt;이다. 재진입 코드는 통상 다중사용자 시스템 내에서 공유될 목적으로 작성된 운영체계와 응용프로그램에서 필요하다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로그래머는 어떠한 명령어도 프로그램 내의 다른 명령어들을 위한 변수 값을 수정하지 않는다는 확신을 가지고 재진입 프로그램을 작성&lt;/span&gt;한다. 프로그램이 한 사용자를 위해 진입할 때마다, 그 사용자를 위한 모든 변수 값들을 유지하기 위해 데이터 공간이 확보된다. 프로그램 그 자체의 데이터 공간은 메모리의 또다른 부분에 들어 있다. 다른 사용자에게 순서를 넘기기 위해 그 프로그램이 중단될 때, 그 사용자와 관련된 데이터 공간에 관한 정보는 저장된다. 중단된 사용자의 프로그램이 다시 재개될 때, 데이터 공간에 저장된 정보가 복원되며, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;그 프로그램은 프로그램 내의 다른 명령어가 변수값을 변경했을지도 모른다는 우려 없이 재진입할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;https://ko.wikipedia.org/wiki/%EC%9E%AC%EC%A7%84%EC%9E%85%EC%84%B1&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;컴퓨터 프로그램 또는 서브루틴에 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;재진입성이 있으면, 이 서브루틴은 동시에(병렬) 안전하게 실행 가능하다.&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;즉 재진입이 가능한 루틴은 동시에 접근해도 언제나 같은 실행 결과를 보장한다&lt;/span&gt;. 재진입이 가능하려면 함수는 다음 조건을 만족하여야 한다.&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;정적 (전역) 변수를 사용하면 안 된다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;정적 (전역) 변수의 주소를 반환하면 안 된다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;호출자가 호출 시 제공한 매개변수만으로 동작해야 한다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;싱글턴 객체의 잠금에 의존하면 안 된다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;다른 비-재진입 함수를 호출하면 안 된다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여러 '사용자/객체/프로세스'와 멀티프로세싱이 대개 재진입 코드의 제어를 복잡하게 만든다. 또한 입출력 코드는 디스크나 터미널과 같은 공유 자원에 의존하고 있기 때문에 보통은 재진입성이 없다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;재진입성은 함수형 프로그래밍의 핵심 개념&lt;/span&gt;이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;다음&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;C (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;C&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;코드에서&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;f&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;와&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;g&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;함수는 재진입이 불가능하다.&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; font-size: 14px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;int g_var = 1;

int f()
{
  g_var = g_var + 2;
  return g_var;
}

int g()
{
  return f() + 2;
}
&lt;/span&gt;&lt;/pre&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;위 코드에서&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;f&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;함수는&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%A0%84%EC%97%AD_%EB%B3%80%EC%88%98&quot; title=&quot;전역 변수&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;전역 변수&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;i&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;g_var&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;에 의존하고 있다&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;. 만약 두 개의&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%8A%A4%EB%A0%88%EB%94%A9&quot; title=&quot;스레딩&quot; class=&quot;mw-disambig&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;스레드&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;가 이 함수를 실행하여 g_var에 동시에 접근할 경우, 결과는 실행되는 시점에 따라서 바뀌게 된다.&lt;/span&gt; 그러므로 f는 재진입성을 가지지 않는다.&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;g&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;함수는 비-재진입 함수 f를 호출하기 때문에 역시 재진입이 불가능하다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;이 함수를 다음과 같이 고치면 재진입이 가능하다.&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; font-size: 14px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;int f(int i)
{
  int priv = i;
  priv = priv + 2;
  return priv;
}

int g(int i)
{
  int priv = i;
  return f(priv) + 2;
}&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px; line-height: 17.55px; background-color: rgb(251, 250, 244);&quot;&gt;http://www.jiniya.net/wp/archives/1197/trackback&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;재진입 함수의 의미&lt;br style=&quot;margin: 0px; padding: 0px;&quot;&gt;by 신영진(YoungJin Shin), codewiz at gmail.com,&amp;nbsp;&lt;a href=&quot;http://www.twitter.com/#!/codemaru&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(236, 77, 25);&quot;&gt;@codemaru&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;http://www.jiniya.net/&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(236, 77, 25);&quot;&gt;http://www.jiniya.net&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;‘윈도우 메시지 프로시저는 재진입 가능한 함수다.’&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;그렇게도 많은 책에서 위와 같은 말들을 하고 있다. 하지만 딱 한 줄뿐 저 말이 무엇을 의미하는지를 자세히 설명하고 있는 책은 드물다. 그래서 그런지 저 말을 쓰면서도 저 말이 무슨 의미인지 모르는 경우도 많고, 자신의 의미대로 해석해버리는 경우도 있다. 그렇게 많이들 오해하는 이 재진입 함수의 의미에 대해 한번 제대로 이해해 보자.&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;재진입이라는 말은 말 그대로 함수 내부로 다시 진입하는 것을 의미한다. ‘다시’라는 말이 의미하듯이 함수 코드가 처리되는 와중에도 다시 함수 내부로 진입됨을 의미한다. 여기까지 설명하면 대부분의 윈도우 개발자는 다음과 같이 잘못된 생각을 가진다. &amp;lt;리스트 1&amp;gt;과 같은 간단한 메시지 처리 루틴에서 WM_PAINT 메시지가 처리되는 동안 Sleep 상태일 때에도 키보드가 눌리면 다시 MyWindowProcedure가 실행되어 WM_KEYDOWN 이벤트가 처리된다고 생각하는 것이다.&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;&amp;lt;리스트 1&amp;gt; 간단한 메시지 처리 루틴&lt;/p&gt;&lt;div class=&quot;dp-highlighter&quot; id=&quot;dph&quot; style=&quot;margin: 18px 0px; padding: 1px 0px 0px; font-family: Consolas, 'Courier New', Courier, mono; width: 2874.95px; overflow: auto; line-height: 17.55px; background-color: rgb(231, 229, 220);&quot;&gt;&lt;div class=&quot;bar&quot; style=&quot;margin: 0px; padding: 0px 0px 0px 45px;&quot;&gt;&lt;div class=&quot;tools&quot; style=&quot;margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); background-color: rgb(248, 248, 248);&quot;&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;view plain&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;copy to clipboard&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;print&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-cpp&quot; style=&quot;margin: 0px 0px 1px 45px; padding: 0px; list-style: decimal-leading-zero; color: rgb(92, 92, 92); background-color: rgb(255, 255, 255);&quot;&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;LRESULT&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;CALLBACK&amp;nbsp;MyWindowProcedure(&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;HWND&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;Window,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;UINT&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;MsgId,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;WPARAM&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;W,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;LPARAM&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;L)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;switch&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;(MsgId)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;WM_PAINT:&amp;nbsp;Sleep(1000);&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;WM_KEYDOWN:&amp;nbsp;OutputDebugStringA(&lt;/span&gt;&lt;span class=&quot;string&quot; style=&quot;margin: 0px; padding: 0px; color: blue;&quot;&gt;&quot;WM_KEYDOWN&quot;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;);&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;DefWindowProc(Window,&amp;nbsp;MsgId,&amp;nbsp;W,&amp;nbsp;L);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;뭔가 이벤트 드리븐 개념에도 부합하는 게 그럴듯해 보인다. 하지만 이는 완전 엉터리 설명이다. 실제로 테스트해 보면 알겠지만 Sleep 상태인 동안에 키를 아무리 눌러본들 디버그 메시지는 출력되지 않는다. 이유는 무엇일까? 답은 메시지를 처리하는 방법에 있다. 많은 윈도우 프로그래밍 책들이 마치 메시지 프로시저를 운영체제가 알아서 호출해 주는 것처럼 설명하지만 실제로 운영체제는 메시지 프로시저를 호출하는 일 따위는 하지 않는다. 해당 일은 &amp;lt;리스트 2&amp;gt;에 나타난 것과 같은 메시지 처리 루틴에 의해 이뤄진다. DispatchMessage 함수 내부에서 해당 윈도우에 맞는 메시지 프로시저를 찾아서 호출되는 일이 진행된다. 따라서 해당 메시지 처리가 완료되어서 다음 GetMessage가 호출되기 전까지 메시지 프로시저는 새로운 것을 처리하고 싶어도 할 수 없는 상태인 것이다.&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;&amp;lt;리스트 2&amp;gt; 메시지 처리 루틴&lt;/p&gt;&lt;div class=&quot;dp-highlighter&quot; id=&quot;dph&quot; style=&quot;margin: 18px 0px; padding: 1px 0px 0px; font-family: Consolas, 'Courier New', Courier, mono; width: 2874.95px; overflow: auto; line-height: 17.55px; background-color: rgb(231, 229, 220);&quot;&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-cpp&quot; style=&quot;margin: 0px 0px 1px 45px; padding: 0px; list-style: decimal-leading-zero; color: rgb(92, 92, 92); background-color: rgb(255, 255, 255);&quot;&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;wehile(GetMessage(&amp;amp;Msg,&amp;nbsp;NULL,&amp;nbsp;0,&amp;nbsp;0))&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TranslateMessage(&amp;amp;Msg);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DispatchMessage(&amp;amp;Msg);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;그렇다면 다시 본론으로 돌아가서 재진입이란 말이 내포하고 있는 실제 의미에 대해 살펴보자. 이 말이 실제로 하고자 했던 이야기는 윈도우 프로시저는 스레드에 안전하며 병렬적으로 호출이 가능하도록 작성되어야 한다는 것을 나타낸다. 다시 설명한 내용도 무슨 말인지 선뜻 이해하기가 쉽지 않다. &amp;lt;리스트 3&amp;gt;과 &amp;lt;리스트 4&amp;gt;를 보면 무슨 의미인지가 분명해진다. &amp;lt;리스트 3&amp;gt;의 코드는 한 스레드에서 윈도우가 실행될 때와 두 스레드에 윈도우가 실행될 때 동작이 달라진다. 윈도우 의존적으로 처리되어야 하는 데이터가 정적 변수로 되어 있어서 다른 윈도우의 동작에까지 영향을 미치기 때문이다. 이를 제대로 처리하기 위해서는 윈도우 의존적인 변수는 윈도우 프로퍼티로 설정해서 참조하도록 변경해야 한다. &amp;lt;리스트 4&amp;gt;의 코드는 윈도우 프로시저가 글로벌 크리티컬 섹션에 묶여 있어서 메시지가 처리되는 과정이 서로 다른 스레드에 있는 윈도우의 동작에까지 영향을 미치게 된다. 다시 말하면 서로 다른 스레드의 윈도우는 상호 동작에 간섭을 받지 않아야 함에도 이 메시지 프로시저는 한 스레드의 메시지 프로시저가 완료되기 전까지는 다른 스레드의 메시지 프로시저가 처리될 수 없게 됨으로써 서로 원활하게 동시 실행이 처리되지 못하는 문제가 있다는 것이다. 이는 윈도우 운영체제가 의도하는 바가 아니기 때문에 이러한 식의 메시지 프로시저를 작성하는 것은 옳지 않다.&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;&amp;lt;리스트 3&amp;gt; 스레드에 안전하지 않은 메시지 프로시저&lt;/p&gt;&lt;div class=&quot;dp-highlighter&quot; id=&quot;dph&quot; style=&quot;margin: 18px 0px; padding: 1px 0px 0px; font-family: Consolas, 'Courier New', Courier, mono; width: 2874.95px; overflow: auto; line-height: 17.55px; background-color: rgb(231, 229, 220);&quot;&gt;&lt;div class=&quot;bar&quot; style=&quot;margin: 0px; padding: 0px 0px 0px 45px;&quot;&gt;&lt;div class=&quot;tools&quot; style=&quot;margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); background-color: rgb(248, 248, 248);&quot;&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;view plain&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;copy to clipboard&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;print&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-cpp&quot; style=&quot;margin: 0px 0px 1px 45px; padding: 0px; list-style: decimal-leading-zero; color: rgb(92, 92, 92); background-color: rgb(255, 255, 255);&quot;&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;LRESULT&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;CALLBACK&amp;nbsp;MyWindowProcedure(&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;HWND&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;Window,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;UINT&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;MsgId,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;WPARAM&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;W,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;LPARAM&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;L)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;Count&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;switch&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;(MsgId)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;　　&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;WM_KEYDOWN:&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;　　　　++Count;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;　　　　&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;(Count&amp;nbsp;%&amp;nbsp;2)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;　　　　　　OutputDebugStringA(“WM_KEYDOWN”);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;　　　　　　&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;DefWindowProc(Window,&amp;nbsp;MsgId,&amp;nbsp;W,&amp;nbsp;L);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;&amp;lt;리스트 4&amp;gt; 병렬적으로 호출이 불가능한 메시지 프로시저&lt;/p&gt;&lt;div class=&quot;dp-highlighter&quot; id=&quot;dph&quot; style=&quot;margin: 18px 0px; padding: 1px 0px 0px; font-family: Consolas, 'Courier New', Courier, mono; width: 2874.95px; overflow: auto; line-height: 17.55px; background-color: rgb(231, 229, 220);&quot;&gt;&lt;div class=&quot;bar&quot; style=&quot;margin: 0px; padding: 0px 0px 0px 45px;&quot;&gt;&lt;div class=&quot;tools&quot; style=&quot;margin: 0px; padding: 3px 8px 10px 10px; font-stretch: normal; font-size: 9px; line-height: normal; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; color: silver; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); background-color: rgb(248, 248, 248);&quot;&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;view plain&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;copy to clipboard&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;print&lt;/a&gt;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#&quot; style=&quot;margin: 0px 10px 0px 0px; padding: 0px; color: rgb(160, 160, 160); font-size: 9px;&quot;&gt;?&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;ol start=&quot;1&quot; class=&quot;dp-cpp&quot; style=&quot;margin: 0px 0px 1px 45px; padding: 0px; list-style: decimal-leading-zero; color: rgb(92, 92, 92); background-color: rgb(255, 255, 255);&quot;&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;LRESULT&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;CALLBACK&amp;nbsp;MyWindowProcedure(&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;HWND&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;Window,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;UINT&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;MsgId,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;WPARAM&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;W,&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;datatypes&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(46, 139, 87); font-weight: bold;&quot;&gt;LPARAM&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;L)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EnterCriticalSection(&amp;amp;GlobalCs);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;switch&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;(MsgId)&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;　　&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;case&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;WM_KEYDOWN:&amp;nbsp;OutputDebugStringA(“WM_KEYDOWN”);&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LeaveSection(&amp;amp;GlobalCs);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;falt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;keyword&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 102, 153); font-weight: bold;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;DefWindowProc(Window,&amp;nbsp;MsgId,&amp;nbsp;W,&amp;nbsp;L);&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;alt&quot; style=&quot;margin: 0px; padding: 2px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(108, 226, 108); line-height: 14px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; color: black;&quot;&gt;}&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;아직도 무슨 상황에 문제가 생긴다는 건지 잘 이해가 되지 않을 수도 있다. 그렇다면 위와 같은 메시지 핸들러를 가지고 다음과 같은 세 가지 경우를 모두 테스트해 보도록 하자.&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;1. 한 스레드에서 해당 메시지 핸들러를 사용하는 윈도우를 하나만 생성한 경우&lt;br style=&quot;margin: 0px; padding: 0px;&quot;&gt;2. 한 스레드에서 해당 메시지 핸들러를 사용하는 윈도우를 여러 개 생성한 경우&lt;br style=&quot;margin: 0px; padding: 0px;&quot;&gt;3. 여러 스레드에서 해당 메시지 핸들러를 사용하는 윈도우를 생성한 경우&lt;/p&gt;&lt;p style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px;&quot;&gt;올바로 디자인된, 다시 말하면 재진입 가능하도록 만들어진 메시지 프로시저라면 1, 2, 3의 경우에 모두 동일한 동작을 보장해야 한다. 만약 세 가지 중에 한 가지 경우라도 동작이 다르다면 해당 메시지 핸들러는 잘못 작성된 것으로 범용적으로 사용할 수 없음을 의미한다.&lt;/p&gt;&lt;p class=&quot;no-break&quot; style=&quot;margin: 1.5em 0px; padding: 0px; line-height: 22.1px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px; text-align: center;&quot;&gt;&lt;span st_title=&quot;재진입 함수의 의미&quot; st_url=&quot;http://www.jiniya.net/wp/archives/1197&quot; class=&quot;st_facebook_hcount&quot; st_processed=&quot;yes&quot; style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span class=&quot;stButton&quot; style=&quot;margin: 0px 3px; padding: 0px; position: relative; z-index: 1; display: inline-block; cursor: pointer; font-size: 11px; line-height: 16px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span class=&quot;stMainServices st-facebook-counter&quot; style=&quot;margin: 0px; padding: 3px 0px; display: inline-block; white-space: nowrap; font-family: Verdana, Helvetica, sans-serif; height: 16px; width: 60px; position: relative; background-image: url(&amp;quot;/images/facebook_counter.png&amp;quot;); background-repeat: no-repeat;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;stArrow&quot; style=&quot;margin: 0px 0px 0px -1px; padding: 0px 0px 0px 3px; height: 14px; display: inline-block; background: url(&amp;quot;http://w.sharethis.com/share4x/images/Facebook_bubble_arrow.png&amp;quot;) 3px 8px no-repeat;&quot;&gt;&lt;span class=&quot;stButton_gradient stHBubble&quot; style=&quot;margin: 0px 3px; padding: 2px; border: 1px solid rgb(202, 212, 231); font-family: serif; border-radius: 4px; display: inline-block; height: 16px; position: relative; z-index: -1; filter: none; background: rgb(236, 238, 245);&quot;&gt;&lt;span class=&quot;stBubble_hcount&quot; style=&quot;margin: 0px; padding: 0px 2px; white-space: nowrap; font-family: Verdana, Helvetica, sans-serif; height: 16px;&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;span st_username=&quot;codemaru&quot; st_title=&quot;재진입 함수의 의미&quot; st_url=&quot;http://www.jiniya.net/wp/archives/1197&quot; class=&quot;st_twitter_hcount&quot; st_processed=&quot;yes&quot; style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span class=&quot;stButton&quot; style=&quot;margin: 0px 3px; padding: 0px; position: relative; z-index: 1; display: inline-block; cursor: pointer; font-size: 11px; line-height: 16px;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span class=&quot;stMainServices st-twitter-counter&quot; style=&quot;margin: 0px; padding: 3px 0px; display: inline-block; white-space: nowrap; font-family: Verdana, Helvetica, sans-serif; height: 16px; width: 60px; position: relative; background-image: url(&amp;quot;http://w.sharethis.com/images/twitter_counter.png&amp;quot;); background-repeat: no-repeat;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;stArrow&quot; style=&quot;margin: 0px 0px 0px -1px; padding: 0px 0px 0px 3px; height: 14px; display: inline-block; background: url(&amp;quot;http://w.sharethis.com/share4x/images/Twitter_bubble_arrow.png&amp;quot;) 3px 8px no-repeat;&quot;&gt;&lt;span class=&quot;stButton_gradient stHBubble&quot; style=&quot;margin: 0px 3px; padding: 2px; border: 1px solid rgb(204, 227, 243); font-family: serif; border-radius: 4px; display: inline-block; height: 16px; position: relative; z-index: -1; filter: none; background-image: initial; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;stBubble_hcount&quot; style=&quot;margin: 0px; padding: 0px 2px; white-space: nowrap; font-family: Verdana, Helvetica, sans-serif; height: 16px;&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;st_fblike_hcount&quot; st_title=&quot;재진입 함수의 의미&quot; st_url=&quot;http://www.jiniya.net/wp/archives/1197&quot; st_processed=&quot;yes&quot; style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;margin: 3px 3px 0px; padding: 0px; display: inline-block; cursor: pointer; position: relative; font-size: 11px; line-height: 0px; vertical-align: bottom; overflow: visible;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div data-action=&quot;&quot; data-send=&quot;false&quot; data-layout=&quot;button_count&quot; data-show-faces=&quot;false&quot; class=&quot;fb-like fb_iframe_widget&quot; data-href=&quot;http://www.jiniya.net/wp/archives/1197&quot; fb-xfbml-state=&quot;rendered&quot; fb-iframe-plugin-query=&quot;app_id=&amp;amp;container_width=0&amp;amp;href=http%3A%2F%2Fwww.jiniya.net%2Fwp%2Farchives%2F1197&amp;amp;layout=button_count&amp;amp;locale=en_US&amp;amp;sdk=joey&amp;amp;send=false&amp;amp;show_faces=false&quot; style=&quot;margin: 0px; padding: 0px; display: inline-block; position: relative;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; display: inline-block; position: relative; text-align: justify; vertical-align: bottom; width: 78px; height: 20px;&quot;&gt;&lt;iframe name=&quot;f3ca9c012c&quot; width=&quot;1000px&quot; height=&quot;1000px&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; scrolling=&quot;no&quot; title=&quot;fb:like Facebook Social Plugin&quot; src=&quot;http://www.facebook.com/v2.0/plugins/like.php?app_id=&amp;amp;channel=http%3A%2F%2Fstaticxx.facebook.com%2Fconnect%2Fxd_arbiter.php%3Fversion%3D42%23cb%3Df3a2cfc958%26domain%3Dwww.jiniya.net%26origin%3Dhttp%253A%252F%252Fwww.jiniya.net%252Ff2387116e%26relation%3Dparent.parent&amp;amp;container_width=0&amp;amp;href=http%3A%2F%2Fwww.jiniya.net%2Fwp%2Farchives%2F1197&amp;amp;layout=button_count&amp;amp;locale=en_US&amp;amp;sdk=joey&amp;amp;send=false&amp;amp;show_faces=false&quot; class=&quot;&quot; style=&quot;margin: 0px; padding: 0px; position: absolute; border-style: none; border-width: initial; visibility: visible; width: 78px; height: 20px;&quot;&gt;&lt;/iframe&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;margin: 0px; padding: 0px; font-family: 'Malgun Gothic', Arial, Helvetica, sans-serif; font-size: 13px; line-height: 17.55px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot;&gt;Read more:&amp;nbsp;&lt;a href=&quot;http://www.jiniya.net/wp/archives/1197#ixzz40KVbEKvT&quot; style=&quot;margin: 0px; padding: 0px; color: rgb(0, 51, 153);&quot;&gt;http://www.jiniya.net/wp/archives/1197#ixzz40KVbEKvT&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/240</guid>
<comments>https://genesis8.tistory.com/240#entry240comment</comments>
<pubDate>Tue, 16 Feb 2016 20:33:22 +0900</pubDate>
</item>
<item>
<title>RDC(Remote Desktop Connection)</title>
<link>https://genesis8.tistory.com/238</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;RDC 툴 사용법&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;http://max1013.tistory.com/entry/%EC%9B%90%EA%B2%A9%EA%B4%80%EB%A6%AC%ED%88%B4-RDCMRemote-Desktop-Connection-Manager-22-Release&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>기타 정보</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/238</guid>
<comments>https://genesis8.tistory.com/238#entry238comment</comments>
<pubDate>Mon, 15 Feb 2016 16:03:17 +0900</pubDate>
</item>
<item>
<title>CPU</title>
<link>https://genesis8.tistory.com/237</link>
<description>&lt;p&gt;출처 : 위키 백과&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;중앙 처리 장치&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;CPU는 여기로 연결됩니다. 다른 뜻에 대해서는 CPU (동음이의) 문서를 참조하십시오.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;중앙 처리 장치&lt;/span&gt;(中央處理裝置, 문화어: 중앙처리소자) 또는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;CPU(영어: central processing unit)&lt;/span&gt;는 소프트웨어 명령의 실행이 이루어지는 컴퓨터의 부분, 혹은 그 기능을 내장한 칩을 말한다. 컴퓨터 안의 중앙 처리 장치(CPU)는 외부에서 정보를 입력 받고, 기억하고, 컴퓨터 프로그램의 명령어를 해석하여 연산하고, 외부로 출력하는 역할을 한다. 따라서 중앙 처리 장치(CPU) 는 컴퓨터 부품과 정보를 교환하면서 컴퓨터 시스템 전체를 제어하는 장치로, 모든 컴퓨터의 작동과정이 중앙 처리 장치(CPU)의 제어를 받기 때문에 컴퓨터의 두뇌에 해당한다고 할 수 있다. 실제의 CPU 칩엔 실행 부분뿐만 아니라 캐시 등의 부가 장치가 통합된 경우가 많다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;CPU에는 MCU(Micro Control Unit)와 주변 장치(외부 확장 장체에 관한 IC)가 다 들어있는 Soc(System One Chip)가 있다. 주변 IC가 따로 달려 있을 경우, 그것은 MCU라고 할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;CPU는 기계어로 쓰인 컴퓨터 프로그램의 명령어를 해석하여 실행&lt;/span&gt;한다.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; CPU는 프로그램에 따라 외부에서 정보를 입력하고, 기억하고, 연산하고, 외부로 출력&lt;/span&gt;한다. CPU는 컴퓨터 부품과 정보를 교환하면서 컴퓨터 전체의 동작을 제어한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;기본 구성으로는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;CPU에서 처리할 명령어를 &lt;u&gt;저장&lt;/u&gt;하는 역할을 하는 &lt;u&gt;프로세서&lt;/u&gt;&lt;/span&gt;&lt;u&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;레지스터&lt;/span&gt;&lt;/u&gt;, 비교, 판단,&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; &lt;u&gt;연산을 담당&lt;/u&gt;하는 &lt;u&gt;산술논리연산장치(ALU)&lt;/u&gt;&lt;/span&gt;, 명&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;령어의 해석과 올바른 실행을 위하여 CPU를 내부적으로 제어하는&lt;u&gt; 제어부(control unit)&lt;/u&gt;&lt;/span&gt;와 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;u&gt;내부 버스&lt;/u&gt;&lt;/span&gt; 등이 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;각종 전자 부품과 반도체 칩을 하나의 작은 칩에 내장한 전자 부품을 마이크로프로세서라고 한다. 마이크로프로세서는 전기 밥통에 쓰이는 낮은 성능의 제품부터 컴퓨터에 쓰이는 높은 성능의 제품까지 매우 다양하다. 마이크로프로세서들 가운데 가장 복잡하고 성능이 높은 제품은 컴퓨터의 연산 장치로 쓰인다. 이것을 중앙 처리 장치(CPU)라고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;CPU의 출현&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;'고정된-프로그램 컴퓨터' 라고 불리는 ENIAC같은 컴퓨터는 다른 종류의 작업을 하기 위해 전선을 재배열 하는 과정이 필요했다&lt;/span&gt;.&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&quot;CPU&quot; 라는 용어가 소프트웨어의 실행을 위한 장치로 불리게 된 이래로, CPU라고 불릴 수 있는 장치의 출현은 프로그램 내장 방식 컴퓨터의 출현 덕분이었다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;프로그램 내장 방식 컴퓨터는 J.Presper Eckrt와 John Willian Mauchly's의 ENIAC 설계에도 이미 어느 정도 드러나 있다. 하지만 ENIAC을 빨리 제작하기 위해서 생략되었다. ENIAC이 만들어지기 전인 1945년 6월 30일 수학자 폰 노이만은 'EDVAC 초안에 대한 보고' 라는 논문을 발표했다. 이것은 프로그램 내장 방식 컴퓨터의 개요로써 1949년에 완전히 정립되었다. EDVAC은 일정한 수의 다양한 작업을 수행하기 위해 고안되었다. 확실한 것은, EDVAC 프로그램은 물리적 선의 연결이 아니라 빠른 속도의 컴퓨터 메모리에 저장된다는 것이다. 이것은 새로운 작업을 수행하기 위해서는 상당한 시간과 노력이 필요한 ENIAC의 한계를 이겨내는 데 도움을 주었다. 폰 노이만의 디자인은&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 소프트웨어(프로그램)을 단순히 메모리에 있는 내용을 바꾸는 것 만으로 손쉽게 실행할 수 있게 만들어 주었다&lt;/span&gt;. 하지만 EDVAC은 최초의 프로그램 내장방식 컴퓨터는 아니었다. 맨체스터 대학교의 SSEM(Small-Scale Experimental Machine)과 마크 1이 프로그램 내장 방식 컴퓨터의 초기 버전이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;트랜지스터와 집적회로 CPU의 등장[편집]&lt;/p&gt;&lt;p&gt;트랜지스터 CPU는 트랜지스터가 발명된 이후 생긴다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마이크로프로세서[편집]&lt;/p&gt;&lt;p&gt;페드리코 페긴이 1970년대에 발명한 것은 CPU의 설계와 구현에 대한 전반적인 기초를 완전히 바꾸어 놓았다. 1970년에 등장한 최초의 상업용 마이크로프로세서(Intel 4004)와 1974년의 최초의 범용 마이크로프로세서(Intel 8080) 이후로,생겼다&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;연산[편집]&lt;/p&gt;&lt;p&gt;모든 CPU에서 메모리에 저장된 명령어들을 순서대로 불러와서 실행한다는 사실은 물리적형태와는 관계없이 동일하다. 그리고 CPU가 이 동작을 수행하기 위해서는 꺼내고, 해독하고, 실행하는 5단계가 필요하다. 마지막 단계에서 명령어를 실행하고난 이후에는 다시 이 다섯 단계의 명령 주기가 반복되며, 프로그램카운터의 변화된 위치에서 실행될 명령어를 불러오게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;인출(Fetch)[편집]&lt;/p&gt;&lt;p&gt;첫번째 단계인 인출은 프로그램의 메모리에서 명령어를 불러오는 역할을 한다. 프로그램 내부의 명령어의 위치(주소)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;해독(Decode)[편집]&lt;/p&gt;&lt;p&gt;두번째 단계인 해독은 인출 단계에서 가져온 명령어를 해독하여 명령어 내의 데이터 정보와 연산 정보를 추출한 뒤, 중앙처리 장치 내의 각 장치에 적절한 제어신호를 보내 연산, 처리에 대한 준비를 하는 단계이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;실행(Execute)[편집]&lt;/p&gt;&lt;p&gt;명령어에서 추출한 두 데이터와 연산 정보를 이용해 실제로 연산을 하는 단계를 말한다. 연산이 끝난 결과는 곧바로 다음 명령어에서 사용될지, 그렇지 않을지에 따라 메모리 단계로 가던지, 라이트백 단계로 가던지 결정된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;메모리(Memory)[편집]&lt;/p&gt;&lt;p&gt;네번째 단계인 메모리는 연산결과가 다음 명령어에 바로 사용되지 않는다면, 결과를 메모리에 저장하는 것을 말한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;라이트백(Write-Back)[편집]&lt;/p&gt;&lt;p&gt;연산의 마지막 단계인 라이트백은 이전 명령어의 연산 결과가 다음 명령어의 입력 데이터로 사용될 경우, 계산 결과를 레지스터에 다시 쓰는 것을 말한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;설계와 구현[편집]&lt;/p&gt;&lt;p&gt;CPU의 내장회로는 CPU가 수행할 수 있는 기본적인 연산들의 집합인 '명령어 집합'으로 이루어져있다. 예를 들면 두 개의 숫자에 대한 가감연산 혹은 비교연산 같은것이 있다. 각각의 기본 연산은 옵코드라고 불리는 특정한 비트의 조합으로 나타내진다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;모든 명령어의 실제 수학적인 연산은 CPU 내부의 산술논리장치(ALU, arithmetic logic unit)이라는 조합논리회로에서 담당한다. CPU는 대부분 산술논리장치가 연산을 수행하기 위한 명령어를 메모리로부터 불러오고, 연산의 결과값을 저장하는 일을 한다. 메모리로부터 데이터를 불러오는 연산의 명령어 집합의 종류와 동작은 확연한 차이를 보인다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;성능[편집]&lt;/p&gt;&lt;p&gt;싱글 코어[편집]&lt;/p&gt;&lt;p&gt;싱글 코어는 하나의 코어로 이루어진 CPU이다. 일반적으로 멀티 코어에 비해 경비가 싸고 프로그래밍도 간단하지만 보수 작업이나 고장의 경우에는 시스템이 완전히 멈추고 멀티 코어에 비해 처리 속도가 느리다는 단점이 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;멀티 코어[편집]&lt;/p&gt;&lt;p&gt;&amp;nbsp;이 부분의 본문은 멀티 코어입니다.&lt;/p&gt;&lt;p&gt;최근에 나오는 중앙 처리 장치의 성능은 크게 클록(Clock) 속도와 코어 수로 결정된다. CPU에서&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 클록이라고 하는 수치는 중앙 처리 장치 내부에서 일정한 주파수를 가지는 신호로 이 신호에 동기화되어서 중앙 처리 장치의 모든 명령어가 동작되게 된다.&lt;/span&gt; 예를 들어, 클록 수가 3.0GHz이면 초당 30억 번의 명령어 처리를 할 수 있다는 말이다. 따라서 클록 주파수가 빠를수록 제한된 시간에 더 많은 명령을 처리할 수 있기에 더 좋은 성능의 중앙 처리 장치라고 할 수 있다. 또, 중앙 처리 장치안의 코어의 수로도 성능의 차이가 난다. 코어는 중앙 처리 장치의 역할을 하는 블록으로 예전에는 한 개의 칩 안에는 한 개의 코어의 구조를 가졌으나, 최근에는 한 개의 칩 안에 여러 개의 코어를 가지는 구조를 채택하고 있다. 이렇게 한 개의 칩 안에 여러 개의 연산을 처리할 수 있는 장치를 병렬적으로 연결한 멀티 코어 시스템을 통하여 더 좋은 성능의 중앙 처리 장치를 얻을 수 있게 된다..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;싱글 코어 및 다중 코어를 칭하는 명칭은 다음과 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;코어의 개수&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;명칭&lt;/p&gt;&lt;p&gt;1&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;싱글 코어&lt;/p&gt;&lt;p&gt;2&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;듀얼 코어&lt;/p&gt;&lt;p&gt;3&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;트리플 코어&lt;/p&gt;&lt;p&gt;4&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;쿼드 코어&lt;/p&gt;&lt;p&gt;6&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;헥사 코어&lt;/p&gt;&lt;p&gt;8&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;옥타 코어&lt;/p&gt;&lt;p&gt;10&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;데카 코어&lt;/p&gt;&lt;p&gt;12&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;도데카 코어&lt;/p&gt;&lt;p&gt;16&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;헥사 데시멀 코어&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/237</guid>
<comments>https://genesis8.tistory.com/237#entry237comment</comments>
<pubDate>Mon, 15 Feb 2016 14:16:36 +0900</pubDate>
</item>
<item>
<title>스레드(Thread)의 기본적인 특성</title>
<link>https://genesis8.tistory.com/236</link>
<description>&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;원본 출처 :&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;font color=&quot;#1f1f1f&quot; face=&quot;맑은 고딕, malgun gothic, 돋움, dotum, AppleGothic, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 13px; line-height: 23px;&quot;&gt;http://egloos.zum.com/sweeper/v/2815395&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;1. 기본적인 특성&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로세스 단위의 컨텍스트 스위칭은 그 비용이 아주 비싸다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;왜냐면,&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;[Code - Data - Heap - Stack]&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;으로 이루어진 메모리가 모두 스위칭 되어야 하기 때문&lt;/span&gt;이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;아주 다른 목적이 아닌, &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;하나의 프로세스 내에서 실행의 흐름을 바꾸면서 컨텍스트 스위칭 비용을 줄이기 위해서 고안된 것이 Thread&lt;/span&gt; 이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;컨텍스트 비용을 줄이기 위해 고안되었다고 하는데, 아래 차이점을 보면 감이 올 것이다. 쓰레드는 하나의 프로그램 내에서 여러 개의 실행 흐름을 두기 위한 모델이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;ul style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; list-style: none;&quot;&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;쓰레드는 프로세스처럼 완벽히 독립적인 구조가 아니다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;쓰레드들 사이엔 공유하는 요소들이 있다.&amp;nbsp;&lt;/span&gt;쓰레드는&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 공유하는 요소가 있는 관계로 컨텍스트 스위칭이 걸리는 시간이 프로세스보다 짧다&lt;/span&gt;. 위 내용은 아래 프로세스와 쓰레드의 메모리 구조의 차이점을 그린 그림을 보면 더 이해가 편할 것이다.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; text-align: center;&quot;&gt;&lt;a href=&quot;http://pds19.egloos.com/pds/201106/21/32/d0014632_4e00283cec462.png&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(49, 128, 218); text-decoration: underline;&quot;&gt;&lt;img class=&quot;post_image&quot; border=&quot;0&quot; data-original=&quot;http://thumbnail.egloos.net/600x0/http://pds19.egloos.com/pds/201106/21/32/d0014632_4e00283cec462.png&quot; data-thumbsrc=&quot;http://thumbnail.egloos.net/600x0/http://pds19.egloos.com/pds/201106/21/32/d0014632_4e00283cec462.png&quot; width=&quot;600&quot; data-src=&quot;http://pds19.egloos.com/pds/201106/21/32/d0014632_4e00283cec462.png&quot; data-width=&quot;779&quot; src=&quot;http://thumbnail.egloos.net/600x0/http://pds19.egloos.com/pds/201106/21/32/d0014632_4e00283cec462.png&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: top; max-width: 100%; display: inline;&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로세스는 자식 프로세스를 생성하더라도 자식 프로세스들은 모두 완전한 프로세스의 메모리 구조&lt;/span&gt;를 가진다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;이에 비해&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 쓰&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;레드는 해당 프로세스와 [Code - Data - Heap] 영역은 공유하고, 자신만의 Stack 영역만 별도로 소유&lt;/span&gt;한다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;이는 쓰레드를 생성하는 함수의 파라미터 중 스택 사이즈를 지정하는 파라미터가 있음만 봐도 명확하다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;쓰레드는 프로세스 내 다른 실행 흐름을 가지기 위해 사용한다고 하였다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;실행 흐름을 다르게 가져가기 위해선 다른 함수 호출 시퀀스를 가져야 하고, 스택 영역이 별도로 있어야 하는 이유이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;암튼, 위에서 보듯이 쓰레드는 Stack 영역만 별도로 소유함으로써 프로세스 대비 쓰레드간 컨텍스트 스위칭은 비용이 적은 것이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;특히 캐쉬 메모리의 활용 측면으로 넘어가면 그 비용의 차이는 더 커진다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로세스 컨텍스트 스위칭시에는 모든 데이터 영역이 갈아엎히기에 캐쉬 메모리가 싹 비워져야 하지만, 쓰레드의 경우엔 그렇지 않다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;다시 한번 정리하면 메모리 관련 쓰레드의 특성은 다음과 같다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;ul style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; list-style: none;&quot;&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;쓰레드마다 독립된 스택&lt;/span&gt;을 할당해 준다.&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;쓰레드마다 고유의 CPU 레지스터값 세트&lt;/span&gt;를 가진다. (그래야 쓰레드 스위칭 이후 실행하던 지점으로 돌아갈 것 아닌가?)&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;코드 영역을 공유&lt;/span&gt;한다.&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;힙 &amp;amp; 데이터 영역을 공유&lt;/span&gt;한다.&lt;br /&gt;: 이로 인한 동기화 문제는 후~&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;2. 프로세스와 쓰레드&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;&quot;&gt;사실 Windows OS에서 프로세스는 단순히 쓰레드를 담는 상자에 불과하다고 해도 과언이 아니다. 모든 프로세서는 별도의 쓰레드를 생성하지 않더라도 Main 쓰레드를 통해 동작하기 때문이다.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;프로세스 챕터(&lt;a href=&quot;http://sweeper.egloos.com/2814918&quot; style=&quot;margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: rgb(49, 128, 218); text-decoration: underline;&quot;&gt;http://sweeper.egloos.com/2814918&lt;/a&gt;)에서 정리했던 스케쥴링은 사실 쓰레드에 적용되는 것들이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;3. Kernel Level 쓰레드&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;font size=&quot;2&quot;&gt;(이 내용은 음...굳이 뭐...그냥 적어봄)&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;쓰레드를 누가 생성하고 관리하느냐에 따라 커널 레벨 vs 유저 레벨 쓰레드로 나눌 수 있다. 우리가 사용하는 Windows이든 Linux이든 우리가 흔히 접하는 모든 OS는 커널 레벨 쓰레드를 사용한다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;즉, 쓰레드를 생성하고 스케쥴링하는 주체가 커널인 것이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;쓰레드를 생성하는 것만 보아도 쉽게 알 수 있다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;우리는 쓰레드 생성시 쓰레드 커널 오브젝트의 오브젝트 핸들을 넘겨 받는다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/236</guid>
<comments>https://genesis8.tistory.com/236#entry236comment</comments>
<pubDate>Mon, 15 Feb 2016 12:19:07 +0900</pubDate>
</item>
<item>
<title>프로세스(Process) , 스케쥴링(Scheduling)</title>
<link>https://genesis8.tistory.com/235</link>
<description>&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;원본 출처 :&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#666666&quot; face=&quot;Trebuchet MS, Trebuchet, Apple Gothic, Verdana, Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;line-height: 19.2px;&quot;&gt;http://sweeper.egloos.com/2814918&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;프로세스에 대해 간략하게 리마인드 차원에서 정리한다.&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;사실 Windows OS에서 프로세스는 쓰레드를 감싸고 있는 박스떼기에 불과하다고 해도 과언이 아니지만,&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;개념적으로 접근하기 위해 쓰레드보다는 프로세스를 주인공 취급하여 설명토록 하겠다.&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;귀찮아서 정리할 지 안할 진 모르겠지만, 이후 쓰레드 기초 내용 정리에서 다시 이에 관련된 내용들이 나올 것이다.&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;------------------------------------------------------------------------------&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;font size=&quot;4&quot;&gt;1. 프로세스란?&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Trebuchet MS', Trebuchet, 'Apple Gothic', Verdana, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;실행중인 프로그램의 instance&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font size=&quot;4&quot;&gt;2. 프로세스의 구성 요소&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;1) 프로그램 실행시 메모리 구조&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Code&lt;/b&gt;&amp;nbsp;: &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;실행 파일을 구성하는 명령어(기계어)들&lt;/span&gt;이 올라가는 공간&lt;/div&gt;&lt;div&gt;&lt;b&gt;Data&lt;/b&gt;&amp;nbsp;: &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로그램이 종료될 때까지 지워지지 않는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 데이터를 저장&lt;/span&gt;하는 공간.&amp;nbsp;&lt;b&gt;대표적으로 전역/Static 변수&lt;/b&gt;가 있다.&lt;/div&gt;&lt;div&gt;&lt;b&gt;Heap&lt;/b&gt;&amp;nbsp;: &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;동적으로 할당&lt;/span&gt;되는 메모리를 위한 공간&lt;/div&gt;&lt;div&gt;&lt;b&gt;Stack&lt;/b&gt;&amp;nbsp;: 함수 내 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;지역 &lt;/span&gt;변수 및 함수 매개변수, 함수 반환 주소&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;2) Register set&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;실행 중인 프로세스에 관련된 데이터들고 CPU 내 레지스터들이 채워지기에 역시 구성 요소로 포함할 수 있다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font size=&quot;4&quot;&gt;3. 프로세스 스케쥴링&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;멀티 프로세스 운영체제에서 하나의 CPU가 복수의 프로세스를 실행하기 위해선 스케쥴링이 필요하다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;프로세스 스케쥴링 방식에 따라 OS를 크게 두 가지 방식으로 나눌 수 있다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;1) Non-Preemptive OS&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;비선점형 OS는 현재 실행 중인 프로세스보다 높은 우선순위를 가지는 프로세스가 실행된다고 해서 실행 대상을 바로 변경하지 않는다.&lt;/div&gt;&lt;div&gt;새로 실행된 보다 높은 우선순위의 프로세스가 실행되기 위해서는 현재 실행 중인 프로세스가 명시적으로 CPU를 양보할 때까지, 혹은 I/O 작업 등으로 블로킹 상태가 될 때까지 기다려야만 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;과거 Windows95 이전, 그리고 Mac OS X 이전의 OS들이 비선점형 OS 였으며, 그 이후의 모든 OS는 선점형 OS 이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;2) Preemptive OS&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;선점형 OS는 실행 중인 프로세스보다 높은 우선 순위의 프로세스가 실행되면, 스케쥴러에 의해 실행 순서가 적극 조정되는 OS를 얘기한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;또한, 비선점형 OS에 비해 훨씬 더 스케쥴링이 복잡하게 처리가 되어 있는데, 우선 순위가 같은 프로세스들간 실행 배분에도 관여를 하기 때문이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;최근의 모든 OS는 선점형 OS&lt;/b&gt;이며, Windows OS에서 선점형 스케쥴링 알고리즘으로 채택하고 있는 두 가지를 소개하겠다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;1. Priority Scheduling Algorithm&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;뭐 말 그대로 각각의 프로세스마다 우선 순위를 부여해서 우선 순위가 높은 프로세스를 먼저 실행시키는 알고리즘이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;우선순위 10 프로세스와 1 프로세스가 동시에 실행중이라고 가정해 보자.&lt;/div&gt;&lt;div&gt;10 짜리가 더 높으니 거의 모든 CPU 타임을 10 프로세스가 차지하고 있을 것이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그럼 1 짜리 프로세스는 언제 실행되는가?&lt;/div&gt;&lt;div&gt;10 짜리 프로세스가 I/O Busy나 다른 프로세스를 기다리는 등의 블로킹 상태가 되어야만 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;2. Round-Robin Scheduling Algorithm&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;우선 순위 스케쥴링 방식의 예외를 처리하기 위해 고안된 알고리즘.&lt;/div&gt;&lt;div&gt;우선 순위가 같은 프로세스간에는 어떻게 해서 CPU를 분배하는가에 대한 스케쥴링 방식이다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;즉, 같은 우선 순위의 프로세스들간 형평성 유지를 위해 정해진 시간 간격 만큼만 실행을 하고 우선 순위가 동일한 다른 프로세스에게 CPU의 할당을 넘기는 방식을 뜻한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;실행의 최소 단위 시간 간격을 우리는 Quantum 또는 Time Slice 라 하는데, 동일한 우선 순위의 모든 프로세스들은 이 타임 슬라이스를 기준으로 CPU의 할당을 넘기게 된다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;타임 슬라이스 간격이 관건인데...&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1) 너무 길면 인터랙티브한 시스템에서 문제가 될 수 있다. 입력에 대한 반응이 늦는 등...&lt;/div&gt;&lt;div&gt;2) 너무 짧으면 컨텍스트 스위칭이 너무 많이 발생해서 성능 저하 문제가 심각해 진다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;최근 OS들은 보통 15~20ms 간격으로 스케쥴링을 수행한다고 한다.&lt;/div&gt;&lt;div&gt;Windows7의 경우 약 15ms 단위 (정확하게 15.6001ms)로 스케쥴링한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;따라서, 우리가 만든 쓰레드가 임의로(::Sleep 등) 쓰레드 컨텍스트 스위칭을 시키지 않았다 하더라도,&lt;/div&gt;&lt;div&gt;항상 수행되고 있다고 가정해서는 안 된다는 것을 반드시 기억해야 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;특정 쓰레드가 모든 프로세서를 점유하고 있다면 다른 쓰레드가 어떻게 수행될 수 있겠는가?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Window 운영체제의 경우 GetSystemTimeAdjustment 함수를 활용하면 정확한 타임 슬라이스 값을 확인할 수 있다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ol style=&quot;margin: 0px; padding: 0px 0px 0px 48px; color: rgb(172, 172, 172); font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', monospace, serif; line-height: 21px; background-color: rgb(248, 248, 248);&quot;&gt;&lt;li class=&quot;li1&quot; style=&quot;-webkit-user-select: none;&quot;&gt;&lt;div class=&quot;de1&quot; style=&quot;-webkit-user-select: text; padding: 0px 5px; vertical-align: top; color: rgb(0, 0, 0); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); margin: 0px 0px 0px -7px; position: relative; background-color: rgb(255, 255, 255);&quot;&gt;DWORD timeAdjustment&amp;nbsp;&lt;span class=&quot;sy1&quot; style=&quot;color: rgb(0, 0, 128);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;nu0&quot; style=&quot;color: rgb(0, 0, 221);&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;sy4&quot; style=&quot;color: rgb(0, 128, 128);&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;li2&quot; style=&quot;-webkit-user-select: none;&quot;&gt;&lt;div class=&quot;de2&quot; style=&quot;-webkit-user-select: text; padding: 0px 5px; vertical-align: top; color: rgb(0, 0, 0); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); margin: 0px 0px 0px -7px; position: relative; background-color: rgb(255, 255, 255);&quot;&gt;DWORD timeIncrement&amp;nbsp;&lt;span class=&quot;sy1&quot; style=&quot;color: rgb(0, 0, 128);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;nu0&quot; style=&quot;color: rgb(0, 0, 221);&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;sy4&quot; style=&quot;color: rgb(0, 128, 128);&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;li1&quot; style=&quot;-webkit-user-select: none;&quot;&gt;&lt;div class=&quot;de1&quot; style=&quot;-webkit-user-select: text; padding: 0px 5px; vertical-align: top; color: rgb(0, 0, 0); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); margin: 0px 0px 0px -7px; position: relative; background-color: rgb(255, 255, 255);&quot;&gt;BOOL timeAdjustmentDisabled&amp;nbsp;&lt;span class=&quot;sy1&quot; style=&quot;color: rgb(0, 0, 128);&quot;&gt;=&lt;/span&gt;&amp;nbsp;FALSE&lt;span class=&quot;sy4&quot; style=&quot;color: rgb(0, 128, 128);&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;li2&quot; style=&quot;-webkit-user-select: none;&quot;&gt;&lt;div class=&quot;de2&quot; style=&quot;-webkit-user-select: text; padding: 0px 5px; vertical-align: top; color: rgb(0, 0, 0); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); margin: 0px 0px 0px -7px; position: relative; background-color: rgb(255, 255, 255);&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/li&gt;&lt;li class=&quot;li1&quot; style=&quot;-webkit-user-select: none;&quot;&gt;&lt;div class=&quot;de1&quot; style=&quot;-webkit-user-select: text; padding: 0px 5px; vertical-align: top; color: rgb(0, 0, 0); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); margin: 0px 0px 0px -7px; position: relative; background-color: rgb(255, 255, 255);&quot;&gt;GetSystemTimeAdjustment&lt;span class=&quot;br0&quot; style=&quot;color: rgb(0, 128, 0);&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sy3&quot; style=&quot;color: rgb(0, 0, 64);&quot;&gt;&amp;amp;&lt;/span&gt;timeAdjustment,&amp;nbsp;&lt;span class=&quot;sy3&quot; style=&quot;color: rgb(0, 0, 64);&quot;&gt;&amp;amp;&lt;/span&gt;timeIncrement,&amp;nbsp;&lt;span class=&quot;sy3&quot; style=&quot;color: rgb(0, 0, 64);&quot;&gt;&amp;amp;&lt;/span&gt;timeAdjustmentDisabled&lt;span class=&quot;br0&quot; style=&quot;color: rgb(0, 128, 0);&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sy4&quot; style=&quot;color: rgb(0, 128, 128);&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;정리를 하면,&lt;/div&gt;&lt;div&gt;Windows OS에서는 (Linux도 MAX OS X도...거의 모든 OS에서)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;1) 우선 순위 스케쥴링&lt;/b&gt;과&amp;nbsp;&lt;b&gt;2) 라운드-로빈 스케쥴링&lt;/b&gt;&amp;nbsp;알고리즘을 혼합한 선점형 스케쥴링을 수행한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;윈도우 OS에서는 프로세스들의 Priority와 I/O Busy state 등을 토대로 아래 그림과 같이 스케쥴링한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;image_mid&quot; border=&quot;0&quot; alt=&quot;&quot; src=&quot;http://thumbnail.egloos.net/600x0/http://pds22.egloos.com/pds/201106/20/32/d0014632_4dfed1d96fd23.png&quot; width=&quot;600&quot; height=&quot;216.208393632&quot; style=&quot;border: 0px; vertical-align: middle; margin: 15px 0px; cursor: pointer;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;4&quot;&gt;&lt;b&gt;4. 프로세스 스케쥴링 발생 시점&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;이 발생 시점에 대해서는 특별하게 따로 외우거나 할 필요가 있다기 보다, 스케쥴링 방식을 이해하고 있으면 자연스레 습득할 수 있다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1) 라운드-로빈 방식을 위한&amp;nbsp;&lt;b&gt;Every Time Slice&lt;/b&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;동일 우선 순위의 다른 프로세스에게 CPU를 넘겨줘야 하는지 판단하기 위해 매 타임 슬라이스마다 스케쥴러가 동작해야 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2) 우선 순위 방식을 위한&amp;nbsp;&lt;b&gt;프로세스 생성과 소멸&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;우선 순위가 가장 높은 프로세서가 CPU를 차지해야 하므로, 현재 실행 중인 프로세스보다 더 높은 프로세스가 새로 생성되었는지, 더 높았던 프로세스가 종료되었는지를 알기 위해서는 프로세스가 생성되고 소멸될 때마다 스케쥴러가 동작해야 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3)&amp;nbsp;&lt;b&gt;실행 중인&amp;nbsp;프로세스 블로킹&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;현재 실행 중인 프로세스가 블로킹 상태가 되면, 다른 프로세스가 대신 실행된다. 따라서, 현재 실행 중인 프로세스가 블로킹 상태에 놓이면 다음 실행될 프로세스 선정을 위해서 스케쥴러가 동작해야 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font size=&quot;4&quot;&gt;5. Context switching&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;CPU가 멀티 프로세스를 수행함에 있어 위 그림과 같이 프로세스 스케쥴링이 발생한다.&lt;/div&gt;&lt;div&gt;이로 인해 프로세스의 잦은 교체가 발생할 수 있다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;현재 실행중인 프로세스가 바뀌는 것은 Context switching이라고 하며, 같은 절차가 필요하다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1) A 프로세스의 데이터로 채워져 있던 레지스터들의 내용을 B 프로세스의 내용들로 교체.&lt;/div&gt;&lt;div&gt;2) A 프로세스의 데이터들은 컨텍스트 메모리에 백업.&lt;div class=&quot;copy_egloos&quot;&gt;출처:&lt;a href=&quot;http://sweeper.egloos.com/2814918&quot; target=&quot;_blank&quot; style=&quot;color: rgb(17, 166, 212);&quot;&gt;&lt;u&gt;Process, Scheduling...&lt;/u&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/235</guid>
<comments>https://genesis8.tistory.com/235#entry235comment</comments>
<pubDate>Mon, 15 Feb 2016 12:18:38 +0900</pubDate>
</item>
<item>
<title>비즈니스 로직(Business logic)?</title>
<link>https://genesis8.tistory.com/233</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;원본 출처 :&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;http://www.terms.co.kr/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;비즈니스 로직이란&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-size: 9pt;&quot;&gt; 업무에 필요한 데이터 처리를 수행하는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 9pt;&quot;&gt; 응용프로그램의 일부&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;를 말한다. 이것은 데이터 입력, 수정, 조회 및 보고서 처리 등을 수행하는 루틴, 좀더&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 9pt; background-color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 9pt; background-color: rgb(255, 255, 255);&quot;&gt;엄밀히 말하면 보이는 것의 그 뒤에서 일어나는 각종 처리를 의미&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 9pt;&quot;&gt;한다&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;. 대개 클라이언트 프로그램은 사용자 인터페이스와 비즈니스 로직으로 구성되며, 서버 프로그램은 대부분 비즈니스 로직만으로 되어 있다. 특히, 클라이언트/서버 모델인 경우에는 이외에도 통신링크가 추가되지만, 통신과 관련된 인프라스트럭처는 사용자 인터페이스처럼 비즈니스 로직의 일부는 아니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;http://zetawiki.com/wiki/%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4_%EB%A1%9C%EC%A7%81&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;비즈니스 로직&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;business logic, business logic layer, business tier, logic tier&lt;/p&gt;&lt;p&gt;비즈니스 로직, 비즈니스 로직 계층, 비즈니스 티어, 비즈니스 계층, 논리 계층&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;업무절차를 정보시스템으로 구현하기 위한 자료구조와 알고리즘&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;데이터베이스와 UI간 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;정보교환을 제어하는 알고리즘&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;기술적인 표현이 아니라 개념적 표현임&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;3계층 소프트웨어 아키텍처에서 가운데 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;논리 계층&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:420px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/214F073756C015F213&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Overview_of_a_three-tier_application_vectorVersion.svg (1).png&quot; height=&quot;375&quot; width=&quot;420&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;http://okky.kr/article/139274&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 20px;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;보통 코딩시&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;action -&amp;gt; manager-&amp;gt; dao&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;방식으로 많이 쓰던데요&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;액션단 매니저단 dao단에서 각각 무엇을하는지&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;명확하게 좀 가르쳐 주실분 계신지요&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;제 생각으로는&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;액션에서는 파라미터 셋팅하고&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;매니저 에서는 비지니스 로직?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;dao단에서는 당연히.. 쿼리를 날리는걸로 알고있는데&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;액션단에서 비지니스 로직도 하고 dao를 바로 콜하면 안되는건가요?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;보통 비지니스 로직이 매우 간단하여..&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;액션단에다 대충 기술하고.. 구지 매니저 클래스에서&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;다시 dao를 호출할 필요가 없는 경우가 만터라구요&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;'(매니저 클래스에서 하는일은 그냥dao 호출뿐인데&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;클래스도 인터페이스까지 2개를 만들어야하구요...)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;아무튼 위문제에 대해서&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;다들 어떻게 하시는지&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;그냥 패턴에 따라 코딩하시는지&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;아니면 저런 경우에는 액션에서 dao를 바로 콜하시는지&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;궁금합니다...&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;line-height: 18.2px;&quot;&gt;Action (controller 역할을 합니다. req의 유입, 분기, res 를 전달합니다)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;span style=&quot;line-height: 18.2px;&quot;&gt;Service (비즈니스 로직을 구현합니다,)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;span style=&quot;line-height: 18.2px;&quot;&gt;Dao (DB 자원을 억세스합니다.)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;span style=&quot;line-height: 18.2px; font-size: 9pt;&quot;&gt;보통&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 클래스를 분리하는 이유는,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; &lt;/span&gt;하나의 파일이 너무 많은 책임과 권한을 갖게 되면&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;당연히 스파게티 소스가 되고, 길어지기 마련이며, &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;유지보수하기 어렵기 때문&lt;/span&gt;입니다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;span style=&quot;line-height: 18.2px; font-size: 9pt;&quot;&gt;작은 단위의 unit 테스트나, 디버깅을 쉽게 가져가려는 부분, 서비스 영역의 비즈니스로직만 다이렉트 콜 해야 할 경우, 개발자가 여럿이 한 업무를 개발할 경우, MVC에 충실한 디자인을 고려해야 할 경우, 적절한 추상화를 해야 할 경우 등등등 파일의 영역을 역할에 맞게 분리하는것에 대해서는 oop적인 측면에서 장점이 많기 때문에 영역을 나누는것이죠.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;span style=&quot;line-height: 18.2px; font-size: 9pt;&quot;&gt;그러면 어떻게 나누어야 하나?, 어떤 정도 레벨까지 추상화를 할것인가?&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; line-height: 18.2px;&quot;&gt;&lt;span style=&quot;line-height: 18.2px; font-size: 9pt;&quot;&gt;이건 정답이 없습니다. 각 상황에 맞게, 각 인력의 역량에 맞게 '잘' 하면 되는거죠&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;list-group&quot; style=&quot;box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; padding-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 20px; border-radius: 0px !important;&quot;&gt;&lt;li class=&quot;list-group-item note-item clearfix&quot; id=&quot;note-579636&quot; style=&quot;box-sizing: border-box; position: relative; display: block; padding: 0px; margin-bottom: -1px; border-width: 1px 0px; border-style: solid; border-color: rgb(221, 221, 221); border-radius: 0px;&quot;&gt;&lt;form action=&quot;http://okky.kr/content/update/579636&quot; method=&quot;post&quot; data-id=&quot;579636&quot; class=&quot;note-update-form&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;div class=&quot;content-body panel-body pull-left&quot; style=&quot;box-sizing: border-box; float: left !important; padding: 15px; position: relative; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(221, 221, 221); width: 700px;&quot;&gt;&lt;fieldset class=&quot;form&quot; style=&quot;box-sizing: border-box; padding: 0px; margin: 20px 0px 0px; border: 0px; min-width: 0px;&quot;&gt;&lt;article id=&quot;note-text-579636&quot; class=&quot;list-group-item-text note-text&quot; style=&quot;box-sizing: border-box; margin-bottom: 0px; line-height: 1.3; min-height: 50px; overflow-x: auto; word-break: break-all;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;퀵님 그렇다면...&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;만약 비지니스 로직이 없거나 매우 간단하다면&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;Service 단 호출 없이&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;바로 DAO를 호출해도 되는건지요?&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;몇개 클래스만 DB처리후 소켓통신을 하고 나머지 클래스느 죄다&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;서비스단 없이 액션단에서 DAO를 호출해도 될것같아서 말입니다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;이렇게 해도 되는걸까요 ^^&lt;/span&gt;&lt;/article&gt;&lt;/fieldset&gt;&lt;/div&gt;&lt;/form&gt;&lt;/li&gt;&lt;li class=&quot;list-group-item note-item clearfix&quot; id=&quot;note-579643&quot; style=&quot;box-sizing: border-box; position: relative; display: block; padding: 0px; margin-bottom: -1px; border-width: 1px 0px; border-style: solid; border-color: rgb(221, 221, 221); border-radius: 0px;&quot;&gt;&lt;form action=&quot;http://okky.kr/content/update/579643&quot; method=&quot;post&quot; data-id=&quot;579643&quot; class=&quot;note-update-form&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;div class=&quot;content-body panel-body pull-left&quot; style=&quot;box-sizing: border-box; float: left !important; padding: 15px; position: relative; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(221, 221, 221); width: 700px;&quot;&gt;&lt;fieldset class=&quot;form&quot; style=&quot;box-sizing: border-box; padding: 0px; margin: 20px 0px 0px; border: 0px; min-width: 0px;&quot;&gt;&lt;article id=&quot;note-text-579643&quot; class=&quot;list-group-item-text note-text&quot; style=&quot;box-sizing: border-box; margin-bottom: 0px; line-height: 1.3; min-height: 50px; overflow-x: auto; word-break: break-all;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;비지님 struts - ibatis 로 구성된 소스 한번 보시구요..&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;각 struts - ibatis의 jar까서 디랙토리 구조와 호출 구조보면 답이 나옵니다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;왜 디렉토리를 그렇게 이름지었을까 ? 이고민만 하시면 해결됩니다.&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;바로 DAO를 호출해도 되는데요 만약 비지니스 로직이 추가되면?&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;그래서 프레임워크 사상을 따르는것이 좋습니다.&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;악간의 반복코딩이 되더라도&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이미 통상적인 Layer는 존중을 하는게 최고&lt;/span&gt;입니다&lt;/span&gt;&lt;/article&gt;&lt;/fieldset&gt;&lt;/div&gt;&lt;/form&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum;&quot;&gt;&lt;span style=&quot;line-height: 5.45455px;&quot;&gt;정보를 좀 더 수집해야할 듯하다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum;&quot;&gt;&lt;span style=&quot;line-height: 5.45455px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-bottom: 10px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, 'Apple SD Gothic Neo', 'Malgun Gothic', Dotdum; font-size: 14px; line-height: 0.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 0.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 0.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/233</guid>
<comments>https://genesis8.tistory.com/233#entry233comment</comments>
<pubDate>Sun, 14 Feb 2016 14:53:20 +0900</pubDate>
</item>
<item>
<title>웹서버(Web Server) / 웹 서버 어플리케이션(WSA)</title>
<link>https://genesis8.tistory.com/232</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;출처 : http://round1tko.tistory.com/64&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;[&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹 서버와&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS(Web Application Server)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 정의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;]&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹서버와&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 비슷한 개념이기 때문에 같이 또는 다르게 사용되는 단어 가운데 하나이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;인터넷 확산 초기에는 웹서버라는 개념으로 통칭해서 사용했지만&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;시간이 지남에 따라&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;를 더 많이 사용하고 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;인터넷 사용자가 증가함에 따라&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;각 웹 사이트는 보다 많은 사용자에게 원활한 서비스를 제공하기 위해 기능적인&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;layer&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;를 나누게 되었고 여기서 웹서버와&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 구분점이 생기게 된 것이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;기능적으로만 본다면&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;거의 대부분의 웹 서버가 웹 애플리케이션을 동작시킬 수 있겠지만 모두 웹 서버 혹은&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;라고 부르는 것보다는 어떤 기능을 수행하는지에 따라&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;즉 기능상의 분류를 통해 구분지어 사용해야 할 것이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;div align=&quot;center&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;table class=&quot;MsoTableGrid&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;1&quot; style=&quot;margin: auto auto auto 54.95pt; padding: 0px; border: medium none; line-height: 1.5; border-collapse: collapse;&quot;&gt;&lt;tbody style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;tr style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; height: 19.9pt;&quot;&gt;&lt;td width=&quot;52&quot; style=&quot;margin: 0px; padding: 0cm 5.4pt; border: 1pt solid black; font-family: dotum, sans-serif; width: 39.05pt; height: 19.9pt; background-color: transparent;&quot;&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;center&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5; text-align: center;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;구분&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;242&quot; style=&quot;margin: 0px; padding: 0cm 5.4pt; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-color: black black black rgb(236, 233, 216); font-family: dotum, sans-serif; width: 182px; height: 19.9pt; background-color: transparent;&quot;&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;center&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5; text-align: center;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹서버&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;242&quot; style=&quot;margin: 0px; padding: 0cm 5.4pt; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-width: 1pt; border-right-width: 1pt; border-bottom-width: 1pt; border-color: black black black rgb(236, 233, 216); font-family: dotum, sans-serif; width: 184px; height: 19.9pt; background-color: transparent;&quot;&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;center&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5; text-align: center;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; height: 138.65pt;&quot;&gt;&lt;td width=&quot;52&quot; style=&quot;margin: 0px; padding: 0cm 5.4pt; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-width: 1pt; border-bottom-width: 1pt; border-left-width: 1pt; border-color: rgb(236, 233, 216) black black; font-family: dotum, sans-serif; width: 39.05pt; height: 138.65pt; background-color: transparent;&quot;&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;center&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5; text-align: center;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;설명&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;242&quot; style=&quot;margin: 0px; padding: 0cm 5.4pt; border-right-style: solid; border-bottom-style: solid; border-right-width: 1pt; border-bottom-width: 1pt; border-color: rgb(236, 233, 216) black black rgb(236, 233, 216); font-family: dotum, sans-serif; width: 182px; height: 138.65pt; background-color: transparent;&quot;&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;left&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹브라우저&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;(Web Client)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에게 컨텐츠를 제공하는 서버이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;즉&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 정적인&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;HTML&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;이나&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;jpeg, gif&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;같은 이미지를&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;HTTP&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;프로토콜을 통해 웹 브라우저에 제공한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;.&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;left&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;최근에는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;웹서버에서도 내부 애플리케이션을 동작시킬 수 있는 컨테이너를 내장&lt;/span&gt;하고 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;&lt;td valign=&quot;top&quot; width=&quot;242&quot; style=&quot;margin: 0px; padding: 0cm 5.4pt; border-right-style: solid; border-bottom-style: solid; border-right-width: 1pt; border-bottom-width: 1pt; border-color: rgb(236, 233, 216) black black rgb(236, 233, 216); font-family: dotum, sans-serif; width: 184px; height: 138.65pt; background-color: transparent;&quot;&gt;&lt;p class=&quot;MsoListParagraph&quot; align=&quot;left&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;서버단에서 &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;애플리케이션을 동작할 수 있도록 지원&lt;/span&gt;한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;일반적으로 컨테이너라는 용어로 쓰인다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;초창기에는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;CGI,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그 이 후에는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;Servlet, ASP, JSP, ASP, PHP&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;등의 프로그램으로 사용되고 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  align=&quot;left&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); word-break: keep-all;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹 서버와&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS(Web Application Server)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 구성에 따른 분류&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;]&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;1.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;기본적인 웹 사이트 구성&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;imageblock center&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-align: center; clear: both;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/1216FA274A66995390&quot; width=&quot;315&quot; height=&quot;235&quot; alt=&quot;&quot; style=&quot;margin: 5px 0px; padding: 0px; border: 7px solid rgb(240, 240, 234); line-height: 1.5; max-width: 100%; height: auto;&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;p&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-family: '맑은 고딕'; font-size: 10pt;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(124, 124, 114); font-family: dotum, sans-serif; line-height: 18px;&quot;&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-family: dotum, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그림&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;1&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;은&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 웹 사이트의 가장 기본적인 구성 환경&lt;/span&gt;이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;모든 콘텐츠를 한 곳에 집중시켜 웹 서버와&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;WAS&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;의 역할을 동시에 수행&lt;/span&gt;한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;사용자가 많지 않거나&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 트래픽이 적을 때 효율적&lt;/span&gt;이며 간단한 구조로 개발 및 테스트 시스템 구성시 활용의 가치가 높다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 73pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -35pt;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;장점&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;사용자 증가에 따라 스위치 장비를 통해 로드 밸런싱을 수행하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;여러대의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;를 통해 지원이 가능하다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;필요시에 추가로&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;를 증설하는 구조&lt;/span&gt;라고 볼 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 73pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -35pt;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;단점&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;:&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; WAS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;가 정적인 데이터&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;(HTML/Image)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;의 처리와 동적인 데이터&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;웹 애플리케이션&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;의 처리를 동시에 수행하기 때문에 최적화 측면에선 바람직하지 않다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;또한 정적데이터의 입출력 처리를 위해 웹 애플리케이션의 수행을 방해할 수 있고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그 반대의 경우도 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;/p&gt;&lt;p  align=&quot;left&quot; style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); word-break: keep-all;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;2.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹 서버와&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;로 구성된 환경&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;v:shape id=&quot;그림_x0020_1&quot; alt=&quot;그림2 웹서버와 WAS로 구성된 환경.jpg&quot; type=&quot;#_x0000_t75&quot; o:spid=&quot;_x0000_i1027&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; visibility: visible; width: 240.75pt; height: 226.5pt;&quot;&gt;&lt;v:imagedata o:title=&quot;그림2 웹서버와 WAS로 구성된 환경&quot; src=&quot;file:///C:\DOCUME~1\TTA1\LOCALS~1\Temp\msohtmlclip1\01\clip_image003.jpg&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/v:imagedata&gt;&lt;/v:shape&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;imageblock center&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-align: center; clear: both;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/1415D8274A669970AA&quot; width=&quot;310&quot; height=&quot;292&quot; alt=&quot;&quot; style=&quot;margin: 5px 0px; padding: 0px; border: 7px solid rgb(240, 240, 234); line-height: 1.5; max-width: 100%; height: auto;&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;p&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-family: dotum, sans-serif;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span id=&quot;callbacknestround1tkotistorycom649819&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그림&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;2&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 웹 서버와&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 기능적 분류를 통해 효과적인 분산을 유도한 형태이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;정적인 데이터는 구조적으로 앞에 존재하는 웹 서버에서 처리하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;동적인 데이터는 뒷단의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;가 처리&lt;/span&gt;한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;사용자의 요청에 대해서 정적 데이터인&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;HTML&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;과 자바스크립트 파일&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;, CSS, Image&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;등을 앞단의 웹 서버에 위치시켜 처리함으로써&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;로 서비스 요청이 넘어가지 않게 한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;또한 웹 애플리케이션 서비스를 위치적으로 뒤편에 존재하는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에 넘겨줌으로써&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 웹 애플이케이션의 수행이 집중할 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹 서버 단에서 처리할 것과&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에게 넘겨질 것을 처리하는 방식은 웹 서버 단의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Configuration&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;을 통해 처리할 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;특정 확장자나 디렉토리 업무를&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;로 넘길지 여부는 웹 서버 단에서 처리한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;3.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;특정기능에 대한 서버를 별도로 두고 있는 환경&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;imageblock center&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-align: center; clear: both;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/151E47264A66998952&quot; width=&quot;307&quot; height=&quot;401&quot; alt=&quot;&quot; style=&quot;margin: 5px 0px; padding: 0px; border: 7px solid rgb(240, 240, 234); line-height: 1.5; max-width: 100%; height: auto;&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;v:shape id=&quot;그림_x0020_2&quot; alt=&quot;그림3 이미지 서버를 별도로 두고 있는 환경.jpg&quot; type=&quot;#_x0000_t75&quot; o:spid=&quot;_x0000_i1026&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; visibility: visible; width: 230.25pt; height: 300.75pt;&quot;&gt;&lt;v:imagedata o:title=&quot;그림3 이미지 서버를 별도로 두고 있는 환경&quot; src=&quot;file:///C:\DOCUME~1\TTA1\LOCALS~1\Temp\msohtmlclip1\01\clip_image004.jpg&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/v:imagedata&gt;&lt;/v:shape&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;점점 화려해지는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;UI&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;를 자랑하는 페이지들이 많아짐에 따라 이미지의 비중이 증가하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이런 이미지들이 전체 네트워크 비중의 상당부분을 차지한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;따라서 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;이미지 서버를 따로 구성해 네트워크 비중도 줄이면서 웹 서버와&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(9, 0, 255);&quot;&gt;WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;를 좀 더 효과적으로 사용할 수 있는 구조&lt;/span&gt;라 할 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;또는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;특정 콘텐츠에만 집중적인 요청을 받는 경우도 있다&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;예를 들어&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;대학 입시 때 경쟁률 조회는 상당히 많은 사용자에 의해 조회가 되고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;, Reload&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;또한 빈번하게 일어나므로 특정시간 간격으로&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;HTML&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;을 생성하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;페이지를 특정 서버에 위치시켜 적절하게 부하를 분산시켜 해결이 가능&lt;/span&gt;하다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;장점&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;다양한 환경에 대한 대처가 빠름&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;단점&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;구조를 정확하게 이해하지 않았을 경우에는 개발 및 테스트에 많은 시간이 쓰임&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;4.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;WAS&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;단을&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Logic&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;으로 구분하여 구성&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 56pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;imageblock center&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-align: center; clear: both;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/18473B284A66999C17&quot; width=&quot;307&quot; height=&quot;404&quot; alt=&quot;&quot; style=&quot;margin: 5px 0px; padding: 0px; border: 7px solid rgb(240, 240, 234); line-height: 1.5; max-width: 100%; height: auto;&quot;&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그림&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;4&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그림&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;2&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 변경된 형태이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; WAS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;단의 프로그램이 많은 비중을 차지하는 경우&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;, Presentation Logic&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;을 담당하는 프로그램과&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;Business Logic&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;을 담당하는 프로그램을 구분하는 구성이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;이런 구성은 특정 로직 부분의 부하에 따라 적절한 대응을 할 수 있으나 구조가 복잡해지는 단점이 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt; color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;[ WAS&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;b style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;관련 용어 정의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;]&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;1.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 서블릿&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Java Servlet)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바를 사용하여 웹페이지를 동적으로 생성하는 서버측 프로그램 혹은 그 사양을 말하며&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;흔히&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;“&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;서블릿&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;”&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이라고 한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 서블릿은&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java EE&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;사양의 일부분으로&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;주로 이 기능을 이용하여 쇼핑몰이나 온라인 뱅킹 등의 다양한 웹 시스템이 구현되고 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;비슷한 기술로는 펄 등을 이용한&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;CGI, PHP&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;를 아파치 웹 서버 프로세스에서 동작하게 하는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;mod_php,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;마이크로소프트사의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;IIS&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에서 동작하는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;ASP&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;등이 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;. CGI&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 요청이 있을 때마다 새로운 프로세스가 생성되어 응답하는 데 비해&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 서블릿은 외부 요청마다 프로세스보다 가벼운 쓰레드로써 응답하므로 보다 가볍다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;또한 자바 서블릿은 자바로 구현되므로 다양한 플랫폼에서 동작한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p  style=&quot;margin: 0cm 0cm 0pt 40pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -40pt;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;2.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;엔터프라이즈 자바빈즈&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Enterprise JavaBeans, EJB)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;EJB&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 기업환경의 시스템을 구현하기 위한 서버측 컴포넌트 모델이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;즉&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;, EJB&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 애플리케이션의 업무 로직을 가지고 있는 서버 애플리케이션이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;. EJB&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;사양은&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java EE&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 자바&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;API&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;중 하나로&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;주로 웹 시스템에서&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;JSP&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 화면 로직을 처리하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;, EJB&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 업무 로직을 처리한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;EJB&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 종류는 세션 빈&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Session Bean),&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;엔티티 빈&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Entity Bean),&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;메시지 구동 빈&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;(Message-driven Bean)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;3.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 메시지 서비스&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Java Message Service, JMS)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;JMS&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 자바 프로그램이 네트워크를 통해 데이터를 송수신하는 자바&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;API&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;4.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 가상 머신&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Java Virtual Machine, JVM)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;JVM&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;은&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 바이트코드 (아직 생성되지 않음)&quot; href=&quot;http://ko.wikipedia.org/w/index.php?title=%EC%9E%90%EB%B0%94_%EB%B0%94%EC%9D%B4%ED%8A%B8%EC%BD%94%EB%93%9C&amp;amp;action=edit&amp;amp;redlink=1&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;바이트코드&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;를 수행할 수 있는 환경이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 바이트코드는 주로&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 (프로그래밍 언어)&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;를 컴파일하여 생성하지만&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;다른 언어의 컴파일러에서도 생성할 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 가상 머신은 자바 플랫폼의 기반을 이루며 다양한 하드웨어 기반 플랫폼에 포팅된다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;. JVM&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;은&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 플랫폼&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_%ED%94%8C%EB%9E%AB%ED%8F%BC&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;플랫폼&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 주요한 부분이며&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;마이크로소프트 윈도(95/98/NT) (아직 생성되지 않음)&quot; href=&quot;http://ko.wikipedia.org/w/index.php?title=%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%86%8C%ED%94%84%ED%8A%B8_%EC%9C%88%EB%8F%84(95/98/NT)&amp;amp;action=edit&amp;amp;redlink=1&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;마이크로소프트&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;윈도(95/98/NT)&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;리눅스&quot; href=&quot;http://ko.wikipedia.org/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;리눅스&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;유닉스&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9C%A0%EB%8B%89%EC%8A%A4&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;유닉스&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;맥 오에스 텐&quot; href=&quot;http://ko.wikipedia.org/wiki/%EB%A7%A5_%EC%98%A4%EC%97%90%EC%8A%A4_%ED%85%90&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;맥&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;오에스&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;텐&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;등 대부분의&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;운영체제&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;운영체제&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 물론&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;인터넷 익스플로러와 넷스케이프 등과 같은 웹 브라우저 등 여러 가지 플랫폼에 설치되어 사용될 수 있으며&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;휴대전화나 가전기기에도 설치할 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;따라서 자바 플랫폼은 여러 플랫폼을 지원하여&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;미들웨어&quot; href=&quot;http://ko.wikipedia.org/wiki/%EB%AF%B8%EB%93%A4%EC%9B%A8%EC%96%B4&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;미들웨어&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;로서의 역할과 플랫폼 스스로의 역할을 동시에 수행할 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;사용자는 자바 바이트코드로 컴파일된 자바 프로그램을 실행시키기 위해서 이 자바 가상머신을 이용하면 된다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;원 개발사인 썬 마이크로시스템즈에서 자바 가상 머신의 기준이 되는 표준판&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;Java SE&quot; href=&quot;http://ko.wikipedia.org/wiki/Java_SE&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java SE&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;과 표준판을 핸드폰이나&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;PDA&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;등 임베디드 기기용인 축소판&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;Java ME&quot; href=&quot;http://ko.wikipedia.org/wiki/Java_ME&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java ME&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;으로 구분하여 가상 머신을 배포하고 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;기업판&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;Java EE&quot; href=&quot;http://ko.wikipedia.org/wiki/Java_EE&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java EE&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;)&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 경우에는 표준판의 자바 가상 머신을 기반으로 확장된 라이브러리 집합을 정의한 것이기 때문에 자바 가상 머신의 종류로 분류하기 애매하다&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;썬 마이크로시스템즈&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%8D%AC_%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%A6%88&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;썬&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;마이크로시스템즈&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에서 제공하는 자바 가상 머신 말고도 각 운영체제 개발사가 제공하는 자바 가상 머신이 있으며&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;, GNU&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;GCJ&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;나&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;아파치 소프트웨어 재단&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%95%84%ED%8C%8C%EC%B9%98_%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%EC%9E%AC%EB%8B%A8&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;아파치&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;소프트웨어&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;재단&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(ASF: Apache Software Foundation)&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;하모니 (아직 생성되지 않음)&quot; href=&quot;http://ko.wikipedia.org/w/index.php?title=%ED%95%98%EB%AA%A8%EB%8B%88&amp;amp;action=edit&amp;amp;redlink=1&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;하모니&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(Harmony)&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;와 같은 오픈 소스 자바 가상 머신도 존재한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이러한 공개 소프트웨어 단체의 움직임에 따라 썬 마이크로시스템즈에서도 자사의 자바 가상 머신 및 개발 도구 킷을 오픈 소스 정책에 맞추어 공개한 상황이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;5.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;힙 메모리&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(heap memory)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(51, 51, 51);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;프로그램을 사용할 수 있는 자유&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://terms.naver.com/search.naver?mode=all&amp;amp;query=%B8%DE%B8%F0%B8%AE&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(69, 138, 8);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;메모리&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://terms.naver.com/item.nhn?dirId=2&amp;amp;docId=18701&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(69, 138, 8);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;프로그램&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(69, 138, 8);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(69, 138, 8);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;실행&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;시에 함수로 보내는 데이터 등을 일시적으로 보관해 두는 소량의 메모리와 필요시 언제나 사용할 수 있는 대량의 메모리가 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이때&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;소량의 메모리를&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;스택&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;’&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이라 하고 대량의 메모리를&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;힙&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;’&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이라 한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;힙&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;’&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이 없어지면 메모리 부족으로&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;‘&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이상 종료&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;’&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;하게 된다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(51, 51, 51);&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;6.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 서버 페이지&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(JavaServer Pages, JSP)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;HTML&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;내에&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 (프로그래밍 언어)&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;코드를 삽입하여&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;웹 서버&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9B%B9_%EC%84%9C%EB%B2%84&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;웹&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;서버&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에서 동적으로 웹 페이지를 생성하여&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;웹 브라우저&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9B%B9_%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;웹&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;브라우저&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에 돌려주는 언어이다&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;Java EE&quot; href=&quot;http://ko.wikipedia.org/wiki/Java_EE&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java EE&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;스펙 중 일부로&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;웹 애플리케이션 서버&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9B%B9_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98_%EC%84%9C%EB%B2%84&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;웹&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;애플리케이션&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;서버&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에서 동작한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바 서버 페이지는 실행시에는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 서블릿&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_%EC%84%9C%EB%B8%94%EB%A6%BF&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;font color=&quot;#800080&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;서블릿&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;으로 변환된 후 실행되므로 서블릿과 거의 유사하다고 볼 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;하지만&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;서블릿과는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;HTML&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;표준에 따라 작성되므로 웹 디자인하기에 편리하다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이와 비슷한 구조인 것인&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;PHP&quot; href=&quot;http://ko.wikipedia.org/wiki/PHP&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;PHP&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;ASP&quot; href=&quot;http://ko.wikipedia.org/wiki/ASP&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;ASP&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;ASP.NET (아직 생성되지 않음)&quot; href=&quot;http://ko.wikipedia.org/w/index.php?title=ASP.NET&amp;amp;action=edit&amp;amp;redlink=1&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; color: rgb(204, 34, 0); font-size: 8pt;&quot;&gt;ASP.NET&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;등도 있다&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;a title=&quot;아파치 스트럿츠&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%95%84%ED%8C%8C%EC%B9%98_%EC%8A%A4%ED%8A%B8%EB%9F%BF%EC%B8%A0&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;아파치&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;스트럿츠&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;나&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자카르타 프로젝트&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EC%B9%B4%EB%A5%B4%ED%83%80_%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자카르타&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;프로젝트&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;JSTL&quot; href=&quot;http://ko.wikipedia.org/wiki/JSTL&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;JSTL&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;등의&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;JSP&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;태그 라이브러리를 사용하는 경우에는 자바 코딩없이 태그만으로 간략히 기술이 가능하므로 생산성을 높일 수 있다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;클라이언트에서 서비스가 요청되면&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;, JSP&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 실행을 요구하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;, JSP&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;웹 애플리케이션 서버&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9B%B9_%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98_%EC%84%9C%EB%B2%84&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;웹&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;애플리케이션&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;서버&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;의 서블릿 컨테이너에서 서블릿 원시코드로 변환된다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;그 후에 서블릿 원시코드는 바로 컴파일된 후 실행되어 결과를&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;HTML&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;형태로 클라이언트에 돌려준다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;7.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java Database Connectivity(JDBC)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 (프로그래밍 언어)&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;자바&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에서&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;데이터베이스&quot; href=&quot;http://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;데이터베이스&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에 접속할 수 있도록 하는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 API&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_API&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바 API&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;. JDBC&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 데이터베이스에서 자료를 쿼리하거나 업데이트하는 방법을 제공한다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;. JDBC&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;로 작성된 프로그램을&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;일반&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;데이터베이스&quot; href=&quot;http://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;데이터베이스&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에 연결하기 위한 응용프로그램 인터페이스 규격입니다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이 응용프로그램 인터페이스는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;데이터베이스 관리 시스템&quot; href=&quot;http://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4_%EA%B4%80%EB%A6%AC_%EC%8B%9C%EC%8A%A4%ED%85%9C&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;데이터베이스&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;관리&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;시스템&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;에 넘겨질&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;SQL&quot; href=&quot;http://ko.wikipedia.org/wiki/SQL&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;SQL&lt;/span&gt;&lt;/a&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;형태의 데이터베이스 접근요구 문장을&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;각 시스템에 맞도록 바꾸어준다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;. API&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;는 동적으로 올바른&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;패키지를 로드하고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;, JDBC&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;드라이버 매니저에 등록하기 위한 메커니즘을 제공합니다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;드라이버 매니저가&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;, JDBC connection&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;을 생성하기 위한&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;connection factory&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;로서 사용됩니다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;8.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java Management eXtensions(JMX)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;응용 프로그램 소프트웨어&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;객체&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;장치&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;프린터 등&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;및 서비스 지향 네트워크 등을 감시 관리를 위한 도구를 제공하기 위한&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;a title=&quot;자바 API&quot; href=&quot;http://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_API&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; text-decoration: underline; color: rgb(162, 195, 73);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;자바 API&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이러한 리소스는&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;MBean(Managed Bean)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이라는 객체로 표현된다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114); text-indent: -18pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;9.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: normal; font-family: 'Times New Roman'; font-stretch: normal; font-size: 7pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;Java Naming and Directory Interface(JNDI)&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;v:shape id=&quot;그림_x0020_3&quot; alt=&quot;그림4 WAS단을 Logic으로 구분하여 구성.jpg&quot; type=&quot;#_x0000_t75&quot; o:spid=&quot;_x0000_i1025&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; visibility: visible; width: 230.25pt; height: 303pt;&quot;&gt;&lt;v:imagedata o:title=&quot;그림4 WAS단을 Logic으로 구분하여 구성&quot; src=&quot;file:///C:\DOCUME~1\TTA1\LOCALS~1\Temp\msohtmlclip1\01\clip_image005.jpg&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/v:imagedata&gt;&lt;/v:shape&gt;&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;MsoListParagraph&quot; style=&quot;margin: 0cm 0cm 0pt 38pt; padding: 0px; border: none; line-height: 18px; font-family: dotum, sans-serif; color: rgb(124, 124, 114);&quot;&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;디렉터리 서비스에서 제공하는 데이터 및 객체를 발견&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;(discover)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;하고 참고&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;(lookup)&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;하기 위한 자바&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5; font-size: 8pt;&quot;&gt;API&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이다&lt;/span&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;.&lt;/span&gt;&lt;o:p style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font size=&quot;2&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;font style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;span  style=&quot;margin: 0px; padding: 0px; border: none; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/232</guid>
<comments>https://genesis8.tistory.com/232#entry232comment</comments>
<pubDate>Sun, 14 Feb 2016 13:36:08 +0900</pubDate>
</item>
<item>
<title>웹 프로그래밍 기초</title>
<link>https://genesis8.tistory.com/231</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처 :&amp;nbsp;&lt;/p&gt;&lt;p&gt;http://webcache.googleusercontent.com/search?q=cache:http://kbp.kongju.ac.kr/cg_edu/cnu/web_server_basic.htm&amp;amp;gws_rd=cr&amp;amp;ei=7fK_Vu-JJqiHmgWGq43oAg&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;http://j2enty.tistory.com/entry/JSP-Chapter1-%EC%9B%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EA%B8%B0%EC%B4%88-2&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 바탕; font-size: 14pt; text-align: center; line-height: 29.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 14pt; line-height: 22.4pt; letter-spacing: 0pt;&quot;&gt;&lt;strong&gt;&lt;font color=&quot;#990000&quot;&gt;&amp;nbsp;웹 서 버&amp;nbsp;&amp;nbsp; 구 축 을&amp;nbsp;&amp;nbsp; 위 한&amp;nbsp;&amp;nbsp; 기 초&lt;/font&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 바탕; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-family: 굴림; font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;a name=&quot;#4570a9a1&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; line-height: 12.8pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;strong&gt;웹서버(web Server)란&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&amp;nbsp;: &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹서버&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;는&lt;/span&gt; 간단히 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹을 서비스하는 컴퓨터&lt;/span&gt;라고 할 수 있다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹페이지는 HTML이므로 웹서버는 &quot;HTML파일들을 모아놓고 서비스하는 컴퓨터&quot;&lt;/span&gt;라고 할 수도 있다.&amp;nbsp; 모든 컴퓨터는 서버가 될 수 있으므로 웹 서버가 될 수도 있지만, 어떤 컴퓨터를 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;웹 서버로 만드려면 먼저 웹 서버 프로그램을 설치해야 한다. 웹 서버 프로그램으로는 PWS, IIS, 아파치 등이 있다&lt;/span&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;strong&gt;웹 클라이언트(Web Client)란&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&amp;nbsp;: 서버와는 상대되는 개념으로 클라이언트는 어떤 서비스를 요청하는 역할을 하게 된다. 그러므로&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 웹 클라이언트는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; &quot;웹 서버에 자료를 요청하기 위해 &quot;HTTP&quot;를 사용하는 클라이언트 프로그램&quot;&lt;/span&gt;이라고 할 수 있다.&amp;nbsp;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;웹 페이지를 요청하는 것도 클라이언트라고 할 수 있다. 그런데 웹 페이지 요청은 대부분 웹 브라우저가 하게 된다. 그러므로 일반적으로 웹 클라이언트를 웹 브라우저라고 일컫기도 한다.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;strong&gt;서버 사이드(server Side)란&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&amp;nbsp;: &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;서버사이드(Sever-Side)란&lt;/span&gt; 간단히 &quot;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹 서버측에서 하는 작업들&lt;/span&gt;&quot;이라고 말할 수 있다.&amp;nbsp; 여기서 말하는 작업이란 구체적으로 웹&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 브라우저(클라이언트)에서 넘어온 자료를 데이터베이스에 저장 한다든지, 어떤 수학적인 계산을 하여 결과를 만들어 낸다든지 하는 것&lt;/span&gt;을 말한다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;이런 작업을 담당하는 것이 웹 프로그램이다. 웹 프로그램의 종류는 PHP, ASP, Perl, Python등&lt;/span&gt;이 많이 쓰인다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;strong&gt;클라이언트 사이드(Client Side)란&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&amp;nbsp;: &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;웹 브라우저(&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;클라이언트 사이드&lt;/span&gt;)를 사용하면 서버의 작업량을 줄일 수 있다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;서버가 작업해야 할 부분중에서 클라이언트가 할 수 있는 작업을 스스로 처리&lt;/span&gt;하기 때문에 서버의 작업량을 줄여줄 수 있어 효율적&lt;/span&gt;이다. 이렇게 &quot;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;클라이언트 스스로 일을 처리할 수 있도록 하여 서버의 효율성을 높일 수 있도록 하는 것&quot;이 클라이언트 사이드 언어&lt;/span&gt;이다.&amp;nbsp; 클라이언트 사이드 언어로는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;자바스크립트(Java Script)와 이외의 대부분의 스크립트 언어&lt;/span&gt;가 있다. 플래시 액션(Action) 스크립트도 클라이언트 사이드 언어라고 할 수 있다. 이런 스크립트 언어는 웹 서버에서 웹 브라우저로 전송된 후 실행된다.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;■ 계열별 웹서버의 종류&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- Windows : IIS, PWS, httpds, NCSA httpd For Windows, SerWeb, Web4Ham&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- Unix, Linux : Apache, CERN httpd, NCSA httpd, EIT httpd, GN Gopher/http, Plexus perl server, WebWorks Enterprise server,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;a name=&quot;#45714249&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;Netsite Communication Server and Netsite Commercial Server&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- Mac : MacHTTP&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- NETWare : httpd nlm&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;■ 각 계열별 대표적인 웹서버&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- Windows 계열 : IIS(Internet Information Services)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt 0pt 0pt 7.48pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;NT급에서 기본적으로 지원되는 웹서버로 ASP(Active Server Page)라는 개발 언어를 지원한다. 1995년 말 윈도우 NT용 웹서버로 출시 되었으며 윈도우 4.0이 출시되면서 IIS 2.0을 기본적으로 탑재 하였지만 얼마 후 ASP기술이 나오면서 IIS3.0이 새로 출시되었다. 윈도우 NT에서 IIS3.0이상 버전을 설치하기 위해서 별도의 OPTION PACK과 SERVICE PACK을 설치해 주어야 한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt 0pt 0pt 7.48pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;Windows 2000서버 및 Windows XP Pro에는 IIS 5.0이 포함되어있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- Unix, Linux 계열 : Apache, NCSA&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt 0pt 0pt 7.48pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;아파치 프로젝트의 시작은 처음 1995년경 대중의 사랑을 받던 NCSA의 개발자중 일부가 모여 시작 했습니다. 이것을 시발로 NCSA HTTPD 개발자와 아파치 개발자들이 합류되고 이전에 만들어졌던 아파치 0.6.2를 완전히 개선한 0.8.8을, 그리고 아파치 1.0을 1995년10월에 만들어 냈습니다. 현재(2000년기준)는 60%이상의 사용자를 확보 하고 있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;■ 웹서버 구축에 필요한 것들 (PHP, APACHE, MySQL)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- PHP(Professional HyperText Preprocessor) : 서버에서 해석되는 HTML에 내장되어 동작하는 스크립트 언어이다.&amp;nbsp; C, Java, Perl 등에서 많은 문장 형식을 빌려왔으며 웹 브라우저 등으로 실제 코드를 볼 수 없다는 것에 보안상 유리한 점도 있습니다. PHP와 ASP는 근본적으로 서버용 객체 지향적인 스크립트 언어라는 점에서 같지만, ASP의 경우 IIS, PWS와 같은 윈도우 환경에서 움직이는 서버를 지원하는데 반해 PHP는 Apache, IIS, PWS, 서버 등과 유닉스 윈도우 환경에서 움직이는 모든 서버를 지원합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- APACHE : 대중의 힘을 바탕으로 가장 큰 인지도를 얻을 만큼 사용자가 이끌어 가는 무료 웹 서버입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 13.8667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 10.4pt; letter-spacing: 0pt;&quot;&gt;- MySQL : 무료 데이터베이스(DB)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;span style=&quot;font-size: 8pt; line-height: 12.8pt; letter-spacing: 0pt;&quot;&gt;&lt;a name=&quot;#4570a9a2&quot;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 0.5; margin: 0pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 0.5; margin: 0pt;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 18pt; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;웹 프로그래밍 기&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;초&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 14pt; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 18.6667px; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;1. 웹 어플리케이션과 웹 프로그래밍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.웹 어플리케이션 : 웹을 기반으로 실행되는 어플리케이션&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;-.일반적으로 웹 브라우저에 기능을 요청하고 요청을 받은 웹 어플리케이션은 요청한 기능에 알맞은 결과 화면을 생성해서 웹 &amp;nbsp; 브라우저에 전송한다. 일반적으로 웹 브라우저가 요청한 기능을 제공하기 위해서는&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-stretch: inherit; line-height: 26px; font-size: 8pt; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;웹 서버, 어플리케이션 서버, 데이터 &amp;nbsp; 베이스&lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;와 같은 구성요소들을 필요로 한다.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-bottom: 13px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; max-width: 100%; display: inline-block; width: 683px; height: auto; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/135C06374E646DB21F&quot; width=&quot;683&quot; height=&quot;164&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; max-width: 100%; height: auto; width: 940px; cursor: pointer; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-bottom: 13px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-bottom: 13px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;box-sizing: border-box; outline: none; margin: 0px; padding: 10px; border: 1px solid rgb(238, 238, 238); font-stretch: inherit; line-height: 26px; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important; background-color: rgb(238, 238, 238);&quot;&gt;&lt;p style=&quot;font-family: 'Open Sans'; font-size: 1rem; box-sizing: border-box; outline: none; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: 1.625em; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹 서버&lt;/span&gt; : &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹 브라우저의 요청을 받아 알맞은 결과를 웹 브라우저에 전송&lt;/span&gt;한다. 만약 프로그램의 처리가 필요하다면 어플리케이션 서버를 사용하거나 프로그램을 직접 호출하여 결과를 생성한다. 주로 정적인 HTML, CSS, 이미지 자바 스크립트를 웹 브라우저에 제공할 때 웹 서버가 사용된다. (아파치)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: 1.625em; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;font face=&quot;Open Sans&quot;&gt;&lt;span style=&quot;font-size: 10.6667px;&quot;&gt;// IIS 등.&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-family: 'Open Sans'; font-size: 8pt;&quot;&gt;-.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;어플리케이션 서버&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;(WAS)&lt;/span&gt;: 게시글 목록, 로그인 처리와 같은 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;기능을 실행(처리)하고 그 결과를 응답으로 웹 서버에 전달&lt;/span&gt;한다.&lt;/span&gt;&lt;span style=&quot;font-family: 'Open Sans'; font-size: 8pt;&quot;&gt;&amp;nbsp; (톰캣, 웹로직, JBoss 등) // ASP 등이 포함됨&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-family: 'Open Sans'; font-size: 8pt;&quot;&gt;-.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;데이터베이스 &lt;/span&gt;: 웹 어플리케이션이 필요로 하는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;데이터를 저장&lt;/span&gt;한다. (오라클, MySQL, MS-SQL 등)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-family: 'Open Sans'; font-size: 8pt;&quot;&gt;-.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹 브라우저&lt;/span&gt; : 웹 서버에 서비스 실행을 요청하며 웹 서버의 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;처리 결과를 사용자에게 보여준다&lt;/span&gt;. (익스플로러, 크롬 등)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;어플리케이션 서버도 웹 서버와 마찬가지로 정적인 HTML, CSS 등을 제공할 수 있다.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;하지만 웹 서버에서 정적인 HTML, 이미지 등을 제공하고 어플리케이션 서버가 프로그램을 제공하는 이유는 성능 때문이다&lt;/span&gt;. 일반적으로 아파치와 같은 웹 서버는 정적인 HTML, CSS를 제공하는데 초점이 맞춰져 있고, 톰캣이나 웹 로직과 같은 어플리케이션 서버는 JSP, 서블릿과 같은 프로그램을 실행하여 결과를 제공하는 데 초점이 맞춰저 있기 때문이다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 12pt; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;1.1 CGI방식과 어플리케이션 서버 방식&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-. 웹 어플리케이션은 웹 브라우저의 요청을 알맞게 처리하고 그에 대한 결과를 웹 브라우저에 전달한다. 웹 어플리케이&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;션이 실행되는 과정은 아래의 그림과 같다. (요청-처리-응답)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-bottom: 13px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; max-width: 100%; display: inline-block; width: 683px; height: auto; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2030643A4E646DC017&quot; width=&quot;683&quot; height=&quot;464&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; max-width: 100%; height: auto; width: 940px; cursor: pointer; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin-right: 0px; margin-bottom: 13px; margin-left: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 1rem; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;위 그림의 2번에서 웹 서버는 웹 어플리케이션 프로그램을 사용해서 우베 브라우저의 요청을 처리한다. 이 때 웹 서버가 웹 어플리케이션을 실행하는 방식에 따라서 CGI방식, 어플리케이션 서버 방식으로 동작방식을 구분할 수 있다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;(Common Gateway Interface, CGI : 웹 서버와 프로그램 사이에 정보를 주고받는 규칙을 의미.&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;흔히 CGI 프로그래밍이라고 하면 Perl, C/C++언어 등을 사용하여 웹 서버를 통해서 실행할 수 있는 프로그램을 의미한다.)&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span id=&quot;callbacknestj2entytistorycom653463&quot; style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; width: 1px; height: 1px; float: right; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;CGI 방식과 어플리케이션 서버 방식간의 차이점&lt;/span&gt;은 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;웹 서버가 직접 프로그램을 호울하는지의 여부&lt;/span&gt;에 있다. 먼저 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;CGI방식은 웹 서버가 어플리케이션을 호출하는 구조&lt;/span&gt;를 갖는다. 이에 반해 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;어플리케이션 서버 방식은 웹 서버가 직접 프로그램을 호출하기보다는 웹 어플리케이션 서버를 통해서 간접적으로 어플리케이션 프로그램을 실행&lt;/span&gt;한다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;접속자가 많은 서비스의 경우 CGI방식보다 어플리케이션 서버 방식의 성능이 좋게 나타난다. &lt;/span&gt;그 이유는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;CGI방식의 경우에는 요청 받은 기능이 같은 프로그램을 실행하는 경우라 하더라도 요청이 발생하는 숫자만큼 프로그램을 실행하기 때문에 메모리를 많이 차지하게 된다.&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;반면에 어플리케이션 서버방식의 경우에는 동시에 여러 웹 브라우저가 동일한 프로그램을 요청하더라도 한 개에 해당하는 메모리만 사용하기 때문에 전체적으로 사용하는 메모리가 적다.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 12pt; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;1.2 스크립트 방식과 실행 코드 방식&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;웹 어플리케이션 프로그래밍은 구현하는 방식에 따라 실행 코드 방식과 스크립트 방식으로 구분할 수 있다.&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;table width=&quot;673&quot; bgcolor=&quot;#ffffff&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px 0px 20px; padding: 0px; border: 1px solid rgb(229, 229, 229); font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px; width: 940px; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;tbody style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 17.6px; vertical-align: baseline;&quot;&gt;&lt;tr style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 17.6px; vertical-align: baseline;&quot;&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;비교 항목&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;실행 코드 방식&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;스크립트 방식&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 17.6px; vertical-align: baseline;&quot;&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;코드 형태&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;컴파일 된 실행 프로그램&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;컴파일 되지 않은 스크립트 코드&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 17.6px; vertical-align: baseline;&quot;&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;실행 방식&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;컴파일 된 기계어 코드 직접 실행&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;스크립트 코드를 해석한 뒤 실행&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 17.6px; vertical-align: baseline;&quot;&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;코드 변경&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;소스 코드를 다시 컴파일 해야 함&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;스크립트 코드만 고치면 됨&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 17.6px; vertical-align: baseline;&quot;&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; text-align: center; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;종류&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;C기반 CGI 프로그램&lt;/span&gt;&lt;/td&gt;&lt;td width=&quot;33%&quot; style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 10px; border: 1px solid rgb(218, 218, 218); font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: inherit; font-size: 16px; vertical-align: top; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;JSP, ASP.net, PHP, Ruby ...&amp;nbsp;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 10px; border: 1px solid rgb(238, 238, 238); font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important; background-color: rgb(238, 238, 238);&quot;&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: 'Open Sans'; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: 1.625em; font-size: 1rem; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.스크립트 코드의 번역은 최초 요청에 대해서 한 번만 발생하며, 이후의 요청에 대해서는 번역 과정 없이 앞서 번역된 코드를 실행하도록 함으로써 번역 횟수를 최소화한다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.실행코드 방식의 경우 일반적으로 CGI방식이고 스크립트 코드 방식인 JSP나 ASP는 어플리케이션 서버 방식이기 때문에 전체 처리량에서는 JSP/ASP 기반의 스크립트 코드 방식이 앞선다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.기술의 발달로 스크립트 언어를 번역한 코드가 일반 프로그램과 동일한 수준의 성능을 제공하고 있다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 27px; font-size: 19px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;2. URL과 웹 어플리케이션 주소&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.사이트에 연결할 때 다음과 같은 형식의 주소를 웹 브라우저에 입력한다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp; 이 주소는 자원을 구분할 때 사용되는 문자열로서 이런 문자열을&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; URL(Uniform Resource Locator)라&lt;/span&gt;고 부른다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 10px; border: 1px solid rgb(247, 247, 247); font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: 'Open Sans'; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: 1.625em; font-size: 1rem; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;http://java.sun.com/javase/6/docs/api./index.html&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;[프로토콜]://[호스트][:포트][경로][파일명][.확장자][쿼리문자열]&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.프로토콜 : 서버와 클라이언터의 통신 규약(http. https)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.호스트 : 클라이언트가 접속할 서버 주소&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.포트 : 서버와 클라이언트가 통신할 때 사용할 포트. 일반적으로 입력하지 않으며 입력하지 않을 경우 기본포트(80)이 사용&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.[경로][파일명][.확장자] : 서버에서 가져올 자원의 위치를 입력하낟.&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.[쿼리문자열] : 주소 뒤에 붙는 정보로 '파라메터'라고 불리는 데이터를 웹 어플리케이션에 전달할 때 사용된다. [쿼리문자열]은 물음표(?)를 이용하여 경로 부분과 구분되며 1개이상의 파라메터 이름과 값을 같는다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 27px; font-size: 19px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;3. 자바와 웹 프로그래밍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-stretch: inherit; line-height: 26px; font-size: 12pt; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;3.1 서블릿과 JSP&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.서블릿 : 자바를 개발한 Sun에서 웹 개발을 위해 만든 표준, 이러한 서블릿 규약에 따라 만든 클래스를 서블릿 이라 부름&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.서블릿을 만들기 위해선 자바 코드를 작성하고 컴파일 하여 클래스 파일을 만들게 된다.(앞서 말한 실행코드 방식) 이런 방식은 데이터를 조금만 바꾸고 싶어도 코드를 수정하고 컴파일하고 클래스를 알맞는 곳에 복사해줘야 하는 작업을 해야한다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.JSP : 위와 같은 서블릿의 단점을 보완하여 만든 스크립트 방식의 표준&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.JSP는 서블릿 표준을 기반으로 만들어졌다. 때문에 내부적으로 JSP파일이 변역되면 최종 결과물로 서블릿이 만들어진다.&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 12pt; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;3.2 JSP (JavaServer Pages) 란?&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.자바 언어를 기반으로 하는 스크립트 언어로 자바가 제공하는 기능을 그대로 사용 할 수 있다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.HTTP와 같은 프로토콜에 따라 클라이언트의 요청을 처리하고 응답한다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.HTML, XML등 클라이언트가 요청한 문서를 생성하는 데 주로 사용된다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.서블릿/EJB등의 엔터프라이즈 기술들과 잘 융합된다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.표현언어, 표현식, 스크립트릿 등 다양한 스크립트 요소와 액션 태그 등을 제공함으로써 보다 쉽게 웹 어플리케이션을 프로그래밍 할 수 있도록 도와준다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 12pt; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;3.3 웹 컨테이너(Web Container)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;-.웹 컨테이너 : 이름 그대로 웹 어플리케이션을 실행 할 수 있는 컨테이너.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; font-size: 8pt; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 10px; border: 1px solid rgb(238, 238, 238); font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important; background-color: rgb(238, 238, 238);&quot;&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: 'Open Sans'; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: 1.625em; font-size: 1rem; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important; font-size: 8pt;&quot;&gt;JSP 컨테이너 + 서블릿 컨테이너 = 웹 컨테이너&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;현재 서블릿 규약의 버전은 2.5이고, JSP 규약 버전은 2.1이다. 이 두 규약의 버전 차이에서 알 수 있듯이 서블릿 규익이 먼저 발표되고 그 후 JSP규익이 발표되었다. 처음 서블릿 규약이 발표되었을 때는 JSP가 존재 하지 않았기 때문에&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;서블릿이 실행 가능한 서버를&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important; font-size: 8pt;&quot;&gt;서블릿 컨테이너&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;라고 불렀으며 이후 JSP 규약이 발표될 때는 서블릿과 구분하는 의미에서&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;JSP가 실행 가능한 서버를&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important; font-size: 8pt;&quot;&gt;JSP 컨테이너&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;라고 불렀다. 하지마 이 후 거의 모든 엔진이 서블릿과 JSP를 동시에 지우너하면서 이 두 컨테이너를 구분하는게 무의미 해졌으며,&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;이 후 부터는 서블릿 컨테이너와 JSP 컨테이너를&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important; font-size: 8pt;&quot;&gt;웹 컨테이너&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;라고 부르기 시작했다.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 0px; border: 0px; font-weight: inherit; font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 12pt; vertical-align: baseline;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; outline: none; font-family: inherit; margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height: inherit; font-size: 8pt; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;3.4 JSP를 사용하는 이유&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; margin: 0px; padding: 10px; border: 1px solid rgb(238, 238, 238); font-stretch: inherit; line-height: 26px; font-size: 17.6px; vertical-align: baseline; color: rgb(34, 34, 34); -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important; background-color: rgb(238, 238, 238);&quot;&gt;&lt;p style=&quot;box-sizing: border-box; outline: none; font-family: 'Open Sans'; margin-right: 0px; margin-left: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; line-height: 1.625em; font-size: 1rem; vertical-align: baseline; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.자바 언어를 기반으로 하고 있기 때문에 플랫폼에 상관없이 사용할 수 있다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.자바 언어에 대한 깊은 이해가 없더라도 빠르게 배울 수 있다.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; -webkit-font-smoothing: subpixel-antialiased !important; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif !important;&quot;&gt;&lt;span style=&quot;font-size: 8pt;&quot;&gt;-.대규모 어플리케이션을 구현 할 때 사용되는 스프링, 스트럿츠와 같은 프레임워크와 완벽하게 연동되며, 금융권에서 많이 사용하는 EJB기술과도 완벽하게 연동된다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box; outline: none; font-family: Lato, entypo, '맑은 고딕', 'malgun gothic', AppleGothicNeoSD, 'Apple SD 산돌고딕 Neo', sans-serif; color: rgb(34, 34, 34); font-size: 17.6px; line-height: 26px; text-align: start; -webkit-text-stroke-width: 0.3px; -webkit-font-smoothing: subpixel-antialiased !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 0pt; font-family: 굴림; font-size: 8pt; text-align: justify; line-height: 17.0667px; margin: 0pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/231</guid>
<comments>https://genesis8.tistory.com/231#entry231comment</comments>
<pubDate>Sun, 14 Feb 2016 12:24:43 +0900</pubDate>
</item>
<item>
<title>스트림(Stream)이란</title>
<link>https://genesis8.tistory.com/230</link>
<description>&lt;p&gt;http://chaoxifer.tistory.com/82&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Ubuntu Condensed', 'Noto Sans Korean'; font-size: 15px; line-height: 1.5;&quot;&gt;&lt;span class=&quot;submitted&quot; style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; line-height: 15.6px; font-size: 12pt;&quot;&gt;2003/12/28 일 - 2:38am — _김영진&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;저도 스트림에 대해 그다지 알고 있다는 생각은 들지 않지만 그래도 전혀 모르는 미로인을 위해 약간 적어 보려고 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;프로그램을 실행 할때 키보드를 통해서 입력을 하고, 모니터를 통해서 출력을 하고 있죠? 우리는 별다른 무리 없이 간단하게 입출력을 합니다. 생각을 해보면 키보드에서 입력을 받고, 하드웨어적인 부분을 처리하여야 입력이 되고 화면으로 출력이 되겠죠? 예로 A라는 문자를 눌렀다고 가정해 봅시다. 그러면 키보드에서 신호가 나갈것이고, 그것을 컴퓨터에서 처리하여, 출력 장치인 모니터로 신호를 보내 결과적으로 화면에 A라는 문자가 찍힐것입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;span id=&quot;callbacknestchaoxifertistorycom828980&quot; style=&quot;box-sizing: border-box; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;그러나, 우리는 이렇게 하드웨어적인 세세한 부분까지 신경을 쓰지는 않습니다. 입출력을 도와주는 스트림( Stream )이란 녀석이 있기 때문이죠.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;스트림을 사용하는 입출력 장치( Input/Output Device )는 많죠. 조금 전 예로든 키보드나 모니터 뿐만 아니라 파일, 프린터, 마우스, 네트워크, 메모리 등등 많은 입출력 장치에서 쓰입니다. 물론 스트림의 종류도 입출력 장치의 종류만큼 다양합니다. 파일에 데이터를 쓰고 싶다고 한다면 파일관련 스트림을 찾아서 목표지점으로 삼을 것입니다. 목표지점이란 입력 스트림의 경우 입력받을 데이터가 위치 하는 곳을 말하고, 출력 스트림의 경우 데이터가 저장될 곳을 말합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;입출력 장치에 데이터를 입력하거나 출력하는 처리를 하기 위해 스트림이 존재 한다고 했었습니다. 스트림은 방향에 따라 2가지로 나눌수 있는데, 사용자의 입장에서 데이터가 들어오면 입력 스트림( input Stream )이고, 데이터가 나가면 출력 스트림( Output Stream )이 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;입력 스트림은 데이터를 스트림으로 읽어 들입니다. 그리고 스트림에 존재하는 데이터를 하나하나 읽어들입니다. 예를 들어봅시다. 음료수가 있고, 거기에 빨대가 꽂혀 있네요. 빨대에 입을 갖다대고 쭉 빨아 당기면 음료수가 빨대에 모이게 되고, 계속 빨아 당기면 입안으로 음료수가 들어오게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;출력 스트림은 출력될 데이터를 스트림으로 보냅니다. 그리고 스트림에 있는 데이터를 비워 버립니다. 비워진 데이터는 모두 목표지점에 저장이 되는 것 입니다. 위와 같은 예를 들자면, 입안에 들어 있던 음료수를 빨대로 보냅니다. 빨대로 가겠죠? 빨대에 있던 음료수를 불어 버립니다. (fflush) 음료수가 다시 음료수 통으로 들어 갑니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt;&quot;&gt;정리를 해보자면, 스트림은 데이터의 입출력 처리의 중간자 역할을 합니다. 데이터의 목표지점은&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt; line-height: 15.6px;&quot;&gt;중요치 않습니다. 네트워크건 메모리건 프린터건 전혀 상관이 없습니다. 그저 해당되는 데이터를 스트림으로 읽어 들이거나 스트림으로 내보내면 끝인 것 입니다. 하드웨어적인 복잡한 작업은 스트림이 알아서 해주고 사용자는 편하게 사용만 하면 되는 것입니다&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 15px; font-stretch: normal; font-family: 굴림; margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.5;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: Dotum, 돋움; font-size: 12pt; line-height: 15.6px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처&lt;/p&gt;&lt;p&gt;http://www.ktword.co.kr/abbr_view.php?m_temp1=1311&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre&gt;&lt;p style=&quot;font-size: 13px; line-height: 26px;&quot;&gt;&lt;b&gt;1. 스트림(Stream) 이란?&lt;/b&gt;

  ㅇ&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;일반적으로 데이터,&lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=421&amp;amp;id=484&quot; title=&quot; 패킷 ㅇ 데이타(정보)를 일정 크기로 자른 것   - 통상 헤더, 데이타, 트레일러로 구성 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;패킷&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;,&lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3823&amp;amp;id=122&quot; title=&quot; 컴퓨터(디지털시스템)에서 수 표현 단위 ㅇ Digit (숫자)   - 아라비아 숫자(0~9)    . 기수법에서 매 자리 마다 쓰여질 수 있는 숫자   * 한편, 숫자 및 문자 등을 모두 포함하는 경우에는 `알파벳`이라고 칭함 ㅇ Bit (Binary Digit, 비트)   - &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;비트&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 등의&lt;/span&gt; 일련의 연속성을 갖는 흐름&lt;/span&gt;을 의미
     - 음성,영상,데이터 등의 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;작은 조각들이 하나의 줄기를 이루며 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=689&amp;amp;id=251&quot; title=&quot; 전송 이란? ㅇ 요구되는 정보 신호를 전송매체를 통해 공간의 한 점에서 다른 점으로 전달하는 기능 ㅇ 단말 및 교환과 함께 통신망을 구성하는 3대 요소/기능 중의 하나 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;전송&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;되는 데이터 열&lt;/span&gt;(列)
        . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=765&amp;amp;id=1252&quot; title=&quot; 호스트 (Host) ㅇ (과거) 컴퓨터 전산망이 발달되기 전의 호스트    - 자신에게 의존된 다수의 단말기의 처리 의뢰를 만족시키고,   - 또한, 독립적으로 대규모 연산(봉급 일괄계산 등)을 행하는 형태의 주전산기 ㅇ (현재) 컴퓨터 네트워크 상의 호스트 = &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;호스트&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 상호간 또는 동일 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=765&amp;amp;id=1252&quot; title=&quot; 호스트 (Host) ㅇ (과거) 컴퓨터 전산망이 발달되기 전의 호스트    - 자신에게 의존된 다수의 단말기의 처리 의뢰를 만족시키고,   - 또한, 독립적으로 대규모 연산(봉급 일괄계산 등)을 행하는 형태의 주전산기 ㅇ (현재) 컴퓨터 네트워크 상의 호스트 = &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;호스트&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 내 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=431&amp;amp;id=1193&quot; title=&quot; 프로세스 (Process) 이란? ㅇ 시간과 관련된 사건/현상/활동/처리 등을 의미하는 매우 일반적인 용어 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;프로세스&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 상호간 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3063&amp;amp;id=638&quot; title=&quot; 통신 (Communication) ㅇ 송수신 간에 약속된 수단 및 절차에 의해 채널을 통해 정보를 주고받는 것   * 통신 이론 (Communication Theory)    . 통신채널 양 단 간에 신뢰적인 정보 신호의 전송에 관련되는 일체의 기술   * 통신 매질 (Communication &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;통신&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;에서
          &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=443&amp;amp;id=505&quot; title=&quot; 큐,대기열 (Queue) ㅇ 대기 열을 지어 기다리고 있다는 개념의 수학적 용어   - 컴퓨터등에서 자료의 저장구조(자료구조)로써 활용되며 논리적.개념적으로 구현됨    . 한쪽 끝에서 삽입되고, 다른 한쪽 끝으로 삭제되는 리스트 구조의 일종임 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;큐&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;에 의한 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=402&amp;amp;id=502&quot; title=&quot; 메세지 (Message) ㅇ 전송 및 보관 등을 위한 데이터의 논리적(의미를 갖는) 단위   - 주로, 전송을 위해 부가되는 제어 또는 변조를 위한 신호가 아닌,        실제 정보가 들어있는 신호를 의미 ㅇ 어떤 상태의 변화(이벤트)가 필요할 때 또는 발생했을 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;메세지&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 전달방식을 이용한 가상 연결 통로를 의미하기도 함&lt;/span&gt;

&lt;b&gt;
2. &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=398&amp;amp;id=44&quot; title=&quot; 멀티미디어 ㅇ 멀티미디어의 탄생   - 완전한 백지의 상태에서 새롭게 멀티미디어 산업이 탄생된 것이 아니라,    - 현재의 컴퓨터,이동통신,AV,가전 등이 `디지털화하는 과정`에서 자연스럽게 발생된    것이라 할 수 있음   - 결과적으로, 지금까지의 &quot; style=&quot;color: navy;&quot;&gt;멀티미디어&lt;/a&gt; 스트리밍 기술&lt;/b&gt;

  ㅇ &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=689&amp;amp;id=251&quot; title=&quot; 전송 이란? ㅇ 요구되는 정보 신호를 전송매체를 통해 공간의 한 점에서 다른 점으로 전달하는 기능 ㅇ 단말 및 교환과 함께 통신망을 구성하는 3대 요소/기능 중의 하나 &quot; style=&quot;color: navy;&quot;&gt;전송&lt;/a&gt; 방식 구분 
     - 다운로드 방식 : 재생(Play) 전에 데이타를 완전히 다운로드 받는 방식 
        . (&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=2730&amp;amp;id=1283&quot; title=&quot; 웹 서버 ㅇ 웹 클라이언트(웹브라우저 등)가 HTTP 프로토콜을 통해 요청한 HTML 페이지나 화일들을   정적 또는 동적으로 제공하는 서버 ㅇ 보통, 웹 서버라 함은,   - 소프트웨어 및 하드웨어 형태의 서버들이 조합된 것을 가리키거나,   - `웹서버`,`웹 &quot; style=&quot;color: navy;&quot;&gt;웹 서버&lt;/a&gt;)/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=648&amp;amp;id=1283&quot; title=&quot; HTTP ㅇ 웹 상에서 웹 서버 및 웹브라우저 상호 간의 데이터 전송을 위한 응용계층 프로토콜   - 처음에는, WWW 상의 하이퍼텍스트 형태의 문서를 전달하는데 주로 이용   - 현재에는, 이미지,비디오,음성 등 거의 모든 형식의 데이터 전송 가능 &quot; style=&quot;color: navy;&quot;&gt;HTTP&lt;/a&gt;/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=205&amp;amp;id=861&quot; title=&quot; TCP / IP (Transmission Control Protocol/Internet Protocol) ㅇ TCP 및 IP라고 불리우는 프로토콜을 중심으로 구성되는 일련의 프로토콜들의 총칭 * TCP/IP 프로토콜 군 (protocol suite)   - 일반적으로 TCP/IP라고 하는 경우에는 TCP와 IP의 두 프로토콜만을 &quot; style=&quot;color: navy;&quot;&gt;TCP/IP&lt;/a&gt; 상에서 동작

     - 스트리밍 방식 : 데이타 수신과 동시에 재생. 사용자에게 동시성 제공. &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4250&amp;amp;id=49&quot; title=&quot; 실시간 통신, 실시간 트래픽이란? ㅇ 생산과 동시에 전송 및 사용이 이루어져야하는 통신 트래픽 (아주 짧은 지연이 필수적) &quot; style=&quot;color: navy;&quot;&gt;실시간 전송&lt;/a&gt;기술
        . (&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3076&amp;amp;id=44&quot; title=&quot; 미디어(Media) ㅇ 정보의 전달 및 표현 등의 수단   - 문자,음성,영상 등의 운반/저장/전송/표현을 위한 수단 ㅇ 영어로는 미디엄(Medium,매체)의 복수형 &quot; style=&quot;color: navy;&quot;&gt;미디어&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=474&amp;amp;id=517&quot; title=&quot; 클라이언트/서버 이란? ㅇ 클라이언트 (Client)   - 영어 뜻 자체로는 고객을 의미    . 클라이언트는 기본적으로 한 개 이상의 서버가 제공하는 서비스를 사용할 수     있는 소비자의 개념   - 클라이언트/서버 모델에서,     . 네트워크를 &quot; style=&quot;color: navy;&quot;&gt;서버&lt;/a&gt;)/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1381&amp;amp;id=49&quot; title=&quot; RTP (Real-time Transport Protocol) ㅇ 인터넷상에서 다수가 종단간에 비디오나 오디오 패킷의 실시간 전송을 지원하기 위해   표준화된 실시간 통신용 프로토콜  ㅇ 주요 용도 : VoIP, 인터넷 방송, 인터넷 영상회의 등 &quot; style=&quot;color: navy;&quot;&gt;RTP&lt;/a&gt;/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=323&amp;amp;id=994&quot; title=&quot; UDP (User Datagram Protocol) ㅇ TCP/IP 프로토콜 群 중 트랜스포트 계층의 통신 프로토콜의 하나 (TCP에 대비됨)   - 신뢰성이 낮은 프로토콜로써 완전성을 보증하지 않으나,    - 가상회선을 굳이 확립할 필요가 없고 유연하며 효율적 응용의 데이타 전송에 &quot; style=&quot;color: navy;&quot;&gt;UDP&lt;/a&gt;/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=98&amp;amp;id=424&quot; title=&quot; IP  ㅇ TCP/IP 기반의 인터넷 망을 통하여 데이타그램의 전달을 담당하는 프로토콜 &quot; style=&quot;color: navy;&quot;&gt;IP&lt;/a&gt; 상에서 동작

     * [참고]
        . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5348&amp;amp;id=1166&quot; title=&quot; 디지털 영상 포멧 ㅇ 디지털 영상의 저장,전송,재현 등을 위한 기본 포멧(형식)   - 화면비(종횡비), 해상도, 주사방식 등과 같이    화면에 직접적인 영향을 주는 기술적 규격을 말함   - 영상 신호는 이러한 규격에 기반을 두고 만들어짐 &quot; style=&quot;color: navy;&quot;&gt;비디오 파일 포멧&lt;/a&gt; : 디지털 비디오 데이터를 저장,복원하기 위한 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4847&amp;amp;id=1267&quot; title=&quot; 파일 ㅇ 저장장치의 물리적 특성을 추상화시킨 논리적 저장 단위   - 운영체제에 의해 물리적 장치들과 사상되어짐   - 논리적 보조 저장장치에서 가장 작은 할당 단위   - 정보에 대한 일관된 논리적 관점을 줌  ※ 파일의 개념은 대단히 일반화된 &quot; style=&quot;color: navy;&quot;&gt;파일&lt;/a&gt; 포멧
           .. 例) &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3618&amp;amp;id=1166&quot; title=&quot; AVI ㅇ 마이크로소프트社가 1992년 개발한 동영상 파일 포맷 ㅇ 특징   - 비트맵 기반의 포멧   - 오디오 및 비디오를 번갈아(Interleaved) 기록    - 256색으로 160x120 픽셀 화상을 초당 15 프레임 정도로 재생이 가능 등   - 윈도 운영체제에서 &quot; style=&quot;color: navy;&quot;&gt;AVI&lt;/a&gt;, MKV, MP4, ASF, MOV, &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4197&amp;amp;id=1166&quot; title=&quot; WMV ㅇ 마이크로소프트社가 개발한 인터넷상에서 멀티미디어 소스를 실시간으로   재생하는 스트리밍용 오디오/비디오 파일 포멧 &quot; style=&quot;color: navy;&quot;&gt;WMV&lt;/a&gt; 등
        . 스트리밍 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3076&amp;amp;id=44&quot; title=&quot; 미디어(Media) ㅇ 정보의 전달 및 표현 등의 수단   - 문자,음성,영상 등의 운반/저장/전송/표현을 위한 수단 ㅇ 영어로는 미디엄(Medium,매체)의 복수형 &quot; style=&quot;color: navy;&quot;&gt;미디어&lt;/a&gt; : 즉시 재생 가능 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3076&amp;amp;id=44&quot; title=&quot; 미디어(Media) ㅇ 정보의 전달 및 표현 등의 수단   - 문자,음성,영상 등의 운반/저장/전송/표현을 위한 수단 ㅇ 영어로는 미디엄(Medium,매체)의 복수형 &quot; style=&quot;color: navy;&quot;&gt;미디어&lt;/a&gt;
           .. 전체 다운로드 없이도, &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=925&amp;amp;id=535&quot; title=&quot; 실시간성(Realtime) 이란? ㅇ 데이터 전달량 및 처리량 보다는 시간이 중요함 ㅇ 실시간 통신 (Realtime Communication)   - 생산과 동시에(아주 짧은 지연) 전송 및 사용이 이루어지는 통신 ㅇ 실시간 시스템 (Realtime System)   - 미리 정해진 시간 &quot; style=&quot;color: navy;&quot;&gt;실시간&lt;/a&gt; 실행이 가능한 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3076&amp;amp;id=44&quot; title=&quot; 미디어(Media) ㅇ 정보의 전달 및 표현 등의 수단   - 문자,음성,영상 등의 운반/저장/전송/표현을 위한 수단 ㅇ 영어로는 미디엄(Medium,매체)의 복수형 &quot; style=&quot;color: navy;&quot;&gt;미디어&lt;/a&gt;를 말함

  ㅇ 스트리밍 종류
     - [&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1381&amp;amp;id=49&quot; title=&quot; RTP (Real-time Transport Protocol) ㅇ 인터넷상에서 다수가 종단간에 비디오나 오디오 패킷의 실시간 전송을 지원하기 위해   표준화된 실시간 통신용 프로토콜  ㅇ 주요 용도 : VoIP, 인터넷 방송, 인터넷 영상회의 등 &quot; style=&quot;color: navy;&quot;&gt;RTP&lt;/a&gt; 스트림]  &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=301&amp;amp;id=417&quot; title=&quot; 인터넷 ㅇ 전세계 국가 거의 모든 지역전산망과 컴퓨터가 상호접속된 세계 최대 전산망 ㅇ 기본 프로토콜로는 TCP/IP라는 프로토콜군을 중심으로 운영되고 있음 &quot; style=&quot;color: navy;&quot;&gt;인터넷&lt;/a&gt; 스트리밍 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=432&amp;amp;id=297&quot; title=&quot; 통신 프로토콜 (Communication Protocol) ㅇ 1 이상의 실체 간에 무엇을,언제,어떻게 통신하는가에 대한 절차/규범/규정/규약/규칙 &quot; style=&quot;color: navy;&quot;&gt;프로토콜&lt;/a&gt; 
         . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1381&amp;amp;id=49&quot; title=&quot; RTP (Real-time Transport Protocol) ㅇ 인터넷상에서 다수가 종단간에 비디오나 오디오 패킷의 실시간 전송을 지원하기 위해   표준화된 실시간 통신용 프로토콜  ㅇ 주요 용도 : VoIP, 인터넷 방송, 인터넷 영상회의 등 &quot; style=&quot;color: navy;&quot;&gt;RTP&lt;/a&gt;/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=323&amp;amp;id=994&quot; title=&quot; UDP (User Datagram Protocol) ㅇ TCP/IP 프로토콜 群 중 트랜스포트 계층의 통신 프로토콜의 하나 (TCP에 대비됨)   - 신뢰성이 낮은 프로토콜로써 완전성을 보증하지 않으나,    - 가상회선을 굳이 확립할 필요가 없고 유연하며 효율적 응용의 데이타 전송에 &quot; style=&quot;color: navy;&quot;&gt;UDP&lt;/a&gt;/&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=98&amp;amp;id=424&quot; title=&quot; IP  ㅇ TCP/IP 기반의 인터넷 망을 통하여 데이타그램의 전달을 담당하는 프로토콜 &quot; style=&quot;color: navy;&quot;&gt;IP&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=421&amp;amp;id=484&quot; title=&quot; 패킷 ㅇ 데이타(정보)를 일정 크기로 자른 것   - 통상 헤더, 데이타, 트레일러로 구성 &quot; style=&quot;color: navy;&quot;&gt;패킷&lt;/a&gt;에 실릴 수 있도록 한 스트리밍 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=432&amp;amp;id=297&quot; title=&quot; 통신 프로토콜 (Communication Protocol) ㅇ 1 이상의 실체 간에 무엇을,언제,어떻게 통신하는가에 대한 절차/규범/규정/규약/규칙 &quot; style=&quot;color: navy;&quot;&gt;프로토콜&lt;/a&gt;
         . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3749&amp;amp;id=88&quot; title=&quot;  ㅇ 음파 (Sound Wave,Acoustic Wave)   - 주로 공기의 소밀파에 의한 진동의 전달 (파동 현상)  ㅇ 소리 (Sound)   - 대기 중 공기분자 진동이 고막을 진동시켜 공기의 압력 변화로 느끼는 감각 ㅇ 음성 (Voice)   - &quot; style=&quot;color: navy;&quot;&gt;오디오&lt;/a&gt;,비디오 등의 정보를 담은 일련의 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=421&amp;amp;id=484&quot; title=&quot; 패킷 ㅇ 데이타(정보)를 일정 크기로 자른 것   - 통상 헤더, 데이타, 트레일러로 구성 &quot; style=&quot;color: navy;&quot;&gt;패킷&lt;/a&gt;화된 정보 앞에 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1381&amp;amp;id=49&quot; title=&quot; RTP (Real-time Transport Protocol) ㅇ 인터넷상에서 다수가 종단간에 비디오나 오디오 패킷의 실시간 전송을 지원하기 위해   표준화된 실시간 통신용 프로토콜  ㅇ 주요 용도 : VoIP, 인터넷 방송, 인터넷 영상회의 등 &quot; style=&quot;color: navy;&quot;&gt;RTP&lt;/a&gt; 헤더를 붙힌 스트림

     - [&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3293&amp;amp;id=716&quot; title=&quot; MPEG 스트림 ㅇ MPEG 다중화 방식에 의해 패킷 스트림화된 것   - 비디오, 오디오, 데이터 등의 스트림을 저장 또는 전송하기 위해 패킷화됨 &quot; style=&quot;color: navy;&quot;&gt;MPEG 스트림&lt;/a&gt;]  주로, &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1156&amp;amp;id=70&quot; title=&quot; 디지털 방송 ㅇ 좁은 의미에서는, 전송의 과정이 디지털방식에 의한 것을 말하나, ㅇ 넓은 의미에서는, 방송 프로그램의 제작, 편집, 송출, 수신, 재현에 이르는 전과정이   모두 디지털화된 것을 말함 &quot; style=&quot;color: navy;&quot;&gt;디지털 방송&lt;/a&gt;용 스트리밍 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=432&amp;amp;id=297&quot; title=&quot; 통신 프로토콜 (Communication Protocol) ㅇ 1 이상의 실체 간에 무엇을,언제,어떻게 통신하는가에 대한 절차/규범/규정/규약/규칙 &quot; style=&quot;color: navy;&quot;&gt;프로토콜&lt;/a&gt;
         . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4194&amp;amp;id=716&quot; title=&quot; 멀티미디어 다중화 ㅇ 음성,영상과 같이 특성이 다른 개별 매체상의 정보열을 하나의 채널로 전송하고자 할때,    - 이를 일정한 규칙에 따라 엮어 하나의 정보열(단일 비트 스트림 형태)로 만드는 것 ㅇ 한편,    - 다중화된 정보 내에는 각각의 개별 &quot; style=&quot;color: navy;&quot;&gt;MPEG 다중화&lt;/a&gt; 방식에 의해 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=421&amp;amp;id=484&quot; title=&quot; 패킷 ㅇ 데이타(정보)를 일정 크기로 자른 것   - 통상 헤더, 데이타, 트레일러로 구성 &quot; style=&quot;color: navy;&quot;&gt;패킷&lt;/a&gt; 스트림화된 것
            .. &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=301&amp;amp;id=417&quot; title=&quot; 인터넷 ㅇ 전세계 국가 거의 모든 지역전산망과 컴퓨터가 상호접속된 세계 최대 전산망 ㅇ 기본 프로토콜로는 TCP/IP라는 프로토콜군을 중심으로 운영되고 있음 &quot; style=&quot;color: navy;&quot;&gt;인터넷&lt;/a&gt; 상에서는 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4194&amp;amp;id=716&quot; title=&quot; 멀티미디어 다중화 ㅇ 음성,영상과 같이 특성이 다른 개별 매체상의 정보열을 하나의 채널로 전송하고자 할때,    - 이를 일정한 규칙에 따라 엮어 하나의 정보열(단일 비트 스트림 형태)로 만드는 것 ㅇ 한편,    - 다중화된 정보 내에는 각각의 개별 &quot; style=&quot;color: navy;&quot;&gt;MPEG 다중화&lt;/a&gt; 스트림이 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1381&amp;amp;id=49&quot; title=&quot; RTP (Real-time Transport Protocol) ㅇ 인터넷상에서 다수가 종단간에 비디오나 오디오 패킷의 실시간 전송을 지원하기 위해   표준화된 실시간 통신용 프로토콜  ㅇ 주요 용도 : VoIP, 인터넷 방송, 인터넷 영상회의 등 &quot; style=&quot;color: navy;&quot;&gt;RTP&lt;/a&gt; 스트림 위에 또한 실릴 수 있음
         . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3293&amp;amp;id=716&quot; title=&quot; MPEG 스트림 ㅇ MPEG 다중화 방식에 의해 패킷 스트림화된 것   - 비디오, 오디오, 데이터 등의 스트림을 저장 또는 전송하기 위해 패킷화됨 &quot; style=&quot;color: navy;&quot;&gt;MPEG 스트림&lt;/a&gt; 종류
            .. PS(&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3279&amp;amp;id=716&quot; title=&quot; 프로그램 스트림 (Program Stream) ㅇ 에러가 거의 없는 선로나 저장매체를 통해 저장 또는 송수신할 목적으로 구성되는   일련의 패킷(MPEG-1에서는 이를 `팩`이라고함)으로 구성된 스트림 &quot; style=&quot;color: navy;&quot;&gt;Program Stream&lt;/a&gt;), &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=2869&amp;amp;id=716&quot; title=&quot; 트랜스포트 스트림 (Transport Stream,TS) ㅇ MPEG-2 시스템 표준에서 나온 말   - 오류가 있는 채널 환경 하에서도 쓸 수 있는,   - 복수의 방송 프로그램(부호화된 다수의 비디오 비트열)을 다중화한 비트열  &quot; style=&quot;color: navy;&quot;&gt;TS&lt;/a&gt;(&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=2869&amp;amp;id=716&quot; title=&quot; 트랜스포트 스트림 (Transport Stream,TS) ㅇ MPEG-2 시스템 표준에서 나온 말   - 오류가 있는 채널 환경 하에서도 쓸 수 있는,   - 복수의 방송 프로그램(부호화된 다수의 비디오 비트열)을 다중화한 비트열  &quot; style=&quot;color: navy;&quot;&gt;Transport Stream&lt;/a&gt;), ES(&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3500&amp;amp;id=716&quot; title=&quot; 기본 스트림 (Elementary Stream) ㅇ ES는 MPEG에서 영상, 음성 등이 압축된 각각의 미디어 비트 스트림을 말함 ㅇ ES는 후에 PES라 불리우는 패킷화된 스트림으로 재구성되며,    시분할다중화 전송용 TS(Transport Stream)로 됨    &quot; style=&quot;color: navy;&quot;&gt;Elementary Stream&lt;/a&gt;), 
               &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1618&amp;amp;id=716&quot; title=&quot; MPEG-2 시스템에서 PES 이란? ㅇ PS(Program Stream) 및 TS(Transport Stream)을 구성하기 위한 직전 단계   - PES 패킷  : 단일 미디어 정보원에서 나온 기본 스트림(ES)을 가변길이로 패킷화된 것   - PES 스트림 : 가변길이 큰 패킷 단위로 패킷화시킨 PES &quot; style=&quot;color: navy;&quot;&gt;PES&lt;/a&gt;(&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1618&amp;amp;id=716&quot; title=&quot; MPEG-2 시스템에서 PES 이란? ㅇ PS(Program Stream) 및 TS(Transport Stream)을 구성하기 위한 직전 단계   - PES 패킷  : 단일 미디어 정보원에서 나온 기본 스트림(ES)을 가변길이로 패킷화된 것   - PES 스트림 : 가변길이 큰 패킷 단위로 패킷화시킨 PES &quot; style=&quot;color: navy;&quot;&gt;Packetized Elementary Stream&lt;/a&gt;) 등

  ㅇ 스트리밍 관련 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=432&amp;amp;id=297&quot; title=&quot; 통신 프로토콜 (Communication Protocol) ㅇ 1 이상의 실체 간에 무엇을,언제,어떻게 통신하는가에 대한 절차/규범/규정/규약/규칙 &quot; style=&quot;color: navy;&quot;&gt;프로토콜&lt;/a&gt; 
     - &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=301&amp;amp;id=417&quot; title=&quot; 인터넷 ㅇ 전세계 국가 거의 모든 지역전산망과 컴퓨터가 상호접속된 세계 최대 전산망 ㅇ 기본 프로토콜로는 TCP/IP라는 프로토콜군을 중심으로 운영되고 있음 &quot; style=&quot;color: navy;&quot;&gt;인터넷&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=925&amp;amp;id=535&quot; title=&quot; 실시간성(Realtime) 이란? ㅇ 데이터 전달량 및 처리량 보다는 시간이 중요함 ㅇ 실시간 통신 (Realtime Communication)   - 생산과 동시에(아주 짧은 지연) 전송 및 사용이 이루어지는 통신 ㅇ 실시간 시스템 (Realtime System)   - 미리 정해진 시간 &quot; style=&quot;color: navy;&quot;&gt;실시간&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3076&amp;amp;id=44&quot; title=&quot; 미디어(Media) ㅇ 정보의 전달 및 표현 등의 수단   - 문자,음성,영상 등의 운반/저장/전송/표현을 위한 수단 ㅇ 영어로는 미디엄(Medium,매체)의 복수형 &quot; style=&quot;color: navy;&quot;&gt;미디어&lt;/a&gt; 흐름 및 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5240&amp;amp;id=245&quot; title=&quot; 제어 (Control) ㅇ 시스템 전체를 정상적이고 효율적으로 가동시키려는 행위(동작) ㅇ 적당한 성능을 얻기위해 시스템을 변화, 조정하는 것        ☞ 제어관련용어 참조   - 외란에도 불구하고 출력을 목표신호에 가깝게 유지시키는 것    . 원하는 &quot; style=&quot;color: navy;&quot;&gt;제어&lt;/a&gt; 관련 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=432&amp;amp;id=297&quot; title=&quot; 통신 프로토콜 (Communication Protocol) ㅇ 1 이상의 실체 간에 무엇을,언제,어떻게 통신하는가에 대한 절차/규범/규정/규약/규칙 &quot; style=&quot;color: navy;&quot;&gt;프로토콜&lt;/a&gt;
        . 물리적 정보의 빠른 흐름 및 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5240&amp;amp;id=245&quot; title=&quot; 제어 (Control) ㅇ 시스템 전체를 정상적이고 효율적으로 가동시키려는 행위(동작) ㅇ 적당한 성능을 얻기위해 시스템을 변화, 조정하는 것        ☞ 제어관련용어 참조   - 외란에도 불구하고 출력을 목표신호에 가깝게 유지시키는 것    . 원하는 &quot; style=&quot;color: navy;&quot;&gt;제어&lt;/a&gt; : &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1381&amp;amp;id=49&quot; title=&quot; RTP (Real-time Transport Protocol) ㅇ 인터넷상에서 다수가 종단간에 비디오나 오디오 패킷의 실시간 전송을 지원하기 위해   표준화된 실시간 통신용 프로토콜  ㅇ 주요 용도 : VoIP, 인터넷 방송, 인터넷 영상회의 등 &quot; style=&quot;color: navy;&quot;&gt;RTP&lt;/a&gt;(빠른 수송) / &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1798&amp;amp;id=49&quot; title=&quot; RTSP ㅇ 실시간 멀티미디어 스트림을 제어하기 위한 프로토콜 ㅇ RealNetworks사,Netscape사,IBM사,콜롬비아대학 등이 공동 개발, IETF에서 표준화   - 관련표준 : RFC 2326 (1998) &quot; style=&quot;color: navy;&quot;&gt;RTSP&lt;/a&gt;(수송 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5240&amp;amp;id=245&quot; title=&quot; 제어 (Control) ㅇ 시스템 전체를 정상적이고 효율적으로 가동시키려는 행위(동작) ㅇ 적당한 성능을 얻기위해 시스템을 변화, 조정하는 것        ☞ 제어관련용어 참조   - 외란에도 불구하고 출력을 목표신호에 가깝게 유지시키는 것    . 원하는 &quot; style=&quot;color: navy;&quot;&gt;제어&lt;/a&gt;) 
        . 스트리밍 재생 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5240&amp;amp;id=245&quot; title=&quot; 제어 (Control) ㅇ 시스템 전체를 정상적이고 효율적으로 가동시키려는 행위(동작) ㅇ 적당한 성능을 얻기위해 시스템을 변화, 조정하는 것        ☞ 제어관련용어 참조   - 외란에도 불구하고 출력을 목표신호에 가깝게 유지시키는 것    . 원하는 &quot; style=&quot;color: navy;&quot;&gt;제어&lt;/a&gt;              : &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1798&amp;amp;id=49&quot; title=&quot; RTSP ㅇ 실시간 멀티미디어 스트림을 제어하기 위한 프로토콜 ㅇ RealNetworks사,Netscape사,IBM사,콜롬비아대학 등이 공동 개발, IETF에서 표준화   - 관련표준 : RFC 2326 (1998) &quot; style=&quot;color: navy;&quot;&gt;RTSP&lt;/a&gt;(RTP 스트림 전반에 대한 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5240&amp;amp;id=245&quot; title=&quot; 제어 (Control) ㅇ 시스템 전체를 정상적이고 효율적으로 가동시키려는 행위(동작) ㅇ 적당한 성능을 얻기위해 시스템을 변화, 조정하는 것        ☞ 제어관련용어 참조   - 외란에도 불구하고 출력을 목표신호에 가깝게 유지시키는 것    . 원하는 &quot; style=&quot;color: navy;&quot;&gt;제어&lt;/a&gt;)

     - &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1156&amp;amp;id=70&quot; title=&quot; 디지털 방송 ㅇ 좁은 의미에서는, 전송의 과정이 디지털방식에 의한 것을 말하나, ㅇ 넓은 의미에서는, 방송 프로그램의 제작, 편집, 송출, 수신, 재현에 이르는 전과정이   모두 디지털화된 것을 말함 &quot; style=&quot;color: navy;&quot;&gt;디지털 방송&lt;/a&gt;용
        . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=998&amp;amp;id=110&quot; title=&quot; 영상 부호화/압축 방식 ㅇ 영상신호에 내재된 중복된 정보를 시각적으로 못느낄 정도로 제거하여 압축하는 기술 &quot; style=&quot;color: navy;&quot;&gt;비디오 압축&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=689&amp;amp;id=251&quot; title=&quot; 전송 이란? ㅇ 요구되는 정보 신호를 전송매체를 통해 공간의 한 점에서 다른 점으로 전달하는 기능 ㅇ 단말 및 교환과 함께 통신망을 구성하는 3대 요소/기능 중의 하나 &quot; style=&quot;color: navy;&quot;&gt;전송&lt;/a&gt;용 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=432&amp;amp;id=297&quot; title=&quot; 통신 프로토콜 (Communication Protocol) ㅇ 1 이상의 실체 간에 무엇을,언제,어떻게 통신하는가에 대한 절차/규범/규정/규약/규칙 &quot; style=&quot;color: navy;&quot;&gt;프로토콜&lt;/a&gt;   :  &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=953&amp;amp;id=54&quot; title=&quot; MPEG-2 ㅇ MPEG-1(CD-ROM 저장 정도의 수준) 보다 넓은 대역폭을 요구하지만,  ㅇ 더 좋은 해상도와 비디오 저장 뿐만 아니라, ㅇ 통신 및 방송 미디어의 적용을 위해 제안된 보다 일반화된 표준 &quot; style=&quot;color: navy;&quot;&gt;MPEG-2&lt;/a&gt;, &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3067&amp;amp;id=50&quot; title=&quot; H.264/AVC ㅇ 차세대 동영상 압축을 위한 ITU-T 및 ISO의 공동 표준 ㅇ 기존의 MPEG-4 보다 압축율이 약 2배 정도 향상된 동영상 압축기술 &quot; style=&quot;color: navy;&quot;&gt;H.264&lt;/a&gt; 등
        . &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=5319&amp;amp;id=1151&quot; title=&quot; 음성 부호화 (Speech Coding,Voice Coding) ㅇ 주로, 전화 음성통신을 위해 음성정보를 가능한 낮은 속도로 전송할 수 있게 함   - 크게, 다음 2가지로 구분 가능    . 광대역 음성 코딩 (Widband Speech Coding)    . 협대역/전화통화용 코딩  &quot; style=&quot;color: navy;&quot;&gt;음성 압축&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=689&amp;amp;id=251&quot; title=&quot; 전송 이란? ㅇ 요구되는 정보 신호를 전송매체를 통해 공간의 한 점에서 다른 점으로 전달하는 기능 ㅇ 단말 및 교환과 함께 통신망을 구성하는 3대 요소/기능 중의 하나 &quot; style=&quot;color: navy;&quot;&gt;전송&lt;/a&gt;용 프로토콜     :  &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4195&amp;amp;id=713&quot; title=&quot; MPEG-2 오디오 ㅇ MPEG-1 오디오 보다 더 낮은 데이터율과 멀티 채널로 확장하기 위해 개발됨   - 실감있는 입체 음향 구현 &quot; style=&quot;color: navy;&quot;&gt;MPEG-2 오디오&lt;/a&gt;, &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3398&amp;amp;id=91&quot; title=&quot; AC-3 음성부호화 방식 ㅇ Dolby 연구실에서 1991년 개발 제안한 오디오 압축 알고리즘으로써 극장용 영화 오디오 수준 &quot; style=&quot;color: navy;&quot;&gt;AC-3&lt;/a&gt; 등

  ㅇ &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=398&amp;amp;id=44&quot; title=&quot; 멀티미디어 ㅇ 멀티미디어의 탄생   - 완전한 백지의 상태에서 새롭게 멀티미디어 산업이 탄생된 것이 아니라,    - 현재의 컴퓨터,이동통신,AV,가전 등이 `디지털화하는 과정`에서 자연스럽게 발생된    것이라 할 수 있음   - 결과적으로, 지금까지의 &quot; style=&quot;color: navy;&quot;&gt;멀티미디어&lt;/a&gt; 스트림 재생 Player 例)
     - RealNetworks社의 RealPlayer, MS社의 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=2696&amp;amp;id=523&quot; title=&quot; 윈도우즈 (Windows) ㅇ Microsoft社에서 만들어내는 운영체제에 대한 일련의 제품군을 총칭하는 말 &quot; style=&quot;color: navy;&quot;&gt;Windows&lt;/a&gt; &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=3076&amp;amp;id=44&quot; title=&quot; 미디어(Media) ㅇ 정보의 전달 및 표현 등의 수단   - 문자,음성,영상 등의 운반/저장/전송/표현을 위한 수단 ㅇ 영어로는 미디엄(Medium,매체)의 복수형 &quot; style=&quot;color: navy;&quot;&gt;Media&lt;/a&gt; Player, Apple社의 QuickTime 등

&lt;b&gt;
3. &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4852&amp;amp;id=873&quot; title=&quot; 프로그래밍 언어 ㅇ 프로그램 작성용 언어   - 프로그램을 작성하기 위한 일종의 표기법(notation) &quot; style=&quot;color: navy;&quot;&gt;프로그래밍 언어&lt;/a&gt;상의 스트림&lt;/b&gt;

  ※ &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=1435&amp;amp;id=510&quot; title=&quot; C 프로그래밍 언어 ㅇ 벨 연구소에서 1971년경부터 리치(D.M.Ritchie) 등에 의해 개발 ㅇ 광범위한 지지기반을 가지게된 절차식 프로그래밍 언어 ㅇ UNIX 운영체제 대부분이 이 C 언어로 작성 * C 언어의 기원 : ALGOL60 -&gt; CPL -&gt; BCPL -&gt; B -&gt; C ( -&gt; C++ &quot; style=&quot;color: navy;&quot;&gt;C 언어&lt;/a&gt;에서 스트림
     - 연속된 문자 또는 데이터
        . 크게 텍스트(바이트) 스트림 및 바이너리(이진) 스트림으로 구분
     - `&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=243&amp;amp;id=541&quot; title=&quot; ANSI ㅇ 1918년에 설립되어 미국내 표준개발기구에서의 자발적 합의표준 개발을 조정,관리하고   미국 국가표준으로 승인.조정하는 기능을 하는 민간 표준화 단체  &quot; style=&quot;color: navy;&quot;&gt;ANSI&lt;/a&gt; C` 의 표준 &lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4847&amp;amp;id=1267&quot; title=&quot; 파일 ㅇ 저장장치의 물리적 특성을 추상화시킨 논리적 저장 단위   - 운영체제에 의해 물리적 장치들과 사상되어짐   - 논리적 보조 저장장치에서 가장 작은 할당 단위   - 정보에 대한 일관된 논리적 관점을 줌  ※ 파일의 개념은 대단히 일반화된 &quot; style=&quot;color: navy;&quot;&gt;파일&lt;/a&gt; 스트림 例 : stdin, stdout, stderr 등

  ㅇ &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;스트림 사용 이유&lt;/span&gt;
     -&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 물리 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=2931&amp;amp;id=494&quot; title=&quot; 저장매체 종류 ㅇ 자기 테이프      : 초기의 보조 저장장치 매체 (지금은 거의 사용 안함) ㅇ 하드 디스크(HDD)   : 단단한 원형 디스크(65~95mm 직경)로 구성된 기계적, 자기적 저장장치 ㅇ 광 디스크(ODD)    : 레이저 기술에 의한 광디스크 (CD-ROM &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;디스크&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;상의 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4847&amp;amp;id=1267&quot; title=&quot; 파일 ㅇ 저장장치의 물리적 특성을 추상화시킨 논리적 저장 단위   - 운영체제에 의해 물리적 장치들과 사상되어짐   - 논리적 보조 저장장치에서 가장 작은 할당 단위   - 정보에 대한 일관된 논리적 관점을 줌  ※ 파일의 개념은 대단히 일반화된 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;파일&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,장치들을 통일된 방식으로 다루기 위한 가상적인 개념&lt;/span&gt;
        . 따라서, 스&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;트림은 어디서 나왔는지 어디로 가는지 신경을 쓸 필요없이 자유롭게
          어떤 장치 및 &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=431&amp;amp;id=1193&quot; title=&quot; 프로세스 (Process) 이란? ㅇ 시간과 관련된 사건/현상/활동/처리 등을 의미하는 매우 일반적인 용어 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로세스&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;, &lt;/span&gt;&lt;a href=&quot;http://www.ktword.co.kr/abbr_view.php?nav=&amp;amp;m_temp1=4847&amp;amp;id=1267&quot; title=&quot; 파일 ㅇ 저장장치의 물리적 특성을 추상화시킨 논리적 저장 단위   - 운영체제에 의해 물리적 장치들과 사상되어짐   - 논리적 보조 저장장치에서 가장 작은 할당 단위   - 정보에 대한 일관된 논리적 관점을 줌  ※ 파일의 개념은 대단히 일반화된 &quot; style=&quot;color: navy;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;화일&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;들과 연결될 수 있어 &lt;/span&gt;프로그래머에게 많은 편리성 줌

&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px; line-height: 26px;&quot;&gt;http://blog.lifeis.gift/101&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 13px; line-height: 26px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 13px; line-height: 26px;&quot;&gt;&lt;span style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;입/출력은 소스를 제공하는 입력이나 목적지로의 출력을 의미합니다. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;스트림은 디스크 파일이나, 장치, 다른 프로그램들, 그리고 메모리 배열들과 같은 많은 종류의 소스들과 목적지들을 표시 할 수 있습니다.&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;&lt;br style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;&lt;span style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;스트림은 간단한 바이트나 primitive 데이터 타입, 글자들의 모음과 객체들과 같은 많은 종류의 다른 데이터를 지&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;원&lt;/span&gt;합니다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;어떤 스트림들은 단순히 데이터를 넘겨주는 역할만 합니다. 또 다른 스트림들은 유용한 방법들로 데이터를 변형하고 가공&lt;/span&gt;합니다.&lt;/span&gt;&lt;br style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;&lt;br style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;&lt;span style=&quot;color: rgb(19, 19, 19); font-family: 'KoPub Batang', serif; font-size: 12px; line-height: 19.8px; white-space: normal;&quot;&gt;내부적으로 어떻게 스트림들이 작동하는지는 중요하지 않습니다, 모든 스트림들은 같은 단순한 모델을 스트림을 사용하는 프로그램으로 표시합니다.&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;스트림은 데이터들의 연속입니다. 프로그램은 input stream을 사용하여 한개의 데이터를 동시에 소스로 부터 읽어들입니다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결론적으로 스트림의 메모리가 어떻게 잡히는 지 라던가, 어떤 원리 라던가 같은&amp;nbsp;내부 구조에 대한 내용은 찾을 수&amp;nbsp;없었다. 좀 더 찾아봐야할 듯..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/230</guid>
<comments>https://genesis8.tistory.com/230#entry230comment</comments>
<pubDate>Fri, 05 Feb 2016 19:14:47 +0900</pubDate>
</item>
<item>
<title>Auto Increment란</title>
<link>https://genesis8.tistory.com/227</link>
<description>&lt;p&gt;http://hellogk.tistory.com/32&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(59, 89, 152); font-size: 24px; padding: 3px 5px; border-left-width: 10px; border-left-style: solid; border-left-color: rgb(59, 89, 152); margin: 5px 0px; letter-spacing: 3px; word-spacing: 3px; line-height: normal;&quot;&gt;MySQL 시퀀스 생성 및 초기화하기&lt;/h3&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;MySQL의 경우 시퀀스 생성이 간단합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; width: 100px; color: rgb(255, 0, 0);&quot;&gt;테이블 생성 시 auto_increment라는 속성을 시퀀스로 지정해줄 컬럼에 적용&lt;/span&gt;&lt;/b&gt;만 해주면 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;예를들어보도록 하겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;h3 style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(59, 89, 152); font-size: 24px; padding: 3px 5px; border-left-width: 10px; border-left-style: solid; border-left-color: rgb(59, 89, 152); margin: 5px 0px; letter-spacing: 3px; word-spacing: 3px; line-height: normal;&quot;&gt;auto_increment를 적용한 임시 테이블생성&lt;/h3&gt;&lt;pre class=&quot;brush:sql;&quot; style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal;&quot;&gt;CREATE TABLE sequence_table(
   seq int auto_increment primary key,
   title varchar(20)
)
&lt;/pre&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;위와같이 임의의 테이블을 생성해보았습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;코드를 보시면&amp;nbsp;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; margin: 0px; width: 100px; color: rgb(255, 0, 0);&quot;&gt;seq 컬럼에 auto_increment라는 속성이 지정&lt;/span&gt;&lt;/b&gt;되어있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;INSERT 문을 통해서 title 컬럼만 데이터 추가를 해주면 알아서 seq 컬럼에는 1씩 자동증가하는 넘버가 부여&lt;/b&gt;가 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;한번 데이터를 삽입해보도록 하겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;h3 style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(59, 89, 152); font-size: 24px; padding: 3px 5px; border-left-width: 10px; border-left-style: solid; border-left-color: rgb(59, 89, 152); margin: 5px 0px; letter-spacing: 3px; word-spacing: 3px; line-height: normal;&quot;&gt;INSERT 데이터&lt;/h3&gt;&lt;pre class=&quot;brush:sql;&quot; style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal;&quot;&gt;insert into sequence_table(title)
values('제목1');
insert into sequence_table(title)
values('제목2');
&lt;/pre&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;h3 style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(59, 89, 152); font-size: 24px; padding: 3px 5px; border-left-width: 10px; border-left-style: solid; border-left-color: rgb(59, 89, 152); margin: 5px 0px; letter-spacing: 3px; word-spacing: 3px; line-height: normal;&quot;&gt;실행결과&lt;/h3&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; clear: none; float: none; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; display: inline-block; width: 737px; height: auto; max-width: 100%;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/274DE646543CE6AE14?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; margin: 0px; width: 100px;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/274DE646543CE6AE14&quot; width=&quot;737&quot; height=&quot;228&quot; style=&quot;border: 0px; box-sizing: border-box; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span id=&quot;callbacknesthellogktistorycom325719&quot; style=&quot;box-sizing: border-box; margin: 0px; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;title 컬럼만 insert함으로써 seq컬럼에 자동으로 1씩증가되어 등록&lt;/b&gt;이 되었습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;하지만&amp;nbsp;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;현재 상태에서 모든 데이터들을 삭제를 한다음에 다시 insert 쿼리를 시도 하게 된다면&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 12pt;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;seq컬럼에 insert되는 데이터는 3부터 등록&lt;/b&gt;이 되게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Nanum Gothic', sans-serif; box-sizing: border-box; color: rgb(85, 85, 85); font-size: 13px; line-height: normal; text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하다가 실수로 시퀀스 값을 대입해서 넣어서 이전 자료와&amp;nbsp;격차가 생겨버렸다던가 할 때&lt;/p&gt;&lt;p&gt;다음의 방법으로 고친다.&lt;/p&gt;&lt;p style=&quot;font-family: Arial; color: rgb(51, 51, 51); margin: 1px; line-height: normal;&quot;&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1px;&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;Arial&quot;&gt;&lt;span style=&quot;line-height: normal;&quot;&gt;&lt;b&gt;http://www.cyberpr.co.kr/community/community.php?act=v&amp;amp;bid=database&amp;amp;seq=1052&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;font-family: Arial; color: rgb(51, 51, 51); margin: 1px; line-height: normal;&quot;&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-family: Arial; color: rgb(51, 51, 51); margin: 1px; line-height: normal;&quot;&gt;&lt;strong&gt;MySQL 자동증가, auto increment 값 초기화 하기&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;font-family: Arial; color: rgb(51, 51, 51); margin: 1px; line-height: normal;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;400&quot; border=&quot;0&quot; style=&quot;font-family: 굴림; color: rgb(51, 51, 51);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#ffffec&quot; style=&quot;font-family: 굴림; font-size: 9pt; color: rgb(51, 51, 51);&quot;&gt;&lt;font color=&quot;#333333&quot;&gt;&lt;strong&gt;※ 경고&lt;/strong&gt;&lt;br /&gt;높이뜬새의 모르는 사람이 없는 팁시리즈 입니다.&lt;br /&gt;이 팁시리즈는 지면낭비라는 항의시에 즉각 중단됩니다.&lt;br /&gt;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 굴림; line-height: normal;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-family: Arial; color: rgb(51, 51, 51); margin: 1px; line-height: normal;&quot;&gt;테이블 생성시에 아래와 같이 auto_increment 라고 지정해주면 그 컬럼(필드)는&amp;nbsp;&lt;br /&gt;자동 증가 값을 가지게 되는데요..&lt;br /&gt;&lt;br /&gt;create table test_table (&lt;br /&gt;idx int NOT NULL&amp;nbsp;&lt;b&gt;auto_increment&lt;/b&gt;,&lt;br /&gt;name varchar(255),&lt;br /&gt;... 블라 블라,&lt;br /&gt;... 블라 블라,&lt;br /&gt;... 블라 블라, &amp;nbsp;&lt;br /&gt;) ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=euckr;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;가끔은 이놈을 초기화 시켜야 할때가 있습니다. 초기화 시키기 위한 꼬라&lt;br /&gt;지는 아래와 같습니다.&lt;br /&gt;&lt;br /&gt;ALTER TABLE&amp;nbsp;&lt;b&gt;[테이블명]&lt;/b&gt;&amp;nbsp;AUTO_INCREMENT=&lt;b&gt;[시작할려는 순서]&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;예) test_table의 자동증가를 1부터 시작하게 초기화&amp;nbsp;&lt;br /&gt;ALTER TABLE test_table AUTO_INCREMENT=1&amp;nbsp;&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/227</guid>
<comments>https://genesis8.tistory.com/227#entry227comment</comments>
<pubDate>Fri, 05 Feb 2016 18:32:32 +0900</pubDate>
</item>
<item>
<title>MySql 주석을 달자</title>
<link>https://genesis8.tistory.com/226</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;#은 대상 줄을 주석화한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;/* */ 는 /*에서부터 */까지를 주석처리한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;끝&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/226</guid>
<comments>https://genesis8.tistory.com/226#entry226comment</comments>
<pubDate>Mon, 01 Feb 2016 12:13:56 +0900</pubDate>
</item>
<item>
<title>덱(deque)</title>
<link>https://genesis8.tistory.com/222</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;deque에 대해서 검색해보았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원문 출처 :&amp;nbsp;http://mayple.tistory.com/entry/CSTL-7%EC%9E%A5-deque&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;deck과는 다르다! deck과는!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;color: rgb(102, 102, 102); font-size: 22px; font-family: Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;7.1 deque 데이터 추상(data abstraction)&lt;/h2&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#ff0000&quot;&gt;deque&lt;/font&gt;&lt;/b&gt;은 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;`double-ended queue'&lt;/span&gt;의 약자이고, `덱(deck)'이라고 발음한다. 전통적으로, 이 용어는 콜렉션의 앞과 뒤 어느 곳에서나 삽입과 삭제가 가능한 데이터 구조들을 지칭하는데 사용되었는데, deque 컨테이너 클래스는 이것뿐만 아니라 더 많은 것을 할 수 있다. 실제로, deque 데이터 구조의 능력은 vector 클래스와 list 클래스가 제공하는 것들을 모두 포함한다.&lt;ul&gt;&lt;li&gt;vector와 같이 deque은 인덱싱이 가능하다. 콜렉션 내에서의 위치를 키로 사용함으로써, 첨자로 값들을 접근할 수 있다. (물론 list 클래스에서는 제공하지 않는 기능이다.)&lt;/li&gt;&lt;li&gt;list와 같이 deque의 앞과 뒤에 값을 효율적으로 추가할 수 있다. (vector 클래스에서는 vector의 맨뒤에서 값을 추가하는데 있어 효율적이다.)&lt;/li&gt;&lt;li&gt;list와 vector 클래스에서와 같이, deque가 관리하는 시퀀스의 중간에서 값들을 삽입할 수 있다. 이러한 삽입 연산은 list에서도 효율적인 연산이지만, vector에서는 조금 더 비용이 드는 연산이다.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;간단히 말해서, deque은 vector와 list를 필요로 하는 곳에서 모두 사용할 수 있다. vector와 list 대신에 deque를 사용하게 되면, 종종 프로그램의 성능이 더 나아진다. 어느 데이터 구조를 선택할지에 관해서는&amp;nbsp;&lt;a class=&quot;con_link&quot; href=&quot;http://oopsla.snu.ac.kr/~sjjung/stl/sel_2116.htm&quot; target=&quot;_blank&quot; style=&quot;color: rgb(204, 103, 20);&quot;&gt;&lt;font color=&quot;#800080&quot;&gt;4.2절&lt;/font&gt;&lt;/a&gt;을 참고하기 바란다.&amp;nbsp;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;7.1.1 Include 화일&lt;/h3&gt;&lt;div&gt;deque 데이터 타입을 사용하는 프로그램은 모두&amp;nbsp;&lt;b&gt;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;deque&lt;/font&gt;&lt;/tt&gt;&lt;/b&gt;&amp;nbsp;헤더 화일을 사용해야 한다.&lt;/div&gt;&lt;ul&gt;&lt;pre&gt;#include &amp;lt;deque&amp;gt;&lt;/pre&gt;&lt;/ul&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;h2 style=&quot;font-size: 22px; font-family: Arial, Helvetica, sans-serif;&quot;&gt;7.2 deque 연산&lt;/h2&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#ff0000&quot;&gt;deque&lt;/font&gt;&lt;/b&gt;는 vector와 같은 방식으로 선언하고, 클래스 내부에는 vector와 동일한 타입 정의를 가지고 있다.&lt;div&gt;&lt;b&gt;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;begin()&lt;/font&gt;&lt;/tt&gt;&lt;/b&gt;과&amp;nbsp;&lt;b&gt;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;end()&lt;/font&gt;&lt;/tt&gt;&lt;/b&gt;&amp;nbsp;멤버 함수는 양방향 반복자를 제공하는 리스트와는 달리, 임의접근 반복자를 리턴한다.&lt;div&gt;삽입(&lt;b&gt;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;insert()&lt;/font&gt;&lt;/tt&gt;&lt;/b&gt;,&amp;nbsp;&lt;b&gt;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;push_front()&lt;/font&gt;&lt;/tt&gt;&lt;/b&gt;,&amp;nbsp;&lt;b&gt;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;push_back()&lt;/font&gt;&lt;/tt&gt;&lt;/b&gt;)은 deque의 원소를 가리키는 반복자나 레퍼런스들을 무효화시킬 수도 있다. 이는 vector 데이터 타입과 같이 list에서의 삽입보다 더 제한적이다.&lt;div&gt;deque내의 원소 타입에 소멸자가 정의되어 있다면, deque로부터 원소를 삭제할 때, 이 소멸자가 호출될 것이다.&lt;div&gt;deque 데이터 타입이 임의접근 반복자를 제공하기 때문에, vector에 적용되는 모든 generic 알고리듬은 deque에도 사용될 수 있다.&lt;div&gt;vector는 커다란 하나의 메모리 블럭에 원소들을 가지고 있는 반면, deque은 많은 수의 좀더 작은 블럭들을 사용한다. 메모리 블럭의 사이즈에 제한을 두고 있는 시스템에서 이는 매우 중요한 사항이며, 이러한 이유때문에 deque은 vector보다 더 많은 원소들을 포함할 수 있다.&lt;div&gt;값들을 삽입할 때는, 콜렉션내의 원소와 연결되어 있던 인덱스가 바뀌게 된다. 예를 들어, 3번 위치에 값을 삽입하면, 원래 3번 자리에 있던 값은 4번자리를 차지하게 되고, 4번 자리에 있던 값은 5번자리로 차례로 옮겨지게 된다.&amp;nbsp;&lt;br /&gt;&lt;span id=&quot;callbacknestmaypletistorycom1858158&quot; style=&quot;width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;h2 style=&quot;font-size: 22px; font-family: Arial, Helvetica, sans-serif;&quot;&gt;7.3 예제 프로그램 - Radix Sort&lt;/h2&gt;&lt;div&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;The radix sort algorithm is a good illustration of how lists and deques can be combined with other containers. In the case of radix sort, a vector of deques is manipulated, much like a hash table.&lt;div&gt;Radix sorting is a technique for ordering a list of positive integer values. The values are successively ordered on digit positions, from right to left. This is accomplished by copying the values into &quot;buckets,&quot; where the index for the bucket is given by the position of the digit being sorted. Once all digit positions have been examined, the list must be sorted.&lt;div&gt;The following table shows the sequences of values found in each bucket during the four steps involved in sorting the list 624 852 426 987 269 146 415 301 730 78 593. During pass 1 the ones place digits are ordered. During pass 2 the tens place digits are ordered, retaining the relative positions of values set by the earlier pass. On pass 3 the hundreds place digits are ordered, again retaining the previous relative ordering. After three passes the result is an ordered list.&amp;nbsp;&lt;br /&gt;&amp;nbsp;&lt;center&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; bgcolor=&quot;#cccccc&quot; nosave=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; bgcolor=&quot;#999999&quot; nosave=&quot;&quot;&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;bucket&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;pass 1&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;pass 2&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;pass 3&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;0&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;730&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;301&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;78&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;1&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;301&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;415&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;146&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;2&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;852&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;624, 426&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;269&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;3&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;593&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;730&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;301&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;4&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;624&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;146&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;415, 426&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;5&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;415&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;852&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;593&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;6&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;426, 146&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;269&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;624&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;7&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;987&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;78&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;730&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;8&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;78&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;987&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;852&lt;/td&gt;&lt;/tr&gt;&lt;tr valign=&quot;center&quot; align=&quot;middle&quot; nosave=&quot;&quot;&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;9&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;269&lt;/td&gt;&lt;td nosave=&quot;&quot; style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;593&lt;/td&gt;&lt;td style=&quot;font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 1.6em; color: rgb(102, 102, 102);&quot;&gt;987&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/center&gt;&lt;div&gt;The radix sorting algorithm is simple. A&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;while&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;loop is used to cycle through the various passes. The value of the variable&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;divisor&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;indicates which digit is currently being examined. A boolean flag is used to determine when execution should halt. Each time the while loop is executed a vector of deques is declared. By placing the declaration of this structure inside the while loop, it is reinitialized to empty each step. Each time the loop is executed, the values in the list are copied into the appropriate bucket by executing the function&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;copyIntoBuckets()&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;on each value. Once distributed into the buckets, the values are gathered back into the list by means of an accumulation.&lt;/div&gt;&lt;ul&gt;&lt;pre&gt;void radixSort(list&amp;lt;unsigned int&amp;gt; &amp;amp; values)
{
 &amp;nbsp; bool flag = true;
 &amp;nbsp; int divisor = 1;
 &amp;nbsp; 
 &amp;nbsp; while (flag) {
 &amp;nbsp; &amp;nbsp;&amp;nbsp; vector&amp;lt; deque&amp;lt;unsigned int&amp;gt; &amp;gt; buckets(10);
 &amp;nbsp; &amp;nbsp;&amp;nbsp; flag = false;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; for_each(values.begin(), values.end(), 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; copyIntoBuckets(...));
 &amp;nbsp; &amp;nbsp;&amp;nbsp; accumulate(buckets.begin(), buckets.end(), 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; values.begin(), listCopy);
 &amp;nbsp; &amp;nbsp;&amp;nbsp; divisor *= 10;
 &amp;nbsp; &amp;nbsp;&amp;nbsp; }
}&lt;/pre&gt;&lt;/ul&gt;&lt;div&gt;The use of the function&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;accumulate()&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;here is slightly unusual. The &quot;scalar&quot; value being constructed is the list itself. The initial value for the accumulation is the iterator denoting the beginning of the list. Each bucket is processed by the following binary function:&lt;/div&gt;&lt;ul&gt;&lt;pre&gt;list&amp;lt;unsigned int&amp;gt;::iterator 
 &amp;nbsp; &amp;nbsp;&amp;nbsp; listCopy(list&amp;lt;unsigned int&amp;gt;::iterator c, 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; deque&amp;lt;unsigned int&amp;gt; &amp;amp; lst)
{
 &amp;nbsp; // copy list back into original list, returning end
 &amp;nbsp; return copy(lst.begin(), lst.end(), c);
}&lt;/pre&gt;&lt;/ul&gt;&lt;div&gt;The only difficulty remaining is defining the function&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;copyIntoBuckets().&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;The problem here is that the function must take as its argument only the element being inserted, but it must also have access to the three values&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;buckets,&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;divisor&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;and&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;flag&lt;/font&gt;&lt;/tt&gt;. In languages that permit functions to be defined within other functions the solution would be to define&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;&amp;nbsp;copyIntoBuckets()&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;as a local function within the&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;while&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;loop. But C++ has no such facilities. Instead, we must create a class definition, which can be initialized with references to the appropriate values. The parenthesis operator for this class is then used as the function for the&amp;nbsp;&lt;tt&gt;&lt;font face=&quot;굴림체&quot;&gt;for_each()&lt;/font&gt;&lt;/tt&gt;&amp;nbsp;invocation in the radix sort program.&lt;/div&gt;&lt;ul&gt;&lt;pre&gt;class copyIntoBuckets {
public:
 &amp;nbsp; copyIntoBuckets
 &amp;nbsp; &amp;nbsp;&amp;nbsp; (int d, vector&amp;lt; deque&amp;lt;unsigned int&amp;gt; &amp;gt; &amp;amp; b, bool &amp;amp; f) 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : divisor(d), buckets(b), flag(f) {}

 &amp;nbsp; int divisor;
 &amp;nbsp; vector&amp;lt;deque&amp;lt;unsigned int&amp;gt; &amp;gt; &amp;amp; buckets;
 &amp;nbsp; bool &amp;amp; flag;

 &amp;nbsp; void operator () (unsigned int v)
 &amp;nbsp; { &amp;nbsp; int index = (v / divisor) % 10;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; // flag is set to true if any bucket 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; // other than zeroth is used
 &amp;nbsp; &amp;nbsp; &amp;nbsp; if (index) flag = true; 
 &amp;nbsp; &amp;nbsp; &amp;nbsp; buckets[index].push_back(v);
 &amp;nbsp; }
};&lt;/pre&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>자료구조, 알고리즘</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/222</guid>
<comments>https://genesis8.tistory.com/222#entry222comment</comments>
<pubDate>Fri, 29 Jan 2016 20:54:15 +0900</pubDate>
</item>
<item>
<title>쿠키(cookie)와 세션(Session)</title>
<link>https://genesis8.tistory.com/220</link>
<description>&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;출처 :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;위키백과&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키(cookie)란 하이퍼 텍스트의 기록서(HTTP)의 일종&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;으로서 인터넷 &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;사용자가 어떠한 웹사이트를 방문할 경우 그 사이트가 사용하고 있는 서버에서&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt; 인&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;터넷 사용자의 컴퓨터에 설치하는 작은 기록 정보 파일&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;을 일컫는다.&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;'쿠키'라는 이름은 그림 동화 '헨젤과 그레텔'에서 가져온 것이다. 헨젤과 그레텔이 지나온 길을 표시하기 위해 쿠키 조각을 떨어뜨리며 표시했다는 이야기에서 따온 것이다.&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;HTTP 쿠키, 웹 쿠키, 브라우저 쿠키라고도 한다. 이 기록 파일에 담긴 정보는 인터넷 사용자가 같은 웹사이트를 방문할 때마다 읽히고 수시로 새로운 정보로 바뀐다. &lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;이 수단은 넷스케이프의 프로그램 개발자였던 루 몬툴리(Lou Montulli)가 고안한 뒤로 오늘날 &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;많은 서버 및 웹사이트들이 브라우저의 신속성을 위해 즐겨 쓰고 있다.&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키는 소프트웨어가 아니다. &lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키는 컴퓨터내에서 프로그램처럼 실행될 수 없으며 바이러스를 옮길 수도, 악성코드를 설치할 수도 없다. 하지만 스파이웨어를 통해 &lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;유저의 브라우징 행동을 추적하는데에 사용될 수 있고, 누군가의 쿠키를 훔쳐서 해당 사용자의 웹 계정 접근권한을 획득할 수도 있다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;출처 : http://crynut84.tistory.com/74&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;100%&quot; style=&quot;border-collapse: collapse; border-spacing: 0px; color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;100%&quot; bocolor=&quot;#c6ff70&quot; style=&quot;height: 24px;&quot;&gt;&lt;h2 style=&quot;margin: 0px; padding: 0px; font-size: 1.2em; line-height: 1.4em;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;#1. 웹 서버 동작 원리&lt;/span&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;웹 사이트 상태관리의 필요성을 알기 위해 웹 서버와 클라이언트(웹 브라우저)가 어떠한 방식으로 동작 하는지를 먼저 알아 보겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;Fig1을 보면 아주 간단한 원리로 동작 하는 것을 알 수 있는데요. 클라이언트가 HTTP 프로토콜을 사용하여 웹 서버로 요청(Request)을 하게 되면 웹 서버는 해당 하는 HTML을 웹 브라우저로 전송 해 주고 웹 브라우저는 응답(Response) 받은 HTML을 파싱하여 사용자에게 보여주게 됩니다. 여기서 ‘요청’이란 우리가 웹 브라우저의 주소 표시줄에&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://crynut84.tistory.com/&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;http://crynut84.tistory.com&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;이라고 입력 하는 행위나 웹 사이트의 링크를 마우스로 클릭하는 행위 등을 말합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;웹 사이트는 다시 정적인 웹 사이트와 동적인 웹사이트로 나눌 수 있습니다. 정적인 웹 사이트는 웹 서버에서 .HTML 파일을 완성된 .HTML 파일을 가지고 있다가 클라이언트의 요청이 있을 시 해당하는 .HTML 파일을 돌려 주는 형태입니다. 당연히 HTML 페이지의 내용들은 이미 결정 되어있어 있으므로 클라이언트의 상태, 방문정보, 시각등의 내용에 관계없이 항상 동일한 HTML 페이지를 보여줍니다. 요즘은 이런 웹사이트는 거의 없을 듯 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;동적인 웹 사이트는 사용자의 액션에 따라 웹 사이트가 다르게 동작 하는 것을 말합니다. 예를들어 요즘 웹 사이트는 거의 로그인이라는 인증 과정을 거치게 되고, 로그인을 하면 ‘전호진님 환영합니다’라고 환영 인사도 해줍니다. 또한 게시판은 검색어에 따라 다른 결과를 보여주게 되고, 사용자 입맛에 맛게 정렬도 할 수 있습니다. 이와같이 &lt;span style=&quot;color: rgb(9, 0, 255); background-color: rgb(255, 255, 255);&quot;&gt;요즘 일반적으로 볼 수 있는 사용자와 웹사이트가 서로 상호작용을 하는 웹 사이트를 동적인 웹사이트&lt;/span&gt;라고 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;동적인 웹사이트를 만드는 기술은 ASP.NET, JSP, ASP, PHP, CGI등 여러 가지가 있습니다. 마이크로소프트의 동적인 웹사이트를 만드는 기술인 ASP.NET의 동작 원리(Fig2)를 보면 정적 웹사이트와 조금 다른 것을 알 수 있는데요.&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;클라이언트가 요청하게 되면 웹 서버는 요청에 대한 적절한&amp;nbsp; HTML을 새롭게 생성 합니다. 요청에 대한 일련의 처리(로직 수행)를 수행하게 되고 처리 결과를 다시 클라이언트에 돌려 주게 되는데 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;동적인 웹 사이트라고 해도 클라이언트가 받는 최종 응답은 정적인 HTML 페이지&lt;/span&gt;입니다. 예를들어 게시판에 여러 게시글이 있는데 사용자가 ASP.NET을 검색어로 입력하고 검색 버튼을 누르게 되면 이 요청을 웹서버가 받아서 게시글 중 ASP.NET이 들어간 결과만 찾아서 형식에 맞는 HTML을 구성하게 되고 클라이언트에 응답하주게 되는 것입니다. 이렇게 동적인 처리를 위해 ASP.NET과 같은 웹 기술이 필요하게 되고, 모든 처리는 웹 서버에서 수행되며, 클라이언트의 입장에서는 정적인 웹 사이트와 동일하게 웹 서버에 요청을 하고 응답받은 결과를 파싱하여 보여 주게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;100%&quot; style=&quot;border-collapse: collapse; border-spacing: 0px; color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;100%&quot; bocolor=&quot;#c6ff70&quot;&gt;&lt;h2 style=&quot;margin: 0px; padding: 0px; font-size: 1.2em; line-height: 1.4em;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;#2. 상태 관리(State Management)&lt;/span&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;웹 사이트를 사용하는 사용자는 HTTP GET방식이나 HTTP POST방식을 사용하여 웹 서버로 페이지를 요청하게 되고, 웹 브라우저는 웹 서버에서 응답받은 HTML을 파싱하여 렌더링하게 됩니다. 이러한 일련의 주기를 ‘라운드트립(Round Trip)’ 이라고 합니다&lt;/span&gt;.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;그런데 HTTP 프로토콜은 상태를 저장 할 수 없는 프로토콜&lt;/span&gt;입니다. 이 말은 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;클라이언트의 요청이 왔을 때&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;웹 서버는 해당 요청에 대한 응답인 HTML을 보내주고 연결을 끊어버린다&lt;/span&gt;는 것입니다. 그렇기 때문에 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;라운드트립 시 페이지에 있는 컨트롤의 사용자 입력정보나 페이지의 정보들이 모두 손실&lt;/span&gt; 되게 됩니다.&amp;nbsp; 예전에 사용하던 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;정적인 웹사이트(일방적으로 보기만 하는 웹사이트)에서는 문제가 되지 않지만 동적인 웹사이트에서는 사용자의 요청이나 컨트롤의 입력정보를 유지할 필요가 있기 때문에 ASP.NET은 상태 관리를 할 수 있는 여러가지 기능을 제공&lt;/span&gt;합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;상태관리의 정보를 저장하는 장소에 따라 두가지로 분류 할 수 있는데, 웹 서버에 저장하는 경우와, 클라이언트에 저장하는 경우&lt;/span&gt;가 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;100%&quot; bgcolor=&quot;#ffffe0&quot; style=&quot;border-collapse: collapse; border-spacing: 0px; color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#ffffe0&quot; valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;▶ 상태 정보를 클라이언트에 저장하는 방식&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;뷰 상태(View State)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;컨트롤 상태(Control State)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;숨겨진 필드(Hidden Field)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;쿠키(Cookie)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿼리 문자열(Query String)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;▶&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;상태 정보를 웹 서버에 저장하는 방식&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;응용 프로그램 상태(Application State)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;세션(Session)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;프로필 속성(Profile Property)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;데이터베이스(Database)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;두가지 방식은 장단점이 존재 하는데요. 일반적으로 데이터가 작고, 중요하지 않은(보안 등의 이유)정보는 클라이언트 측에서 관리하고, 나머지는 웹 서버에서 관리 하는 것이 좋습니다. 여러가지 상태관리 기능 중 Cookie와 Session에 관해 자세히 알아보겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;table border=&quot;0&quot; cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;100%&quot; bocolor=&quot;#c6ff70&quot; style=&quot;border-collapse: collapse; border-spacing: 0px; color: rgb(102, 102, 102); font-family: dotum; font-size: 12px; line-height: 18px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; width=&quot;100%&quot; bocolor=&quot;#c6ff70&quot;&gt;&lt;h2 style=&quot;margin: 0px; padding: 0px; font-size: 1.2em; line-height: 1.4em;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;#3. 쿠키(Cookie)&lt;/span&gt;&lt;/h2&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p align=&quot;center&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키는 요청 및 응답하는 과정에 포함되는 텍스트 정보이고 쉽게 구현하여 사용 할 수 있는 방법중에 하나입니다. 일반적인 브라우저에서 최대 4KB의 텍스트 정보를 담을 수 있으며 하나의 사이트는 20개만 허용되며, 모든 사이트를 통틀어서 300개로 제한 됩니다. 만약 이 범위를 넘어 더 많이 저장 하려고 할 경우에는 가장 오래된 쿠키부터 삭제되므로 사용의 주의해야하고, 4KB로 비교적 작은 크기만을 저장하기 때문에 적은 양의 데이터나 ID, 최근 읽은 글, 최근 본 상품과 같은 식별자를 저장할 때 사용하는 것이 적합합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0px; padding: 0px; font-size: 1.2em; color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;1. 쿠키의 동작 방식&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키는 서버에서 생성하여 클라이언트의 브라우저에서 관리하기 때문에 요청시 쿠키를 생성하고 브라우저를 닫을때 쿠키를 파괴합니다. 응답을 통해 얻어온 쿠키는 만료시간 여부에 따라 클라이언트의 PC에 파일로 저장하게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;쿠키의 생성 주기를 살펴보면 처음으로 페이지를 요청 할 경우 웹 서버에서는 쿠키를 생성하게 되고, 페이지를 돌려 줄때 HTTP 헤더에 쿠키를 포함하여 돌려 주게 됩니다. 이렇게 넘겨 받은 쿠키는 클라이언트에서 관리 하고 있다가, 다음번 요청때 쿠키를 함께 전송하게 되고, 서버에서는 쿠키 정보를 읽어 이전 상태 정보를 알 수 있게 됩니다. 이때 웹 서버는&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;정보를 변경 할 필요가 있을때 쿠키를 업데이트하여 다시 변경된 쿠키와 함께 응답하게 됩니다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 0px; padding: 0px; font-size: 1.2em; color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;2. ASP.NET에서 쿠키 사용&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키는 서버로 부터 응답받은 사항이기 때문에 HttpResponse 객체를 통해 클라이언트로 전송 됩니다. 쿠키에 정보를 저장하는 방법은 두가지가 있습니다. Page클래스의 Response 객체를 사용하는 것과 HttpCookie 클래스를 사용하는 방법입니다.&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush:csharp&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;//Response 사용 
Response.Cookies[&quot;쿠키명1&quot;].Value = &quot;쿠키 예제;
Response.Cookies[&quot;쿠키명1&quot;].Expires = DateTime.Now.AddMinutes(30); 

//HttpCookie 클래스 사용 HttpCookie cookie = new HttpCookie(&quot;쿠키명2&quot;);
cookie.Value = &quot;쿠키 예제&quot;;
cookie.Expires = DateTime.Now.AddSeconds(30); 
Response.Cookies.Add(cookie);
&lt;/span&gt;&lt;/pre&gt;&lt;p align=&quot;center&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;-Code1. 쿠키 저장-&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키명1과 쿠키명2라는 이름을 사용하는 쿠키를 생성 하였고 각각 Value 속성을 통해 상태유지에 필요한 값을 넣어 주었습니다. Expires 속성은 만료 기간인데, 이 속성을 설정하면 쿠키가 클라이언트의 컴퓨터의 파일의 형태로 저장됩니다.&amp;nbsp; 만료기간을 설정하지 않은 쿠키는 브라우저의 메모리에서 관리됩니다. Code1에서 쿠키명1은 30분후에 쿠키를 지우며, 쿠키명2는 30초 후에 쿠키를 지우도록 설정 하였습니다. 만료시간이 지난 쿠키는 클라이언트가 쿠키를 생성한 웹 사이트에 다시 요청을 보낼때 삭제됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;출처 : http://88240.tistory.com/entry/Session-%EC%9D%B4%EB%9E%80&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;left&quot; style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;세션이란&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;일정 시간동안&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;같은 사용자(정확하게 브라우저를 말한다)로 부터 들어오는&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;일련의 요구를 하나의 상태로 보고 그 상태를 일정하게 유지시키는 기술&lt;/span&gt;이라고 한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;또한 여기서&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(9, 0, 255);&quot;&gt;일정 시간이란 방문자가 웹 브라우저를 통해 웹 서버에 접속한 시점으로부터 웹 브라우저를 종료함으로써 연결을 끝내는 시점&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;을 말하며&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;즉, 방문가자가 웹서버에 접속해 있는 상태를 하나의 단위로 보고 세션이라고 칭한다는 것.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;쿠키&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;의 경우는 방문자의 정보를&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;방문자 컴퓨터의 메모리에 저장&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;하는 것을 말한다&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;예를 들자면 ID나 비밀번호를 저장하거나 방문한 사이트를 저장하는데에 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;(IE 인터넷 옵션에서 검색 기록 삭제할때 임시 파일, 열어본 페이지 목룍, 쿠키, 저장된 암호 및 웹 양식 정보 삭제라고 되어있지 아니한가)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;세션&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;은 방문자의 요청에 따른 정보를 방문자 메모리에 저장하는 것이 아닌 웹 서버가 세션 아이디 파일을 만들어 서비스가 돌아가고 있는&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;u style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;서버에 저장&lt;/span&gt;&lt;/u&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt; color: rgb(255, 0, 0);&quot;&gt;을 하는것을 말한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;프로세스들 사이에서 통신을 하기 위해 메시지 교환을 통해 서로를 인식한 이후부터 통신을 마칠 때까지의 기간동안 서버에 잠시 방문자 정보를 저장한다는 것.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;그래서 쿠키와 달리 세션은 사용자들의 로그인 정보에 대한 보안을 한층 업그레이드 할 수 있어&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif;&quot;&gt;웹사이트에 방문하여 계속 접속을 유지할 때 이전의 접속 정보를 이용할 수 있는 방법으로 많이들 사용하는 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/033B5F5050C9992408&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; display: block; max-width: 100%; height: auto;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;u style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;1. HTTP Session이란?&lt;/span&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;1) session이란 서버가 해당 서버(웹)로 접근(request)한 클라이언트(사용자)를 식별하는 방법&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;2) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;서버(웹)는 접근한 클라이언트(사용자)에게 response-header field인 set-cookie 값으로 클라이언트 식별자인 session-id(임의의 긴 문자열)를 발행(응답)한다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;3) 서&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;버로부터 발행(응답)된 session-id는 해당 서버(웹)와 클라이언트(브라우저) 메모리에 저장&lt;/span&gt;된다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif;&quot;&gt;이때 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;클라이언트 메모리에 사용되는 cookie 타입은 세션 종료 시 같이 소멸되는 &quot;Memory cookie&quot;가 사용된다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;4) 서버로부터 발행된 session(데이터)을 통해 개인화(사용자)를 위한 데이터(userInfo 등..)로 활용할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;u style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;2. HTTP Session 동작 순서&lt;/span&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;1) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;클라이언트(사용자)가 서버로 접속(http 요청)을 시도&lt;/span&gt;한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;2) 서&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;버(웹)는 접근한 클라이언트의 request-header field인 cookie를 확인해 클라이언트가 해당 session-id를 보내왔는지 확인&lt;/span&gt;한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;3) 만약 클라이언트로 부터 발송된 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;session-id가 없다면, 서버는 session-id를 생성해 클라이언트에게 response-header field인 set-cookie 값으로 session-id(임의의 긴 문자열)를 발행(응답)&lt;/span&gt;한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif;&quot;&gt;방문자가 서버에 접속 시도 후 서버 접근한 클라이언트(방문자)가 seesion id를 보내왔는지 확인 했는데 없다면 서버는 session id를 생성하는 부분을&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;우리가 많이들 쓰고 있는&lt;/span&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;session_start()&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;함수인듯 하다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;다른 블로그에서&amp;nbsp;세션을 등록하기 위해서는 가장먼저 세션을 초기화 하여 세션을 생성하고, 현재의 세션 아이디를 활성화시키기 위해&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif;&quot;&gt;session_start 함수를 사용한다 했으니...&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;또한 세션을 등록할때&lt;/span&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;$_SESSION['변수명']&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;이렇게 쓰며&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;위에 설명중 세션 종료시 같이 소멸된다라고 써있는데 물론 브라우저를 끄며서 종료된다는 개념이지만 우리는&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;unset($_SESSION['변수명']);&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;와&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;font-family: Gulim, 굴림, AppleGothic, sans-serif; font-size: 9pt;&quot;&gt;session_destory();&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif;&quot;&gt;이라는 걸 알고 있지요&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 'Nanum Gothic', serif; font-size: 14px; line-height: 20px; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5; font-family: Gulim, 굴림, AppleGothic, sans-serif;&quot;&gt;(혹시나 하여 간단한 설명을 하자면 좌측은&amp;nbsp;세션 소멸과 우측은 세션&amp;nbsp;종료때 사용한다)&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>서버 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/220</guid>
<comments>https://genesis8.tistory.com/220#entry220comment</comments>
<pubDate>Fri, 29 Jan 2016 10:49:28 +0900</pubDate>
</item>
<item>
<title>ASP(Active Server Page)</title>
<link>https://genesis8.tistory.com/218</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처 :&amp;nbsp;위키백과&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;액티브 서버 페이지(Active Server Page, 줄여서 ASP)는 마이크로소프트사에서&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 동적으로 웹 페이지들을 생성하기 위해 개발한 서버 측 스크립트 엔진&lt;/span&gt;이다. 최초 버전은 Windows NT 4.0 옵션 팩(1998 상반기)에 포함하여 인터넷 정보 서비스(IIS)에 추가되는 식으로 출시되었고, 나중에 윈도 서버(윈도 2000 서버의 최초 버전 이후로)의 무료 구성 요소로 포함되었다. ASP.NET이 ASP를 대체하고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ASP 2.0은 6개의 내장 객체들을 제공한다: Application, ASPError, Request, Response, Server, Session. 예를 들어, Session은 페이지 간의 변수의 상태를 유지하는 쿠키 기반의 세션을 나타낸다. 동적 스크립팅 엔진의 컴포넌트 객체 모델(COM) 지원은 ASP 웹사이트들이 DLL들 같은 컴파일 된 라이브러리들을 함수처럼 접근 가능하게 해 준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;.asp 파일 확장자를 가진 웹페이지는 ASP를 사용하지만, 몇개의 웹 사이트들은 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;보안 목적으로 스크립팅 언어를 숨기는 경우도 있다&lt;/span&gt; (예를들면 더 일반적인 .htm 또는 .html 확장자를 사용하기)&lt;/span&gt;. &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;.aspx 확장자를 가진 페이지들은, ASP에서 서버측 스크립팅 보다 더 빠르고 강력하게 해주는,&lt;/span&gt; ( 마이크로소프트의 .NET 프레임워크 기반의)&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; ASP.NET으로 컴파일되었고&lt;/span&gt;, 구동 시에 해석되지만; ASP.NET 페이지들은 여전히 일부 ASP 스크립팅을 포함하고 있을 것이다. ASP.NET의 도입은 원천 기술에 대해서는 오랜 ASP용어를 사용하였다. 프로그래머들은 대부분의 ASP페이지를 VBScript를 사용하여 작성하였지만, 그 외에도 동적 스크립팅 엔진은 @Language 지시문이나 &amp;lt;script language=&quot;language&quot; runat=&quot;server&quot;&amp;gt; 구문으로 선택하여 사용 할 수 있다. JScript(마이크로소프트가 구현한 ECMAScript)가 보통 사용가능한 다른 언어이다. PerlScript(Perl의 파생언어)와 다른 것들도 타사 제공 형태로 동적 스크립팅 엔진에 설치해서 사용 가능하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마이크로소프트의 액티브 스크립팅 표준과 호환되는 어떠한 스크립팅 언어라도 ASP에서 사용할 수 있다. 기본 스크립팅 언어(고전 ASP에서)는 VB스크립트이다.: 브라우저가 웹 서버에서 ASP 파일을 요청하면 서버는 프로세서를 호출하고, 프로세서는 요청된 파일을 읽고 스크립트 명령을 실행하여 결과를 웹페이지 형태로 브라우저에 전송한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;2 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;3 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt; &lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;4 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;5 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;더 단순한 형태로는 다음과 같다.&lt;/p&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;2 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;3 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;4 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;lineno&quot; style=&quot;float: left;&quot;&gt;5 &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;이 예는 &quot;Hello World!&quot;를 HTML 문서의 body로 출력한다.&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;여기에는 액세스 데이터베이스로 연결하는 방법에 대한 한 예가 있다.&lt;/p&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;&amp;lt;%&lt;/span&gt;
	&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oConn&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;ADODB.Connection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;oConn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open&lt;/span&gt; &lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;DRIVER={Microsoft Access Driver (*.mdb)}; DBQ=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MapPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;DB.mdb&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rsUsers&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;ADODB.Recordset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;rsUsers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open&lt;/span&gt; &lt;span class=&quot;s&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;SELECT UserID FROM Users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oConn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;nt&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1 id=&quot;firstHeading&quot; class=&quot;firstHeading&quot; lang=&quot;ko&quot; style=&quot;font-weight: normal; margin: 0px 0px 0.25em; overflow: visible; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(170, 170, 170); font-size: 1.8em; line-height: 1.3; font-family: 'Linux Libertine', Georgia, Times, serif; background: none;&quot;&gt;ASP.NET&lt;/h1&gt;&lt;div&gt;ASP.NET은 마이크로소프트사가 개발하여 판매하는 웹 애플리케이션 프레임워크이며 프로그래머들이 동적인 웹 사이트, 웹 애플리케이션, 웹 서비스를 만들 수 있게 도와 준다. 2002년 1월에 닷넷 프레임워크 버전 1.0과 함께 처음 출시되었으며 마이크로소프트의 액티브 서버 페이지 (ASP) 기술의 뒤를 잇는다.&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; ASP.NET은 공통 언어 런타임 (CLR)을 기반으로 작성&lt;/span&gt;되며 프로그래머들이 닷넷 언어가 사용된 ASP.NET 코드를 기록할 수 있게 도와 준다. ASP.NET SOAP 확장 프레임워크는 ASP.NET 구성 요소가 SOAP 메시지를 처리할 수 있게 도와 준다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;http://www.taeyo.pe.kr/lecture/Dukyoung/DYsASP02.asp&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;1. ASP 란 무엇인가?&lt;/font&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;ASP 란 '&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;Active Server Pages&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 의 약자이며, 우리 말로 번역하자면&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;'&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;동적으로 서버에서 작동하는 페이지&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 정도로 해석될 수 있을 것 같습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;동적(動的, Active) 이라.. 그렇다면 반대로 '정적(靜的, static)' 인 페이지도 있다는 뜻일까요?&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;맞습니다. 정적인 페이지도 있습니다. 우리가 알고 있는&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;HTML&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;이 바로 그것입니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;'다 좋은데.. 정적인건 뭐고 동적인건 뭔지 말을 해줘야 할거 아냐!!'&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;라고 외치시는 분들을 위해(한문 공부를 하십셔~) 잠시 그 개념의 차이를 말씀 드리겠습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;아주 간단하지만 의미 있는 예를 하나 들어보도록 하지요.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;페이지를 하나 만들어서.. 이 페이지를 보고 있는 '현재 시간' 을 보여주려고 합니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이것을 HTML 과 ASP 페이지로 하나씩 만들어 보도록 하겠습니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(31, 218, 17);&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: rgb(31, 218, 17);&quot;&gt;&amp;nbsp;링크가 죽었지만 내용으로 충분하다&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;위에 보이는 두개의 페이지는.. 얼핏 보기에 똑같아 보입니다만 중대한 차이가 있습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;두 페이지의 '새로고침' 링크를 살포~시 클릭하시면 그 차이를 발견하실 수가 있습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;어때요? 발견하셨나요?&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그렇습니다&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;. HTML 페이지에서는 새로고침을 아무리 눌러도 현재 시간이 변하지 않습니다만,&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px; color: rgb(9, 0, 255);&quot;&gt;ASP 페이지에서는 새로고침을 누를때마다 현재 시간이 바뀌는 것을 보실 수가 있습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이유는 간단합니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;HTML 은 언제 어느곳에서 보더라도&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;우리가 작성한 모습 그대로&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;일 수 밖에 없습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;다시 말해, HTML 페이지 안에는 시간을 '2003-04-15 오전 10:08:07 입니다.'&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;라고 직접 입력할 수밖에 없다는 말씀입니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이렇게 하면 화면에 보여지는 시간이 현재 시간인 것처럼 보여지지만,&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;실제로는 미리 입력되어 있는 '&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;이미 작성된 문자열&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 에 불과하다는 것을 알 수 있습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그렇기 때문에 HTML 을 변하지 않는, '정적(靜的, static)' 이라고 표현하는 것이지요.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;좋습니다.. 그렇다면 ASP 는 과연 무언가 다른걸까요?&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그렇습니다. ASP 는 HTML 과는 확실히 다릅니다. (두둥~~)&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ASP 는 어떤 특별한 과정을 거쳐서, 작성자의 의도대로 HTML 을 바꿀 수 있는 것&lt;/span&gt;입니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;우리는 지난 시간에 '서버' 와 '클라이언트' 를 공부하면서 HTML 의 작동 원리에 대해서 잠시 생각해 보았습니다. 기억이 나시는지요? (안나신다굽쇼? -_-a)&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;좋습니다. 친절한 설명을 위해서 HTML 의 실행 과정 그림을 한번 보도록 하겠습니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;'클라이언트가 서버로 HTML 페이지를 요구하면 서버에서는 별다른 처리 없이 HTML 을 클라이언트의 웹브라우저로 보내준다' 는 것이 바로 HTML 의 처리 과정이었습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br /&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2335434356A9C41930&quot; filemime=&quot;image/gif&quot; filename=&quot;sample01.gif&quot; height=&quot;109&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;ASP 도 HTML 과 비슷한 과정을 거칩니다만..&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;중요한 하나의 과정&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이 중간에 추가됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;다음 그림을 보면서 말씀드리도록 하겠습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:397px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/254AA03D56A9C41F1F&quot; filemime=&quot;image/gif&quot; filename=&quot;sample02.gif&quot; height=&quot;103&quot; width=&quot;397&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;클라이언트가 서버로 페이지를 요구하는 것은 똑같습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그런데 HTML 이 아닌 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;ASP 페이지를 요구하는 경우, 서버에서는 이것을 HTML 처럼 바로 돌려보내 주는 것이 아니라&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;ASP.DLL&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이라는 특이한 친구를 실행시키고 나서,&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;그 결과물(그 결과로 작성된 HTML)&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;을 클라이언트에게 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;돌려보내 준다&lt;/span&gt;는 것입니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이 한 가지의 과정의 추가로 인해서 HTML 과 ASP 는 엄청난 차이를 가지게 됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;음.. 아직 잘 이해가 안가시나요...? 좋습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그렇다면 앞에서 예를 들었던 '현재 시간' 을 표시하는 두 페이지의 소스를 비교해 보겠습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;다음의 내용을 유심히 보시기 바랍니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;1&quot; width=&quot;100%&quot; style=&quot;font-family: verdana;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td width=&quot;50%&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;&lt;table cellspacing=&quot;1&quot; cellpadding=&quot;2&quot; width=&quot;100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#b0b9cb&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;100%&quot;&gt;&lt;tbody&gt;&lt;tr bgcolor=&quot;#f0f0f0&quot;&gt;&lt;td align=&quot;middle&quot; colspan=&quot;2&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;&lt;font color=&quot;red&quot;&gt;HTML&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr bgcolor=&quot;#fefefe&quot;&gt;&lt;td align=&quot;middle&quot; height=&quot;100&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;현재 시간은&lt;br /&gt;&lt;br /&gt;2003-04-15 오전 10:08:07 입니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;td width=&quot;50%&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;&lt;table cellspacing=&quot;1&quot; cellpadding=&quot;2&quot; width=&quot;100%&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#b0b9cb&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;5&quot; width=&quot;100%&quot;&gt;&lt;tbody&gt;&lt;tr bgcolor=&quot;#f0f0f0&quot;&gt;&lt;td align=&quot;middle&quot; colspan=&quot;2&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;&lt;font color=&quot;red&quot;&gt;ASP&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr bgcolor=&quot;#fefefe&quot;&gt;&lt;td align=&quot;middle&quot; height=&quot;100&quot; style=&quot;font-size: 11px; line-height: 16.5px; font-family: verdana;&quot;&gt;현재 시간은&lt;br /&gt;&lt;br /&gt;&amp;lt;%=now%&amp;gt; 입니다.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;전체 소스가 아닌 일부분의 소스만 올려놓았습니다. 그 이유는 HTML 과 ASP 의 차이를 말씀드리려는 데에는 이 소스만으로도 충분할 것 같네요. (사..사실은 귀찮아서... -_-a)&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;HTML&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;페이지에서는 보시다시피 시간을&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;직접 입력&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;해버렸습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그러므로 위에서 말씀드렸던 것처럼 백날~ 새로고침을 해도 시간은 바뀌지 않습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;하지만 ASP 는&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;&amp;lt;%=now%&amp;gt;&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;라는 약간 낯선 형태의 무언가가 등장했습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;자세한 설명은 다음에 드릴 예정입니다만 이것의 의미를 간략하게 말씀드리자면,&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;'&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;ASP 안에서 현재 시간을 의미하는 now 라는 함수를 호출하여 출력하세요&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 라는 뜻이 됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;(모든 HTML 태그가 '&amp;lt;' 로 열고 '&amp;gt;' 로 닫는 것과 마찬가지로, ASP 는 '&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;&amp;lt;%&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 로 열고 '&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;%&amp;gt;&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 로 닫아야 합니다. 이것은 ASP 문법의 기본이므로 반드시 알아두시기 바랍니다.)&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;때문에 페이지를 '새로 고침' 하면, HTML 페이지는 단순히 입력된 내용만을 전달해 주지만,&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;ASP 페이지는 페이지 안에 있는 ASP 소스(&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;&amp;lt;%=now&amp;gt;&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;)를 '&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;ASP.DLL&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 에 통과시킨 다음,&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그 결과(현재 시간)를 HTML 형식으로 받아서 클라이언트에게 출력해 주게 되는 것입니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이 과정을 그림으로 표현하자면 다음과 같습니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:461px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2703A73856A9C4912A&quot; filemime=&quot;image/gif&quot; filename=&quot;sample03.gif&quot; height=&quot;360&quot; width=&quot;461&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;어떻습니까? 이제 ASP 라는 친구가 조금은 친숙해 지셨나요?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그렇다면.. 이제&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;ASP 의 탄생 배경&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;에 대해서 잠시 살펴보도록 하겠습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;(솔직히 이런 역사 시간 같은 이야기는 지루한 게 사실이지만, 그래도 언제, 누가, 어떻게 만들었는지 정도는 상식으로 알아두시는 것도 좋지 않을까요? ^^)&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;ASP는 마이크로소프트(Microsoft) 사에 의해서 1996년 7월 16일에 데날리(Denali) 라는 코드명으로 공식적으로 발표되었습니다. 이것의 베타 버전은 1996년 11월에 배포되었고, ASP 정식 버전 1.0 이 세상에 선보이게 된 것은 1996년 12월 12일이었습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;마이크로소프트 사에서 1997년 3월에 IIS 웹서버를 제공하면서부터 ASP 는 더욱 많이 알려지게 되었으며, 98년에는&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;IIS 4.0 과 퍼스널 웹 서버 4.0 (PWS 4.0)&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;을 발표하게 됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이 둘은 ASP 버전 2.0을 지원했으며, ASP 1.0 에 비해 많은 성능 향상을 가져오게 됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;(실제로 우리 나라에서 많은 개발자들이 ASP 에 관심을 가지게 된 때가 바로 이때였습니다.)&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;Windows 2000&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;이 배포되면서 마이크로소프트 사는 그 안에&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;IIS 5.0 과 ASP 3.0&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;을 포함하였습니다. 또한 IIS 5.0 은 Windows 2000 운영체제 안에 자연스럽게 통합 되었습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;(그래서 Windows 2000 을 설치하셨다면 좀 더 편하게 ASP 를 공부하실 수가 있습니다.)&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;2. ASP 는 어디에 쓰이는 물건인가?&lt;/font&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;도대체 이 ASP 를 가지고 무엇을 할 수가 있을까요?&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;'이 홈페이지 너무 멋진데요' 라고 한마디 써주고 싶은데, HTML 로 만든 페이지에서는 아쉽게도 그것이 불가능한 것이지요.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;ASP 의 필요성은 바로 여기서 나타납니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;ASP 페이지에서는 방문한 사람들(클라이언트)에게 글을 입력받아서 그것을 저장소 - 이것을 '&lt;/span&gt;&lt;font color=&quot;red&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;데이터베이스&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;' 라고 합니다 - 에 차곡차곡 저장한 후에, 클라이언트들이 그 페이지를 보여달라고 요청할때 그 저장소(데이터베이스)에 저장되어 있는 내용을 꺼내와서 보여주게 됩니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그렇기 때문에 ASP 로 만든 페이지에서는 새로운(최근에 작성된) 글을 보는 것이 가능합니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이런 '게시판' 기능 뿐 아니라.. ASP 가 할 수 있는 일은 상당히 다양합니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;다음이나 세이클럽 같은 사이트에 가서 여러분은 아이디와 비밀번호를 입력하고,&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;그것이 맞을 때에는 사이트 안으로 로그인 해서 들어갈 수가 있습니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;이런&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;blue&quot; style=&quot;font-size: 11px; font-family: verdana; line-height: 16.5px;&quot;&gt;회원 인증을 담당하는 페이지&lt;/font&gt;&lt;span style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&amp;nbsp;역시 ASP 로 작성 가능합니다.&lt;/span&gt;&lt;br style=&quot;font-family: verdana; font-size: 11px; line-height: 16.5px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;http://blog.daum.net/ssc1978/13852608&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;Active Server에서 제공하는 Web Page라는 뜻인데 여기서 Active Server란 마이크로소프트 웹 서버인 IIS(InternetInformation Server)안에 존재하는 Active Server Framework를 나타내는 것으로 주로 ActiveX Script를 처리하거나 DataBase와 연동하는 역할을 합니다. ASP는 하나 이상의 스크립트를 담은 일종의 HTML 페이지로서 사용자에게 보내지기 전에 일단 웹 서버에서 처리 과정을 거치게 됩니다. ASP파일은 일반 text파일로서 메모장 등에서 생성되는 파일과 같은 성질을 가지며 확장자는 asp입니다. 따라서 메모장에서 작성한 다음 확장자 .asp로 저장을 하면 됩니다. asp파일에는 HTML 태그와 JavaScript나 VBScript등의 스크립트 코드, 그리고 ASP 코드 등을 섞어 사용할 수 있습니다. JavaScript나 VBScript 등의 스크립트 코드는 &amp;lt;SCRIPT&amp;gt;,&amp;lt;/SCRIPT&amp;gt;태그 사이에 놓입니다. ASP 코드는 &amp;lt;% ~ %&amp;gt;사이에 놓입니다. 왜 ASP를 사용하나요 나모나 HTML로 홈페이지를 만들어 본 사람들은 어느 정도 시간이 지나면 자기의 생각을 홈페이지에서 마음대로 구현할 수 없다는 것에 실망을 하게 될 것입니다. 자바스크립트도 해 보고 플래쉬도 해 보지만 역시 만족스럽지 못합니다. 이 때 눈을 돌리게 되는 것이 ASP라고 할 수 있지요. 물론 대신에 CGI나 PHP라는 말도 많이 듣게 되겠지만.....그러면 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사람들은 왜 ASP를 사용하고 있을까요?&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;사용자와의 동적인 상호작용&lt;/span&gt;을 원하기 때문입니다. HTML은 기본적으로 정보를 보여주기만 합니다. 하이퍼링크를 통해 사용자가 요청을 하면 웹서버가 그 요청에 응답하여 원하는 웹 페이지를 보여주는 방식으로 작업이 진행되지요. 그것도 일종의 상호작용이라고 할 수는 있겠지만 웹 서버를 운영하는 사람과 사용자가 서로 어떤 정보를 주고 받는다든지 아니면 사용자들간에 서로 정보를 주고 받는다든지 하는 일은 기본적으로 불가능합니다. ASP는 HTML로 불가능한 이런 일들을 가능하게 해 줍니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;2) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;서버측 자원을 사용해야 하는 경우&lt;/span&gt;입니다. 사용자로부터 어떤 내용을 입력받아 데이터베이스에 저장해야 할 경우와 같은 건데 이럴 경우는 반드시 ASP를 사용해야만 합니다. 예를 들어 게시판 작성, 파일 업로드, ID 인증 등과 같이 서버에 어떤 정보를 저장하거나 저장된 정보를 이용해 일을 하는 경우에는 ASP를 사용해야만 합니다. 왜냐하면 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;HTML은 원칙적으로 클라이언트에서 번역되는 문서이기 때문에 서버의 다른 자원에 접근할 수가 없기 때문&lt;/span&gt;입니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;3) &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;스크립트의 안정적인 실행을 위해서&lt;/span&gt;입니다. 자바스크립트를 예를 들어 볼까요? 자바스크립트도 날이 갈수록 버전이 높아지고 있습니다. v1.0, v1.1, v1.2, v1.3... 그러다보면 상위 버전의 자바스크립트를 삽입한 HTML문서가 어떤 웹 브라우저에서는 의도하는대로 번역이 되지 않는 사태가 벌어질 수도 있습니다. 이럴 경우 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;서버에서 실행되는 스크립트라면 서버에서 HTML형태로 번역된 후 넘겨지게 되니까 어떤 웹 브라우저에서라도 잘못될 염려가 없을 것&lt;/span&gt;입니다.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4) &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;스크립트 소스를 감추기 위해서&lt;/span&gt;입니다. 클라이언트측 스크립트들은 HTML 속에 포함되어 서버에서 클라이언트로 전송된 다음 클라이언트의 웹 브라우저에서 번역됩니다. 따라서 사용자들은 소스보기를 통해 스크립트의 내용을 볼 수가 있습니다. 그러나, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;서버측 스크립트를 사용함으로써 개발자는 자신의 독특한 알고리즘을 감출 수가 있습니다.&lt;/span&gt; 물론 이런 목적을 위해 ASP를 사용한다는 것을 좋다고 할 수는 없겠지만 이런 기술로 밥먹고 사는 사람들에게는 꼭 필요한 것이 아닐까요?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/218</guid>
<comments>https://genesis8.tistory.com/218#entry218comment</comments>
<pubDate>Thu, 28 Jan 2016 16:29:11 +0900</pubDate>
</item>
<item>
<title>압축</title>
<link>https://genesis8.tistory.com/217</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;패킷이건&amp;nbsp;데이터건&amp;nbsp;압축하면 용량이 줄어든다. 어떻게 한 것일까?&lt;/p&gt;&lt;p&gt;압축의 원리에 대해서 조사해보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;데이터 압축은 데이터를 더 적은 저장 공간에 효율적으로 기록하기 위한 기술&lt;/span&gt;, 또는 그 기술의 실제 적용을 가리킨다. 크게 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;데이터를 더 작은 크기로 변환시키는 인코딩 과정&lt;/span&gt;과 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;저장된 데이터를 다시 불러와 원래 데이터 형태로 복원시키는 디코딩 과정&lt;/span&gt;으로 이루어진다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;이때 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;인코딩하기 전의 데이터 크기와 인코딩하고 나서의 데이터 크기의 비율을 압축률&lt;/span&gt;이라고 한다. 압축 기술의 종류에 따라 데이터의 내용을 바꾸지 않고 원래 내용 그대로 디코딩할 수 있는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;무손실 압축과 더 높은 압축률을 얻을 수 있지만 디코딩한 데이터의 세부적인 디테일을 일부 희생시키는 손실 압축이 존재한다.&lt;/span&gt; 대표적인 무손실 압축 알고리즘에는 반복 길이 부호화와 허프만 부호화 , 산술 부호화 등이 있다. 손실 압축 알고리즘은 인간의 감각 기관의 특성을 역이용하여 압축률을 높이므로, 음성, 정지화상, 동영상 등 데이터의 종류에 따라 각각 다른 알고리즘이 사용된다. MPEG 표준 압축기술이 많이 쓰인다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;압축의 원리&lt;/p&gt;&lt;p&gt;방식에 따라 다르지만 대체적으로 파일 내에서 일정한 디지털 코드 패턴이 여러번 나오는 지점에&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;그런게 있다는 것만 표시해 두고, 그 표시된 것과 원본을 그대로 복구하기 위해서 그에 관련된 사전을&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;저장한 후, 압축 파일을 만든다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이로 인해 압축률은 대부분의 경우 손실 압축보다 떨어지며, 이미 다른 압축 포맷을 적용하였다면,&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;또 다른 압축 포맷을 적용해도 별로 효용성이 없다. 또는 원래부터 압축된 데이터(이미 압축 한 파일, &lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;mp3, 동영상 등)는 또 압축해 봐야 소용 없다. 일부러 보관의 편의를 위해 다중압축파일을 만들고 또&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;통 압축 파일을 만들거나 하는 경우는 있다. 이런 경우에는 압축이라기 보다 그냥 무압축 컨테이너&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;개념으로 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1) 데이타 압축기법 분류 데이타 압축기법은 크게 다음과 같이 나눌 수 있다. 복원가능(reversible)한 방법 복원 가능한 방식은 압축된 형태의 데이타로부터 본래의 데이타를 손실없이 얻을 수 있음을 의미한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;복원가능한 방식을 noiseless coding 또는 용장성 감소(redundancy reduction)방식이라 한다. 정보통신에 있어서 취급되는 대부분의 데이타 압축기법은 용장성 감소방식을 그 대상으로 하고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;용장성 감소 기법은 먼저 정보원 데이타와 압축 후 부호어 길이에 따라 FF(Fixed to Fixed)부호 FV(Fixed to Variable)부호 VF(Variable to Fixed)부호 VV(Variable to Variable)부호 복원 불가능(irreversible)한 방법&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;복원 불가능한 방식은 압축된 형태로부터 원래의 데이타를 재생시킬 수 없음을 의미하는 것으로, 이 방식은 fidelity reducing coding 혹은 엔트로피 감소(entropy reduction) 방식이라 한다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;엔트로피 감소방식은 데이타가 포함하고 있는 유효한 정보와 불필요한 용장성 가운데 정보부분을 줄이는 방법&lt;/span&gt;으로서 일반적으로 음성, 화상 등과 같이 복원된 데이타가 어느정도 애매모호하더라도 상관없는 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;아날로그 데이타의 압축기법으로서 널리 사용&lt;/span&gt;되고 있다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;용장성 감소 방식에 비해 비교적 높은 압축률을 얻을 수 있으나 화상전송 등과 같이 특정 응용분야와 관련되어 데이타의 의미나 전후 문맥을 고려해 압축을 수행한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5; color: rgb(9, 0, 255);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5; color: rgb(9, 0, 255);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5; color: rgb(9, 0, 255);&quot;&gt;일반적으로 자주 이용되는 압축기법&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;은 다음과 같다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Run-length코딩 방식 - 입력데이타 내에서 연속적으로 반복되는 문자를 물리적으로 압축 Difference Mapping - 서로 인접하는 데이타값의 차를 이용 패턴대치(Pattern Sudstitution) - 자주 출현하는 패턴, 즉 문자 블럭을 하나의 압축부호어로 할당&amp;nbsp;&lt;/p&gt;&lt;p&gt;허프만 압축 - 원 데이타의 출현빈도에 따라 자주 나타나는 문자에는 짧은 부호를, 자주 나타나지 않는 부호에는 긴 부호어를 할당 수정&amp;nbsp;&lt;/p&gt;&lt;p&gt;허프만압축기법 - 팩시밀리 통신에 있어서 표준압축기법으로서 채용되고 있음&lt;/p&gt;&lt;p&gt;LZW(Lempel-Ziv-Welch) 압축기법 - 정보원 데이타의 통계적 성질을 이용하지 않고 데이터로부터 패턴을 생성함으로써 압축을 수행&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일반 포맷 - 일반적으로 사용하는 '무손실' 포맷방식&lt;/p&gt;&lt;p&gt;음악 포맷 - mp3,Ogg Vorbis(손실 압축 포맷) / Apple Lossless (무손실)&lt;/p&gt;&lt;p&gt;이미지 포맷 - PCX,GIF,PNG 등이 이에 속한다. GIF도 무 손실이지만 최대 256색이기 때문에, 256색을 넘는 경우 디더링을 통해서 손실 발생.&lt;/p&gt;&lt;p&gt;raw 포맷 - 디지털 카메라에 주로 쓰이는 raw 이미지 포맷을 의미.&lt;/p&gt;&lt;p&gt;동영상 포맷 - 보통 무손실 영상 포맷의 용량이 상상을 초월하므로 일반인은 쓸 일이 없다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 종류나 개요는 대충 알겠지만 무슨 원리고 어떤 건지는 모르겠다.&lt;/p&gt;&lt;p&gt;아래의 글들이 원리나 동작을 이해하는 데&amp;nbsp;도움이 됬다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처&lt;/p&gt;&lt;p&gt;http://huniv.hongik.ac.kr/~ginnie/communication/%C1%A4%BA%B8%C5%EB%BD%C507_%BE%D0%C3%E0.htm&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;li&gt;&lt;strong&gt;Run -length 압축기법&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p align=&quot;left&quot; style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;이 압축기법은 정보원 데이타 내에 계속하여 반복되는 문자열에 대해서 그림(a)와 같은 압축형식을 이용, 데이타 크기를 물리적으로 축소할 수 있는 기법이다. 그 압축 예를 그림(b)에 나타냈다.&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;br /&gt;&lt;img src=&quot;http://huniv.hongik.ac.kr/~ginnie/communication/images/0110_11.jpg&quot; width=&quot;500&quot; height=&quot;176&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal; text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;반복되는 문자를 치환해서 줄여버린다.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;li&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;허프만(Huffman) 압축기법&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;허프만 압축기법은 1954년 허프만에 의해 제안된 압축 방식으로 오늘날에도 널리 이용되고 있다. 이 기법은 정보원 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;데이타내의 각 문자에 대한 발생빈도를 조사해 자주 나타나는 문자에는 보다 짧은 부호어를, 그리고 잘 나타나지 않는 문자에는 더 긴 부호어를 할당함으로써, 전체 압축후 부호어의 길이를 원래의 정보원 길이보다 더 축소시킬 수 있&lt;/span&gt;는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;통계적 특성을 이용한 압축기법&lt;/span&gt;이다. 허프만 압축 기법의 일례를 다음 그림에 나타내었다.&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;img src=&quot;http://huniv.hongik.ac.kr/~ginnie/communication/images/0110_12.jpg&quot; width=&quot;499&quot; height=&quot;469&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;앞의 그림의 경우에 있어서는 원래의 정보원 데이타 내의 각 문자들은 3비트의 고정된 길이로서 표현되지만 허프만 압축기법에 의해 가장 자주 나타나는 A라는 문자에는‘0’, 즉 1비트의 부호어가, 그리고 가장 자주 나타나지 않는 문자인 H에는‘111111’이라는 6비트의 부호어가 할당되어 있다. 따라서 압축전과 압축후의 전체 데이타 길이의 비율을 계산한 결과 압축에 의해 20%의 축소효과를 가져왔음을 알 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;허프만 압축기법을 적용한 압축 방식으로는 현재 팩시밀리 통신의 표준으로서 권고되고 있는 수정 허프만부호가 있다. 팩시밀리 통신은 앞에서도 언급한 바와 같이 이미지정보이므로 서류의 한 줄당 최소 1728비트의 데이타가 필요하게 된다. 수정 허프만 기법은 각 줄당 1728개에 달하는 데이타가 모두 흑(‘1’인비트)과 백(‘0’인비트)으로 이루어져 있으며 또 이미지정보의 경우 흑과 백의 분포가 상호연관되어 있는 점에 착안, 각 줄당 흑과 백의 반복갯수마다 앞의 허프만 기법을 적용해 압축부호어를 구함으로써 데이타를 축소시킬수 있게 된다. 현재 통계에 의하면 이 기법에 의해 원래 팩시밀리 통신의 이미지정보를 평균 약1/8이하로 축소해 전송할 수 있다고 한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;허프만 압축기법의 또다른 변형으로는 상용 압축파일 가운데서 가장 압축률이 우수한 LHARC라는 압축파일이 채용하고 있는‘적응적 허프만부호’&lt;/span&gt;를 들 수 있다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;허프만 압축기법이 미리 조사된 정보원 데이타의 통계적 성질을 이용해 압축을 수행하는 반면&lt;/span&gt;, 이 기법은 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;원래 데이타의 각 문자 입력시마다 적응적으로 발생문자의 빈도수를 계산이 확률값에 따라 허프만부호를 할당&lt;/span&gt;하는 압축방식이다.&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;동적 압축기법은 압축수행에&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 소요되는 시간 때문에 정보통신분야 에서는 잘 이용하지 않는다&lt;/span&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;-&amp;gt; 통계를 통해서 허프만 방식을 쓰는 게 아니라, 데이터 자체를 동적으로 분석해서 그 데이터에 대한 허프만 방식을 구성해서 압축.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;li&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;LZW 압축기법&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;CCITT의 V.42vis에 채용되어 있는 LZW 압축기법은 1978년 이스라엘 Lempel과 Ziv가 처음으로 제안한 것을 1985년 현재 유니시스사의 전신인 스페리사의 Welch가 수정구현한 압축기법이다. 이 기법은 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;입력 데이타 길이를 가변으로 하고 출력부호의 길이를 고정한 기법으로서 데이타압축률이 높으며&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;내부 연산량이 작기 때문이 압축수행속도 측면에서는 현재까지 가장 빠른 것으로 평가되고 있어 CCITT의 표준권고를 기점으로 정보통신에 널리 이용될 것으로 보인다&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;처음 제안된 LZW 알고리즘은 가변길이의 입력문자열을 모두 12비트의 고정길이로 2진 부호화했으나 그후 초기 압축효율의 개선을 위해 9비트부터 시작해 문자열 테이블내에 할당된 부호어의 범위에 따라 12비트까지 2진 부호화하도록 개선된 LZW알고리즘이 주로 사용되고 있음으로 여기에서는 이 후자의 알고리즘을 대상으로 하였다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;또 LZW알고리즘을 채용하고 있는 상용 압축파일에는 국내에서 자주 쓰이고 있는 PKARC, PKZIP 등이 있다. LZW알고리즘에 있어서 문자열 테이블내에 생성되는 문자열의 개수는 사용시스템의 허용능력에 따라 확장할 수 있다. 상용 압축파일인 PKARC는 테이블내 최대 문자열 엔트리를 4096으로 제한하고 있으며 PKZIP은 이를 8192로 제한하고 있다. 일반적으로 허용가능한 문자열 엔트리를 늘릴수록 압축률은 향상된다. CSLIP(Compressed Serial Line Interface Protocol, CSLIP은 SLIP(Serial Line Interface Protocol)의 변형된 프로토콜로 IP패켓을 전화선과 같은 직렬회선(Serial line)에 전송하는데 이용된다. SLIP과 CSLIP은 같은 용도로 사용되나 CSLIP은 압축된 패켓헤더를 사용하므로서 SLIP보다 효율적이다. 압축은 Van Jacobson 방법이 이용되는데 연속되는 패켓의 차이만을 전송하므로서 압축기능을 수행한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic'; font-size:12pt; line-height: normal;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처 : http://sonhy1.tistory.com/36&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt; 목 &amp;nbsp; 차 &amp;gt;&lt;br /&gt;1 Prologue 3&lt;br /&gt;2 Introduction 4&lt;br /&gt;3 Run-Length 6&lt;br /&gt;3.1 Run-Length 압축 알고리즘 6&lt;br /&gt;3.2 Run-Length 압축 복원 알고리즘 10&lt;br /&gt;3.3 Run-Length 압축 알고리즘 전체 구현 11&lt;br /&gt;4 Lempel-Ziv 19&lt;br /&gt;4.1 Lempel-Ziv 압축 알고리즘 19&lt;br /&gt;4.2 Lempel-Ziv 압축 복원 알고리즘 26&lt;br /&gt;4.3 Sliding Window를 이용한 Lempel-Ziv 알고리즘의 구현 27&lt;br /&gt;5 Variable Length 39&lt;br /&gt;6 Huffman Tree 43&lt;br /&gt;6.1 Huffman 압축 알고리즘 51&lt;br /&gt;6.2 Huffman 압축 복원 알고리즘 56&lt;br /&gt;6.3 Huffman 압축 알고리즘 구현 60&lt;br /&gt;7 JPEG (Joint Photographic Experts Group) 72&lt;br /&gt;7.1 JPEG이란 72&lt;br /&gt;7.2 다른 기술과의 비교 72&lt;br /&gt;7.3 압축 방법 73&lt;br /&gt;7.4 Baseline 압축 알고리즘 75&lt;br /&gt;7.5 JPEG의 실제 압축 / 복원 과정 76&lt;br /&gt;7.6 확장 JPEG 79&lt;br /&gt;8 MPEG (Moving Picture Expert Group) 80&lt;br /&gt;8.1 MPEG의 개념 80&lt;br /&gt;8.2 MPEG의 표준 81&lt;br /&gt;8.2.1 MPEG 1 81&lt;br /&gt;8.2.2 MPEG 2 82&lt;br /&gt;8.2.3 MPEG 4 83&lt;br /&gt;8.3 MPEG의 기본적인 압축 원리 84&lt;br /&gt;8.3.1 시간,공간의 중복성 제거 84&lt;br /&gt;8.3.2 I,P,B영상 86&lt;br /&gt;9 Conclusion 87&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt; 그 림 목 차 &amp;gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 3‑1&amp;gt; Run-Length 압축 알고리즘 10&lt;br /&gt;&amp;lt;그림 3‑2&amp;gt; 압축 파일 헤더 구조 12&lt;br /&gt;&amp;lt;그림 4‑1&amp;gt; 슬라이딩 윈도우와 해시테이블 22&lt;br /&gt;&amp;lt;그림 5‑1&amp;gt; 8비트에서 7비트로 줄이는 압축 알고리즘 39&lt;br /&gt;&amp;lt;그림 5‑2&amp;gt; 문자 코드의 재구성 40&lt;br /&gt;&amp;lt;그림 5‑3&amp;gt; &amp;lt;그림 5‑2&amp;gt;코드의 기수 나무 41&lt;br /&gt;&amp;lt;그림 5‑4&amp;gt; 문자 코드의 재구성 41&lt;br /&gt;&amp;lt;그림 6‑1&amp;gt; 빈도수 계산 44&lt;br /&gt;&amp;lt;그림 6‑2&amp;gt; 허프만 나무 구성과정 48&lt;br /&gt;&amp;lt;그림 6‑3&amp;gt; 허프만 나무에서 얻어진 코드 51&lt;br /&gt;&amp;lt;그림 6‑4&amp;gt; code[]와 len[]의 저장 55&lt;br /&gt;&amp;lt;그림 7‑1&amp;gt; JPEG Encoding / Decoding 단계 76&lt;br /&gt;&amp;lt;그림 7‑2&amp;gt; RGB의 YIQ 변환식 77&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;1 Prologue&amp;nbsp;&lt;br /&gt;지금 생각하면 우스운 일이지만 몇 년 전만 하더라도 28800bps의 모뎀을 굉장히 빠른 통신 장비로 알고 있었다. 그러다가 56600bps의 모뎀이 발표되었을 때는 전화선의 한계를 뛰어 넘은 대단한 물건이라고 다들 놀라와 했다. 내 경우에도 56600bps 모뎀을 구입해서 처음 사용하던 날 감격의 눈물을 흘렸을 정도였으니..&lt;br /&gt;전화로 통신을 하던 그 당시 사람들의 생각은 다들 비슷했을 것이다. 어떻게 하면 같은 내용의 자료를 더 짧은 시간에 전송할 수 있을까. 통신속도가 점차 빨라지면서(처음에 사용하던 2400bps에 비하면 거의 20배 이상의 속도 향상이었다.) 이런 고민은 줄어들 것이라 생각했지만, 그런 고민은 오히려 더 커져 만 갔다. 속도가 빨라지는 것보다 사람들이 주고받는 자료의 전송 량이 더 크게 증가한 것이다. 이럴 수록 더 강조되던 것이 바로 [압축] 이었다.&amp;nbsp;&lt;br /&gt;파일 압축이라고 하면 winzip, alzip 등을 생각할 것이다. 이런 종류의 프로그램들은 임의의 파일을 원래의 크기보다 작은 크기로 압축시켰다가 필요할 때 다시 원래대로 한치의 오차도 없이 복구 시켜 준다.&amp;nbsp;&lt;br /&gt;하지만 압축이란 것이 모두 앞에서 언급한 프로그램들처럼 원본을 그대로 복원해줄 수 있는 것이 아니다. 때에 따라서는 원본으로의 복원이 불가능한 압축 방법들이 유용하게 사용될 상황도 존재한다.&amp;nbsp;&lt;br /&gt;전자의 경우를 ‘비손실 압축’, 후자의 경우를 ‘손실 압축’ 이라고 하는데, 이 자료에서는 모든 압축의 근간이 되는 간단한 압축 알고리즘들을 살펴볼 것이고 뒤에 손실 압축의 대표적인 MPEG에 대해서 다룰 것이다.&amp;nbsp;&lt;br /&gt;이제 우리는 압축의 세계로 들어간다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;2 Introduction&lt;br /&gt;우리가 보통 살펴보는 알고리즘들은 대부분이 시간을 절약하기 위한 목적을 가지고 개발된 것 들이다. 하지만, 우리가 지금부터 살펴볼 알고리즘들은 공간을 절약하기 위한 목적을 가진 알고리즘이다.&amp;nbsp;&lt;br /&gt;압축알고리즘이 처음으로 대두되기 시작한 것은 컴퓨터 통신 때문이었다. 컴퓨터 통신에서는 시간이 곧바로 돈으로 연결된다(적어도 model을 사용하던 시절에는 그랬다). 예를 들어 1MByte의 파일을 다운로드 받으려면 28,800bps 모뎀을 사용하면 약 6분, 56,600bps 모뎀을 사용하더라도 약 3분 이상의 시간이 소요됐었다. 하지만 이 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;파일을 전송 전에 미리 1/2로만 압축할 수 있다면 전송시간 역시 1/2로 줄어들 것이&lt;/span&gt;다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;즉, 통신 비용 역시 1/2로 줄어든다는 것&lt;/span&gt;이다.&lt;br /&gt;압축 알고리즘은 크게 두 부류로 나뉜다. 비손실 압축(Non-lossy Compression)과 손실 압축(Lossy Compression)이 그것인데 말 그대로 비손실 압축은 압축했다가 다시 복원할 때 원래대로 파일이 복구된다는 뜻이고, 손실 압축은 복원할 때 100% 원래대로 복구되지 않는다는 뜻이다.&amp;nbsp;&lt;br /&gt;일반적으로 PC사용자들이 사용하는 압축프로그램들은 모두 비손실 압축을 지원한 프로그램들이다. 그렇다면 손실 압축은 어떤 경우에 사용하는 것일까?&lt;br /&gt;확장자가 exe나 com으로 끝나는 실행파일이나, 기타 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;한 바이트만 바뀌더라도 프로그램 실행에 지장을 주는 파일들은 반드시 비손실 압축을 해야 한다.&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;그러나 그림 파일이나 동화상처럼 눈으로 보는 것에 지나지 않는 파일의 경우 약간의 손실이 있어도 무방&lt;/span&gt;하다.&amp;nbsp;&lt;br /&gt;일반적으로 손실 압축이 비손실 압축에 비해서 압축률이 훨씬 좋기 때문에 손실 압축도 또한 큰 중요성을 가지고 있다. 요즘 화제가 되고 있는 JPEG(정지 화상 압축 기술, Joint Photographic Expert Group), MPEG(동화상 압축 기술, Moving Picture Expert Group) 등도 대표적인 손실 압축법으로 주목 받고 있는 것들이다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;압축 알고리즘은 그 중요성으로 인해 오랫동안 연구되어 왔고, 많은 알고리즘이 있다. 가장 대표적인 압축 알고리즘은 Run-Length 압축법으로 동일한 바이트가 연속해 있을 경우 이를 그 바이트와 몇 번 반복되는지 수치를 기록하는 방법이다. 그러나 Run-Length 압축법은 간단함에 대한 대가로 압축률이 그다지 좋지 않아서 다른 방법들이 연구되어 왔다.&amp;nbsp;&lt;br /&gt;그래서 실제로 구현되는 압축 방법은 이 절에서 소개하는 Huffman 압축법과 Lempel-Ziv 압축법이다. 가변길이 압축법은 한 바이트가 8비트라는 고정 관념을 깨고, 각각을 다른 비트로 압축하는 방법이고, 그 중에서도 Huffman 압축법은 빈도가 높은 바이트는 적은 비트수로, 빈도가 낮은 바이트는 많은 비트수로 그 표현을 재정의하여 파일을 압축한다.&amp;nbsp;&lt;br /&gt;반면에 Lempel-Ziv법은 그 변종이 여러 개 있지만 가장 효율적인 동적 사전(Dynamic Dictionary)을 이용한 방법을 주로 사용한다. &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;동적 사전법은 파일에서 출현하는 단어(Word)들을 2진 나무(Binary Tree)나 해시를 이용한 검색 구조에 삽입하여 동적 사전을 구성한 다음&lt;/span&gt;, 이어서&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 읽어진 단어가 동적 사전에 수록되어 있으면 그에 대한 포인터를 그 내용으로 대체&lt;/span&gt;하는 방법으로 압축을 행한다. 주로 사용하는 ZIP 등도 Huffman 압축법이나 Lempel-Ziv 압축법 중 하나를 사용하거나 또는 둘 다 사용하거나, 혹은 그 응용을 사용한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;3 Run-Length&lt;br /&gt;3.1 Run-Length Encoding&lt;br /&gt;Run-Length 압축법은 동일한 문자가 이어서 반복되는 경우 그것을 문자와 개수의 쌍으로 치환하는 방법이다. 예를 들어 다음의 문자열은 Run-Length 압축법으로 쉽게 압축될 수 있다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;원래 문자열 : ABAAAAABCBDDDDDDDABC&lt;br /&gt;압축 문자열 : ABA5BCBD7ABC&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;개념적으로는 위와 같이 간단하지만 개수로 사용된 5나 7이라는 문자가 개수의 의미인지 아니면 그냥 문자인지를 판별하는 방법이 없다. 만일 압축할 파일이 알파벳 문자만을 사용한다면 위와 같은 압축이 그대로 사용 가능할 것이다. 그러나 일반적으로 0부터 255까지의 모든 문자가 사용된 파일을 압축한다면 단순한 위의 방법으로는 압축이 불가능하다.&amp;nbsp;&lt;br /&gt;그래서 탈출 문자(Escape Code)라는 것을 사용한다. 문자가 반복되는 모양을 압축할 때 &amp;lt;탈출 문자, 반복 문자, 개수&amp;gt;와 같이 표현한다. 예를 들어 탈출 문자를 ‘*’라고 한다면 위의 문자열은 다음처럼 압축 될 수 있다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;원래 문자열 : ABAAAAABCBDDDDDDDABC&lt;br /&gt;압축 문자열 : AB*A5BCB*D7ABC&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;탈출 문자에서 탈출의 의미는 보통의 경우에서 벗어남을 말한다. 즉 탈출 문자 ‘*’가 나오기 전에는 단순한 문자열이지만 이 탈출 문자가 나오면 그 다음의 반복 문자와 그 다음의 개수를 읽어 들여서 반복 문자를 개수만큼 늘여 해석하면 된다.&amp;nbsp;&lt;br /&gt;또 한가지 남은 문제가 있다. 그것은 탈출 문자가 탈출의 의미로 해석되는 것이 아니라 문자로서 해석되어야 할 경우도 있다는 점이다. 이것은 마치 printf() 함수의 서식 문자열에서 ‘%’와 유사하다. %d나 %f는 그 문자를 의미하는 것이 아니라 정수나 실수형으로 대치될 부분이라는 표시이다. 즉 %가 탈출의 의미를 가지고 있다는 뜻이다. 그러나 정작 ‘%’라는 문자를 출력하기 위해서는 어떻게 해야 하는가?&lt;br /&gt;C에서는 ‘%’를 출력하기 위해서 ‘%%’를 사용한다. 마찬가지로 Run-Length 압축법에서도 탈출 문자 ‘*’를 문자로 해석하기 위해서 ‘**’를 사용하면 될 것이다.&amp;nbsp;&lt;br /&gt;그렇다면 ‘*’ 문자가 계속해서 반복되는 경우는 어떻게 해야 하는가? 이 문제는 상당히 복잡하다. 만일 ‘*****’와 같은 문자열의 일부분이 있다면 ‘**5’와 같이 압축할 수 있는가? 아니면 ‘***5’와 같이 압축하는가? 둘 다 문제가 있다. 전자의 경우 ‘*5’와 같이 해석할 수 있으며, 후자의 경우는 ‘*’문자와 5 다음의 문자가 있다면 이를 개수로 해석해서 5를 반복하는 것으로 해석할 수 있다.&amp;nbsp;&lt;br /&gt;이렇게 탈출 문자가 반복되는 경우 그것을 &amp;lt;탈출 문자 반복 문자 개수&amp;gt;의 표현으로 나타내면 모호하게 되므로 탈출 문자자의 경우는 아무리 반복 횟수가 많더라도 단순하게 &amp;lt;탈출 문자, 탈출 문자&amp;gt;와 같이 압축한다(실제로는 더 길어지지만).&amp;nbsp;&lt;br /&gt;&lt;br /&gt;원래 문자열 : ABCAAAAABCDEBBBBBFG*****ABC&lt;br /&gt;압축 문자열 : ABC*A5BCDE*B5FB**********ABC&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이러한 이유로 탈출 문자 ‘*’는 가장 출현 빈도수가 적은 문자를 택해야 한다. 왜냐하면 탈출 문자가 문자로 해석되는 경우에는 그 길이가 두 배로 늘어나기 때문이다. 이 출현 빈도수라는 것이 사실 모호하기 짝이 없지만 일단은 영어의 알파벳이나 기호, 탭 문자(0x09), 라인 피드(0x0A), 캐리지 리턴(0x0D) 그리고 널문자(0x00)와 같은 코드들은 매우 많이 사용되기 때문에 피해야 한다. 따라서, 압축하는 파일에 따라 탈출 문자를 적절히 조정해 주면 압축 효율을 높일 수 있을 것이다.&amp;nbsp;&lt;br /&gt;그렇다면 과연 몇 개의 문자가 반복되었을 때 &amp;lt;탈출 문자, 반복 문자, 개수&amp;gt;로 치환할 것인가 하는 문제를 결정하자. ‘AA’처럼 두 문자가 반복되었다면 ‘*A2’로 하는 것은 두 바이트가 3바이트로 늘어나게 되므로 치환하지 말아야 할 것이다. 그렇다면 ‘AAA’와 같이 세 문자가 반복된다면 ‘*A3’으로 하는 것은 똑같이 세 바이트가 소요되므로 치환을 하든 하지 않든 변화가 없다. 따라서 같은 문자가 최소 3번 이상 반복되는 경우에만 치환을 하도록 한다.&amp;nbsp;&lt;br /&gt;그리고 개수를 나타내는 것 또한 1Byte를 사용하기 때문에 반복되는 문자의 개수는 255 이상이 될 수 없다. 만약 255개를 넘어버린다면 254에서 한번 잘라주고, 그 다음은 문자가 처음 나온 것으로 생각하면 된다.&lt;br /&gt;위와 같은 방법으로 구현된 Run-Length 알고리즘은 다음과 같다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;Run-Length 압축 알고리즘(FILE *src)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; char code[10]; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 버퍼 */&lt;br /&gt;&amp;nbsp; cur = getc(src); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 입력 파일에서 한 바이트 읽음 */&lt;br /&gt;&amp;nbsp; code_len = length = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; while(!feof(src))&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length == 0) &amp;nbsp;&amp;nbsp; /* code[]에 아무 내용이 없으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != ESCAPE)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = cur;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 탈출 문자이면 &amp;lt;탈출문자 탈출문자&amp;gt;로 대체 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = ESCAPE;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = ESCAPE;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 출력 파일에 써넣음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length == 1) &amp;nbsp; /* 반복 횟수가 1 이었으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != code[0]) &amp;nbsp; &amp;nbsp; /* 읽은 문자가 버퍼의 문자와 다르면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code); &amp;nbsp;&amp;nbsp; /* 버퍼의 내용을 출력 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp;&amp;nbsp; /* 읽은 문자가 버퍼의 문자와 같으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = cur; &amp;nbsp; &amp;nbsp; /* 'A' -&amp;gt; 'AA' */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length == 2) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 반복 횟수가 2 이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != code[1]) &amp;nbsp; &amp;nbsp; /* 읽은 문자가 버퍼의 문자와 다를 경우 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code); &amp;nbsp;&amp;nbsp; /* 버퍼의 내용을 출력 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp;&amp;nbsp; /* 읽은 문자가 버퍼의 문자와 같으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = ESCAPE; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 'AA' -&amp;gt; '*A3' */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = cur;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = length;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 다음 문자를 읽음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length &amp;gt; 2) &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 반복 횟수가 3 이상이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != code[1] || length &amp;gt; 254) &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; { &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 읽은 문자 != 버퍼의 문자 or 반복 횟수 &amp;gt; 255 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 버퍼의 내용 출력 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp;&amp;nbsp; /* 읽은 문자가 버퍼의 문자와 같으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len-1]++; &amp;nbsp; &amp;nbsp; /* 반복 횟수만 증가 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 다음 문자를 읽음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; flush(code); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 버퍼의 내용을 출력 */&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 3‑1&amp;gt; Run-Length 압축 알고리즘&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;3.2 Run-Length Decoding&lt;br /&gt;압축을 하고 나면 다시 복원을 하는 알고리즘도 있어야 할 것이다. Run-Length 압축법의 복원은 상당히 단순하다. 파일을 읽으면서 탈출 문자가 없으면 그대로 두면 되고, 탈출 문자를 만난다면, 다음 글자를 하나 더 읽어봐서 다시 탈출 문자가 나오면 탈출 문자를 그대로 기록하고, 숫자가 나오면 탈출 문자 전의 문자를 그 숫자만큼 반복해서 적으면 된다.&amp;nbsp;&lt;br /&gt;위와 같은 방법으로 구현된 Run-Length 압축 복원 알고리즘은 다음과 같다.&lt;br /&gt;&lt;br /&gt;&amp;lt;Run-Length 압축 풀기 알고리즘(FILE *src)&amp;gt;&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int cur;&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;br /&gt;&amp;nbsp; int j;&lt;br /&gt;&amp;nbsp; int length;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; dst = fopen(출력파일);&lt;br /&gt;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != ESCAPE) &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 탈출 문자가 아니면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(cur, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp;&amp;nbsp; /* 탈출 문자이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur == ESCAPE) &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 그 다음 문자도 탈출 문자이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(ESCAPE, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 길이만큼 반복 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (j = 0; j &amp;lt; length; j++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(cur, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;3.3 Run-Length 압축 알고리즘 전체 구현&lt;br /&gt;실제로 압축된 파일의 복원을 위해서는 몇 가지 추가적인 정보가 필요하다. 그것은 복원하려는 파일이 과연 Run-Length 압축 알고리즘에 의한 것인지를 판별하는 식별 코드와 복원할 파일의 원래 이름이다. 이 두 정보는 압축할 때 압축 파일의 선두(헤더)에 기록되어 있어야 한다.&amp;nbsp;&lt;br /&gt;Run-Length 압축 알고리즘의 식별 코드는 편의상 0x11과 0x22로 했고, 이어서 원래 파일의 이름이 나오고, 끝을 나타내는 NULL문자가 이어진다. 다음은 이 헤더의 구조를 나타낸 그림이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 3‑2&amp;gt; 압축 파일 헤더 구조&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이상으로 Run-Length 압축 알고리즘에 대한 설명을 마친다. Run-Length 알고리즘은 알고리즘이 단순할 뿐만 아니라 이미지 파일이나 exe 파일처럼 똑같은 문자가 반복되는 경우 매우 좋은 압축률을 보여준다. 그러나 똑같은 문자가 이어져 있지 않은 경우에는 압축률이 매우 떨어지는 단점이 있다.&amp;nbsp;&lt;br /&gt;위와 같은 방법으로 구현된 전체 Run-Length 알고리즘은 다음과 같다.&lt;br /&gt;&lt;br /&gt;/* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;br /&gt;/* &amp;nbsp; RUNLEN.C&amp;nbsp; :&amp;nbsp; Compression by Run-Length Encoding &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;br /&gt;/* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;#include &amp;lt;string.h&amp;gt;&lt;br /&gt;#include &amp;lt;dir.h&amp;gt;&lt;br /&gt;#include &amp;lt;time.h&amp;gt;&lt;br /&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 탈출 문자 */&lt;br /&gt;#define ESCAPE&amp;nbsp; 0xB4&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Run-Length 압축법에 의한 것임을 나타내는 식별 코드 */&lt;br /&gt;#define IDENT1&amp;nbsp; 0x11&lt;br /&gt;#define IDENT2&amp;nbsp; 0x22&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* srcname[]에서 파일 이름만 뽑아내어서 그것의 확장자를 rle로 바꿈 */&lt;br /&gt;void make_dstname(char dstname[], char srcname[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; char temp[256];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fnsplit(srcname, temp, temp, dstname, temp);&lt;br /&gt;&amp;nbsp; strcat(dstname, &quot;.rle&quot;);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 파일의 이름을 받아 그 파일의 길이를 되돌림 */&lt;br /&gt;long file_length(char filename[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *fp;&lt;br /&gt;&amp;nbsp; long l;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((fp = fopen(filename, &quot;rb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; return 0L;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; fseek(fp, 0, SEEK_END);&lt;br /&gt;&amp;nbsp; l = ftell(fp);&lt;br /&gt;&amp;nbsp; fclose(fp);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; return l;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* code[] 배열의 내용을 출력함 */&lt;br /&gt;void flush(char code[], int len, FILE *fp)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; len; i++)&lt;br /&gt;&amp;nbsp; putc(code[i], fp);&amp;nbsp;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Run-Length 압축 함수 */&lt;br /&gt;void run_length_comp(FILE *src, char *srcname)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int cur;&lt;br /&gt;&amp;nbsp; int code_len;&lt;br /&gt;&amp;nbsp; int length;&lt;br /&gt;&amp;nbsp; unsigned char code[10];&lt;br /&gt;&amp;nbsp; char dstname[13];&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; make_dstname(dstname, srcname);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((dst = fopen(dstname, &quot;wb&quot;)) == NULL) &amp;nbsp; /* 출력 파일 오픈 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : Can't create file.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /*&amp;nbsp; 압축 파일의 헤더 작성 */&lt;br /&gt;&amp;nbsp; putc(IDENT1, dst); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 출력 파일에 식별자 삽입 */&lt;br /&gt;&amp;nbsp; putc(IDENT2, dst);&amp;nbsp;&lt;br /&gt;&amp;nbsp; fputs(srcname, dst); &amp;nbsp;&amp;nbsp; /* 출력 파일에 파일 이름 삽입 */&lt;br /&gt;&amp;nbsp; putc(NULL, dst); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* NULL 문자 삽입 */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; code_len = length = 0;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length == 0)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != ESCAPE)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = cur;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = ESCAPE;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = ESCAPE;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code, code_len, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length == 1)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != code[0])&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code, code_len, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = cur;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length == 2)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != code[1])&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code, code_len, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = ESCAPE;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = cur;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len++] = length;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length &amp;gt; 2)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != code[1] || length &amp;gt; 254)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; flush(code, code_len, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = code_len = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[code_len-1]++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; flush(code, code_len, dst);&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Run-Length 압축을 복원 */&lt;br /&gt;void run_length_decomp(FILE *src)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int cur;&lt;br /&gt;&amp;nbsp; char srcname[13];&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;br /&gt;&amp;nbsp; int i = 0, j;&lt;br /&gt;&amp;nbsp; int length;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; if (cur != IDENT1 || getc(src) != IDENT2) &amp;nbsp; /* Run-Length 압축 파일이 맞는지 확인 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : That file is not Run-Length Encoding file&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; while ((cur = getc(src)) != NULL) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 헤더에서 파일 이름을 얻음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; srcname[i++] = cur;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; srcname[i] = NULL;&lt;br /&gt;&amp;nbsp; if ((dst = fopen(srcname, &quot;wb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : Disk full? &quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur != ESCAPE)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(cur, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (cur == ESCAPE)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(ESCAPE, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (j = 0; j &amp;lt; length; j++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(cur, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void main(int argc, char *argv[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *src;&lt;br /&gt;&amp;nbsp; long s, d;&lt;br /&gt;&amp;nbsp; char dstname[13];&lt;br /&gt;&amp;nbsp; clock_t tstart, tend;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 사용법 출력 */&lt;br /&gt;&amp;nbsp; if (argc &amp;lt; 3)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Usage : RUNLEN &amp;lt;a or x&amp;gt; &amp;lt;filename&amp;gt;&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; tstart = clock(); &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 시작 시각 기록 */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; s = file_length(argv[2]); &amp;nbsp; /* 원래 파일의 크기를 구함 */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((src = fopen(argv[2], &quot;rb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : That file does not exist.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; if (strcmp(argv[1], &quot;a&quot;) == 0) &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 압축 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; run_length_comp(src, argv[2]);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; make_dstname(dstname, argv[2]);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; d = file_length(dstname); &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 압축 파일의 크기를 구함 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nFile compressed to %d%%&quot;, (int)((double)d/s*100.));&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; else if (strcmp(argv[1], &quot;x&quot;) == 0) &amp;nbsp; &amp;nbsp; /* 압축의 해제 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; run_length_decomp(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nFile decompressed &amp;amp; created.&quot;);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fclose(src);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; tend = clock(); &amp;nbsp; &amp;nbsp; /* 종료 시각 기록 */&lt;br /&gt;&amp;nbsp; printf(&quot;\nTime elapsed %d ticks&quot;, tend - tstart); &amp;nbsp; /* 수행 시간 출력 : 단위 tick */&lt;br /&gt;}&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;3.4 실행 결과&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;filetype Run-Length &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-bin 100.59 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-txt 100.24 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;wave 98.20 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;pdf 99.03 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(big) 85.04 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(small) 98.71 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;sql 96.78&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;Run-Length 알고리즘의 특성 때문에 Random 파일에 대해서는 오히려 파일 크기가 증가하는 결과가 나타났다. 다른 경우에는 조금씩 압축이 되었으며, 크기가 큰 텍스트 파일에 대해서는 상당히 많은 압축이 되었다. 이것은 텍스트 파일에 들어있는 연속된 Space나 Enter 등을 압축 한 것으로 해석된다. SQL 역시 Space가 많아서 압축이 되었을 것이라 생각한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;4 Lempel-Ziv&lt;br /&gt;4.1 Lempel-Ziv Encoding&lt;br /&gt;Run-Length 압축 알고리즘도 실제로 많이 사용되지만, 이 절에서 소개하는 Lempel-Ziv 알고리즘 또한 실제에서 가장 많이 사용되는 매우 우수한 압축 알고리즘이다.&amp;nbsp;&lt;br /&gt;Run-Length 알고리즘은 똑같은 문자가 반복되는 경우 그것을 &amp;lt;탈출 문자, 반복 문자, 반복 횟수&amp;gt;로 치환하는 방법이었다. 이와 유사하게 Lempel-Ziv 압축법은 현재의 패턴이 가까운 거리에 존재한다면 그것에 대한 상재적 위치와 그 패턴의 길이를 구해서 &amp;lt;탈출 문자, 상대 위치, 길이&amp;gt;로 패턴을 대치하는 방법이다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;원래 문자열 : ABCDEFGHIJKBCDEFJKLDM&lt;br /&gt;압축 문자열 : ABCDEFGHIJK&amp;lt;10,5&amp;gt;JKLDM&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;위의 그림을 보면, 원래 문자열에서 ‘BCDEF’라는 패턴이 뒤에 다시 반복된다. 이 때 뒤의 패턴을 &amp;lt;10,5&amp;gt;와 같이 10문자 앞에서 5문자를 취하라는 코드를 삽입함으로써 압축할 수 있고, 그 반대로 복원 할 수도 있다.&lt;br /&gt;이렇게 떨어진 두 패턴뿐만 아니라 서로 겹쳐있는 패턴에 대해서도 이런 표현이 가능하다.&lt;br /&gt;&lt;br /&gt;원래 문자열 : CDEFABABABABABAJKL&lt;br /&gt;압축 문자열 : CDEFAB&amp;lt;2,9&amp;gt;JKL&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;원래 문자열 : CDEFAAAAAAAJKL&lt;br /&gt;압축 문자열 : CDEFA&amp;lt;1,7&amp;gt;JKL&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;두 번째 예를 보면 Lempel-Ziv 압축법은 Run-Length 압축법과 마찬가지로 동일한 문자의 반복에 대해서도 Run-Length 압축법과 비슷한 압축률을 보임을 알 수 있다. 게다가 첫 번째와 같이 동일한 패턴이 반복되는 경우 Run-Length로는 압축하기 곤란하지만 Lempel-Ziv 압축법에서는 간단하게 압축된다.&amp;nbsp;&lt;br /&gt;이렇게 간단한 원리는 Lempel-Ziv 압축법은 그 실제 구현에서 여러 가지 다양한 방법이 있다. 가장 대표적인 방법은 정적 사전(Static Dictionary)법과 동적 사전(Dynamic Dictionary)법이다.&amp;nbsp;&lt;br /&gt;정적 사전법은 출현될 것으로 예상되는 패턴에 대한 정적 테이블을 미리 만들어 두었다가 그 패턴이 나올 경우 정적 테이블에 대한 참조를 하도록 하여 압축하는 방법이다.&amp;nbsp;&lt;br /&gt;이 방법은 압축하고자 하는 파일의 내용이 예상 가능한 경우에 매우 좋은 방법이다. 예를 들어 C의 소스 파일만을 압축하고자 할 경우 C의 예약어와 출현 빈도가 높은 식별자(Identifier)에 대해 테이블을 미리 만들어 둔다면 매우 높은 효율과 빠른 속도의 압축을 할 수 있을 것이다. 그러나 임의의 파일을 압축하고자 할 때에는 그 효율을 장담하지 못한다.&lt;br /&gt;동적 사전법은 파일을 읽어들이는 과정에서 패턴에 대한 사전을 만든다. 즉 동적 사전법에서 패턴에 대한 참조는 이미 그전에 파일 내에서 출현한 패턴에 한한다. 동적 사전법은 파일을 읽어들이면서 사전을 구성해야 하는 부담이 생기기 때문에 속도가 느리다는 단점이 있으나, 임의의 파일에 대해 압축률이 좋은 경우가 많다.&amp;nbsp;&lt;br /&gt;우리는 정적 사전법은 동적 사전법과 별로 다를 것이 없으므로 동적 사전법만 다루기로 한다.&amp;nbsp;&lt;br /&gt;동적 사전법을 실제로 구현하는데 있어 가장 중요한 자료 구조는 Sliding Window이다. Sliding Window는 전체 파일의 일부분을 FIFO(First In First Out) 구조의 메모리에 유지하고 있는 것을 의미한다. 그리고 이 Sliding Window는 파일에서 문자를 읽을 때마다 파일 내에서의 상대 위치가 끝 쪽으로 전진하게 된다.&amp;nbsp;&lt;br /&gt;그리고 Sliding Window는 윈도우 내의 어떤 부분에 원하는 패턴이 있는지 찾아낼 수 있는 검색 구조까지 갖추고 있어야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;Sliding Window의 FIFO 구조 때문에 가장 적절하게 사용될 수 있는 구조는 원형 큐(Circular Queue)이다. 그리고 Sliding Window의 검색 구조는 주로 해쉬(Hash)나 2진 나무(Binary Tree)를 사용한다.&amp;nbsp;&lt;br /&gt;일반적으로 FIFO 구조(Sliding Window)의 크기는 압축률에 상당한 영향을 미치며, 검색 구조는 압축 속도에 큰 영향을 미친다. 즉 Sliding Window가 크면 동적 사전이 그만큼 더 방대하게 구성되어서 패턴을 찾아낼 확률이 크게 되고, 검색 구조가 효율적일수록 패턴을 빨리 찾아내기 때문이다.&amp;nbsp;&lt;br /&gt;이 자료에서 작성할 Lempel-Ziv 압축법은 원형 큐와 한 문자에 대한 해시(연결법)로 패턴을 찾아낸다.&lt;br /&gt;설명을 위해 다음 그림을 보자&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 4‑1&amp;gt; Sliding Window와 해시테이블&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 4‑1&amp;gt; (가) 그림은 큐 queue[]의 모양을 보여준다. 큐에는 압축할 파일에서 문자를 하나씩 읽어서 저장해 놓는다. front는 큐의 get() 명령 시 빠져나올 원소의 위치이고, rear는 큐의 put() 명령 시 새 원소가 들어갈 위치를 의미한다. 그리고 cp는 찾고자 하는 패턴이고, sp는 cp위치에 있는 패턴과 일치하는 앞쪽의 패턴 위치를 저장하고 있다. 그리고 length는 일치한 패턴의 길이를 의미하고 (가) 그림에서는 5가 된다.&amp;nbsp;&lt;br /&gt;(나) 그림은 해시 테이블 jump_table[]의 모습이다. jump_table[]은 큐에 있는 문자가 어느 위치에 있는지 바로 찾을 수 있도록 큐에서의 위치들을 연결 리스트로 구성하고 있다. 예를 들어 ‘G’라는 문자를 큐 내에서 찾으려면 선형 검색처럼 처음부터 끝까지 검색해야 하는 것이 아니라, jump_table[‘G’]로서 연결 리스트의 시작 위치를 찾은 다음 연결 리스트를 타고 가면 14의 위치와 9의 위치에 ‘G’라는 문자가 있음을 알 수 있다.&amp;nbsp;&lt;br /&gt;참고로 Lempel-Ziv 압축법에서는 패턴을 &amp;lt;탈출문자 상대위치 패턴길이&amp;gt;로 나타내는데 이 자료에서는 상대 위치와 패턴 길이 모두 1바이트를 사용한다. 즉 상대 위치는 앞으로 255만큼, 패턴의 길이도 255만큼이 가능하다는 이야기다. 패턴을 찾는 장소가 바로 큐이기 때문에 큐의 길이도 255보다 큰 것은 아무 의미가 없다. 이렇게 상대 위치와 패턴의 길이를 몇 비트로 나타낼 것인가에 따라 큐의 크기를 정해 준다.&lt;br /&gt;Sliding Window에서 가장 핵심적인 부분은 원하는 패턴을 찾아내는 함수이다. 이 부분은 다음의 qmatch() 함수에 구현되어 있다. 이 qmatch() 함수는 Lempel-Ziv 압축법에서 압축 시에 가장 많이 호출되고 가장 많이 시간이 소요되는 부분이므로 충분히 최적화되어 있어야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;int qmatch(int length)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; jump *t, *p;&lt;br /&gt;&amp;nbsp; int cp, sp;&lt;br /&gt;&amp;nbsp; cp = qx(rear - length); &amp;nbsp; &amp;nbsp; // cp의 설정&lt;br /&gt;&amp;nbsp; p = jump_table + queue[cp];&lt;br /&gt;&amp;nbsp; t = p-&amp;gt;next;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; while (t != NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = t-&amp;gt;index; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; // sp의 설정, 해시 테이블에서 바로 읽어온다&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 1; i &amp;lt; length &amp;amp;&amp;amp; queue[qx(sp+i)] == queue[qx(cp+i)]; i++);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (i == length) return sp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; // 패턴을 찾았으면 sp를 되돌림&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t = t-&amp;gt;next; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; // 패턴 검색에 실패했으면 다음 위치로 이동&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; return FAIL; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; // 패턴이 큐 내에 없음&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;qmatch() 함수는 결국 cp와 length로 주어지는 패턴을 큐 내에서 찾아서 그 위치 sp를 되돌려주는 기능을 한다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;lt;Sliding Window를 이용한 LZ 압축 알고리즘(FILE *src, char *srcname)&amp;gt;&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; FILE *dst = 출력파일;&lt;br /&gt;&amp;nbsp; jump_table[] 초기화;&lt;br /&gt;&amp;nbsp; init_queue();&lt;br /&gt;&amp;nbsp; put(getc(src));&lt;br /&gt;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (queue_full())&lt;br /&gt;&amp;nbsp; &amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (sp == front) &amp;nbsp; /* 현재 추정된 패턴이 큐에서 벗어나려 하면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 현재까지의 정보로 출력 파일에 쓴다 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length &amp;gt; 3) &amp;nbsp;&amp;nbsp; /* 패턴의 길이가 4 이상이면 압축 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; encode(sp, cp, length, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 아니면 그냥 씀 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[qx(cp+i)], qx(cp+i));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 다음을 위해 jump_table[]에 문자들의 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 위치를 기록 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[qx(cp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; del_jump(queue[front], front);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 큐에서 빠져 나온 문자는 jump_table[]에서 제거 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; get(); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 큐에서 문자 하나를 뺀다 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length == 0)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cp = qx(rear-1);&amp;nbsp; /* cp의 설정, 가장 최근에 들어온 문자 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = qmatch(length+1); /* 패턴을 찾아 sp에 줌, 길이는 1 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (sp == FAIL) &amp;nbsp; /* 패턴 검색에 실패했으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[cp], dst);&amp;nbsp; /* 출력 파일에 기록 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[cp], cp);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put(getc(src)); /* 다음 문자를 입력 파일에서 읽어 큐에 집어넣음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length &amp;gt; 0) &amp;nbsp; &amp;nbsp; /* 패턴의 길이가 1 이상이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (queue[qx(cp+length)] != queue[qx(sp+length)])&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; j = qmatch(length+1);&amp;nbsp; /* 새로 들어온 문자까지 포함해서 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 패턴의 위치를 다시 검색 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else j = sp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (j == FAIL || length &amp;gt; SIZE - 3)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 실패했으면 현재까지의 정보로 압축을 함 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length &amp;gt; 3)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; encode(sp, cp, length, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[qx(cp+i)], qx(cp+i));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[qx(cp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 패턴 검색에 성공했으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = j;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 길이를 1증가 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put(getc(src)); &amp;nbsp; /* 큐에 새 문자를 집어넣음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 큐에 남아있는 문자들을 모두 출력&lt;br /&gt;&amp;nbsp; if (length &amp;gt; 3) encode(sp, cp, length, dst);&lt;br /&gt;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[qx(cp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; delete_all_jump(); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* jump_table[] 소거 */&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이 알고리즘을 자세히 살펴보면 알겠지만 그 기본적인 틀은 Run-Length 압축법과 유사함을 알 수 있을 것이다. length 변수가 상태를 표시하고 있음이 특히 그렇다.&lt;br /&gt;그리고 주의할 점은 jump_table[]에 위치를 기록하는 시점이다. 쉽게 생각하면 큐에 입력할 때 집어넣은 것으로 착각할 수 있기 때문이다. jump_tablel[]에 문자의 위치를 집어넣는 정확한 시점은 파일에 그 문자를 출력할 때이다.&lt;br /&gt;그리고 큐 내에 일치하는 패턴이 두 개 이상 있을 때 어느 것이 우선적으로 선택되어야 하는가 하는 문제 또한 중요하다. 이 때 적절한 기준은 cp 쪽에 가까운 패턴을 취하는 것이다. 이렇게 하는 이유는 패턴이 cp에서 멀 경우 패턴의 다음 문자들까지도 일치할 수 있으나 sp의 앞부분이 큐에서 벗어나는 경우가 있기 때문에 압축을 중단해야 하는 경우가 생기기 때문이다.&amp;nbsp;&lt;br /&gt;이러한 점은 put_jump() 함수에서 자연스럽게 구현된다. put_jump() 함수는 항상 최근에 들어온 그 문자의 위치를 가장 앞에 두기 때문에 jump_table[]에서 검색할 때 퇴근에 들어온 문자의 위치가 선택된다.&amp;nbsp;&lt;br /&gt;마지막으로 Run-Length 압축법과 마찬가지로 Lempel-Ziv 압축법에서도 압축 정보의 표시를 위해 탈출 문자(Escape Character)를 사용한다. 그런데 이 탈출 문자가 문자 자체의 의미로 사용될 때 Run-Length에서는 &amp;lt;ESCAPE ESCAPE&amp;gt;쌍을 사용했지만, Lempel_Ziv 법은 &amp;lt;ESCAPE 0x00&amp;gt;쌍을 사용한다.&amp;nbsp;&lt;br /&gt;왜냐하면 탈출 문자가 사용되는 두 가지 용도는 문자 자체를 의미하는 것과 &amp;lt;탈출문자 상대위치 패턴길이&amp;gt; 정보의 시작을 표시하기 위함이다. 그런데 &amp;lt;상대위치&amp;gt;는 항상 0보다 큰 값이어야 하기 때문에(0이면 자기 자신을 의미한다) 압축 정보에서 &amp;lt;ESCAPE 0x00&amp;gt;쌍이 나타날 경우는 없다. 그러므로 충분히 압축 정보와 문자 자체의 의미를 구분할 수 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;4.2 Lempel-Ziv Decoding&lt;br /&gt;그렇다면 앞 절의 알고리즘으로 압축된 파일을 원래대로 복원하는 알고리즘을 생각해보자. 복원 알고리즘은 매우 간단하다.&amp;nbsp;&lt;br /&gt;복원 알고리즘의 개요는 입력 파일에서 문자를 차례대로 읽어 큐에 저장하는 것이다. 어느 정도 큐에 넣다 보면 큐가 차게 되는데 이 때 큐에서 빠져 나오는 문자들을 출력 파일에 쓰면 된다. 큐에 집어넣을 때 압축 정보가 들어올 때는 그 의미를 해석하여 다시 원 상태로 만든 다음에 큐에 한꺼번에 집어넣으면 아무 문제가 없다. 이런 알고리즘을 구현하기 위한 가장 핵심적인 함수는 put_byte() 함수이다. put_byte()함수는 매우 짧은 함수인데 인자로 주어진 문자를 큐에 집어넣되 큐가 꽉 차 있으면 출력 파일로 출력하는 기능을 한다. 이렇게 put_byte() 함수가 만들어지면 복원 알고리즘 또한 매우 간단하다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;Sliding Window를 이용한 LZ압축 복원 알고리즘 (FILE *src)&amp;gt;&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *dst = 출력 파일;&lt;br /&gt;&amp;nbsp; init_queue();&lt;br /&gt;&amp;nbsp; c = getc(src);&lt;br /&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (c == ESCAPE) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 읽은 문자가 탈출 문자이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((c = getc(src)) == 0) /* 그 다음이 0x00이면 탈출문자 자체 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_byte(ESCAPE, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 아니면 &amp;lt;탈출 문자 상대위치 패턴길이&amp;gt; 임 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = qx(rear - c);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++) put_byte(queue[qx(sp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 정보에 의해서 압축된 정보를 복원함 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 일반 문자의 경우 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_byte(c, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c = getc(src);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; while (!queue_empty()) putc(get(), dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 큐에 남아 있는 문자들을 모두 출력 */&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;4.3 Sliding Window를 이용한 Lempel-Ziv 알고리즘의 구현&lt;br /&gt;이제 까지 설명한 것을 실제로 구현한 소스이다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;/* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;br /&gt;/* &amp;nbsp; LZWIN.C&amp;nbsp; :&amp;nbsp; Lempel-Ziv compression using Sliding Window &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;br /&gt;/* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;#include &amp;lt;dir.h&amp;gt;&lt;br /&gt;#include &amp;lt;string.h&amp;gt;&lt;br /&gt;#include &amp;lt;alloc.h&amp;gt;&lt;br /&gt;#include &amp;lt;time.h&amp;gt;&lt;br /&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#define SIZE 255&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;int queue[SIZE];&lt;br /&gt;int front, rear;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 해시 테이블의 구조 */&lt;br /&gt;typedef struct _jump&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int index;&lt;br /&gt;&amp;nbsp; struct _jump *next;&lt;br /&gt;} jump;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;jump jump_table[256];&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 탈출 문자 */&lt;br /&gt;#define ESCAPE&amp;nbsp; 0xB4&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Lempel-Ziv 압축법에 의한 것임을 나타내는 식별 코드 */&lt;br /&gt;#define IDENT1&amp;nbsp; 0x33&lt;br /&gt;#define IDENT2&amp;nbsp; 0x44&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#define FAIL &amp;nbsp;&amp;nbsp; 0xff&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 큐를 초기화 */&lt;br /&gt;void init_queue(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; front = rear = 0;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 큐가 꽉 찼으면 1을 되돌림 */&lt;br /&gt;int queue_full(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; return (rear + 1) % SIZE == front;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 큐가 비었으면 1을 되돌림 */&lt;br /&gt;int queue_empty(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; return front == rear;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 큐에 문자를 집어 넣음 */&lt;br /&gt;int put(int k)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; queue[rear] = k;&lt;br /&gt;&amp;nbsp; rear = ++rear % SIZE;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; return k;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 큐에서 문자를 꺼냄 */&lt;br /&gt;int get(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; i = queue[front];&lt;br /&gt;&amp;nbsp; queue[front] = 0;&lt;br /&gt;&amp;nbsp; front = ++front % SIZE;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; return i;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* k를 큐의 첨자로 변환, 범위에서 벗어나는 것을 범위 내로 조정 */&lt;br /&gt;int qx(int k)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; return (k + SIZE) % SIZE;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* srcname[]에서 파일 이름만 뽑아내어서 그것의 확장자를 lzw로 바꿈 */&lt;br /&gt;void make_dstname(char dstname[], char srcname[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; char temp[256];&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; fnsplit(srcname, temp, temp, dstname, temp);&lt;br /&gt;&amp;nbsp; strcat(dstname, &quot;.lzw&quot;);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 파일의 이름을 받아 그 파일의 길이를 되돌림 */&lt;br /&gt;long file_length(char filename[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *fp;&lt;br /&gt;&amp;nbsp; long l;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((fp = fopen(filename, &quot;rb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp;return 0L;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fseek(fp, 0, SEEK_END);&lt;br /&gt;&amp;nbsp; l = ftell(fp);&lt;br /&gt;&amp;nbsp; fclose(fp);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; return l;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* jump_table[]의 모든 노드를 제거 */&lt;br /&gt;void delete_all_jump(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; jump *j, *d;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; j = jump_table[i].next;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; while (j != NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; d = j;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; j = j-&amp;gt;next;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; free(d);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; jump_table[i].next = NULL;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* jump_table[]에 새로운 문자의 위치를 삽입 */&lt;br /&gt;void put_jump(int c, int ptr)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; jump *j;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((j = (jump*)malloc(sizeof(jump))) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; j-&amp;gt;next = jump_table[c].next; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 선두에 삽입 */&lt;br /&gt;&amp;nbsp; jump_table[c].next = j;&lt;br /&gt;&amp;nbsp; j-&amp;gt;index = ptr;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* ptr 위치를 가지는 노드를 삭제 */&lt;br /&gt;void del_jump(int c, int ptr)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; jump *j, *p;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; p = jump_table + c;&lt;br /&gt;&amp;nbsp; j = p-&amp;gt;next;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; while (j &amp;amp;&amp;amp; j-&amp;gt;index != ptr) &amp;nbsp;&amp;nbsp; /* 노드 검색 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p = j;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; j = j-&amp;gt;next;&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; p-&amp;gt;next = j-&amp;gt;next;&lt;br /&gt;&amp;nbsp; free(j);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* cp와 length로 주어진 패턴을 해시법으로 찾아서 되돌림 */&lt;br /&gt;int qmatch(int length)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; jump *t, *p;&lt;br /&gt;&amp;nbsp; int cp, sp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; cp = qx(rear - length); &amp;nbsp; &amp;nbsp; /* cp의 위치를 얻음 */&lt;br /&gt;&amp;nbsp; p = jump_table + queue[cp];&lt;br /&gt;&amp;nbsp; t = p-&amp;gt;next;&lt;br /&gt;&amp;nbsp; while (t != NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = t-&amp;gt;index;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /*&amp;nbsp; 첫 문자는 비교할 필요 없음. -&amp;gt; i =1; */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 1; i &amp;lt; length &amp;amp;&amp;amp; queue[qx(sp+i)] == queue[qx(cp+i)]; i++);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (i == length) return sp; &amp;nbsp; &amp;nbsp; /* 패턴을 찾았음 */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t = t-&amp;gt;next;&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; return FAIL;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 문자 c를 출력 파일에 씀 */&lt;br /&gt;int putc1(int c, FILE *dst)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; if (c == ESCAPE) &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 탈출 문자이면 &amp;lt;탈출문자 0x00&amp;gt;쌍으로 치환 */&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp;putc(ESCAPE, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp;putc(0x00, dst);&lt;br /&gt;}&lt;br /&gt;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; putc(c, dst);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; return c;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 패턴을 압축해서 출력 파일에 씀 */&lt;br /&gt;void encode(int sp, int cp, int length, FILE *dst)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; length; i++) &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* jump_table[]에 패턴의 문자들을 기록 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[qx(cp+i)], qx(cp+i));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; putc(ESCAPE, dst); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 탈출 문자 */&lt;br /&gt;&amp;nbsp; putc(qx(cp-sp), dst); &amp;nbsp; /* 상대 위치 */&lt;br /&gt;&amp;nbsp; putc(length, dst); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 패턴 길이 */&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Sliding Window를 이용한 LZ 압축 함수 */&lt;br /&gt;void lzwin_comp(FILE *src, char *srcname)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int length;&lt;br /&gt;&amp;nbsp; char dstname[13];&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;br /&gt;&amp;nbsp; int sp, cp;&lt;br /&gt;&amp;nbsp; int i, j;&lt;br /&gt;&amp;nbsp; int written;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; make_dstname(dstname, srcname); &amp;nbsp; &amp;nbsp; /* 출력 파일 이름을 만듬 */&lt;br /&gt;&amp;nbsp; if ((dst = fopen(dstname, &quot;wb&quot;)) == NULL)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp;printf(&quot;\n Error : Can't create file.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp;fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp;exit(1);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 압축 파일의 헤더 작성 */&lt;br /&gt;&amp;nbsp; putc(IDENT1, dst); &amp;nbsp;&amp;nbsp; /* 출력 파일에 식별자 삽입 */&lt;br /&gt;&amp;nbsp; putc(IDENT2, dst);&amp;nbsp;&lt;br /&gt;&amp;nbsp; fputs(srcname, dst); &amp;nbsp;&amp;nbsp; /* 출력 파일에 파일 이름 삽입 */&lt;br /&gt;&amp;nbsp; putc(NULL, dst); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* NULL 문자 삽입 */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* jump_table[] 초기화 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; jump_table[i].next = NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; rewind(src);&lt;br /&gt;&amp;nbsp; init_queue();&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; put(getc(src));&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (queue_full()) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 큐가 꽉 찼으면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (sp == front) &amp;nbsp;&amp;nbsp; /* sp의 패턴이 넘어가려고 하면 현재의 정보로 출력 파일에 씀*/&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length &amp;gt; 3)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; encode(sp, cp, length, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[qx(cp+i)], qx(cp+i));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[qx(cp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 큐에서 빠져나가는 문자의 위치를 jump_table[]에서 삭제 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; del_jump(queue[front], front);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; get();&amp;nbsp; /* 큐에서 한 문자 삭제 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length == 0)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cp = qx(rear-1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = qmatch(length+1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (sp == FAIL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[cp], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[cp], cp);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put(getc(src));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else if (length &amp;gt; 0)&lt;br /&gt;&amp;nbsp; &amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (queue[qx(cp+length)] != queue[qx(sp+length)])&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; j = qmatch(length+1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else j = sp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (j == FAIL || length &amp;gt; SIZE - 3)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (length &amp;gt; 3)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; encode(sp, cp, length, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_jump(queue[qx(cp+i)], qx(cp+i));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[qx(cp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = j;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put(getc(src));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; /* 큐에 남은 문자 출력 */&lt;br /&gt;&amp;nbsp; if (length &amp;gt; 3)&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; encode(sp, cp, length, dst);&lt;br /&gt;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc1(queue[qx(cp+i)], dst);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; delete_all_jump();&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 큐에 문자를 넣고, 만일 꽉 찼다면 큐에서 빠져나온 문자를 출력 */&lt;br /&gt;void put_byte(int c, FILE *dst)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; if (queue_full()) putc(get(), dst);&lt;br /&gt;&amp;nbsp; put(c);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Sliding Window를 이용한 LZ 압축법의 복원 함수 */&lt;br /&gt;void lzwin_decomp(FILE *src)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int c;&lt;br /&gt;&amp;nbsp; char srcname[13];&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;br /&gt;&amp;nbsp; int length;&lt;br /&gt;&amp;nbsp; int i = 0, j;&lt;br /&gt;&amp;nbsp; int sp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; rewind(src);&lt;br /&gt;&amp;nbsp; c = getc(src);&lt;br /&gt;&amp;nbsp; if (c != IDENT1 || getc(src) != IDENT2) /* 헤더 확인 */&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp;printf(&quot;\n Error : That file is not Lempel-Ziv Encoding file&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp;fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp;exit(1);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; while ((c = getc(src)) != NULL) &amp;nbsp; &amp;nbsp; /* 파일 이름을 얻음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp;srcname[i++] = c;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; srcname[i] = NULL;&lt;br /&gt;&amp;nbsp; if ((dst = fopen(srcname, &quot;wb&quot;)) == NULL)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp;printf(&quot;\n Error : Disk full? &quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp;fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp;exit(1);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; init_queue();&lt;br /&gt;&amp;nbsp; c = getc(src);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; while (!feof(src))&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (c == ESCAPE) &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 탈출 문자이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((c = getc(src)) == 0) &amp;nbsp; /* &amp;lt;탈출 문자 0x00&amp;gt; 이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_byte(ESCAPE, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* &amp;lt;탈출문자 상대위치 패턴길이&amp;gt; 이면 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; length = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; sp = qx(rear - c);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (i = 0; i &amp;lt; length; i++)&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_byte(queue[qx(sp+i)], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp;&amp;nbsp; /* 일반적인 문자의 경우 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_byte(c, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c = getc(src);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; while (!queue_empty())&amp;nbsp; /* 큐에 남아 있는 모든 문자를 출력 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(get(), dst);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void main(int argc, char *argv[])&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; FILE *src;&lt;br /&gt;&amp;nbsp; long s, d;&lt;br /&gt;&amp;nbsp; char dstname[13];&lt;br /&gt;&amp;nbsp; clock_t tstart, tend;&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 사용법 출력 */&lt;br /&gt;&amp;nbsp; if (argc &amp;lt; 3)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp;printf(&quot;\n Usage : LZWIN &amp;lt;a or x&amp;gt; &amp;lt;filename&amp;gt;&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp;exit(1);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; tstart = clock(); &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 시작 시간 기록 */&lt;br /&gt;&amp;nbsp; s = file_length(argv[2]); &amp;nbsp; /* 원래 파일의 크기를 구함 */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((src = fopen(argv[2], &quot;rb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : That file does not exist.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; if (strcmp(argv[1], &quot;a&quot;) == 0)&amp;nbsp; /* 압축 */&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp; lzwin_comp(src, argv[2]);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; make_dstname(dstname, argv[2]);&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp;d = file_length(dstname); &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 압축 파일의 크기를 구함 */&lt;br /&gt;&amp;nbsp; &amp;nbsp;printf(&quot;\nFile compressed to %d%%.&quot;, (int)((double)d/s*100.));&lt;br /&gt;}&lt;br /&gt;&amp;nbsp; else if (strcmp(argv[1], &quot;x&quot;) == 0) &amp;nbsp; &amp;nbsp; /* 압축의 해제 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp;lzwin_decomp(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nFile decompressed &amp;amp; created.&quot;);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fclose(src);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; tend = clock(); /* 종료 시간 기록 */&lt;br /&gt;&amp;nbsp; printf(&quot;\nTime elapsed %d ticks&quot;, tend - tstart); &amp;nbsp; /* 수행 시간 출력 : 단위 tick */&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이 프로그램을 실행시켜 보면 우선 속도가 매우 느리다는 점에 실망할 수도 있다. 그러나 압축률은 상용 프로그램에는 못 미치지만 상당히 좋음을 알 수 있을 것이다. 일반적으로 &amp;lt;상대위치&amp;gt;의 비트 수를 늘리면 압축률은 좋아진다. 대신 패턴 검색 시간이 길어지는 단점이 있다.&amp;nbsp;&lt;br /&gt;&amp;lt;상대위치&amp;gt;와 &amp;lt;패턴길이&amp;gt;를 모두 8비트로 표현했지만, 이 둘을 적절히 조절하면 실행 시간을 빨리 하거나 압축률을 좋게 하는 변화를 줄 수 있다. 하지만 이럴 경우 비트 조작이 필요하므로 코딩 시 주의해야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;4.4 실행 결과&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;filetype Lempel-Zip &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-bin 100.59 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-txt 100.24 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;wave 92.34 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;pdf 83.54 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(big) 66.64 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(small) 89.69 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;sql 55.18&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;Run-Length의 경우와 마찬가지로 Random File에 대해서는 압축을 하지 못했다. 하지만 그 외의 경우는 Run-Length에 비해 상당히 높은 압축률을 보여주고 있다. 이는 조금 떨어진 곳이라도 같은 패턴이 있으면 압축을 할 수 있기 때문에 가능한 결과라 생각한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;5 Variable Length&amp;nbsp;&lt;br /&gt;영문 텍스트 파일의 경우 사용되는 문자는 영어 대.소문자와 기호, 공백 문자 등 100여 개 안팎이다. 그래서 원래 ASCII 코드는 7비트(128가지의 상태를 표현)로 설계되었으며 나머지 한 비트는 패리티 비트(Parity Bit)로 통신상에서 오류를 검출하는 데 사용하도록 되어 있었다.&amp;nbsp;&lt;br /&gt;통신 에뮬레이터의 환경설정에서 ‘데이터 비트 8’, ‘패리티 None’ 이라고 설정하는 것은 이러한 ASCII코드의 에러 검출 기능을 무시하고 8비트를 모두 사용하겠다는 뜻이다. 이러한 설정 기능은 원래 영어권에서 텍스트에 기반을 둔 통신 환경에서 8비트를 모두 사용할 필요가 없었기 때문에 만들어진 선택 사항이다.&amp;nbsp;&lt;br /&gt;그렇다면 패리티를 무시하고 7비트만으로 영문자를 표기하되, 남은 한 비트를 다음 문자를 위해 사용한다면 고정적으로 1/8의 압축률을 가지는 압축 방법이 될 것이다. 이를 ‘8비트에서 7비트로 줄이는 압축 알고리즘(Eight to Seven Encoding)’ 이라고 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 5‑1&amp;gt; 8비트에서 7비트로 줄이는 압축 알고리즘&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;위의 논의는 자연적으로 다음과 같은 생각을 유도한다. 즉 압축하고자 하는 파일이 단지 일부분의 문자 집합만을 사용한다면 이를 표현하기 위해 8비트 전부를 사용할 필요가 없다는 것이다. 예를 들어 ‘ABCDEFABBCDEBDD’라는 문자열을 압축한다고 하자. 이 문자열은 단 6 문자를 사용한다. 그렇다면 사용되는 각 문자에 대해서 다음과 같이 다시 비트를 재구성해보자.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 5‑2&amp;gt; 문자 코드의 재구성&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;그렇다면 앞의 문자열은 다음과 같이 다시 쓸 수 있으며 결과적으로 압축된다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;원래 문자열 : ABCDEFABBCDEBDD&lt;br /&gt;압축 비트열 : 0 1 00 01 10 11 0 1 1 00 01 10 1 01 01&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;하지만, 이렇게 표현을 하면 압축 비트열은 각 문자 코드마다 구분자(Delimiter)가 필요하게 된다. 만약 구분자가 없이 각 코드를 붙여 쓴다면 그 해석이 모호해져서 압축 알고리즘으로는 쓸모 없게 된다. 예를 들어 압축 비트열의 앞부분인 네 코드를 붙여 쓴다면 ‘010001’이 되는데 이는 ‘ABCD’로도 해석할 수 있지만 ‘DCD’로도 해석할 수 있고 ‘ABAAAB’로도 해석할 수 있다는 뜻이다.&amp;nbsp;&lt;br /&gt;그렇다면 이 모호함을 해결하는 방법은 없을까? 문제 해결의 열쇠는 문자 코드들을 기수 나무(Radix Tree)로 구성해 보는 데서 얻어진다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 5‑3&amp;gt; &amp;lt;그림 5‑2&amp;gt;코드의 기수 나무&lt;br /&gt;기수 나무는 뿌리 노드에서 원하는 노드를 찾아가는 과정에서 비트가 0이면 왼쪽 자식으로, 1이면 오른쪽 자식으로 가는 탐색 구조를 가지고 있다. 이 그림에서 보면 각 문자들은 외부 노드와 내부 노드 모두에 존재한다. 이러한 구조에서는 구분자가 반드시 필요하게 된다.&amp;nbsp;&lt;br /&gt;그렇다면 이들을 기수 나무로 구성하지 않고 기수 트라이(Radix Trie)로 구성한다면 어떨까? 기수 트라이는 각 정보 노드들이 모두 외부 노드인 나무 구조를 의미한다. 이렇게 구성된다면 정보 노드를 찾아가는 과정에서 다른 정보 노드를 만나는 경우가 없어져서 구분자 없이도 비트들을 구성할 수 있다.&lt;br /&gt;예를 들어 다음의 그림과 같이 기수 트라이를 만들고 코드를 재구성해 보도록 하자.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 5‑4&amp;gt; 문자 코드의 재구성&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 5‑4&amp;gt;의 코드 표는 &amp;lt;그림 5‑2&amp;gt;에 비해서 코드의 길이가 길어졌지만 구분자가 필요 없다는 장점이 있다. 이 &amp;lt;그림 5‑4&amp;gt;를 이용하여 문제의 문자열을 압축하면 다음처럼 된다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;원래 문자열 : ABCDEFABBCDEBDD&lt;br /&gt;압축 비트열 : 01001011101110111101001001011101110100110110&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이렇게 어떤 파일에서 사용되는 문자 집합이 전체 집합의 극히 일부분이라면 상당한 압축률로 압축할 수 있음을 보았을 것이다. 이와 같이 문자 코드를 재구성하여 고정된 비트 길이의 코드가 아닌 가변 길이의 코드를 사용하여 압축하는 방법을 가변 길이 압축법(Variable Length Encoding)이라고 한다.&amp;nbsp;&lt;br /&gt;가변 길이 압축법에서 유의할 점은 압축 파일 내에 각 문자에 대해서 어떤 코드로 압축되었는지 그 정보를 미리 기억시켜 두어야 한다는 점이다. 이는 Run-Length 압축법이나 Lempel-Ziv 압축법과 같이 헤더가 식별자와 파일 이름만으로 구성되는 것이 아니라 문자에 대한 코드 또한 기록해 두어야 한다는 것을 의미한다. 기록되는 코드는 코드 자체뿐 아니라, 가변 길이라는 특성 때문에 코드의 길이 또한 기록되어야 한다. 이렇게 되어서 가변길이 압축법은 헤더가 매우 길어지게 된다.&amp;nbsp;&lt;br /&gt;뒤에 나올 Huffman Tree가 가변 길이 압축법의 한 종류이기 때문에 가변 길이 압축법 자체는 자세히 다루지 않겠다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;6 Huffman Tree&lt;br /&gt;만일 압축하고자 하는 파일이 전체 문자 집합의 모든 원소를 사용한다면 가변길이 압축법은 여전히 유용할까? 답은 그렇다 이다. 그리고 그것을 가능케 하는 것은 이 절에서 소개하는 Huffman 나무(Huffman Tree)이다.&amp;nbsp;&lt;br /&gt;앞 절에서 살펴본 것과 같이 기수 트라이로 코드를 구성하는 경우 각 정보를 포함하고 있는 외부 노드의 레벨(Level)이 얼마냐에 따라 코드의 길이가 결정되었다. 예를 들어 &amp;lt;그림 5‑4&amp;gt;의 ‘A’문자의 경우는 겨우 비트의 길이가 1이며, ‘F’의 경우는 4가 된다.&amp;nbsp;&lt;br /&gt;그렇다면 압축하고자 파일이 비록 모든 문자를 사용한다 할지라도 그 출현 빈도수가 고르지 않다면 출현빈도가 큰 문자에 대해서는 짧은 길이의 코드를, 출현 빈도가 작은 문자에 대해서는 긴 길이의 코드를 할당하면 전체적으로 압축되는 효과를 가져올 것이다.&lt;br /&gt;그렇다면 압축축하고자 하는 파일을 먼저 읽어서 각 문자에 대한 빈도를 계산해야 한다는 결론이 나오게 되는데, 이러한 빈도가 freq[]라는 배열에 저장되어 있다면 이 빈도를 이용하여 어떻게 빈도와 레벨이 반비례하는 기수 트라이를 만들 것인가 하는 것이 이 절의 문제이며, 그 해결 방법은 Huffman 나무이다.&lt;br /&gt;우선 Huffman 나무의 노드를 다음의 huf 구조체와 같이 정의해 보자.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;typedef struct _huf&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; long count; &amp;nbsp; &amp;nbsp; // 빈도&lt;br /&gt;&amp;nbsp; int&amp;nbsp; data; &amp;nbsp; &amp;nbsp;&amp;nbsp; // 문자&lt;br /&gt;&amp;nbsp; struct _huf *left, *right&lt;br /&gt;} huf;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;huf 구조체는 Huffman 나무의 노드로서 그 멤버로 빈도를 저장하는 count, 어떤 문자의 노드인지 알려주는 data를 가진다. 이 huf 구조체의 멤버를 의미있는 정보로 채우기 위해서는 우선 문자열에서 각 문자에 대한 빈도를 계산해야 한다. &amp;lt;그림 6‑1&amp;gt; (가)와 같은 문자열이 있다고 할 때 그 빈도수를 나타내면 (나)와 같다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 6‑1&amp;gt; 빈도수 계산&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이제 &amp;lt;그림 6‑1&amp;gt; (나)의 정보를 이용하여 각 노드를 생성하여 죽 배열한다. 그 다음 작은 빈도의 두 노드를 뽑아내어 그것을 자식으로 가지는 분기 노드(Branch Node, 정보를 저장하지 않는 트라이의 내부 노드)를 새로 생성하여 그것을 다시 노드의 배열에 집어넣는다. 이 때 분기 노드의 count에는 두 자식 노드의 count의 합이 저장된다. 이런 과정을 노드가 하나 남을 때까지 반복하면 Huffman 나무가 얻어진다. 이 과정을 &amp;lt;그림 6‑2&amp;gt;에 나타내었다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 6‑2&amp;gt; Huffman Tree 구성과정&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 6‑2&amp;gt;를 차례로 따라가다 보면 그 방법을 자연히 느끼게 될 것이다. 최종적인 결과로 얻어지는 Huffman Tree는 (하) 그림과 같다. (하) 그림을 보면 빈도수가 적은 노드들은 상대적으로 레벨이 크고, 빈도수가 많은 노드들은 레벨이 작음을 알 수 있다.&amp;nbsp;&lt;br /&gt;이제 이런 과정을 수행하는 함수를 작성해 보기로 하자. 우선 빈도와 문자를 저장하고 있는 노드들을 죽 배열하는 장소를 정의해야 할 것이다. 그것은 다음의 head[] 배열이며, nhead는 노드의 개수를 저장하고 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;huf *head[256];&lt;br /&gt;int nhead;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;앞에서 설명한 바와 같이 문자 i의 빈도가 freq[i]에 저장되어 있다고 한다면 다음의 construct_trie() 함수가 Huffman 나무를 구성해 준다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void construct_trie(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; int m;&lt;br /&gt;&amp;nbsp; hum *h, *h1, *h2;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; /* 초기 단계 */&lt;br /&gt;&amp;nbsp; for ( i = nhead = 0; i &amp;lt; 256; i++)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if(freq[i] != 0) &amp;nbsp; &amp;nbsp; /* 빈도가 0이 아닌 문자에 대해서만 노드를 생성 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if((h = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;count = freq[i];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;data = i;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;left = h-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; head[nhead++] = h;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; /* Huffman Tree 생성 단계 */&lt;br /&gt;&amp;nbsp; while (nhead &amp;gt; 1) &amp;nbsp; /* 노드의 개수가 1이면 종료 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; m = find_minimum(); &amp;nbsp; &amp;nbsp; /* 최소의 빈도를 가지는 노드를 찾음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h1 = head[m];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; head[m] = head[--nhead]; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 그 노드를 빼냄 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; m = find_minimum(); &amp;nbsp; &amp;nbsp; /* 또 다른 최소의 빈도를 가지는 노드를 찾음 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h2 = head[m];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if((h = (huf*)malloc(sizeof(huf))) == NULL) /* 분기 노드 생성 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 두 자식 노드의 count 합을 저장 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;count = h1-&amp;gt;count + h2-&amp;gt;count;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;data = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;left = h1; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* h1, h2를 자식으로 둠 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;right = h2;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; head[m] = h; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 생성된 분기 노드를 노드 배열 head[]에 삽입 */&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; huf_head = head[0]; &amp;nbsp; &amp;nbsp; /* Huffman Tree의 루트 노드를 저장 */&lt;br /&gt;}&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;construct_trie() 함수는 앞에서 보인 Huffman 나무 생성 과정을 그대로 직관적으로 표현했다. 그리고 huf_head라는 전역 변수는 Huffman 나무의 뿌리 노드(Root)를 가리키도록 함수의 마지막에서 설정해 둔다.&lt;br /&gt;이렇게 &amp;lt;그림 6‑2&amp;gt; (하) 그림과 같은 Huffman 나무에서 각 문자에 대한 코드의 길이를 뽑아내어 보면 &amp;lt;그림 6‑3&amp;gt;과 같다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 6‑3&amp;gt; Huffman Tree에서 얻어진 코드&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;6.1 Huffman Encoding&lt;br /&gt;Huffman 압축 알고리즘은 한마디로 말해서 원래의 고정 길이 코드를 &amp;lt;그림 6‑3&amp;gt;의 가변 길이 코드로 변환하는 것이다. 그러므로 Huffman 나무에서 코드를 얻어내는 방법이 반드시 필요하다.&amp;nbsp;&lt;br /&gt;다음의 _make_code() 함수와 make_code() 함수가 Huffman 나무에서 코드를 생성하는 함수이다. _make_code() 함수가 재귀 호출 형태이어서 그것의 입구 함수로 make_code() 함수를 준비해 둔 것이다. 얻어진 코드는 전역 배열인 code[]에 저장되며, 코드의 길이는 len[]배열에 저장된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void _make_code(huf *h, unsigned c, int l)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; if(h-&amp;gt;left != NULL || h-&amp;gt;right != NULL) &amp;nbsp; &amp;nbsp; /* 내부 노드(분기 노드)이면 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c &amp;lt;&amp;lt;= 1; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 코드를 시프트, 결과적으로 0을 LSB에 집어넣는다. */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; l++; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 길이 증가 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; _make_code(h-&amp;gt;left, c, l); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 오른쪽 자식으로 재귀 호출 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c &amp;gt;&amp;gt;= 1; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 부모로 돌아가기 위해 다시 원상 복구 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; l--;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; else &amp;nbsp;&amp;nbsp; /* 외부 노드(정보 노드)이면 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[h-&amp;gt;data] = c; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 코드와 코드의 길이를 기록 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; len[h-&amp;gt;data] = l;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void make_code(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; /* _make_code()의 입구 함수 */&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* code[]와 len[]의 초기화 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[i] = len[i] = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; _make_code(huf_head, 0u, 0);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;위의 make_code()함수를 이용하면 이제 가변 길이 레코드를 얻어낼 수 있다. 그렇다면 이제 실제로 압축 함수 제작에 들어가야 하는데, 약간의 문제가 있다. 그것은 가변 길이의 코드를 사용하기 때문에 한 바이트씩 디스크로 입출력하게 되어 있는 기존의 시스템과는 좀 다른 점을 어떻게 표현하는가 하는 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이럴 때 필요한 것이 문제를 추상화 하는 것이다. 즉 디스크 파일을 한 바이트씩 쓰는 것이 아니라 한 비트씩 쓰는 것으로 착각하게 만드는 것이다. 이것을 담당하는 함수가 바로 put_bitseq()함수이다. put_bitseq() 함수를 사용하면 입력 파일에서 읽은 문자에 해당하는 코드를 비트별로 차례로 put_bitseq()의 인자로 주면 put_bitseq() 함수 내에서 알아서 한 바이트를 채워 출력 파일로 출력한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#define NORMAL 0&lt;br /&gt;#define FLUSH 1&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void put_bitseq(unsigned i, FILE *dst, int flag)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; /* 한 비트씩 출력하도록 하는 함수 */&lt;br /&gt;&amp;nbsp; static unsigned wbyte = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; /* 한 바이트가 꽉 차거나 FLUSH 모드이면 */&lt;br /&gt;&amp;nbsp; /* bitloc는 입력될 비트 위치를 지정하는 전역 변수 */&lt;br /&gt;&amp;nbsp; if (bitloc &amp;lt; 0 || glag == FLUSH) &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(wbyte, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; bitloc = 7; &amp;nbsp; &amp;nbsp; /* bitloc 재설정 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; wbyte = 0;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; wbyte |= i &amp;lt;&amp;lt; (bitloc--); &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 비트를 채워넣음 */&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;put_bitseq() 함수는 두 가지 모드로 작동한다. NNORMAL은 일반적인 경우로서 한 바이트가 꽉 차면 파일로 출력하는 모드이고, FLUSH 모드는 한 바이트가 꽉 차 있지 않더라도 현재의 wbyte를 파일로 출력한다. 이 두 가지 모드를 둔 이유는 파일의 끝에서 가변 길이 코드라는 특성 때문에 한 바이트가 채워지지 않는 경우가 생기기 때문이다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&amp;lt;Huffman 압축 알고리즘(FILE *src, char *srcname)&amp;gt;&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *dst = 출력 파일;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; length = src 파일의 길이;&lt;br /&gt;&amp;nbsp; 헤더를 출력; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 식별자, 파일 이름, 파일 길이 */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; get_freq(src); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 빈도를 구해 freq[] 배열에 저장 */&lt;br /&gt;&amp;nbsp; construct_trie(); &amp;nbsp; /* freq[]를 이용하여 Huffman Tree 구성 */&lt;br /&gt;&amp;nbsp; make_code(); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* Huffman Tree를 이용하여 code[], len[] 배열 설정 */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; code[]와 len[] 배열을 출력;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; destruct_trie(huf_head); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* Huffman Tree를 제거 */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; rewind(src);&lt;br /&gt;&amp;nbsp; bitloc = 7;&lt;br /&gt;&amp;nbsp; while(1)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if(feof(src)) break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (b = len[cur] - 1; b &amp;gt;= 0; b--)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_bitseq(bits(code[cur], b, 1), dst, NORMAL);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 비트별로 읽어서 put_bitseq() 수행 */&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; put_bitseq(0, dst, FLUSH); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 남은 비트열을 FLUSH 모드로 씀 */&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;Huffman 압축 알고리즘의 본체는 매우 간단 명료하다.&amp;nbsp;&lt;br /&gt;그런데 한 가지 살펴볼 것이 있다. 일반적으로 실제 파일을 이용하여 Huffman 나무를 구성하여 코드를 구현해 보면 그 길이가 대략 14를 넘지 않는다. 그렇다면 code[] 배열을 위해서는 여분을 생각해서 16비트를 할당하면 될 것이다. 그런데 코드의 길이인 len[] 배열을 위해서는 최대 0~14 까지만 표현 가능하면 되므로 한 바이트를 모두 사용하는 것보다 4비트만 사용하면 상당히 헤더의 길이를 줄일 수 있을 것이다. 이것을 &amp;lt;그림 6‑4&amp;gt;에 나타내었다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 6‑4&amp;gt; code[]와 len[]의 저장&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 6‑4&amp;gt;와 같이 저장하면 총 128 * 5 바이트 즉 640 바이트의 헤더가 덧붙게 된다. 이렇게 저장하는 방법은 소스의 huffman_comp() 함수에 구현되어 있으므로 참고하기 바란다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;또한 Huffman 압축법과 같은 가변 길이 압축법은 앞에서 설명한 바와 같이 원래 파일의 길이도 저장하고 있어야 복원이 제대로 이루어진다. 결국 다른 압축법에 비해서 Huffman 압축법은 헤더의 길이가 매우 긴 편이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;6.2 Huffman Decoding&lt;br /&gt;앞 절과 같은 방법으로 압축된 파일을 다시 원상태로 복원하는 방법을 생각해 보자. 압축된 파일의 헤더에는 code[]와 len[]에 대한 정보가 실려있다. 이 둘을 이용하면 원래의 Huffman 나무를 새로 구성할 수 있다. 우선 압축 파일의 헤더를 읽어 code[]와 len[]을 다시 설정했다고 하자.&amp;nbsp;&lt;br /&gt;그렇다면 다음의 trie_insert() 함수와 restruct_trie() 함수를 이용하여 Huffman 나무를 재구성할 수 있다. trie_insert() 함수는 인자로 받은 data의 노드를 code[data]와 len[data]를 이용하여 적절한 위치에 삽입한다. 삽입하는 방법은 매우 간단하다. code[data]의 비트를 차례로 분석하여 트라이를 타고 내려가면서 노드가 생성되어 있지 않으면 노드를 생성한다. 그래서 제 위치인 외부 노드에 도착하면 노드의 data 멤버에 인자 data를 설정하면 된다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void trie_insert(int data)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int b = len[data] -1; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 비트의 최좌측 위치(MSB) */&lt;br /&gt;&amp;nbsp; huf *p, *t;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; if (huf_head == NULL) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 뿌리 노드가 없으면 생성 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((huf_head = (huf*)malloc(sizeof(huf)) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; huf_head-&amp;gt;left = huf_head-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; p = t = huf_head;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; while (b &amp;gt;= 0)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (bits(code[data], b, 1) == 0) /* 현재 검사 비트가 0이면 왼쪽으로 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t = t-&amp;gt;left;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (t == NULL)&amp;nbsp; /* 왼쪽 자식이 없으면 생성 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((t = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t-&amp;gt;left = t-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p-&amp;gt;left = t;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 현재 검사 비트가 1이면 오른쪽으로 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t = t-&amp;gt;right;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (t == NULL)&amp;nbsp; /* 오른쪽 자식이 없으면 생성 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((t = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t-&amp;gt;left = t-&amp;gt;right = NULL;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p-&amp;gt;right = t;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p = t;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; b--;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; t-&amp;gt;data = data; &amp;nbsp; &amp;nbsp; /* 외부 노드에 data 설정 */&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;다음의 restruct_trie()함수는 위의 trie_insert() 함수에 코드의 길이가 0이 아닌 문자에 대해서만 Huffman 나무를 재구성하도록 인자를 보급한다.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;void restruct_trie(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; huf_head = NULL;&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (len[i] &amp;gt; 0) trie_insert(i);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;압축을 푸는 과정도 압축을 하는 과정과 유사하게 매우 간단하다. 압축을 푸는 과정을 한마디로 말하면 압축 파일에서 한 비트씩 읽어와서 그 비트대로 Huffman 나무를 순회한다. 그러다가 외부 노드에 도착하면 외부 노드의 data 멤버에 실린 값을 복원 파일에 써넣으면 되는 것이다.&amp;nbsp;&lt;br /&gt;여기서 문제가 되는 점은 압축 파일에서 한 비트씩 읽어내는 방법인데, 이것 또한 앞절에서 살펴본 바와 같이 파일에서 한 비트씩 읽어들이는 것처럼 착각할 수 있도록 다음의 get_bitseq() 함수를 작성하는 것으로 해결된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;int get_bitseq(FILE *fp)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; static int cur = 0;&lt;br /&gt;&amp;nbsp; if (bitloc &amp;lt; 0) &amp;nbsp; &amp;nbsp; /* 비트가 소모되었으면 다음 문자를 읽음 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(fp);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; bitloc = 7;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; return bits(cur, bitloc--, 1); &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 다음 비트를 돌려 줌 */&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;위의 부함수들을 이용하여 다음과 같이 Huffman 압축의 복원 알고리즘을 정리할 수 있다&lt;br /&gt;&lt;br /&gt;&amp;lt;Huffman 압축 복원 알고리즘(FILE *src)&amp;gt;&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *dst = 복원 파일;&lt;br /&gt;&amp;nbsp; huf *h;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; 헤더를 읽어들임; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 식별자와 파일 이름, 파일 길이 */&lt;br /&gt;&amp;nbsp; code[]와 len[]을 읽어들임;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; restruct_trie(); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* Huffman Tree를 재구성 */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; n = 0;&lt;br /&gt;&amp;nbsp; bitloc = -1;&lt;br /&gt;&amp;nbsp; while (n &amp;lt; length) &amp;nbsp; &amp;nbsp;&amp;nbsp; /* length 는 파일의 길이 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h = huf_head;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; while (h-&amp;gt;left &amp;amp;&amp;amp; h-&amp;gt;right)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (get_bitseq(src) == 1) &amp;nbsp; /* 읽어들인 비트가 1이면 오른쪽으로 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h = h-&amp;gt;right;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 0이면 왼쪽으로 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h = h-&amp;gt;left;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(h-&amp;gt;data, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; n++;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; destruct_trie(huf_head); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* Huffman Tree 제거 */&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;6.3 Huffman 압축 알고리즘 구현&lt;br /&gt;이제까지의 논의를 바탕으로 Huffman 압축 알고리즘을 실제로 구현한 C 소스이다.&lt;br /&gt;&lt;br /&gt;/* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;br /&gt;/* &amp;nbsp; HUFFMAN.C&amp;nbsp; :&amp;nbsp; Compression by Huffman's algorithm &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;br /&gt;/* &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;br /&gt;#include &amp;lt;string.h&amp;gt;&lt;br /&gt;#include &amp;lt;alloc.h&amp;gt;&lt;br /&gt;#include &amp;lt;dir.h&amp;gt;&lt;br /&gt;#include &amp;lt;time.h&amp;gt;&lt;br /&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Huffman 압축에 의한 것임을 나타내는 식별 코드 */&lt;br /&gt;#define IDENT1&amp;nbsp; 0x55&lt;br /&gt;#define IDENT2&amp;nbsp; 0x66&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;long freq[256];&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;typedef struct _huf&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; long count;&lt;br /&gt;&amp;nbsp; int data;&lt;br /&gt;&amp;nbsp; struct _huf *left, *right;&lt;br /&gt;} huf;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;huf *head[256];&lt;br /&gt;int nhead;&lt;br /&gt;huf *huf_head;&lt;br /&gt;unsigned code[256];&lt;br /&gt;int len[256];&lt;br /&gt;int bitloc = -1;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 비트의 부분을 뽑아내는 함수 */&lt;br /&gt;unsigned bits(unsigned x, int k, int j)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; return (x &amp;gt;&amp;gt; k) &amp;amp; ~(~0 &amp;lt;&amp;lt; j);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 파일에 존재하는 문자들의 빈도를 구해서 freq[]에 저장 */&lt;br /&gt;void get_freq(FILE *fp)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++)&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; freq[i] = 0L;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; rewind(fp);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; while (!feof(fp))&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; freq[getc(fp)]++;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 최소 빈도수를 찾는 함수 */&lt;br /&gt;int find_minimum(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int mindex;&lt;br /&gt;&amp;nbsp; int i;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; mindex = 0;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; for (i = 1; i &amp;lt; nhead; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (head[i]-&amp;gt;count &amp;lt; head[mindex]-&amp;gt;count)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; mindex = i;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; return mindex;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* freq[]로 Huffman Tree를 구성하는 함수 */&lt;br /&gt;void construct_trie(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; int m;&lt;br /&gt;&amp;nbsp; huf *h, *h1, *h2;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 초기 단계 */&lt;br /&gt;&amp;nbsp; for (i = nhead = 0; i &amp;lt; 256; i++)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (freq[i] != 0)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((h = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;count = freq[i];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;data = i;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;left = h-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; head[nhead++] = h;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 생성 단계 */&lt;br /&gt;&amp;nbsp; while (nhead &amp;gt; 1)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; m = find_minimum();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h1 = head[m];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; head[m] = head[--nhead];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; m = find_minimum();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h2 = head[m];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((h = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;count = h1-&amp;gt;count + h2-&amp;gt;count;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;data = 0;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;left = h1;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h-&amp;gt;right = h2;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; head[m] = h;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; huf_head = head[0];&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Huffman Tree를 제거 */&lt;br /&gt;void destruct_trie(huf *h)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; if (h != NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; destruct_trie(h-&amp;gt;left);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; destruct_trie(h-&amp;gt;right);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; free(h);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Huffman Tree에서 코드를 얻어냄. code[]와 len[]의 설정 */&lt;br /&gt;void _make_code(huf *h, unsigned c, int l)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; if (h-&amp;gt;left != NULL || h-&amp;gt;right != NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c &amp;lt;&amp;lt;= 1;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; l++;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; _make_code(h-&amp;gt;left, c, l);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c |= 1u;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; _make_code(h-&amp;gt;right, c, l);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; c &amp;gt;&amp;gt;= 1;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; l--;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[h-&amp;gt;data] = c;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; len[h-&amp;gt;data] = l;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* _make_code()함수의 입구 함수 */&lt;br /&gt;void make_code(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[i] = len[i] = 0;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; _make_code(huf_head, 0u, 0);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* srcname[]에서 파일 이름만 뽑아내어서 그것의 확장자를 huf로 바꿈 */&lt;br /&gt;void make_dstname(char dstname[], char srcname[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; char temp[256];&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; fnsplit(srcname, temp, temp, dstname, temp);&lt;br /&gt;&amp;nbsp; strcat(dstname, &quot;.huf&quot;);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 파일의 이름을 받아 그 파일의 길이를 되돌림 */&lt;br /&gt;long file_length(char filename[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *fp;&lt;br /&gt;&amp;nbsp; long l;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((fp = fopen(filename, &quot;rb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; return 0L;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; fseek(fp, 0, SEEK_END);&lt;br /&gt;&amp;nbsp; l = ftell(fp);&lt;br /&gt;&amp;nbsp; fclose(fp);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; return l;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;#define NORMAL 0&lt;br /&gt;#define FLUSH&amp;nbsp; 1&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 파일에 한 비트씩 출력하도록 캡슐화 한 함수 */&lt;br /&gt;void put_bitseq(unsigned i, FILE *dst, int flag)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; static unsigned wbyte = 0;&lt;br /&gt;&amp;nbsp; if (bitloc &amp;lt; 0 || flag == FLUSH)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(wbyte, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; bitloc = 7;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; wbyte = 0;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; wbyte |= i &amp;lt;&amp;lt; (bitloc--);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Huffman 압축 함수 */&lt;br /&gt;void huffman_comp(FILE *src, char *srcname)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int cur;&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp; int max;&lt;br /&gt;&amp;nbsp; union { long lenl; int leni[2]; } length;&lt;br /&gt;&amp;nbsp; char dstname[13];&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;br /&gt;&amp;nbsp; char temp[20];&lt;br /&gt;&amp;nbsp; int b;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; fseek(src, 0L, SEEK_END);&lt;br /&gt;&amp;nbsp; length.lenl = ftell(src);&lt;br /&gt;&amp;nbsp; rewind(src);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; make_dstname(dstname, srcname); &amp;nbsp; &amp;nbsp; /* 출력 파일 이름 만듬 */&lt;br /&gt;&amp;nbsp; if ((dst = fopen(dstname, &quot;wb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : Can't create file.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 압축 파일의 헤더 작성 */&lt;br /&gt;&amp;nbsp; putc(IDENT1, dst); &amp;nbsp;&amp;nbsp; /* 출력 파일에 식별자 삽입 */&lt;br /&gt;&amp;nbsp; putc(IDENT2, dst);&amp;nbsp;&lt;br /&gt;&amp;nbsp; fputs(srcname, dst); &amp;nbsp;&amp;nbsp; /* 출력 파일에 파일 이름 삽입 */&lt;br /&gt;&amp;nbsp; putc(NULL, dst); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* NULL 문자열 삽입 */&lt;br /&gt;&amp;nbsp; putw(length.leni[0], dst);&amp;nbsp; /* 파일의 길이 출력 */&lt;br /&gt;&amp;nbsp; putw(length.leni[1], dst);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; get_freq(src);&lt;br /&gt;&amp;nbsp; construct_trie();&lt;br /&gt;&amp;nbsp; make_code();&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* code[]와 len[]을 출력 */&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; 128; i++)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putw(code[i*2], dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = len[i*2] &amp;lt;&amp;lt; 4;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur |= len[i*2+1];&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(cur, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putw(code[i*2+1], dst);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; destruct_trie(huf_head);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; rewind(src);&lt;br /&gt;&amp;nbsp; bitloc = 7;&lt;br /&gt;&amp;nbsp; while (1)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (feof(src))&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; for (b = len[cur] - 1; b &amp;gt;= 0; b--)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; put_bitseq(bits(code[cur], b, 1), dst, NORMAL);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; put_bitseq(0, dst, FLUSH);&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* len[]와 code[]를 이용하여 Huffman Tree를 구성 */&lt;br /&gt;void trie_insert(int data)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int b = len[data] - 1;&lt;br /&gt;&amp;nbsp; huf *p, *t;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if (huf_head == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((huf_head = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; huf_head-&amp;gt;left = huf_head-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; p = t = huf_head;&lt;br /&gt;&amp;nbsp; while (b &amp;gt;= 0)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (bits(code[data], b, 1) == 0)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t = t-&amp;gt;left;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (t == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((t = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t-&amp;gt;left = t-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p-&amp;gt;left = t;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t = t-&amp;gt;right;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (t == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if ((t = (huf*)malloc(sizeof(huf))) == NULL)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nError : Out of memory.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; t-&amp;gt;left = t-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p-&amp;gt;right = t;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; p = t;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; b--;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; t-&amp;gt;data = data;&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* trie_insert()의 입구 함수 */&lt;br /&gt;void restruct_trie(void)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; huf_head = NULL;&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; 256; i++)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (len[i] &amp;gt; 0) trie_insert(i);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* 파일에서 한 비트씩 읽는 것처럼 캡슐화 한 함수 */&lt;br /&gt;int get_bitseq(FILE *fp)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; static int cur = 0;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if (bitloc &amp;lt; 0)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(fp);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; bitloc = 7;&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; return bits(cur, bitloc--, 1);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;/* Huffman 압축 복원 알고리즘 */&lt;br /&gt;void huffman_decomp(FILE *src)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; int cur;&lt;br /&gt;&amp;nbsp; char srcname[13];&lt;br /&gt;&amp;nbsp; FILE *dst;&lt;br /&gt;&amp;nbsp; union { long lenl; int leni[2]; } length;&lt;br /&gt;&amp;nbsp; long n;&lt;br /&gt;&amp;nbsp; huf *h;&lt;br /&gt;&amp;nbsp; int i = 0;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; rewind(src);&lt;br /&gt;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; if (cur != IDENT1 || getc(src) != IDENT2)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : That file is not Run-Length Encoding file&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; while ((cur = getc(src)) != NULL)&amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; srcname[i++] = cur;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp; srcname[i] = NULL;&lt;br /&gt;&amp;nbsp; if ((dst = fopen(srcname, &quot;wb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : Disk full? &quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; fcloseall();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; length.leni[0] = getw(src);&lt;br /&gt;&amp;nbsp; length.leni[1] = getw(src);&lt;br /&gt;&lt;br /&gt;&amp;nbsp; for (i = 0; i &amp;lt; 128; i++) &amp;nbsp; &amp;nbsp; &amp;nbsp; /* code[]와 len[]을 읽어들임 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[i*2] = getw(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; cur = getc(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; code[i*2+1] = getw(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; len[i*2] = bits(cur, 4, 4);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; len[i*2+1] = bits(cur, 0, 4);&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; restruct_trie(); &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 헤더를 읽어서 Huffman Tree 재구성 */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; n = 0;&lt;br /&gt;&amp;nbsp; bitloc = -1;&lt;br /&gt;&amp;nbsp; while (n &amp;lt; length.lenl)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h = huf_head;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; while (h-&amp;gt;left &amp;amp;&amp;amp; h-&amp;gt;right)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; if (get_bitseq(src) == 1)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h = h-&amp;gt;right;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; h = h-&amp;gt;left;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; putc(h-&amp;gt;data, dst);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; n++;&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; destruct_trie(huf_head);&lt;br /&gt;&amp;nbsp; fclose(dst);&lt;br /&gt;}&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;void main(int argc, char *argv[])&lt;br /&gt;{&lt;br /&gt;&amp;nbsp; FILE *src;&lt;br /&gt;&amp;nbsp; long s, d;&lt;br /&gt;&amp;nbsp; char dstname[13];&lt;br /&gt;&amp;nbsp; clock_t tstart, tend;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; /* 사용법 출력 */&lt;br /&gt;&amp;nbsp; if (argc &amp;lt; 3)&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Usage : HUFFMAN &amp;lt;a or x&amp;gt; &amp;lt;filename&amp;gt;&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; tstart = clock(); &amp;nbsp; /* 시작 시각 기록 */&lt;br /&gt;&amp;nbsp; s = file_length(argv[2]); &amp;nbsp; /* 원래 파일의 크기 구함 */&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if ((src = fopen(argv[2], &quot;rb&quot;)) == NULL)&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\n Error : That file does not exist.&quot;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; exit(1);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; if (strcmp(argv[1], &quot;a&quot;) == 0) &amp;nbsp; &amp;nbsp;&amp;nbsp; /* 압축 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; huffman_comp(src, argv[2]);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; make_dstname(dstname, argv[2]);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; d = file_length(dstname); &amp;nbsp; &amp;nbsp; &amp;nbsp; /* 압축 파일의 크기를 구함 */&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nFile compressed to %d%%.&quot;, (int)((double)d/s*100.));&lt;br /&gt;&amp;nbsp; }&lt;br /&gt;&amp;nbsp; else if (strcmp(argv[1], &quot;x&quot;) == 0) &amp;nbsp; &amp;nbsp; /* 압축의 해제 */&lt;br /&gt;&amp;nbsp; {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; huffman_decomp(src);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; printf(&quot;\nFile decompressed &amp;amp; created.&quot;);&lt;br /&gt;&amp;nbsp; }&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; fclose(src);&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;nbsp; tend = clock(); &amp;nbsp; &amp;nbsp; /* 종료 시각 저장 */&lt;br /&gt;&amp;nbsp; printf(&quot;\nTime elapsed %d ticks&quot;, tend - tstart); &amp;nbsp; /* 수행 시간 출력 : 단위 tick */&lt;br /&gt;&amp;nbsp; }&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;6.4 실행 결과&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;filetype Huffman &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-bin 113.80 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-txt 97.32 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;wave 94.76 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;pdf 92.34 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(big) 63.18 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(small) 572.88 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;sql 60.08&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;앞의 두 알고리즘과는 다르고 random-txt에서 압축이 되었다. 이는 전체 파일에 나타나는 문자가 몇 개 안되기 때문에 허프만 코드에 의해서 압축이 되었다고 생각할 수 있다. random-bin에서 압축이 안된 것은 상대적으로 많은 문자가 사용되었기 때문에 Trie의 Depth가 깊어져서 코드 값이 길어졌기 때문이다. 또한 text(small)의 경우 값이 커진 것은, 허프만 압축의 특성상 헤더가 추가 되는데, 원래 파일이 워낙 작았기 때문에 헤더의 크기에 영향을 받은 것이다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;7 Compare&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;filetype Run-Length Lempel-Zip Huffman &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-bin 100.59 100.59 113.80 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;random-txt 100.24 100.24 97.32 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;wave 98.20 92.34 94.76 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;pdf 99.03 83.54 92.34 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(big) 85.04 66.64 63.18 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;text(small) 98.71 89.69 572.88 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;sql 96.78 55.18 60.08&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;주로 텍스트 파일을 이용한 테스트 였기 때문에, Lempel-Zip압축 방법이 대체로 우수한 압축률을 보여주고 있다. Huffman 압축 방식도 파일이 극히 작은 경우만 아니라면 어느정도의 압축률을 보여주고 있다. Run-Length는 text파일의 경우가 아니고선 거의 압축을 하지 못했다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;8 JPEG (Joint Photographic Experts Group)&lt;br /&gt;8.1 JPEG이란&lt;br /&gt;1982년, 국제 표준화 기구 ISO(International Standard Organization)는 정지 영상의 압축 표준을 만들기 위해 PEG(Photographic Exports Group:영상 전문가 그룹)을 만들었다. PEG의 목표는 ISDN을 이용하여 정지 영상을 전송하기 위한 고성능 압축 표준을 만들자는 것이 주 목적이 되어 이를 수행하게 된 것이다.&lt;br /&gt;1986년 국제 전신 전화 위원회 CCITT(International Telegraph and Telephone Consultative Committee)에서는 팩스를 이용해 전송하기 위한 영상 압축 방법을 연구하기 시작하였다. CCITT의 연구 내용은 PEG의 그것과 거의 비슷하였기 때문에 1987년 이 두 국제 기구의 영상 전문가가 연합하여 공동 연구를 수행하게 되었고, 이 영상 전문가 연합을 Joint Photographic Expert Group이라고 하였으며, 이것의 약자를 따서 만든 말이 바로 JPEG이다. 1990년 JPEG에서는 픽셀당 6비트에서 24비트를 갖는 정지 영상을 압축할 수 있는 고성능 정지 영상 압축 방법에 대한 국제 표준을 만들어 내게 되었다. 후에 JPEG에서는 만든 압축 알고리즘을 이용한 파일 포맷이 만들어 지게 되고 이것이 오늘날까지 오게 된 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;8.2 다른 기술과의 비교&lt;br /&gt;다른 기술과 차별화 되는 JPEG의 압축기술 GIF파일 포맷에 대해서 먼저 알아보기로 한다. 이 영상이미지 데이터는 최대 256컬러 영상까지만 저장할 수 있었기 때문에 실 세계의 이미지와 같은 것들을 저장하는데 한계가 있다. 지금은 트루컬러까지 모니터에서 지원이 되는데 이를 다른 곳에 응용하기에는 무리가 있었던 것이다.&lt;br /&gt;GIF파일에서 사용하는 알고리즘을 LZW라고 하는데 이는 이를 개발한 Abraham Lempel과 Jakob Ziv이고 이를 개선시킨 Terry Welch등 세 사람의 이름을 따서 만든 압축 알고리즘으로 press, zoo, lha, pkzip, arj등과 같은 우리가 잘 알고 있는 프로그램에서 널리 사용되는 것이다. 이 압축 방법의 특징은 잡음의 영향을 크게 받기 때문에 애니메이션이나 컴퓨터 그래픽 영상을 압축하는 데는 비교적 효과적이라고 할 수 있었지만, 스캐너로 입력한 사진이나 실 세계의 이미지 같은 경우에 이를 압축하는 데는 효과적이지 못하다고 평가되고 있다.&lt;br /&gt;이에 비해 TIFF나 BMP등의 파일 포맷은 24비트 트루컬러까지 지원하여 시진 등의 이미지를 잘 표현해 낼 수 있지만 압축 알고리즘 자체가 LZW, RLE등의 방식을 사용하였으므로 압축률이 그렇게 좋지 않다는 단점이 있다.&lt;br /&gt;이에 반해 현재의 JPEG기술은 사진과 같은 자연 영상을 약 20:1이상 압축할 수 있는 성능을 가지고 있어서 현재 사용되고 있는 정지 영상 파일 포맷 중에서는 최고의 압축률을 자랑하고 있다.&lt;br /&gt;하지만 장점이 있으면 단점도 존재하기 마련이다. 단점이라면 기존의 영상 파일을 압축하는 시점에서 영상의 일부 정보를 손실 시키기 때문에 의료 영상이나 기타 중요한 영상 혹은 자연 영상 등에는 사용하는데 무리가 있다. 즉, GIF, TIFF등의 영상 파일은 영상을 압축한 후 복원하면 압축하기 전과 완전히 동일한 비손실 압축 방법이지만 JPEG이미지 포맷의 경우 손실 압축방법이라는 것이다. 하지만 손실이 된다고 해도 원래의 이미지와 그렇게 다르지 않은(거의 동일한) 이미지를 얻을 수 있기 때문에 영상 정보가 중요한 부분이 아니라면 효율적인 방법이라고 할 수 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;8.3 압축 방법&lt;br /&gt;JPEG이 압축을 대상으로 삼는 사진과 같은 자연의 영상이 인접한 픽셀간에 픽셀 값이 급격하게 변하지 않는다는 속성을 이용하여 사람의 눈에 잘 띄지 않는 정보만 선택적으로 손실 시키는 기술을 사용하고 있기 때문이다.&lt;br /&gt;이러한 압축 방법으로 인한 또 다른 단점이 있다. 인접한 픽셀간에 픽셀 값이 급격히 변하는 컴퓨터 영상이나 픽셀당 컬러 수가 아주 낮은 이진 영상이나, 16컬러 영상 등은 JPEG으로 압축하게 되면 오히려 압축 효율이 좋지 않을 뿐더러 손실된 부분이 상당히 거슬려 보인다는 것이다.&lt;br /&gt;즉, 다른 이미지 압축 기술과 차별화 되는 신기술임에는 분명하지만 사용목적에 따라서 적절한 압축 알고리즘을 사용하는 것은 기본이라 하겠다.&lt;br /&gt;JPEG의 압축방법 JPEG압축 알고리즘을 사용했다고 해서 이게 단 한가지의 압축 알고리즘만이 존재한다는 의미가 아님을 알고 있어야 한다. 다음과 같이 JPEG압축 알고리즘은 크게 네부분으로 나누어 볼 수 있다.&lt;br /&gt;1. DCT(Discrete Cosine Transform) 압축 방법 :&lt;br /&gt;일반적으로 JPEG영상이라고 하면 통용되는 압축 알고리즘이다.&lt;br /&gt;2. 점진적 전송이 가능한 압축 방법 :&lt;br /&gt;영상 파일을 읽어 오는 중에도 화면 출력을 할 수 있는 것을 의미하며 전송 속도가 낮은 네트워크를 통해 영상을 전송 받아 화면에 출력할 때 유용한 모드라고 할 수 있다. 즉, 영상의 일부를 전송 받아 저해상도의 영상을 출력할 수 있으며, 영상 데이터가 전송됨에 따라서 영상의 화질을 개선시키면서 화면에 출력이 가능하다는 것이다.&amp;nbsp;&lt;br /&gt;3. 계층 구조적 압축 알고리즘 :&lt;br /&gt;피라미드 코딩 방법이라고도 하며, 하나의 영상 파일에 여러 가지 해상도를 갖는 영상을 한번에 저장하는 방법이다.&amp;nbsp;&lt;br /&gt;4. 비손실 압축 :&lt;br /&gt;JPEG압축이라고 하여 손실 압축만 존재하는 것은 아니다. 이 경우에는 DCT압축 알고리즘을 사용하지 않고 2D-DPCM이라고 하는 압축방법을 이용하게 된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이처럼 JPEG표준에는 이와 같은 여러 가지 압축 방법이 규정되어 있지만, 일반적으로 JPEG로 영상을 압축하여 저장한다고 하면, DCT를 기반으로 한 압축 저장방법을 의미 한다.&lt;br /&gt;이러한 방법을 또 다른 용어로 Baseline JPEG이라고 하며, JPEG영상 이미지를 지원하는 모든 어플리케이션은 이 이미지 데이터를 처리할 수 있는 알고리즘을 반드시 포함하고 있어야 한다. 즉, 나머지 3가지의 압축 방법을 꼭 지원하지 않아도 되는 선택사항이라는 의미이다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;8.4 Baseline 압축 알고리즘&lt;br /&gt;이 방법은 손실 압축 방법이기 때문에 영상에 손실을 많이 주면 화질이 안 좋아지는 대신 압축이 많이 되고, 손실을 적게 주면 좋은 화질을 유지하기는 하지만 압축이 조금밖에 되지 않는다는 것이다. 이처럼 손실의 정도를 나타내는 값을 Q펙터라고 말하는데 이 값의 범위는 1부터 100까지의 값으로 나타나게 된다. Q펙터가 1이면 최대의 손실을 내면서 가장 많이 압축되는 방식이고 100이면 이미지 손실을 적개 주기는 하지만 압축은 적게 되는 방식이다. Q펙터가 100이라고 하여 비손실 압축이 이루어 지는 것은 아니라는데 주의할 필요가 있다.&lt;br /&gt;베이스라인 JPEG은 JPEG압축 최소 사양으로, 모든 JPEG관련 애플리케이션은 적어도 이 방법을 반드시 지원해야 한다고 했다. 이러한 방식이 어떤 단계를 거치면서 수행되게 되는지 알아보도록 하자.&lt;br /&gt;1. 영상의 컬러 모델(RGB)을 YIQ모델로 변환한다.&amp;nbsp;&lt;br /&gt;2. 2*2 영상 블록에 대해 평균값을 취해 색차(Chrominance)신호 성분을 다운 샘플링 한다.&amp;nbsp;&lt;br /&gt;3. 각 컬러 성분의 영상을 8*8크기의 블록으로 나누고, 각 블록에 대해 DCT알고리즘을 수행시킨다.&amp;nbsp;&lt;br /&gt;4. 각 블록의 DCT계수를 시각에 미치는 영향에 따라 가중치를 두어 양자화 한다.&amp;nbsp;&lt;br /&gt;5. 양자화된 DCT계수를 Huffman Coding방법에 의해 코딩하여 파일로 저장한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이렇게 압축된 파일을 다시 원 이미지로 복원할 때는 반대의 과정을 거치게 된다. 이러한 압축과 복원에 관해 어떤 식으로 처리가 되는지 그림으로 살펴보면 아래와 같다&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&amp;lt;그림 7‑1&amp;gt; JPEG Encoding / Decoding 단계&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;8.5 JPEG의 실제 압축 / 복원 과정&lt;br /&gt;1. &amp;nbsp;컬러모델 변환 :&lt;br /&gt;컬러를 표현하는 방법에는 여러 가지가 있다. 가장 흔하게 사용하는 방법으로 RGB가 있다. 하지만 이러한 표현방법이 이것뿐이라면 좋겠지만 실제로는 그렇질 않다는 것이다.&lt;br /&gt;RGB컬러는 모니터에서 사용하는 색상이고 빛의 3원색을 조합했을 때 나오는 색도 세 가지인데 이들은&amp;nbsp; 하늘색(Cyan), 주황색(Magenta), 노랑색 (Yellow)이고, 이들의 조합으로도 모든 컬러를 표현 할 수 있게 된다. 이러한 방법을 CMY모델이라고 하며, 컬러 프린터가 이 모델을 이용해서 프린팅을 하게 된다.&lt;br /&gt;우리가 논의 하려고 하는 YIQ라고 하는 모델은 밝기(Y : Luminance)와 색차(Chrominance : Inphase &amp;amp; Quadrature) 정보의 조합으로 컬러를 표현하는 방법이다.&lt;br /&gt;다른 방법도 있다. 색상(Hue), 채도(Saturation), 명도(Intensity)의 색의 3요소로 색을 표현하는 HSI모델 등 여러 가지 컬러 모드가 있는 것이다.&lt;br /&gt;RGB모델은 YIQ모델로 변환하는 방법이 있는데.. 이른 각각의 모델들도 서로 변환이 될 수 있다. RGB를 YIQ모델로 변환하는 식은 다음과 같다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;Y &amp;nbsp;0.299 0.587 0.114 &amp;nbsp;R &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;I = 0.596 -0.275 -0.321 &amp;nbsp;G &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;Q &amp;nbsp;0.212 -0.523 -0.311 &amp;nbsp;B&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;lt;그림 7‑2&amp;gt; RGB의 YIQ 변환 식&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;이와 같은 식을 이용해서 JPEG압축을 하기 위해서는 컬러 모델을 YIQ모델로 변환을 한다. 많은 모델 중에서 이 모델로 변환을 하는 이유는 이중에서 Y성분은 시각적으로 눈에 잘 띄는 성분이지만 I, Q성분은 시각적으로 잘 띄지 않는 정보를 담고 있는 성질이 있어서, Y값만을 살려두고 I, Q값을 손실시키면 사람이 봤을 때에는 화질의 차이를 별로 느끼지 않으면서 정보를 양을 줄일 수 있는 장점이 있기 때문이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;2. 색차 신호 성분 다운샘플링 : 앞에서도 이야기 했던 바와 같이 I와 Q의 성분은 시각적으로 눈에 잘 띄지 않는 정보들이기 때문에 이정보는 손실을 시켜도 사람이 보는데 특별한 지장을 주지 않는다.&lt;br /&gt;손실을 시킨다는 의미이지 지워버린다는 의미는 아니다. 즉, Y값은 기억시키고, I, Q값은 가로 세로 2x2혹은 2x1크기를 블록당 한 개 만을 기억시키는 방식으로 정보만을 줄인다는 개념이다.&lt;br /&gt;즉, 두번째 단계인 지금은 컬러모델을 변환한 것을 ‘다운 샘플링’ 한다는 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;3. DCT적용 : JPEG알고리즘을 적용할 이미지 영상 블록에 어떤 주파수 성분이 얼마만큼 포함되어 있는지를 나타내는 8x8크기의 계수를 얻을 수 있게 된다. 픽셀간의 값의 변화율이 작은 밋밋한 영상은 저주파 성분을 나타내는 계수가 크게 나오게 되고, 픽셀간의 변화율이 큰 복잡한 영상은 고주파 성분을 나타내는 계수가 크게 나온다.&amp;nbsp; 컬러를 표시하기 위한 각각의 YIQ성분은 8x8크기의 블록으로 나뉘어지고, 각 블록에 대해 DCT가 수행이 된다.&lt;br /&gt;DCT는 Discrete Cosine Transform의 약자로 영상 블록을 서로 다른 주파수 성분의 코사인 함수로 분해하는 과정을 일컷는다.&amp;nbsp;&lt;br /&gt;이처럼 DCT를 수행하는 이유는 영상데이터의 경우 저주파 성분은 시각적으로 큰 정보를 가지고 있는 반면 고주파 성분의 경우는 시각적으로 별 의미가 없는 정보를 가지고 있기 때문에 시각적으로 적은 부분을 손실을 줌으로써 시각적인 손실을 최소화하면서 데이터 양을 줄이기 위한 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;4. DCT 계수의 양자화 : 이론적으론 DCT자체만으로는 영상에 손실이 일어나지 않으며, DCT계수들을 기억하고 있으면 DCT역 변환을 통해 원 영상을 그대로 복원해 낼 수 있다. 실제로 영상에 손실을 주며, 데이터 량을 줄이는 부분은 DCT계수를 양자화 하는 바로 이 단계에서 이다.&lt;br /&gt;계수 양자화란 여러 개의 값을 하나의 대표 값으로 대치시키는 과정을 말한다. 예를 들어 0에서 10까지의 값은 5로 대치시키고 10에서 20까지의 값은 15로 대치시키면 0부터 20까지의 값으로 분포되는 수많은 수들을 5와 15라는 두 개의 값으로 양자화 시킨 것이 된다. 이처럼 양자화 과정을 거치면 기억해야 할 수많은 경우의 수가 단지 몇 개의 경우의 수로 축소되기 때문에 데이터에 손실이 일어나지만 데이터 량을 크게 줄이는 장점이 있다.&lt;br /&gt;양자화를 조밀하게 하면 데이터의 손실이 적어지는 대신 데이터 량은 그만큼 조금 줄게 되고, 양자화가 성기면 데이터의 손실은 많아지는 대신 데이터 량은 그만큼 많이 줄게 됩니다.&lt;br /&gt;저주파 영역을 조밀하게 양자화하고 고주파 영역은 성기게 양자화하면 전체적으로 영상의 손실이 최소화 되면서 데이터 량의 감소를 극대화 시킬 수 있게 된다.&lt;br /&gt;이처럼 주파수 성분 별로 어느 정도 간격으로 양자화를 하느냐에 따라 데이터 이미지의 질이 결정이 되는데 ISO에서는 실험적으로 결정한 양자화 테이블을 이용하여 양자화를 수행하는 것이 통상적이다.&lt;br /&gt;영상의 화질과 압축률을 결정하는 변수인 Q펙터가 작용하는 부분도 바로 이 단계로. Q펙터를 크게 하면 전체적으로 양자화를 조밀하게 해서 손실을 줄임으로써 영상의 화질을 좋게 하고, Q펙터를 크게 하면 전체적으로 양자화 간격을 넓혀 화질에 손상을 많이 주어서 압축이 많이 되도록 하게 된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;5. Huffman Coding : 양자화된 DCT계수는 자체로서 압축 효과를 갖지만 이를 더 효율적으로 압축하기 위해서 Huffman Coding으로 다시 한번 압축하여 파일에 저장을 한다.&amp;nbsp;&lt;br /&gt;JPEG의 실제 압축과 복원과정 알아보기 지금까지 영상데이터가 인코딩되는 과정을 단계적으로 알아보았다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;8.6 확장 JPEG&amp;nbsp;&lt;br /&gt;베이스라인 JPEG은 JPEG에 필요한 최소의 기능만을 규정한 것이라고 설명을 했다. 이 외에도 JPEG내에는 많은 압축 방법이 존재한다. 확장 JPEG의 기능은 반드시 지원할 필요는 없지만, JPEG파일 내에서 사용될 수 있으므로 확장 JPEG의 기능을 일단 인식은 할 수 있어야 하고, 지원되지 않는 기능이 파일에 들어 있을 경우 에는 에러메시지를 출력하도록 하여야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9 MPEG (Moving Picture Expert Group)&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.1 MPEG의 개념&lt;br /&gt;MPEG은 동영상 압축 표준이다. MPEG 표준에는 MPEG1과 MPEG2, MPEG4, MPEG7 이 있다. 각각에 대해 비디오(동화상 압축), 오디오(음향 압축), 시스템(동화상과 음향 등이 잘 섞여있는 스트림)에 대한 명세가 존재한다.&lt;br /&gt;MPEG1은 1배속 CD 롬 드라이버의 데이터 전송속도인 1.5 Mbps에 맞도록 설계되었다. 즉 VCR 화질의 동영상 데이터를 압축했을 때 최대비트율이 1.15 Mbps가 되도록 MPEG1-비디오 압축 알고리즘이 정해졌으며, 스테레오 CD 음질의 음향 데이터를 압축했을 때 최대비트율이 128 Kbps(채널당 64Kbps)가 되도록 MPEG1-오디오 압축 알고리즘이 정해졌다. MPEG1-시스템은 단순히 음향과 동화상의 동기화를 목적으로 잘 섞어놓은(interleave) 것이다.&lt;br /&gt;MPEG2는 보다 압축 효율이 향상되고 용도가 넓어진 것으로서, 보다 고화질/고음질의 영화도 대상으로 할 수 있고 방송망이나 고속망 환경에 적합하다. 즉 방송 TV (스튜디오 TV, HDTV) 화질의 동영상 데이터를 압축했을 때 최대비트율이 4 ( 6, 40)Mbps가 되도록 MPEG2-비디오 압축 알고리즘이 정해졌으며, 여러 채널의 CD 음질 음향 데이터를 압축했을 때 최대 비트율이 채널당 64 Kbps 이하로 되도록 MPEG2 오디오 압축 알고리즘이 정해졌다.&lt;br /&gt;MPEG2 -시스템은 여러 영화를 한데 묶어 전송하여주고 이때 전송시 있을 수 있는 에러도 복구시켜줄 수 있는 일종의 트랜스포트 프로토콜이다.&lt;br /&gt;MPEG4는 매우 높은 압축 효율을 얻음으로써 매우 낮은 비트율로 전송하기 위한 것이다. 이를 사용함으로써 이동 멀티미디어 응용을 구현할 수 있다. MPEG4는 아직 표준이 완전히 만들어지지 않았으며, 매우 높은 압축 효율을 위해 내용기반(model-based) 압축 기법이 연구되고 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.2 MPEG의 표준&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.2.1 MPEG 1&lt;br /&gt;MPEG 1의 표준은 4 부분으로 나누어져 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;1. 다중화 시스템부 : 동영상 및 음향 신호들의 비트열(Bit-stream) 구성 및 동기화 방식을 기술&lt;br /&gt;2. 비디오부 : DCT와 움직임 추정(Motion Estimation)을 근간으로 하는 동영상 압축 알고리즘을 기술&lt;br /&gt;3. 오디오부 : 서브밴드 코딩을 근간으로 하는 음향 압축 알고리즘을 기술&lt;br /&gt;4. 적합성 검사부 : 비트열과 복호기의 적합성을 검사하는 방법&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;MPEG 1 영상 압축 알고리즘의 기본 골격은 움직임 추정과 움직임 보상을 이용하여 시간적인 중복 정보 제거한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;1. 시간적인 중복성 - 수십 장의 정지 영상이 시간적으로 연속하여 움직일 때 앞의 영상과 현재의 영상은 서로 비슷한 특징을 보유&lt;br /&gt;2. 제거방법 - DPCM(Differential PCM) 사용&lt;br /&gt;3. DCT 방법을 이용하여 공간적인 중복 정보 제거&lt;br /&gt;4. 공간 중복성 - 서로 인접한 화소끼리는 서로 비슷한 값을 소유&lt;br /&gt;5. 제거방법 - DCT와 양자화를 이용&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.2.2 MPEG 2&lt;br /&gt;MPEG 2의 표준화는 1990년 말부터 본격화 되었고 디지털 TV와 고선명 TV(HDTV) 방송에 대한 요구 사항이 추가되었고, 그 후 1995년 초 국제 표준으로 채택되었다.&lt;br /&gt;MPEG 1과 마찬가지고 4 부분으로 나누어져 있지만 비디오부에서 디지털 TV와 고선명 TV 방송에 대한 사항이 첨가 되어있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;1. 다중화 시스템부 : 음향, 영상, 다른 데이터 전송, 저장하기 위한 다중화 방법 정의&lt;br /&gt;2. 비디오부 : 고화질 디지털 영상의 부호화를 목표로 MPEG-1에서 요구하는 순방 향 호환성을 만족, 격행 주사(Interlaced scan) 영상 형식과 HDTV 수준 의 해상도 지원 명시. 5개의 프로파일(Profile)과 4개의 레벨(Level)이 정 의&lt;br /&gt;3. 오디오부 : 다중 채널 음향(샘플링 비율=16, 22.05, 24KHz)의 저전송율 부호화를 목표. 5개의 완전한 대역 채널(Left, Right, Center, 2 surround), 부가적 인 저주파수 강화 채널, 7개 해설 채널, 여러나라의 언어 지원 채널들 이 지원. 채널당 64Kbits/sec 정도의 고음질로 스테레오와 모노음을 부 호화&lt;br /&gt;4. 적합성 검사부&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;MPEG 2 영상 압축 과정&lt;br /&gt;1. 움직임 추정과 움직임 보상을 이용하여 시간적인 중복성을 제거&lt;br /&gt;2. DCT와 양자화를 이용하여 공간적인 중복성을 제거&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;앞의 두 가지의 기본적인 압축 방법에 의하여 얻어진 데이타들의 발생 확률에 따라 엔트로피(Entrophy) 부호화 방법을 적용함으로써 최종적으로 압축 효율을 극대화&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;MPEG 2 표준은 멀티미디어 응용 서비스에 필수적인 디지털 저장 매체와 ISDN(Integrated Service Digital Network), B-ISDN(Broadband ISDN), LAN과 같은 디지털 통신 채널, 위성, 케이블, 지상파에 의한 디지털 방송매체 등을 응용 대상으로 삼고 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.2.3 MPEG 4&lt;br /&gt;MPEG 4의 목적은 빠른 속도로 확산되고 있는 고성능 멀티미디어 통신 서비스 고려하여 기존의 방식과 새로운 기능들을 모두 지원할 수 있는 부호화 도구 제공를 제공하는 것이다. 그리고 양방향성, 높은 압축율 및 다양한 접속을 가능케 하는 AV(Audio/Video) 표준 부호화 방식을 지원한다. 또한 내용 기반 부호화(Content-based coding) 기술을 개발하고 초저속 전송에서부터 초고속 전송에 이르기까지 모든 영상 응용 분야에 융통성있게 대응할 수 있도록 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;주요 기능으로는 내용 기반 대화형 기능과 압축 기능, 광범위한 접근 기능을 갖고 있으며 내용 기반 대화형 기능은 멀티미디어 데이터 접근 도구, 처리 및 비트열 편집, 복합 영상 부호화, 향상된 시간 방향으로의 임의 접근을 할 수 있고 압축기능은 향상된 압축 효율, 복수개의 영상물을 동시에 부호화 할 수 있다. 그리고 광범위한 접근 기능은 내용 기반의 다단계 등급 부호화, 오류에 민감한 환경에서의 견고성을 갖도록 한다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.3 MPEG의 기본적인 압축 원리&lt;br /&gt;처음에 MPEG-1은 352 * 240에 30을 기준으로 하는 낮은 해상도로 출발하였다. 그러나 음향 부분에서만은 CD수준인 16BIT 44.1Khz STEREO 수준으로 표준안이 제정되었다. MPEG에서 사용하는 동영상 압축원리는 두가지 기본 기술을 바탕으로 하고 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.3.1 시간,공간의 중복성 제거&lt;br /&gt;동영상은 정지 영상과 달리 정지영상을 여러장 연속하여 저장하여 이루어지는 파일이다. 예를들어 AVI 파일을 동영상 편집 프로그램으로 풀어서 본다면 거의 비슷한 화면이 프레임수에 따라 여러장 있는 것을 알 수가 있다. MPEG은 이러한 시간에 따른 화면의 중복성을 제거하고 착시현상을 이용하여 실제와 비슷한 영상을 만들어내는 원리를 가지고 있다. 이러한 중복성은 시간적 중복성(TEMPORAL REDUDANCY)과 공간적 중복성(SPATIAL REDUDANCY)이 있는데 앞의 AVI화일의 예가 시간적 중복성이 되고 공간적 중복성은 예를 들어 카메라가 정지영상이나 한 인물을 집중적으로 촬영할 때 그 영상들의 공간 구성값의 위치는 비슷한 값들이 비슷한 위치에서 이동이 적어지는 확률이 높아지기 때문에 나타나는 중복성이라고 할 수 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;위에서 설명한 두가지 항목을 해결하기 위한 방법으로 시간의 중복성을 해결하기 위한 방법으로는 각 화면의 움직임 예상(Motion Estimation)의 개념을 응용하고 공간의 중복성을 해결하기 위한 방법으로는 DCT (Discreate Cosine Transforms)라는 개념과 양자화(quantigation)의 개념을 응용한다. vMotion Estimation은 16 * 16 크기의 블록으로 수행을 하며 DCT는 8 * 8 크기로 수행된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;v DCT(Discreate Cosine Transforms)&lt;br /&gt;영상에 있어서 고주파 부분을 버리고 저주파 부분에 집중시켜 공간적 중복성을 꾀하는 개념이다. 예를들어 에지(EDGE)가 많은 부분, 즉 얼굴의 윤곽이나, 머리카락이 흩날리는 부분 등은 화소 변화가 많으므로 이 부분을 제거하여 압축률을 높인다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;v 양자화(quantigation)&lt;br /&gt;DCT로 구해진 화상정보의 계수값을 더 많은 '0'이 나오도록 일정한 값(quantizer value)으로 나오게 나누어 주다. 따라서 영상 데이터의 손실이 있더라도 사람의 눈에서 이를 시각적으로 감지하기 힘들게 된다면 어느 정도의 데이터에 손실을 가하여 압축률을 높이게 되는 것이다. 가장 단순한 양자화기는 스칼라(Scalar)양자화기로써 VLC(가변길이 부호기)와 병행하여 사용된다. 우선 입력 데이터가 가질 수 있는 값의 범위를 제한된 숫자의 구역으로 분할하여 각 구역의 대표 값을 지정한다. 스칼라 양자화기는 입력되는 화소값이 속하는 구역의 번호를 출력하고 구역의 번호로부터 이미 지정된 대표 값을 출력한다. 여기서 구역의 번호를 양자화 인덱스(quantigation index)라 하고 각 구역의 대표 값을 양자화 레벨(quantigation level)이라고 한다.&lt;br /&gt;이 과정에서 최종적으로 나오는 이진 부호를 연속적으로 연결한 것을 비트 열이라 부르고 이보다 진보된 방법이 벡터 양자화기로서 전자의 스칼라 양자화기보다 압축률이 높다.&lt;br /&gt;이 방법의 경우 입력이 인접한 화소의 블럭으로 이루어지며 양자화 코드에서 가장 유사한 코드 블록(양자화 레벨값에 해당)을 찾아 인덱스 부호값으로 결정한다. 간단하게 말하자면 스칼라(Scalar)양자화기는 2차원 적으로 압축하는 방식이며 벡터 양자화기는 3차원적으로 압축하는 방법이다.&lt;br /&gt;MPEG-1에서는 버퍼의 상태에 따라서 이 값이 가변적으로 바뀌게 되어있고 MPEG-2에서는 이 방법에 화면의 복잡도를 미리 예측하여 양자화 값이 변하도록 미리 분석(forward analysys)하는 방법도 사용되어 화질을 향상시킬 수 있다..&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;v Motion Estimation&lt;br /&gt;일반적인 실시간 동영상 압축방식에서는 아날로그 시그널(영상)을 이용해서 디지털 화하는데 일정한 움직임을 연산하여 추정할 수 있는 기능이 필요한데 이 기능을 수행해 주는 역할을 Motion Estimation이라고 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9.3.2 I,P,B영상&lt;br /&gt;이 세가지 영상은 MPEG 화상정보를 구성하고 있는 세가지 요소이다. 각 요소의 역할은 다음과 같다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;① I-FRAME (Intra-Frame) : 정지 영상을 압축하는 것과 동일한 방법을 사용하는 것으로 연속되는 화면의 기준을 이루는 화면이다.&lt;br /&gt;② P-FRAME (Predict-Frame) : 이전에 재생된 영상을 기준으로 삼아 기준 영상 (I-PRAME)과의 차이점만을 보충하여 재생하는 화면이며 그 다음에 재생될 P-영상의 기준이 되기도 한다.&lt;br /&gt;③ B-FRAME (Bidirectional-Frame) : I영상과 P영상 또는 P영상과 다음 P영상 사이에 들 어가는 재생된 영상인데 두 개의 기준영상을 양방향 에서 예측해서 붙여내는 영상이라서 이러한 이름을 갖는다.&lt;br /&gt;④ 각 프레임의 배열 및 진행순서는 다음과 같다. (MPEG-1의 경우)&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;영상의 진행 방향&lt;br /&gt;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20&lt;br /&gt;┃I┃B┃B┃P┃B┃B┃P┃B┃B┃I┃B┃B┃P┃B┃B┃P┃B┃B┃I┃B┃...&lt;br /&gt;└── MPEG의 1프레임 ───┘&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;10 Conclusion&lt;br /&gt;지금까지 세 가지의 압축 알고리즘을 살펴 보았다. Run-Length 압축법과 Lempel-Ziv 압축법은 고정 길이 압축법이고, Huffman 압축법은 가변 길이 압축법이라는 점에서 크게 구분된다. 그리고 그 프로그래밍도 판이하게 달랐다.&amp;nbsp;&lt;br /&gt;일반적으로 압축 알고리즘의 속도 면에서 보면 Run-Length 압축법이 가장 빠르지만 압축률은 가장 낮다. Run-Length 압축법은 파일 내에 동일한 문자의 연속된 나열이 있어야만 압축이 가능하기 때문이다.&amp;nbsp;&lt;br /&gt;이에 비해 Lempel-Ziv 압축법은 동일한 문자의 나열을 압축할 뿐 아니라, 동일한 패턴까지 압축하기 때문에 대부분의 경우에서 압축률이 가장 뛰어나다. 그러나 패턴 검색 방법이 최적화되지 않으면 속도면에서 불만을 안겨준다.&amp;nbsp;&lt;br /&gt;Huffman 압축법은 텍스트 파일처럼 파일을 구성하는 문자의 종류가 적거나, 파일을 구성하는 문자의 빈도의 편차가 클수록 압축률이 좋아진다. Huffman 압축법은 많은 빈도수의 문자를 짧은 길이의 코드로, 적은 빈도수의 문자를 긴 길이의 코드로 대치하는 방법이어서 Huffman 나무가 한쪽으로 쏠려 있을수록 압축률이 좋다.&amp;nbsp;&lt;br /&gt;그러나 빈도수가 고를 경우 Huffman 나무는 대체로 균형을 이루게 되어 압축률이 현저히 떨어진다. 또한 Huffman 압축법은 빈도수의 계산을 위해서 파일을 한번 미리 읽어야 하고, 다음에 실제 압축을 위해서 파일을 또 읽어야 하는 부담이 있어 실행 속도가 그리 빠르지는 않다.&lt;br /&gt;실제 상용 압축 프로그램들은 주로 Huffman 압축법의 개량이나 Lempel-Ziv 압축법의 개량, 혹은 이 둘과 Run-Length 압축법까지 총동원해서 최대의 압축률과 최소의 실행시간을 보이도록 최적화되어 있다.&amp;nbsp;&lt;br /&gt;MPEG에 대해서는 가볍게 알아본 수준이므로 따로 결론을 내리지 않는다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;10.1 테스트 실행 결과 표&lt;br /&gt;&lt;br /&gt;Lempel-Ziv Huffman Run-Length &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;　 압축전 압축후 압축률 시간&lt;br /&gt;(tick) 압축후 압축률 시간&lt;br /&gt;(tick) 압축후 압축률 시간&lt;br /&gt;(tick) &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;10485760 10526665 100.39 &amp;nbsp;519 10481196 99.96 &amp;nbsp;333 10526667 100.39 &amp;nbsp;63 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1048576 1052778 100.40 &amp;nbsp;52 1048699 100.01 &amp;nbsp;33 1052778 100.40 &amp;nbsp;6 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;102400 102837 100.43 &amp;nbsp;4 103000 100.59 &amp;nbsp;3 102837 100.43 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;10240 10287 100.46 &amp;nbsp;0 10888 106.33 &amp;nbsp;0 10287 100.46 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1024 1037 101.27 &amp;nbsp;0 1660 162.11 &amp;nbsp;0 1037 101.27 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;10485760 10485745 100.00 &amp;nbsp;672 8755440 83.50 &amp;nbsp;282 10485759 100.00 &amp;nbsp;61 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1048576 1048586 100.00 &amp;nbsp;68 875895 83.53 &amp;nbsp;29 1048587 100.00 &amp;nbsp;6 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;102400 102413 100.01 &amp;nbsp;6 86042 84.03 &amp;nbsp;3 102413 100.01 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;10240 10252 100.12 &amp;nbsp;0 9162 89.47 &amp;nbsp;0 10252 100.12 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1024 1035 101.07 &amp;nbsp;0 1496 146.09 &amp;nbsp;0 1035 101.07 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;194166 186055 95.82 &amp;nbsp;17 180201 92.81 &amp;nbsp;5 189436 97.56 &amp;nbsp;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;23030 22474 97.59 &amp;nbsp;2 19720 85.63 &amp;nbsp;0 23024 99.97 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;11140 9946 89.28 &amp;nbsp;1 7094 63.68 &amp;nbsp;0 10642 95.53 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;4290 3876 90.35 &amp;nbsp;0 3212 74.87 &amp;nbsp;0 4212 98.18 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1837 1590 86.55 &amp;nbsp;0 1628 88.62 &amp;nbsp;0 1836 99.95 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;616 582 94.48 &amp;nbsp;0 1004 162.99 &amp;nbsp;0 604 98.05 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;10586696 8461305 79.92 &amp;nbsp;1093 8588778 81.13 &amp;nbsp;290 9952827 94.01 &amp;nbsp;61 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;2855505 1752182 61.36 &amp;nbsp;218 2435711 85.30 &amp;nbsp;80 2829020 99.07 &amp;nbsp;18 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1578364 1314265 83.27 &amp;nbsp;102 1519472 96.27 &amp;nbsp;49 1574894 99.78 &amp;nbsp;9 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1325260 949081 71.61 &amp;nbsp;84 1196847 90.31 &amp;nbsp;39 1314600 99.20 &amp;nbsp;7 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1224317 874194 71.40 &amp;nbsp;93 947260 77.37 &amp;nbsp;31 1211083 98.92 &amp;nbsp;8 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;500156 455638 91.10 &amp;nbsp;30 483908 96.75 &amp;nbsp;15 498860 99.74 &amp;nbsp;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;319310 300707 94.17 &amp;nbsp;20 313423 98.16 &amp;nbsp;9 319376 100.02 &amp;nbsp;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;238011 234044 98.33 &amp;nbsp;12 238312 100.13 &amp;nbsp;7 238467 100.19 &amp;nbsp;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;132195 129917 98.28 &amp;nbsp;7 132607 100.31 &amp;nbsp;4 132438 100.18 &amp;nbsp;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;103552 98095 94.73 &amp;nbsp;5 102657 99.14 &amp;nbsp;3 103245 99.70 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;122858 91968 74.86 &amp;nbsp;9 111645 90.87 &amp;nbsp;3 121114 98.58 &amp;nbsp;1 &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;9506895 6618476 69.62 &amp;nbsp;1278 5490732 57.76 &amp;nbsp;188 8535883 89.79 &amp;nbsp;53 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;647976 470069 72.54 &amp;nbsp;83 374771 57.84 &amp;nbsp;12 596136 92.00 &amp;nbsp;3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;598794 361639 60.39 &amp;nbsp;93 328800 54.91 &amp;nbsp;11 489528 81.75 &amp;nbsp;3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;575805 375515 65.22 &amp;nbsp;71 331114 57.50 &amp;nbsp;11 525112 91.20 &amp;nbsp;3 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;556584 240776 43.26 &amp;nbsp;111 272773 49.01 &amp;nbsp;9 367820 66.09 &amp;nbsp;2 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;265104 144257 54.42 &amp;nbsp;45 139221 52.52 &amp;nbsp;5 196960 74.30 &amp;nbsp;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;103894 79976 76.98 &amp;nbsp;12 61884 59.56 &amp;nbsp;2 97805 94.14 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;51266 39614 77.27 &amp;nbsp;7 29175 56.91 &amp;nbsp;1 47574 92.80 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;20529 15489 75.45 &amp;nbsp;2 12665 61.69 &amp;nbsp;0 19418 94.59 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;10304 7602 73.78 &amp;nbsp;1 6800 65.99 &amp;nbsp;0 9065 87.98 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;5121 3166 61.82 &amp;nbsp;1 3384 66.08 &amp;nbsp;0 4069 79.46 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1021 704 68.95 &amp;nbsp;0 1209 118.41 &amp;nbsp;0 781 76.49 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;4114 2919 70.95 &amp;nbsp;1 2984 72.53 &amp;nbsp;0 3542 86.10 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;3081 1752 56.86 &amp;nbsp;0 2350 76.27 &amp;nbsp;0 2282 74.07 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;2051 1592 77.62 &amp;nbsp;0 1769 86.25 &amp;nbsp;0 1762 85.91 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;1541 1147 74.43 &amp;nbsp;0 1543 100.13 &amp;nbsp;0 1328 86.18 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;118 130 110.17 &amp;nbsp;0 728 616.95 &amp;nbsp;0 132 111.86 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;27 40 148.15 &amp;nbsp;0 671 2485.19 &amp;nbsp;0 40 148.15 &amp;nbsp;0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;2121600 993817 46.84 &amp;nbsp;441 922054 43.46 &amp;nbsp;33 2121615 100.00 &amp;nbsp;14 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;980031 572607 58.43 &amp;nbsp;93 623844 63.66 &amp;nbsp;21 921999 94.08 &amp;nbsp;5 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;186032 100912 54.24 &amp;nbsp;15 121494 65.31 &amp;nbsp;3 173524 93.28 &amp;nbsp;1 &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;56073 34332 61.23 &amp;nbsp;4 38071 67.90 &amp;nbsp;1 55945 99.77 &amp;nbsp;0&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: dotum;&quot;&gt;11&amp;nbsp; 참고문헌&lt;br /&gt;C언어로 설명한 알고리즘, 황종선 외 1인&lt;br /&gt;C로 배우는 알고리즘, 이재규&lt;br /&gt;&lt;a class=&quot;con_link&quot; href=&quot;http://java2u.wo.to/lectures/etc/ImageProcessing/image_processing0.html&quot; target=&quot;_blank&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;http://java2u.wo.to/lectures/etc/ImageProcessing/image_processing0.html&lt;/a&gt;&lt;br /&gt;&lt;a class=&quot;con_link&quot; href=&quot;http://viplab.hanyang.ac.kr/~hhlee/reference/ip/mpeg/intro-mpeg-kor.html&quot; target=&quot;_blank&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;http://viplab.hanyang.ac.kr/~hhlee/reference/ip/mpeg/intro-mpeg-kor.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/217</guid>
<comments>https://genesis8.tistory.com/217#entry217comment</comments>
<pubDate>Thu, 28 Jan 2016 16:03:06 +0900</pubDate>
</item>
<item>
<title>statement란?</title>
<link>https://genesis8.tistory.com/216</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;DB에 관련해서 statement가 나왔는데 무엇인지 의미 파악이 잘 되지 않아서 검색해보았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;//statement의 영어 검색을 한국어로 보니 다음과 같이 나온다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;// 위키백과&lt;/p&gt;&lt;p&gt;문 (프로그래밍) 위키백과, 우리 모두의 백과사전. 컴퓨터 프로그래밍에서 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;문(文)은 명령형 프로그래밍 언어의 가장 작은 독립 요소&lt;/span&gt;이다. 프로그램은 하나 이상의 문이 연결되어 형성된다. 문은 식과 같은 내부 요소를 포함할 수 있다. C를 포함한 많은 프로그래밍 언어는 실행 코드와 정의를 포함하는 문과 더불어 문과 정의 사이에 구별을 둔다. 단순 문과 복합 문 사이에 구별을 둘 수 있다. 뒤에 나오는 것은 구성 요소로서의 문을 포함한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;영어 버전을 번역기로 돌려도 내용은 비슷하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;문이 수행 될 몇몇 액션을 표현 명령형 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로그래밍 언어의 최소 독립형 요소이다. 그것은 특정 작업을 수행하기 위해 컴퓨터에 명령 고급 언어로 작성된 명령&lt;/span&gt;이다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결론내리자면 statement는 명령 문장이라고&amp;nbsp;얘기할 수도 있겠다.&lt;/p&gt;&lt;p&gt;DB에 작업을 지시하는 QUERY등, 명령 그 자체를 말하는 것이라 파악해도 되겠다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 statement는 무슨 역할인가 하니...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;C와 다른 언어들로 찾아보려니 잘 안나오고, 주로 나오는 것은 JAVA의 Statement 객체였다.&lt;/p&gt;&lt;p&gt;Connection 객체로 연결을 한 후에, QUERY 작업을 수행하기 위해서 사용하고 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;참조 출처 :&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;https://blog.outsider.ne.kr/6&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;2. DB 연결&amp;nbsp;&lt;/p&gt;&lt;p&gt;Connection conn = null; conn =&amp;nbsp;DriverManager.getConnection (&quot;jdbc:oracle:thin:@localhost:1521:ORA92&quot;, &quot;scott&quot;, &quot;tiger&quot;);&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Connection을 사용하기 위해서는 java.sql.Connection 을 임포트 해주어야 한다. conn이라는 커넥션을 만든 후에 DriverManager의 getConnection을 통해서 DB를 연결해 준다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;첫 매개변수는 DB연결쪽이다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;jdbc:oracle:thin:@부분은 동일하게 사용하고 localhost는 위치(자기자신)를 말한다. 다른PC이거나 할 경우는 IP를 입력해 주고 1521은 해당포트이며 ORA92는 오라클의 SID이다. 자신에 맞게 입력해준다. 두번째와 세번째는 오라클의 아이디와 패스워드이다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;이 연결부는 SQLException예외처리로 Try-Catch로 감싸 주어야 한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;3. 쿼리 준비&lt;/p&gt;&lt;p&gt;PreparedStatement psmt = null; psmt = conn.prepareStatement(&quot;DB쿼리문&quot;); 혹은 Statement stmt = null; stmt = conn.createStatement(&quot;DB쿼리문&quot;); 를 사용한다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;4. 쿼리 실행&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;psmt.executeUpdate(); 로 쿼리를 실행한다. insert, update, delete 등 값을 받아 오지 않는 쿼리문은 executeUpdate를 이용해서 실행해 준다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이런 설명도 있었다.&lt;/p&gt;&lt;p&gt;Statement 인터페이스 - Statement 인터페이스는 C&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;onnection 객체에 의해 프로그램에 리턴되는&lt;/span&gt; &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;객체에 의해 구현되&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;는&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;일종의 메소드 집합&lt;/span&gt;을 정의한다. Statement 객체는 Statement 인터페이스를 구현한 객체&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;정리해보자면 statement는 DB와 연결되는&amp;nbsp;connection 객체와의 의사 소통을 위해서, DB에게 명령을 내릴 때 그것을 던져주는 역할을 하는 interface로서, 사용자의&amp;nbsp;명령(文)에 대응하기 위한 객체인 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/216</guid>
<comments>https://genesis8.tistory.com/216#entry216comment</comments>
<pubDate>Wed, 27 Jan 2016 16:02:52 +0900</pubDate>
</item>
<item>
<title>DAO / VO / DTO란?</title>
<link>https://genesis8.tistory.com/214</link>
<description>&lt;p&gt;원본&amp;nbsp;출처 :&amp;nbsp;http://lbass.tistory.com/entry/DAO-%EB%9E%80&lt;/p&gt;&lt;p&gt;http://choijaehyuk.com/128&lt;/p&gt;&lt;p&gt;http://everyit.tistory.com/4&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;DAO란 Data Access Object의 약어로서 실질적으로 DB에 접근하는 객체를 말한다.&lt;/p&gt;&lt;p&gt;DAO의 사용 이유는 효율적인 커넥션 관리와 보안성 때문이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;정의&lt;/p&gt;&lt;p&gt;DAO란? 한마디로 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Database의 data에 access하는 트랜잭션 객체&lt;/span&gt;이다. 일종의 객체라는 것을 잊지말도록 하자. DAO는 저수준의 Logic과 고급 비지니스 Logic을 분리하고&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;, domain logic으로부터 persistence mechanism을 숨기기 위해 사용&lt;/span&gt;한다. (적절히 디자인을 하면 모든 domain logic을 바꾸는 대신에 DAO를 바꾸기만 하면 된다.)&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;persistence 계층 : Database(영구 저장소)에 data를 CRUD하는 계층&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;// Create , Read , Update , Drop의 줄임말&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;설명&lt;/p&gt;&lt;p&gt;웹서버는 DB와 연결하기 위해서 매번 커넥션 객체를 생성하는데,&amp;nbsp;이것을 해결하기 위해 나온것이 컨넥션 풀입니다. ConnectionPool 이란 connection&amp;nbsp;객체를 미리 만들어 놓고 그것을 가져다 쓰는것입니다. 또 다쓰고 난 후에는 반환해 놓는 것. 하지만 유저&amp;nbsp;한명이 접속해서 한번에 하나의 커넥션만 일으키지 않고 게시판&amp;nbsp;하나만 봐도 목록볼때 한번, 글읽을때마다 한번, 글쓸때 한번 등등... 엄청나게 많은 커넥션이 일어나기에, 커넥션풀은 커넥션을 또 만드는 오버헤드를 효율적으로 하기 위해&amp;nbsp;DB에 접속하는 객체를 전용으로 하나만 만들고,&amp;nbsp;모든 페이지에서 그 객체를 호출해다 사용한다면? 이렇게 커넥션을 하나만 가져오고 그 커넥션을 가져온 객체가 모든 DB와의 연결을 하는것이 바로 DAO객체입니다^^&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;DAO(Data Access Object)&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;DB를 사용해 데이터를 조화하거나 조작하는 기능을&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;전담하도록 만든 오브젝트&lt;/span&gt;를 말한다.&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&amp;nbsp;사용자는 자신이 필요한 Interface를 DAO에게 던지고 DAO는 이 인터페이스를&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;구현한 객체를 사용자에게 편리하게 사용 할 수 있도록 반환해줍니다.&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&amp;nbsp;DB에 대한 접근을 DAO가 담당하도록 하여 데이터베이스 엑세스를 DAO에서만&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;하게 되면 다수의 원격호출을 통한 오버헤드를 VO나 DTO를 통해 줄일 수 있고&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;다수의 DB 호출문제를 해결할 수 있습니다&lt;/span&gt;. 또한 단순히 읽기만 하는 연산이므로&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;트랜잭션 간의 오버헤드를 감소할 수 있습니다.(?)&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;DTO(Data Transfer Object)&lt;/span&gt;는&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; VO(Value Object)로 바꿔 말할 수 있는데&lt;/span&gt;&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;계층간 데이터 교환을 위한 자바빈즈&lt;/span&gt;를 말한다. 여기서 말하는 계층간의&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;컨트롤러, 뷰, 비즈니스 계층, 퍼시스턴스 계층을 말하며 각 계층간 데이터 교환을&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;위한 객체를&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; DTO 또는 VO라고 부른다&lt;/span&gt;.&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;text-align: justify;&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;Helvetica Neue Light, HelveticaNeue-Light, Helvetica Neue, Helvetica, Arial, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 19.6px;&quot;&gt;[그런데 VO는 DTO와 동일한 개념이지만 read only 속성을 가짐 ]&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;text-align: justify;&quot;&gt;&lt;font color=&quot;#333333&quot; face=&quot;Helvetica Neue Light, HelveticaNeue-Light, Helvetica Neue, Helvetica, Arial, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 19.6px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;대표적인 DTO로는 폼데이터빈, 데이터베이스 테이블빈 등이 있으며, 각 폼요소나,&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;데이터베이스 레코드의 데이터를 매핑하기 위한 데이터 객체를 말한다. 즉 폼 필드들의&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;이름을 그대로 가지고 있는 자바빈 객체를 폼 필드와 그대로 매핑하여 비즈니스 계층으로&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;보낼 때 사용한다. 이런 객체를 DTO라고 부르며&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; VO(Value Object) 패턴이라고도 한다&lt;/span&gt;.&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;VO 패턴은 데이터 전달을 위한 가장 효율적인 방법이지만, 클래스 선언을 위해 많은&amp;nbsp;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;코드가 필요하다는 단점이 있다.&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;일반적인 DTO는 로직을 갖고 있지 않다. &lt;/span&gt;순수한 데이터 객체이며&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 속성&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;과 그 속성에&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;접근하기 위한 getter, setter 메소드만 가진 클래스를 말한다&lt;/span&gt;. 여기에 추가적으로 &lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;toString(), equals(), 등의 Object 클래스 메소드를 작성할 수 있다.&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;즉, 계층 간의 데이터 전달에 사용하는 데이터 객체들을 말한다.&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;1. DTO 클래스 예제&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public class DTOBean {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;private String name;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;private int value;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;private String data;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public String getName() {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;return name;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public void setName(String name) {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;this.name = name;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public int getValue() {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;return value;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public void setValue(int value) {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;this.value = value;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public String getData() {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;return data;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;public void setData(String data) {&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;this.data = data;&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;}&lt;/span&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;b style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;2. DAO 클래스 예제&lt;/b&gt;&lt;br style=&quot;color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue Light', HelveticaNeue-Light, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 19.6px; text-align: justify;&quot;&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;//DB와 연결할 Connection을 가져온다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;//어떤 DB를 사용할 것이며, 어떤 드라이브와 로그인 정보를 사용할 것인가.&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;//작업이 끝나면 사용한 리소스를 시스템에 돌려준다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;public class TestDao {&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;public void add(DTOBean dto) throws ClassNotFoundException, SQLException{&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;Class.forName(&quot;com.mysql.jdbc.Driver&quot;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;Connection c= DriverManager.getConnection(&quot;jdbc:mysql://localhost/springbook&quot;, &quot;spring&quot;, &quot;book&quot;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;PreparedStatement ps = c.prepareStatement(&quot;insert into users(id,name,password) value(?,?,?)&quot;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;ps.setString(1, &amp;nbsp;dto.getName());&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;ps.setInt(2, &amp;nbsp;dto.getValue());&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;ps.setString(3, &amp;nbsp;dto.getData());&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;ps.executeUpdate();&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;ps.close();&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;  &lt;/span&gt;c.close();&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt; &lt;/span&gt;}&lt;/div&gt;&lt;div style=&quot;margin: 0px; outline: none; padding: 0px;&quot;&gt;}&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/214</guid>
<comments>https://genesis8.tistory.com/214#entry214comment</comments>
<pubDate>Wed, 27 Jan 2016 12:28:10 +0900</pubDate>
</item>
<item>
<title>RDBS,DB모델링,파일시스템 표현 차이</title>
<link>https://genesis8.tistory.com/212</link>
<description>원문 출처 : http://www.sqler.com/bSQLQA/476174&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;table cellspacing=&quot;1&quot; style=&quot;color: rgb(0, 0, 0); font-family: Dotum, sans-serif, AppleGothic; font-size: 12px; line-height: 19.2px; text-align: justify; width: 611px; height: 106px; background: rgb(204, 204, 204);&quot;&gt;&lt;tbody&gt;&lt;tr style=&quot;background: rgb(255, 255, 255);&quot;&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;파일 시스템&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;데이터베이스 모델링&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;관계형 데이터베이스&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background: rgb(255, 255, 255);&quot;&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;파일(file)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;엔터티(Entity)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;테이블(table)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background: rgb(255, 255, 255);&quot;&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;레코드(record)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;튜플(Tuple)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;행(row)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background: rgb(255, 255, 255);&quot;&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;키(key)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;유일값(identifier)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;기본키(Primary key), unique&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=&quot;background: rgb(255, 255, 255);&quot;&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;필드(field)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;어트리뷰트(attribute)&lt;/p&gt;&lt;/td&gt;&lt;td&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px;&quot;&gt;컬럼(column)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/212</guid>
<comments>https://genesis8.tistory.com/212#entry212comment</comments>
<pubDate>Tue, 26 Jan 2016 17:45:59 +0900</pubDate>
</item>
<item>
<title>샤딩(Sharding)이란?</title>
<link>https://genesis8.tistory.com/211</link>
<description>&lt;h2&gt;&lt;font color=&quot;#666666&quot; face=&quot;Arial, Helvetica, sans-serif&quot;&gt;&lt;span style=&quot;font-size: 22px; line-height: 19.2px;&quot;&gt;출처 : http://hanburn.tistory.com/106&lt;/span&gt;&lt;/font&gt;&lt;/h2&gt;&lt;h2 style=&quot;color: rgb(102, 102, 102); font-size: 22px; font-family: Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br /&gt;&lt;/h2&gt;&lt;h2 style=&quot;color: rgb(102, 102, 102); font-size: 22px; font-family: Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;a href=&quot;http://hanburn.tistory.com/106&quot; style=&quot;color: rgb(204, 103, 20);&quot;&gt;[DB] DB Sharding은 무엇이고, 적용 전략은? ( 적용시 고려사항 )&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;span class=&quot;name&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;a href=&quot;http://hanburn.tistory.com/category/%EA%B0%9C%EB%B0%9C&quot; style=&quot;color: rgb(204, 103, 20);&quot;&gt;개발&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;date&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;2012.02.15 17:44&lt;/span&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;article&quot; style=&quot;padding: 20px 10px 30px;&quot;&gt;&lt;br /&gt;&lt;span id=&quot;callbacknesthanburntistorycom1063204&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;작성자&lt;span&gt;&amp;nbsp;: hanburn&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;작성일&lt;span&gt;&amp;nbsp;: 2012-01-17&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; border-bottom-color: windowtext; border-width: medium medium 1pt; border-style: none none solid; padding: 0cm 0cm 1pt;&quot;&gt;&lt;p style=&quot;border: medium none; padding: 0cm; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;1.&amp;nbsp;&lt;/span&gt;샤딩&lt;span&gt;&amp;nbsp;( sharding )&amp;nbsp;&lt;/span&gt;이란 무엇인가&lt;span&gt;?&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;2.&amp;nbsp;&lt;/span&gt;샤딩 및 전략&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;2.1 vertical partitioning&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;2.2 Range Based Partitioning&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;2.3 Key or Hash Based Partitioning&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;2.4 Directory Based Partitioning&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;3.&amp;nbsp;&lt;/span&gt;샤딩 적용시 고려사항&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; border-bottom-color: windowtext; border-width: medium medium 1pt; border-style: none none solid; padding: 0cm 0cm 1pt;&quot;&gt;&lt;p style=&quot;border: medium none; padding: 0cm; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;1.&amp;nbsp;&lt;/span&gt;샤딩&lt;span&gt;&amp;nbsp;( sharding )&amp;nbsp;&lt;/span&gt;이란 무엇인가&lt;span&gt;?&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 10.5pt; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px;&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;관계형 데이터베이스에서 대량의 데이터를 처리하기 위해서&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;데이터를 파티셔닝하는 기술&lt;/span&gt;이다&lt;span&gt;. (&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font face=&quot;맑은 고딕&quot; size=&quot;2&quot;&gt;&lt;span style=&quot;line-height: 19.2px;&quot;&gt;partitioning-&amp;gt;분할함)&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;파티셔닝은&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;&amp;nbsp;DBMS&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;에서 지원하기도 하는데&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;일부&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;&amp;nbsp;DBMS ( MySQL 5.1&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;미만에서는 지원 안함&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;에서는 지원안하기도 한다&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;.&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;샤딩은&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;&amp;nbsp;DBMS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;레벨에서 데이터를 나누는 것이 아니고&lt;/span&gt; &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;데이터베이스 자체를 분할하는 방식이다&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;따라서 어플리레이션 레벨에서 구현해야 한다&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-family: '맑은 고딕'; line-height: 19.2px; font-size:10pt; text-indent: 10.5pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt 10pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;간단하게 예를 들면&lt;span&gt;,&amp;nbsp;&lt;/span&gt;전 세계의 고객 데이터를 저장하는 대형 데이터베이스를 분산한다고 할때&lt;span&gt;,&amp;nbsp;&lt;/span&gt;미국 고객의 경우는 샤드&lt;span&gt;A,&amp;nbsp;&lt;/span&gt;아시아 고객의 경우는 샤드&lt;span&gt;B,&amp;nbsp;&lt;/span&gt;유럽 고객의 경우는 샤드&lt;span&gt;C&lt;/span&gt;로 분할해서 저장할수 있다&lt;span&gt;.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;2.&amp;nbsp;&lt;/span&gt;샤딩 및 전략&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; text-indent: 9.75pt; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;샤딩에서 데이터베이스를 분할하는 방법&lt;/span&gt;에 대해서 살펴본다&lt;span&gt;.&amp;nbsp;&lt;/span&gt;각 방법마다 장단점과 주의할 점이 있으므로 서비스에 맞게 적절하게 선택하거나 조합하여 사용 한다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; text-indent: 9.75pt; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; text-indent: 9.75pt; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;2.1 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Vertical Partitioning&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;테이블 별로 서버를 분할하는 방식&lt;/span&gt;이다&lt;span&gt;.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;예를들면 사용자 프로필정보용 서버&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;사용자 친구리스트용 서버&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;사용자가 만든 컨텐츠&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;(&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;사진같은것&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;용 서버등으로 분할하는 방식&lt;/span&gt;이다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;장점&lt;span&gt;&amp;nbsp;:&amp;nbsp;&lt;/span&gt;구현이 간단하고&lt;span&gt;,&amp;nbsp;&lt;/span&gt;전체 시스템에 큰변화가 필요 없다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;단점&lt;span&gt;&amp;nbsp;:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;각 서버의 데이터가 점점 거대해지면 추가 샤딩이 필요해진다&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt; ( 1&lt;/span&gt;천만명이&lt;span&gt;&amp;nbsp;1000&lt;/span&gt;장의 사진을 생성한다면 컨텐츠 서버에 또 샤딩이 필요할 것이다&lt;span&gt;. )&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&amp;nbsp;2.2 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Range Based Partitioning&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;하나의&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;feature(&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;또는&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;table)&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;가 점점 거대해지는 경우 서버를 분리하는 방식이다&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;.&lt;/span&gt;&amp;nbsp;&lt;/span&gt;예를들면 사용자가 많은경우 사용자의 지역정보를 이용해서&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;user&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;별로 서버를 분리하거나&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;일정데이터라면 년도별로 분리&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;거래정보라면 우편번호를 이용하는 방식이다&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;주의점&amp;nbsp;&lt;span&gt;:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;데이터를 분할하는 방법이 예측가능해야 한다&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&amp;nbsp;2.3 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Key or Hash Based Partitioning&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;이방식은 웹&lt;span&gt;2.0&amp;nbsp;&lt;/span&gt;사이트에서 기본 파티셔닝 방식으로 알려져있다&lt;span&gt;.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;엔티티를 해쉬함수에 넣어서 나오는 값을 이용해서 서버를 정하는 방식&lt;/span&gt;이다&lt;span&gt;.&amp;nbsp;&lt;/span&gt;사용자&lt;span&gt;ID&lt;/span&gt;가 숫자일 경우 나머지연산&lt;span&gt;( module operation)&lt;/span&gt;을 이용하는 방법이다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;주의점&lt;span&gt;&amp;nbsp;:&amp;nbsp;&lt;/span&gt;해쉬결과&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 데이터가 균등하게 분포되도록 해쉬함수를 정하는게 중요&lt;/span&gt;하다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;단점&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;서버의 수를 늘리기 위해서 해쉬함수를 변경하는 작업이 무지무지 비싼 작업이다&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&amp;nbsp;2.4 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Directory Based Partitioning&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;파티셔닝 메커니즘을 제공하는 추상화된 서비스를 만드는 것&lt;/span&gt;이다&lt;span&gt;.(&lt;/span&gt;데이터베이스 액세스 코드와는 떨어져 있는&lt;span&gt;)&amp;nbsp;&amp;nbsp;&lt;/span&gt;샤드키를&lt;span&gt;&amp;nbsp;look-up&amp;nbsp;&lt;/span&gt;할수 있으면 되므로&lt;span&gt;,&amp;nbsp;&lt;/span&gt;구현은&lt;span&gt;&amp;nbsp;DB&lt;/span&gt;와&lt;span&gt;&amp;nbsp;cach&lt;/span&gt;를 적절히 조합해서 만들수 있다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;3.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;샤딩 적용시 문제점들 및 고려사항&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;3.1&amp;nbsp;&lt;/span&gt;데이터 재분배&lt;span&gt;&amp;nbsp;( Rebalancing data )&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;Sharding&lt;/span&gt;된&lt;span&gt;&amp;nbsp;DB&lt;/span&gt;의 물리적인 용량한계나 성능한계에 다르면&amp;nbsp;&lt;span&gt;shard&lt;/span&gt;의 수를 늘리는&lt;span&gt;&amp;nbsp;scale-up&amp;nbsp;&lt;/span&gt;작업이 필요하다&lt;span&gt;.&amp;nbsp;&lt;/span&gt;서&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;비스 정지 없이&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;scale-up&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;할수 있도록 설계방향을 잡아야 한다&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;3.2&amp;nbsp;&lt;/span&gt;샤딩으로부터 데이터 조인하기&lt;span&gt;&amp;nbsp;( Joining data from multiple shards )&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Sharding-db&amp;nbsp;&lt;/span&gt;간에 조인이 불가능 하기에 처음부터 역정규화를 어느정도 감수해야 한다&lt;span&gt;. Shard&lt;/span&gt;의 목정이 대용량 데이터 처리이므로&lt;span&gt;,&amp;nbsp;&lt;/span&gt;대용량처리시 수행성능을 위해서 데이터 중복은&lt;span&gt;&amp;nbsp;trade-off&amp;nbsp;&lt;/span&gt;관계 (&amp;nbsp;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: 'Apple SD Gothic Neo', arial, sans-serif; font-size:10pt; line-height: 21.2727px;&quot;&gt;완전 고용과 물가 안정의 관계. 곧, 실업률(失業率)을 줄이면 물가가 상승하고, 물가를 안정시키면 실업률이 높아진다는&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 모순적 관계&lt;/span&gt;를 이르는 말임.)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; font-size:10pt; color: rgb(0, 0, 0); line-height: 19.2px;&quot;&gt;임을 이미 알고 있다&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; font-size:10pt; color: rgb(0, 0, 0); line-height: 19.2px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;3.3&amp;nbsp;&lt;/span&gt;샤드에 데이터를 파티션하는 방법&lt;span&gt;&amp;nbsp;( How do you partition your data in shards? )&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;shard&amp;nbsp;&lt;/span&gt;해쉬함수를 잘 설계해야 한다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;3.4&amp;nbsp;&lt;/span&gt;샤드간의 트랜잭션 문제&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;Global Transaction&lt;/span&gt;을 사용하면&lt;span&gt;&amp;nbsp;shard DB&lt;/span&gt;간의 트랜잭션도 가능하다&lt;span&gt;.&amp;nbsp;&lt;/span&gt;그 유명한&amp;nbsp;&lt;span&gt;XA&lt;/span&gt;인데&lt;span&gt;,&amp;nbsp;&lt;/span&gt;성능저하의 문제가 있다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;3.5 Global Unique Key&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;DBMS&amp;nbsp;&lt;/span&gt;에서 제공하는&lt;span&gt;&amp;nbsp;auto-increament&lt;/span&gt;를 사용하면&lt;span&gt;&amp;nbsp;key&lt;/span&gt;가 중복될수 있기 때문에&lt;span&gt;, application&amp;nbsp;&lt;/span&gt;레벨에서&lt;span&gt;&amp;nbsp;Key&amp;nbsp;&lt;/span&gt;생성을 담당해야 한다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;span&gt;&lt;font color=&quot;#000000&quot; size=&quot;2&quot; face=&quot;맑은 고딕&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span&gt;&amp;nbsp;3.6&amp;nbsp;&lt;/span&gt;데이터는 작게&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: 'Lucida Grande', Tahoma, Arial, Helvetica, sans-serif; line-height: 19.2px; margin: 0cm 0cm 0pt;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;font size=&quot;2&quot;&gt;&lt;font face=&quot;맑은 고딕&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&amp;nbsp;&amp;nbsp;Table&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;의 단위를 가능한 작게 &lt;/span&gt;만들어야 한다&lt;span&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>DB</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/211</guid>
<comments>https://genesis8.tistory.com/211#entry211comment</comments>
<pubDate>Mon, 25 Jan 2016 12:32:27 +0900</pubDate>
</item>
<item>
<title>IIS란?</title>
<link>https://genesis8.tistory.com/209</link>
<description>&lt;p style=&quot;box-sizing: border-box; margin-top: 1em; margin-right: 0px; margin-bottom: 1em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;원문 출처 :&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px;&quot;&gt;&lt;font face=&quot;Arial, 돋움, Dotum, AppleGothic, sans-serif&quot;&gt;http://www.terms.co.kr/IIS.htm&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;http://hackersstudy.tistory.com/16&lt;/p&gt;&lt;p style=&quot;margin: 1em 0px; box-sizing: border-box;&quot;&gt;&lt;font face=&quot;Arial, 돋움, Dotum, AppleGothic, sans-serif&quot;&gt;http://w3svc.tistory.com/entry/IIS%EB%9E%80&lt;/font&gt;&lt;/p&gt;&lt;div&gt;&lt;font face=&quot;Arial, 돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Arial, 돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;font-family: 'Malgun Gothic';&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&quot;top&quot; style=&quot;width: 368px;&quot;&gt;&lt;p align=&quot;left&quot; class=&quot;std&quot; style=&quot;font-family: 굴림; font-size: 9pt; line-height: 1.25;&quot;&gt;IS&lt;font color=&quot;#FF0000&quot;&gt;[아이아이 에스]&lt;/font&gt;는 마이크로소프트의&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/WindowsNT.htm&quot;&gt;윈도우NT&lt;/a&gt;용 인터넷 서버군(群)의 이름으로서, 여기에는&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/WWW.htm&quot;&gt;Web&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/HTTP.htm&quot; target=&quot;Frame 3&quot;&gt;HTTP&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/FTP.htm&quot; target=&quot;Frame 3&quot;&gt;FTP&lt;/a&gt;,&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/Gopher.htm&quot; target=&quot;Frame 3&quot;&gt;Gopher&lt;/a&gt;&amp;nbsp;등이 모두 포함되어 있다. IIS는 이미&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/Netscape.htm&quot; target=&quot;Frame 3&quot;&gt;넷스케이프&lt;/a&gt;나&amp;nbsp;&lt;span class=&quot;std&quot; style=&quot;font-size: 9pt; line-height: 1.25;&quot;&gt;썬&lt;/span&gt;마이크로시스템즈 등의 회사에서 선점하고 있는 인터넷 서버 시장을 마이크로소프트가 지배할 목적으로 내놓은 제품이다. 마이크로소프트는 IIS에 웹 사이트나&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/searchengine.htm&quot; target=&quot;Frame 3&quot;&gt;검색엔진&lt;/a&gt;을 만들고 관리하며,&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/database.htm&quot; target=&quot;Frame 3&quot;&gt;데이터베이스&lt;/a&gt;를 이용한 웹기반의 응용프로그램 작성을 지원하는 일련의 프로그램들을 포함하였다. 마이크로소프트는, IIS가 윈도우NT&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/server.htm&quot; target=&quot;Frame 3&quot;&gt;서버&lt;/a&gt;와 여러 가지 방법으로 밀접하게 통합되었으며, 그 결과 더 빠른 웹페이지 서비스가 가능해졌다고 주장하고 있다.&lt;/p&gt;&lt;p align=&quot;left&quot; class=&quot;std&quot; style=&quot;font-family: 굴림; font-size: 9pt; line-height: 1.25;&quot;&gt;IIS를 구매하는 회사들은 웹페이지를 만드는데 마이크로소프트의 프론트페이지 제품을 사용할 수 있다. 웹 개발자들은 마이크로소프트의&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/ASP.htm&quot; target=&quot;Frame 3&quot;&gt;ASP&lt;/a&gt;&amp;nbsp;기술을 이용할 수 있는데, 이는&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/ActiveXcontrol.htm&quot; target=&quot;Frame 3&quot;&gt;액티브엑스 컨트롤&lt;/a&gt;을 내장하고 잇는 응용프로그램들이 웹페이지 내에 포함될 수 있다는 것을 의미한다. 개발자들은 또한 마이크로소프트의&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/ISAPI.htm&quot;&gt;ISAPI&lt;/a&gt;&amp;nbsp;인터페이스를 사용함으로써 서로 다른 사용자들을 위해 요구를 여과하여, 올바른 웹페이지를 받아볼 수 있도록 프로그램을 만들 수 있다. ASP와 ISAPI 프로그램들은 현재 많이 사용되고 있는&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/CGI.htm&quot; target=&quot;Frame 3&quot;&gt;CGI&lt;/a&gt;&amp;nbsp;또는&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/SSI.htm&quot; target=&quot;Frame 3&quot;&gt;SSI&lt;/a&gt;&amp;nbsp;프로그램들 보다 더욱 효율적으로 실행된다.&lt;/p&gt;&lt;p align=&quot;left&quot; class=&quot;std&quot; style=&quot;font-family: 굴림; font-size: 9pt; line-height: 1.25;&quot;&gt;마이크로소프트는&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/ISP.htm&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;인터넷 서비스 제공사업자&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;의 마음을 끌만한 서버관리자용 특별 기능을 포함하였다. 그것은 단일 윈도우(또는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://www.terms.co.kr/console.htm&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;콘솔&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;)로부터 모든 서비스들이나 사용자들을 관리할 수 있게된 것이다.&lt;/span&gt; 또한, 이 기능은 초기에 설치하지 않았어도 나중에 쉽게 그 요소를 추가할 수 있도록 설계되었으며, 관리용 윈도우는 개별 고객들의 사정에 맞게 조정될 수 있다.&lt;/p&gt;&lt;/td&gt;&lt;td width=&quot;130&quot; valign=&quot;top&quot; style=&quot;width: 132px;&quot;&gt;&lt;div align=&quot;right&quot;&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p align=&quot;left&quot; class=&quot;std&quot; style=&quot;font-family: 굴림; font-size: 9pt; line-height: 1.25;&quot;&gt;IIS는 설치하기 쉽도록 설계된 보안기능을 제공하며, 이는 데이터베이스를 이용하고&amp;nbsp;&lt;a href=&quot;http://www.terms.co.kr/transaction.htm&quot; target=&quot;Frame 3&quot;&gt;트랜잭션&lt;/a&gt;&amp;nbsp;차원의 제어를 제공하는 마이크로소프트 트랜잭션 서버와 밀접하게 동작한다. IIS는 또한 오디오, 비디오 스트림을 전달하는 마이크로소프트의 NetShow도 지원한다.&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;font face=&quot;Arial, 돋움, Dotum, AppleGothic, sans-serif&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;&lt;p style=&quot;margin: 1em 0px; box-sizing: border-box; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.2px; line-height: 18.48px;&quot;&gt;IIS란 MS에서 Web Service를 목적으로 정의 한 서비스 모듈의 Windows방식 서비스의 명칭이다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.2px; line-height: 18.48px;&quot;&gt;컴퓨터에 Web Service를 할수있는 통신포트를 개방해놓고&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.2px; line-height: 18.48px;&quot;&gt;그 통신포트를 통하여 자신의 컴퓨터에 있는 정보, 자료, 파일등을&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.2px; line-height: 18.48px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(9, 0, 255); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.2px; line-height: 18.48px;&quot;&gt;접근하는 사람으로 하여금 볼 수 있도록 하는 &lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13.2px; line-height: 18.48px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;것을 Web Service&lt;/span&gt;라고 하는데, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이것을 하는 컴퓨터가 Web Server입니다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 1em; margin-right: 0px; margin-bottom: 1em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(42, 42, 42); font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 1.692em; line-height: 1.5;&quot;&gt;웹 서버란?&lt;/span&gt;&lt;/p&gt;&lt;div id=&quot;sectionSection0&quot; class=&quot;section&quot; style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; color: rgb(42, 42, 42); font-size: 13px; line-height: 17.55px;&quot;&gt;&lt;p style=&quot;padding-bottom: 15px; line-height: 18px;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;웹 서버는 클라이언트 컴퓨터의 요청을 받아들이고 이러한 요청에 대해 응답을 반환하는 특정 소프트웨어가 있는 컴퓨터&lt;/span&gt;입니다. 웹 서버를 사용하면 인터넷 또는 인트라넷 및 엑스트라넷을 통해 정보를 공유할 수 있습니다.&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 1em; margin-right: 0px; margin-bottom: 1em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;IIS는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; font-family: 돋움체, dotumche; line-height: 1.5;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;Internet Information Sevices(인터넷 정보 서비스)&lt;/span&gt;&amp;nbsp;의 약자 이며,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; font-family: 돋움체, dotumche; line-height: 1.5;&quot;&gt;마&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;이크로소프트 원도우를 사용하는 서버들을 위한 인터넷 기반 서비스들의 모임&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: 돋움체, dotumche;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;아파치 웹서버에 이어 세계에서 두번째로 가장 잘 알려진 웹서버&lt;/span&gt;입니다.&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;autosourcing-stub-extra&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;/div&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-family: 돋움체, dotumche;&quot;&gt;서버는 현재 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;FTP, SMTP, NNTP, HTTP/HTTPS를 포함&lt;/span&gt;하고 있습니다. 지금까지 IIS 8.0 버전이 나왔습니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;(IIS 8.0 은 windwos server 2012, Windwos 8 부터 사용 가능합니다)&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;autosourcing-stub-extra&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;/div&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;장점이자 단점인 마이크로소프트에서 제공하는 윈도우 OS에서만 사용이&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;가능&lt;/span&gt;하다는점.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;IIS에서는 ASP 스크립트 언어를 사용 할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 1000px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/26067538551780080E?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26067538551780080E&quot; width=&quot;1000&quot; height=&quot;314&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; height: auto; max-width: 100%; cursor: pointer;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;IIS 8.0 신규, 업데이트 기능&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px;&quot;&gt;웹 서버 성능 비교&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span id=&quot;callbacknesthackersstudytistorycom168972&quot; style=&quot;box-sizing: border-box; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(출처-http://www.gtcomm.net/blog/nginx-the-best-http-server/)&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em;&quot;&gt;CPU Utilization // CPU 활용량&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• IIS – 9 percent&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• Nginx – 21 percent&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• Apache – 26 percent&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em;&quot;&gt;Peak Throughput // 단위시간 당&amp;nbsp;최대 정보&amp;nbsp;처리량 &lt;br style=&quot;box-sizing: border-box;&quot;&gt;• IIS – 49,000 responses per second (r/s)&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• Nginx – 23,000 r/s&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• Apache – 14,000 r/s&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em;&quot;&gt;Response Time // 응답 시간&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• IIS – 2.8 milliseconds&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• Nginx – 5.5 milliseconds&lt;br style=&quot;box-sizing: border-box;&quot;&gt;• Apache – 6.3 milliseconds&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em;&quot;&gt;결론 :&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt; 짱 좋음&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;IIS 서버 Html&amp;nbsp;구축 하는법&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5;&quot;&gt;OS : Windwos server 2012&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; line-height: 1.5;&quot;&gt;&amp;nbsp;R2 Datacenter&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 778px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2511C53E5517604401?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2511C53E5517604401&quot; width=&quot;778&quot; height=&quot;524&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;1.1 서버 관리자에서 역할 및 기능 추가&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 803px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/25115540551760AA09?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/25115540551760AA09&quot; width=&quot;803&quot; height=&quot;567&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;1.2 웹서버(IIS) 설치&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 881px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/26092C3E551761C20C?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26092C3E551761C20C&quot; width=&quot;881&quot; height=&quot;609&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 2em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;2.IIS 관리자 실행&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 766px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2329CD40551762D603?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2329CD40551762D603&quot; width=&quot;766&quot; height=&quot;524&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;2.1 웹사이트 추가 클릭&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 599px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2215E940551762D710?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2215E940551762D710&quot; width=&quot;599&quot; height=&quot;576&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;box-sizing: border-box; margin: 0px 0px 0px 4em; padding: 0px; border: 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-size: 9pt; text-align: center; line-height: 1.5;&quot;&gt;2.2&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 8em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;(1)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;사이트 이름 항목에는&amp;nbsp;추가 할 사이트에 원하는 이름을 적어준다.&amp;nbsp;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;관리자가 사이트들을 구별목적으로 사용되는 것이므로 별칭으로 적어두면&amp;nbsp;된다.&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 8em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;(2)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;실제 경로&amp;nbsp;항목에서 웹사이트의 root로 설정할 디렉토리를 선택한다.&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 8em; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;(3)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;두 항목을 기재하였으면, 이제 확인을 누르고 대화상자를 닫는다.&amp;nbsp;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;웹 사이트 추가시에는 기본으로 “웹 사이트 즉시 시작” 항목에 체크가 되어 있어 확인을 누르면 웹사이트 추가와 동시에 서비스가 시작된다.&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 887px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/260E7A415517654C28?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/260E7A415517654C28&quot; width=&quot;887&quot; height=&quot;525&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif !important; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em;&quot;&gt;3.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;사이트 추가가 완료 되었다면, 이제 IIS 관리자의 사이트 프레임 내에 방금 추가한 사이트가 등록된 것을 확인 할 수 있으며, &quot;시작됨&quot; 상태&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;정상적으로서비스가 되고 있는 것을 확인 할 수 있다.&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em;&quot;&gt;&amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;box-sizing: border-box; margin: 5px 0px; max-width: 100%; display: inline-block; width: 618px; height: auto;&quot;&gt;&lt;span dir=&quot;https://t1.daumcdn.net/cfile/tistory/2337674F551767EE01?original&quot; rel=&quot;lightbox&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; max-width: 100%; display: block !important;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2337674F551767EE01&quot; width=&quot;618&quot; height=&quot;208&quot; style=&quot;box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; line-height: 1.5; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif !important; height: auto; max-width: 100%;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px 1em 4em;&quot;&gt;4.자, 그럼 이제 클라이언트에서 웹 브라우저로 접속하여 웹 서비스에 접속이 가능한지 확인을 해보자.root디렉토리에 만들어 놓은 Html 파일을 넣어놓고&lt;br style=&quot;box-sizing: border-box;&quot;&gt;브라우저를 열고&amp;nbsp;&lt;a href=&quot;http://xn--ip-v41jw5m/change.html&quot; style=&quot;box-sizing: border-box; color: rgb(59, 175, 218); background: 0px 0px;&quot;&gt;http://서버ip/change.html&lt;/a&gt;&amp;nbsp;이라고 주소를 입력해보면 만들어 놓은 html 파일이 열리는 것을 확인 할 수 있다.&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;box-sizing: border-box; margin: 1em 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;daum_like_wrapper&quot; style=&quot;box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-family: Arial, 돋움, Dotum, AppleGothic, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>웹 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/209</guid>
<comments>https://genesis8.tistory.com/209#entry209comment</comments>
<pubDate>Mon, 25 Jan 2016 11:10:43 +0900</pubDate>
</item>
<item>
<title>C#의 where</title>
<link>https://genesis8.tistory.com/205</link>
<description>&lt;p&gt;where(제네릭 형식 제약 조건)(C# 참조)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;제네릭 형식 정의에서 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;where 절은 제네릭 선언에 정의된 형식 매개 변수의 인수로 사용할 수 있는 형식에 대해&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 제약 조건을 지정하는 데 사용&lt;/span&gt;됩니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ex) 예를 들어, 다음과 같이 형식 매개 변수 T가 IComparable&amp;lt;T&amp;gt; 인터페이스를 구현하도록 제네릭 클래스 MyGenericClass를 선언할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;padding: 5px; margin-top: 0px; margin-bottom: 0px; overflow: auto; word-wrap: normal; font-size: 13px; line-height: 17.55px; font-family: Consolas, Courier, monospace !important;&quot;&gt;public class MyGenericClass&amp;lt;T&amp;gt; where T:IComparable { }&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;where T : struct, IConvertible&lt;/p&gt;&lt;p&gt;ㄴ 이런 식으로 다수에 대해서 허용하는 것도 가능하니, 결론적으로 포지티브 방식인듯.&lt;/p&gt;&lt;p&gt;where의 영어적 의미가 '어디' 이니 어디에만 쓸 수 있다고 제약하는 식인듯 하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처 : MSDN&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>C++++ (C#)</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/205</guid>
<comments>https://genesis8.tistory.com/205#entry205comment</comments>
<pubDate>Fri, 22 Jan 2016 17:34:51 +0900</pubDate>
</item>
<item>
<title>delegate</title>
<link>https://genesis8.tistory.com/203</link>
<description>&lt;p&gt;&lt;b style=&quot;font-family: dotum;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;델리게이트(Delegate)&lt;/span&gt;&lt;/b&gt;&lt;br style=&quot;font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: dotum;&quot;&gt;&amp;nbsp;- 메서드를 가리키는 참조형이다.&lt;/span&gt;&lt;br style=&quot;font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: dotum;&quot;&gt;&amp;nbsp;- 메서드의 번지를 저장하거나 다른 메서드의 인수로 메서드 자체를 전달하고 싶을 때 사용한다.&lt;/span&gt;&lt;br style=&quot;font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: dotum;&quot;&gt;&amp;nbsp;- &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;C++의 함수 포인터에 대응되는 타입&lt;/span&gt;이다.&amp;nbsp;&lt;/span&gt;&lt;br style=&quot;font-family: dotum;&quot;&gt;&lt;span style=&quot;font-family: dotum;&quot;&gt;&amp;nbsp;- 한마디로 설명하자면 A클래스의 메서드를 B클래스로 넘겨 B 클래스에서 A 클래스의 메서드를 호출하게&amp;nbsp;해주는 역할을 한다. (A의 행위를 B에게 위임하여 B가 A의 행위를 대신한다.&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-family: dotum;&quot;&gt;대리자&lt;/b&gt;&lt;span style=&quot;font-family: dotum;&quot;&gt;)&lt;/span&gt;&lt;br style=&quot;font-family: dotum;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: dotum;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;font-family: 'Open Sans', GulimChe; font-size: 14px; letter-spacing: 1px; line-height: 24px;&quot;&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s1_TitleDiv&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s1_lblTitle&quot; class=&quot;cTitle&quot; style=&quot;font-family: Gulim, 굴림; font-size: 16px; font-weight: bold; color: rgb(153, 51, 0); text-decoration: underline;&quot;&gt;C# delegate의 개념&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s1_DescDiv&quot; class=&quot;section_desc&quot; style=&quot;font-size: 15.4px; width: 600px;&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s1_lblText&quot;&gt;C# delegate는 C/C++의 함수 포인터와 비슷한 개념으로 메서드 파라미터와 리턴 타입에 대한 정의를 한 후, 동일한 파라미터와 리턴 타입을 가진 메서드를 서로 호환해서 불러 쓸 수 있는 기능이다.&lt;br /&gt;예를 들면, 아래 RunDelegate 델리게이트는 입력 파라미터가 int 하나이고 리턴 값이 없는&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;http://www.csharpstudy.com/CSharp/CSharp-method.aspx&quot; style=&quot;font-weight: bold; color: rgb(153, 51, 0); text-decoration: underline;&quot;&gt;메서드&lt;/a&gt;를 가리킨다. RunThis() 메서드와 RunThat()메서드는 모두 int 파라미터 하나에 리턴 값이 없는 메서드이므로, RunDelegate의 함수 형식(prototype)과 맞으므로 이 delegate를 사용할 수 있다.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;example&quot; style=&quot;margin: 0px; padding: 8px; border: 1px solid rgb(212, 212, 212); width: 600px; clear: both; background-color: rgb(229, 238, 255); background-repeat: repeat-x;&quot;&gt;&lt;h2 class=&quot;example-title&quot; style=&quot;color: rgb(0, 102, 0);&quot;&gt;예제&lt;/h2&gt;&lt;div&gt;&lt;div class=&quot;sunlight-container&quot; style=&quot;clear: both !important; position: relative !important; margin: 10px 0px !important; font-family: Consolas, Inconsolata, Monaco, 'Courier New' !important; font-size: 12px !important; line-height: 15px !important;&quot;&gt;&lt;div class=&quot;sunlight-code-container&quot; style=&quot;border: none rgb(150, 150, 150); clear: both !important; position: relative !important; background-color: rgb(255, 255, 255) !important;&quot;&gt;&lt;pre class=&quot;sunlight-highlight-csharp example-codebox sunlight-highlighted&quot; style=&quot;padding: 4px; border: 1px solid rgb(212, 212, 212); width: 580px; overflow-x: auto; overflow-y: hidden; z-index: 1; position: relative; font-family: Consolas, Inconsolata, Monaco, 'Courier New' !important; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span class=&quot;sunlight-csharp&quot; style=&quot;background: transparent;&quot;&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;MySystem&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;MyClass&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;1.&amp;nbsp;delegate&amp;nbsp;선언&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;delegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;RunDelegate&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;RunThis&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;콘솔출력&amp;nbsp;:&amp;nbsp;1024&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-string&quot; style=&quot;color: rgb(153, 0, 0) !important; background: transparent;&quot;&gt;&quot;{0}&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;RunThat&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;콘솔출력&amp;nbsp;:&amp;nbsp;0x400&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-string&quot; style=&quot;color: rgb(153, 0, 0) !important; background: transparent;&quot;&gt;&quot;0x{0:X}&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Perform&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;2.&amp;nbsp;delegate&amp;nbsp;인스턴스&amp;nbsp;생성&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;RunDelegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;run&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;RunDelegate&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;RunThis&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;3.&amp;nbsp;delegate&amp;nbsp;실행&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//run&amp;nbsp;=&amp;nbsp;new&amp;nbsp;RunDelegate(RunThat);&amp;nbsp;을&amp;nbsp;줄여서&amp;nbsp;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//아래와&amp;nbsp;같이&amp;nbsp;쓸&amp;nbsp;수&amp;nbsp;있다.&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;run&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;RunThat&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;Program&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;MyClass&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;mc&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;mc&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Perform&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s1_AdDiv&quot; style=&quot;margin-top: 7px; margin-left: -6px;&quot;&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;hr style=&quot;font-family: 'Open Sans', GulimChe; font-size: 14px; letter-spacing: 1px; line-height: 24px;&quot;&gt;&lt;div style=&quot;font-family: 'Open Sans', GulimChe; font-size: 14px; letter-spacing: 1px; line-height: 24px;&quot;&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s2_TitleDiv&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s2_lblTitle&quot; class=&quot;cTitle&quot; style=&quot;font-family: Gulim, 굴림; font-size: 16px; font-weight: bold; color: rgb(153, 51, 0); text-decoration: underline;&quot;&gt;Delegate를 메서드 파라미터로 전달&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s2_DescDiv&quot; class=&quot;section_desc&quot; style=&quot;font-size: 15.4px; width: 600px;&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s2_lblText&quot;&gt;Delegate는 동일한 함수 Prototype을 갖는 메서드를 가리키므로 함수의 포인터를 파라미터로 전달하듯, 다른 함수의 파라미터로 사용될 수 있다. delegate 파라미터를 전달받은 쪽은 이를 자신의 내부 함수를 호출하듯 사용할 수 있다. (C# delegate는 내부적으로&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;http://msdn.microsoft.com/ko-kr/library/system.delegate(v=VS.100).aspx&quot; style=&quot;font-weight: bold; color: rgb(153, 51, 0); text-decoration: underline;&quot;&gt;.NET Delegate&lt;/a&gt;&amp;nbsp;/&lt;a target=&quot;_blank&quot; href=&quot;http://msdn.microsoft.com/ko-kr/library/system.multicastdelegate.aspx&quot; style=&quot;font-weight: bold; color: rgb(153, 51, 0); text-decoration: underline;&quot;&gt;MulticastDelegate&lt;/a&gt;&amp;nbsp;클래스를 사용한다. 따라서 이 클래스가 지원하는 속성 (예: .Method - 함수 Prototype을 보여줌)과 메서드 (예: GetInvokcationList())를 모두 사용할 수 있다)&lt;br /&gt;&lt;br /&gt;아래 예제는 올림차순으로 비교하는 함수(AscendingCompare) 와 내림차순으로 비교하는 함수(DescendingCompare)를 delegate로 전달하여, 하나의 Sort메서드에서 비교함수에 따라 여러 개의 소트가 가능하다는 것을 보여주는 예이다.&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;example&quot; style=&quot;margin: 0px; padding: 8px; border: 1px solid rgb(212, 212, 212); width: 600px; clear: both; background-color: rgb(229, 238, 255); background-repeat: repeat-x;&quot;&gt;&lt;h2 class=&quot;example-title&quot; style=&quot;color: rgb(0, 102, 0);&quot;&gt;예제&lt;/h2&gt;&lt;div&gt;&lt;div class=&quot;sunlight-container&quot; style=&quot;clear: both !important; position: relative !important; margin: 10px 0px !important; font-family: Consolas, Inconsolata, Monaco, 'Courier New' !important; font-size: 12px !important; line-height: 15px !important;&quot;&gt;&lt;div class=&quot;sunlight-code-container&quot; style=&quot;border: none rgb(150, 150, 150); clear: both !important; position: relative !important; background-color: rgb(255, 255, 255) !important;&quot;&gt;&lt;pre class=&quot;sunlight-highlight-csharp example-codebox sunlight-highlighted&quot; style=&quot;padding: 4px; border: 1px solid rgb(212, 212, 212); width: 580px; overflow-x: auto; overflow-y: hidden; z-index: 1; position: relative; font-family: Consolas, Inconsolata, Monaco, 'Courier New' !important; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span class=&quot;sunlight-csharp&quot; style=&quot;background: transparent;&quot;&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;MySort&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;델리게이트&amp;nbsp;CompareDelegate&amp;nbsp;선언&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;delegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;CompareDelegate&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Sort&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;CompareDelegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;if&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Length&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-string&quot; style=&quot;color: rgb(153, 0, 0) !important; background: transparent;&quot;&gt;&quot;함수&amp;nbsp;Prototype:&amp;nbsp;&quot;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;+&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;ret&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;for&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Length&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;-&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;for&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;j&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;j&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;ret&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;comp&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;if&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;ret&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;==&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;교환&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;tmp&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Display&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Display&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;foreach&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;var&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;in&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;+&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-string&quot; style=&quot;color: rgb(153, 0, 0) !important; background: transparent;&quot;&gt;&quot;&amp;nbsp;&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;Program&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;Program&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;a&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;올림차순으로&amp;nbsp;소트&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;MySort&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;color: rgb(43, 145, 175) !important; background: transparent;&quot;&gt;CompareDelegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;compDelegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;AscendingCompare&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;MySort&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Sort&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;compDelegate&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;내림차순으로&amp;nbsp;소트&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;compDelegate&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;DescendingCompare&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;MySort&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Sort&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;compDelegate&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;CompareDelegate&amp;nbsp;델리게이트와&amp;nbsp;동일한&amp;nbsp;Prototype&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;AscendingCompare&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;if&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;==&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;-&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;0&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;?&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;:&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;color: rgb(0, 153, 0) !important; background: transparent;&quot;&gt;//&amp;nbsp;CompareDelegate&amp;nbsp;델리게이트와&amp;nbsp;동일한&amp;nbsp;Prototype&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;DescendingCompare&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;,&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;if&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;==&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;color: rgb(0, 0, 255) !important; background: transparent;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i1&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;-&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;i2&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;0&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;?&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;:&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;sunlight-number&quot; style=&quot;color: rgb(204, 102, 0) !important; background: transparent;&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;div&gt;&lt;span class=&quot;sunlight-csharp&quot; style=&quot;background: transparent;&quot;&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그냥 함수 포인터.&lt;/p&gt;&lt;p&gt;위처럼 MySort.CompareDelegate&amp;nbsp;= Asecendiing 과 같이 함수를 대입해주면 쓸 수 있다.,&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처.. 가 기억이 안난다;;; 원 작성자분들 죄송합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>C++++ (C#)</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/203</guid>
<comments>https://genesis8.tistory.com/203#entry203comment</comments>
<pubDate>Fri, 22 Jan 2016 16:37:59 +0900</pubDate>
</item>
<item>
<title>typeof</title>
<link>https://genesis8.tistory.com/201</link>
<description>&lt;h1 class=&quot;title&quot; style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-weight: normal; font-stretch: normal; font-size: 2.769em; line-height: 1.167; margin-top: 0px;&quot;&gt;&lt;strong style=&quot;padding: 0px; margin: 0px; outline: none; color: rgb(52, 52, 52); font-family: 'Apple Gothic', arial, sans-serif; font-size: 13px; letter-spacing: -1px; line-height: 19.5px;&quot;&gt;typeof&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(52, 52, 52); font-family: 'Apple Gothic', arial, sans-serif; font-size: 13px; letter-spacing: -1px; line-height: 19.5px;&quot;&gt;- 실행중에 형식 정보를 얻을수 있는 연산자.&lt;/span&gt;&lt;br style=&quot;padding: 0px; margin: 0px; outline: none; color: rgb(52, 52, 52); font-family: 'Apple Gothic', arial, sans-serif; font-size: 13px; letter-spacing: -1px; line-height: 19.5px;&quot;&gt;&lt;span style=&quot;color: rgb(52, 52, 52); font-family: 'Apple Gothic', arial, sans-serif; font-size: 13px; letter-spacing: -1px; line-height: 19.5px;&quot;&gt;- System.Type를 얻는다.&lt;/span&gt;&lt;br style=&quot;padding: 0px; margin: 0px; outline: none; color: rgb(52, 52, 52); font-family: 'Apple Gothic', arial, sans-serif; font-size: 13px; letter-spacing: -1px; line-height: 19.5px;&quot;&gt;&lt;span style=&quot;color: rgb(52, 52, 52); font-family: 'Apple Gothic', arial, sans-serif; font-size: 13px; letter-spacing: -1px; line-height: 19.5px;&quot;&gt;- C#의 Reflection 기능 구현&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(50, 61, 79); font-family: 'Lucida Grande', 'Trebuchet MS', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18.2px;&quot;&gt;C# 의 typeof() 연산자를 이용해서 Type 의 인스턴스를 얻을 수도 있다.&lt;/span&gt;&lt;br style=&quot;margin: 0px; padding: 0px; color: rgb(50, 61, 79); font-family: 'Lucida Grande', 'Trebuchet MS', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18.2px;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;codetitle&quot; style=&quot;margin: 10px 5px 0px; padding: 2px 4px; border-width: 1px 1px 0px; border-style: solid; border-color: rgb(169, 184, 194); color: rgb(51, 51, 51); font-family: 'Lucida Grande', Verdana, Helvetica, Arial, sans-serif; font-size: 0.8em; line-height: 18.2px; background-color: rgb(169, 184, 194);&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;Code:&lt;/b&gt;&lt;/div&gt;&lt;div class=&quot;codecontent&quot; style=&quot;margin: 0px 5px 10px; padding: 5px; direction: ltr; border-color: rgb(169, 184, 194); border-width: 0px 1px 1px; border-style: solid; color: rgb(0, 102, 0); font-size: 13px; font-family: Monaco, 'Courier New', monospace; line-height: 18.2px; background-color: rgb(250, 250, 250);&quot;&gt;// typeof 를 이용해서 Type 을 가져온다.&lt;br style=&quot;margin: 0px; padding: 0px;&quot;&gt;Type t = typeof(Foo);&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; color: rgb(42, 42, 42); padding-bottom: 15px; font-size: 13px;&quot;&gt;&lt;span id=&quot;mt1&quot; class=&quot;sentence&quot; data-guid=&quot;daeb0b89b61e1d9f5994a673e85a8d1c&quot; data-source=&quot;Used to obtain the &lt;strong&gt;System.Type&lt;/strong&gt; object for a type.&quot; xml:space=&quot;preserve&quot;&gt;형식에 대한&amp;nbsp;&lt;strong xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;System.Type&lt;/strong&gt;&amp;nbsp;개체를 얻는 데 사용됩니다.&lt;/span&gt;&amp;nbsp;&lt;span id=&quot;mt2&quot; class=&quot;sentence&quot; data-guid=&quot;e384f63807318cf8a012dc1554dc3f23&quot; data-source=&quot;A &lt;strong&gt;typeof&lt;/strong&gt; expression takes the following form:&quot; xml:space=&quot;preserve&quot;&gt;&lt;strong xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;typeof&lt;/strong&gt;&amp;nbsp;식의 형식은 다음과 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;div id=&quot;code-snippet-1&quot; class=&quot;codeSnippetContainer&quot; xmlns=&quot;&quot; style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; min-width: 0px; clear: both; font-size: 13px; line-height: 17.55px;&quot;&gt;&lt;div class=&quot;codeSnippetContainerTabs&quot; style=&quot;vertical-align: middle; height: 23px; position: relative; z-index: 1;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;codeSnippetContainerCodeContainer&quot; style=&quot;border: 1px solid rgb(147, 147, 147); clear: both; margin-bottom: 12px; position: relative; top: -1px;&quot;&gt;&lt;div class=&quot;codeSnippetToolBar&quot; style=&quot;width: auto; height: auto;&quot;&gt;&lt;div class=&quot;codeSnippetToolBarText&quot; style=&quot;float: right; top: -8px; position: relative; width: auto; padding-left: 0px; padding-right: 0px; height: 0px; vertical-align: top;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;CodeSnippetContainerCode_1f03fcba-5220-446a-a1e9-6a9ed87e7be0&quot; class=&quot;codeSnippetContainerCode&quot; dir=&quot;ltr&quot; style=&quot;width: auto; margin: 0px; padding: 10px 21px;&quot;&gt;&lt;div style=&quot;padding: 0px; margin: 0px;&quot;&gt;&lt;pre style=&quot;padding: 5px; margin-top: 0px; margin-bottom: 0px; overflow: auto; word-wrap: normal; font-family: Consolas, Courier, monospace !important;&quot;&gt;System.Type type = typeof(int);&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;typeof가 대상 타입을 System.Type의 정보로 얻어오는 것 같은데.&lt;/p&gt;&lt;p&gt;그래도 잘 모르겠다. System.Type은 뭘까?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1 class=&quot;title&quot; style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-weight: normal; font-stretch: normal; font-size: 2.769em; line-height: 1.167; margin-top: 0px;&quot;&gt;Type 클래스&lt;/h1&gt;&lt;div class=&quot;lw_vs&quot; style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; position: relative; margin-top: -8px; margin-bottom: 35px; padding-bottom: 2px; font-size: 13px; line-height: 17.55px;&quot;&gt;&lt;div id=&quot;curversion&quot; style=&quot;float: left; color: rgb(93, 93, 93);&quot;&gt;&lt;strong&gt;.NET Framework (current version)&lt;/strong&gt;&lt;/div&gt;&lt;div id=&quot;versionclick&quot; style=&quot;float: left;&quot;&gt;&lt;div id=&quot;vsseperator&quot; class=&quot;cl_lw_vs_seperator&quot; style=&quot;width: 1px; height: 17px; overflow: hidden; margin-left: 10px; float: left; background: url(&amp;quot;/Areas/Epx/Content/Images/ImageSprite.png?v=635880488718168846&amp;quot;) -552px -3px no-repeat scroll;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;float: left;&quot;&gt;&lt;div style=&quot;float: left;&quot;&gt;&lt;a id=&quot;vsLink&quot; style=&quot;color: rgb(0, 112, 159); margin-left: 10px; margin-right: 4px; font-size: 1em;&quot;&gt;다른 버전&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;cl_vs_arrow clip10x10&quot; style=&quot;position: relative; overflow: hidden; width: 10px; height: 10px; margin-top: 5px; margin-right: 5px; cursor: pointer; float: left;&quot;&gt;&lt;img class=&quot;cl_lw_vs_arrow&quot; id=&quot;vsArrow&quot; alt=&quot;&quot; src=&quot;https://i-msdn.sec.s-msft.com/Areas/Epx/Content/Images/ImageSprite.png?v=635880488718168846&quot; style=&quot;border: 0px; top: -3px; left: -560px; position: absolute; margin: 0px; padding: 0px; width: auto; height: auto; max-width: none;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; font-size: 13px; line-height: 17.55px; clear: both;&quot;&gt;&lt;/div&gt;&lt;div id=&quot;mainSection&quot; style=&quot;font-family: 'Malgun Gothic', Gulim, 'Segoe UI', 'Lucida Grande', Verdana, Arial, Helvetica, sans-serif; clear: both; font-size: 13px; line-height: 17.55px;&quot;&gt;&lt;div id=&quot;mainBody&quot;&gt;&amp;nbsp;&lt;div class=&quot;section&quot;&gt;&lt;div class=&quot;section&quot;&gt;&lt;p style=&quot;color: rgb(42, 42, 42); padding-bottom: 15px; line-height: 18px;&quot;&gt;&lt;span id=&quot;mt1&quot; class=&quot;sentence&quot; data-guid=&quot;bdeddf0b288ded8abe31dc4ec35c94f6&quot; data-source=&quot;Represents type declarations: class types, interface types, array types, value types, enumeration types, type parameters, generic type definitions, and open or closed constructed generic types.&quot; xml:space=&quot;preserve&quot;&gt;클래스 형식, 인터페이스 형식, 배열 형식, 값 형식, 열거형 형식, 형식 매개 변수, 제네릭 형식 정의 및 개방형 생성 제네릭 형식이나 폐쇄형 생성 제네릭 형식에 대한 형식 선언을 나타냅니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(42, 42, 42); padding-bottom: 15px; line-height: 18px;&quot;&gt;&lt;span id=&quot;mt2&quot; class=&quot;sentence&quot; data-guid=&quot;6d2cbc2daf5ffb7f93bed057468f2ccd&quot; data-source=&quot;To browse the .NET Framework source code for this type, see the &lt;span class=&amp;quot;mtpsTagOuterHtml&amp;quot; &gt;&lt;span&gt;Reference Source&lt;/span&gt;&lt;/span&gt;.&quot; xml:space=&quot;preserve&quot;&gt;이 형식에 대한 .NET Framework 소스 코드를 찾아보려면&amp;nbsp;&lt;a href=&quot;http://referencesource.microsoft.com/#mscorlib/system/type.cs#3d00eeab9feb80f3&quot; style=&quot;color: rgb(0, 112, 159);&quot;&gt;참조 원본&lt;/a&gt;을 참조하세요.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;strong&gt;네임스페이스:&amp;nbsp;&lt;/strong&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;https://msdn.microsoft.com/ko-kr/library/system(v=vs.110).aspx&quot; style=&quot;color: rgb(0, 112, 159);&quot;&gt;System&lt;/a&gt;&lt;br /&gt;&lt;strong&gt;어셈블리:&amp;nbsp;&lt;/strong&gt;&amp;nbsp;mscorlib.dll의 mscorlib&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;namespace ConsoleApplication1&lt;/p&gt;&lt;p&gt;{&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; class Program&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public class test&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public string str { get; set; }&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public int age { get; set; }&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; IEnumerable&amp;lt;test&amp;gt; tests;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; public void init()&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tests = new test[] {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new test {str = &quot;aa&quot;, age = 33},&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new test {str = &quot;aas&quot;, age = 133},&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new test {str = &quot;aad&quot;, age = 233},&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.Type type = typeof(int);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Console.Write(type);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; static void Main(string[] args)&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;{&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;test theTest = new test();&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.Type st = typeof(test[]);&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// typeof는 대상을 system.Type으로 변환한다.&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// system.Type은 여러 정보를 담게 된다. // 받았던 대상의 타입이 클래스인지, 배열인지? 텍스트 명칭부터, 정식으로 어느 소속인지 등..&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;결론적으로 돌려보니, '타입'을 집어넣으면, 해당 타입의 정보를 가진 객체를 반환하는 함수였다. 그 이름이나 소속, 배열 여부 , 클래스인지 등.. 다양한 정보를 담은 객체를 던진다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>C++++ (C#)</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/201</guid>
<comments>https://genesis8.tistory.com/201#entry201comment</comments>
<pubDate>Fri, 22 Jan 2016 15:31:50 +0900</pubDate>
</item>
<item>
<title>연산자</title>
<link>https://genesis8.tistory.com/200</link>
<description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;출처 : 위키 백과&lt;/span&gt;&lt;/p&gt;&lt;table class=&quot;wikitable&quot; style=&quot;font-size: 14px; margin: 1em 0px; border: 1px solid rgb(170, 170, 170); border-collapse: collapse; color: black; font-family: sans-serif; line-height: 22.4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;2&quot; rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;연산자 이름&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;구문&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;오버로드&amp;nbsp;&lt;wbr style=&quot;display: inline-block;&quot;&gt;가능&lt;wbr style=&quot;display: inline-block;&quot;&gt;&lt;sup id=&quot;cite_ref-overloadable_1-0&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-overloadable-1&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 1]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;C (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;C&lt;/a&gt;에 포함됨&lt;sup id=&quot;cite_ref-c_include_2-0&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-c_include-2&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 2]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;T의 멤버로서&lt;/th&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;외부 클래스 정의들&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=C%2B%2B%EC%9D%98_%ED%95%A0%EB%8B%B9_%EC%97%B0%EC%82%B0%EC%9E%90&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;C++의 할당 연산자 (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;기본 할당&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;=&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;table-na&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; color: grey; vertical-align: middle; text-align: center; background: rgb(236, 236, 236);&quot;&gt;&lt;small&gt;빈칸&lt;/small&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%8D%A7%EC%85%88&quot; title=&quot;덧셈&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;덧셈&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;+&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%BA%84%EC%85%88&quot; title=&quot;뺄셈&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;뺄셈&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;-&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%8B%A8%ED%95%AD_%EC%97%B0%EC%82%B0&quot; title=&quot;단항 연산&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;단항&lt;/a&gt;&amp;nbsp;덧셈&lt;br /&gt;(&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%98%95_%EB%B3%80%ED%99%98&quot; title=&quot;형 변환&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;정수 승급&lt;/a&gt;)&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;&lt;b&gt;+&lt;/b&gt;a&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;단항 뺄셈&lt;br /&gt;(&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B0%98%EC%88%98_(%EC%88%98)&quot; title=&quot;반수 (수)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;반수&lt;/a&gt;)&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;&lt;b&gt;-&lt;/b&gt;a&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B3%B1%EC%85%88&quot; title=&quot;곱셈&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;곱셈&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;*&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%82%98%EB%88%97%EC%85%88&quot; title=&quot;나눗셈&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;나눗셈&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;/&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%AA%A8%EB%93%88%EB%9F%AC_%EC%97%B0%EC%82%B0&quot; title=&quot;모듈러 연산&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;모듈러&lt;/a&gt;&amp;nbsp;(나머지)&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;%&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EC%A6%9D%EA%B0%80%EC%99%80_%EA%B0%90%EC%86%8C_%EC%97%B0%EC%82%B0%EC%9E%90&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;증가와 감소 연산자 (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;증가&lt;/a&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;전위&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;&lt;b&gt;++&lt;/b&gt;a&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;후위&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&lt;b&gt;++&lt;/b&gt;&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;sup id=&quot;cite_ref-int_3-0&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-int-3&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 3]&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;sup id=&quot;cite_ref-int_3-1&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-int-3&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 3]&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EC%A6%9D%EA%B0%80%EC%99%80_%EA%B0%90%EC%86%8C_%EC%97%B0%EC%82%B0%EC%9E%90&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;증가와 감소 연산자 (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;감소&lt;/a&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;전위&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;&lt;b&gt;--&lt;/b&gt;a&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;후위&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&lt;b&gt;--&lt;/b&gt;&lt;/code&gt;&lt;/td&gt;&lt;td rowspan=&quot;2&quot; class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td rowspan=&quot;2&quot; class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;sup id=&quot;cite_ref-int_3-2&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-int-3&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 3]&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;sup id=&quot;cite_ref-int_3-3&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-int-3&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 3]&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class=&quot;wikitable&quot; style=&quot;font-size: 14px; margin: 1em 0px; border: 1px solid rgb(170, 170, 170); border-collapse: collapse; color: black; font-family: sans-serif; line-height: 22.4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;2&quot; rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;연산자&amp;nbsp;&lt;span class=&quot;nowrap&quot; style=&quot;white-space: nowrap;&quot;&gt;이름&lt;/span&gt;&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;구문&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;오버로드&lt;br /&gt;가능&lt;sup id=&quot;cite_ref-overloadable_1-1&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-overloadable-1&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 1]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;C (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;C&lt;/a&gt;에서&lt;br /&gt;포함됨&lt;sup id=&quot;cite_ref-c_include_2-1&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-c_include-2&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 2]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;프로토타입 예제&lt;sup id=&quot;cite_ref-type_4-0&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-type-4&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 4]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;T의 멤버로서&lt;/th&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;외부 클래스 정의들&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;같음&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;==&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;같지&amp;nbsp;&lt;span class=&quot;nowrap&quot; style=&quot;white-space: nowrap;&quot;&gt;않음&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;!=&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;큼&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;gt;&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;작음&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;lt;&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;크거나&lt;br /&gt;같음&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;gt;=&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;작거나&lt;br /&gt;같음&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;lt;=&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;&lt;/pre&gt;&lt;div&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;p&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class=&quot;wikitable&quot; style=&quot;font-size: 14px; margin: 1em 0px; border: 1px solid rgb(170, 170, 170); border-collapse: collapse; color: black; font-family: sans-serif; line-height: 22.4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;2&quot; rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;연산자&lt;br /&gt;이름&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;구문&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;오버로드&lt;br /&gt;가능&lt;sup id=&quot;cite_ref-overloadable_1-2&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-overloadable-1&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 1]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;C (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;C&lt;/a&gt;에서&lt;br /&gt;포함됨&lt;sup id=&quot;cite_ref-c_include_2-2&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-c_include-2&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 2]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;프로토타입 예제&lt;sup id=&quot;cite_ref-type_4-1&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-type-4&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 4]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;T의 멤버로서&lt;/th&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;외부 클래스 정의들&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B6%80%EC%A0%95&quot; title=&quot;부정&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;논리적&lt;br /&gt;부정 (NOT)&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;&lt;b&gt;!&lt;/b&gt;a&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%85%BC%EB%A6%AC%EA%B3%B1&quot; title=&quot;논리곱&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;논리적&lt;br /&gt;AND&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;amp;&amp;amp;&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%85%BC%EB%A6%AC%ED%95%A9&quot; title=&quot;논리합&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;논리적&lt;br /&gt;OR&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;||&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;kt&quot; style=&quot;color: rgb(176, 0, 64);&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;&lt;/pre&gt;&lt;div&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;p&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;table class=&quot;wikitable&quot; style=&quot;font-size: 14px; margin: 1em 0px; border: 1px solid rgb(170, 170, 170); border-collapse: collapse; color: black; font-family: sans-serif; line-height: 22.4px; width: 1677px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th colspan=&quot;2&quot; rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;연산자&lt;br /&gt;이름&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;구문&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;오버로드&amp;nbsp;&lt;wbr style=&quot;display: inline-block;&quot;&gt;가능&lt;wbr style=&quot;display: inline-block;&quot;&gt;&lt;sup id=&quot;cite_ref-overloadable_1-3&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-overloadable-1&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 1]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th rowspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;C (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;C&lt;/a&gt;에서 포함됨&lt;sup id=&quot;cite_ref-c_include_2-3&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-c_include-2&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 2]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;th colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;프로토타입 예제&lt;sup id=&quot;cite_ref-type_4-2&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate; font-weight: normal;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-type-4&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 4]&lt;/a&gt;&lt;/sup&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;T의 멤버로서&lt;/th&gt;&lt;th style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center; background-color: rgb(242, 242, 242);&quot;&gt;외부 클래스 정의들&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8_%EC%97%B0%EC%82%B0#NOT&quot; title=&quot;비트 연산&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;비트 NOT&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;&lt;b&gt;~&lt;/b&gt;a&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8_%EC%97%B0%EC%82%B0#AND&quot; title=&quot;비트 연산&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;비트&lt;br /&gt;AND&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;amp;&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8_%EC%97%B0%EC%82%B0#OR&quot; title=&quot;비트 연산&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;비트&lt;br /&gt;OR&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;|&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B9%84%ED%8A%B8_%EC%97%B0%EC%82%B0#XOR&quot; title=&quot;비트 연산&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;비트&lt;br /&gt;XOR&lt;/a&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;^&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;비트&lt;br /&gt;왼쪽&lt;br /&gt;시프트&lt;sup id=&quot;cite_ref-.EB.B9.84.ED.8A.B8.EC.8B.9C.ED.94.84.ED.8A.B8_5-0&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-.EB.B9.84.ED.8A.B8.EC.8B.9C.ED.94.84.ED.8A.B8-5&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 5]&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;lt;&amp;lt;&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=&quot;2&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;비트&lt;br /&gt;오른쪽&lt;br /&gt;시프트&lt;sup id=&quot;cite_ref-.EB.B9.84.ED.8A.B8.EC.8B.9C.ED.94.84.ED.8A.B8_5-1&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%EC%99%80_C%2B%2B%EC%97%90%EC%84%9C%EC%9D%98_%EC%97%B0%EC%82%B0%EC%9E%90#cite_note-.EB.B9.84.ED.8A.B8.EC.8B.9C.ED.94.84.ED.8A.B8-5&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[참고 5]&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;&lt;td class=&quot;nowrap&quot; style=&quot;white-space: nowrap; border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; text-align: center;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px;&quot;&gt;a&amp;nbsp;&lt;b&gt;&amp;gt;&amp;gt;&lt;/b&gt;&amp;nbsp;b&lt;/code&gt;&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td class=&quot;table-yes&quot; style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em; vertical-align: middle; text-align: center; background: rgb(144, 255, 144);&quot;&gt;예&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/tt&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;border: 1px solid rgb(170, 170, 170); padding: 0.2em 0.4em;&quot;&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/tt&gt;&lt;/pre&gt;&lt;div&gt;&lt;tt style=&quot;font-family: monospace, Courier;&quot;&gt;&lt;span class=&quot;p&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍 공부</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/200</guid>
<comments>https://genesis8.tistory.com/200#entry200comment</comments>
<pubDate>Fri, 22 Jan 2016 12:18:57 +0900</pubDate>
</item>
<item>
<title>c# using 키워드</title>
<link>https://genesis8.tistory.com/197</link>
<description>&lt;p&gt;원문 :&amp;nbsp;http://csharpschool.github.io/2015/05/05/using-keyword-and-idisposable.html&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;C#에서는 가비지 컬렉터를 지원하므로, 메모리의 해제를 자동으로 해주지만&amp;nbsp;&lt;/p&gt;&lt;p&gt;우리가 사용하는 리소스가 메모리만 있는 것이 아니다. 메모리와 별개로 최대한 열 수 있는 파일 개수에 제한이 존재한다.&lt;/p&gt;&lt;p&gt;(이 제한에 도달하면 메모리가 남아도 파일을 열 수 없다.) 따라서 사용하지 않는 파일을 수동으로 닫아줘야한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;즉..&lt;/p&gt;&lt;p&gt;var reader = new StreamReader(&quot;file.txt&quot;);&lt;/p&gt;&lt;p&gt;var content = reader.ReadToEnd();&lt;/p&gt;&lt;p&gt;reader.Close();&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 닫아주면 끝일 것 같지만, Close가 실행되기 전 ReadToEnd에서 예외가 발생할 경우.. close가 불리지 않고 넘어가는 경우가 발생한다.&lt;/p&gt;&lt;p&gt;이를 방지하기 위해서 finally 블록을 사용해야하는데..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;var reader = new StreamReader(&quot;file.txt&quot;);&lt;/p&gt;&lt;p&gt;try&lt;/p&gt;&lt;p&gt;{&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; var content = reader.ReadToEnd();&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;finally&lt;/p&gt;&lt;p&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;reader.Close();&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 처럼하게되면 어떤 상황에도 작동하는 finally 에 의해서 파일은 닫힐 것이다. 하지만 이런 과정은 불편하기 때문에..&lt;/p&gt;&lt;p&gt;C#은 using이라는 '키워드'를 제공한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;using을 사용하면..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;using(var reader = new StreamReader(&quot;file.txt&quot;))&lt;/p&gt;&lt;p&gt;{&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space:pre&quot;&gt;	&lt;/span&gt;var content = reader.ReadToEnd();&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 하면 위의 동일한 효과를 얻을 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;C#이 각 리소스를 해제하는 방법이 다 다를텐데, 어떻게 해제하는 것일까?&lt;/p&gt;&lt;p&gt;NET에 이런 목적으로 존재하는 인터페이스가 IDisposable 이며, Dispose 메소드를 정의하고 있는데,&lt;/p&gt;&lt;p&gt;IDisposable을 구현한 클래스가 using 블록을 빠져나갈 때, C#이 자동적으로 Dispose 메소드를 호출한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;명시적인 리소스 해제가 필요한 클래스가 모두 IDisposable 인터페이스를 구현하고 있기 때문에&lt;/p&gt;&lt;p&gt;이런 클래스를 사용할 때는 되도록 using을 사용하자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또 우리가 만드는 클래스도 명시적인 리소스 해제가 필요할 경우 IDisposable을 구현하는 것이 좋은 습관.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>C++++ (C#)</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/197</guid>
<comments>https://genesis8.tistory.com/197#entry197comment</comments>
<pubDate>Thu, 21 Jan 2016 17:20:41 +0900</pubDate>
</item>
<item>
<title>JSON 이란?</title>
<link>https://genesis8.tistory.com/195</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;출처 위키백과&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;b&gt;JSON&lt;/b&gt;(&lt;b&gt;제이슨&lt;/b&gt;&lt;sup id=&quot;cite_ref-Pronunciation_1-0&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/JSON#cite_note-Pronunciation-1&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;,&amp;nbsp;&lt;span lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;JavaScript Object Notation&lt;/span&gt;)은&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EC%86%8D%EC%84%B1-%EA%B0%92_%EC%8C%8D&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;속성-값 쌍 (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;속성-값 쌍&lt;/a&gt;으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B0%9C%EB%B0%A9%ED%98%95_%ED%91%9C%EC%A4%80&quot; title=&quot;개방형 표준&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;개방형 표준&lt;/a&gt;&amp;nbsp;포맷이다. 비동기 브라우저/서버 통신 (&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=AJAJ&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;AJAJ (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;AJAJ&lt;/a&gt;)을 위해, 넓게는&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/XML&quot; title=&quot;XML&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;XML&lt;/a&gt;(&lt;a href=&quot;https://ko.wikipedia.org/wiki/Ajax&quot; title=&quot;Ajax&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;AJAX&lt;/a&gt;가 사용)을 대체하는 주요 데이터 포맷이다. 특히,&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%EB%84%B7&quot; title=&quot;인터넷&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;인터넷&lt;/a&gt;에서 자료를 주고 받을 때 그 자료를 표현하는 방법으로 알려져 있다. 자료의 종류에 큰 제한은 없으며, 특히&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%93%A8%ED%84%B0_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8&quot; title=&quot;컴퓨터 프로그램&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;컴퓨터 프로그램&lt;/a&gt;의&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B3%80%EC%88%98&quot; title=&quot;변수&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;변수&lt;/a&gt;값을 표현하는 데 적합하다.&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;본래는&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8&quot; title=&quot;자바스크립트&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;자바스크립트&lt;/a&gt;&amp;nbsp;언어로부터 파생되어&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8&quot; title=&quot;자바스크립트&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;자바스크립트&lt;/a&gt;의 구문 형식을 따르지만 언어 독립형 데이터 포맷이다. 즉,&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4&quot; title=&quot;프로그래밍 언어&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로그래밍 언어&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;나&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%93%A8%ED%8C%85_%ED%94%8C%EB%9E%AB%ED%8F%BC&quot; title=&quot;컴퓨팅 플랫폼&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;플랫폼&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;에 독립적이므로,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B5%AC%EB%AC%B8_%EB%B6%84%EC%84%9D&quot; title=&quot;구문 분석&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;구문 분석&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;및 JSON 데이터 생성을 위한 코드는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;C (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;C&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C%2B%2B&quot; title=&quot;C++&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;C++&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/C_%EC%83%A4%ED%94%84&quot; title=&quot;C 샤프&quot; class=&quot;mw-disambig&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;C#&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)&quot; title=&quot;자바 (프로그래밍 언어)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;자바&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8&quot; title=&quot;자바스크립트&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;자바스크립트&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8E%84&quot; title=&quot;펄&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;펄&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%B4%EC%8D%AC&quot; title=&quot;파이썬&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;파이썬&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;등 수많은&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4&quot; title=&quot;프로그래밍 언어&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로그래밍 언어&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;에서 쉽게 이용할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;JSON 포맷은 본래&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EB%8D%94%EA%B8%80%EB%9D%BC%EC%8A%A4_%ED%81%AC%EB%A1%9D%ED%8F%AC%EB%93%9C&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;더글라스 크록포드 (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;더글라스 크록포드&lt;/a&gt;가 규정하였다. RFC 7159와 ECMA-404라는 두 개의 경쟁 표준에 의해 기술되고 있다. ECMA 표준은 문법만 정의할 정도로 최소한으로만 정의되어 있는 반면 RFC는 시맨틱, 보안적 고려 사항을 일부 제공하기도 한다.&lt;sup id=&quot;cite_ref-2&quot; class=&quot;reference&quot; style=&quot;line-height: 1em; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/JSON#cite_note-2&quot; style=&quot;color: rgb(11, 0, 128); white-space: nowrap; background: none;&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&amp;nbsp;JSON의 공식 인터넷 미디어 타입은&amp;nbsp;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;application/json&lt;/code&gt;이며, JSON의 파일 확장자는&amp;nbsp;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;.json&lt;/code&gt;이다.&lt;/p&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EA.B8.B0.EB.B3.B8_.EC.9E.90.EB.A3.8C.ED.98.95&quot;&gt;기본 자료형&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=JSON&amp;amp;action=edit&amp;amp;section=2&quot; title=&quot;부분 편집: 기본 자료형&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;JSON의 기본 자료형은 다음과 같다:&lt;/p&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;수(Number)&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%AC%B8%EC%9E%90%EC%97%B4&quot; title=&quot;문자열&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;문자열(String)&lt;/a&gt;: 0개 이상의&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9C%A0%EB%8B%88%EC%BD%94%EB%93%9C&quot; title=&quot;유니코드&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;유니코드&lt;/a&gt;&amp;nbsp;문자들의 연속. 문자열은 큰 따옴표(&quot;)로 구분하며 역슬래시&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=%EC%9D%B4%EC%8A%A4%EC%BC%80%EC%9D%B4%ED%94%84_%EB%AC%B8%EC%9E%90&amp;amp;action=edit&amp;amp;redlink=1&quot; class=&quot;new&quot; title=&quot;이스케이프 문자 (없는 문서)&quot; style=&quot;color: rgb(165, 88, 88); background: none;&quot;&gt;이스케이프&lt;/a&gt;&amp;nbsp;문법을 지원한다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B6%88%EB%A6%B0_%EC%9E%90%EB%A3%8C%ED%98%95&quot; title=&quot;불린 자료형&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;참/거짓(Boolean)&lt;/a&gt;:&amp;nbsp;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;true&lt;/code&gt;&amp;nbsp;또는&amp;nbsp;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;false&lt;/code&gt;&amp;nbsp;값&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B0%B0%EC%97%B4&quot; title=&quot;배열&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;배열(Array)&lt;/a&gt;: 0 이상의 임의의 종류의 값으로 이루어진&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%A6%AC%EC%8A%A4%ED%8A%B8_(%EC%BB%B4%ED%93%A8%ED%8C%85)&quot; title=&quot;리스트 (컴퓨팅)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;순서가 있는 리스트&lt;/a&gt;. 대괄호로 나타내며 요소는 쉼표로 구분한다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;객체(Object): 순서가 없는 이름/값 쌍의 집합으로, 이름(키)이 문자열이다.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/Null&quot; title=&quot;Null&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;null&lt;/a&gt;&lt;/code&gt;: 빈 값으로,&amp;nbsp;&lt;code style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); border-radius: 2px; padding: 1px 4px; background-color: rgb(249, 249, 249);&quot;&gt;null&lt;/code&gt;을 사용한다.&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EC.88.98.28Number.29&quot;&gt;수(Number)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=JSON&amp;amp;action=edit&amp;amp;section=3&quot; title=&quot;부분 편집: 수(Number)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;기본 자료형의 수는 다음과 같이 표현된다. C나 자바에서의 8진수와 16진수를 표현하는 방법은 지원되지 않는다.&lt;/p&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;정수&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;1974&lt;/span&gt;
&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;750&lt;/span&gt;
&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;114&lt;/span&gt;
&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;273&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;실수(&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B3%A0%EC%A0%95_%EC%86%8C%EC%88%98%EC%A0%90&quot; title=&quot;고정 소수점&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;고정 소수점&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;3.14&lt;/span&gt;
&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;2.718&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;ul style=&quot;margin: 0.3em 0px 0px 1.6em; padding: 0px; list-style-image: url(&amp;quot;data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A&amp;quot;); color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;li style=&quot;margin-bottom: 0.1em;&quot;&gt;실수(&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B6%80%EB%8F%99_%EC%86%8C%EC%88%98%EC%A0%90&quot; title=&quot;부동 소수점&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;부동 소수점&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e4&lt;/span&gt;
&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;2.5e12&lt;/span&gt;
&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;3.4&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;4.56&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;5.67&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;mf&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;6.78&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.AC.B8.EC.9E.90.EC.97.B4.28String.29&quot;&gt;문자열(String)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=JSON&amp;amp;action=edit&amp;amp;section=4&quot; title=&quot;부분 편집: 문자열(String)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;항상 큰 따옴표(&quot;)로 묶어야 하며, 그 안에는 유니코드 문자들이 나열된다. 유니코드 중 역슬래시(\)와 큰따옴표(&quot;)는 바로 사용할 수 없다. 역슬래시는 제어문자를 표현하기 위해 사용되며 다음과 같은 의미를 지닌다.&lt;/p&gt;&lt;dl style=&quot;margin-top: 0.2em; margin-bottom: 0.5em; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px;&quot;&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\b 백스페이스&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\f 폼 피드&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\n 개행&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\r 캐리지 리턴&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\t 탭&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\&quot; 따옴표&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\/ 슬래시&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\\ 역슬래시&lt;/dd&gt;&lt;dd style=&quot;margin-left: 1.6em; margin-bottom: 0.1em; margin-right: 0px;&quot;&gt;\uHHHH 16진수 네자리로되어 있는 유니코드 문자&lt;/dd&gt;&lt;/dl&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt;&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;1234&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;Love&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;O-matic&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;한글&quot;&lt;/span&gt;
&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;\&quot;JSON\&quot;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EB.B0.B0.EC.97.B4.28Array.29&quot;&gt;배열(Array)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=JSON&amp;amp;action=edit&amp;amp;section=5&quot; title=&quot;부분 편집: 배열(Array)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;배열은 대괄호[]로 나타낸다. 배열의 각 요소는 기본 자료형이거나 배열, 객체이다. 각 요소들은 쉼표(,)로 구별된다. 각 요소가 나타나는 순서에 의미가 있다.&lt;/p&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;v&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;마흔&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;h3 style=&quot;margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom-style: none; font-size: 1.2em; line-height: 1.6; font-family: sans-serif; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EA.B0.9D.EC.B2.B4.28Object.29&quot;&gt;객체(Object)&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: -webkit-isolate;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=JSON&amp;amp;action=edit&amp;amp;section=6&quot; title=&quot;부분 편집: 객체(Object)&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;객체는 이름/값 쌍의 집합으로, 중괄호{}를 사용한다. 이름은 문자열이기 때문에 반드시 따옴표를 하며, 값은 기본 자료형이거나 배열, 객체이다. 각 쌍들은 쉼표(,)로 구별된다. 각 쌍이 나오는 순서는 의미가 없다.&lt;/p&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;name2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;name3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;값3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;name1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot; style=&quot;color: rgb(0, 128, 0); font-weight: bold;&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;JSON 메시지 단위는&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%B0%B0%EC%97%B4&quot; title=&quot;배열&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;배열&lt;/a&gt;이나&amp;nbsp;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4&quot; title=&quot;객체&quot; class=&quot;mw-redirect&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;객체&lt;/a&gt;이다. 위의 두 예는 JSON 메시지가 될 수 있다.&lt;/p&gt;&lt;h2 style=&quot;margin: 1em 0px 0.25em; overflow: hidden; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(170, 170, 170); font-family: 'Linux Libertine', Georgia, Times, serif; line-height: 1.3; background-image: none; background-attachment: initial; background-size: initial; background-origin: initial; background-clip: initial; background-position: initial; background-repeat: initial;&quot;&gt;&lt;span class=&quot;mw-headline&quot; id=&quot;.EC.98.88.EC.A0.9C&quot;&gt;예제&lt;/span&gt;&lt;span class=&quot;mw-editsection&quot; style=&quot;-webkit-user-select: none; font-size:10pt; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; white-space: nowrap; unicode-bidi: -webkit-isolate; font-family: sans-serif;&quot;&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-right: 0.25em; color: rgb(85, 85, 85);&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/w/index.php?title=JSON&amp;amp;action=edit&amp;amp;section=7&quot; title=&quot;부분 편집: 예제&quot; style=&quot;color: rgb(11, 0, 128); background: none;&quot;&gt;편집&lt;/a&gt;&lt;span class=&quot;mw-editsection-bracket&quot; style=&quot;margin-left: 0.25em; color: rgb(85, 85, 85);&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;다음은 한 사람에 관한 정보를 갖는 JSON 객체이다.&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;mw-highlight mw-content-ltr&quot; dir=&quot;ltr&quot; style=&quot;direction: ltr; unicode-bidi: embed; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.4px; background: rgb(248, 248, 248);&quot;&gt;&lt;pre style=&quot;font-family: monospace, Courier; color: black; border: 1px solid rgb(221, 221, 221); padding: 1em; white-space: pre-wrap; line-height: 1.3em; tab-size: 4; background-color: rgb(249, 249, 249);&quot;&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;이름&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;테스트&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;나이&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;성별&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;여&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;주소&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;서울특별시 양천구 목동&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;특기&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;농구&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;도술&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;가족관계&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;아버지&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;홍판서&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;어머니&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;춘섬&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;회사&quot;&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;color: rgb(102, 102, 102);&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot; style=&quot;color: rgb(186, 33, 33);&quot;&gt;&quot;경기 안양시 만안구 안양7동&quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;음, 감이 잘 안온다. 아래의 주소에서&lt;span style=&quot;line-height: 22.4px;&quot;&gt;&amp;nbsp;더 쉽게 설명된 느낌이다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px;&quot;&gt;&lt;font color=&quot;#252525&quot; face=&quot;sans-serif&quot;&gt;&lt;span style=&quot;font-size: 14px; line-height: 22.4px;&quot;&gt;http://blog.naver.com/musecje/10126963299&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0.5em 0px; line-height: 22.4px; color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;- JSON이란 무엇인가?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 1. 어떻게 읽으면 되나?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 제이선이라고 읽으면 되겠다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 2. 무엇을 줄인 말이냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; JavaScript Object Notation이라는 이름에서 알 수 있듯이 자바스크립트를 위한 것이고 객체 형식으로 자료를 표현하는 것이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 3. 이거 프로그래밍 언어냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 사방팔방에 JSON이라는게 등장하고 각종 사용방법이 나오고 어려워 보이지만 JSON 자체는 정말 별거 아니다. JSON 그자체 는 단순히 데이터 포맷일 뿐이다. 어떠한 통신 방법도, 프로그래밍 문법도 아닌 단순히 데이터를 표시하는 표현 방법일 뿐이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 간단한 데이터를 xml보다 좀 더 간단하게 표현하기 위해 만든 것이다. XML보다 기능이 적기 때문에 파싱도 빠르고 간단하기 때문에 클라이언트 사이드에서, 특히 모 바일에서 더욱 유용하겠다. 사실 서버 입장에서도 더 유용하기 때문에 많은 서비스들이 XML보다는 JSON을 권장한다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 다시 말하지만 이건 프로그래밍 언어가 아니다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 4. 이거 공식 사이트 없냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 네이버에서 JSON으로 검색하면 시덥잖은 네이버 자체 컨텐츠들(블로그, 카페, 지식인)만 뜨는데 JSON 공식 사이트는 멀쩡히 있고, 한국어도 지원된다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://json.org/json-ko.html&quot; style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(49, 128, 218); text-decoration: underline; font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;http://json.org/json-ko.html&lt;/a&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 여기 들어가면 좀 당황스러울 수도 있다. 뭔 놈의 공식사이트가 내용이 진짜 간단하고 별 거 없기 때문이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; &amp;nbsp; 위키피디아를 보면 더 잘 설명이 되어 있다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://ko.wikipedia.org/wiki/JSON&quot; style=&quot;margin: 0px; padding: 0px; font-size: 13px; border: 0px; vertical-align: baseline; color: rgb(49, 128, 218); text-decoration: underline; font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; line-height: 23px;&quot;&gt;http://ko.wikipedia.org/wiki/JSON&lt;br /&gt;&lt;/a&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 5. 이거 왜 쓰냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 단순히 데이터를 받아서 객체나 변수로 할당해서 사용하기 위한 것이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 6. AJAX와는 다른가?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; AJAX와는 별개의 개념이지만 AJAX가 없다면 JSON이라는 개념은 필요 없을 것이다. AJAX를 사용해 데이터를 주고 받을 때 그 데이터 포맷으로 JSON을 사용하는 것이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 7. 이거 쓰려면 따로 라이브러리 같은 걸 써야 하냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; JSON 자 체는 이미 자바스크립트 표준으로 채택되어 자바스크립트에서 기본적으로 지원하고 있기 때문에 별도의 라이브러리가 필요하거나 하지는 않 다. 그냥 eval()이라는 함수 하나로 해결되는 게 JSON이다. 하지만 JSON의 한계로 인해 라이브러리를 따로 사용하는 경우가 많다.그리고 자바스크립트 이외의 환경에서도 JSON을 간단히 사용 하기 위한 라이브러리들이 존재한다. JSON 공식 사이트 내용의 대부분이 바로 그것이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 8. JSON 단점이나 문제점은 뭐냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; AJAX 는 단순히 데이터만이 아니라 javascript 그 자체도 전달할 수 있다. 무슨 말이냐면 json데이터라고 해서 받았는데 그게 단 순 데이터가 아니라 자바스크립트가 될 수도 있고, 그게 실행 될 수 있다는 것이다. 데이터인 줄 알고 받았는데 악성 스크립트더 라 뭐 그럴 수 있다는 것이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; JSON 관련 라이브러리를 따로 사용하는 이유가 이것이다. 받은 내용에서 순수하게 데이터만 추출하기 위한 라이브러리이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 9. JSON으로 아무 데이터나 불러갈 수 있냐?&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; JSON의 한계는 JSON으로 가져올 수 있는 데이터는 해당 자바스크립트가 로드된 서버의 데이터에 한정된다는 것이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 예를 들어서 http://kwz.kr/json.js에서 불러올 수 있는 데이터는 kwz.kr 서버에 존재하는 것만 가능하다는 것이다. 구글 데이터를 불러온다거나 네이버 데이터를 불러온다거나 할 수 없다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; JSON은 단순히 데이터 포맷일 뿐이고 그 데이터를 불러오기 위해선 XMLHttpRequest()라는 자바스크립트 함수를 사용해야 하는데 이 함수가 동일 서버에 대한 것만 지원하기 때문이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 10. 어? 다른 서버의 데이터도 가져가서 보여주던데??&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 궁하면 통한다고 방법이야 만들면 나오는 거다. 그래서 나온 게 일종의 프락시 역할을 하는 서버쪽 스크립트 파일과 JSONP이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp; 11. JSONP는 뭐냐????&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; JSON with Padding을 줄인 말이다. 다른 서버의 데이터를 가져오기 위한 방법이다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;span style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 이건 해당 서버에서 JSONP의 방식을 지원해 줘야지만 가능하다. 이것이 불가능하면 역시 프락시를 써야 한다.&lt;/span&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;br style=&quot;color: rgb(31, 31, 31); font-family: '맑은 고딕', 'malgun gothic', 돋움, dotum, AppleGothic, sans-serif; font-size: 13px; line-height: 23px;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/195</guid>
<comments>https://genesis8.tistory.com/195#entry195comment</comments>
<pubDate>Thu, 21 Jan 2016 15:51:37 +0900</pubDate>
</item>
<item>
<title>MY SQL 데이터 타입</title>
<link>https://genesis8.tistory.com/194</link>
<description>&lt;p style=&quot;padding: 0px; font-size: 9pt; margin-right: 0px; font-family: 돋움, Dotum; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 2;&quot;&gt;원본 출처&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;padding: 0px; font-size: 9pt; margin-right: 0px; font-family: 돋움, Dotum; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 2;&quot;&gt;http://ra2kstar.tistory.com/82&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;padding: 0px; margin-right: 0px;&quot;&gt;&lt;font face=&quot;돋움, Dotum&quot;&gt;&lt;span style=&quot;line-height: 24px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;padding: 0px; margin-right: 0px;&quot;&gt;&lt;font face=&quot;돋움, Dotum&quot;&gt;&lt;span style=&quot;line-height: 24px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;608&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;color: rgb(102, 102, 102); font-size: 12px; line-height: 18px; border: none; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; border-collapse: collapse; width: 608px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px none rgb(124, 132, 239); width: 608px; height: 4px; background-color: rgb(255, 0, 0);&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;padding: 0px; font-size: 9pt; margin-right: 0px; margin-left: 0px; font-family: 돋움, Dotum; line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 18pt;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;MySQL 데이터 타입&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;MySQL 에서 사용하는 데이터 타입에 대해서 알아본다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;CHAR 데이터 타입&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;CHAR와 VARCHAR(VARiable length CHARacter string)은 모두 텍스트 문자열을 허용하고, 필드의 크기를 제한한다. 두 타입의 차이점은 CHAR 필드의 모든 문자열은 크기가 정해진다는 것. 즉 더 작은 문자열을 입력하면 공백으로 채워진다. 반면 VARCHAR의 경우, 텍스트를 채우지 않으며, 입력한 텍스트 크기에 맞게 가변적으로 크기를 가진다. 그러나, VARCHAR는 각 값의 크기를 추적할 수 있는 약간의 오버헤드가 필요하기 때문에&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;모든 데이터의 크기가 비슷&lt;/span&gt;하다면, CHAR가 더 효율적이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;574&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;color: rgb(102, 102, 102); font-size: 12px; line-height: 18px; border: none; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border: 1px solid rgb(204, 204, 204); width: 145px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;TYPE &amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); width: 152px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;사용되는 바이트&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); width: 276px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;예제&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 145px; height: 42px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;CHAR(n)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 152px; height: 42px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;정확히 n (&amp;lt;=255)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 276px; height: 42px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;CHAR(5) 'Hello'는 5바이트 사용&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;CHAR(50) 'Hello'는 50바이트 사용&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 145px; height: 42px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;VARCHAR(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 152px; height: 42px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n 까지(&amp;lt;=65535)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 276px; height: 42px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;VARCH&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;AR(100)'Hello'는 5바이트 사용&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;VARCHAR(5) 'Hello'는 5바이트 사용&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;BINARY 데이터 타입&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;BINARY 데이터 타입은 관련된 문자 세트가 없는 문자의 전체 바이트를 저장하는데 사용된다. 예를 들면&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;GIF&amp;nbsp;&lt;/span&gt;이미지를 저장하는데 사용할 수 있다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;574&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;color: rgb(102, 102, 102); font-family: nanum; font-size: 12px; line-height: 18px; border: none; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid rgb(204, 204, 204); height: 24px; width: 167px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;TYPE &amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 24px; width: 130px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;사용되는 바이트&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); width: 276px; height: 24px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;예제&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 42px; width: 167px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;BINARY(n) 혹은 BYTE(n)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 42px; width: 130px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;정확히 n (&amp;lt;=255)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 276px; height: 42px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;CHAR이지만 바이너리 데이터를 가짐&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 42px; width: 167px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;VARBINARY(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 42px; width: 130px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n 까지(&amp;lt;=65535)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 276px; height: 42px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;VARCHAR이지&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;만 바이너리 데이터를 가짐&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;padding: 0px; margin-right: 0px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: nanum;&quot;&gt;&lt;span id=&quot;callbacknestra2kstartistorycom829723&quot; style=&quot;color: rgb(102, 102, 102); font-family: nanum; width: 1px; height: 1px; float: right;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;TEXT와 VARCHAR 데이터 타입&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;TEXT와 VARCHAR에는 작은 차이점이 있다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;font-family: nanum; color: rgb(102, 102, 102); border: 1px solid rgb(238, 238, 238); padding: 10px; line-height: 2; background-color: rgb(238, 238, 238);&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;TEXT 필드는 기본 값을 가질 수 없다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;MySQL은 TEXT 열의 처음 n 개의 문자만 인덱싱 할 수 있다.&amp;nbsp;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;이것은, 만약 전체 내용을 검색할 때는 VARCHAR이 더 알맞고, 빠르다는 것이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;574&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;color: rgb(102, 102, 102); font-size: 12px; line-height: 18px; border: none; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid rgb(204, 204, 204); height: 24px; width: 191px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;TYPE&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 24px; width: 191px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;사용되는 바이트&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;width: 191px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 24px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;속성&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 191px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;TINYTEXT(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 191px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=255)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;문자열로 취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 191px; height: 24px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;TEXT(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 191px; height: 24px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=65535)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;width: 191px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;문자열로 취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 24px; width: 191px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;MEDIUMTEXT(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px; width: 191px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=16777215)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;width: 191px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;문자열로 취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 24px; width: 191px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;LONGTEXT(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px; width: 191px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=4294967295)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;width: 191px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;문자열로 취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana; font-size: 12pt;&quot;&gt;BLOB 데이터 타입&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;BLOB(Binary Large OBject)는 65535 바이트를 넘는 바이너리 데이터에 유용하며,&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;기본 값을 가질 수 없다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;574&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;color: rgb(102, 102, 102); font-family: nanum; font-size: 12px; line-height: 18px; border: none; border-image-source: initial; border-image-slice: initial; border-image-width: initial; border-image-outset: initial; border-image-repeat: initial; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid rgb(204, 204, 204); height: 24px; width: 162px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;TYP&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;E&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 24px; width: 179px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;사용되는 바이트&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 24px; width: 232px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;속성&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 162px; height: 24px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;TINYBLOB(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 179px; height: 24px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=255)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 232px; height: 24px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;바이너리 데이터로&amp;nbsp;취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 162px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;BLOB(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 179px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=65535)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 232px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;바이너리 데이터로&amp;nbsp;취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 24px; width: 162px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;MEDIUMBLOB(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px; width: 179px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=16777215)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px; width: 232px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;바이너리 데이터로&amp;nbsp;취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 24px; width: 162px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;LON&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;GBLOB(n)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px; width: 179px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최대 n (&amp;lt;=4294967295)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 24px; width: 232px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;바이너리 데이터로&amp;nbsp;취급&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;padding: 0px; margin-right: 0px;&quot;&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: nanum;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; font-family: Verdana;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255); background-color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana; font-size: 12pt;&quot;&gt;숫자형 데이터 타입&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;574&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;color: rgb(102, 102, 102); font-size: 12px; line-height: 18px; border: none; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;border: 1px solid rgb(204, 204, 204); height: 37px; width: 123px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;TYPE&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 37px; width: 104px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;사용되는 바이트&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 37px; width: 170px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최소 값&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;(signed/unsigned)&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-top-width: 1px; border-top-style: solid; border-top-color: rgb(204, 204, 204); height: 37px; width: 178px; background-color: rgb(255, 216, 216);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;최&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;대 값&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;(signed/unsigned)&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;TINYINT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;1&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-128&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;0&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;127&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;255&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;SMALLINT&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;2&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-32768&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;0&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;32767&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;65535&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;MEDIUMINT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;3&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-8388608&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;0&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;8388607&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;16777215&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;INT or INTEGER&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;4&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-2147483648&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;0&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;2147483647&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;4294967295&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;BIGINT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;8&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-9223372036854775808&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;0&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;9223372036854775807&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;18446744073709551615&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;FLOAT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;4&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-3.40E+45&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;(no unsigned)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;height: 24px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;3.40E+45&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;(no unsigned)&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(204, 204, 204); height: 38px; width: 123px; background-color: rgb(246, 246, 246);&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;DUBLE or REAL&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 38px; width: 104px;&quot;&gt;&lt;p style=&quot;text-align: center; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;8&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 38px; width: 170px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;-1.7976E+320&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;(no unsigned)&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(204, 204, 204); border-right-width: 1px; border-right-style: solid; border-right-color: rgb(204, 204, 204); height: 38px; width: 178px;&quot;&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;1.7976E+320&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;(no unsigned)&lt;/span&gt;&lt;span style=&quot;font-family: Verdana;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;padding: 0px; margin-right: 0px;&quot;&gt;&lt;p style=&quot;color: rgb(102, 102, 102); font-family: nanum; line-height: 2; padding-top: 0px !important; padding-bottom: 0px !important;&quot;&gt;&lt;/p&gt;&lt;/p&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important; margin-top: 0px !important; margin-bottom: 0px !important; color: rgb(102, 102, 102); font-family: nanum; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; line-height: 2; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important; margin-top: 0px !important; margin-bottom: 0px !important; color: rgb(102, 102, 102); font-family: nanum; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; line-height: 2; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;padding-top: 0px !important; padding-bottom: 0px !important; margin-top: 0px !important; margin-bottom: 0px !important; color: rgb(102, 102, 102); font-family: nanum; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; line-height: 2; background-color: rgb(255, 255, 255);&quot;&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>MySQL</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/194</guid>
<comments>https://genesis8.tistory.com/194#entry194comment</comments>
<pubDate>Thu, 21 Jan 2016 15:44:39 +0900</pubDate>
</item>
<item>
<title>redis란?</title>
<link>https://genesis8.tistory.com/189</link>
<description>&lt;p&gt;출처 :&amp;nbsp;&lt;/p&gt;&lt;p&gt;http://www.sqler.com/266239&lt;/p&gt;&lt;p&gt;http://blog.likead.co.kr/?p=72&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;redis란 무엇일까?&lt;/p&gt;&lt;p&gt;redis란 No SQL의 일종이라고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;NO SQL?&amp;nbsp;&lt;/p&gt;&lt;p&gt;위키 :&amp;nbsp;&lt;/p&gt;&lt;p&gt;NoSQL 데이터베이스는 단순 검색 및 추가 작업을 위한 매우 최적화된 키 값 저장 공간으로, 레이턴시와 스루풋과 관련하여 상당한 성능 이익을 내는 것이 목적이다. NoSQL 데이터베이스는 빅데이터와 실시간 웹 애플리케이션의 상업적 이용에 널리 쓰인다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;NO SQL은 Not only SQL의 줄임말로&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;NoSQL 시스템은 SQL 계열 쿼리 언어를 사용할 수 있다는 사실을 강조한다는 면에서 &quot;Not only SQL(SQL 뿐만이 아니고)&lt;/span&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&quot;로 불리기도 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;redis 자체도 약어라고 하는데&lt;/p&gt;&lt;p&gt;REmote DIctionary Server의 약어라고한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif; font-size: 10pt;&quot;&gt;Redis는 자주 Memcached&lt;/span&gt;&lt;span style=&quot;color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif; font-size: 10pt;&quot;&gt;와 비교되는 in memory 저장소 이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Memcached의 기본적인 특징.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-family: 돋움, dotum, verdana, sans-serif; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1. 처리 속도가 빠르다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 당연히 데이터가 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;메모리에&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;만 저장되므로 빠르다&lt;/span&gt;. 즉&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;, &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;속도가 느린 Disk를 거치지 않는다.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-family: 돋움, dotum, verdana, sans-serif; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2. 데이터가 메모리에만 저장된다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 당연히 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;프로세스가 죽거나 장비가 Shutdown&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;되면 데이터가 사라진다&lt;/span&gt;.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-family: 돋움, dotum, verdana, sans-serif; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3. 만료일을 지정하여 만료가 되면 자동으로 데이터가 사라진다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp; -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(255, 0, 0);&quot;&gt;이름에서도 느껴지듯이 Cache이다&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-family: 돋움, dotum, verdana, sans-serif; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4. 저장소 메모리 재사용&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;만료가 되지 않았더라도&amp;nbsp; 더이상 데이터를 넣을 메모리가 없으면&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;LRU(Least recently used)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;알고리즘에 의해 데이터가 사라진다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;그래서, 보통 대형 포털들에서&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Static page, 또는 검색 결과 등을&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-weight: bold; color: rgb(255, 0, 0); font-size: 10pt;&quot;&gt;캐쉬&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;하는데 많이 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;font-weight: bold; color: rgb(255, 0, 0);&quot;&gt;그런데!!!!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-weight: bold;&quot;&gt;왜!!!!!&lt;/span&gt;&amp;nbsp;REDIS가 자꾸 Memchche와 비교되는가?&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;눈치들 채셨겠지만 거의 98%이상 Memchche와 동일한 기능을 제공한다.(비슷 하니까 비교 하겠지~~~)&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;그럼 다른 2%는 뭐냐?&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;이제부터 설명 들어간다..&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;font-size: 12px; font-family: 돋움, dotum, verdana, sans-serif; color: rgb(51, 51, 51); line-height: 1.3; clear: both; border: medium none; border-collapse: collapse; width: 801px; height: 63px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; width: 400px; border-width: 1px medium; border-style: solid none; vertical-align: middle; text-align: center; font-weight: bold; background-color: transparent;&quot;&gt;&amp;nbsp;Memcached&lt;/td&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; width: 401px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-right-width: medium; border-right-style: none; border-top-width: 1px; border-top-style: solid; border-top-color: rgb(95, 142, 239); vertical-align: middle; text-align: center; font-weight: bold; background-color: transparent;&quot;&gt;&amp;nbsp;REDIS&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; width: 400px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-right-width: medium; border-right-style: none; border-left-width: medium; border-left-style: none; background-color: rgb(231, 239, 250);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;처리 속도가 빠르다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 당연히 데이터가 메모리에&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;만 저장되므로 빠르다. 즉&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;, 속도가 느린 Disk를 거치지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; width: 401px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-right-width: medium; border-right-style: none; background-color: rgb(231, 239, 250);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;처리 속도가 빠르다.&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 당연히 데이터가 메모리+Disk에&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;저장된다. 그러나, 속도는 Memcached와 큰 차이가 없다.&lt;br /&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; width: 400px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-right-width: medium; border-right-style: none; border-left-width: medium; border-left-style: none; background-color: transparent;&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;데이터가 메모리에만 저장된다.&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 당연히 프로세스가 죽거나 장비가 Shutdown&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;되면 데이터가 사라진다.&lt;/span&gt;&lt;/td&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; width: 401px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-right-width: medium; border-right-style: none; background-color: transparent;&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;데이터가 메모리+Disk에 저장된다.&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 프로세스가 죽거나 장비가 Shutdown&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;되더라도 Data의 복구가 가능하다.&lt;br /&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; border-right-width: medium; border-right-style: none; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-left-width: medium; border-left-style: none; background-color: rgb(231, 239, 250);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;만료일을 지정하여 만료가 되면 자동으로 데이터가 사라진다.&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp; -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;이름에서도 느껴지듯이 Cache이다&lt;/span&gt;&lt;/td&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; border-right-width: medium; border-right-style: none; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); background-color: rgb(231, 239, 250);&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;만료일을 지정하여 만료가 되면 자동으로 데이터가 사라진다.&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp; -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;동일한 기능을 지원한다.&lt;br /&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; border-right-width: medium; border-right-style: none; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-left-width: medium; border-left-style: none; background-color: transparent;&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;저장소 메모리 재사용&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; -&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;만료가 되지 않았더라도&amp;nbsp; 더이상 데이터를 넣을 메모리가 없으면&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;LRU(Least recently used)&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;알고리즘에 의해 데이터가 사라진다.&lt;/span&gt;&lt;/td&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; border-right-width: medium; border-right-style: none; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); background-color: transparent;&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;저장소 메모리 재사용 하지 않는다.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp; - 명시적으로만&amp;nbsp;&lt;/span&gt;데이터를 제거할 수 있다.&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; border-right-width: medium; border-right-style: none; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); border-left-width: medium; border-left-style: none; background-color: rgb(231, 239, 250);&quot;&gt;&lt;span style=&quot;font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;&amp;nbsp;문자열만 지원&lt;/span&gt;&lt;br /&gt;&lt;/td&gt;&lt;td style=&quot;font-family: 돋움, dotum, verdana, sans-serif; line-height: 1.3; border-right-width: medium; border-right-style: none; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(95, 142, 239); background-color: rgb(231, 239, 250);&quot;&gt;&lt;span style=&quot;font-weight: bold; color: rgb(0, 85, 255);&quot;&gt;문자열, Set, Sorted Set, Hash, List등의 다양한 Data Type을 지원.&lt;/span&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; line-height: 1.6; color: rgb(80, 95, 95); font-family: 돋움, dotum, verdana, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;[Redis 의 장점]&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1. 리스트, 배열 형식의 데이터 처리에 특화됨&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;– value 값으로 문자열, 리스트, set, sorted set, hash 형 등 여러 데이터 형식을 지원함&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;리스트 형 데이터의 입력과 삭제가 MySQL에 비하여 10배 정도 빠르다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2. 여러 프로세스에서 동시에 같은 key에 대한 갱신을 요청할 경우 Atomic처리로 데이터 부정합 방지 Atomic 처리 함수를 제공&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;3. 메모리를 활용하면서 영속적인 데이터 보존&lt;/p&gt;&lt;p&gt;– 명령어로 명시적으로 삭제하거나 expires를 설정하지 않으면 데이터를 삭제하지 않는다.&lt;/p&gt;&lt;p&gt;– 스냅샷(기억 장치) 기능을 제공하여 메모리의 내용을 *.rdb 파일로 저장하여 해당 시점으로로 복구할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;4. 여러 대의 서버 구성&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;– Consistent hashing 혹은 master-slave 형식으로 구성 가능함&lt;/p&gt;&lt;p&gt;Redis에는 5가지의 데이터 타입이 존재한다. (Strings, Lists, Sets, Sorted sets, Hashes)&lt;/p&gt;&lt;p&gt;Strings (일반적인 key-value)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;– String이라고 해서 문자열만 저장할 수 있는게 아니라, 이진 데이터도 저장 가능 (정수, 실수형이 따로 없다.)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;– key에 넣을 수 있는 데이터의 최대 크기는 512MB 이다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;Lists (Array 형태로 key 1개에 n개의 값을 가짐, 중복 값 가능)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– 배열이라고 생각해도 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;– 한 key에 넣을 수 있는 요소의 최대 개수는 4,294,967,295 개이다.&lt;/p&gt;&lt;p&gt;– 데이터 형의 값은 설정파일에서 정해준 조건보다 큰 경우 linkedlist 아니면 ziplist로 encoding 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Sets (Group 형태로 key 1개에 n개의 중복되지 않는 값을 가짐)&lt;/p&gt;&lt;p&gt;– 정렬되지 않은 집합형으로 key에 중복된 데이터는 존재하지 않는다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– 추가, 제거 및 존재 체크 시 소모되는 시간이, sets에 포함된 요소의 수와 관계없이 일정하다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– 한 key에 넣을 수 있는 요소의 최대 개수는 4,294,967,295 개이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– 데이터 형의 값은 설정파일에 정해준 조건보다 큰 경우 hashtable 아니면 intset으로 encoding 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;Sorted sets (Group 형태이나 각 member에 score 값을 가짐, key-member-score)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– Sorted sets는 가장 진보한 Redis 데이터 형이라고 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;– 요소의 추가, 제거, 업데이트는 매우 빠른 방법으로 진행되는데 이는 “요소의 개수의 로그”에 비례하는&amp;nbsp;&lt;span style=&quot;line-height: 1.5;&quot;&gt;시간이 사용된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;– 랭킹 시스템 등에서 사용되기 좋다.&lt;/p&gt;&lt;p&gt;– sets의 각 요소마다 score라는 실수 값을 가지고 있는 형태로 score 값으로 오름차순 정렬된다.&lt;/p&gt;&lt;p&gt;– key에 중복된 데이터는 존재하지 않지만 score 값은 중복 가능하다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;Hashes (Object 형태의 key-field-value)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– list와 비슷한데 “필드명”, “필드값”의 연속으로 이루어져 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– 한 key에 포함할 수 있는 field-value 쌍의 최대 개수는 4,294, 967,295 개이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;line-height: 1.5;&quot;&gt;– 데이터 형의 값은 설정파일에서 정해준 조건보다 큰 경우는 hashtable 아니면 zipmap으로 encoding 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;redis 의 키 밸류 형태의 데이타베이스 이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;밸류에 공백이 없다면 ” ” 로 묶지 않어도 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>서버 프로그래밍</category>
<author>GENESIS8</author>
<guid>https://genesis8.tistory.com/189</guid>
<comments>https://genesis8.tistory.com/189#entry189comment</comments>
<pubDate>Thu, 21 Jan 2016 14:43:01 +0900</pubDate>
</item>
</channel>
</rss>