<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Incredible.AI</title>
    <description>Artificial Intelligence and BigData</description>
    <link>http://incredible.ai/</link>
    <atom:link href="http://incredible.ai/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 18 Apr 2019 01:31:49 +0000</pubDate>
    <lastBuildDate>Thu, 18 Apr 2019 01:31:49 +0000</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>GeoHash, GeoPandas and Folium</title>
        <description>&lt;header&gt;
    &lt;img src=&quot;/assets/images/geohash-wallpaper.jpeg&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;
    &lt;div style=&quot;text-align:right;&quot;&gt;
    &lt;a style=&quot;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&quot; href=&quot;https://unsplash.com/@drewmark?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; title=&quot;Download free do whatever you want high-resolution photos from Andrew Stutesman&quot;&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:12px;width:auto;position:relative;vertical-align:middle;top:-2px;fill:white&quot; viewBox=&quot;0 0 32 32&quot;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&quot;M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;Andrew Stutesman&lt;/span&gt;&lt;/a&gt; 
    &lt;/div&gt;
&lt;/header&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;h2 id=&quot;latitude-and-longitude&quot;&gt;Latitude and Longitude&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Latitude는 y축으로 생각하면 되고, 가장 최극단에 북극점, 남극점이 존재합니다.&lt;/strong&gt;&lt;br /&gt;
이론상 가장 남쪽은 -90이 나오고, 지구의 중간(equator 적도)은 0, 그리고 가장 북쪽은 90까지 나올수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Longitude는 x축으로 생각하면 되고, 영국 그리니치 천문대가 대략 0에서 시작해서, 지도상 오른쪽으로 갈수록 longitude의 값을 올라갑니다.&lt;/strong&gt;
그리니치 천문대를 중심으로 왼쪽으로 가면 음수가 잡히고, 오른쪽으로 가면 양수가 잡힙니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Latitude range: -90 to 90&lt;/li&gt;
  &lt;li&gt;Longitude range: -180 to 180&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/geohash-lat-lng.jpg&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;geohash-legnth&quot;&gt;GeoHash Legnth&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;GeoHash Length&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Area Width&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Area Height&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5,009.4km&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4,992.6km&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1,252.3km&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;624.1km&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;156.5km&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;156km&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;39.1km&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;19.5km&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4.9km&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4.9km&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.2km&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;609.4m&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;152.9m&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;152.4m&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;38.2m&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;19m&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4.8m&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4.8m&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.2m&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;59.5cm&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14.9cm&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;14.9cm&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;12&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3.7cm&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1.9cm&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;geojson&quot;&gt;GeoJSON&lt;/h2&gt;

&lt;p&gt;예를 들어 아래와 같은 형태를 갖습니다.&lt;br /&gt;
Python에서는 두가지 방법이 있는데, GeoJSON형태를 만들어서 사용하든지 또는 GeoPandas를 사용합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;FeatureCollection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Alabama&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Polygon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;87.359296&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;35.00118&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Alaska&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;AK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Feature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;geometry&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MultiPolygon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[[[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;131.602021&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;55.117982&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]]]&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;geohash-library-getting-started&quot;&gt;GeoHash Library Getting Started&lt;/h1&gt;

&lt;h2 id=&quot;converting&quot;&gt;Converting&lt;/h2&gt;

&lt;p&gt;Latitude 그리고 Longitude를 알고 있다면 geohash.encode(lat, lng, precision) 을 사용해서 geohash로 변환 가능 합니다.&lt;br /&gt;
반대로 geohash.decode() 함수를 사용해서 해당 geohash의 latitude 그리고 longitude를 알아낼 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;geohash&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.497868971527424&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.0276489936216&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 강남 Lat, Lng&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gangnam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;decoded_location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gangnam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# gangnam = 'wydm6'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lat, Lng        :'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'강남 geohash     :'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gangnam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Decoded Location:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decoded_location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Lat, Lng        : 37.497868971527424 127.0276489936216
강남 geohash     : wydm6
Decoded Location: 37.50732421875 127.02392578125&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;decode_exactly-function&quot;&gt;decode_exactly function&lt;/h2&gt;

&lt;p&gt;더 자세한 정보가 필요시 decode_exactly 함수를 사용합니다.&lt;br /&gt;
이때 return값은 &lt;strong&gt;(latitude, longitude, latitude error margin, longitude error margin)&lt;/strong&gt; 입니다&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode_exactly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'wydm6'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.50732421875, 127.02392578125, 0.02197265625, 0.02197265625&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;neighbors&quot;&gt;Neighbors&lt;/h2&gt;

&lt;p&gt;GeoHash의 주변을 검색할 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gangnam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'wydm3'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydm7'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydm4'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydm1'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydm5'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydmd'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydm9'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'wydme'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;visualization-with-folium&quot;&gt;Visualization with Folium&lt;/h1&gt;

&lt;h2 id=&quot;choropleth&quot;&gt;Choropleth&lt;/h2&gt;

&lt;p&gt;geo_data 와 data 두개를 연결시켜줘야 합니다. &lt;br /&gt;
geo_data에는 &lt;strong&gt;geometry&lt;/strong&gt; 정보가 있어서 여기서 polygon인지 point인지 위치 정보가 들어 있습니다.&lt;br /&gt;
데이터에는 지도상에 색상으로 정보를 보여주기 위한 어떤 값이 존재하게 됩니다.&lt;br /&gt;
두개의 데이터를 연결시키기 위해서 SQL의 join처럼 어떤 값을 기준으로 위치 정보와 값이 연결이 되게 되는데 &lt;strong&gt;key_on&lt;/strong&gt; 값에서 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;아래 GeoPandas DataFrame의 에서 geohash를 key_on값으로 사용했습니다. &lt;br /&gt;
당연히 data로 사용되는 데이터에도 join으로 사용할 geohash column이 존재해야 합니다.&lt;/p&gt;

&lt;p&gt;key_on=’feature.properties.geohash’ 이렇게 사용한 이유는 Pandas DataFrame을 json으로 바꾸면.. GeoJson으로 변환이 됩니다.&lt;br /&gt;
보면 feature 안에 properties 안에 geohash가 존재하는것을 볼 수 있습니다. &lt;br /&gt;
이 값을 사용한다는 뜻으로 feature.properties.geohash를 명시하였습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;folium&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;polygon_geohasher.polygon_geohasher&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geohash_to_polygon&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.49786897152&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.02764899362&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.50732421875&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;126.97998046875&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.50732421875&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.06787109375&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.46337890625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.02392578125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.46337890625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;126.97998046875&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.46337890625&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.06787109375&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.55126953125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.02392578125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.55126953125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;126.97998046875&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.55126953125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.06787109375&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Create Geo Pandas DataFrame&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gpd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GeoDataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'location'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'geohash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'location'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geohash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'geometry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'geohash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geohash_to_polygon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'init'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'epsg:4326'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'features.properties.geohash &amp;lt;- 요걸로 매핑함'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'features'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;features.properties.geohash &amp;lt;- 요걸로 매핑함

&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;,
 &lt;span class=&quot;s1&quot;&gt;'type'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Feature'&lt;/span&gt;,
 &lt;span class=&quot;s1&quot;&gt;'properties'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'location'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;37.49786897152, 127.02764899362],
  &lt;span class=&quot;s1&quot;&gt;'value'&lt;/span&gt;: 0.14382200834259584,
  &lt;span class=&quot;s1&quot;&gt;'geohash'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'wydm6'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
 &lt;span class=&quot;s1&quot;&gt;'geometry'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'type'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Polygon'&lt;/span&gt;,
  &lt;span class=&quot;s1&quot;&gt;'coordinates'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[[[&lt;/span&gt;127.001953125, 37.4853515625],
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;127.0458984375, 37.4853515625],
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;127.0458984375, 37.529296875],
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;127.001953125, 37.529296875],
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;127.001953125, 37.4853515625]]]&lt;span class=&quot;o&quot;&gt;}}&lt;/span&gt;
    
   location                           value     geohash                                      geometry
&lt;span class=&quot;nt&quot;&gt;--------------------------------------------------------------------------------------------------------&lt;/span&gt;
0  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.49786897152, 127.02764899362&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  0.143822  wydm6  POLYGON &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;127.001953125 37.4853515625, 127.045...
1  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.50732421875, 126.97998046875&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  0.183472  wydm3  POLYGON &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;126.9580078125 37.4853515625, 127.00...
2  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.50732421875, 127.06787109375&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  0.654764  wydm7  POLYGON &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;127.0458984375 37.4853515625, 127.08...
3  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.46337890625, 127.02392578125&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  0.076692  wydm4  POLYGON &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;127.001953125 37.44140625, 127.04589...
4  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;37.46337890625, 126.97998046875&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  0.274943  wydm1  POLYGON &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;126.9580078125 37.44140625, 127.0019...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.497868971527424&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.0276489936216&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 강남 Lat, Lng&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoom_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;folium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Choropleth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geo_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'choropleth'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'geohash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;key_on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'feature.properties.geohash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;fill_color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'YlGn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;fill_opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;line_opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;legend_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'asdf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/geohash-choropleth.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;geojson-1&quot;&gt;GeoJson&lt;/h2&gt;

&lt;p&gt;원래는 GeoJSON object(python dictionary)가 들어가야 하는데, 그냥 GeoPandas의 GeoDataFrame넣어도 돌아갑니다. &lt;br /&gt;
Choropleth 에서는 안되는 style_function을 통해서 마음대로 스타일링이 가능합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_style_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'properties'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'kmean_label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set1_09&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'black'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;fillOpacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'kmean_label'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.497868971527424&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.0276489936216&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 강남 Lat, Lng&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoom_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;folium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GeoJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;style_function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_style_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/geohash-geojson.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;webbrowser&quot;&gt;WebBrowser&lt;/h2&gt;

&lt;p&gt;지도를 HTML파일 형태로 저장한 다음에, 웹브라우져에서도 확인할 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;webbrowser&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'map.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;webbrowser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'map.html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;color-maps&quot;&gt;Color Maps&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;branca.colormap&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StepColormap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'yellow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'step'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LinearColormap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'green'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'yellow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vmin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accent_03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Accent_08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Blues_03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/geohash-colormap.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tiles&quot;&gt;Tiles&lt;/h2&gt;

&lt;p&gt;Folium은 다음의 tiles들을 사용 가능합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;openstreetmap (기본값)&lt;/li&gt;
  &lt;li&gt;Stamen Toner  (블랙 &amp;amp; 화이트)&lt;/li&gt;
  &lt;li&gt;cartodbdark_matter (블랙)&lt;/li&gt;
  &lt;li&gt;stamenwatercolor (주황색)&lt;/li&gt;
  &lt;li&gt;Mapbox Bright (밝은 바닐라 크림색 - 거의 흰색)&lt;/li&gt;
  &lt;li&gt;cartodbpositron (밝은 회색빛.. 화얀색)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;타일 변경시 두가지 방법으로 변경 가능합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;m = folium.Map((37.5387343, 127.07511967), tiles='Stamen Toner')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;또는&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;folium.TileLayer('Stamen Toner').add_to(m)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;37.53873434027448&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;127.07511967328423&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cartodbpositron'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# folium.TileLayer('Stamen Toner').add_to(m)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/geohash-tiles.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Mar 2019 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/code-snippet/2019/03/16/GeoHash-And-GeoPandas/</link>
        <guid isPermaLink="true">http://incredible.ai/code-snippet/2019/03/16/GeoHash-And-GeoPandas/</guid>
        
        <category>folium</category>
        
        <category>geohash</category>
        
        <category>latitude</category>
        
        <category>longitude</category>
        
        
        <category>code-snippet</category>
        
      </item>
    
      <item>
        <title>Monte Carlo Tree Search</title>
        <description>&lt;header&gt;
    &lt;img src=&quot;/assets/images/mcts01.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;
    &lt;div style=&quot;text-align:right;&quot;&gt;
     Monte Carlo Tree Search
    &lt;/div&gt;
&lt;/header&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;알파제로를 설명하기 위한 기초단계로서 Monte Carlo Tree Search를 소개합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tictactoe.gif&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 게임은 Tic Tac Toe 게임으로서 인간 VS 컴퓨터와의 대결을 보여줍니다. &lt;br /&gt;
결론만 말하면, 이 게임에서 둘다 잘한다면 누구도 이길수 없게 됩니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Monte Carlo Tree Search (이하 MCTS)를 사용하면 multi-stage 환경 (턴제 게임같은..)에서 Markov Decision Process같은
모델을 만들 수 있습니다.
가장 중요한 핵심은 Multi-Armed Badit 문제처럼, exploration과 exploitation을 잘 활용해야 하는데, 이 문제를 MCTS를 사용해서 
해결이 가능합니다.&lt;/p&gt;

&lt;h1 id=&quot;steps-of-mcts&quot;&gt;Steps of MCTS&lt;/h1&gt;

&lt;h2 id=&quot;selection&quot;&gt;Selection&lt;/h2&gt;

&lt;p&gt;Root node에서 시작을 해서 child node를 타고 타고 내려가기 시작합니다. &lt;br /&gt;
타고 타고 내려가다가 &lt;strong&gt;트리의 끝인 leaf node에 도착하게 되면 selection은 멈추게 됩니다&lt;/strong&gt;. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;트리를 traversal할때 중요한 2가지 항목을 만족시켜야 합니다.&lt;br /&gt;
첫번재는 exploration으로서 아직 가보지 않은 길을 감으로서 새로운 정보를 얻습니다.&lt;br /&gt;
두번째는 exploitation으로서 기존의 정보를 이용하여 좋은 길(child node)을 선택하는 것입니다. &lt;br /&gt;
따라서 selection function은 이 두가지 exploration과 exploitation을 최적으로 만족시키는 방식을 취해야 합니다.&lt;/p&gt;

&lt;p&gt;이때 사용하는 방식이 바로 UCB1(Upper Confidence Bound 1)이라는 함수인데, &lt;br /&gt;
이 함수가 MCTS와 함께 사용된 알고리즘이 바로 UCT (Upper Confidence Bound 1 applied to Trees)라는 함수 입니다.&lt;br /&gt;
공식은 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathbb{UCT}(w_i, n_i) = \frac{w_i}{n_i} + c \sqrt{ \frac{\ln t}{ n_i}}&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\frac{w_i}{n_i}&lt;/script&gt;: &lt;strong&gt;exploitation component&lt;/strong&gt;라고 하며, winning/losing 의 비율&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;w_i&lt;/script&gt;: i번째 &lt;strong&gt;자식 노드의 이긴 횟수&lt;/strong&gt; (number of wins)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;n_i&lt;/script&gt;: i번째 &lt;strong&gt;자식 노드의 방문 횟수&lt;/strong&gt; 또는 시뮬레이션 횟수 (number of simulations)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\sqrt{ \frac{\ln t}{ n_i}}&lt;/script&gt;: &lt;strong&gt;exploration component&lt;/strong&gt;라고 하며, exploitation component만 사용하게 되면 오직 simulation에서 이겼던 기록이 있는 노들만 따라가기 때문에 생겨나는 문제를 해결.&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;: &lt;strong&gt;부모(현재) 노드의 방문 회수 또는 시뮬레이션 횟수&lt;/strong&gt; (number of simulations for the parent node)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;c&lt;/script&gt;: &lt;strong&gt;exploration component&lt;/strong&gt;의 가중치로 생각하면 되며 보통 &lt;script type=&quot;math/tex&quot;&gt;\sqrt{2}&lt;/script&gt; 를 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;UCT를 사용하지 않고 단순 랜덤으로 선택을 할 경우 exploration에는 매우 좋지만, 기존의 정보를 활용하는 exploitation에는 매우 안 좋습니다.
또한 각각의 node마다의 평균 승률을 사용하는 방법은 exploitation에 좋지만, exploration에는 좋은 방법이 아닙니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;exploration component의 직관적인 이해는 &lt;code class=&quot;highlighter-rouge&quot;&gt;방문이 상대적으로 적은 노드&lt;/code&gt;를 선택하도록 유도를 하게 됩니다.&lt;br /&gt;
예를 들어서 아래의 경우 현재 노드 (부모 노드)의 방문 t=5000 일때, 자식노드의 방문횟수에 따른 그래프는 다음과 같습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;exploration_component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exploration_component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lineplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'parent visit count. t=500'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'child visit count'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'exploration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mcts02.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;즉 매우 드물게 방문한 노드(액션)일수록 선택할 확률값이 올라가게 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;expansion&quot;&gt;Expansion&lt;/h2&gt;

&lt;p&gt;Selection에 leaf node에 도착해서 멈추게 되면, 최소한 한개의 가보지 않은 move (또는 action)이 있을 것 입니다.&lt;br /&gt;
이때는 그냥 랜덤으로 unexpanded move를 선택하고 새로운 child node를 생성합니다. &lt;br /&gt;
해당 child node는 selection phase에서 중단된 마지막 leaf node에 자식노드로 연결을 시킵니다. &lt;br /&gt;
child node의 초기화 세팅은 승률은 &lt;script type=&quot;math/tex&quot;&gt;w_i = 0&lt;/script&gt;, 그리고 방문 횟수는 &lt;script type=&quot;math/tex&quot;&gt;n_i = 0&lt;/script&gt; 으로 초기화 시킵니다.&lt;/p&gt;

&lt;p&gt;구현상의 중요 포인트는, expansion시에 모든 action (또는 move)에 대해서 한꺼번에 만들어줄 필요는 없습니다. &lt;br /&gt;
expansion마다 하나의 child node를 만들어주는게 효율적입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mcts03.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;simulation&quot;&gt;Simulation&lt;/h2&gt;

&lt;p&gt;자~ expansion phase에서 새롭게 만들어진 자식노드에서 계속 진행하겠습니다. &lt;br /&gt;
정말 쉽게 설명하기 위해서 엔지니어적으로 설명하면.. 현재 상태의 트리를 하나 더 복사합니다. &lt;br /&gt;
그리고 selection 그리고 expansion을 전에 새롭게 만들어진 자식 노드에서 k번 반복시킵니다. &lt;br /&gt; 
즉.. 랜덤으로 하나 move를 선택하고 다시 expansion하고 또 랜덤으로 하나 move를 선택하고 다시 expansion하고.. &lt;br /&gt;
이 과정을 복사된 트리에서 진행을 합니다. (즉 원본 트리는 변경된 내용이 전혀 없습니다)&lt;br /&gt;
또한 그 과정은 게임을 끝날때까지 k번 반복 시킵니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;문제만다 다르기는 하지만.. 일반적으로 빠르게 학습시키기 위해서 k=1 로 설정을 하기도 합니다. &lt;br /&gt;
다만 예측률을 극도로 높이고 할때는 k를 높이면 되고, 실제 AlphaGo의 경우 한번의 simulation마다 k=1600 으로 하기도 했으며, AlphaZero의 경우 k=800으로 했다고 페이퍼에서 말하고 있습니다. (Paper: “During training, each MCTS used 800 simulations”)&lt;br /&gt;
또한 simulation 자체가 극단적으로 큰 computation power를 요구하기 때문에 엔지니어링적으로 효율적으로 돌릴수 있도록 멀티쓰레드 또는 distributed computation을 적극적으로 활용해야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mcts04.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;backpropagation&quot;&gt;Backpropagation&lt;/h2&gt;

&lt;p&gt;Simulation phase가 k번 돌고 완료된 후, selection에서 중단된 leaf node의 부모노드 -&amp;gt; 부모노드 -&amp;gt; 부모노드 계속 타고 가면서 업데이트를 시켜줍니다. 자! 무엇을 업데이트 시키냐하면.. 방문 횟수 &lt;script type=&quot;math/tex&quot;&gt;n_i = k&lt;/script&gt; (simulation돌린만큼 방문횟수를 증가시킴) 그리고 이긴 횟수를 증가시켜야 되는데.. 여기서 좀 복잡합니다.&lt;/p&gt;

&lt;p&gt;아래 그래프에서 보면, Blue가 이겼습니다.&lt;br /&gt;
방문횟수는 backprogagation을 하면서 모든 parent nodes를 k simulation만큼 증가 시켜주었는데, &lt;br /&gt;
이긴 횟수는 red쪽이 증가 되었습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;상식적으로는 blue가 이겼으니까, blue node의 이긴 횟수가 증가되어야 할거 같지만, &lt;br /&gt; 
예를 들어 Blue node에 있을때, 어떤 자식 노드들(Red)를 선택해야지 Blue가 이길확률이 높일지를 생각해봤을때.. &lt;br /&gt;
Blue의 자식노드들인 Red에다가 이긴 횟수를 증가시켜주는 것이 맞습니다.&lt;/p&gt;

&lt;p&gt;UCT공식을 생각하면 당연한 것이 되죠.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mcts05.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;in-practice&quot;&gt;In Practice&lt;/h2&gt;

&lt;p&gt;실제 MCTS를 구현하는 방식에는 많은 방법들이 존재합니다.&lt;br /&gt;
몇가지 구현방법을 소개하면 다음과 같습니다.&lt;/p&gt;

&lt;h4 id=&quot;1-그래프-구조로-구현&quot;&gt;1. 그래프 구조로 구현&lt;/h4&gt;

&lt;p&gt;그래프 구조로 구현한다는 뜻은 뭐 특별한 것이 아니라 Dictionary (Hash Table)을 사용해서 구현을 합니다.&lt;br /&gt;
이때 key값은 state값이 들어가고, value값에는 children과 action이 함께 가져가는 구조입니다. &lt;br /&gt;
예를 들어서 다음과 같습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;nodes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
         &lt;span class=&quot;n&quot;&gt;state2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;state3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;2-simulation-제거&quot;&gt;2. Simulation 제거&lt;/h4&gt;

&lt;p&gt;꼭 페이퍼에서 말하는대로 할 필요는 없습니다. &lt;br /&gt;
핵심은 UCT 함수를 통해서 exploration과 exploitation을 잘 한다는 것이고, 게임 한번 쭉 돌고 마지막에 한번 backpropagtion을 하는 것도 방법입니다. 이렇게 해주면 simulation이 없어지기 때문에 학습의 속도가 빨라지게 됩니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Simulation이 도는 조건은 구현마다 다를 수 있습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Leaf node에 도착하게 되면 expasion후 k번 simulation돌려서 그 결과값을 backpropagation한다 -&amp;gt; 원래 방법&lt;/li&gt;
  &lt;li&gt;selection할때 leaf node까지 가는게 아니라, next state로 넘어갈때마다 simulation을 해준다 -&amp;gt; 비효율적&lt;/li&gt;
  &lt;li&gt;Simulation을 제거해버리고, backpropagation은 게임이 끝난 마지막에 한다 -&amp;gt; 실용적&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 10 Feb 2019 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/machine-learning/2019/02/10/MonteCarlo-Tree-Search/</link>
        <guid isPermaLink="true">http://incredible.ai/machine-learning/2019/02/10/MonteCarlo-Tree-Search/</guid>
        
        <category>mcts</category>
        
        <category>taxi</category>
        
        <category>tictactoe</category>
        
        <category>tic-tac-toe</category>
        
        <category>othello</category>
        
        <category>alphazero</category>
        
        <category>alphago</category>
        
        
        <category>machine-learning</category>
        
      </item>
    
      <item>
        <title>Unity3D on Ubuntu</title>
        <description>&lt;h1 id=&quot;installation-on-ubuntu&quot;&gt;Installation on Ubuntu&lt;/h1&gt;

&lt;h2 id=&quot;dependencies&quot;&gt;Dependencies&lt;/h2&gt;

&lt;p&gt;먼저 dependencies 를 설치를 해줍니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt install libgtk2.0-0 libsoup2.4-1 libarchive13 libpng16-16 libgconf-2-4 lib32stdc++6 libcanberra-gtk-module
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install mono-devel&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;install-unity3d&quot;&gt;Install Unity3D&lt;/h2&gt;

&lt;p&gt;아래 주소에서 Linux에서 배포된 Unity3D를 다운로드 받고 설치를 합니다.&lt;br /&gt;
마지막 포스트를 찾고, Unity Hub for Linux를 다운로드 받습니다.&lt;/p&gt;

&lt;p&gt;원본 포스트는 아래의 링크를 참고 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forum.unity.com/threads/unity-on-linux-release-notes-and-known-issues.350256/&quot;&gt;https://forum.unity.com/threads/unity-on-linux-release-notes-and-known-issues.350256/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unity Hub는 아래의 링크를 클릭 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://forum.unity.com/threads/unity-hub-v-1-3-2-is-now-available.594139/&quot;&gt;https://forum.unity.com/threads/unity-hub-v-1-3-2-is-now-available.594139/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;chmod +x UnityHubSetup.AppImage&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;executable로 만들어준후, &lt;strong&gt;마우스로 더블 클릭&lt;/strong&gt;해서 실행합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity3d-01.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;License 선택시 personal로 합니다.  (Plus 또는 Pro 선택시 돈 나감..)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity3d-02.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치되고 있는 화면의 모습&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity3d-03.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;설치 완료후 Unity Hub를 실행시킵니다.&lt;/p&gt;

&lt;p&gt;아래의 이미지는 설치 완료후 Unity3D에서 제공하는 튜토리얼을 실행시킨 모습입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity3d-04.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/unity3d-05.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Jan 2019 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/unity3d/2019/01/12/Unity3d_On_Ubuntu/</link>
        <guid isPermaLink="true">http://incredible.ai/unity3d/2019/01/12/Unity3d_On_Ubuntu/</guid>
        
        <category>Mono</category>
        
        
        <category>unity3d</category>
        
      </item>
    
      <item>
        <title>Decision Tree</title>
        <description>&lt;header&gt;
    &lt;img src=&quot;/assets/images/decision-tree-wallpaper.jpg&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;
    &lt;div style=&quot;text-align:right;&quot;&gt;
    &lt;a style=&quot;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&quot; href=&quot;https://unsplash.com/@jluebke?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; title=&quot;Download free do whatever you want high-resolution photos from Justin Luebke&quot;&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&quot; viewBox=&quot;0 0 32 32&quot;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&quot;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;Justin Luebke&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/header&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;먼저 decision tree를 이해하기 위해서는 먼저 제가 지난번 포스트한 entropy를 이해해야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://incredible.ai/machine-learning/2018/11/08/Entropy/&quot;&gt;http://incredible.ai/machine-learning/2018/11/08/Entropy/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Decision tree를 출근이라는 주제로 예를 든다면 다음과 같을 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;graphviz&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graph&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IPython.display&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'node'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'box'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'주말인가?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'쉰다'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'주말인가?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'몸상태'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'no'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'몸상태'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'병원'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'감기'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'몸상태'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'오전반차'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'술병'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'몸상태'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'온도'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'건강'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'온도'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'자동차 출근'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'온도 &amp;lt; 0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'온도'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'지하철 출근'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'온도 &amp;lt; 15'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'온도'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'자전거 출근'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'온도 &amp;gt;= 15'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-example.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Decision tree 이용하면, 예를 들어서 개발자가 if문등을 사용해서 룰을 만드는 부분을 스스로 룰을 만들고 결정을 내리게 됩니다. 위의 경우 decision tree를 사용해서 classification을 했으며, child nodes가 3개가 나오는 경우가 있는데, 실제 알고리즘에서는 child nodes를 2개만 갖는 binary decision tree를 주로 사용하게 됩니다.&lt;/p&gt;

&lt;h1 id=&quot;decision-tree-algorithms&quot;&gt;Decision Tree Algorithms&lt;/h1&gt;

&lt;h2 id=&quot;id3-iterative-dichotomizer-3&quot;&gt;ID3 (Iterative Dichotomizer 3)&lt;/h2&gt;

&lt;p&gt;Iterative Dichotomizer 3는 1986년에 Ross Quinlan 에 의해서 개발 되었습니다.&lt;br /&gt;
특징은 top down 방식으로 트리구조를 생성하며, 각각의 node에서 information gain을 최대치로 올리며, entropy값을 낮추는 기준으로 feature를 나누게 됩니다.&lt;br /&gt;
Recursive 방식으로 feature가 homogeneous해질때까지 (하나의 분류로 나뉘게 될때까지, 즉 entropy값이 0이 됨) 트리를 생성합니다.&lt;br /&gt;
Greedy Search방식을 사용하며 Shannon Entropy를 사용하고, multi-way tree를 생성합니다.&lt;/p&gt;

&lt;p&gt;단점은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;데이터가 적을시 over-fitting 또는 over-classified 문제가 있음&lt;/li&gt;
  &lt;li&gt;오직 한가지 속성(attribute 또는 feature)만 사용하여 decision을 내림&lt;/li&gt;
  &lt;li&gt;numerical value 또는 missing value 를 처리하지 못함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;c45&quot;&gt;C4.5&lt;/h2&gt;

&lt;p&gt;ID3 의 업그레이드 버젼이라고 생각하면 되고 Quinlan에 의해서 개발되었습니다.&lt;br /&gt;
차이는 continuous 그리고 discrete features를 다룰수 있으며, buttom-up technique (보통 prunning 기법이라고함)를 사용해서 over-fitting 문제를 해결합니다.
Splitting criteria로 Gain Ratio를 사용합니다.&lt;/p&gt;

&lt;p&gt;단점은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C4.5는 0으로 떨어지는 empty brach를 생성합니다.&lt;/li&gt;
  &lt;li&gt;비정상적인 특성을 갖은 데이터를 선택해서 over fitting이 일어날수 있습니다. (데이터가 noisy하다면 일어남)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;c50&quot;&gt;C5.0&lt;/h2&gt;

&lt;p&gt;Quinlan의 가장 최근 알고리즘이지만, 저작권이 걸려 있으므로 대부분의 open source packages에서는 사용할 수 없습니다. &lt;br /&gt;
뭐 빠르다고 하는데 굳이.. 뭐…&lt;/p&gt;

&lt;h2 id=&quot;cart--classification-and-regression-trees&quot;&gt;CART  (Classification and Regression Trees)&lt;/h2&gt;

&lt;p&gt;특징은 ID3와 다르게 Binary tree를 사용해서 효율화를 하였으며, Twoing Criteria를 사용하며 cost-complexity Prunning 을 사용합니다.&lt;br /&gt;
numerical 그리고 categorical 데이터 모두 다룰수 있으며, outlier에도 강합니다.&lt;br /&gt;
Gini Impurity, Symgini, Twoing, Ordered Twoing 등등 여러가지 splitting criteria 가 사용될 수 있습니다. &lt;br /&gt;
일반적으로 Gini Impurity를 기본적으로 사용하지만, 클래스가 많을 경우 Twoing이 좋습니다.&lt;/p&gt;

&lt;p&gt;단점은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;오직 한가지 변수를 기준으로 split합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;

&lt;p&gt;일반적으로 CART가 대중적으로 많이 사용되는 알고리즘이며, 엔지니어링 적으로도 entropy 대신에 gini impurity를 사용하며 binary tree를 채택함으로서 효율적으로 빠릅니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Model&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Splitting Criteria&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Attribute&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Prunning Strategy&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Outlier Detection&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ID3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Information Gain&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;only categorical data&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;None&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Outlier에 약함&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;C4.5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Gain Ratio&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Both categorical and numerical data&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Error based Prunning&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Outlier에 약함&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;CART&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Gini Impurity or Twoing 등등 여러가지&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Both categorical and numerical data&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Cost-complexity Prunning&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Outlier에 강함&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;splitting-criteria&quot;&gt;Splitting Criteria&lt;/h1&gt;

&lt;h2 id=&quot;information-gain&quot;&gt;Information Gain&lt;/h2&gt;

&lt;p&gt;Decision Tree에서 &lt;strong&gt;maximize&lt;/strong&gt;해야될 objective function 으로서, &lt;strong&gt;특정 노드에서 어떤 feature를 갖고서 나눌지를 결정합니다&lt;/strong&gt;.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;IG(D_p, f) = I(D_p) - \sum^c_{j=1} \frac{N_j}{N_p} I(D_j)&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;IG(D_p, f)&lt;/script&gt; : Information Gain 함수로서 maximize해야 됨&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;D_p&lt;/script&gt; : 부모 노드의 Dataset&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;D_j&lt;/script&gt; : 자식 노드의 Dataset&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;f&lt;/script&gt; : 나누려는 feature&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;I&lt;/script&gt; : Impurity measure&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_p&lt;/script&gt; : 부모노드의 전체 샘플 갯수&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_j&lt;/script&gt; : 자식노드의 전체 샘플 갯수&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위의 공식에서 보듯이, Information Gain이란 &lt;em&gt;(부모 노드의 Impurity)&lt;/em&gt;와 &lt;em&gt;(자식노드 Impurity의 합)&lt;/em&gt;의 차이입니다. &lt;br /&gt;
&lt;strong&gt;자식노드의 impurity가 낮을수록, Information Gain의 값은 높아집니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;하지만 대부분 검색효율화를 위해서 Binary Decision Tree를 주로 사용합니다. (2개의 자식노드만을 갖음)&lt;br /&gt;
공식은 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;IG(D_p, f) = I(D_p) - \frac{N_{left}}{N_p} I(D_{left}) - \frac{ N_{right}}{N_p} I(D_{right})&lt;/script&gt;

&lt;h2 id=&quot;entropy-cross-entropy&quot;&gt;Entropy (Cross Entropy)&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;I_H(t) = E \left[ I(x) \right] = - E \left[ \log_2 p_i \right] = -\sum^c_{i=1} p_i \log_2 p_i&lt;/script&gt;

&lt;p&gt;모든 샘플들이 동일한 하나의 class로 분류된다면(homogeneous), entropy의 값은 0이 되며, &lt;br /&gt;
만약 샘플의 모든 클래스가 동일하게 나뉘어진다면, entropy값은 1이 됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고로 Scipy의 Decision Tree에서 entropy 는 &lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 를 사용합니다. &lt;br /&gt;
이유는 binary tree를 사용하기 때문. &lt;br /&gt;
하지만 Deep learning에서 cross entropy를 사용할때는 natural log를 사용합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 아래 연산에서는 2개의 클래스가 존재할때 cross entropy를 사용한 예제 입니다.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 2개의 클래스를 갖고 있기 때문에 일어날 확률 그리고 일어나지 않을 확률.. 즉 binary classification입니다.&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Entropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#BB003C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-entropy-graph.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gini-impurity&quot;&gt;Gini Impurity&lt;/h2&gt;

&lt;p&gt;Gini Impurity는 Entropy와 거의 동일하다고 보면 됩니다. &lt;br /&gt;
misclassification의 확률을 &lt;strong&gt;Minimize&lt;/strong&gt;하는것이 목표입니다.&lt;br /&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;I_G(t) = \sum^c_{i=1} p \cdot (1 - p_i) = 1 - \sum^c_{i=1} p_i^2&lt;/script&gt;

&lt;p&gt;Machine Learning계열의 알고리즘에서는 entropy 대신에 gini impurity를 사용합니다. &lt;br /&gt;
이유 logarithm 연산이 exponential 연산보다 더 많은 computation power를 요구하기 때문입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy-vs-gini.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;위의 이미지는 &lt;a href=&quot;https://cacm.acm.org/magazines/2017/1/211094-exponential-laws-of-computing-growth/abstract&quot;&gt;여기&lt;/a&gt;에서 가져왔습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gini&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gini&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Gini'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#BB003C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-gini-impurity-graph.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;classification-error&quot;&gt;Classification Error&lt;/h2&gt;

&lt;p&gt;실질적으로 위의 그래프에서처럼.. Gini Impurity 그리고 Entropy는 서로 유사한 형태의 그래프를 그리게 됩니다. &lt;br /&gt;
다른 결과를 내놓는 impurity measure방법으로는 classification error가 있습니다.&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;p_i = p(i|t)&lt;/script&gt; 라는 조건하에..&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;I_E(t) = 1 - max\left( p_i \right)&lt;/script&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;classification_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classification_error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Classification Error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#BB003C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-classification-error-graph.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-calculate-splitting-criteria&quot;&gt;How to Calculate Splitting Criteria&lt;/h1&gt;

&lt;p&gt;다음과 같은 시나리오 상황에서 Splitting 을 어떻게 하는지 알아보도록 하겠습니다.&lt;br /&gt;
y값에 해당하는 label은 ‘yes’ 또는 ‘no’ 두가지로 나뉘게 됩니다. &lt;br /&gt;
‘yes’는 총 4개가 존재하고, ‘no’ 또한 총 4개가 존재합니다.&lt;/p&gt;

&lt;p&gt;A와 B의 상황은 어떤 어떤 feature A 또는 feature B로 데이터를 나누었을때의 상황으로 보면 됩니다.&lt;br /&gt;
예를 들어서 A의 상황은 습도 40% 이상인지 아닌지로 left node, right node로 나누는 것으로 가정해볼수 있고, &lt;br /&gt;
B의 상황은 지하철 유동인구가 5000명 이상인지 아닌지로 left node, right node로 나누는 상황으로 가정해 볼 수 있습니다. &lt;br /&gt;
결론저긍로 습도로 나눌것이냐 지하철 유동인구로 나눌것인지 결정하게 되는 것입니다.&lt;/p&gt;

&lt;p&gt;A상황 그리고 B상황으로 나뉘게 되는데 이때 A가 좋은지 B가 좋은지 계산을 해보도록 하겠습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'G'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'node'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'box'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A 상황 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 습도 40&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;% &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;이상 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (4, 4)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'(3, 1)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'A 상황 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 습도 40&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;% &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;이상 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (4, 4)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'(1, 3)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'no'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B 상황 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 지하철 유동인구 5000명 이상 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (4, 4)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'(2, 4)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'yes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'B 상황 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; 지하철 유동인구 5000명 이상 &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; (4, 4)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'(2, 0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'no'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-how-to-calculate-graph.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;splitting-criteria-1&quot;&gt;Splitting Criteria&lt;/h2&gt;

&lt;p&gt;ID3의 경우는 Information Gain을 사용하여, Information Gain을 maximize 하는 것이 목표입니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;IG(D_p, f) = I(D_p) - \frac{N_{left}}{N_p} I(D_{left}) - \frac{ N_{right}}{N_p} I(D_{right})&lt;/script&gt;

&lt;p&gt;좀더 효율적인 방법으로 오직 자식 nodes들의 impurity 값의 합을 사용하는 방법입니다.&lt;br /&gt;
아래의 방법은 Scipy에서 Decision Tree를 사용시 사용하는 방법입니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align} G(D_p, f) &amp;= \frac{n_{left}}{N_m} I(D_{left}) + \frac{n_{right}}{N_m} I(D_{right})  \\
\theta^* &amp;= \operatorname{argmin}_\theta  G(Q, \theta)
\end{align} %]]&gt;&lt;/script&gt;

&lt;h3 id=&quot;entropy를-사용했을때-계산-방법&quot;&gt;Entropy를 사용했을때 계산 방법&lt;/h3&gt;

&lt;p&gt;엔트로피를 사용했을때는 &lt;strong&gt;B상황&lt;/strong&gt; (지하철 유동인구, IG = 0.3113) 를 사용하는 것이 A상황 (습도, IG = 0.1889)보다 더 좋다는 결론을 얻습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A상황&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
I_H(D_p) &amp;= - \left[ 0.5 \log_2(0.5) + 0.5 \log_2(0.5) \right] = 1 \\
I_H(D_{left}) &amp;= -\left[ \frac{3}{4} \log_2(\frac{3}{4}) + \frac{1}{4} \log_2(\frac{1}{4})  \right] = 0.8112 \\
I_H(D_{right}) &amp;= -\left[ \frac{1}{4} \log_2(\frac{1}{4}) + \frac{3}{4} \log_2(\frac{3}{4})  \right] = 0.8112 \\
IG_H &amp;= 1 - \frac{4}{8} 0.8112 -  \frac{4}{8} 0.8112 = 0.1889
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;B상황&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
I_H(D_{left}) &amp;= -\left[ \frac{2}{6} \log_2(\frac{2}{6}) + \frac{4}{6} \log_2(\frac{4}{6})  \right] = 0.9183 \\
I_H(D_{right}) &amp;= -\left[ \frac{2}{2} \log_2(\frac{2}{2}) + 0  \right] = 0. \\
IG_H &amp;= 1 - \frac{6}{8} 0.9183 -  \frac{2}{8} 0 = 0.3113
\end{align} %]]&gt;&lt;/script&gt;

&lt;h3 id=&quot;gini-impurity-사용시-계산-방법&quot;&gt;Gini Impurity 사용시 계산 방법&lt;/h3&gt;

&lt;p&gt;Gini Impurity를 사용했을때도 Entropy를 사용했을 때와 마찬가지로 &lt;strong&gt;B상황&lt;/strong&gt; (지하철 유동인구, IG=0.16666)을 사용하는 것이, A상황 (습도, IG=0.125) 보다 더 좋다는 결론을 얻습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A상황&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
I_H(D_p) &amp;= 1 - \left( 0.5^2 + 0.5^2 \right) = 0.5 \\
I_H(D_{left}) &amp;= 1 - \left[ \left(\frac{3}{4}\right)^2 + \left(\frac{1}{4}\right)^2 \right] = 0.375 \\
I_H(D_{right}) &amp;= 1 - \left[ \left(\frac{1}{4}\right)^2 + \left(\frac{3}{4}\right)^2 \right] = 0.375 \\
IG_H &amp;= 0.5 - \frac{4}{8} 0.375 -  \frac{4}{8} 0.375 = 0.125
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;B상황&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
I_H(D_{left}) &amp;= 1 - \left[ \left(\frac{2}{6}\right)^2 + \left(\frac{4}{6}\right)^2 \right] =  0.\bar{4} \\
I_H(D_{right}) &amp;= 1 - \left[ \left(\frac{2}{2}\right)^2 + 0^2 \right] =  0 \\
IG_H &amp;= 0.5 - \frac{6}{8} 0.\bar{4} -  \frac{2}{8} 0. = 0.1\bar{6}
\end{align} %]]&gt;&lt;/script&gt;

&lt;h1 id=&quot;tennis-example&quot;&gt;Tennis Example&lt;/h1&gt;

&lt;h2 id=&quot;preprocessing&quot;&gt;Preprocessing&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;tennis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tennis.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tennis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_dummies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tennis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'yes'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'humidity_high'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unstack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-tennis-data.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;model&quot;&gt;Model&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.tree&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DecisionTreeClassifier&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DecisionTreeClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'entropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;visualization&quot;&gt;Visualization&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.tree&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;export_graphviz&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.externals.six&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringIO&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IPython.display&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pydotplus&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;dot_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;export_graphviz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;filled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;special_characters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;feature_names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tolist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;class_names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'not play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pydotplus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph_from_dot_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getvalue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/decision-tree-tennis-visualization.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;explained&quot;&gt;Explained&lt;/h2&gt;

&lt;p&gt;첫번째 노드를 보면 outlook_overcast &amp;lt;= 0.5 로 나뉘는 것을 알 수 있습니다.&lt;br /&gt;
그 많은 features들 중에서 outlook_overcast가 선택이 되었을까요?&lt;/p&gt;

&lt;p&gt;Scikit Learn의 &lt;a href=&quot;https://scikit-learn.org/stable/modules/tree.html&quot;&gt;문서&lt;/a&gt;를 보면 다음과 같은 공식이 사용됩니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align} G(Q, \theta) &amp;= \frac{n_{left}}{N_m} H(Q_{left}(\theta)) + \frac{n_{right}}{N_m} H(Q_{right}(\theta))  \\
\theta^* &amp;= \operatorname{argmin}_\theta  G(Q, \theta)
\end{align} %]]&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_m&lt;/script&gt; : 해당 노드의 데이터 총 갯수&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_{left}&lt;/script&gt; : 왼쪽 노드의 데이터 총 갯수&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_{right}&lt;/script&gt; : 오른쪽 노드의 데이터 총 갯수&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; : Impurity functino으로서 entropy, gini, classification error 등등이 사용될수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;Q_{left}&lt;/script&gt; : outlook_overcast &amp;lt;= 0.5 처럼 어떤 기준에 의해서 나뉘었을때 왼쪽에 속한 데이터&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;Q_{right}&lt;/script&gt; : outlook_overcast &amp;lt;= 0.5 처럼 어떤 기준에 의해서 나뉘었을때 오른쪽에 속한 데이터&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\theta^*&lt;/script&gt; : 자식노드의 impurity값이 가장 낮은 feature를 선택한다는 뜻&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;한마디로 왼쪽 노드의 impurity 값과 오른쪽 노드의 impurity값을 합한뒤에 (normalization하고..) 가장 낮은 impurity를 나타내는 feature를 선택하는 것입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ID3 의 경우는 위의 공식대신에 Information Gain을 사용합니다.&lt;br /&gt;
사실 parent node의 impurity 값에서 자식 노드들의 impurity값을 빼는 부분이 다르고 매우 유사합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;display_splitting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n_yes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n_no&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_yes&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_yes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_no&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[Edge Node] n:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'n_yes:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'n_no:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;parent_impurity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_yes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Parent Impurity:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent_impurity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'n:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'yes:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'no:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;min_child_impurity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inf&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;childs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;thresholds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threshold&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thresholds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;child_n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;child_yes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;child_no&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_yes&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;child_impurity1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_yes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_yes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;child_impurity2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_no&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_no&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;child_impurity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_impurity1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_impurity2&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_impurity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min_child_impurity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;min_child_impurity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_impurity&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;childs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;threshold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[{0:16}] child impurity: {1:&amp;lt;4}(left) + {2:&amp;lt;4}(right) = {3}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                                                &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_impurity1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                                                &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_impurity2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                                                &lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_impurity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;childs&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[Root Node]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;display_splitting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[Left Node]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display_splitting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[right Node]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;display_splitting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'play'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[Root Node]
Parent Impurity: 0.9402859586706309 n: 14 yes: 9 no: 5
[windy           ] child impurity: 0.42(left) + 0.56(right) = 0.9852
[outlook_overcast] child impurity: 0.25(left) + 0.62(right) = 0.8631
[outlook_rainy   ] child impurity: 0.34(left) + 0.6 (right) = 0.9403
[outlook_sunny   ] child impurity: 0.34(left) + 0.6 (right) = 0.9403
[temp_cool       ] child impurity: 0.25(left) + 0.62(right) = 0.8631
[temp_hot        ] child impurity: 0.25(left) + 0.62(right) = 0.8631
[temp_mild       ] child impurity: 0.42(left) + 0.56(right) = 0.9852
[humidity_high   ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[humidity_normal ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[play            ] child impurity: 0.6 (left) + 0.34(right) = 0.9403

[Left Node]
Parent Impurity: 1.0 n: 10 yes: 5 no: 5
[windy           ] child impurity: 0.39(left) + 0.58(right) = 0.971
[outlook_rainy   ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[outlook_sunny   ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[temp_cool       ] child impurity: 0.26(left) + 0.62(right) = 0.8813
[temp_hot        ] child impurity: 0.14(left) + 0.58(right) = 0.7219
[temp_mild       ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[humidity_high   ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[humidity_normal ] child impurity: 0.5 (left) + 0.5 (right) = 1.0
[play            ] child impurity: 0.5 (left) + 0.5 (right) = 1.0

[right Node]
[Edge Node] n: 4 n_yes: 4 n_no: 0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;자식 노드들의 impurity값을 합쳤을때 가장 낮은 feature를 선택하는 것입니다. &lt;br /&gt;
가장 낮은 feature는 outlook_overcast, temp_cool, temp_hot 인데 일단 이 셋중에 outlook_overcast가 가장 먼저 나온값이기 때문에 선택이 되었습니다.&lt;/p&gt;

</description>
        <pubDate>Thu, 22 Nov 2018 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/machine-learning/2018/11/22/Decision-Tree/</link>
        <guid isPermaLink="true">http://incredible.ai/machine-learning/2018/11/22/Decision-Tree/</guid>
        
        <category>Shannon Entropy</category>
        
        <category>Gini Impurity</category>
        
        <category>Tennis</category>
        
        <category>CART</category>
        
        <category>ID3</category>
        
        
        <category>machine-learning</category>
        
      </item>
    
      <item>
        <title>구글 그리고 카카오 모두 통과! 면접 그리고 앞으로 방향!</title>
        <description>&lt;header&gt;
    &lt;img src=&quot;/assets/images/kakao.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;
&lt;/header&gt;

&lt;p&gt;안녕하세요. &lt;br /&gt;
맨날 기술적인 내용만 적다가 오늘 처음으로 저에 관한 이야기를 하네요. &lt;br /&gt;
몇일뒤면 카카오 모빌리티 (카카오 택시, 카카오 대리…)에 입사합니다. &lt;br /&gt;
정말 어려웠던 구글 면접에 관해서 썰도 좀 풀고.. 카카오 모빌리티 면접 이야기도 해볼께요 ㅎㅎ :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NDA에 싸인했기 때문에 정확한 문제에 대해서는 말씀드릴수 없습니다.&lt;br /&gt;
하지만 준비하시는 분들에게 도움이 되도록 써보도록 하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;구글&quot;&gt;구글&lt;/h1&gt;

&lt;h2 id=&quot;1차-전화-면접&quot;&gt;1차 전화 면접&lt;/h2&gt;

&lt;p&gt;저는 구글에서 먼저 면접 요청이 왔습니다.&lt;br /&gt;
먼저 전화 인터뷰에서 영어로 대화하면서 어떠 어떠한 포지션이고 관심있냐? 이게 주요 대화입니다. &lt;br /&gt;
간단한 문제가 나올수 있습니다. 그냥 관심있으면 다 통과하는 수준이니까 어려울거 전혀 없습니다.&lt;/p&gt;

&lt;h2 id=&quot;2차-기초-코딩-인터뷰--기초-딥러닝-인터뷰&quot;&gt;2차 기초 코딩 인터뷰 + 기초 딥러닝 인터뷰&lt;/h2&gt;

&lt;p&gt;행아웃으로 전화오고 코딩 인터뷰가 진행이 됩니다. &lt;br /&gt;
코딩 인터뷰 수준은 데이터 구조, 알고리즘이 나오고 수준은 Leet Code 중급 수준이 나옵니다. &lt;br /&gt;
기본적으로 알아야 하는 알고리즘들이 변형 없이 나옵니다. &lt;br /&gt;
아마도.. 개발자로 들어가면 더 어려운 수준이 나올거라 예상합니다.&lt;/p&gt;

&lt;p&gt;딥러닝도 당연히 알아야할 내용들이 나오고 어렵지 않습니다.&lt;br /&gt;
예를 들어서 Activation이나 loss function 의 특징들에 관해서 질문이 나올 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;3차-리눅스-인터뷰--시스템--딥러닝-엔지니어링&quot;&gt;3차 리눅스 인터뷰 + 시스템 + 딥러닝 엔지니어링&lt;/h2&gt;

&lt;p&gt;SQL, 시스템 메모리 영역 문제, 리눅스 문제, 딥러닝의 엔지니어링 관점에서의 질문들이 나옵니다. &lt;br /&gt;
정말 실무적인 내용들만 나오고.. 말도 안되는 내용이 나오지 않습니다.&lt;br /&gt;
실무에서 일해봤다면 누구나 알만한 내용들이 나옵니다.&lt;/p&gt;

&lt;p&gt;다만 제 경력상 서버 개발도 있었기 때문에 이 부분은 쉬웠지만.. &lt;br /&gt;
이제 막 대학원 졸업한 딥러닝 공부한 학생들한테는 조금 어려울수도 있겠다는 생각이 들었습니다.&lt;/p&gt;

&lt;h2 id=&quot;4차-기계-학습-어려움&quot;&gt;4차 기계 학습 (어려움)&lt;/h2&gt;

&lt;p&gt;여기부터 정말 어려워 집니다. &lt;br /&gt;
질문들도 수학수준에서 나오고, 실제 알고리즘을 만드는 방법에 관해서 나옵니다.&lt;br /&gt;
문제 출제 또한 재미있는게 이런 방식입니다.&lt;/p&gt;

&lt;p&gt;“2개의 클래스가 있는때는 LDA를 못 사용하잖아요. 이럴때 어떻게 합니까?”&lt;/p&gt;

&lt;p&gt;(당연히 영어로 질문을 하겠죠..)&lt;br /&gt;
틀린 말을 마치 맞는 말처럼  말하는데.. 대충 알면.. PCA사용합니다. 이지랄 하면 당연히 떨어지겠죠. &lt;br /&gt;
어려우면 가장 어려울수 있는 면접이고 단지 수학 문제만 나오는게 아니라 실제 라이브러리 없이 구현할수 있을 정도의 문제가 출제가 됩니다.&lt;br /&gt;
당연히 Scipy 또는 R 만 써서 구현한 사람들은 바로 떨어짐.&lt;/p&gt;

&lt;h2 id=&quot;5차-코딩-테스트-어려움-아키텍쳐-어려움&quot;&gt;5차 코딩 테스트 (어려움), 아키텍쳐 (어려움)&lt;/h2&gt;

&lt;p&gt;처음 코딩 테스트는 정말 기초적인 코딩 테스트 였고.. &lt;br /&gt;
응용한 문제가 출제가 됩니다. &lt;br /&gt;
Recursion으로 풀어도 되고 DP로 풀어도 되고 다 할줄 아는게 중요할거 같습니다.&lt;/p&gt;

&lt;p&gt;아키텍쳐는 저는 쉬웠습니다. &lt;br /&gt;
이건 100% 경험 아니면 풀수가 없습니다.&lt;/p&gt;

&lt;p&gt;하둡 생태계, 스파크, 카프카, 글로벌 수준의 아키텍쳐, 분산처리, Redis, RDBMS, TensorFlow 서비스 등등…&lt;br /&gt;
위에 열거된 내용들을 실제 구현해보고 빅데이터를 이해하고 있어야 문제를 풀 수 있습니다.&lt;br /&gt;
이건 말 그대로 엔지니어링 실력입니다.&lt;/p&gt;

&lt;p&gt;실제 실무에서 일어나는 트러블 슈팅에 관해서 문제가 나올수도 있고, 어떤 서비스를 구현하기 위한 아키텍쳐를 구현 할수도 있습니다.&lt;br /&gt;
모두 화이트 보드에 적으면서 설명하면 됩니다. &lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6차-점심-인터뷰&quot;&gt;6차 점심 인터뷰&lt;/h2&gt;

&lt;p&gt;그냥 구글에서 점심 먹으면 됩니다.&lt;br /&gt;
맛있어요 얌얌얌~ &lt;br /&gt;
앞에 있는 사람 너무 신경쓰지 말고 그냥 잘 먹어요. 경험이니까 ㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;저는 일본 구글러한테 한국에서는 실력도 중요하지만 폭탄주를 잘 만드는 것 또한 중요한 실력이라고 하니까 빵 웃더군요.&lt;/p&gt;

&lt;h2 id=&quot;7차-매니져-인터뷰-헬&quot;&gt;7차 매니져 인터뷰 (헬!!!!)&lt;/h2&gt;

&lt;p&gt;저는 솔직히 이게 제일 어려웠습니다!&lt;br /&gt;
한국 처럼 임원 면접은.. 뭐 인성보거나.. 그런거 아님… &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트 매니지먼트, 마케팅, 시간관리 등등.. 상황설정을 하면서 문제가 출제되는데..&lt;br /&gt;
답이 없는 문제이고..;;;;;;;; 논리적으로 설명해야 합니다. &lt;br /&gt;
한번만 말하면 끝나는게 아니라.. 계속 질문이 이어질겁니다.. 그리고 다른 것도 있는지 또 물어볼겁니다. &lt;br /&gt;
머리가 하얗게 됨….&lt;/p&gt;

&lt;p&gt;코딩 테스트, 기계학습, 다 통과하고도.. 여기서 많이 떨어질거 같더군요.. &lt;br /&gt;
한국은 이런 질문들이 인터뷰에 없죠.&lt;/p&gt;

&lt;h2 id=&quot;하이어-커미티&quot;&gt;하이어 커미티&lt;/h2&gt;

&lt;p&gt;여기서부터는 그냥 기다리면 됩니다. &lt;br /&gt;
최종 인터뷰를 통과한 사람들중에서 단 몇사람만 뽑히게 되고.. 최종 오퍼가 나오게 됩니다. &lt;br /&gt;
할 수 있는게 없고.. 그냥 기다리면 됩니다.&lt;/p&gt;

&lt;h1 id=&quot;카카오-모빌리티&quot;&gt;카카오 모빌리티&lt;/h1&gt;

&lt;p&gt;구글 인터뷰를 모두 통과한 중에 카카오 모빌리티의 면접 기회가 생겼었습니다. &lt;br /&gt;
평소에도 많이 이용하던 서비스였고.. 뭔가 막연하게 좋은 가치를 만들수 있지 않을까 생각하던 중에 기회가 와서 면접을 보게 됐습니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;구글에는 잠시 기다려달라고 요청했고.. (그분들도 진행하면 업무가 생기는 것이고 나중에 안간다고 하면.. 정말 미안한 상황이 될거 같아서..)
카카오에는 사정상 최대한 빠르게 면접 요청을 했었습니다.&lt;/p&gt;

&lt;p&gt;원래 2주일 후에 잡힌 면접이었는데.. 그냥 바로 다음주로 잡아버림. &lt;br /&gt;
1차는 기술면접이었고.. 어찌어찌 소신있게 답했는데.. 통과되었습니다. &lt;br /&gt;
2차  면접도 구글에서 기다리고 있다고 빨리 답을 줬으면 한다고 말했는데.. 면접장 나가자마자 3분뒤쯤에 합격 이메일이 왔었습니다.&lt;/p&gt;

&lt;p&gt;그날 밤! 정말 제 인생 최대의 고민이 시작되었습니다. &lt;br /&gt;
구글로 가서 정말 세계급 뛰어난 인재들과 함께 일을 할지, 아니면 카카오 모빌리티라는 스타트업? 에서 일을 할지.. &lt;br /&gt;
이런일이 처음은 아니었습니다. 이전에도 아마존 시애틀 본사에서 면접 기회가 있었는데.. 제 소신을 따라서 스타트업에서 일을 했었죠.&lt;/p&gt;

&lt;p&gt;정말 제가 쓰면서 뒤돌아보니.. 미친짓을 많이 한거 같습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;결론적으로 돈 적게 받더라도 재미있게 일할수 있는데서 내 뜻을 한번 펼쳐보자라는 심정으로 구글에 제 의사를 메일로 밝혔고.. 최종적으로 카카오를 선택했습니다.&lt;/p&gt;

&lt;h1 id=&quot;앞으로&quot;&gt;앞으로&lt;/h1&gt;

&lt;p&gt;어쩌면 이게 제 회사생활의 마지막이 될 수 도 있겠다는 생각이 듭니다.&lt;br /&gt;
&lt;strong&gt;애초에 자꾸 대기업 보다는 스타트업을 선호한 것도 언젠가는 제 사업을 하고 싶고, 가치있는 뭔가를 만들고 싶다는 열정이 있기 때문인거 같습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;3년 뒤, 제 스타트업을 시작할 때 지금 제가 걸어온 길이 많은 도움이 되길 바랄 뿐입니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Nov 2018 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/personal/2018/11/15/Why-I-Chose-Kakao-Instead-Of-Google/</link>
        <guid isPermaLink="true">http://incredible.ai/personal/2018/11/15/Why-I-Chose-Kakao-Instead-Of-Google/</guid>
        
        <category>Anderson</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Entropy</title>
        <description>&lt;header&gt;
    &lt;img src=&quot;/assets/images/entropy-wallpaper.jpg&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;
    &lt;div style=&quot;text-align:right;&quot;&gt;
    &lt;a style=&quot;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&quot; href=&quot;https://unsplash.com/@jontyson?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; title=&quot;Download free do whatever you want high-resolution photos from Jon Tyson&quot;&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&quot; viewBox=&quot;0 0 32 32&quot;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&quot;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;Jon Tyson&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/header&gt;

&lt;h1 id=&quot;information-theory&quot;&gt;Information Theory&lt;/h1&gt;

&lt;p&gt;일단 &lt;a href=&quot;http://sites.google.com/site/parthochoudhury/aMToC_CShannon.pdf&quot;&gt;information theory&lt;/a&gt;의 핵심 이론은 다음과 같습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;잘 일어나지 않는 사건 (unlinkely event)의 정보는 자주 발생할만한 사건보다 정보량이 많다(informative)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;잘 일어나지 않는 사건이라는 뜻은 확률적으로 낮은 이벤트를 말하고, 예를 들어서 로또에 당첨될 확률같이 낮은 확률을 말합니다. &lt;br /&gt;
정보량의 원래 사용된 의미는 통신 시스템에서 bits 단위로 정보를 전달할때 그 bits 크기를 말합니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;통계학에서는 쉽게 이해하면 &lt;strong&gt;불확실성 정도의 측정&lt;/strong&gt; 이라고 이해하면 되며, &lt;strong&gt;확률적으로 낮으면 information은 증가&lt;/strong&gt;하고, &lt;strong&gt;확률이 높다면 information은 낮아집니다&lt;/strong&gt;.
무게를 젤때 kg이 있고, 속도를 측정할때 km/hour 같은 개념이 있듯이, 이 정보량을 측정하는 단위로 information theory에서는 entropy라는 개념으로 설명을 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/9r7FIXEAGvs&quot;&gt;유튜브 영상&lt;/a&gt; 참고&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/udacity/shannon-entropy-information-gain-and-picking-balls-from-buckets-5810d35d54b4&quot;&gt;Shannon Entropy, Information Gain, and Picking Balls from Buckets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;보통 entropy는 열역학 그리고 통계학에서 두 가지 관점으로 정의를 내리고 설명을 하는데, &lt;br /&gt;
해당 문서에서는 통계학적 관점에서의 entropy를 정의 내리고, 추후 Decision Tree를 설명하겠습니다.&lt;/p&gt;

&lt;h1 id=&quot;entropy&quot;&gt;Entropy&lt;/h1&gt;

&lt;p&gt;확률에 대한 entropy공식은 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;I(p) = - \log_b(p)&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; : 는 어떤 이벤트가 일어날 확률&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;b&lt;/script&gt; : base
    &lt;ul&gt;
      &lt;li&gt;base 2 : bits (보통은 base 2 가 사용됩니다.)&lt;/li&gt;
      &lt;li&gt;base 3 : trits&lt;/li&gt;
      &lt;li&gt;base 10 : Hartleys&lt;/li&gt;
      &lt;li&gt;base e : nats&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Entropy는 &lt;strong&gt;불확실성 (Unpredictability)&lt;/strong&gt;을 나타냅니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'probability'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'entropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy-plot.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위의 그래프에서 보듯이, 확률이 낮으면 entropy는 높아지고, 확률이 높으면 entropy는 낮아지게 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;red-and-blue-balls-example&quot;&gt;Red and Blue Balls Example&lt;/h2&gt;

&lt;p&gt;예를 들어서 3개의 상자안에 빨간공 그리고 파란공이 상자당 4개씩 일렬로 들어 있습니다. &lt;br /&gt;
게임의 룰은 동일한 순서로 공을 꺼내게 되면 이기는 룰이며, 꺼낸 공은 다시 상자에 집어 넣습니다. &lt;br /&gt;
따라서 다음 공을 꺼낼때의 확률은 이전과 동일 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy_ball.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Entropy는 불확실 정도를 나타내는 값이니, 첫번째 상자는 entropy가 낮고, 세번째 상자로 갈수록 entropy는 높아져야 합니다.&lt;br /&gt;
즉 이길 확률과는 반대이며, log를 사용하면 반대로 나타내줄 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이때 기계학습에서 매우 중요한 포인트가 있습니다!!&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\log(ab) = \log(a) + \log(b)&lt;/script&gt;

&lt;p&gt;확률의 곱을 계산한 뒤에 나중에 log를 연산하는게 아니라, 각각의 확률마다 log를 연산뒤 합산하는게 좋습니다.&lt;br /&gt;
수학적으로 같은 결과를 내지만, 특히 연산량이 많은 기계학습, 딥러닝에서 곱셈을 하는 것은 합산보다 연산량이 많기 때문에, 오른쪽 부등식처럼 바꿔서 연산을 합니다. (곱셈/나눗셈은 연산을 하기 위해서 합/뺄셈을 반복적으로 사용해서 연산을 하게 됩니다. 덧셈/뺄셈: 1 cycle, 곱셈: 10 cycles, 나눗셈: 66-80 cycles &lt;a href=&quot;https://www.quora.com/Is-there-any-performance-difference-between-the-basic-operations-sum-subtraction-multiplication-division-when-the-computer-performs-them/answer/Colin-Gordon-12&quot;&gt;Quora 참고&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Logistic regression에서 likehood 계산을 log-likelihood로 바꿔서 계산하는 것과 같은 원리 입니다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;entropy를 적용하여 계산하면 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RRRR -&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;-\log(1) -\log(1) -\log(1) -\log(1) = 0&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;RRRB -&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;-\log(0.75) -\log(0.75) -\log(0.75) -\log(0.25) = 3.245&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;RRBB -&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;-\log(0.5) -\log(0.5) -\log(0.5) -\log(0.5) = 4&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy_ball2.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bits-example&quot;&gt;Bits Example&lt;/h2&gt;

&lt;p&gt;스무고개를 한다고 가정을 합니다. 0에서부터 1023까지의 숫자중에서 제가 생각하고 있는 숫자 한개를 맞춰보라고 했을때.. 당신의 첫번째 질문은 무엇일까요?&lt;/p&gt;

&lt;p&gt;예를 들어, “132입니까?” 라고 물어볼수도 있고, “0에서 100사이의 숫자입니까?” 라고 물어볼수도 있을 것입니다. &lt;br /&gt;
하지만 “0에서 511사이의 숫자입니까?”처럼 남아있는 옵션을 절반으로 줄이는 질문이 좋은 질문일 것 입니다. &lt;br /&gt;
위의 질문의 경우 {0, …, 511} 그리고 {512, …, 1023} 으로 나누며, 어떤 선택을 하든지, 512개의 가능한 값들이 &lt;strong&gt;둘로&lt;/strong&gt; 나뉘게 됩니다.&lt;/p&gt;

&lt;p&gt;Information Theory에서는 512처럼 남아있는 값을 일종의 &lt;strong&gt;정보&lt;/strong&gt;로 보며, entropy라는 컨셉으로 이해를 하게 됩니다.&lt;br /&gt;
Entropy는 아주 쉽게 이해했을때, &lt;strong&gt;남아있는 정보의 양&lt;/strong&gt;으로 생각하면 쉬우며, 복잡하면 복잡할수록 entropy는 높아지고, 쉽고 명료하다면.. entropy의 양은 줄어들 것 입니다.&lt;/p&gt;

&lt;p&gt;숫자로 이해를 해보고자 한다면, 1024를 1빼줘서 bits를 구합니다. (bits로 표현시 0에서부터 시작했을때 0~1023은 1024개와 동일합니다.)
bits(1023)의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;1111111111&lt;/code&gt;  bit로 표현 될 수 있으며, 10자리의 bits로 구성되어 있기 때문에, 최대 10번의 질문을 해야지만 찾고자 하는 답을 얻을 수가 있게 된다는 뜻이 됩니다. (4는 &lt;code class=&quot;highlighter-rouge&quot;&gt;bits(3) = 11&lt;/code&gt; 로서 2번 질문이 필요하고, 7의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;bits(6) = 110&lt;/code&gt; 으로서 3번의 질문이 필요합니다.).
다시말하자면, &lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 로 표현이 가능합니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Information&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;function&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;bits&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;log_2&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;N questions&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1024&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(1023)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1111111111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 1024&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;512&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(511)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;111111111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 512&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;9 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;256&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(255)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;11111111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 256&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;128&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(127)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1111111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 128&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;7 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(63)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;111111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 64&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(31)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;11111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 32&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(15)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(7)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;111&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(3)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;bits(1)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1 번 질문 필요&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;물론 0에서 1023의 숫자중에서 첫번째 질문을 &lt;code class=&quot;highlighter-rouge&quot;&gt;60인가요?&lt;/code&gt;라고 물어봐서 한방에 맞춰버릴수도 있습니다.&lt;br /&gt;
하지만 이경우 남아있는 정보량을 1023개로 만듬으로서 &lt;script type=&quot;math/tex&quot;&gt;\log_2(1023) = 9.998&lt;/script&gt; 로서 질문을 해야 할 횟수를 늘려버리게 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;결론적으로 Information이란 &lt;strong&gt;우리가 알아내려는 답을 알기까지 필요한 정보의 양 또는 불확실성&lt;/strong&gt;이라고 볼 수 있습니다. &lt;br /&gt;
예를 들어서 최초 1024에서 답을 알아낼때까지 필요한 정보는 &lt;script type=&quot;math/tex&quot;&gt;\log_2(1024) = 10&lt;/script&gt; 이며, &lt;br /&gt;
만약 “답이 23인가요?” 처럼 한개를 물어봤을때는 &lt;script type=&quot;math/tex&quot;&gt;\log_2(1023) = 9.99859&lt;/script&gt; 가 됩니다. ( &lt;script type=&quot;math/tex&quot;&gt;1024-1 = 1023&lt;/script&gt; )&lt;br /&gt;
1~512이 사이의 숫자인가요? 라고 묻게 될 경우 &lt;script type=&quot;math/tex&quot;&gt;\log_2(512) = 9&lt;/script&gt; 가 되게 됩니다.&lt;/p&gt;

&lt;h1 id=&quot;multi-class-entropy-general-entropy-or-cross-entropy&quot;&gt;Multi-Class Entropy (General Entropy or Cross Entropy)&lt;/h1&gt;

&lt;p&gt;위에서 2개의 classes가 존재한다는 가정하에서 설명을 했습니다.&lt;br /&gt;
여기에서부터는 다수의 classes가 존재하는 entropy를 설명하겠습니다. (사실 아래의 공식이 일반적인 entropy공식 입니다.)&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;I_H(t) = E \left[ I(x) \right] = - E \left[ \log_2 p_i \right] = -\sum^c_{i=1} p_i \log_2 p_i&lt;/script&gt;

&lt;p&gt;모든 샘플들이 동일한 하나의 class로 분류된다면(homogeneous), entropy의 값은 0이 되며, &lt;br /&gt;
만약 샘플의 모든 클래스가 동일하게 나뉘어진다면, entropy값은 1이 됩니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고로 Scipy의 Decision Tree에서 entropy 는 &lt;script type=&quot;math/tex&quot;&gt;\log_2&lt;/script&gt; 를 사용합니다. &lt;br /&gt;
이유는 binary tree를 사용하기 때문. &lt;br /&gt;
하지만 Deep learning에서 cross entropy를 사용할때는 natural log를 사용합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 아래 연산에서는 2개의 클래스가 존재할때 cross entropy를 사용한 예제 입니다.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# 2개의 클래스를 갖고 있기 때문에 일어날 확률 그리고 일어나지 않을 확률.. 즉 binary classification입니다.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entropy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xticks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Entropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'#BB003C'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy-cross-plot.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;상자-예제&quot;&gt;상자 예제&lt;/h2&gt;

&lt;p&gt;각 상자마다 다양한 구슬들이 들어 있습니다. &lt;br /&gt;
이때 각 상자마다의 entropy를 계산해 보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy-box-balls.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
I_H(\text{Box A}) &amp;= - \frac{8}{8} \log_2 \left( \frac{8}{8} \right) = 0. \\
I_H(\text{Box B}) &amp;= - \left[ \frac{4}{8} \log_2 \left( \frac{4}{8} \right) +
    \frac{2}{8} \log_2 \left( \frac{2}{8} \right) +
    \frac{2}{8} \log_2 \left( \frac{2}{8} \right) \right] = 1.75 \\
I_H(\text{Box C}) &amp;= - \left[ \frac{2}{8} \log_2 \left( \frac{2}{8} \right) +
    \frac{2}{8} \log_2 \left( \frac{2}{8} \right) +
    \frac{2}{8} \log_2 \left( \frac{2}{8} \right) \right] = 2.0
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;여기서 entropy의 의미는 만약 여기에서 공을 하나 선택했을때.. 선택한 공이 무엇인지 알아내는데 필요한 질문의 갯수라고 생각해 볼 수 있습니다.&lt;br /&gt;
상자 A에서는 모두 빨간색 구슬이라는 것을 알고 있기 때문에, 질문이 필요하지 않습니다. 따라서 entropy는 0입니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;상자 B와 C의 경우, 둘의 차이점은 class의 갯수 (빨간색, 파란색, 노란색, 초록색)는 동일하지만, 분포도가 다릅니다.&lt;br /&gt;
트리 구조에서 다음과 같이 질문을 하면 효율적으로 답을 얻어낼수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/entropy-box-tree.png&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 트리구조를 만들고 질문을 던진다면, 평균적인 질문의 갯수는 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align} P(\text{평균 질문 갯수}) &amp;=  E\left[ \text{질문 횟수} \right] \\
P(\text{평균 질문 갯수} = B) &amp;=  \frac{1}{2} * 1 + \frac{1}{4} * 2 + \frac{1}{8} * 3 + \frac{1}{8} * 3 =  1.75 \\
P(\text{평균 질문 갯수} = C) &amp;=  \frac{1}{4} * 2 + \frac{1}{4} * 2 + \frac{1}{4} * 2 + \frac{1}{4} * 2  =  2.
\end{align} %]]&gt;&lt;/script&gt;

&lt;h1 id=&quot;끝으로&quot;&gt;끝으로..&lt;/h1&gt;

&lt;p&gt;조만간 Decision Tree에 관해서 정리 하겠습니다 :)&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/udacity/shannon-entropy-information-gain-and-picking-balls-from-buckets-5810d35d54b4&quot;&gt;Shannon Entropy, Information Gain, and Picking Balls from Buckets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 08 Nov 2018 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/machine-learning/2018/11/08/Entropy/</link>
        <guid isPermaLink="true">http://incredible.ai/machine-learning/2018/11/08/Entropy/</guid>
        
        <category>shannon entropy</category>
        
        <category>cross entropy</category>
        
        <category>decision tree</category>
        
        
        <category>machine-learning</category>
        
      </item>
    
      <item>
        <title>Performance Test</title>
        <description>&lt;header&gt;
    &lt;img src=&quot;/assets/images/performance-test.jpg&quot; class=&quot;img-responsive img-rounded img-fluid&quot; /&gt;
    &lt;div style=&quot;text-align:right;&quot;&gt;
    &lt;a style=&quot;background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &amp;quot;San Francisco&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Ubuntu, Roboto, Noto, &amp;quot;Segoe UI&amp;quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px&quot; href=&quot;https://unsplash.com/@chrisliverani?utm_medium=referral&amp;amp;utm_campaign=photographer-credit&amp;amp;utm_content=creditBadge&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; title=&quot;Download free do whatever you want high-resolution photos from Chris Liverani&quot;&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; style=&quot;height:12px;width:auto;position:relative;vertical-align:middle;top:-1px;fill:white&quot; viewBox=&quot;0 0 32 32&quot;&gt;&lt;title&gt;unsplash-logo&lt;/title&gt;&lt;path d=&quot;M20.8 18.1c0 2.7-2.2 4.8-4.8 4.8s-4.8-2.1-4.8-4.8c0-2.7 2.2-4.8 4.8-4.8 2.7.1 4.8 2.2 4.8 4.8zm11.2-7.4v14.9c0 2.3-1.9 4.3-4.3 4.3h-23.4c-2.4 0-4.3-1.9-4.3-4.3v-15c0-2.3 1.9-4.3 4.3-4.3h3.7l.8-2.3c.4-1.1 1.7-2 2.9-2h8.6c1.2 0 2.5.9 2.9 2l.8 2.4h3.7c2.4 0 4.3 1.9 4.3 4.3zm-8.6 7.5c0-4.1-3.3-7.5-7.5-7.5-4.1 0-7.5 3.4-7.5 7.5s3.3 7.5 7.5 7.5c4.2-.1 7.5-3.4 7.5-7.5z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;span style=&quot;display:inline-block;padding:2px 3px&quot;&gt;Chris Liverani&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/header&gt;

&lt;p&gt;정말 오랜만에 블로그글을 작성하네요.. ㅎㄷㄷㄷㄷ &lt;br /&gt;
근래에 Faster R-CNN 그리고 RetinaNet 까지 논문읽고 구현하느라.. 무척바빴습니다.&lt;br /&gt;
처음 시작은.. 좀 쉬운내용 공유하고자 합니다.&lt;/p&gt;

&lt;h1 id=&quot;confusion-matrix&quot;&gt;Confusion Matrix&lt;/h1&gt;

&lt;p&gt;Confusion Matrix는 일반적으로 classification model이 테스트 데이터에 대한 performance를 측정하는데 사용됩니다. (ground-truth values를 알고 있는 상태)
confusion matrix는 상대적으로 꽤 쉽게 이해할수 있기 때문에 많이 사용됩니다. 다만 용어가 매우 혼돈스럽기 때문에 주의가 필요합니다.&lt;/p&gt;

&lt;h2 id=&quot;binary-classification&quot;&gt;Binary Classification&lt;/h2&gt;

&lt;p&gt;아래의 matrix는 165명의 환자를 대상으로 질병이 있는지 없는지 예측한 값과, 실제 값을 나타낸 것 입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/confusion_matrix_simple2.png&quot; alt=&quot;Confusion Matrix&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;True &lt;span style=&quot;color:red&quot;&gt;Positives&lt;/span&gt; (TP)&lt;/strong&gt;: 질병이 &lt;span style=&quot;color:red&quot;&gt;있다고 예측&lt;/span&gt;했고 실제로 질병이 있는 경우 (있는게 맞어)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;True &lt;span style=&quot;color:red&quot;&gt;Negatives&lt;/span&gt; (TN)&lt;/strong&gt;: 질병이 &lt;span style=&quot;color:red&quot;&gt;없다고 예측&lt;/span&gt;했고, 실제로 질병이 없는 경우 (없는게 맞어)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;False &lt;span style=&quot;color:red&quot;&gt;Positives&lt;/span&gt; (FP)&lt;/strong&gt;: 질병이 &lt;span style=&quot;color:red&quot;&gt;있다고 예측&lt;/span&gt;했지만, 실제로는 질병이 없음 (있는게 틀려)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;False &lt;span style=&quot;color:red&quot;&gt;Negatives&lt;/span&gt; (FN)&lt;/strong&gt;: 질병이 &lt;span style=&quot;color:red&quot;&gt;없다고 예측&lt;/span&gt;했지만, 실제로는 질병이 있음 (없는게 틀려)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Positives, Negatives는 예측한 값을 의미하고, True, False는 그 예측한 값이 맞냐 틀리냐를 말하는 상대적 개념&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;performance-measures&quot;&gt;Performance Measures&lt;/h1&gt;

&lt;p&gt;일반적으로 classification에서 accuracy를 많이 보지만, 실무에서는 이것만 보지는 않습니다. &lt;br /&gt;
아래와 같은 analysis들을 보면서 해석을 합니다.&lt;/p&gt;

&lt;p&gt;자세한 내용은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Confusion_matrix&quot;&gt;위키피디아 Confusion Matrix&lt;/a&gt;를 참고 합니다.&lt;/p&gt;

&lt;h2 id=&quot;accuracy&quot;&gt;Accuracy&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;전체 샘플중에 실제로 맞춘 비율&lt;/li&gt;
  &lt;li&gt;가장 많이 사용되지만, class간의 비율이 동일할때 사용합니다.&lt;/li&gt;
  &lt;li&gt;최적화에서 objective function으로 사용됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{Accuracy} = \frac{TP + TN}{N} = \frac{100 + 50}{165} = 0.91&lt;/script&gt;

&lt;h2 id=&quot;error-rate-misclassification-rate&quot;&gt;Error Rate (Misclassification Rate)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1 - accuracy&lt;/li&gt;
  &lt;li&gt;얼마나 못 맞췄냐?&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{Misclassification Rate} = \frac{FP + FN}{N} = \frac{10 + 5}{165} = 0.09&lt;/script&gt;

&lt;h2 id=&quot;recall-sensitivity-true-positive-rate&quot;&gt;Recall (Sensitivity, True Positive Rate)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;실제 암에 걸린 환자들중 제대로 암이라고 판단한 비율&lt;/li&gt;
  &lt;li&gt;실제 사기범들중에 유죄 판정을 내린 비율&lt;/li&gt;
  &lt;li&gt;사기친 거래들중에 실제로 잡아낸 비율 -&amp;gt; 검거율!&lt;/li&gt;
  &lt;li&gt;값이 높을수록 좋다&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{True Positive Rate} = \frac{TP}{TP + FN} = \frac{TP}{\text{Actual Yes}} = \frac{100}{100 + 5} = 0.95&lt;/script&gt;

&lt;h2 id=&quot;fall-out--false-alarm-ratio-false-positive-rate&quot;&gt;Fall-out  (False Alarm Ratio, False Positive Rate)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;실제로는 암이 아닌데 암이라고 말하는 비율&lt;/li&gt;
  &lt;li&gt;실제로는 유죄가 아닌데 유죄라고 판결하는 비율&lt;/li&gt;
  &lt;li&gt;실제로는 임신이 아닌데 임신이라고 오작동 하는 비율&lt;/li&gt;
  &lt;li&gt;실제 정상거래들중, 사기라고 예측한 비율&lt;/li&gt;
  &lt;li&gt;오판율&lt;/li&gt;
  &lt;li&gt;1 - Specificity&lt;/li&gt;
  &lt;li&gt;값이 높을수록 병신갖은 예측/판단을 한거다&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{True Positive Rate} = \frac{FP}{FP + TN} = \frac{FP}{\text{Actual No}} =  \frac{10}{10 + 50} = 0.17&lt;/script&gt;

&lt;h2 id=&quot;specificity&quot;&gt;Specificity&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;실제 아닌데, 예측도 아니라고 한 비율&lt;/li&gt;
  &lt;li&gt;실제 암이 없는 정상인 중에, 예측도 암이 없다고 판단한 비율&lt;/li&gt;
  &lt;li&gt;실제 무죄인 사람들 중에, 예측도 무죄라고 판단한 비율&lt;/li&gt;
  &lt;li&gt;값이 높을수록 좋다&lt;/li&gt;
  &lt;li&gt;1 - False Positive Rate&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{Specificity} = \frac{TN}{TN + FP} =  \frac{TN}{\text{Actual No}} = \frac{50}{50 + 10} = 0.83&lt;/script&gt;

&lt;h2 id=&quot;precision&quot;&gt;Precision&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;질병이 있다고 예측한 것중에 실제로 맞춘 비율 -&amp;gt; 값이 낮을 수록 암에 걸렸다고 진단했는데.. 실제로는 아닌 사람들이 있다.&lt;/li&gt;
  &lt;li&gt;사기 거래에서 실제 사기를 제대로 잡아낸 비율 -&amp;gt; 값이 낮을 수록 무죄인 사람이 유죄로 잡혀 들어간 꼴이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{Precision} = \frac{TP}{TP + FP} = \frac{TP}{\text{Predicted Yes}} =  \frac{100}{100 + 10} = 0.91&lt;/script&gt;

&lt;h2 id=&quot;f1-score-f-measure&quot;&gt;F1 Score (F-measure)&lt;/h2&gt;

&lt;p&gt;F1 Score는 precision과 recall의 조합으로 하나의 수치로 나타냅니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예를 들어서 다음과 같은 암을 진단하려는 사람들이 있습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{실제 암환자} = \{ A, B, C \}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{실제 정상인} = \{ D, E, F \}&lt;/script&gt;

&lt;h3 id=&quot;precision의-문제점&quot;&gt;Precision의 문제점&lt;/h3&gt;

&lt;p&gt;Precision의 문제는 만약 예측한 값들중 (pred_y) 그중 맞은 갯수이기 때문에..&lt;br /&gt;
만약 A 한명만 암이 있다고 진단하고 나머지는 정산으로 예측한다면 precision은 1값으로 나옵니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{Precision} = \frac{TP}{TP + FP} = \frac{1}{1 + 0} = 1&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;FN에 B, C 가 존재하지만, Precision은 FN을 사용하지 않기 때문에 이렇게 나옵니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;recall의-문제점&quot;&gt;Recall의 문제점&lt;/h3&gt;

&lt;p&gt;만약 모든 사람 A, B, C, D, E, F 를 모두 암환자로 예측했다면.. Recall의 공식은 다음과 같아집니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{Recall} = \frac{TP}{TP + FN} = \frac{3}{3 + 0} = 1&lt;/script&gt;

&lt;p&gt;분명히 정상인 환자를 암이 있는 환자로 분류했는데도 불구하고 수치는 매우 높게 나옵니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;FP 에 D, E, F가 존재하지만 Recall은 FP를 사용하지 않죠.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;precision--recall--f1-score&quot;&gt;Precision + Recall = F1 Score&lt;/h3&gt;

&lt;p&gt;따라서 Precision과 Recall을 서로 조합하여 단점을 보완하고 하나의 수치로 만든것이 F1 Score입니다.&lt;br /&gt;
Harmonic Mean을 사용한 F1 Score의 공식은 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{F1 Score} = 2 \cdot
\frac{\text{precision} \times \text{recall}}{\text{precision} + \text{recall}}&lt;/script&gt;

&lt;p&gt;여기서 Harmonic Meam (조화 평균)은 일반적으로 사용하는 arithmetic mean (산술 평균)과는 의미가 다릅니다.&lt;br /&gt;
Harmonic mean은 reciprocal을 사용합니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
\text{Arithmetic Mean}  &amp;= \frac{1}{n} \sum^n_{i=1} x_i = \frac{x_1 + x_2 + ... + x_n}{n} \\
\text{Harmonic Mean} &amp;= \left( \frac{1}{n} \sum^n_{i=1} x_i^{-1} \right)^{-1}
= \frac{n}{\frac{1}{x_1} +  \frac{1}{x_2} + ... + \frac{1}{x_n}}
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;F1 score는 harmonic mean을 사용하는데 이때 elements가 precision 그리고 recall 2개 이기 때문에 공식은 다음과 같습니다.&lt;br /&gt;
x1 = precision, x2 = recall, n=2 로 가정&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\text{F1 Score} = \frac{2}{\frac{1}{x_1} + \frac{1}{x_2}}
= 2 \cdot \frac{x_1 \times x_2}{x_1 + x_2}
= 2 \cdot \frac{\text{precision} \times \text{recall}}{\text{precision} + \text{recall}}&lt;/script&gt;

&lt;h1 id=&quot;roc-receiver-operating-characteristics&quot;&gt;ROC (Receiver Operating Characteristics)&lt;/h1&gt;

&lt;p&gt;이름이 참 이상합니다. Receiver Operating Characteristics 라니.. (직역하면.. 수신기 작동 특성?) &lt;br /&gt;
2차 대전때, 진주만 습격 이후로, 미군은 일본 비행기를 감지하는 레이더 시그널에 대해서 연구를 하기 시작합니다. &lt;br /&gt;
레이더 수신기 장비 (Radar receiver operators)의 성능을 측정하기 위해서 사용한 방법은 Receiver Operating Characteristics 입니다.&lt;br /&gt;
결론적으로 일본 전투기를 제대로 감지하는지 레이더의 성능을 측정하기 위한 방법으로 생겨났고.. 그래서 이름도 이렇게 됨.&lt;/p&gt;

&lt;p&gt;ROC curve 그래프는 세로축을 True Positive Rate (Sensitivity or Recall) 로 하고, 가로축을 False Positive Rate 으로 시각화한 그래프로서 각각의 classification thresholds마다 TPR VS FPR 을 계산한 그래프입니다. 중간의 직선은 reference line 입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/roc-example1.png&quot; alt=&quot;ROC Curve&quot; /&gt;&lt;/p&gt;

&lt;p&gt;보는 방법은 매우 간단합니다. TPR이 높고, FPR은 낮을수록 좋은거 입니다.&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TPR과 FPR은 서로 반비례적인 관계에 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;auc-area-under-the-roc-curve&quot;&gt;AUC (Area Under the ROC Curve)&lt;/h2&gt;

&lt;p&gt;ROC curve의 밑면적을 계산한 값입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/auc-example.png&quot; alt=&quot;AUC&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Jun 2018 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/statistics/2018/06/30/Performance-Test/</link>
        <guid isPermaLink="true">http://incredible.ai/statistics/2018/06/30/Performance-Test/</guid>
        
        <category></category>
        
        
        <category>statistics</category>
        
      </item>
    
      <item>
        <title>Faster R-CNN</title>
        <description>&lt;h1 id=&quot;what-is-faster-r-cnn&quot;&gt;What is Faster R-CNN&lt;/h1&gt;

&lt;p&gt;Deep learning에 처음 들어온 사람들은 보통 MNIST 데이터를 갖고서 딥러닝으로 손글씨를 인식하는 모델을 만듭니다. 하지만 실제 인간이 접하는 비젼의 문제는 이것보다 훨씬 까다롭습니다.  아래 사진은 뉴욕의 사진입니다. 엄청나게 많은 사람들, 차량, 광고, 건물, 신호등 등등의 복잡한 객체들로 이루어져 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-new-york.jpg&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;인간은 이 복잡한 그림 속에서 대부분을 모두 구분 할 수 있으며, 심지어 겹쳐있는 사물들도 알 수 있고, 사물과 사물의 관계또한 알 수 있습니다. 인공지능이 사물과 사물들을 구분해내고 분류할 수 있을까요? Faster R-CNN을 사용하면 이미지속의 여러 사물을 한꺼번에 분류해 내놓으며, 데이터 학습에 따라서 겹쳐 있는 부분들 까지도 정확하게 사물들을 분류해낼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-examples.png&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;여러가지 알고리즘들이 있습니다. R-CNN, Fast R-CNN, Faster R-CNN, Mask R-CNN, YOLO, YOLO v2 등등..
최초가 된 분석 방법은 R-CNN이고, selective search의 단점을 보완한게 Fast R-CNN이고, 여기서 다시 보완한게 Faster R-CNN입니다. YOLO의 경우 속도가 Faster R-CNN보다 훨씬 빠릅니다만 예측률이 떨어집니다. YOLO가 초당 50장정도 처리 가능하다고 하면, Faster R-CNN의 경우 5~7장정도밖에 처리를 하지 못합니다. Faster R-CNN과 YOLO의 차이는 예측률과 속도 사이의 trade off를 선택하는 것 입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;architecture&quot;&gt;Architecture&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Faster R-CNN은 두개의 네트워크로 구성이 되어 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deep Convolution Network로서 Region Proposal Network (RPN) 이라고 함&lt;/li&gt;
  &lt;li&gt;Fast R-CNN Detector로서 앞의 proposed regions을 사용하여 object를 감지함&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Faster R-CNN안에는 2개의 모듈이 존재하지만, 전체적으로는 하나의 object detection network라고 볼 수 있습니다.
이게 중요한 이유는 Fater R-CNN이후부터 &lt;strong&gt;fully differentiable model&lt;/strong&gt;이기 때문입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-architecture.png&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;가장 상위단서부터 큰 그림을 그리면서 세부적인 부분을 설명하도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;input-images&quot;&gt;Input Images&lt;/h2&gt;

&lt;p&gt;Input images는 &lt;strong&gt;Height x Width x Depth&lt;/strong&gt; 를 갖고 있는 tensors입니다.
쉽게 말해 그냥 RGB컬러를 갖고 있는 이미지입니다.&lt;/p&gt;

&lt;h2 id=&quot;base-network-shared-network&quot;&gt;Base Network (Shared Network)&lt;/h2&gt;

&lt;h3 id=&quot;name-meaning&quot;&gt;Name Meaning&lt;/h3&gt;

&lt;p&gt;일단 이름의 의미부터 보도록 하겠습니다.
이전 R-CNN에서는 Region proposal을 하기 위해서 selective search를 사용했습니다.
Selective search를 통해서 나온 수천개 각각의 region proposals마다 CNN(AlexNet)을 사용하여 forward pass를 하였습니다. 또한 3개의 모델(feature를 뽑아내는 CNN, 어떤 class인지 알아내는 classifier, bounding boxes를 예측하는 regression model)을 각각 학습시켜야 했습니다.&lt;/p&gt;

&lt;p&gt;Fast R-CNN에서는 중복되는 연산을 하나의 CNN 으로 해결을 해버립니다.
즉 이미지를 가장 먼저 받아서 feature를 뽑아내는 일을 하기 때문에 base network 또는 중복되는 일을 하나의 CNN에서 처리하기 때문에 shared network라고 하는 것 입니다. 자세한 내용은 &lt;a href=&quot;https://blog.athelas.com/a-brief-history-of-cnns-in-image-segmentation-from-r-cnn-to-mask-r-cnn-34ea83205de4?token=8y0wRhgrjcR2Zl9z&quot;&gt;CNN 히스토리&lt;/a&gt; 또는 &lt;a href=&quot;https://jhui.github.io/2017/03/15/Fast-R-CNN-and-Faster-R-CNN/&quot;&gt;Fast R-CNN과 Faster R-CNN의 비교&lt;/a&gt;를 참고합니다.&lt;/p&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How it works&lt;/h3&gt;

&lt;p&gt;Base network 가 하는 일은 이미지에 대한 features extraction입니다.
중요한 포인트는 사실 &lt;strong&gt;이미 학습이 되어 있는 모델(pre-trained model)&lt;/strong&gt;을 사용해야 한다는 것 입니다. (즉 transfer learning과 유사하며 CNN의 특징을 알고 있다면 왜 이렇게 하는지 이해가 될 겁니다.)&lt;/p&gt;

&lt;p&gt;모델은 기존의 모델을 주로 사용합니다.
ResNet, VGG, Google의 Inception등등 다양하게 사용할 수 있습니다. 다만 찾고자 하는 object의 feature를 뽑아내야 하기 때문에 이미 해당 object를 학습해 놓은 상태여야 합니다. 아래와 같이 이미지를 input값으로 받아서 CNN모델에 들어가게 되면 output으로 찾고자 하는 object의 feature maps 을 얻을 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-convnet.png&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;region-proposal-networks&quot;&gt;Region Proposal Networks&lt;/h2&gt;

&lt;p&gt;Region Proposal Network (RPN)은 convolution을 사용하여 구현이 되며, input 값은 이전 base network에서 뽑아낸 feature maps을 사용합니다.  Region proposals을 생성하기 위해서는 base network에서 생성한 feature maps위에 n x n spatial window (보통 3 x 3)를 슬라이드 시킵니다.  각각의 sliding-window가 찍은 지점마다, 한번에 여러개의 region proposals을 예측하게 됩니다. Region proposals의 최고 갯수는 &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; 로 나타내며, 이것을 &lt;strong&gt;Anchor&lt;/strong&gt; 라고 부릅니다. 보통 각 sliding window의 지점마다 9개의 anchors가 존재하며 , 3개의 서로 다른 종횡비 (aspect ratios) 그리고 3개의 서로 다른 크기(scales) 가 조합되며 모두 동일한 중앙 지점 &lt;script type=&quot;math/tex&quot;&gt;(x_a, y_a)&lt;/script&gt; 을 갖고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-sliding-window-and-anchor.png&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sliding window를 통해서 나온 feature map의 depth는 더 낮은 차원이 됩니다. (예. 512 depth –&amp;gt; 256 depth) 이후의 output값은 1 x 1 kernel을 갖고 있는 두개의 convolutional layers로 양분되어 들어가게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Classification layer&lt;/strong&gt;에서는 anchor당 2개의 predictions값을 내놓으며, 객체인지 아니면 객체가 아닌지(그냥 배경인지)에 관한 확률값입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regression layer&lt;/strong&gt; (또는 bounding box adjustment layer)는 각 anchor당 델타값들 &lt;script type=&quot;math/tex&quot;&gt;\Delta_{x_{\text{center}}}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\Delta_{y_{\text{center}}}&lt;/script&gt;,  &lt;script type=&quot;math/tex&quot;&gt;\Delta_{\text{width}}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\Delta_{\text{height}}&lt;/script&gt;  4개의 값을 내놓습니다. 이 델타 값들은 anchors에 적용이 되어서 최종 proposals을 얻게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-sliding-window.png&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;classifier-of-background-and-foreground&quot;&gt;Classifier of Background and Foreground&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Classifier&lt;/strong&gt;를 학습시키기 위한 training data는 바로 위의 &lt;strong&gt;RPN으로 부터 얻은 anchors&lt;/strong&gt; 와 &lt;strong&gt;ground-truth boxes&lt;/strong&gt; (실제 사람이 집접 박스 처리한 데이터) 입니다.&lt;/p&gt;

&lt;p&gt;모든 anchors를 foreground 이냐 또는 background이냐로 분류를 해야 합니다.
분류를 하는 기준은 어떤 anchor가 ground-truth box와 오버랩 (중복되는 면적)되는 부분이 크면 foreground이고, 적으면 background입니다.
각각의 anchor마다 foreground인지 아니면 background인지 구별하는 값을  &lt;script type=&quot;math/tex&quot;&gt;p^*&lt;/script&gt; 값이라고 했을때 구체적인 공식은 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation} p^* = \begin{cases} 1 &amp; \text{if } IoU \gt 0.7 \\ -1 &amp; \text{if } IoU \lt 0.3 \\ 0 &amp; \text{if otherwise}  \end{cases}  \end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;여기서 IoU는 Intersection over Union으로서 다음과 같이 정의가 됩니다.
자세한 내용은 &lt;a href=&quot;https://www.pyimagesearch.com/2016/11/07/intersection-over-union-iou-for-object-detection/&quot;&gt;여기&lt;/a&gt; 를 참고 합니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{equation} IoU = \frac{\text{anchor } \cap \text{ ground-truth box}}{\text{anchor } \cup \text{ ground-truth box}} \end{equation}&lt;/script&gt;

&lt;p&gt;일반적으로 IoU값이 가장 높은 값을 1값으로 잡으면 되지만..
정말 레어한 케이스에서 잘 잡히지 않는 경우 0.7이상으로 해서 잡으면 됩니다.
또한 하나의 ground-truth box는 여러개의 anchors에 anchors에 1값을 줄 수 가 있습니다.
또한 0.3 이하의 값으로 떨어지는 anchor는 -1값을 줍니다.
그외 IoU 값이 높지도 정확하게 낮지도 않은 anchors들 같은 경우는 학습시 사용되지 않는… 그냥 아무취급도 안하면 됩니다.
(태스크에 따라서 0.7이상이냐 0.3이하냐는 언제든지 바뀔 수 있습니다.)&lt;/p&gt;

&lt;h3 id=&quot;bounding-box-regression&quot;&gt;Bounding Box Regression&lt;/h3&gt;

&lt;p&gt;Bounding box regression에는 4개의 좌표값을 사용합니다.
&lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; 라는 값 자체가 4개의 좌표값을 갖고 있는 하나의 벡터라고 보면 되며 다음과 같은 엘러먼트 값을 갖고 있습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align} t_x &amp;= (x - x_a) / w_a \\
t_y &amp;= (y - y_a) / h_a \\
t_w &amp;= \log(w/w_a) \\
t_h &amp;= \log(h/h_a)
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;ground-truth vector &lt;script type=&quot;math/tex&quot;&gt;t^*&lt;/script&gt; 에는 위와 유사하게 다음과 같은 값을 갖고 있습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align} t^*_x &amp;= (x^* - x_a) / w_a \\
t^*_y &amp;= (y^* - y_a) / h_a \\
t^*_w &amp;= \log(w^*/w_a) \\
t^*_h &amp;= \log(h^*/h_a)
\end{align} %]]&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;t_x, t_y&lt;/script&gt; : 박스의 center coordinates&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;t_w, t_h&lt;/script&gt; : 박스의 width, height&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;x, y, w, h&lt;/script&gt; : predicted box&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;x_a, y_a, w_a, h_a&lt;/script&gt; : anchor box&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;x^*, y^*, w^*, h^*&lt;/script&gt; : ground-truth box&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;region-of-interest-pooling&quot;&gt;Region of Interest Pooling&lt;/h2&gt;

&lt;p&gt;RPN이후, 서로 다른 크기의 proposed regions값을 output으로 받습니다.
서로 다른 크기라는 말은 CNN에서 output으로 나온 feature maps또는 제각각 다른 크기라는 뜻입니다.  특히 일반적으로 feature maps을 flatten시켜서 딥러닝을 태워서 추후 classification을 할때는 더더욱 어렵게 됩니다.&lt;/p&gt;

&lt;p&gt;이때 사용하는 기법이 Region of Interest Pooling(ROI) 기법입니다.
ROI를 사용하게 되면 서로 다른 크기의 feature maps을 동일한 크기로 변환시켜줄수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;how-it-works-1&quot;&gt;How it works&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;아래의 내용은 &lt;a href=&quot;https://blog.deepsense.ai/region-of-interest-pooling-explained/&quot;&gt;링크&lt;/a&gt;에서 참고하였습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ROI를 구현하기 위해서는 다음의 2개의 inputs이 필요합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Deep convolutions 그리고 max pooling layers를 통해 나온 feature map&lt;/li&gt;
  &lt;li&gt;N x 4 매트릭스 -&amp;gt; N은 RoI의 갯수, 4는 region의 위치를 나타내는 coordinates&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;아래의 그림은 region proposals (핑크 직사각형) 이 포함된 이미지 입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-region-proposal-cat.png&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ROI 가 로직은 다음과 같습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;각각의 region proposal을 동일한 크기의 sections으로 나눕니다. (section의 크기는 RoI pooling의 output크기가 동일합니다.)&lt;/li&gt;
  &lt;li&gt;각각의 section마다 가장 큰 값을 찾습니다.&lt;/li&gt;
  &lt;li&gt;각각의 찾은 maximum값을 output 으로 만듭니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;region-of-interest-pooling-example&quot;&gt;Region of Interest Pooling Example&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://blog.deepsense.ai/region-of-interest-pooling-explained/&quot;&gt;링크&lt;/a&gt;에서 가져온 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;예를 들어서 8 x 8 형태의 feature map을 다음과 같이 있다고 가정합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-roi-pooling1.jpg&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Region proposal의 값은 (0, 3), (7, 8) 일때 다음과 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-roi-pooling2.jpg&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;실제로는 수십~수천장의 feature maps을 갖고 있겠지만, 예제에서는 문제를 간단하게 하기 위해서 1개의 feature map만 있다고 가정을 합니다.&lt;/p&gt;

&lt;p&gt;Section의 크기 2 x 2 로 region proposal을 아래와 같이 나눕니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-roi-pooling3.jpg&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에서 보다시피 section의 크기는 모두 동일할 필요는 없습니다. 다만 크기가 거의 동일하기만 하면 됩니다.&lt;/p&gt;

&lt;p&gt;Max values를 끄집어 내면 다음과 같은 output이 생성이 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-roi-pooling4.jpg&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;물론 Region of Interest Pooling을 사용할수도 있지만 아래쪽에 더 쉽게 구현 가능한 방법을 아래에 “Fixed-size Resize instead of ROI Pooling” 이름으로 정리해놨습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;training&quot;&gt;Training&lt;/h1&gt;

&lt;h2 id=&quot;loss-function&quot;&gt;Loss Function&lt;/h2&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;L(\{p_i\}, \{t_i\}) = \frac{1}{N_{cls}} \sum_i L_{cls} (p_i, p^*_i) + \lambda \frac{1}{N_{reg}} \sum_i p^*_i L_{reg} (t_i, t^*_i)&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt; : mini-batch 안에서의 anchor의 index&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;p_i&lt;/script&gt; : anchor &lt;script type=&quot;math/tex&quot;&gt;i&lt;/script&gt; 가 객체인지 배경인지의 예측값&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;p^*_i&lt;/script&gt; : ground-truth label 로서 1이면 해당 anchor가 positive(객체)라는 뜻이고, 0이면 negative(배경)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;t_i&lt;/script&gt; : 4개의 bounding box의 값을 갖고 있는 벡터&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;t^*_i&lt;/script&gt; : ground-truth box 로서 positive anchor와 관련되어 있다.&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;L_{cls}&lt;/script&gt;  : log loss (object 냐 또는 아냐냐.. 두 클래스간의 손실 함수)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;L_{reg}&lt;/script&gt; : smooth l1 loss function (오직 positive anchors &lt;script type=&quot;math/tex&quot;&gt;p^*_i = 1&lt;/script&gt; 에만 사용됨.)&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_{cls}&lt;/script&gt; : normalization. mini-batch 크기와 동일 (i.e. &lt;script type=&quot;math/tex&quot;&gt;N_{cls} = 256&lt;/script&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;N_{reg}&lt;/script&gt; : normalization. anchor locations의 갯수와 동일 (i.e. &lt;script type=&quot;math/tex&quot;&gt;N_{reg} \sim 2400&lt;/script&gt; )&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; : 기본값으로 10 (목표는 cls 그리고 reg 둘다 거의 동등하게 가중치를 갖도록. 이 값에 따라서 학습의 결과가 매우 달라질수 있다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;N_{reg}&lt;/script&gt; 는 Smooth L1 function의 공식을 사용합니다.
Smooth L1의 경우 L1과 동일하지만, error의 값이 충분히 작을 경우 거의 맞는 것으로 판단하며, loss값은 더 빠른 속도로 줄어들게 됩니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\text{smooth}_{L1}(x) = \begin{cases} 0.5 x^2 &amp; \text{if } |x| \lt 1 \\ |x| - 0.5 &amp; \text{otherwise} \end{cases} %]]&gt;&lt;/script&gt;

&lt;h2 id=&quot;training-rpn&quot;&gt;Training RPN&lt;/h2&gt;

&lt;p&gt;하나의 이미지에서 random 으로 256개(batch 크기)의 anchors를 샘플링합니다.
이때 positive anchors(객체)와 negative anchors(배경)의 비율은 1:1이 되도록 합니다. 만약 그냥 랜덤으로 진행시,
negative anchors의 갯수가 더 많기 때문에 학습은 어느 한쪽으로 편향되게 학습이 될 것입니다.&lt;/p&gt;

&lt;p&gt;하지만 현실적으로 1:1 비율을 지속적으로 유지시키는 것은 매우 어렵습니다. 대부분의 경우 positive samples의 갯수가 128개를 넘지 못하는 경우인데,
이 경우 zero-padding을 시켜주거나, 아예 없는 경우는 IoU값이 가장 높은 값을 사용하기도 합니다.&lt;/p&gt;

&lt;p&gt;페이퍼에서는 추가되는 새로운 레이어의 weights값은 0 mean, 0.01 standard deviation을 갖고 있는 gaussian distribution으로 부터 초기화를 합니다
(BaseNet 에 해당되는 ImageNet 을 제외, 즉 pre-trained model을 사용하기 때문에).
Learning rate의 경우 처음 60k mini-batches에 대해서는 0.001, 그 다음 20k mini-batches에 대해서는 0.0001을 PASCAL VOC dataset에 적용을 합니다.&lt;/p&gt;

&lt;h1 id=&quot;processing-tips&quot;&gt;Processing Tips&lt;/h1&gt;

&lt;h2 id=&quot;non-maximum-suppression&quot;&gt;Non-Maximum Suppression&lt;/h2&gt;

&lt;p&gt;Faster R-CNN에 대한 학습이 완료된 후, RPN 모델을 예측시키면 아마도 한 객체당 여러개의 proposals (bounding boxes) 값을 얻을 것 입니다. 이유는 anchors자체가 어떤 객체에 중복이 되기 때문에 proposals 또한 여러개가 되는 것 입니다.&lt;/p&gt;

&lt;p&gt;문제를 해결하기 위해서 non-maximum suppression (NMS) 알고리즘을 사용해서 proposals의 갯수를 줄이도록 합니다. NMS를 간단히 설명하면 먼저 IoU값으로 proposals을 모두 정렬시켜놓은뒤,  RoI점수가 가장 높은 proposal과 다른 proposals에 대해서 overlapping을 비교한뒤 overlapping이 높은 것은 특정 threshold이상이면 지워버리며 이 과정을 iterate돌면서 삭제시킵니다.&lt;/p&gt;

&lt;p&gt;직관적으로 설명하면 RoI가 높은 bounding box가 있는데.. 이 놈하고 overlapping 되는 녀석들중 특정 threshold이상이면 proposals에서 삭제시켜버리는 형태입니다. 그러면 서로 오버랩은 되지 않으면서 RoI가 높은 녀석들만 남게 됩니다.&lt;/p&gt;

&lt;p&gt;일반적으로 threshold의 값은 0.6~0.9 정도로 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/faster-rcnn-nms-algo.jpg&quot; class=&quot;img-responsive img-rounded mx-auto d-block img-fluid&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NMS 는 training시에도 학습 속도를 높이기 위해서 사용 할 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;roi-removed-model&quot;&gt;ROI-Removed Model&lt;/h2&gt;

&lt;p&gt;만약 구분해야 될 클래스가 1개밖에 없을때는 RPN만 사용해서 구현이 가능합니다.
객체인지 아니면 배경인지를 구분하는 classifier자체를 사용해서 클래스를 구별해주면 됩니다.&lt;/p&gt;

&lt;p&gt;비젼에서 가장 대표적인 예가 face detection 그리고 text detection등이 있습니다.
RPN만 사용하게 됨으로 당연히 training 그리고 inference의 속도는 매우 빨라지게 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;fixed-size-resize-instead-of-roi-pooling&quot;&gt;Fixed-size Resize instead of ROI Pooling&lt;/h2&gt;

&lt;p&gt;Region of Interest Pooling 대신 object detection을 실제 구현할때 그냥 더 많이 쓰이고 쉬운 방법이 있습니다.
각각의 convolutional feature map을 각각의 proposal로 crop을 시킨뒤에, copped된 이미지를 고정된 크기 14 x 14 x depth 로 interpolation (보통 bilinear)을 사용하여 resize 시킵니다. 이후 2 x 2 kernel을 사용하여 7 x 7 x depth 형태의 feature map으로 max pooling시켜줍니다.&lt;/p&gt;

&lt;p&gt;위에서 사용된 크기나 값들은 그 다음에 사용될 block (보통 fully-connected dense layer)에 따라서 결정됨으로 다양하게 바뀔수 있습니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Mar 2018 01:00:00 +0000</pubDate>
        <link>http://incredible.ai/deep-learning/2018/03/17/Faster-R-CNN/</link>
        <guid isPermaLink="true">http://incredible.ai/deep-learning/2018/03/17/Faster-R-CNN/</guid>
        
        <category></category>
        
        
        <category>deep-learning</category>
        
      </item>
    
      <item>
        <title>Linear Programming</title>
        <description>&lt;h1 id=&quot;anderson-공장-예제&quot;&gt;Anderson 공장 예제&lt;/h1&gt;

&lt;p&gt;바로 예제를 통해서 배워보도록 하겠습니다. &lt;br /&gt;
Anderson 공장은 로보트를 만드는 공장이며, 로봇팔 A 그리고 로봇다리 B 를 생산합니다. &lt;br /&gt;
여기 회장 Anderson은 A 와 B를 얼마만큼 생산했을때 분기별 가장 큰 이익을 얻는지를 알고 싶어합니다.&lt;/p&gt;

&lt;p&gt;다만 여기에는 다음과 같은 제약사항들이 있습니다. &lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;두 제품 모두 CPU가 필요합니다. 공급자로 부터 분기마다 받을 수 있는 최대 물량은 10,000개 입니다.&lt;/li&gt;
  &lt;li&gt;두 제품 모두 SSD가 필요합니다. A에는 SSD 1개 그리고 B에는 SSD 2개가 필요하며 확보가능 물량은 15,000개 입니다.&lt;/li&gt;
  &lt;li&gt;제품생산에는 시간이 소요됩니다. A는 4분, B는 3분이 걸리며, 각 분기별 가용시간은 25,000분 입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;제품 A는 750달러 그리고 제품 B는 1000달러에 판매가 되고 있습니다. &lt;br /&gt;
자 다시 질문을 하자면.. “다음 분기에 Anderson 공장은 각각의 제품을 몇개씩 생산을 해야지 최대의 이익을 내는지 알고자 합니다.”&lt;/p&gt;

&lt;h2 id=&quot;modeling&quot;&gt;Modeling&lt;/h2&gt;

&lt;p&gt;어떤 문제를 linear programming으로 모델링 하기 위해서는 몇가지 조건들을 만족시켜줘야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Decision Variables&lt;/strong&gt;: 여기 예제에서는 제품 A의 갯수, 제품 B의 갯수라고 생각하면 되며, &lt;script type=&quot;math/tex&quot;&gt;x_1&lt;/script&gt; 그리고 &lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt; 로 나타낼수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Objective&lt;/strong&gt;: 모든 linear program 에는 objective가 존재하며 minimized 되거나 maximized 됩니다. &lt;br /&gt;objective는 반드시 linear해야 합니다. 즉.. decision variables의 상수곱의 합이 되어야 합니다. &lt;br /&gt;예를 들어 &lt;script type=&quot;math/tex&quot;&gt;3x_1 - 10x_2&lt;/script&gt; 는 linear function 입니다. 하지만 &lt;script type=&quot;math/tex&quot;&gt;x_1 x_2&lt;/script&gt; 는 linear이 아닙니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Constraints&lt;/strong&gt;: 예제에서는 CPU, SSD, 소요시간, Non-negativity 의 제약조건들이 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;최종적인 모델의 공식은 다음과 같습니다.&lt;br /&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\max_{(profit)} \text{profit}  =  750 x_1 + 1000 x_2&lt;/script&gt;

&lt;p&gt;제약조건은 다음과 같습니다. (1000 단위는 -&amp;gt; 1로 나타냅니다.)&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
x_1 + x_2 &amp;\le 10 &amp; \text{CPU} \\
x_1 + 2x_2 &amp;\le 15 &amp; \text{SSD} \\
4x_1 + 3x_2 &amp;\le 25 &amp; \text{Assembly time} \\
x_1 &amp;\ge 0 &amp; \text{제품 A 갯수} \\
x_2 &amp;\ge 0 &amp; \text{제품 B 갯수} \\
\end{align} %]]&gt;&lt;/script&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt; : Objective function에 들어가는 coefficients로서 n x 1 매트릭스 형태입니다. &lt;br /&gt; &lt;script type=&quot;math/tex&quot;&gt;\min_{(x_1, x_2)} 2x_1 + x_2&lt;/script&gt; 라면 C값을 [2, 1] 로 설정하면 됩니다. &lt;br /&gt;만약 maximize하고자 한다면 음수로 곱해주면 됩니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;G&lt;/strong&gt; : G는 제약조건의 coefficients 로서 m x n 매트릭스입니다. &lt;br /&gt; &lt;script type=&quot;math/tex&quot;&gt;G*x \le h&lt;/script&gt; 이므로 G 와 h 에 음수로 곱해주면 &lt;script type=&quot;math/tex&quot;&gt;-G*x \ge -h&lt;/script&gt; 로 바뀌게 됩니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; : H는 G와 연동이 되는데 &lt;script type=&quot;math/tex&quot;&gt;G*x \le h&lt;/script&gt; 에서 우측항에 해당이 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;cvxopt&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solvers&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;750.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1000.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;H&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;10.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;15.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solvers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[최대 이익 생산]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'제품 A: {a}개'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'제품 B: {b}개'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[최대 이익 생산]
제품 A: 1000개
제품 B: 7000개&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;마케팅-비용-예제&quot;&gt;마케팅 비용 예제&lt;/h1&gt;

&lt;p&gt;Anderson 마케팅 회사는 TV광고 그리고 온라인에 마케팅 캠패인을 진행하려고 합니다.&lt;br /&gt;
다음의 도표는 비용당 다음의 유저 segment에 광고가 노출되고 앱을 다운로드 받게 됩니다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;매체&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;10대&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;20대&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;30대&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;비용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TV&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;5명&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;1명&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3명&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;60$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;온라인&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;2명&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;6명&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3명&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;50$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;목표 (앱 다운로드)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;24&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;18&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;24&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Decision Variables&lt;/strong&gt;: TV광고 &lt;script type=&quot;math/tex&quot;&gt;x_1&lt;/script&gt; 그리고 인터넷광고 &lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt; 2개로 나뉩니다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Objective&lt;/strong&gt;: CPA(Cost per Acquisition)기준으로 &lt;script type=&quot;math/tex&quot;&gt;60 x_1 + 50 x_2&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Constraints&lt;/strong&gt;: 각각의 나이별 다운로드 목표를 만족시켜야 하며, 비용은 최소한으로 써야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;공식은 다음과 같이 될 수 있습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\min_{\text{acquisition}} 60 x_1 + 50 x_2&lt;/script&gt;

&lt;p&gt;제약조건은 다음과 같습니다.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
5x_1 + 2x_2 &amp;\ge 24 &amp; \text{10대} \\
x_1 + 6x_2 &amp;\ge 18 &amp; \text{20대} \\
3x_1 + 3 x_3 &amp;\ge 24 &amp; \text{30대} \\
x_1 &amp;\ge 0 &amp; \text{TV} \\
x_2 &amp;\ge 0 &amp; \text{온라인} \\
\end{align} %]]&gt;&lt;/script&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;60.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;50.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;H&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;24.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;18.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;24.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solvers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;조건을 만족시키는 최소한의 캠페인 집행 비용'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TV광고 비용:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{a}$'&lt;/span&gt;&lt;span clas