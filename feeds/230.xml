<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Moving Bear</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>https://roamgom.github.io/</link>
    <description>roamgom's memory</description>
    <pubDate>Tue, 12 Mar 2019 08:42:45 +0000</pubDate>
    
      <item>
        <title>htop 사용하기</title>
        <link>/2018/04/17/htop-usage.html</link>
        <guid isPermaLink="true">/2018/04/17/htop-usage.html</guid>
        <description>&lt;h1 id=&quot;top&quot;&gt;top&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-04-17/top.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;보통 &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;을 리눅스에서 프로세스 관리자로 많이 사용&lt;/p&gt;

&lt;p&gt;기본 명령어로 딸려와 사용하기 나쁘지 않지만&lt;/p&gt;

&lt;p&gt;이보다 보기 좋게 출력해주는..&lt;/p&gt;

&lt;h1 id=&quot;htop&quot;&gt;htop&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;설치&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; htop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;실행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;htop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;실행화면&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-04-17/htop.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;cpu 코어 당 사용량, 메모리 등&lt;/p&gt;

&lt;p&gt;사용자가 보기 쉽게 나타내준다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;결론&lt;/strong&gt;: htop &amp;gt; top&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Apr 2018 12:00:00 +0000</pubDate>
      </item>
    
      <item>
        <title>[Django] ForeignKey와 OneToOneField의 차이</title>
        <link>/2018/03/27/Django-ForeignKey-OneToOneField.html</link>
        <guid isPermaLink="true">/2018/03/27/Django-ForeignKey-OneToOneField.html</guid>
        <description>&lt;h1 id=&quot;foreignkey와-onetoonefield-차이&quot;&gt;ForeignKey와 OneToOneField 차이&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5870537/whats-the-difference-between-django-onetoonefield-and-foreignkey&quot;&gt;Stackoverflow 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Django에서 Model을 설계할 때 많이 헷갈리는 ForeignKey와 OneToOneField&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ForeignKey(SomeModel, unique=True)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OneToOneField(SomeModel)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;이 둘의 차이는 reverse side of the relation, 즉, 역관계에 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;역관계&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# models.py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.db&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Charfield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
    

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Snippet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Charfield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForeignKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 모델에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Snippet&lt;/code&gt;은 ForeignKey인 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;값을 가지고 있기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;에 접근이 가능하다.&lt;/p&gt;

&lt;p&gt;역으로, &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Snippet&lt;/code&gt;에 접근하려면, &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;값을 가지는 ForeignKey가 없기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Snippet&lt;/code&gt;에 접근 가능한 &lt;strong&gt;snippet&lt;/strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_set&lt;/code&gt;을 사용해줘야한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;test_app.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Snippet&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Test 객체 생성&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'roamgom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snippet_in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Snippet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'코딩코딩'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snippet_in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 객체 호출&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snippet1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Snippet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roamgom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snippet1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Snippet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;코딩코딩&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 정방향 참조&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;snippet1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'roamgom'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 잘못된 참조&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snippet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'User'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'snippet'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 역방향 참조&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ForeignKey가 없는 모델에서는 model_set으로 접근해야 한다.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snippet_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'코딩코딩'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;ForeignKey와  OneToOneField&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;코드는 Stackoverflow의 모델을 그대로 가져왔다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# models.py&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.db&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__unicode__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OneToOneField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__unicode__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__unicode__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CharField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ForeignKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Engine2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__unicode__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래는 &lt;code class=&quot;highlighter-rouge&quot;&gt;python3 manage.py shell&lt;/code&gt;을 통해 실행해본 결과&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OneToOneField&lt;/code&gt; 예시&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;testapp.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Audi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Diesel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Audi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;blog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one_to_one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ForeignKey(unique=True)&lt;/code&gt; 예시&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;testapp.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Car2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Engine2&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Car2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Mazda'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Engine2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Wankel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;car2_set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Car2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Mazda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;car2_set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;django&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QuerySet&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;결국, OneToOneField로 연결해준 모델은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt; Object를 반환해주며, &lt;code class=&quot;highlighter-rouge&quot;&gt;Engine&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt;에 접근하기 위한 &lt;code class=&quot;highlighter-rouge&quot;&gt;_set&lt;/code&gt;을 사용할 필요가 없다.&lt;/p&gt;

&lt;p&gt;반면, &lt;code class=&quot;highlighter-rouge&quot;&gt;Car2&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Engine2&lt;/code&gt;의 경우, &lt;code class=&quot;highlighter-rouge&quot;&gt;Engine2&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;_set&lt;/code&gt;을 이용해야 &lt;code class=&quot;highlighter-rouge&quot;&gt;Car2&lt;/code&gt;에 접근할 수 있다. 그리고 반환되는 Type은 &lt;code class=&quot;highlighter-rouge&quot;&gt;QuerySet&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;용도&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OneToOne은 1개의 객체에 1개의 값만 가져야할 경우,
예를 들어, 유저당 하나의 블로그를 가지게 설계한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Blog&lt;/code&gt;가 있다면, 두개는 반드시 한번의 매칭만 이루어진다.&lt;/p&gt;

&lt;p&gt;Django에 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;auth.models&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt;를 오버라이딩하는 대신, 하나의 모델을 생성하여 Field를 추가하여 사용할 수도 있다.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Mar 2018 01:23:02 +0000</pubDate>
      </item>
    
      <item>
        <title>Markdown 작성하기(사용법)</title>
        <link>/2018/02/11/How_to_Markdown_kr.html</link>
        <guid isPermaLink="true">/2018/02/11/How_to_Markdown_kr.html</guid>
        <description>&lt;h1 id=&quot;markdown-작성하기&quot;&gt;Markdown 작성하기&lt;/h1&gt;

&lt;h2 id=&quot;마크다운이란&quot;&gt;마크다운이란?&lt;/h2&gt;

&lt;p&gt;Github, Github Pages에서 보는 README를 보면 모두 &lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.markdown&lt;/code&gt; 파일명으로 써져 있는걸 알 수 있습니다. 주로 기술 블로그 포스팅이나 프로젝트에 대한 설명을 써놓는게 대부분인데 특수기호, 문자를 이용하여 매우 간단한 문법으로 웹에서 빠른 컨텐츠 작성이 가능하죠. &lt;del&gt;Github 덕분이라 할수도..&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; 은 2004년 존 그루버에 의해 만들어 졌고, 플랫폼 상관없이 모든 에디터에서 작성이 가능합니다. 개발자들 사이에서 많이 쓰이는 Sublime Text, Atom, VSCode 같은 좋은 도구도 많지만 저는 &lt;a href=&quot;https://typora.io/&quot;&gt;&lt;strong&gt;typora&lt;/strong&gt;&lt;/a&gt; 를 적극! 추천합니다. (자세한 설명은 뒤에서 😀)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;우선 장단점부터 설명하자면&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;문법이 간결하다.&lt;/li&gt;
    &lt;li&gt;텍스트 형태로 저장되기 때문에 용량이 적고 관리하기 용이하다.&lt;/li&gt;
    &lt;li&gt;별도의 도구 없이 모든 에디터에서 작성가능하다.&lt;/li&gt;
    &lt;li&gt;지원하는 프로그램과 플랫폼이 다양하다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;단점&lt;/strong&gt;&lt;/p&gt;

  &lt;ol&gt;
    &lt;li&gt;표준이 지정되어 있지 않아 도구에 따라 변환방식이 달라 결과에 차이가 있다.&lt;/li&gt;
    &lt;li&gt;HTML의 모든 마크업을 표현하는데 부족하다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Github에서 오픈소스를 찾다보면, &lt;code class=&quot;highlighter-rouge&quot;&gt;README.md&lt;/code&gt; 의 내용은 우리가 매일보는 HTML 웹페이지로 보입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-02-11/tensorflow.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;이렇게 보이죠&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;‘문서를 HTML로 작성했네?’라고 생각할 수 있지만, 창에 보이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Raw&lt;/code&gt; 라는 버튼을 눌러보면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-02-11/tensorflow_md.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;생각한 것과 다르게 나오네요&lt;/em&gt; 🤔&lt;/p&gt;

&lt;p&gt;이는 Github에서 마크다운으로 작성한 파일을 HTML로 자동 렌더링해주기 때문입니다.&lt;/p&gt;

&lt;p&gt;이 덕분에 빠르게 Repository에 대한 문서와 블로그 글과 같은 게시물을 빠르게 작성할 수 있는겁니다.&lt;/p&gt;

&lt;p&gt;이제, 마크다운 문법을 알아보도록 하죠.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;마크다운-문법&quot;&gt;마크다운 문법&lt;/h2&gt;

&lt;h4 id=&quot;문단-구분&quot;&gt;문단 구분&lt;/h4&gt;

&lt;p&gt;기본적으로 마크다운은 모든 문법에서 문단 사이의 빈줄(엔터 두번)으로 구분합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;문단 하나

문단 둘
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;헤더headers&quot;&gt;헤더(Headers)&lt;/h4&gt;

&lt;p&gt;헤더는 HTML에서 쓰는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;, &amp;lt;h2&amp;gt;, ..., &amp;lt;h6&amp;gt;&lt;/code&gt; 와 같이 큰제목을 쓸 때 사용합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;큰제목&lt;/td&gt;
        &lt;td&gt;작은 제목&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;문서의 큰 제목입니다
=====================

문서의 작은 제목입니다
---------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;문서의-큰-제목입니다&quot;&gt;문서의 큰 제목입니다&lt;/h1&gt;

&lt;h2 id=&quot;문서의-작은-제목입니다&quot;&gt;문서의 작은 제목입니다&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;글머리&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# H1 제목
## H2 제목
### H3 제목
#### H4 제목
##### H5 제목
###### H6 제목
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;h1-제목&quot;&gt;H1 제목&lt;/h1&gt;

&lt;h2 id=&quot;h2-제목&quot;&gt;H2 제목&lt;/h2&gt;

&lt;h3 id=&quot;h3-제목&quot;&gt;H3 제목&lt;/h3&gt;

&lt;h4 id=&quot;h4-제목&quot;&gt;H4 제목&lt;/h4&gt;

&lt;h5 id=&quot;h5-제목&quot;&gt;H5 제목&lt;/h5&gt;

&lt;h6 id=&quot;h6-제목&quot;&gt;H6 제목&lt;/h6&gt;

&lt;h6 id=&quot;-h7은&quot;&gt;# H7은?&lt;/h6&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;문단&quot;&gt;문단&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;블럭인용구&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 블럭인용
&amp;gt;&amp;gt; 블럭 1
&amp;gt;&amp;gt;&amp;gt; - 내용 1-1
&amp;gt;&amp;gt;&amp;gt; - 내용 1-2
&amp;gt;&amp;gt; 블럭 2
&amp;gt;&amp;gt;&amp;gt; 내용 2-1
&amp;gt;&amp;gt;&amp;gt; 내용 2-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;블럭인용&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;블럭 1&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;내용 1-1&lt;/li&gt;
        &lt;li&gt;내용 1-2&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;블럭 2&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;내용 2-1&lt;/p&gt;

      &lt;p&gt;내용 2-2&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;강조&quot;&gt;강조&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;이탤릭체&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*이탤릭체* 또는 _이탤릭체_
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;이탤릭체&lt;/em&gt;  또는 &lt;em&gt;이탤릭체&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;굵은 글씨&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**굵은 글씨** 또는 __굵은 글씨__ 아니면 ***굵은 이탤릭체***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;굵은 글씨&lt;/strong&gt; 또는 &lt;strong&gt;굵은 글씨&lt;/strong&gt; 아니면 &lt;strong&gt;&lt;em&gt;굵은 이탤릭체&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;밑줄&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;u&amp;gt;밑줄&amp;lt;/u&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;u&gt;밑줄&lt;/u&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;취소선&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~취소선~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;del&gt;취소선&lt;/del&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;주석&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;한 부분[^1]에 주석을 달 수 있습니다.
예를 들면, 이렇게[^2] 말이죠.

---

[^1]: 어때요.
[^2]: 참 쉽죠?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;한 부분&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;에 주석을 달 수 있습니다.
예를 들면, 이렇게&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; 말이죠.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;구분선&quot;&gt;구분선&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
- - -
----------------
* * *
*****
***
가로선
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;hr /&gt;
&lt;p&gt;가로선&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;목록&quot;&gt;목록&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 목록(번호)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 첫번째 목록
2. 두번째 목록
3. 세번째 목록
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;첫번째 목록&lt;/li&gt;
  &lt;li&gt;두번째 목록&lt;/li&gt;
  &lt;li&gt;세번째 목록&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;※ &lt;strong&gt;기본 내림차순으로 작성됩니다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;순서 없는 목록(글머리)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* 목록
* 목록
	* 내용
	* 내용
		* 본문
			* 그 다음?
- 목록
- 목록
	- 내용
	- 내용
		- 본문
			- 그 다음?
* 목록
* 목록
	- 내용
		+ 본문
	- 내용
		+ 본문
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;목록&lt;/li&gt;
  &lt;li&gt;목록
    &lt;ul&gt;
      &lt;li&gt;내용&lt;/li&gt;
      &lt;li&gt;내용
        &lt;ul&gt;
          &lt;li&gt;본문
            &lt;ul&gt;
              &lt;li&gt;그 다음?&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;목록&lt;/li&gt;
  &lt;li&gt;목록
    &lt;ul&gt;
      &lt;li&gt;내용
        &lt;ul&gt;
          &lt;li&gt;본문&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;내용
        &lt;ul&gt;
          &lt;li&gt;본문&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;코드&quot;&gt;코드&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;코드 문맥, 블럭&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;탭(Tab) 1개 또는 공백 4개를 사용합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;​```
여러개의
코드 문맥
​```
`파일명 블럭` 또는 `변수명 블럭`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;여러개의
코드 문맥
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;파일명 블럭&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;변수명 블럭&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;언어 별 코드&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;​```python
def hola():
    print(&quot;Hola!&quot;)
hola()
​```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hola&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hola!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;hola&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;url-링크&quot;&gt;URL 링크&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;인라인(Inline) 링크&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Google 링크](https://google.com &quot;구글로 이동&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://google.com&quot;&gt;Google 링크&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;자동링크&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;https://roamgom.github.io/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://roamgom.github.io/&quot;&gt;https://roamgom.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;이미지&quot;&gt;이미지&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 링크&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![이미지 설명](/경로/이미지.jpg)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/roamgom.jpg&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미지 사이즈 조절&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img src=&quot;/경로/이미지.jpg&quot; width=&quot;가로&quot; height=&quot;세로&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/roamgom.jpg&quot; width=&quot;400&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;표테이블&quot;&gt;표(테이블)&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;표 만들기&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| 1 | 2 | 3 | 4 | 5 |
|---|---|---|---|---|
| a | b | c | d | e |
| f | g | h | i | j |
| k | l | m | n | o |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;e&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;f&lt;/td&gt;
      &lt;td&gt;g&lt;/td&gt;
      &lt;td&gt;h&lt;/td&gt;
      &lt;td&gt;i&lt;/td&gt;
      &lt;td&gt;j&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;k&lt;/td&gt;
      &lt;td&gt;l&lt;/td&gt;
      &lt;td&gt;m&lt;/td&gt;
      &lt;td&gt;n&lt;/td&gt;
      &lt;td&gt;o&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;테이블 생성하는데 시간이 많이 걸리네요.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tablesgenerator.com/markdown_tables&quot;&gt;&lt;strong&gt;이 사이트&lt;/strong&gt;&lt;/a&gt; 를 사용하면 쉽게 테이블을 생성할 수 있습니다 🤗&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;제가 알고 있는 마크다운 문법은 이렇게 정리되네요. &lt;del&gt;상당하쥬?&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;양은 많아 보이지만 막상 사용하다보면 충분히 적응할 수 있을거에요.&lt;/p&gt;

&lt;p&gt;자신이 배운 내용, 프로젝트에 대한 설명은 이제 마크다운 하나로 해결할 수 있습니다!!&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아, 앞서 추천한 &lt;a href=&quot;https://typora.io/&quot;&gt;&lt;strong&gt;typora&lt;/strong&gt;&lt;/a&gt; 에 대해 소개를 잊을뻔 했네요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;typora&quot;&gt;typora&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-02-11/typora.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;typora 사이트에 들어가서 특징을 보면 매우 특이합니다.&lt;/p&gt;

&lt;p&gt;앞서 얘기한 기본 마크다운 문법 뿐 아니라, 수식, 도표 같은 형식도 지원해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-02-11/typora_about.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;무엇보다 마음에 드는 부분은 마크다운 문서를 작성하면서 결과 화면을 같이 볼 수 있다는 점이네요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2018-02-11/typora_type.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;자, 이렇게 마크다운에 대한 문법을 알아보았으니&lt;/p&gt;

&lt;p&gt;모두 깃헙 문서와 블로그 글을 쓰러 가시죠! 😎&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;주석&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;어때요. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;참 쉽죠? &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 11 Feb 2018 23:45:02 +0000</pubDate>
      </item>
    
      <item>
        <title>RE: 2017</title>
        <link>/2017/12/31/RE-2017.html</link>
        <guid isPermaLink="true">/2017/12/31/RE-2017.html</guid>
        <description>&lt;h1 id=&quot;회고록&quot;&gt;회고록&lt;/h1&gt;

&lt;p&gt;회고록을 작성하기 전에 많은 고민을 했다. 올해 스스로 배운게 적다고 생각했고, 많이 부족한 상태에서 쓰면 큰 도움이 안될거라 생각했으나
평소에 일기조차 생각도 안하는 자신에게 적어도 1년 동안의 일을 적는게 후의 내게 되돌아 볼 기회를 주지 않을까 싶어 글로 남기게 되었다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2017&quot;&gt;&lt;strong&gt;2017&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&amp;lt; 월 별 정리 &amp;gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1월 : 전역, 남미 여행, 파이썬 공부 시작&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;2월 : 본격 공부시즌&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;3월 : 개강&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;4-6월 : 학교 생활, 각종 밋업&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;7-9월 : 파이썬 스터디 주도, 파이콘, 드론 제작, DRF스터디&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;10월 : 개강, 장고걸스 운영진 합류!, 깈헙&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;11-12월 : 첫 외주, 패캠 보조강사(크롤링)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;전역&quot;&gt;&lt;strong&gt;전역&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;정확히 전역날짜는 2016년 12월이었지만 당시 신년 직전에 사회로 복귀하니 새로운 시작을 생각하며 여러 목표를 세워보았다. (실행은…ㅎㅎ)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;남미-여행&quot;&gt;&lt;strong&gt;남미 여행&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;전역을 하자마자 엄마와 함께 남미 여행을 했다. 패키지 여행이 아니라 처음으로 혼자 계획을 세워본 의미있는 여행이었다. (더군다나 혼자 여행이 아니라 생각보다 힘들었다.)&lt;/p&gt;

&lt;p&gt;페루를 시작으로 볼리비아-칠레-아르헨티나까지(브라질도 있지만 고작 몇시간이었다.) 1월 3일부터 24일까지 총 22일로 다녀왔다.&lt;/p&gt;

&lt;p&gt;죽기 전 꼭 가봐야한다는 마추피추부터 우유니, 그리고 제일 인상깊었던 칠레의 푸콘, 이과수 폭포까지 정말 짧은 기간안에 많은 일정이었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/south_america.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;잘 찍힌건 다 뒤통수&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;마추피추 위에서 컵라면을 먹는다던지, 우유니 사막에서 방금이라도 옆에 벼락이 떨어질 것 같은 시커먼 폭우 속에서 지프로 이동한 것과 푸콘의 비야리카 화산 위에서 썰매를 타고 내려온 것까지… 상당히 하드코어했다.&lt;/p&gt;

&lt;p&gt;역시 난 조금 힘들어도 패키지보다는 배낭 여행이 훨씬 좋은 것 같더라.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;python-입문&quot;&gt;&lt;strong&gt;Python 입문&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;예전까지만해도 사용해 본 C, 베이직 계열 언어만 알고 있던 나에게 친구들의 좋은 약팔이(?) 덕에 &lt;code class=&quot;highlighter-rouge&quot;&gt;깐깐하게 배우는 파이썬 [by Zed A. Shaw]&lt;/code&gt;로 파이썬을 배우기 시작했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/learn_python_hard_way.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파이썬은 정말 신세계였다! 여태 본 코드와 다르게 눈에 촼 들어오는 코드부터 많은 패키지까지, 예전에 코딩을 할 때 지루해 하던 나의 표정은 어느새 웃고 있었다더라.&lt;/p&gt;

&lt;p&gt;무엇보다 각종 파이썬 세미나, 밋업을 통해 여러 사람들끼리 대화를 나누는 모습, 내용이 매우 흥미로웠다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;본격-공부-시작&quot;&gt;&lt;strong&gt;본격 공부 시작!&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/django.svg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파이썬 기초는 공부했겠다 싶을 무렵, “언어를 배웠으니 개발하셔야죠?” 라며 나에게 Django 프레임워크를 추천해 준 친구가 있었다.(&lt;del&gt;약팔이&lt;/del&gt;)&lt;/p&gt;

&lt;p&gt;고등학생 때 HTML과 CSS를 공부해봤지만 개발은 전혀 해보지 않았으니, 막상 배우려니 많이 두려웠다.&lt;/p&gt;

&lt;p&gt;그렇게 공부를 하는 중, 나에게 다가온 것은….&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;개-강&quot;&gt;&lt;strong&gt;개 강&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;정말 이때까지만 해도 개강이 좋다고 생각했다. 학교로 돌아와 배우는게 즐거울거라 기대하며 학기를 시작했다. 수업 내용은 재미있었다. 처음 사용해 본 DB, C++와 여러 이론까지 흥미로웠다. &lt;del&gt;응 과제&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;새로 가입한 동아리에서도 리버싱 스터디도 해보았지만 보안은 아직 흥미가 없더라.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;밋업&quot;&gt;&lt;strong&gt;밋업&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;하나를 제대로 공부하기 이전에 다른 사람들은 무엇을 공부하고, 개발하는지 알기 위해 커뮤니티 활동을 많이 알아보았다.
정말 거의 모든 개발 관련 세미나, 밋업은 다 신청해본 것 같다.
행사를 통해 정말 많은 분야를 보고 많은 사람도 만날 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/facebook.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;모임에 하였습니다 참여신청&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;파이썬-스터디--드론&quot;&gt;&lt;strong&gt;파이썬 스터디 + 드론&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;여름방학 직전에 동아리 사람을 모아 방학 기간에 스터디를 주도해보았다. 기초부터 패키지 사용까지 해보며 알려주는 동시에 스스로 복습할 수 있었다. 끝난 후에 많은 피드백과 앵콜까지 받았으니 매우 뿌듯 한 스터디였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/pycon2017.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;8월에 진행된 파이콘을 통해 컨퍼런스의 재미를 느낄 수 있었다. 처음 듣는 내용으로 관심을, 친구와 지인을 통해 또 다른 만남을 경험할 수 있는 기회였다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;???: 그래서 내년 파이콘 때 발표하셔야죠?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;교외로는 9월부터 DRF(Django REST Framework)스터디를 진행하여 나에게 또 다른 신선한 충격을 주었다. 아마도 여기서 Django의 진정한 매력을 느낀 것 같다.&lt;/p&gt;

&lt;p&gt;또한 방학기간에 소규모 프로젝트를 진행하게 되었다. 학교 주최로 이루어진 3D 프린터를 활용한 IOT 작품을 만드는 프로그램에서 친구들과 직접 기후측정용 드론을 만들어 날려보았다.&lt;/p&gt;

&lt;p&gt;출력과 구매를 통해 드론을 제작하며 나는 그 위에 쓰이는 센서 부분을 담당하게 되었다. 이 때 아두이노를 사용하여 온습도, 먼지, 기압센서등으로 측정한 값을 와이파이를 통해 폰 어플(Blynk)로 보내며 비행까지 성공적으로 마무리하였다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/drone.jpeg&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;난다요! 잘 난다요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;again-개x강&quot;&gt;&lt;strong&gt;Again.. 개X강&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;솔직히 이 기간이 나에게 가장 힘들면서도 많은 고민이 생긴 때였다. 막상 학교로 돌아와 배우며 개인 공부와 외부 스터디를 진행하다보니 역시 두마리 토끼를 둘 다 잡기 힘들더라.. &lt;del&gt;과제 ㅁㄴㅇㄹ&lt;/del&gt;
결국 외부 활동을 선택하고, 학교 공부는 수업만 열심히 들었다.
안녕 나의 학점 ㅠㅠ&lt;/p&gt;

&lt;p&gt;그래도 친구의 부탁으로 처음 Django로 간단한 PDF뷰어 사이트를 배포까지 해보며 다른 부분으로 성장을 할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;django-girls&quot;&gt;&lt;strong&gt;Django Girls&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/django_girls.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아마 올해 나에게 가장 의미를 가져다 준 커뮤니티가 아닐까.
처음에는 여성개발자를 대상으로 진행된 밋업을 시작으로 알게 되었다. 당시 있던 개발이란 단어가 포함된 모임은 있는대로 신청했던지라 신청 후 취소해야 하나 싶어 문의했는데 참여해도 된다는 답을 받아 행복했다.&lt;/p&gt;

&lt;p&gt;모임을 통해 개발 직군에서 있는 얘기를 많이 들을 수 있었고, 무엇보다 장고걸스의 가치관이 나와 많이 겹치는 게 마음에 들었다.&lt;/p&gt;

&lt;p&gt;이후 장고걸스의 모든 모임에 신청을 했고, 운 좋게 운영진으로 합류할 수 있었다. 더 많은 사람과 대화할 수 있고, 더 많이 배워갈 수 있음에 항상 감사하다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;geekhub&quot;&gt;&lt;strong&gt;GEEKHUB&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/geekhub.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;전역을 하고 올해 친구의 권유로 들어온 깈헙은 특정 목적보다는 서로 사상이 비슷한 친구끼리 편하게 대화를 나누며 외로움을 달래준 곳이다. 무엇보다 나에게 큰 버팀목이 되어준 친구들을 만날 수 있어 좋았다. &lt;del&gt;내 손발!&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;10월에 진행된 메이커페어에서 두 명의 친구가 만든 방탈출, 일명 &lt;code class=&quot;highlighter-rouge&quot;&gt;공대탈출&lt;/code&gt; 부스를 같이 운영하며 내년에는 나도 작품을 만들어 전시해보고 싶은 충동을 심어주었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-마무리-&quot;&gt;&lt;strong&gt;-마무리-&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;다른 사람들의 회고록을 읽어보면 나보다 더 많이 배우고 다들 실력이 뛰어난 분들이 많다.&lt;/p&gt;

&lt;p&gt;나는 올 한해가 내가 새로운 걸 배우는 해가 아닌 나 자신을 찾게 된, &lt;strong&gt;복귀와 시작의 해&lt;/strong&gt;라고 생각한다.
가끔 얘기를 나누다보면 혼자 너무 뒤쳐져 있다고 생각한다. 무엇보다, 나 스스로 평가하며 비판하고 피드백을 던지는 경향이 있어 방황한 적도 많다.&lt;/p&gt;

&lt;p&gt;다행인건 이러한 시기를 통해 내년을 위해 필요한 결정을 내릴 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;내년계획&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;&lt;strong&gt;휴학&lt;/strong&gt;
- 제일 큰 결정이라고 생각한다. 부족한 학교 공부와 개인 공부를 위해 필요하다고 생각하여 내린 결정이다.  그리고, 기간을 잡아 혼자 여행을 다녀올까 생각이다.
대략 계획은 시베리아 횡단 열차를 타고 유럽을 지나 미국을 들러 지구 한바퀴~&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;Django 그리고 ML&lt;/strong&gt;
- 제일 중점적으로 공부할 부분은 Django와 ML이 될 것 같다. 목표는 학교 학생들을 대상으로 서비스 하나 런칭과 ML을 활용한 이미지 인식 앱 제작이다. 이에 필요한 수학 공부도 진행할 예정이다.&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;기타 공부(토플 등)&lt;/strong&gt;
- 실은 휴학을 하여 가장 먼저 생각한 공부가 토플 이었다. 아무래도 교환학생을 가보는게 좋은 경험이 되지 않을까 싶어 어느정도의 점수를 취득해 놓으려 한다.&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;막상 글을 다 쓰고 돌아보니 생각보다 많은 일들이 지나갔다. 글을 통해 스스로 되돌아 보는게 생각보다 나 자신에게 많은 것을 느끼게 해준 것 같다.&lt;/p&gt;

&lt;p&gt;부디 내년 한해도 모두 건강하고 즐겁게 보낼 수 있기를 기원하며&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-12-31/happy_new.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;-FIN-&lt;/p&gt;
</description>
        <pubDate>Sun, 31 Dec 2017 23:59:59 +0000</pubDate>
      </item>
    
      <item>
        <title>What is gist?</title>
        <link>/2017/09/30/what_is_gist.html</link>
        <guid isPermaLink="true">/2017/09/30/what_is_gist.html</guid>
        <description>&lt;h1 id=&quot;gist란&quot;&gt;gist란?&lt;/h1&gt;

&lt;p&gt;커뮤니티나 채팅방에 자신이 만든 코드에 대해 피드백을 받으려는 경우, 대부분 작성한 코드를 전부 복사하여 그대로 붙여넣는 경우가 많습니다.&lt;/p&gt;

&lt;p&gt;이는 보는 입장에서 가독성이 매우 떨어지고, 채팅방에서 피드백을 원할하게 전달하는데 어려움을 겪죠.&lt;/p&gt;

&lt;p&gt;Github에서 지원해주는 Gist를 사용하면 이 모든 걸 편하게 해결할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-30/gist_page.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gist 주소 : https://gist.github.com/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;gist는 주로 오픈소스, 또는 프로젝트를 진행할 때 서로 작성한 코드를 공유하거나 피드백을 요구할 때 자주 쓰입니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;gist의-장점&quot;&gt;gist의 장점&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;확장자(python의 경우 .py / C++의 경우 .cpp .h)에 따라 작성한 code에 syntax highlight를 적용시켜 줍니다.&lt;/li&gt;
  &lt;li&gt;작성한 코드에 대해 comment를 작성하여 피드백을 즉시 받을 수 있습니다.&lt;/li&gt;
  &lt;li&gt;코드를 단순히 url을 공유하는 걸 넘어, 블로그의 글에 embed하여 작성할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;Markdown 문법을 지원합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;음.. 아직은 무슨 말인지 이해가 안될수도 있지만…
이 글을 통해 gist에 대해 완벽하게 짚고 넘어가시길 바랍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-30/gist_info.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gist main page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Gist description - 자신이 작성한 코드에 대해 간단한 설명을 기재합니다.&lt;/li&gt;
  &lt;li&gt;Filename - 자신이 작성할 파일명입니다. 확장자까지 입력해줘야 syntax highlight가 처리됩니다.&lt;/li&gt;
  &lt;li&gt;코드 입력부분은 자신이 사용한 언어에 따라 highlight가 자동 처리됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;예를 들어, python에서 “hello world!”를 입력할 경우,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-30/gist_write.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;처럼 입력을 한 뒤, public gist로 저장을 합니다.&lt;/p&gt;

&lt;p&gt;검색을 통해 열람할 수 있는 public gist와 달리, secret gist는 URL만을 통해 열람할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이렇게 gist를 생성하면..&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-30/gist_post_info.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;제가 사용한 python 언어에 따라 syntax highlighting이 처리된 코드가 나옵니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Embed - 블로그 혹은 카페의 글에 해당 코드를 포함하고 싶을때, embed 코드로 넣을 수 있습니다.&lt;/li&gt;
  &lt;li&gt;comment - 자신 혹은 다른 사람이 해당 코드에 대해, 피드백 또는 설명을 넣을 수 있습니다. (코드 작성할 때와 동일합니다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;만약, 자신이 코드 파일의 형태가 아니라 설명과 코드를 같이 넣고 싶다 하는 분은 &lt;strong&gt;Markdown&lt;/strong&gt; 양식을 통해 gist를 올려도 무방합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-30/write_markdown.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;gist 작성&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-30/write_markdown_result.png&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;작성한 글 형태&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;하지만&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;저는 위에는 코드 파일로 기재를 하고, comment와 주석을 통해 추가 설명을 하는게 편합니다만..&lt;/p&gt;

&lt;p&gt;선택은 스스로 편한 방식으로 사용하시면 될것 같습니다.  ^_^&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Sep 2017 11:30:00 +0000</pubDate>
      </item>
    
      <item>
        <title>pip list --format=(legacy|columns) 경고 해결하기</title>
        <link>/2017/09/19/pip_list_warning.html</link>
        <guid isPermaLink="true">/2017/09/19/pip_list_warning.html</guid>
        <description>&lt;h1 id=&quot;pip-list-출력-포맷-방식-변경&quot;&gt;pip list 출력 포맷 방식 변경&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Python3.6&lt;/strong&gt;에서 pip를 사용하다보면&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DEPRECATION:The default format will switch to columns in the future. You can use --format=(legacy|columns) (or define a format=(legacy|columns) in your pip.conf under the [list] section) to disable this warning.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이라는 문구가 뜨면서 설치된 패키지의 리스트가 나온다.&lt;/p&gt;

&lt;p&gt;매우 보기 싫은 문구이다. 고쳐보자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;1-디렉토리-생성하기&quot;&gt;1. 디렉토리 생성하기&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Mac / Linux 동일&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir -p $HOME/.pip
$ vi $HOME/.pip/pip.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;.pip 디렉토리를 만들어주고, pip.conf파일 생성&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[global]
timeout = 60

[freeze]
timeout = 10

[list]
format = (legacy | columns)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 내용을 안에 기재해준다.
format에서 legacy 또는 columns 형식을 정해주면 된다.
(개인적으로 columns가 마음에 든다)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;legacy의 경우&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;= 200px&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/img_src/post/2017-09-19/legacy.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;columns의 경우&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-09-19/columns.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 &lt;code class=&quot;highlighter-rouge&quot;&gt;pip list&lt;/code&gt;를 입력하면 깔끔하게 잘 나온다.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Sep 2017 13:00:00 +0000</pubDate>
      </item>
    
      <item>
        <title>Sulime / VScode를 Terminal로 열어보자</title>
        <link>/2017/09/19/Editor_on_Terminal.html</link>
        <guid isPermaLink="true">/2017/09/19/Editor_on_Terminal.html</guid>
        <description>&lt;p&gt;다들 코딩을 하다보면, 터미널과 IDE를 왔다리 갔다리 하는게 일상일거라 생각하며 터미널에서 편집기를 열어보는 방법을 작성해봅니다.&lt;/p&gt;

&lt;h2 id=&quot;vscode&quot;&gt;VScode&lt;/h2&gt;

&lt;p&gt;정말 간단합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;VScode를 열어주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;⇧⌘P&lt;/code&gt;로 Command Palette를 열어주고&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; shell command: Install 'code' command in PATH&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;를 통해 PATH에 code 명령어를 설치해줍니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 터미널에서 원하는 디렉토리에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;code .&lt;/code&gt;을 입력하면 뙇!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sublime-text&quot;&gt;Sublime Text&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;디렉토리 생성&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir ~/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Sublime 실행경로 복사&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ln -s &quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&quot; ~/bin/subl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sublime 앱의 명칭을 Finder를 통해 정확히 기재해주셔야합니다.&lt;/strong&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;Applications/서브라임_이름.app/...&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런식으로~&lt;/p&gt;

&lt;p&gt;다음은 터미널을 뭘 쓰냐에 따라 방식이 나눠집니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;1-bash를-쓸-경우&quot;&gt;1. Bash를 쓸 경우&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/.bash_profile 파일에 복사&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo 'export PATH=$PATH:$HOME/bin' &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sublime을 기본 에디터로 설정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;export EDITOR='subl' -w&quot;&amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-zsh를-쓸-경우&quot;&gt;2. Zsh를 쓸 경우&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;~/.zshrc 파일에 복사&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo 'export PATH=$PATH:$HOME/bin' &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sublime을 기본 에디터로 설정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;export EDITOR='subl' -w&quot; &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;자 모든 설정이 끝났습니다!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;터미널 재시작 후&lt;/p&gt;

&lt;p&gt;자신이 열고 디렉토리에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;subl .&lt;/code&gt;이라고 입력하면&lt;/p&gt;

&lt;p&gt;바로 서브라임이 사용가능합니다~~~	    ‘\(- 3-)/`&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Sep 2017 13:00:00 +0000</pubDate>
      </item>
    
      <item>
        <title>OhMyZsh로 터미널 꾸미기</title>
        <link>/2017/08/10/OhMyZsh_Decoration.html</link>
        <guid isPermaLink="true">/2017/08/10/OhMyZsh_Decoration.html</guid>
        <description>&lt;h2 id=&quot;published-true&quot;&gt;published: true&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span style=&quot;color:red&quot;&gt; &lt;strong&gt;MacOS / Linux ONLY&lt;/strong&gt; &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;span style=&quot;color:red&quot;&gt; 이 가이드는 MacOS에서 작성했습니다. &lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
맥과 리눅스에서 개발용으로 터미널을 많이 사용하게 됩니다. 처음 터미널을 접했을 때, 사용방법은 물론이고 화면을 보는게 매우 불편했습니다…&lt;/p&gt;

&lt;p&gt;그래서 좀더 예쁜 터미널로 꾸미기 위해 Bash 대신 Zsh를 사용하기 시작!
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;iterm2-설치&quot;&gt;iTerm2 설치&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Mac OS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mac에서 쓰이는 터미널 iTerm2를 먼저 설치를 해주세요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-08-10/iterm2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.iterm2.com/downloads.html&quot;&gt;Official Download Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Stable Releases&lt;/strong&gt;에서 가장 최신을 받아주시면 됩니다.
.zip파일을 열고 iTerm2를 응용프로그램으로 옮겨주세요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;homebrew-설치&quot;&gt;HomeBrew 설치&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Mac OS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ubuntu에 APT가 있다면 Mac에는 HomeBrew가 있다!&lt;/p&gt;

&lt;p&gt;APT와 마찬가지로 각종 프로그램 패키지를 관리해주는 프로그램입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt; 명령어로 패키지를 관리합니다.
&lt;img src=&quot;/img_src/post/2017-08-10/homebrew.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://brew.sh/&quot;&gt;Official Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;설치 명령어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ /usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;brew-사용법-link&quot;&gt;Brew 사용법 &amp;lt;link#&amp;gt;&lt;/h4&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;zsh-설치&quot;&gt;Zsh 설치&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Mac OS / Linux&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shell 종류는 다양합니다. Bash, sh, csh, ksh…
그 중 우리가 사용할 쉘은 바로 Zsh입니다!
&lt;img src=&quot;/img_src/post/2017-08-10/zsh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;왜 Zsh를 쓰냐고요?&lt;/p&gt;

&lt;p&gt;Zsh 는 Bash에 비해 확장성이 뛰어납니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;cd/ls 자동완성
&lt;code class=&quot;highlighter-rouge&quot;&gt;$ cd / ls &amp;lt;TAB&amp;gt;&lt;/code&gt; 사용 시 현재 Directory를 표시해줘 빠른 이동이 가능하다.
&lt;img src=&quot;/img_src/post/2017-08-10/cd_completion.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;history 검색
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Ctrl&amp;gt;+R&lt;/code&gt; 을 통해 이전에 쓴 명령어를 쉽게 찾을 수 있다.
&lt;img src=&quot;/img_src/post/2017-08-10/find_command.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 외에 많은 &lt;a href=&quot;https://code.joejag.com/2014/why-zsh.html&quot;&gt;이유&lt;/a&gt;가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;하지만 제일 중요한 이유!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-08-10/zsh_pretty.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-08-10/pretty.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위에서 설치한 &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt;를 통해 zsh를 설치합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;설치 명령어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ brew install zsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;자 그러면 이렇게 예쁜 쉘을 만들어봅시다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
***&lt;/p&gt;

&lt;h3 id=&quot;oh-my-zsh&quot;&gt;Oh-My-Zsh&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Mac OS / Linux&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OhMyZsh는 Zsh에 각종 Plugin과 Theme을 적용시켜주는 Framework입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-08-10/ohmyzsh_logo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ohmyz.sh/&quot;&gt;Official Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;설치 명령어&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;설치가 완료되면&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img_src/post/2017-08-10/ohmyzsh.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;멋진 로고가 나타납니다.&lt;/p&gt;

&lt;p&gt;마지막으로 테마와 폰트를 설정해줘야겠죠?
테마에는 여러 종류가 있으니 마음에 맞는 테마를 고르세요!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/themes&quot;&gt;Theme Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;테마 설정&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이제 원하는 테마를 적용해야겠죠?&lt;/p&gt;

&lt;p&gt;설정을 해주기 위해 .zshrc파일을 열어줍니다. (Sublimetext3, Atom, vim 등)&lt;/p&gt;

&lt;p&gt;vim으로 열 경우&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vim ~/.zshrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;파일에서 10번 줄에 있는 설정이 바로 테마를 정해주는 부분입니다.
&lt;img src=&quot;/img_src/post/2017-08-10/zshrc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ZSH_THEME=&amp;quot;THEME_NAME&amp;quot;```&quot;&gt;
THEME_NAME에 원하는 테마 이름을 입력하고 iTerm2를 재부팅 해주면 해당 테마가 적용됩니다.
제가 사용하고 있는 Zsh테마는 `agnoster`입니다.

&amp;lt;br&amp;gt;

**폰트/색테마 설정**

폰트를 설정해주려면 우선 폰트 파일이 필요합니다.
구글링해서 원하는 폰트를 설치해도 무방하지만 이번 가이드에서는 링크를 통해 설정합시다.


* [Font Link](https://www.slant.co/topics/67/~best-programming-fonts)

&amp;lt;br&amp;gt;

**설치가 완료되면 iTerm을 종료하고 다시 실행시켜 주세요. 설정에서 설치한 폰트를 로드하지 못할 수 있습니다.**

&amp;lt;br&amp;gt;

iTerm을 다시 실행하고 메뉴창에서
*iTerm2-Preferences...*

![](/img_src/post/2017-08-10/preferences.png)

*Profiles-Default-Text-Change Font*
로 들어가서 Collection을 **고정폭**으로 설정해주세요. 그리고 Family에서 해당 폰트를 선택해주세요.
(안그러면 시스템 상 설치된 모든 폰트가 나와요)

![](/img_src/post/2017-08-10/preferences_text.png)

자 이제는 **색테마**차례군요.
색테마는 현재 적용한 Zsh테마에서 폰트 색상 및 배경을 따로 설정해주는거라 보시면 돼요.

테마는 구글에서 `itermcolors`로 검색해서 마음에 드는 걸로 설치하면 됩니다.

제가 마음에 들었던 테마 링크를 올려드릴게요.

&amp;lt;br&amp;gt;

![](/img_src/post/2017-08-10/facebook.png)

* [Facebook-iterm-Theme](https://github.com/slwen/facebook-iterm-theme)

![](/img_src/post/2017-08-10/oceanic.png)

* [Oceanic-next-theme](https://github.com/mhartington/oceanic-next-iterm)

이제 불러오기만 하면 끝나겠군요.

폰트를 설정했을때와 동일하게
*iTerm2-Preferences...*

![](/img_src/post/2017-08-10/preferences.png)

*Profiles-Default-Colors-Color Presets...* 에서 *Import...* 로 해당 파일을 불러와 적용하면 끝납니다.

![](/img_src/post/2017-08-10/preferences_color.png)


&amp;lt;br&amp;gt;

***
### zsh-syntax-highlighting
&amp;gt; Mac OS / Linux

zsh-syntax-highlighting은 시스템 PATH에 등록된 명령어들을 알아서 Syntax처리 해주는 친구입니다.
한번에 명령어의 가능 여부를 확인할 수 있죠.

![](/img_src/post/2017-08-10/zsh_syntax.png)


**설치 명령어**

```$ brew install zsh-syntax-highlighting```

또는

```$   git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
$ echo &quot;source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&quot; &amp;gt;&amp;gt; ${ZDOTDIR:-$HOME}/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;끝!&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Aug 2017 11:32:00 +0000</pubDate>
      </item>
    
  </channel>
</rss>