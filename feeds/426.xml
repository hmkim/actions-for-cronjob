<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>백명석</title>
    <link>https://brunch.co.kr/@@2xm</link>
    <description>Java, OOP, TDD, Refactoring, Clean Code, Code Review 에 관심이 많음</description>
    <language>ko</language>
    <pubDate>Mon, 13 May 2019 19:07:58 GMT</pubDate>
    <generator>Kakao Brunch</generator>
    <image>
      <title>Java, OOP, TDD, Refactoring, Clean Code, Code Review 에 관심이 많음</title>
      <url>https://img1.daumcdn.net/thumb/C100x100/?fname=http%3A%2F%2Fu1.daumcdn.net%2Fbrunch%2Fservice%2Fguest%2Fimage%2FHt2z831ldL-bSQi2aSZD3vkq_h0</url>
      <link>https://brunch.co.kr/@@2xm</link>
      <width>100</width>
      <height>100</height>
    </image>
    <item>
      <title>거북이는 왜 토끼와 경주를 했을까? - 열등감 떨쳐내기</title>
      <link>https://brunch.co.kr/@@2xm/38</link>
      <description>전지적 참견 시점 2018.12.01 방송분&amp;nbsp;에서 이영자님이 군부대를 방문해서 멋진 강연을 했다. 너무 인상적인 내용이라 여기에 짧게 요약한다. 토끼와 거북이의 경주를 아는가? 거북이가 나중에 이겼다. 그런데 여기서 의문이 드는 것은 &amp;quot;거북이는 왜 경기를 한다고 했을까?&amp;quot; 이다. 누가 봐도 질 경기였는데 거북이는 왜 경주를 한다고 했냐는 말이다.  이영자님</description>
      <pubDate>Sun, 23 Dec 2018 01:33:34 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/38</guid>
    </item>
    <item>
      <title>어떤 일을 하고 싶은가?</title>
      <link>https://brunch.co.kr/@@2xm/37</link>
      <description>연말이다 보니 이직을 하겠다는 주변의 후배들도 있고, 공채 면접도 있었는데, 내가 최근에 본 분들은 어떤 회사를 가서 어떤 일을 하고 싶어 할까?라는 생각이 들어 정리를 한번 해봐야겠다고 생각하고 있었다. 그런데 어제인가&amp;nbsp;페북에서&amp;nbsp;일에서 즐거움을 찾다간 금방 퇴사한다는 기사를 보게 되었다. 그래서 어떤 일을 하고 싶은가에 대해서 내 나름의 정리를 해 본다.</description>
      <pubDate>Sun, 02 Dec 2018 07:59:43 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/37</guid>
    </item>
    <item>
      <title>운영을 해 봐야 한다</title>
      <link>https://brunch.co.kr/@@2xm/36</link>
      <description>예전 Daum에 있을 때 아주 훌륭한 개발자 한 분을 채용한 적이 있다. 그분에게 어떤 업무를 하고 싶냐고 물었더니 &amp;quot;운영&amp;quot;이라고 했었다.&amp;nbsp;처음엔 &amp;quot;운영이라니... 뛰어난 역량을 가지고 있으니 중요한 개발을 해야지&amp;quot;라는 생각이 들면서, 실망감이 들었었다. 하지만 후에 보니 그분은 그 개발팀에서 변화를 만들면서 지속 개선을 하고 있었고,&amp;nbsp;이 모든 업무들이 그</description>
      <pubDate>Mon, 12 Nov 2018 02:48:53 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/36</guid>
    </item>
    <item>
      <title>코드 리뷰에 대해서 - 인간답게 코드 리뷰 하기</title>
      <link>https://brunch.co.kr/@@2xm/35</link>
      <description>https://www.slideshare.net/codetemplate/2018-01code-review-95601233 ​ 코드 리뷰의 가장 큰 목적은 치명적인 오류(Java에서는 Thread unsafety, Memory Leak 등)를 사전에 발견하여 서비스의 품질을 높이는 것일 것이다. 그런데 여기까지만 하면 참 재미없는 것이 코드 리뷰라고 생각한다</description>
      <pubDate>Mon, 30 Apr 2018 23:31:49 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/35</guid>
    </item>
    <item>
      <title>Clean Architecture 1장을 보고 - 토끼와 거북이</title>
      <link>https://brunch.co.kr/@@2xm/34</link>
      <description>&amp;quot;Clean Architecture: A Craftsman's Guide to Software Structure and Design&amp;quot;을&amp;nbsp;보다가 말았었는데 오늘 다시 읽어봤다. 5장까지 읽었는데 그중 1장이 가장 와 닿는 게 많아 여기에 짧게 정리하고 내 상각도 조금 추가해 본다. Architecture란 몇 가지 정의를 살펴보면 아래와 같다. Archite&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2F7jDh4ChQ7XB0zkaz5GbPbU9ohPc.jpeg" width="500" /&gt;</description>
      <pubDate>Mon, 30 Apr 2018 07:18:04 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/34</guid>
    </item>
    <item>
      <title>아키텍처란 2</title>
      <link>https://brunch.co.kr/@@2xm/33</link>
      <description>작년 1월에 아키텍처란이란 글을 쓰면서 구체적인 부분에 대해서 의견을 남겼었다. 그해 11월부터는 회사를 옮겨서 &amp;quot;아키텍처 개선&amp;quot;이라는 주제 하에 거대 Monolithic 시스템을 점진적으로 MSA로 전환하는 작업을 진행하고 있다. 아키텍처 개선... 이건 개발자들도 이것이 뭔지 명확히 설명하기 쉽지 않은 주제라고 생각한다. 그런데 대기업(?)에서 이런 일&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2F97n-0Lzc9G1G0gQqRkVuNSR-ph0.png" width="500" /&gt;</description>
      <pubDate>Wed, 11 Apr 2018 23:59:58 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/33</guid>
    </item>
    <item>
      <title>독립적인 배포/개발에 대해서 - 어느 주니어 개발자분의 질문</title>
      <link>https://brunch.co.kr/@@2xm/32</link>
      <description>모처럼 Clean Code 강의(https://www.youtube.com/user/codetemplate/videos) 자료에 대한 공유할 만한 질문이 있어서 질문과 답변을 정리해 본다.  질문 https://www.youtube.com/watch?v=IIrjI7YUw6g&amp;amp;index=18&amp;amp;list=PLuLb6MC4SOvXCRePHrb4e-EYadjZ9KH&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2FRHwoxn00_mZBp2sWIAu80Asd0ME.png" width="500" /&gt;</description>
      <pubDate>Sun, 04 Mar 2018 00:42:06 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/32</guid>
    </item>
    <item>
      <title>Adrian Cockcroft와 함께한 1시간의 Q&amp;amp;A</title>
      <link>https://brunch.co.kr/@@2xm/29</link>
      <description>어제 Adrian Cockcroft(AWS VP, Netflix Cloud Architect - https://www.linkedin.com/in/adriancockcroft/)가 우리 회사를 방문해서 1시간 동안 Q&amp;amp;A를 했다.  본인 소개, 왜 AWS로 이직했는지, AWS에서 본인의 역할은 무엇인지 등으로 대화가 시작되었다.  Netflix에 있을 때 &lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2Fjt-fu2_EPhkfLjA5U0nELYOKoC8.png" width="500" /&gt;</description>
      <pubDate>Sat, 22 Apr 2017 01:08:06 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/29</guid>
    </item>
    <item>
      <title>다시 만들면 잘 만들 수 있다. - 그 말을 어떻게 믿지?</title>
      <link>https://brunch.co.kr/@@2xm/28</link>
      <description>자신이 만들지 않은 코드를 유지보수(기능 추가 혹은 변경 등) 해야 &amp;nbsp;하는데 어려움을 겪는 일은 매우 흔한 일이다. 이런 상황이 발생했을 때 그 사람에게 그 코드는 개판이니 이해하려고 노력하는 것보다 다시 만드는 것이 나을 것이다라고 조언을 하는 사람을 본 적이 있다. 심지어 그분은 컴퓨터공학 박사 학위를 가지고 있는 분이었다. 단언컨대 그분은 소프트웨어</description>
      <pubDate>Sun, 14 Aug 2016 03:08:10 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/28</guid>
    </item>
    <item>
      <title>TDD의 Test 작성 기법들</title>
      <link>https://brunch.co.kr/@@2xm/26</link>
      <description>https://github.com/msbaek/memo/blob/master/CC-E22-Test-Processes.md 위 내용은 Robert C. Martin의&amp;nbsp;Clean Coders의 강의 내용을 정리한 것이다. 차주&amp;nbsp;즈음 팀에서 발표를 했으면 하는 내용이다. 요즘 팀에서 테스트 주도 개발 Test-Driven Development&amp;nbsp;과 소프트웨어 개발</description>
      <pubDate>Sat, 16 Jul 2016 00:56:55 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/26</guid>
    </item>
    <item>
      <title>일하는 방식 - 뭣이 더 중한디~~~</title>
      <link>https://brunch.co.kr/@@2xm/25</link>
      <description>개발 관련 일을 하면서 빈번하게 만나는 아쉬운 상황 4가지에 대해서 말해 보고자 한다.  현상 1. 신규 입사자 그리 어렵지 않다고 생각하는 우리의 업무를 일일이 알려주지 않으면 못한다. 그의 역량이 부족해 보인다. 2. 내가 할 수 있는 것을 남에게도 동일하게 기대 그리 어렵지 않다고 생각하는 어떤 기술을 충분히 알려줬는데 잘 따라 하지 못한다. 그의 역</description>
      <pubDate>Wed, 29 Jun 2016 04:32:29 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/25</guid>
    </item>
    <item>
      <title>아키텍처란?</title>
      <link>https://brunch.co.kr/@@2xm/22</link>
      <description>원문: A Little Architecture  이 글은 빨리 공유하고 싶은 마음에 잘 정리가 안된 상태로 공유를 하는 것 같다. 꼭 원문을 읽어들 보시기 바란다.  소프트웨어 아키텍트에게 어떤 데이터베이스, 프레임워크, 웹서버 등을 사용할 것인지가&amp;nbsp;중요한 것이 아니다. 비즈니스 로직이 중요하다. 비즈니스 로직은 어떤 데이터베이스가 사용될지 알 필요가 없어</description>
      <pubDate>Tue, 12 Jan 2016 14:59:40 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/22</guid>
    </item>
    <item>
      <title>아는 것, 할 수 있는 것, 하는 것</title>
      <link>https://brunch.co.kr/@@2xm/20</link>
      <description>1999~2001년 EJB로 금융 시스템을 개발하는 벤처에서 일&amp;nbsp;한 적이 있다. 99년에는 Remote Debug도 안 되는 때였고, 2000~2001년 사이에 JDWP 사용할 수 있었던 것 같다. 1999년 2000년 초에는 EJB 코드를 디버깅하는 유일한 방법은 System.out.println을 코드에 추가하고, 빌드, 패키징, EJB 서버&amp;nbsp;배포하고</description>
      <pubDate>Sat, 09 Jan 2016 05:08:47 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/20</guid>
    </item>
    <item>
      <title>Android MVP</title>
      <link>https://brunch.co.kr/@@2xm/21</link>
      <description>원문 :&amp;nbsp;http://antonioleiva.com/mvp-android 원문 내용이 길지 않으니 직접 읽어보면 좋을 것 같다.  이 글에서는 View와 Controller 로직을 모두 가지고 있는&amp;nbsp;Android Activity의 문제를 해결하여 Activity는 View 로직만 갖도록 만드는 방법에 대해서 설명한다. 이 방법 외에도 MVVM이라는 것도 있&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2FDG6niNUVMLgnxghM_Z4k5QyRO2A.png" width="500" /&gt;</description>
      <pubDate>Fri, 08 Jan 2016 08:14:23 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/21</guid>
    </item>
    <item>
      <title>&amp;quot;클린 코드를 다시 읽고&amp;quot;를 읽고</title>
      <link>https://brunch.co.kr/@@2xm/19</link>
      <description>나는 2006년 게시판을 개발해서 2007년부터 5년 정도를 서비스를 하면서 기능을 추가하고 버그를 패치하는 업무를 주로 했다. 그러다 보니 남이 작성한 코드(2주 전에 내가 작성한 코드도 포함)를 많이 봐야만 했고, 또 이를 안전하게 수정하고, 코드를 추가하는 것을 잘 할 수 있는 방법에 대해서 노력을 해야만 했다.  이런 경험 때문에 -&amp;nbsp;Michael</description>
      <pubDate>Sat, 02 Jan 2016 01:30:37 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/19</guid>
    </item>
    <item>
      <title>빨리 만드는 게 제일 중요해 ^^ - 잘 만들 필요가  있을까?</title>
      <link>https://brunch.co.kr/@@2xm/18</link>
      <description>빨리 만드는 것이 중요하다.최근 위와 같은 이야기를 많이 들었다.&amp;nbsp;다양한 시도를 많이 하고, 빨리 피드백을 받아서 서비스를 성공시키기 위해서 빨리 만드는 것이 중요하다는 것이다. 이 말은 나도 적극 공감하는 말이다. 프로젝트 초기에 과도한&amp;nbsp;설계나 예외 상황 파악에 지나치게 시간을 들이는 것보다는 작은 기능이라도&amp;nbsp;피드백을 받을 수준으로 빨리 개발하는 것이 좋&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2FPYAf9i7p82G_W5AmXqeE1WRjl6A.png" width="500" /&gt;</description>
      <pubDate>Sun, 29 Nov 2015 07:31:30 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/18</guid>
    </item>
    <item>
      <title>최근 팀원과의 대화</title>
      <link>https://brunch.co.kr/@@2xm/16</link>
      <description>언제 enum을  쓰고? 언제 state pattern을 써야  할까?&amp;nbsp;strategy pattern을 쓰는 것이랑 template-callback을 쓰는 것은 무엇이  다를까?&amp;nbsp;상속을 써야 할까? 위임을 써야 할까?&amp;nbsp;Micro Service Architecture를 적용하면 좋을 것 같은데. 운영도  좋을까?이번 주 오랜만에 제주 출장을 가서 팀원과 이런</description>
      <pubDate>Sat, 14 Nov 2015 02:35:30 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/16</guid>
    </item>
    <item>
      <title>IntelliJ 15 EAP Ultimate의 향상 - Extract Method가 쉬워졌다 ^^</title>
      <link>https://brunch.co.kr/@@2xm/15</link>
      <description>오늘 자잘한 코딩을 하던 중 아무&amp;nbsp;생각 없이 try-catch 문장을 extract method 했는데 IntelliJ가 완전히 일치하지는 않지만 구조적으로 일치하는 중복이 있다고 알려주며 자동으로 중복을 제거해 주었다.이를 살펴보면 아래와 같다.&amp;nbsp;0. 중복이 존재하는 코드위 코드를 보면 33~38 라인과 44~48 라인에 중복이 존재한다. 하지만 빨간 줄&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F2xm%2Fimage%2FKDLHPsyfRgsaV7Tiuq_uhgLlfe8" width="500" /&gt;</description>
      <pubDate>Wed, 28 Oct 2015 11:20:37 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/15</guid>
    </item>
    <item>
      <title>spring-boot integration test삽질 - spring-boot라면 이러지 말았어야 ^^</title>
      <link>https://brunch.co.kr/@@2xm/14</link>
      <description>@IntegrationTest를 이용한 spring-boot integration test시&amp;nbsp;request body에 해당하는 POJO에 default constructor가 없으면 테스트 대상 메소드가 아예 호출이 안된다. 오류 메시지도 없이...@RunWith(SpringJUnit4ClassRunner.class)@SpringApplicationConf</description>
      <pubDate>Fri, 23 Oct 2015 06:38:56 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/14</guid>
    </item>
    <item>
      <title>다음카페 개발자를 모십니다</title>
      <link>https://brunch.co.kr/@@2xm/13</link>
      <description>카페서비스에서 서버 개발. 앱을 위한 API 개발. 앱 개발(안드로이드, 아이폰) 등의 업무를 하실 분을 모십니다. 한자리 남았습니다.- 백엔드를 잘하시고, 계속 잘하고 싶으시거나- 백엔드를 잘하시는데 앱을 하고 싶으시거나- 앱을 잘하시는데 백엔드를 해 보고 싶으시거나이런 분들을 모십니다. 저희 요즘 코드리뷰 빡세게 하면서 배움을 주고 받고 있습니다.지원하</description>
      <pubDate>Thu, 22 Oct 2015 05:11:08 GMT</pubDate>
      <author>백명석</author>
      <guid>https://brunch.co.kr/@@2xm/13</guid>
    </item>
  </channel>
</rss>
