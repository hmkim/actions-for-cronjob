<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://tech.zzizily.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tech.zzizily.com/" rel="alternate" type="text/html" /><updated>2019-04-15T15:09:27+00:00</updated><id>https://tech.zzizily.com/feed.xml</id><title type="html">어서와! 새로운 기술은 언제나 환영이야~</title><subtitle>안녕하세요 김석영 입니다.</subtitle><entry><title type="html">Developing a micro-service in a local environment</title><link href="https://tech.zzizily.com/micro-service/develop/java/spring-cloud/netflix/2019/04/15/developing-a-micro-service-in-a-local-environment.html" rel="alternate" type="text/html" title="Developing a micro-service in a local environment" /><published>2019-04-15T23:29:00+00:00</published><updated>2019-04-15T23:29:00+00:00</updated><id>https://tech.zzizily.com/micro-service/develop/java/spring-cloud/netflix/2019/04/15/developing-a-micro-service-in-a-local-environment</id><content type="html" xml:base="https://tech.zzizily.com/micro-service/develop/java/spring-cloud/netflix/2019/04/15/developing-a-micro-service-in-a-local-environment.html">&lt;h1 id=&quot;developing-a-micro-service-in-a-local-environment&quot;&gt;Developing a micro-service in a local environment&lt;/h1&gt;
&lt;p&gt;micro-service 를 local 환경에서 개발하기 하기 위해서는 기존 monolithic 과는 많이 다르다.&lt;br /&gt;
&lt;strong&gt;운영 환경 과 동일한 환경으로 local 에서 개발을 하기 위해서는 어떻게 해야 할까?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Spring Cloud, Netflix OSS 를 활용 한다면 4개의 어플리케이션이 필수 요소 이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Discovery (Eureka)&lt;/li&gt;
  &lt;li&gt;API Gateway (Spring Cloud Gateway)&lt;/li&gt;
  &lt;li&gt;API (api-skeleton)&lt;/li&gt;
  &lt;li&gt;Client (client-skeleton)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Client 만 개발시에는 API 가 필요 하지 않기 때문에 dev 환경에 API 가 동작 한다는 전제를 한다.&lt;br /&gt;
환경은 2 가지만 생각을 해보자&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;local&lt;/li&gt;
  &lt;li&gt;dev&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;현재 4 가지 상황이 있고 더 추가 될수 있다.&lt;/p&gt;

&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Client (홈페이지)&lt;/li&gt;
  &lt;li&gt;API (기능)&lt;/li&gt;
  &lt;li&gt;API &amp;amp; API&lt;/li&gt;
  &lt;li&gt;Client &amp;amp; API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;clinet-홈페이지&quot;&gt;Clinet (홈페이지)&lt;/h2&gt;
&lt;p&gt;Client 만 개발 한다.&lt;br /&gt;
dev 환경의 API Gateway 통해서 가지고 오면 된다.&lt;br /&gt;
&lt;strong&gt;독립&lt;/strong&gt;적으로 개발이 가능 하다.&lt;br /&gt;
Client 모듈만 필요&lt;/p&gt;

&lt;h2 id=&quot;api-기능&quot;&gt;API (기능)&lt;/h2&gt;
&lt;p&gt;API 만 개발 한다.&lt;br /&gt;
API 에는 개발을 위한 소스가 있다.&lt;br /&gt;
&lt;strong&gt;독립&lt;/strong&gt;적으로 개발이 가능 하다.
API 모듈만 필요&lt;/p&gt;

&lt;h2 id=&quot;api--api&quot;&gt;API &amp;amp; API&lt;/h2&gt;
&lt;p&gt;API A 와 API B 를 같이 개발 한다.&lt;br /&gt;
A 와 B 는 서로 간에 Discovery 가 필요하기 때문에 Eureka 사용이 필요하다.&lt;br /&gt;
API A, API B, Eureka 3가지 모듈 필요&lt;/p&gt;

&lt;h2 id=&quot;client--api&quot;&gt;Client &amp;amp; API&lt;/h2&gt;
&lt;p&gt;Client 와 API 둘다 개발 한다.&lt;br /&gt;
외부에 있는 Client 가 내부에 있는 API 통해야 해서 Gateway 가 필요하다.
Client, API, Gateway 3가지 모듈 필요&lt;/p&gt;</content><author><name></name></author><summary type="html">Developing a micro-service in a local environment micro-service 를 local 환경에서 개발하기 하기 위해서는 기존 monolithic 과는 많이 다르다. 운영 환경 과 동일한 환경으로 local 에서 개발을 하기 위해서는 어떻게 해야 할까?</summary></entry><entry><title type="html">download-all-images-of-a-website-using-wget</title><link href="https://tech.zzizily.com/java/8/functional/interface/2019/02/10/download-all-images-of-a-website-using-wget.html" rel="alternate" type="text/html" title="download-all-images-of-a-website-using-wget" /><published>2019-02-10T18:29:00+00:00</published><updated>2019-02-10T18:29:00+00:00</updated><id>https://tech.zzizily.com/java/8/functional/interface/2019/02/10/download-all-images-of-a-website-using-wget</id><content type="html" xml:base="https://tech.zzizily.com/java/8/functional/interface/2019/02/10/download-all-images-of-a-website-using-wget.html">&lt;h1 id=&quot;download-all-images-of-a-website-using-wget&quot;&gt;Download all images of a website using wget&lt;/h1&gt;

&lt;p&gt;특정 웹사이트의 모든 이미지를 다운로드 받기&lt;/p&gt;

&lt;h2 id=&quot;1-목차&quot;&gt;1. 목차&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;방법
    &lt;ol&gt;
      &lt;li&gt;chrome Image Downloader&lt;/li&gt;
      &lt;li&gt;flashget&lt;/li&gt;
      &lt;li&gt;httrack&lt;/li&gt;
      &lt;li&gt;wget or curl&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;참조&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;2-방법&quot;&gt;2. 방법&lt;/h2&gt;

&lt;h3 id=&quot;21-image-downloader&quot;&gt;2.1. &lt;a href=&quot;https://chrome.google.com/webstore/detail/image-downloader/cnpniohnfphhjihaiiggeabnkjhpaldj&quot;&gt;Image Downloader&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;제일 만만한 방법이지만 웹페이지만 가능 해서 포기&lt;/p&gt;

&lt;h3 id=&quot;22-flashget&quot;&gt;2.2. &lt;a href=&quot;http://www.flashget.com/index_en.html&quot;&gt;flashget&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;어플을 설치해야 해서 포기&lt;/p&gt;

&lt;h3 id=&quot;23-httrack&quot;&gt;2.3. &lt;a href=&quot;https://www.httrack.com/&quot;&gt;httrack&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;어플 설치및 웹사이트 가 아닌 이미지만 받는게 목적이라서 포기&lt;/p&gt;

&lt;h3 id=&quot;24-wget-or-curl&quot;&gt;2.4. wget or curl&lt;/h3&gt;

&lt;p&gt;이게 될까 하고 잠깐 검색 하고 테스트 해바는됭 된다&lt;br /&gt;
아 역시 대단하 1줄만 모든 이미지 다운 받기 성공&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;-nd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; /save/location &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; jpeg,jpg,bmp,gif,png http://www.imge.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://explainshell.com/explain?cmd=wget+-nd+-r+-P+%2Fsave%2Flocation+-A+jpeg%2Cjpg%2Cbmp%2Cgif%2Cpng+http%3A%2F%2Fandar.co.kr&quot;&gt;explainshell.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-참조&quot;&gt;3. 참조&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://explainshell.com/explain?cmd=wget+-nd+-r+-P+%2Fsave%2Flocation+-A+jpeg%2Cjpg%2Cbmp%2Cgif%2Cpng+http%3A%2F%2Fandar.co.kr&quot;&gt;How do I use Wget to download all images into a single folder, from a URL?&lt;/a&gt;
&lt;a href=&quot;https://github.com/eduardschaeli/wget-image-scraper&quot;&gt;wget-image-scraper&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Download all images of a website using wget</summary></entry><entry><title type="html">Java 8 functional interface</title><link href="https://tech.zzizily.com/java/8/functional/interface/2019/02/10/java-functional-interface.html" rel="alternate" type="text/html" title="Java 8 functional interface" /><published>2019-02-10T18:29:00+00:00</published><updated>2019-02-10T18:29:00+00:00</updated><id>https://tech.zzizily.com/java/8/functional/interface/2019/02/10/java-functional-interface</id><content type="html" xml:base="https://tech.zzizily.com/java/8/functional/interface/2019/02/10/java-functional-interface.html">&lt;h1 id=&quot;java-funcional-interface&quot;&gt;Java Funcional Interface&lt;/h1&gt;

&lt;p&gt;Java Lamda 가 지원 이후로 많이 생겨난 Functioanl Interface 확실히 몰라서 이번에 정리&lt;br /&gt;
외우는것이 육체 건강에 좋음&lt;/p&gt;

&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;테스트&lt;/li&gt;
  &lt;li&gt;참조&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;

&lt;h4 id=&quot;runnable-리턴-없음-인자-없음&quot;&gt;Runnable 리턴 없음 인자 없음&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_X_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Runnable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runnable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Runnable&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;runnable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;supplier-리턴-1개-인자-없음&quot;&gt;Supplier 리턴 1개 인자 없음&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supplier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Supplier&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;supplier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Supplier&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;consumer-리턴-없음-인자-1개&quot;&gt;Consumer 리턴 없음 인자 1개&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_X_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;consumer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;function-리턴-1개-인자-1개&quot;&gt;Function 리턴 1개 인자 1개&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Function&amp;lt;String(parameter), Integer(return)&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;predicate-리턴-boolean-인자-1개&quot;&gt;Predicate 리턴 Boolean 인자 1개&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Boolean_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HELLO&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;unaryoperator-리턴-1개-인자-1개-리턴-과-인자-같은-타입&quot;&gt;UnaryOperator 리턴 1개 인자 1개 리턴 과 인자 같은 타입&lt;/h4&gt;

&lt;p&gt;Generic 때 많이 사용함&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;과&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;같은&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;타입&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UnaryOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unaryOperator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; WORLD&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unaryOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HELLO&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HELLO WORLD&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;binaryoperator-리턴-1개-인자-2개-리턴-과-인자-같은-타입&quot;&gt;BinaryOperator 리턴 1개 인자 2개 리턴 과 인자 같은 타입&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;과&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;같은&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;타입&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BinaryOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binaryOperator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binaryOperator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HELLO&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;WORLD&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HELLOWORLD&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;bipredicate-리턴-boolean-인자-2개&quot;&gt;BiPredicate 리턴 Boolean 인자 2개&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Boolean_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  BiFunction&amp;lt;String(parmeter1), Integer(parmeter2)&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BiPredicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;biPredicate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;biPredicate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isTrue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;biconsumer-리턴-없음-인자-2개&quot;&gt;BiConsumer 리턴 없음 인자 2개&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_X_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BiConsumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;biConsumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;biConsumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;bifunction-리턴-1개-인자-2개&quot;&gt;BiFunction 리턴 1개 인자 2개&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  BiFunction&amp;lt;String(parmeter1), String(parmeter2), Integer(return)&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BiFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;biFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;biFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;comparator-리턴-1개-인자-2개&quot;&gt;Comparator 리턴 1개 인자 2개&lt;/h4&gt;

&lt;p&gt;기존 정렬 할때 Comparable 많이 사용 하였지만 Lamda 이후에는 Comparator 더 많이 쓰임&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;리턴&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_int_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;인자&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2_Comparator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Comparator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comparator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;comparator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;참조&quot;&gt;참조&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://multifrontgarden.tistory.com/125&quot;&gt;Java8#02. 함수형 인터페이스(Functional Interface)&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Java Funcional Interface</summary></entry><entry><title type="html">Maven Plugin Task List Check</title><link href="https://tech.zzizily.com/maven/plugin/2019/01/31/maven-plugin-goal-list-check.html" rel="alternate" type="text/html" title="Maven Plugin Task List Check" /><published>2019-01-31T09:24:00+00:00</published><updated>2019-01-31T09:24:00+00:00</updated><id>https://tech.zzizily.com/maven/plugin/2019/01/31/maven-plugin-goal-list-check</id><content type="html" xml:base="https://tech.zzizily.com/maven/plugin/2019/01/31/maven-plugin-goal-list-check.html">&lt;h1 id=&quot;maven-plugin-task-list-check&quot;&gt;Maven Plugin Task List Check&lt;/h1&gt;

&lt;p&gt;Maven 의 사용 중인 Plugin 들에 대한 Task (Goal) 확인 하기&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn help:describe -Dplugin=org.apache.maven.plugins:maven-war-plugin -Ddetail=true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://maven.apache.org/plugins-archives/maven-help-plugin-LATEST/examples/describe-configuration.html&quot;&gt;Configuring Describe Goal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.baeldung.com/maven-goals-phases&quot;&gt;Why are my contributions not showing up on my profile?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Maven Plugin Task List Check</summary></entry><entry><title type="html">Why are my contributions not showing up on my profile?</title><link href="https://tech.zzizily.com/github/profile/2019/01/29/Why-are-my-contributions-not-showing-up-on-my-profile.html" rel="alternate" type="text/html" title="Why are my contributions not showing up on my profile?" /><published>2019-01-29T11:44:00+00:00</published><updated>2019-01-29T11:44:00+00:00</updated><id>https://tech.zzizily.com/github/profile/2019/01/29/Why-are-my-contributions-not-showing-up-on-my-profile</id><content type="html" xml:base="https://tech.zzizily.com/github/profile/2019/01/29/Why-are-my-contributions-not-showing-up-on-my-profile.html">&lt;h1 id=&quot;github-에-commit-을-해도-기록이-안남는다&quot;&gt;github 에 commit 을 해도 기록이 안남는다&lt;/h1&gt;

&lt;p&gt;언제 부터지는 모르겠지만 github profile 에 commit 기록이 안남는다 뭐징?&lt;br /&gt;
github 에서 직접 수정 할때는 기록이 잘남고 집에서는 기록이 안남는다 뭐징?&lt;br /&gt;
이상하다고 만 생각 하고 그러려니 하다가 문듯 검색을 해보니깐&lt;/p&gt;

&lt;p&gt;github 계정 email 주소와 git config –globa user.email 이정보가 달라서 안나옴&lt;/p&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/why-are-my-contributions-not-showing-up-on-my-profile/&quot;&gt;Why are my contributions not showing up on my profile?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">github 에 commit 을 해도 기록이 안남는다</summary></entry><entry><title type="html">Web Site nGrinder Performance Test</title><link href="https://tech.zzizily.com/naver/ngrinder/performance/2019/01/24/ngrinder-performance-test.html" rel="alternate" type="text/html" title="Web Site nGrinder Performance Test" /><published>2019-01-24T11:44:00+00:00</published><updated>2019-01-24T11:44:00+00:00</updated><id>https://tech.zzizily.com/naver/ngrinder/performance/2019/01/24/ngrinder-performance-test</id><content type="html" xml:base="https://tech.zzizily.com/naver/ngrinder/performance/2019/01/24/ngrinder-performance-test.html">&lt;h1 id=&quot;웹사이트-성능-테스트&quot;&gt;웹사이트 성능 테스트&lt;/h1&gt;

&lt;p&gt;웹사이트에 성능 테스트를 하기 좋은 방법은 멀까?&lt;br /&gt;
간단하게 cli 에서 할수 있는 &lt;a href=&quot;https://www.npmjs.com/package/loadtest&quot;&gt;loadtest&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/artillery&quot;&gt;artillery&lt;/a&gt; nodejs 기반 설치 및 기능 확장성이 좋음&lt;br /&gt;
하지만 기능적인 측면 보다는 관리가 용이하고 Web GUI 우선이라서 알게된 &lt;a href=&quot;https://github.com/naver/ngrinder&quot;&gt;ngrinder&lt;/a&gt; 네이버~ 아! 좋다~&lt;/p&gt;

&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;설치&lt;/li&gt;
  &lt;li&gt;계정&lt;/li&gt;
  &lt;li&gt;한글&lt;/li&gt;
  &lt;li&gt;에이전트 설치 및 실행&lt;/li&gt;
  &lt;li&gt;간단한 테스트&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-설치&quot;&gt;1. &lt;a href=&quot;https://github.com/naver/ngrinder/wiki/Installation-Guide&quot;&gt;설치&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;WAS/webapps/ngrinder.war 설치&lt;br /&gt;
localhost:8080/ngrinder 접속 기본 계정 및 비밀번호 admin/admin&lt;br /&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/8334910/51687151-4d13a780-2035-11e9-8762-b46218747399.png&quot; alt=&quot;01&quot; /&gt;
&lt;a href=&quot;https://github.com/naver/ngrinder/wiki/Architecture&quot;&gt;ngrinder architechture&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://brownbears.tistory.com/category/nGrinder&quot;&gt;ngrinder brownbears.tistory.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.outsider.ne.kr/1238&quot;&gt;artillery 이용한 스트레스 테스트&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">웹사이트 성능 테스트</summary></entry><entry><title type="html">Spring Boot PostgreSQL SQLFeatureNotSupportedException</title><link href="https://tech.zzizily.com/spring%20boot/postgresql/2019/01/23/spring-boot-postgresql.html" rel="alternate" type="text/html" title="Spring Boot PostgreSQL SQLFeatureNotSupportedException" /><published>2019-01-23T09:35:00+00:00</published><updated>2019-01-23T09:35:00+00:00</updated><id>https://tech.zzizily.com/spring%20boot/postgresql/2019/01/23/spring-boot-postgresql</id><content type="html" xml:base="https://tech.zzizily.com/spring%20boot/postgresql/2019/01/23/spring-boot-postgresql.html">&lt;h1 id=&quot;spring-boot-postgresql-sqlfeaturenotsupportedexception&quot;&gt;Spring Boot PostgreSQL SQLFeatureNotSupportedException&lt;/h1&gt;

&lt;h2 id=&quot;원인&quot;&gt;원인&lt;/h2&gt;

&lt;p&gt;JPA(Hibernate) 가 PostgreSQL CLOB 기능을 확인 하지만 실제 기능 제공 안하면서 발생함&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://vkuzel.com/spring-boot-jpa-hibernate-atomikos-postgresql-exception&quot;&gt;Spring Boot issues 12007&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hibernate.atlassian.net/browse/HHH-12368&quot;&gt;HHH-12368&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;해결방법&quot;&gt;해결방법&lt;/h2&gt;

&lt;h3 id=&quot;1-logginglevel-변경&quot;&gt;1. logging.level 변경&lt;/h3&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ERROR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-jpa-설정&quot;&gt;2. jpa 설정&lt;/h3&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;hibernate&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;jdbc&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;lob&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;non_contextual_creation&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-기능감지-비활성화후-수동-설정&quot;&gt;3. 기능감지 비활성화후 수동 설정&lt;/h3&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jpa&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;hibernate&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;use_jdbc_metadata_defaults&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;database-platform&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;org.hibernate.dialect.PostgreSQL9Dialect&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Spring Boot PostgreSQL SQLFeatureNotSupportedException</summary></entry><entry><title type="html">Tomcat Manager 외부 접근 허용</title><link href="https://tech.zzizily.com/tomcat/mananger/2019/01/18/tomcat-mananger-403-access-denied-allow-remote-user.html" rel="alternate" type="text/html" title="Tomcat Manager 외부 접근 허용" /><published>2019-01-18T12:10:00+00:00</published><updated>2019-01-18T12:10:00+00:00</updated><id>https://tech.zzizily.com/tomcat/mananger/2019/01/18/tomcat-mananger-403-access-denied-allow-remote-user</id><content type="html" xml:base="https://tech.zzizily.com/tomcat/mananger/2019/01/18/tomcat-mananger-403-access-denied-allow-remote-user.html">&lt;h1 id=&quot;tomcat-manager-외부-접근-허용&quot;&gt;Tomcat Manager 외부 접근 허용&lt;/h1&gt;

&lt;p&gt;Tomcat Mananger 를 이용해서 webapp 관리를 해야함 그런데 403 이똭!!&lt;br /&gt;
$CATALINA_HOME/webapps/manager/META-INF/context.xml 파일의 원격 적근 제한을 주석 처리&lt;br /&gt;
누구나 들어 올수 있도록 설정&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Context&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;antiResourceLocking=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;privileged=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--
&amp;lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; allow=&quot;127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; /&amp;gt;
--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Context&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/38551166/403-access-denied-on-tomcat-8-manager-app-without-prompting-for-user-password&quot;&gt;403 Access Denied on Tomcat 8 Manager App without prompting for user/password&lt;/a&gt;
&lt;a href=&quot;http://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html#Configuring_Manager_Application_Access&quot;&gt;Configuring Manager Application Access&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Tomcat Manager 외부 접근 허용</summary></entry><entry><title type="html">OpenWRT uHTTPd SSL 적용</title><link href="https://tech.zzizily.com/openwrt/ssl/uhttpd/2019/01/08/openwrt-uhttpd-ssl.html" rel="alternate" type="text/html" title="OpenWRT uHTTPd SSL 적용" /><published>2019-01-08T23:51:00+00:00</published><updated>2019-01-08T23:51:00+00:00</updated><id>https://tech.zzizily.com/openwrt/ssl/uhttpd/2019/01/08/openwrt-uhttpd-ssl</id><content type="html" xml:base="https://tech.zzizily.com/openwrt/ssl/uhttpd/2019/01/08/openwrt-uhttpd-ssl.html">&lt;h1 id=&quot;openwrt-uhttpd-ssl-적용&quot;&gt;OpenWRT uHTTPd SSL 적용&lt;/h1&gt;

&lt;p&gt;OpenWRT uhttpd 에 SSL 적용 하기 위해서는&lt;br /&gt;
cert1.pem 를 uhttpd.crt 로&lt;br /&gt;
privkey1.pem 를 uhttpd.key 로&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl x509 &lt;span class=&quot;nt&quot;&gt;-outform&lt;/span&gt; der &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; cert1.pem &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; uhttpd.crt
openssl rsa &lt;span class=&quot;nt&quot;&gt;-outform&lt;/span&gt; der &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; privkey1.pem &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; uhttpd.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/13732826/convert-pem-to-crt-and-key&quot;&gt;Convert .pem to .crt and .key&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/19979171/how-to-convert-pem-into-key&quot;&gt;How to convert .pem into .key?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">OpenWRT uHTTPd SSL 적용</summary></entry><entry><title type="html">Let’s Encrypt with certbot and keytool</title><link href="https://tech.zzizily.com/ssl/certbot/dns/spring%20boot/2019/01/01/letsencrypt-certbot.html" rel="alternate" type="text/html" title="Let's Encrypt with certbot and keytool" /><published>2019-01-01T18:24:00+00:00</published><updated>2019-01-01T18:24:00+00:00</updated><id>https://tech.zzizily.com/ssl/certbot/dns/spring%20boot/2019/01/01/letsencrypt-certbot</id><content type="html" xml:base="https://tech.zzizily.com/ssl/certbot/dns/spring%20boot/2019/01/01/letsencrypt-certbot.html">&lt;h1 id=&quot;lets-encrypt-with-certbot-and-keytool&quot;&gt;Let’s Encrypt with certbot and keytool&lt;/h1&gt;

&lt;p&gt;Spring Boot 에 https 적용을 해보자&lt;/p&gt;

&lt;p&gt;certbot 인증방법&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;standalone&lt;br /&gt;
 임시 웹서버를 동작해서 인증&lt;br /&gt;
 해당 서버에 웹서버 동작중일 경우 중지 해야 함&lt;/li&gt;
  &lt;li&gt;webroot&lt;br /&gt;
 웹서버 소스 폴더에 파일 생성 해서 인증 웹서버 중지 필요 없음&lt;/li&gt;
  &lt;li&gt;manual&lt;br /&gt;
 DNS 서버에 txt 정보를 입력 해서 인증 더큰 장점은 현재 운영중인 서버에 작업을 안해도됨&lt;br /&gt;
 하지만 3개월 마다 1번씩 작업을 해야한다면?&lt;br /&gt;
 내 최종 목적은 spring boot 에도 적용해야 하는됭 그럼?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;standalone, webroot 는 먼가 서버에 작업 한다는것이 좀 귀찮음&lt;br /&gt;
지금은 manual dns 에 txt 값 2개만 등록 해주면 끝 이게 더 편해보임&lt;/p&gt;

&lt;p&gt;작업 순서&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;certbot 설치&lt;/li&gt;
  &lt;li&gt;certbot 인증서 생성&lt;/li&gt;
  &lt;li&gt;openssl 이용한 p12 생성, keytool 이용한 jks 생성&lt;/li&gt;
  &lt;li&gt;spring boot 에 적용&lt;/li&gt;
  &lt;li&gt;작업중 문제점&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-certbot-설치&quot;&gt;1. certbot 설치&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# yum install certbot&lt;/span&gt;
Loaded plugins: fastestmirror, priorities
Loading mirror speeds from cached hostfile
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; base: mirror.navercorp.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; epel: ftp.riken.jp
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; extras: mirror.navercorp.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; remi-safe: ftp.riken.jp
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; rpmforge: ftp.neowiz.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; updates: mirror.navercorp.com
 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; webtatic: us-east.repo.webtatic.com

... 중략 ...

Installed:
  certbot.noarch 0:0.29.1-1.el7

Dependency Installed:
  audit-libs-python.x86_64 0:2.8.4-4.el7         checkpolicy.x86_64 0:2.5-8.el7                  libcgroup.x86_64 0:0.41-20.el7               libsemanage-python.x86_64 0:2.5-14.el7        policycoreutils-python.x86_64 0:2.5-29.el7
  pyOpenSSL.x86_64 0:0.13.1-4.el7                python-IPy.noarch 0:0.75-6.el7                  python-cffi.x86_64 0:1.6.0-5.el7             python-enum34.noarch 0:1.0.4-1.el7            python-idna.noarch 0:2.4-1.el7
  python-ndg_httpsclient.noarch 0:0.3.2-1.el7    python-ply.noarch 0:3.4-11.el7                  python-pycparser.noarch 0:2.14-1.el7         python-requests.noarch 0:2.6.0-1.el7_1        python-requests-toolbelt.noarch 0:0.8.0-1.el7
  python-six.noarch 0:1.9.0-2.el7                python-zope-component.noarch 1:4.1.0-3.el7      python-zope-event.noarch 0:4.0.3-2.el7       python-zope-interface.x86_64 0:4.0.5-4.el7    python2-acme.noarch 0:0.29.1-1.el7
  python2-certbot.noarch 0:0.29.1-1.el7          python2-configargparse.noarch 0:0.11.0-1.el7    python2-cryptography.x86_64 0:1.7.2-2.el7    python2-future.noarch 0:0.16.0-6.el7          python2-josepy.noarch 0:1.1.0-1.el7
  python2-mock.noarch 0:1.0.1-9.el7              python2-parsedatetime.noarch 0:2.4-5.el7        python2-pyasn1.noarch 0:0.1.9-7.el7          python2-pyrfc3339.noarch 0:1.0-2.el7          python2-requests.noarch 0:2.6.0-0.el7
  python2-six.noarch 0:1.9.0-0.el7               pytz.noarch 0:2016.10-2.el7                     setools-libs.x86_64 0:3.3.8-4.el7

Failed:
  python-urllib3.noarch 0:1.10.2-5.el7

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@devops-service-pig ~]# certbot certonly &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--manual&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--preferred-challenges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dns &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--email&lt;/span&gt; user@gmail.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--server&lt;/span&gt; https://acme-v02.api.letsencrypt.org/directory &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--agree-tos&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-bootstrap&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; tricycle.co.kr &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.tricycle.co.kr
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&quot;/bin/certbot&quot;&lt;/span&gt;, line 9, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    load_entry_point&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'certbot==0.29.1'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'console_scripts'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'certbot'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)()&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/pkg_resources/__init__.py&quot;&lt;/span&gt;, line 487, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;load_entry_point
    &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;get_distribution&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dist&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.load_entry_point&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;group, name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/pkg_resources/__init__.py&quot;&lt;/span&gt;, line 2728, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;load_entry_point
    &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;ep.load&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/pkg_resources/__init__.py&quot;&lt;/span&gt;, line 2346, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;load
    &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;self.resolve&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/pkg_resources/__init__.py&quot;&lt;/span&gt;, line 2352, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;resolve
    module &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; __import__&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;self.module_name, &lt;span class=&quot;nv&quot;&gt;fromlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'__name__'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/certbot/main.py&quot;&lt;/span&gt;, line 20, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from certbot import account
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/certbot/account.py&quot;&lt;/span&gt;, line 18, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from acme import messages
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/acme/messages.py&quot;&lt;/span&gt;, line 8, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from acme import challenges
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/acme/challenges.py&quot;&lt;/span&gt;, line 12, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    import requests
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/requests/__init__.py&quot;&lt;/span&gt;, line 58, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; import utils
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/requests/utils.py&quot;&lt;/span&gt;, line 32, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from .exceptions import InvalidURL
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/requests/exceptions.py&quot;&lt;/span&gt;, line 10, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    from .packages.urllib3.exceptions import HTTPError as BaseHTTPError
  File &lt;span class=&quot;s2&quot;&gt;&quot;/usr/lib/python2.7/site-packages/requests/packages/__init__.py&quot;&lt;/span&gt;, line 95, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;load_module
    raise ImportError&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;No module named '%s'&quot;&lt;/span&gt; % &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name,&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
ImportError: No module named &lt;span class=&quot;s1&quot;&gt;'requests.packages.urllib3'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가끔 python-urllib3.noarch 0:1.10.2-5.el7 설치가 실패 하는 경우 certbot 동작이 안됨&lt;br /&gt;
기존 설치된 라이브러스 삭제 후 재설치&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip uninstall requests urllib3
yum remove python-urllib3 python-requests
yum install python-urllib3 python-requests certbot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-certbot-인증서-생성&quot;&gt;2. Certbot 인증서 생성&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@linux:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;certbot certonly &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--manual&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--preferred-challenges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dns &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--email&lt;/span&gt; user@gmail.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--server&lt;/span&gt; https://acme-v02.api.letsencrypt.org/directory &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--agree-tos&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-bootstrap&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; domain.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.domain.com
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator manual, Installer None
Obtaining a new certificate
Performing the following challenges:
dns-01 challenge &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;domain.com
dns-01 challenge &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;domain.com

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
NOTE: The IP of this machine will be publicly logged as having requested this
certificate. If you&lt;span class=&quot;s1&quot;&gt;'re running certbot in manual mode on a machine that is not
your server, please ensure you'&lt;/span&gt;re okay with that.

Are you OK with your IP being logged?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Y&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;es/&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;N&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;o: y

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Please deploy a DNS TXT record under the name
_acme-challenge.domain.com with the following value:

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1

Before continuing, verify the record is deployed.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Press Enter to Continue

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Please deploy a DNS TXT record under the name
_acme-challenge.domain.com with the following value:

xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx2

Before continuing, verify the record is deployed.
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;This must be &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;addition to the previous challenges&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not remove,
replace, or undo the previous challenge tasks yet. Note that you might be
asked to create multiple distinct TXT records with the same name. This is
permitted by DNS standards.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Press Enter to Continue
Waiting &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;verification...
Cleaning up challenges

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/zzizily.com/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/zzizily.com/privkey.pem
   Your cert will expire on 2019-04-01. To obtain a new or tweaked
   version of this certificate &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the future, simply run certbot
   again. To non-interactively renew &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;all&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; of your certificates, run
   &lt;span class=&quot;s2&quot;&gt;&quot;certbot renew&quot;&lt;/span&gt;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let&lt;span class=&quot;s1&quot;&gt;'s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le

root@linux:~$ cd /etc/letsencrypt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;privkey.pem: 개인키&lt;/li&gt;
  &lt;li&gt;cert.pem: example.com 도메인 인증서&lt;/li&gt;
  &lt;li&gt;chain.pem: CA(The Let’s Encrypt) 기관 체인 인증서&lt;/li&gt;
  &lt;li&gt;fullchain.pem(cert.pem + chain.pem): 도메인의 인증서와 CA 기관 인증서&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-openssl-keytooljdk_homebinkeytool&quot;&gt;3. openssl, keytool(${JDK_HOME}/bin/keytool)&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;openssl pkcs12 &lt;span class=&quot;nt&quot;&gt;-export&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; cert.pem &lt;span class=&quot;nt&quot;&gt;-inkey&lt;/span&gt; privkey.pem &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; cert_and_key.p12 &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; zzizily &lt;span class=&quot;nt&quot;&gt;-CAfile&lt;/span&gt; chain.pem &lt;span class=&quot;nt&quot;&gt;-caname&lt;/span&gt; zzizily
password 입력 
password 재입력


keytool &lt;span class=&quot;nt&quot;&gt;-importkeystore&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-deststorepass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-destkeypass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-destkeystore&lt;/span&gt; letsencrypt.jks &lt;span class=&quot;nt&quot;&gt;-srckeystore&lt;/span&gt; cert_and_key.p12 &lt;span class=&quot;nt&quot;&gt;-srcstoretype&lt;/span&gt; PKCS12 &lt;span class=&quot;nt&quot;&gt;-alias&lt;/span&gt; zzizily

keytool &lt;span class=&quot;nt&quot;&gt;-importkeystore&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-destkeystore&lt;/span&gt; letsencrypt.jks &lt;span class=&quot;nt&quot;&gt;-srckeystore&lt;/span&gt; letsencrypt.jks &lt;span class=&quot;nt&quot;&gt;-deststoretype&lt;/span&gt; pkcs12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-spring-boot-applicationyml&quot;&gt;4. spring boot application.yml&lt;/h2&gt;

&lt;p&gt;jks 파일을 생성 했으면 spring boot 에 적용&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ssl&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;key-store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;classpath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;letsencrypt.jks&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;key-store-password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${KEY-STORE-PASSWORD}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;key-password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${KEY-PASSWORD}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/8334910/50573012-ec66c580-0e0e-11e9-83a7-609bbf39689d.png&quot; alt=&quot;Spring Boot SSL 적용&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-작업중-문제점&quot;&gt;5. 작업중 문제점&lt;/h2&gt;

&lt;h3 id=&quot;51-zsh&quot;&gt;5.1 zsh&lt;/h3&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@linux:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;certbot certonly &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--manual&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--preferred-challenges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;dns &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--email&lt;/span&gt; user@gmail.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--server&lt;/span&gt; https://acme-v02.api.letsencrypt.org/directory &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--agree-tos&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--debug&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-bootstrap&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; domain.com &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.domain.com

zsh: no matches found: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.domain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;zsh: no matches found: *.domain.com 진행 안됨&lt;/p&gt;

&lt;h3 id=&quot;52-dns-txt-record-등록&quot;&gt;5.2 dns txt record 등록&lt;/h3&gt;

&lt;p&gt;_acme-challenge 2개를 입력 해주어야함 google domain 에서는 + 아이콘이 있어서 복수 입력 가능&lt;br /&gt;
dns 업체별로 방식이 다름 aws 에서는 복수 열로 입력이 가능 해서 뛰어쓰기로 구분&lt;/p&gt;

&lt;h2 id=&quot;숙제&quot;&gt;숙제&lt;/h2&gt;

&lt;p&gt;3개월 마다 한번씩 자동화 하기?&lt;/p&gt;

&lt;h2 id=&quot;참조&quot;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://serverfault.com/questions/750902/how-to-use-lets-encrypt-dns-challenge-validation&quot;&gt;How to use Let’s Encrypt DNS challenge validation?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://elfinlas.github.io/2018/03/19/spring-boot-tls-certbot&quot;&gt;Certbot으로 만든 인증서를 Spring Boot에서 사용하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Let’s Encrypt with certbot and keytool</summary></entry></feed>