<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Deprecated</title>
<link>https://chaoxifer.tistory.com/</link>
<description>백수 블로그</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 13:12:04 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>chaoxifer</managingEditor>
<item>
<title>Javascript에서의 'compile' 의미</title>
<link>https://chaoxifer.tistory.com/276</link>
<description>&lt;p&gt;여전히 Electron을 이용한 프로젝트 진행은 더디다. 구직도 안되니 이 순간을 JS로 즐기는 수밖에. Electron을 이용한 프로젝트 다음은 크롤링과 rust가 기다리고 있다.&lt;/p&gt;
&lt;p&gt;babel 버전으로 인해 여기저기서 에러메시지가 튀어나오는데.. 메시지를 보다가 문득, 프론트엔드의 빌드 툴을 이용해서 컴파일을 한다는 메시지를 보고나서 왜 자바스크립트에서는 컴파일이라는 용어를 사용하는지 궁금해졌다. 분명 컴파일 과정이 있다면 Linking 과정도 있어야하지만 자바스크립트를 통해 바이너리를 만들어낼 때를 제외하고 그러한 빌드 과정이 있을리가 없었다. 구글링을 해보니 공신력 있는 출처는 아니지만, 나와 같은 생각을 한 사람이 있었고 그에 대한 답변을 쉽게 찾아낼 수 있었다. (&lt;a href=&quot;https://stackoverflow.com/questions/48134900/what-do-those-javascript-front-end-build-tools-mean-when-they-say-compile-my-j&quot;&gt;https://stackoverflow.com/questions/48134900/what-do-those-javascript-front-end-build-tools-mean-when-they-say-compile-my-j&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;span&gt;Perhaps we web developers have gotten lazy in our terminology. When we talk of &quot;compiling&quot; javascript, we aren't usually talking about converting the script to something like bytecode. We're talking about transpilation.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;자바의 바이트코드나 어셈블리어가 아닌 프론트 엔드의 'compile'을 'transpilation'으로 이해하면 된다는 것. 본래 브라우저 환경에서 실행되던 자바스크립트는 브라우저 간 호환성 문제가 있었고 허용되는 문법도 다른 상황에서 node까지 나오게 되니 babel과 같은 것이 필요했을 것이다. 덕분에 작업을 하면서 왜 그리도 '컴파일'을 하려 했는지 이해할 수 있었다. 분명 이 과정에는 minifying 과정도 포함될 것이다.&lt;/p&gt;</description>
<category>일상</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/276</guid>
<comments>https://chaoxifer.tistory.com/276#entry276comment</comments>
<pubDate>Sat, 13 Apr 2019 13:04:03 +0900</pubDate>
</item>
<item>
<title>비아고고(viagogo) 티켓 사기</title>
<link>https://chaoxifer.tistory.com/275</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;제작년 이맘때쯤? viagogo에서 티켓을 샀다가 봉변을 당해 고생한 적이 있었다. 그런데 문득 인터넷에서 아직도 사람들이 아무런 사전 정보 검색 없이 비아고고에서 티켓을 사는 것을 보고 포스팅을 작성하게 되었다. 당시 식은땀을 흘렸던 기억을 되살려, 이 포스팅에서는 Viagogo 가 사기 사이트의 매력적인 UI와 해외에서 고소당한 뉴스 기사 및 환불 받는 법(Charge Back 이용)에 대해서 간단히 언급하기로&amp;nbsp;한다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;일단, Viagogo는 프로그래머 입장에서는 아주 매력적인 사기사이트이다. 프로그래머의 입장에서 이만큼 사용자 인터페이스를 구현하여 완벽하게 사기치는 사이트를 본 적이 없다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;티켓 구입에 대기큐라는 그럴듯한 UI를 도입하여 (실제 코드를 보면 이유없이 일정 시간만 기다리고 있다.)&amp;nbsp;마치 사용자가 티켓을 구매하는데 뒤에 기다리는 사람들이 있는 것처럼 시간을 카운트하여 심리적인 긴장감을 유도할 뿐만 아니라, 결제 페이지에서 수수료가 페이지 화면 크기에 가려져 보이지 않도록 별도의 drop-down 레이아웃을 만들어 가려놓는다. 사용자의 심리와 습관을 교묘하게 이용한 UI 덕분에 'Next'에 익숙해져 있는 사용자는 색상이 있는 버튼과 없는 버튼 둘 중에서 아무런 생각없이 'Next'를 누르게 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Viagogo의 사기 수법은 아래와 같다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;애초에 판매하고자 하는 티켓을 올려놓되(진짜로 있든 없든 중요하지 않다), 비싼 가격에 티켓을 올려놓는다.&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;뒤늦게 다른 사이트보다 비싸거나 사기를 알아챈 고객이 환불을 요구하면 거절한다. 이 때, 상담원은 환불 대신 구입한 티켓을&amp;nbsp;장터에 내놓을 수 있는 링크를 제시한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;울며 겨자 먹기로 피해자가 링크를 통해 장터에 올리고, 장터에 올라온 티켓이 판매되는 경우 (판매된다는 보장도 없지만) 판매 금액의 일부를 viagogo가 가져간다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;또 다른 피해자가 티켓을 구입한다. 이 때, 새로운 피해자가 구입하는 티켓은 이 전의 피해자가 장터에 올려놓은 티켓이 된다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;무한 반복..&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이러한 프로세스가 계속 진행이 된다면 어떻게 될까? 사람들은 존재하지도 않는 티켓을 사고 다시 장터에 올려놓고, 또 다른 피해자는(곧 피해자가 될)&amp;nbsp;다른 피해자가 장터에 올려놓은 &quot;존재하지도 않는 티켓&quot;을&amp;nbsp;사게 된다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이러한 것이 반복되면서 viagogo는 결국 호주에서 고소를 당하는데 심지어 청문회에조차 출석하지 않는다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;아래 링크는 viagogo에 관련된 기사들이다. 일부에서는 viagogo에 관련된 건이 법원까지 올라간 듯하다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;a href=&quot;https://www.bbc.com/news/business-45367911&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;https://www.bbc.com/news/business-45367911&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;a href=&quot;https://thenewdaily.com.au/money/consumer/2018/11/27/viagogo-slammed/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://thenewdaily.com.au/money/consumer/2018/11/27/viagogo-slammed/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;a href=&quot;https://www.theguardian.com/money/2017/aug/28/viagogo-accc-legal-action-misleading-ticket-reseller&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://www.theguardian.com/money/2017/aug/28/viagogo-accc-legal-action-misleading-ticket-reseller&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이미 티켓을 구입한 사람이라면, 남은 방법은 은행의 차지백 서비스이다. 이 때 중요한 건, 환불받기 위해&amp;nbsp;절대로 &lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;장터에 자신의 티켓을 올려놓으면 안된다. &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;상담원이 보내주는 링크를 무시하고 증거자료들을 모은 뒤 '이의 신청'이라는 서비스로 은행을 통해 카드사에 이의 신청을 하고, 제출한 증거자료와 정황 상 환불이 맞다고 판단되는 경우 소비자에게 해당 금액을 다시 돌려준다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;차지백을 위해 은행에 제출할 증거자료 수집을 위해 Viagogo 상담원과 얘기하는 모든 내용들을 캡쳐하고 결국에는 피해 금액을 돌려받을 수 있었다. 물론 상담원과는 영어로 해야한다. 한국어로 상담 신청해봤자, 상담 가능한 사람이 없다는 메일만 돌아온다. (아래는 지난 메일함에서 찾은 내용..)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12pt; text-size-adjust: auto;&quot;&gt;---------- THIS IS AN AUTOMATED RESPONSE ----------&lt;/span&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;span style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;We have received your query, but unfortunately it is in a language that our customer services team does not yet operate in. Our team can currently handle queries in English, French, German, Spanish, Italian, Dutch, Japanese, and Chinese.&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot; style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;span style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12pt; text-size-adjust: auto;&quot;&gt;Please resubmit your request in one of the above languages, using the ‘contact us’ link below.&lt;/span&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;span style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12pt; text-size-adjust: auto;&quot;&gt;Thank you for your understanding.&lt;/span&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;br style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12px; text-size-adjust: auto;&quot;&gt;&lt;span style=&quot;caret-color: rgb(0, 0, 0); font-family: Arial, Helvetica, sans-serif; font-size: 12pt; text-size-adjust: auto;&quot;&gt;viagogo Customer Service&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;한 가지 팁은 반드시 메일과 상담 서비스 둘 다 이용하여 환불을 요청하고, 해당 사이트의 리뷰와 타 국가에서 고소된 사건 등등 제 3자가 사건을 보았을 때 객관적으로 문제를 판단할 수 있게 상담원을 유도해서 증거 자료들을 모아야 한다. (새벽에도 전화가 올 수 있다.. 받지 말자. 피곤해진다.)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;부디 앞으로는 비아고고에서 티켓을 사는 사람이 없길 바라며.. (사실 조금만 검색해도 나온다.)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:628px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99DEC33C5C13545822&quot; filemime=&quot;image/png&quot; filename=&quot;스크린샷 2018-12-14 오후 3.56.54.png&quot; height=&quot;629&quot; width=&quot;628&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>일상</category>
<category>Scam</category>
<category>viagogo</category>
<category>비아고고</category>
<category>티켓</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/275</guid>
<comments>https://chaoxifer.tistory.com/275#entry275comment</comments>
<pubDate>Sat, 15 Dec 2018 13:57:16 +0900</pubDate>
</item>
<item>
<title>원플러스에서 VoLTE 활성화하기</title>
<link>https://chaoxifer.tistory.com/274</link>
<description>&lt;h1 style=&quot;line-height: 1.8;&quot;&gt;원플러스 기기에서 VoLTE 활성화하기&lt;/h1&gt;&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;개요&lt;/h2&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;몇 개월 전 원플러스 5T를 사용하다가 대전 등 충청 지역으로 가게 되면 전화 통화가 되지 않는걸 발견했다. 급한 대로 다른 폰으로 바꿔 사용하느라 제대로 사용하지 못하고 있다가 얼마 전 인터넷 서핑 도중에 VoLTE 활성화가 가능하다는 것을 알게 되어 직접 시도해보았다. 대부분의 정보는 '리퍼비쉬팩토리' 라는 네이버 카페에서 얻을 수 있었는데 자세하게 정리해놓은 글이 많아 도움이 됐다. 하지만, 중요한 정보들이 글 여러 개에 퍼져있어 하나로 정리된 것이 없어 애를 먹었다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이 글은 가이드 문서 내 정보들을 취합하여 Oneplus 5T에서 VoLTE 활성화하는 방법에 대해 설명한 글이며, 본 내용에 들어가기에 앞서&amp;nbsp;참고한 자료를&amp;nbsp;아래와 같이 우선적으로 소개하겠다.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://cafe.naver.com/xst/226170&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;엑스페리아 XZ1 EFS 추출 자료&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://cafe.naver.com/refurbishfactory/136295&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;원플러스5T VOLTE 성공기&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/oneplus-5t-mirrors-official-oxygen-os-t3708099&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;원플러스 &lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/oneplus-5t-mirrors-official-oxygen-os-t3708099&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;리커버리 순정 이미지&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://cafe.naver.com/refurbishfactory/136382&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;샤오미 미노트3 VoLTE 사용 가이드&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;(원문 주소: &lt;/span&gt;&lt;a href=&quot;http://ruinses.tistory.com/1552&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;http://ruinses.tistory.com/1552&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/guide-volte-vowifi-german-carriers-t3817542&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;VoLTE 설정 옵션 활성화 방법 (XDA Forums)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;준비물&lt;/h2&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://drive.google.com/open?id=1IHTRkYv01uIN13rNUAF6WLgZL-jnzvaU&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;여기&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;를 클릭하여 작업에 필요한&amp;nbsp;파일 및 프로그램들을 다운받는다. 압축 파일 구성은 다음과 같다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;압축 파일을 푼 뒤, 아래와 같이&amp;nbsp;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;fastboot,adb, qpst, qualcomm driver&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;등을 우선적으로 설치한다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p style=&quot;list-style-type: inherit; line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;'Android_Tools' 내에 있는&amp;nbsp;adb-setup-1.4.3.exe 파일을 실행하여 adb, fastboot를 설치한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;list-style-type: inherit; line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;QPST 디렉토리 내의 setup.exe 파일을 실행하여 QPST 프로그램을 설치한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;list-style-type: inherit; line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Qualcomm Driver 폴더 내에 있는 inf 파일 3개에서 각각 오른쪽 마우스를 클릭한 뒤 메뉴에서 '설치' 버튼을 클릭하여 드라이버를 설치한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8; text-align:center;&quot;&gt;&lt;table class=&quot;txc-table&quot; width=&quot;726&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;display:inline; vertical-align: middle; border: none; border-collapse: collapse; width: 726px;&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:13px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 24px; border-width: 1px; border-style: solid; border-color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt; Android_Tools&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 530px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-top: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;안드로이드 부트로더와 adb shell을 다루기 위한 필수 유틸리티&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;EFS(XZ1_EFS)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 530px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;통신사 VoLTE 설정 파일들&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;QPST&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 530px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;EFS 편집&amp;nbsp;프로그램&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 23px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Qualcomm Driver&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 530px; height: 23px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;QPST 사용을 위한 퀄컴 칩셋 드라이버&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Magisk&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 530px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;안드로이드 루팅용 프로그램&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;TWRP (Oneplus 5T)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 530px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;안드로이드 커스텀 리커버리. 이를 이용하여 Magisk 루팅 툴을 설치한다.&amp;nbsp;압축 파일 내에 담간 TWRP의 버전이 오래되었다면&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://forum.xda-developers.com/devdb/project/?id=21949#downloads&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://forum.xda-developers.com/devdb/project/?id=21949#downloads&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;에서 최신 버전을 받는다.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 195px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0);&quot; rowspan=&quot;1&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Stock Recov&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;ery&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;width: 530px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0);&quot; rowspan=&quot;1&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;백업 복구용 recovery 파일(&lt;/span&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/oneplus-5t-mirrors-official-oxygen-os-t3708099&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;원플러스&amp;nbsp;&lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/oneplus-5t-mirrors-official-oxygen-os-t3708099&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;리&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;커버리 순정 이미지&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size:11pt;&quot;&gt;에서 찾을 수 &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;있다.)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;h2&gt;본론&lt;/h2&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이제 준비작업이 끝이 났다. VoLTE 활성화 작업은 아래와 같은 순서로 진행된다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;통신사별 VoLTE OMD 등록&lt;/span&gt;&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;안드로이드 루팅 작업&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;QPST 이용하여 EFS 편집&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;재부팅 후 VoLTE 활성화&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;안드로이드 언루팅 작업&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;1. 통신사별 VoLTE OMD 등록&lt;/h3&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;통신사 고객 전화를 통해 VoLTE OMD 코드로 등록한다. IMEI, 일련번호, 모델명 등의 정보로 상담원과 통화 후 등록할 수 있다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;각 통신사별 OMD 등록 코드는 아래와 같다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;SKT: OMD 기타LTE핸드셋_VOLTE&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;KT: PTA_VOLTE&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;LG U+: OM_PHONE (유플러스의 경우 통신 이상이 발생할 경우만 등록)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;2. 안드로이드 루팅 작업&lt;/h3&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;안드로이드 루팅 작업이 필수이기 때문에 스마트폰 내의 데이터는 모두 삭제된다. &lt;b&gt;중요한 데이터가 있다면 진행하기 전에 반드시 사전에 백업해야 한다.&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;h4&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;가. 개발자 모드 활성화 및 설정&lt;/span&gt;&lt;/h4&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;'설정 &amp;gt; 휴대전화 상태' 로 들어간 뒤 맨 아래에 있는 빌드 번호를 계속해서 눌러 개발자 모드를 활성화한다.&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;'설정 &amp;gt; 개발자 옵션'으로 들어간 뒤 'OEM 잠금 해제', '고급 재시작', 'USB 디버깅'을 활성화 한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;스마트폰과 작업할 PC를 연결하고 스마트폰의 전원 버튼을 길게 눌러 재시작 &amp;gt; 부트로더 &amp;gt; 부트로더 버튼을 클릭하여 부트로더로 진입한다.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 800px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99B0DC4B5BD9803A23&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_20181031-191217.jpg&quot; height=&quot;800&quot; style=&quot;width: 400px; height: 800px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;h4&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;나. 부트로드 언락 및 리커버리 이미지 변경&lt;/span&gt;&lt;/h4&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;PC에서 콘솔을 켠 뒤(Win - R 입력 후 cmd 입력) 후&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&amp;gt; fastboot devices&lt;/pre&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;를 입력한다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이 때 아래와 같이 리스트에 반드시 장치가 나타나야 한다. 만약 아무런 장치도 나오지 않는다면 연결 상태를 다시 확인한다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/997B263A5BD9819704&quot; filemime=&quot;image/png&quot; filename=&quot;fastboot_devices.png&quot; height=&quot;613&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;위의 그림처럼 fastboot에 장치가 연결되었음을 확인했다면 OEM 언락 명령어를 입력한다. 명령 실행 후에는 스마트폰의 볼륨 키를 이용해 oem을 언락한다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&amp;gt; fastboot oem unclock&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이 후&amp;nbsp;스마트폰은 장치 초기화 절차를 수행하고 절차가 끝나면 다시 부트로더로 돌아오게 된다. 이제&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;fastboot를 통해 recovery 파티션을 플래시해주자.&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush: bash&quot;&gt;&amp;gt; fastboot flash recovery&amp;nbsp;twrp-3.2.3-x_blu_spark_v9.85_treble-op5_op5t.img&lt;/pre&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이제&amp;nbsp;스마트폰의 볼륨키를 눌러 recovery 모드로 진입한다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;다. 리커버리 진입 및 Magisk 플래시&lt;/span&gt;&lt;/h4&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;리커버리 모드 진입 후 메인 화면에서 아래와 같이 '&lt;b&gt;Advanced &amp;gt; ADB Sideload'&lt;/b&gt; 를 실행한다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;img src=&quot;https://img.gadgethacks.com/img/35/94/63625212645725/0/sideload-flashable-zips-android-with-twrp.w1456.jpg&quot; width=&quot;400px&quot;&gt;&lt;img src=&quot;https://img.gadgethacks.com/img/06/72/63625212682819/0/sideload-flashable-zips-android-with-twrp.w1456.jpg&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이제 작업하던 컴퓨터 콜솔에서 아래 명령어를 통해 Magisk를 설치한다.&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush: bash&quot; style=&quot;font-size: 16px;&quot;&gt;&amp;gt; adb sideload Magisk.zip&lt;/pre&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;설치가 끝나면 &lt;b&gt;'Reboot System'&lt;/b&gt; 버튼을 클릭하여 스마트폰을 재시작한다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;line-height: 1.8;&quot;&gt;3. QPST 이용하여 EFS 편집&lt;/h3&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;스마트폰을 정상 부팅한 뒤, PC와 연결한 상태에서 다시 PC의 콘솔로 돌아가자. 이제 콘솔에서 아래 명령어를 실행해준다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;pre class=&quot;brush: bash&quot; style=&quot;font-size: 16px;&quot;&gt;&lt;div style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 13px; white-space: normal; line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;PS&amp;gt; adb shell&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 13px; white-space: normal; line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;$ su&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 13px; white-space: normal; line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;# setprop sys.usb.config diag, adb&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이 때 셸의 프롬프트 모양($ -&amp;gt; #)의 변화에 유의하자. 반드시 su 로 루트 권한을 획득한 뒤에는 '#' 모양이 나타나야 한다.&amp;nbsp;위 명령어를 실행하고 난 뒤, 다시 PC와 스마트폰을 재연결하면 장치 관리자 내에 Qualcomm HS-USB Diagnostics 900E가 잡힐 것이다. 하지만 본인의 경우는 Oneplus 5T 로만 잡혀 있고 드라이버가 단번에 잡히지 않아, 장치관리자에서 'Oneplus 5T'를 직접 클릭한 뒤, 드라이버 업데이트(수동)를 통해 'Qualcomm HS-USB Diagnostics 900E'를 찾아서 직접 설치했다. 아래는 샤오미를 연결한 상태를 나타낸 스크린샷인데, 원플러스의 경우도 아래처럼 포트(COM &amp;amp; LPT) 내에 Qualcomm HS-USB가 인식되어야 한다. (만약 인식되지 않는다면 필자처럼 장치관리자에서 드라이버를 직접 선택 &amp;amp; 설치해주자)&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;img src=&quot;https://dthumb-phinf.pstatic.net/?src=%22http%3A%2F%2Fcfile24.uf.tistory.com%2Fimage%2F99AD6C345ABF4CF42299E8%22&amp;amp;type=cafe_wa740&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이제 QPST를 실행하여 Start Clients &amp;gt; EFS Explorer를 실행한다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;img src=&quot;https://dthumb-phinf.pstatic.net/?src=%22http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F9982AA435ABF4D73242383%22&amp;amp;type=cafe_wa740&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;img src=&quot;https://dthumb-phinf.pstatic.net/?src=%22http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F994D81485AC5E7A0178BD7%22&amp;amp;type=cafe_wa740&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;위 화면이 나타났다면 이제 VoLTE 툴 안에 있는 통신사 파일을 각 폴더에 복사해주자. 이 때&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;반드시 업데이트할 &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;각 폴더 내의 파일들을 탐색기로 드래그에서 백업해주자. 복사가 끝나면 케이블을 분리하고 재부팅해준다.&lt;/span&gt;&lt;/p&gt;&lt;h3&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;4. VoLTE 활성화&lt;/span&gt;&lt;/h3&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이제 VoLTE를 활성화할 차례다. 전화에서 *#800# 을 입력한 후 'Oneplus LogKit' &amp;gt; Function Switch &amp;gt; enable VoLTE, enable VoWIFI switch를 각각 활성화해준 뒤 재부팅해준다. 재부팅 후 전화 &amp;gt; 설정 &amp;gt; SIM 및 네트워크 설정으로 들어가면 아래와 같이 VoLTE 설정 메뉴가 생긴 것을 확인할 수 있다. 이 버튼을 토글해주면 VoLTE가 활성화된다.&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 800px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995C65495BD98BD818&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_20181031-200207.jpg&quot; height=&quot;800&quot; original=&quot;yes&quot; style=&quot;width: 400px; height: 800px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;5. 안드로이드 언루팅&lt;/h3&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이제 언루팅 단계가 남았다. 위에서 루팅을 위해 리커버리로 들어갔던 것과 똑같은 작업으 진행하되, sideloading으로 업로드하는 파일로 언인스톨러 zip 파일을 업로드 하면 된다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;pre class=&quot;brush: bash&quot; style=&quot;font-size: 16px;&quot;&gt;&lt;p&gt;&amp;gt; adb sideload Magisk-uninstaller-20181022.zip&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;사이드로딩이 끝나면 핸드폰을 부트로더로 재부팅한 뒤 recovery를 6_Stock_Recovery 폴더 내에 있는 stock 이미지로 돌려놓는다.&lt;/span&gt;&lt;/p&gt;&lt;pre class=&quot;brush: bash&quot; style=&quot;font-size: 16px;&quot;&gt;&lt;p&gt;&amp;gt; fastboot flash recovery recovery.img&lt;/p&gt;&lt;/pre&gt;&lt;h1&gt;결론&lt;/h1&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;실험적이기는 하지만 애초에 SONY 엑스페리아용으로 나온 EFS를 원플러스5T에 적용한 것인데도 사용에 문제가 없기 때문에 같은 방식으로&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;다른 외산폰들도 해결이 가능할 것이라 생각한다.&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;마지막으로 앞서 소개했던 출처를 다시 표기하겠다. 이 글에 포함된 대부분의 스크린샷은 기존에 나와있는 샤오미 VoLTE 가이드에서 발췌한 것이다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://cafe.naver.com/xst/226170&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;엑스페리아 XZ1 EFS 추출 자료&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://cafe.naver.com/refurbishfactory/136295&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;원플러스5T VOLTE 성공기&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/oneplus-5t-mirrors-official-oxygen-os-t3708099&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;원플러스&amp;nbsp;&lt;/span&gt;&lt;/a&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/oneplus-5t-mirrors-official-oxygen-os-t3708099&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;리커버리 순정 이미지&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://cafe.naver.com/refurbishfactory/136382&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;샤오미 미노트3 VoLTE 사용 가이드&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;(원문 주소:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://ruinses.tistory.com/1552&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;http://ruinses.tistory.com/1552&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;https://forum.xda-developers.com/oneplus-5t/how-to/guide-volte-vowifi-german-carriers-t3817542&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;VoLTE 설정 옵션 활성화 방법 (XDA Forums)&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>일상</category>
<category>OnePlus 5T</category>
<category>VoLTE</category>
<category>해금</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/274</guid>
<comments>https://chaoxifer.tistory.com/274#entry274comment</comments>
<pubDate>Wed, 31 Oct 2018 19:42:05 +0900</pubDate>
</item>
<item>
<title>Docker + PHPStorm 이용한 PHP 개발환경 구축하기</title>
<link>https://chaoxifer.tistory.com/251</link>
<description>&lt;h1 style=&quot;line-height: 1.8;&quot;&gt;Docker + PHPStorm 이용한 개발환경 구축&lt;/h1&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;본 글은&amp;nbsp;아래와 같이 구성된다.&lt;/div&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;Docker 이용하여 개발 노트북에 PHP 가상 서버 구축&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;div style=&quot;line-height: 1;&quot;&gt;PHPStorm 설정 및&amp;nbsp;php 파일 디버깅&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;이 글에서 소개하는 내용들은 모두 Mac OS환경에서 진행하였습니다.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;Modern PHP를 배우기 위해&lt;/h2&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;퇴사 후, 신입 공채를 준비하면서 동시에 기존 티스토리 플러그인을 손보기 위해 Modern PHP를 배우고자 마음먹었다. 제대로 배운 것도 없을 뿐더러,&amp;nbsp;소스코드가 엉망이라 메일로 보내준 고마운 사람들의 피드백도 제대로 반영하지 못하는 까닭에,&amp;nbsp;PHPStorm +&amp;nbsp;Docker를 이용한 개발환경을 구축하려 삽질을 시작했다.&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;프로젝트 파일 구조는 아래와 같다.&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&lt;b&gt;$HOME/Workspaces/PHP&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&amp;nbsp; &lt;b&gt;&amp;nbsp;- src/&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -&amp;gt;&amp;nbsp;login.php (테스트용 php파일을 만든다. )&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&amp;nbsp; &amp;nbsp;- &lt;b&gt;Dockerfile&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;&amp;nbsp; &amp;nbsp;- &lt;b&gt;script.sh&lt;/b&gt; (container 정리용 스크립트)&lt;/div&gt;&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;Docker 이미지 및 컨테이너 제작&lt;/h2&gt;&lt;div style=&quot;line-height: 1.8;&quot;&gt;먼저, $HOME/Workspaces/PHP/Dockerfile 파일을 하나 만들어 아래와 같이 작성한다.&lt;/div&gt;
&lt;pre&gt;&lt;code class=&quot;dockerfile&quot;&gt;FROM php:7.0-apache

ENV DEBIAN_FRONTEND=noninteractive

RUN pecl install xdebug

RUN docker-php-ext-enable xdebug

RUN echo &quot;zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20170718/xdebug.so&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_enable=on&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_autostart=on&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_handler=dbgp&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_mode=req&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_port=10000&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_log=/var/log/xdebug_remote.log&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.idekey=PHPSTORM&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo &quot;xdebug.remote_connect_back=Off&quot; &amp;gt;&amp;gt; /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

EXPOSE 80
EXPOSE 3000
EXPOSE 8080
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;Docker Hub의 php 7.0 버전 이미지를 기반으로 작성한 것으로서 80번, 3000번, 8080번 포트를 호스트와 연결할 포트 번호로 설정한다. 그 위의 xdebug 관련 설정들은 나중에 PHPStorm에서 디버깅을 하기 위해 필요한 설정 작업으로 컨테이너가 만들어져 초기화 될 때 실행될 명령들이다.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;위와 같이 작성한 후에는 build 옵션으로 docker 이미지를 생성해주자.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;$ cd $HOME/Workspaces/PHP &amp;amp;&amp;amp; docker build --no-cache=true --tag phpdev:0.1
&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;여기서 --no-cache=true 옵션을 붙여준 이유는 기존에 생성된 이미지가 있는 경우 캐시 때문에 새로 반영한 내용이 이미지에 포함되지 않는 걸 방지하기 위해서이다. (한참동안 왜 추가한 명령들이 반영이 안되는지 헤매었다.)&lt;/p&gt;
&lt;p&gt;docker 이미지를 만든 뒤에는 아래와 같이 컨테이너로 만들어주자.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;$ docker run --name phpdev -d -p 8080:8080 -p 80:80 -p 3000:3000 -e XDEBUG_CONFIG=&quot;remote_host=192.168.25.22&quot; -v $PWD/src:/var/www/html phpdev:0.1&lt;/code&gt;
&lt;/pre&gt;
&lt;p&gt;여기서 중요한 것은, remote_host의 아이피 주소, 즉 컨테이너가 바라봤을 때 호스트 서버의 아이피 주소를 적어주어야 한다. 맥의 경우는 다양한 방법이 있었는데 안되는 것이 많아서, 일단은 docker의 IP 관련 설정을 하지 않았다는 가정 아래, 아래 명령으로 IP 주소를 찾자. (혹시 아시는 분이 계시다면 댓글 부탁드립니다.)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;$ cat ~/Library/Containers/com.docker.docker/Data/database/com.docker.driver.amd64-linux/slirp/host # 만약 본인처럼 해당 경로에 파일이 존재하지 않는 경우
$ ifconfig | grep 'inet 192' | awk '{ print $2}'  # 본인은 이 방법을 사용했다. 하지만 단순히 ifconfig 내용 중에서 192를 찾는 거라 맞는 방법은 아니다.&lt;/code&gt;
&lt;/pre&gt;&lt;p&gt;위와 같이 'docker run ... ' 명령어를 통해 컨테이너를 실행했다면 아래와 같이 정상적으로 올라왔는지 확인한다.&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 331px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99C3524F5B74419011&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.06.42 AM.png&quot; height=&quot;331&quot; original=&quot;yes&quot; style=&quot;width: 500px; height: 331px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;올라온 것을 확인했다면, 웹 브라우저를 열어 http://localhost/login.php&amp;nbsp;로 접속해보자. 아래와 같이 본인이 작성한 php 파일 내용을 볼 수 있을 것이다.&lt;/p&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99CF963E5B74422432&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.09.00 AM.png&quot; height=&quot;507&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;PHPStorm 설정하기&lt;/h2&gt;&lt;p&gt;PHPStorm의 Preferences -&amp;gt; Languages &amp;amp; Frameworks -&amp;gt; PHP -&amp;gt; Servers 페이지를 연 후 아래와 같이 설정한다.&lt;/p&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99EFEF475B7442B82E&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.11.43 AM.png&quot; height=&quot;587&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;여기서 중요한 것은 Xdebug 포트 번호를 적는 것이 아닌 http 서비스 포트 번호를 적어줘야 한다.&amp;nbsp;위와 같이 'Use path mappings' 에 체크해준 후, src 디렉토리를 '/var/www/html' 디렉토리에 맵핑시켜준다.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;그 다음은 PHP 섹션의 Debug 메뉴를 클릭한 뒤 Xdebug 부분에 있는 포트 번호를 Dockerfile에서 설정으로 입력해준 값으로 변경해준다.&lt;/p&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9949B94F5B74433002&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.13.43 AM.png&quot; height=&quot;587&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Xdebug 부분에서, 본인은 10000번을 포트번호로 정해주었으므로, 해당 번호로 설정해주었다.&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;마지막으로, Run -&amp;gt; Edit Configurations로 들어가, 'PHP Remote Debug'를 하나 추가해준다. 이 때 사용할 서버는 위에서 설정해준 Server로 선택해준다.&lt;/p&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99C726345B74438C0F&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.15.05 AM.png&quot; height=&quot;588&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그리고 여기서 2번 항목의 'browser toolbar or bookmarklets 링크를 클릭한 뒤 사용하는 브라우저에 맞는 애드온을 설치해준다. 본인은 사파리, 크롬에 관련 플러그인/애드온을 설치하였다.&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;설치 후에는 우측 상단의 메뉴에서 디버깅을 버튼을 클릭해주면 아래와 같이 'Waiting for incoming connection with ide key 'PHPSTORM'이라는 메시지와 함께 대기 중인 것을 확인할 수 있다.&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 249px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/990C39335B74443D32&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.17.12 AM.png&quot; height=&quot;249&quot; original=&quot;yes&quot; style=&quot;width: 400px; height: 249px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 166px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99BC6F475B74443D3B&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.17.16 AM.png&quot; height=&quot;166&quot; original=&quot;yes&quot; style=&quot;width: 400px; height: 166px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;이제 다시 브라우저로 돌아가서 http://localhost/login.php로&amp;nbsp;접속해보자. 아래와 같이 breakpoint에 자동으로 걸리는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993C34455B74450C0F&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-16 at 12.20.49 AM.png&quot; height=&quot;522&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;누군가는 나처럼 별 것 아닌 걸로 삽질을 하지 않길 빌며... 포스팅을 마친다.&lt;/p&gt;</description>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/251</guid>
<comments>https://chaoxifer.tistory.com/251#entry251comment</comments>
<pubDate>Thu, 16 Aug 2018 00:22:28 +0900</pubDate>
</item>
<item>
<title>개인서버 구축 1편: 도쿠위키 설치</title>
<link>https://chaoxifer.tistory.com/250</link>
<description>&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?--&gt;



&lt;!-- 2018-08-09 Thu 01:23 --&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;
&lt;title&gt;‎&lt;/title&gt;
&lt;meta name=&quot;generator&quot; content=&quot;Org mode&quot;&gt;
&lt;meta name=&quot;author&quot; content=&quot;Sukbeom Kim&quot;&gt;
&lt;style type=&quot;text/css&quot;&gt;
 &lt;!--/*--&gt;&lt;![CDATA[/*&gt;&lt;!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per &quot;defun org-babel-execute&quot;
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf &quot; &quot;)) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]&gt;*/--&gt;
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
&lt;!--/*--&gt;&lt;![CDATA[/*&gt;&lt;!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = &quot;code-highlighted&quot;;
     elem.className   = &quot;code-highlighted&quot;;
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]&gt;*///--&gt;
&lt;/script&gt;


&lt;div id=&quot;content&quot;&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;Table of Contents&lt;/h2&gt;
&lt;div id=&quot;text-table-of-contents&quot; style=&quot;line-height: 1.8;&quot;&gt;&lt;p&gt;
&lt;/p&gt;&lt;ul&gt;
&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;#orgaba0aeb&quot;&gt;1. 도쿠위키를 선택한 이유&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;#org5f8537b&quot;&gt;2. 도쿠위키 설치&lt;/a&gt;&lt;/li&gt;&lt;ul&gt;
&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;#orgffcce28&quot;&gt;2.1. PHP 설정&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;#org694ffc5&quot;&gt;2.2. 아파치 설정&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style=&quot;line-height: 1.8;&quot;&gt;&lt;a href=&quot;#org04b5afd&quot;&gt;3. 마무리&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;line-height: 1.8;&quot;&gt;
지난 7월 초, 자취방에 있는 NAS 대신 집에 있는 리눅스 서버를 이용하여 필요한 어플리케이션을 설치하여 서버를 셋팅하였다. 
7월 초라 금방 글을 작성할 수 있을 거라 생각했었는데 이제와서 보니 한달 내내 관련 포스팅을 한번도 올리지 않았다는 게 다소 충격적이다.
&lt;i&gt;퇴사를 한 덕분에 시간적인 여유가 좀 생겼으니&lt;/i&gt;, 위키 설치 편을 시작으로 여태까지 알고 있는 Desktop용 리눅스 설정 방법에 대해 기술하고자 한다.
&lt;/p&gt;

&lt;div id=&quot;outline-container-orgaba0aeb&quot; class=&quot;outline-2&quot; style=&quot;line-height: 1.8;&quot;&gt;
&lt;h2 id=&quot;orgaba0aeb&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 도쿠위키를 선택한 이유&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-1&quot;&gt;
&lt;p&gt;
위키 엔진으로 사용할 수 있는 선택지는 다양하지만, 실제로 사용해보면 도쿠위키만한 게 없었다. (비교 테이블 참고: &lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_of_wiki_software&quot;&gt;Comparison of wiki software&lt;/a&gt;)
위키 서버에 꾸준히 포스팅을 하지는 않았지만 위키 소프트웨어에는 관심이 있어 MediaWiki, Dokuwiki, Tiddlywiki, Flexwiki 등을 사용해보았지만,
간단한 설정과 백업이 가능한 위키는 도쿠위키(dokuwiki)였다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;TiddlyWiki는 파일 하나로 위키 서버 없이 파일 하나만을 저장하면 되고 클라우드 서비스를 통해 접근할 수 있다는 장점이 있지만, 버전 관리 방식이 파일
 여러개를 생성하는 방식이라 비효율적일 수밖에 없고 위키 자체의 양이 많아지면 JS로 만들어진 위키 페이지 자체의 로딩 시간이 극도로 느려지는 문제가 있다. 
이에 몇몇 사용자들은 카테고리별로 파일을 만들어 TiddlyWiki 파일끼리 링크하는 방식으로 해결하고자 했지만 그렇게까지 복잡하게 파일을 관리하기 싫었고 
언제 어디에서나 내 서버로 접근할 수 있는 위키 서버가 필요했기에 TiddlyWiki는 사용하지 
않은지 꽤 오래되었다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;MediaWiki 또한 괜찮은 위키 엔진이지만 설정해주어야 하는 것이 많고 직접 스크립트를 짜야 하는 경우가 많다. 특정 기능에 관련된 플러그인이 있다고 해도, 
플러그인을 사용하기 위해 설정해주어야 하는 것이 게으른 것을 좋아하는 사람들에게는 추천하지 않는다.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org5f8537b&quot; class=&quot;outline-2&quot; style=&quot;line-height: 1.8;&quot;&gt;
&lt;h2 id=&quot;org5f8537b&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;2&lt;/span&gt; 도쿠위키 설치&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-2&quot;&gt;
&lt;p&gt;
먼저, 각 리눅스 배포판에서 제공하는 형태의 Dokuwiki 패키지를 설지한다. 아치리눅스에서는 아래와 같이 &lt;code&gt;pacman&lt;/code&gt; 패키지 매니저를 통해 설치할 수 있다. 
그 외 리눅스 배포판에서는 해당 배포판에서 제공하는 패키지 매니저를 통해 설치한다.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-bash&quot;&gt;$ pacman -S dokuwiki
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgffcce28&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgffcce28&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.1&lt;/span&gt; PHP 설정&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-1&quot;&gt;
&lt;p&gt;
먼저, php 설정 파일(/etc/php/php.ini)에서 gd extension에 대한 코멘트를 제거한다. 
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-text&quot;&gt;extension=gd
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org694ffc5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org694ffc5&quot;&gt;&lt;span class=&quot;section-number-3&quot;&gt;2.2&lt;/span&gt; 아파치 설정&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-2-2&quot;&gt;
&lt;p&gt;
PHP 설정이 끝났으면 아래와 같이 dokuwiki에 관련된 설정 파일(&lt;code&gt;/etc/httpd/conf/extra/dokuwiki.conf&lt;/code&gt;)을 만들어준다.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-text&quot;&gt;Alias /dokuwiki /usr/share/webapps/dokuwiki
&amp;lt;Directory /usr/share/webapps/dokuwiki/&amp;gt;
    Options +FollowSymLinks
    AllowOverride All
    Require all granted
    php_admin_value open_basedir &quot;/tmp/:/usr/share/pear/:/usr/share/webapps/:/etc/webapps/dokuwiki/:/var/lib/dokuwiki/&quot;
&amp;lt;/Directory&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
이 때, Apache 2.4 이전 버전인 경우 &lt;code&gt;Require all granted&lt;/code&gt; 부분을 아래와 같이 변경한다.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-text&quot;&gt;order allow,deny
allow from all
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
마지막으로 &lt;code&gt;/etc/httpd/conf/httpd.conf&lt;/code&gt; 파일에 아래 구문을 추가한다.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-text&quot;&gt;Include conf/extra/dokuwiki.conf
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org04b5afd&quot; class=&quot;outline-2&quot; style=&quot;line-height: 1.8;&quot;&gt;
&lt;h2 id=&quot;org04b5afd&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;3&lt;/span&gt; 마무리&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-3&quot;&gt;
&lt;p&gt;
관련 디렉토리의 권한을 http 사용자에게 부여한 뒤 httpd 서버를 재시작한다.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-bash&quot;&gt;$ chown -R http:http /etc/webapps/dokuwiki
$ chown -R http:http /var/lib/dokuwiki
$ sudo systemctl restart httpd.service
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
정상적으로 설치한 뒤 관리자 메뉴에서 적절한 템플릿을 적용하면 아래와 같이 그럴싸한 개인 위키 페이지를 볼 수 있다.
&lt;/p&gt;


&lt;div class=&quot;figure&quot;&gt;
&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 293px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993324345B6B193B04&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-08-09 at 1.19.45 AM.png&quot; height=&quot;293&quot; style=&quot;width: 400px; height: 293px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;figure-number&quot;&gt;Figure 1: &lt;/span&gt;설치 완료된 위키 페이지&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&quot;postamble&quot; class=&quot;status&quot; style=&quot;line-height: 1.8;&quot;&gt;&lt;p class=&quot;author&quot;&gt;Author: Sukbeom Kim&lt;/p&gt;&lt;p class=&quot;date&quot;&gt;Created: 2018-08-09 Thu 01:23&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>운영체제</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/250</guid>
<comments>https://chaoxifer.tistory.com/250#entry250comment</comments>
<pubDate>Thu, 09 Aug 2018 01:26:07 +0900</pubDate>
</item>
<item>
<title>1년 반 동안의 방산업체 연구원 경험, 퇴사 결정</title>
<link>https://chaoxifer.tistory.com/249</link>
<description>&lt;p&gt;일주일 뒤면 한 국내 방산 대기업에서의&amp;nbsp;연구원이라는 직함을 놓게 된다.&lt;/p&gt;&lt;p&gt;입사할 당시에는 국방을 위해 무기를 개발한다는&amp;nbsp;기대감과 전공을 살려 관련 소프트웨어 개발을 하게 될 것이라는 것, 그리고 신뢰성 높은 소프트웨어를 만들며&amp;nbsp;체계적인 개발 프로세스를 경험할 수 있을 것이란 막연한 기대감으로 부풀어 있었다. 하지만 이러한 기대감은 불과 1년 조차 안되어 모두 사라졌다. 퇴사라는 단어는 일찍부터 마음&amp;nbsp;속에&amp;nbsp;떠올랐지만, 업체와의 납품 건을 마무리하고&amp;nbsp;퇴사하기 위해 6개월이라는 시간을 더 버텼고, 이제서야 연구원이라는 타이틀을 내려놓을 수 있게 되었다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;그리고, 무엇보다도 중요한 것은 여기서 더 시간을 버리게&amp;nbsp;된다면 두번 다신&amp;nbsp;프로그래밍을 할 수 없게 될 것만 같았기에 퇴사라는 결정을 내리게 되었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이곳에서 일하면서, 우리나라의 국방력이 왜 약할 수밖에 없는지 알게 되었다.&lt;/p&gt;&lt;p&gt;국방 무기라면 긴 기간동안 철저하게 만들어야함이 당연한데, 말도 안되는 일정과 예산으로 진행되는 사업 수주. 사업에 참여하는 중소기업체 수에 따라 가산점을 매기는 말도 안되는 규정으로 인해&amp;nbsp;개발업체 하나에 딸려오는 수많은 협력업체들.&amp;nbsp;신뢰성 문제로 사용할 수 없다는 오픈소스 규정들과 100% 동적 커버리지를 만족해야 한다는 신뢰성 규정들. 다 만들어놓은 소프트웨어의 시험평가를 앞두고 요구사항을 변경하는 소요군들과 그것들을 받아주는(?) 개발업체 간의&amp;nbsp;이상한 관행들.&amp;nbsp;고객도 모르는 제품(무기)을&amp;nbsp;어떻게 만든단 말인가?&lt;/p&gt;&lt;p&gt;내가 본 방산 분야에서의 소프트웨어 개발은 외부에서의 SI와 마찬가지였다. 게다가 &quot;보안&quot;은 왜 그렇게 중요한건지, 인터넷과 USB조차 마음대로 사용할 수 없었다.&amp;nbsp;버전 관리조차 할 수 없는 환경에서 사람들은 당연하다는 듯이 소스코드를 날짜별로 디렉토리를 만들어 관리했다. 5기가가 넘는 소스코드를 날짜별로 만들어 관리하는 모습에 gogs로 관리하려 하니 개발자들은&amp;nbsp;git을 사용할 줄 모른다. 협력 업체도, 같은 팀 사람들도 git을 왜 사용해야 하는지 이해가 안간다는 눈치다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;오늘 블라인드에서 아주 공감가는 글을 발견했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/992BD2485B6075B517&quot; filemime=&quot;image/jpeg&quot; filename=&quot;UNADJUSTEDNONRAW_thumb_3b.jpg&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;text-align: center; width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9908743E5B60760518&quot; filemime=&quot;image/jpeg&quot; filename=&quot;UNADJUSTEDNONRAW_thumb_3a.jpg&quot; height=&quot;533&quot; style=&quot;text-align: center; width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;text-align: center; width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99395B4E5B6075D21F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;UNADJUSTEDNONRAW_thumb_38.jpg&quot; height=&quot;533&quot; style=&quot;text-align: center; width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99F9BC3B5B6075F12A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;UNADJUSTEDNONRAW_thumb_37.jpg&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;모든 개발은 ppt 및 오피스 제품으로 한다는 말에 어떤 대꾸도 할 수 없었다. 사실이었다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;지난 1년 반 동안의 경험은 내게 회사를 고를 때의 중요한 기준들을&amp;nbsp;만들어 주었다. 특히 국내 제조업과 군/정부와 관련된 사업을 하는 회사에 대해서는 확실한 기준을 만들어 주었다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;또한, 그 경험들은 언론에서 나오는 방산 비리 사건에 대해 함부로 욕할 수 없게 만들어주었다. 언론에 보도되는 체계개발 동안 만들어진 무기체계에 대해 누가 진정한 가해자인지 알 수 없다는 것을&amp;nbsp;몸으로 알 수 있게 해준 경험들이었기에, 100만원짜리 USB사건과&amp;nbsp;마린온 사건에 대해 더이상 남들처럼 방산비리라며 욕할 수 없게 되었다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그리고 여태까지의&amp;nbsp;경험들은 나는 반드시 개발자로 성장해야하는 적성임을 일깨워주었다. 소프트웨어 개발을 얼마나 원하는지 확실해졌다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;남은 기간동안 이 악물고 노력해서 더 좋은 곳에서 새&amp;nbsp;출발할 수 있도록&amp;nbsp;준비해야겠다. 이 곳에서의 경험들이 헛되지 않도록 말이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>일상</category>
<category>국방소프트웨어개발</category>
<category>방산비리</category>
<category>방산업체</category>
<category>퇴사</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/249</guid>
<comments>https://chaoxifer.tistory.com/249#entry249comment</comments>
<pubDate>Tue, 31 Jul 2018 23:57:07 +0900</pubDate>
</item>
<item>
<title>Mac OS의 Time Machine 서버 구축 및 연결</title>
<link>https://chaoxifer.tistory.com/248</link>
<description>&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;서론&lt;/h2&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;퇴직하는 기념으로 받게될 퇴직금을 고려하여, 꿈에 그리던 맥북 프로를 장만했다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;그간 윈도우즈의 오피스 계열, 메신저, 각종 응용프로그램과 리눅스의 터미널 환경을 함께 누릴 수 있는 것은 매킨토시 환경 밖에 없을 것이라 생각했었는데 역시 내 예상이 맞았다. 13인치의 작은 랩탑에 세팅한 개발환경에서 zsh까지 기본으로 지원해주는 것을 보면서, 개발환경으로 왜 매킨토시를 사용하려 하는지 이해됐다.&amp;nbsp;간혹&amp;nbsp;윈도우즈와 리눅스에서 무료로 배포되는 프로그램들을 유료로 사용해야 한다는 단점이 있지만, 현재로서 이만큼 개발할 때 편한 환경도 없을 것이라 생각한다. 또한, 사용하기&amp;nbsp;불편하다고 하던 리뷰들에는 일부(iMessage 연동 문제)를 제외하고는 동의할 수 없었다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;각설하고, 현재 집에 있는 리눅스 서버를 Time Machine 백업 서버로 설정하기 위해 자료를 찾아보니 역시나 관련 패키지가 있었다. (&lt;a href=&quot;https://wiki.archlinux.org/index.php/Netatalk&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://wiki.archlinux.org/index.php/Netatalk&lt;/a&gt; 참고)&lt;/p&gt;&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;본론&lt;/h2&gt;&lt;h2 style=&quot;line-height: 1.8;&quot;&gt;1. 리눅스 서버에&amp;nbsp;Netatalk 설치하기&lt;/h2&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;Netatalk는&amp;nbsp;AFP(Apple Filing&amp;nbsp;Protocol)을 지원하는 오픈소스 프로젝트로서&amp;nbsp;이를 이용하여 맥의&amp;nbsp;Time Machine 백업 서버로 이용할 수 있다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;들어가기에 앞서, 본 문서에서는 아치리눅스를 기반으로 설명할 것이며, 패키지 설치 시 각 배포판에서 제공하는 위키 자료를 읽어보기 바란다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;먼저, Linux의 서버에 netatalk을 설치한다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;$ yaourt -S netatalk # For Arch Linux&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.8;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:501px;width: 501px; height: 290px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E31B495B5EC4AB37&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-07-30 at 4.55.54 PM.png&quot; height=&quot;290&quot; style=&quot;width: 501px; height: 290px;&quot; width=&quot;501&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;설치 뒤에, TimeMachine에서 사용할 백업 폴더를 만들어주고 관련 계정을 생성한다. 본인은 timemachine 계정을 만들어 설정하였다. 백업 폴더 경로는 임의로 설정해주면 된다.&lt;/p&gt;

&lt;pre style=&quot;bash&quot;&gt;$ mkdir -p /home/timemachine
$ sudo useradd --home /home/timemachine timemachine
$ sudo chown -R timemachine:timemachine /home/timemachine&lt;/pre&gt;&lt;p&gt;설치 뒤에는 /etc/afp.conf를 열어 아래와 같이 설정파일을 입력해준다.&lt;/p&gt;

&lt;pre&gt;$ cat /etc/afp.conf

[Global]
; Global server settings
  mimic model = TimeCapsule6,106
  log level = default:warn
  log file = /var/log/afpd.log

[TimeMachine]
  path = /home/timemachine
  valid users = timemachine
  time machine = yes&lt;/pre&gt;&lt;h2&gt;2. 맥 Finder로 마운트 및 백업 서버&amp;nbsp;설정하기&lt;/h2&gt;&lt;p&gt;입력이 끝난 뒤에, Finder에서&amp;nbsp;Go &amp;gt; Connect to Server &amp;gt; afp://{서버IP주소}를 입력한 뒤 연결하여 아래와 같이 Finder에서 내용이 보이는 것을 확인한다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 288px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9945764D5B5EC7091F&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-07-30 at 5.06.07 PM.png&quot; height=&quot;288&quot; style=&quot;width: 500px; height: 288px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;확인한 뒤에는 Preference -&amp;gt; Time Machine에 들어가서 Finder에 마운트한 리눅스 서버를 선택해주면 아래와 같이 백업 서버로의 설정이 완료된다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;이 때, 맥에서 백업 서버가 보이지 않는 경우, 맥에서 터미널을 열어 아래와 같이 설정을 해주자.&lt;/p&gt;
&lt;pre&gt;defaults write com.apple.systempreferences TMShowUnsupportedNetworkVolumes 1&lt;/pre&gt;&lt;p&gt;아래는 백업서버로 완료되어 백업이 진행중인 화면이다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 329px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993B39435B5EC81B1C&quot; filemime=&quot;image/png&quot; filename=&quot;Screen Shot 2018-07-30 at 5.09.59 PM.png&quot; height=&quot;329&quot; style=&quot;width: 500px; height: 329px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2&gt;결론&lt;/h2&gt;&lt;div&gt;맥을 사용한지 이제 사흘밖에 되지 않았지만, 좋아할 수 밖에 없는 운영체제인 것은 분명하다. 리눅스 환경에서 찾던 PIM 기능은 KDE보다 낫고 폰트 렌더링 면에서 Infinality를 따로 설치하지 않아도 되어서 정말 편하다. 무엇보다 국내 메신저인 카카오톡을 사용할 수 있다는 것이 매력적이다.&lt;/div&gt;&lt;div&gt;하지만, BSD 기반이라고 하던 맥에서 시스템 디렉토리 구조부터 이렇게 다를 줄이야.. 또한, 백업서버까지 거의 모든 것이 iCloud로 연결되어 리눅스 서버와 연동하기 위한 어플리케이션이 잘 보이지 않는다.&amp;nbsp;필요한 어플리케이션을 조만간 리스트로 만들어 하나씩&amp;nbsp;개발해보면서 매킨토시 환경에도 적응해봐야겠다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>운영체제</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/248</guid>
<comments>https://chaoxifer.tistory.com/248#entry248comment</comments>
<pubDate>Mon, 30 Jul 2018 17:16:34 +0900</pubDate>
</item>
<item>
<title>서버 환경 구축하기</title>
<link>https://chaoxifer.tistory.com/247</link>
<description>&lt;h2&gt;서버 환경: 아치 리눅스&lt;br /&gt;&lt;/h2&gt;&lt;p&gt;자취방에 있는 IPTIME 사의 NAS4DUAL을 사용하다가 성능 및 제한적인 기능으로 본가에 남아있는 피시를 24시간 켜 놓으면서 서버로 이용하기로 마음먹었다. 이 글에는 피시를 이용해서 NAS 대체 환경을 구축하는 방법에 대해 설명하려 한다.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;서버는 Arch Linux 환경으로 구축하였다. &lt;/b&gt;원래 Gentoo, BSD를 즐겨 썼지만 요 근래 회사 일로 성격이 더러워지면서 예전만큼 컴파일 시간을 즐기지 못하게 된 까닭에 바이너리 기반 배포판을 사용하게 되었다. 우분투, 페도라 등의 리눅스 배포판도 정말 좋은 배포판이지만 내 서버만큼은 내가 좋아하는 것으로 설치하고 싶었다.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;서버에 설치한 패키지는 아래와 같다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;GitLab&lt;br /&gt;설치형 GitHub와 같은 개념으로 보면 된다. git 저장소 관리 및 코드 리뷰, 이슈 트래킹, 활동 이력 및 위키 등의 기능들을 제공한다. &lt;br /&gt;&lt;/li&gt;&lt;li&gt;Dokuwiki&lt;br /&gt;위키 엔진 중 하나로 꽤 유명한 편. TiddlyWiki나 MediaWiki 등을 사용해봤지만 개인적으로는 도쿠위키가 최선의 선택인 것 같다.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Nextcloud&lt;br /&gt;NAS로써 서버를 활용하기 위한 필수 패키지. 스마트폰에 관련 앱을 설치하여 개인 클라우드 공간으로 활용할 수 있다.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Deluge&lt;br /&gt;토렌트 서버, 클라이언트용 패키지이다. 클라이언트에서 서버에서 실행 중인 daemon에 접속하여 파일을 받기 위해 설치하였다.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Quassel&lt;br /&gt;IRC 프로그램 중 가장 편한(?) 패키지이다. (weechat, irssi 등 매력적인 것들도 많지만 이제는 편한 것만 찾게 되더라.. )&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Apache Server&lt;br /&gt;http 서버 및 WebDAV를 설정하기 위한 필수 패키지&lt;br /&gt;&lt;/li&gt;&lt;li&gt;MariaDB&lt;br /&gt;MySQL에서 포크한 MariaDB&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Jenkins&lt;br /&gt;빌드, 테스트 suite 자동화 솔루션. 사실, 여태까지 제대로 사용해본적이 없지만 개인 개발 프로젝트에서 사용해보기 위해 설치하였다.&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;아파치 및 MariaDB, PHP 등을 설정하기 위한 내용은 별도로 설정하지 않겠다. 관련 설정파일의 위치나 설정 방법이 배포판 별로 미묘하게 다르기 때문에 각 배포판 홈페이지를 통해 확인하는 것이 훨씬 효율적이고 명확하기 때문이다. &lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;각 패키지 설치 방법 및 이슈 등에 대한 내용은 이어지는 글들을 통해 설명하겠다.&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>리눅스</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/247</guid>
<comments>https://chaoxifer.tistory.com/247#entry247comment</comments>
<pubDate>Sun, 01 Jul 2018 12:33:32 +0900</pubDate>
</item>
<item>
<title>윈도우즈에서 Emacs 사용하기</title>
<link>https://chaoxifer.tistory.com/241</link>
<description>&lt;p&gt;윈도우즈에서 Emacs를 실행할 수 있는 방법은 크게 다음과 같다.&lt;br /&gt;
&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/emacs/download.html#windows&quot;&gt;윈도우즈용으로 포팅된 이맥스 (공식 배포)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WSL(Windows Subsystem for Linux) 및 윈도우즈용 X Server(e.g. Xming)와 함께 사용&lt;/li&gt;
&lt;li&gt;Cygwin 사용&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
등이 있다. 위 방법 중에서 첫 번째, 공식 배포되는 포팅 바이너리는 불안정하고 여러 패키지를 설치했을 때 안되는 것이 많았다. &lt;br /&gt;
두 번째 WSL은 안정적이지만 한글 사용에 있어 설정해주기 까다롭기 때문에 Cygwin을 사용하여 설정하기로 결정했다.&lt;/p&gt;&lt;p&gt;
방법은 간단하다. 다만, Xorg Server를 포팅한 바이너리 XWin.exe을 윈도우 시작 시 자동으로 실행되도록 설정하는 방법을 추가했다.&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;&lt;h2&gt;1. Cygwin 설치&lt;br /&gt;&lt;/h2&gt;&lt;p&gt;
설치하고자 하는 대상 드라이브에 cygwin 디렉토리를 만들고, 홈페이지에서 배포하는 실행파일을 복사한다.&lt;br /&gt;
실행파일을 실행하여 설정하는 항목 중 두 가지만 설정해주면 된다.&lt;br /&gt;
&lt;br /&gt;
1. Root Directory, Package Directory&lt;br /&gt;
Root Directory는 실행파일을 넣은 디렉토리 경로(필자는 D:\cygwin64)로, Local Package Directory는 Root Directory 아래 packages 디렉토리를 만든 뒤 해당 경로로 지정해준다.(D:\cygwin64\packages)&lt;br /&gt;
&lt;br /&gt;
2. Mirror 등록&lt;br /&gt;
한국에서 빠르게 접속할 수 있는 미러사이트는 KAIST와 DaumKakao다. http://mirror.kakao.com/cygwin을 User URL에 입력하고 Add를 누르면, cygwin이 제외된 'http://mirror.kakao.com/'이 등록된 것을 알 수 있다.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;&lt;h2&gt;2. X Server 설치 및 설정&lt;br /&gt;&lt;/h2&gt;&lt;p&gt;
'xorg-server*' 패키지를 모두 설치한 뒤, %AppData%Roaming\Microsoft\Windows\Start Menu\Programs\Startup 경로에 아래와 같이 바로가기를 만들어준다.&lt;br /&gt;
&lt;br /&gt;
&amp;gt; &lt;strong&gt;D:\cygwin64\bin\run.exe --quote /usr/bin/bash.exe -l -c &quot;cd; /usr/bin/startxwin&quot;&lt;/strong&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;a href=&quot;http://39.118.114.86:8000/apps/wordpress/wp-content/uploads/2018/04/2018-04-19.png&quot;&gt;&lt;img src=&quot;http://39.118.114.86:8000/apps/wordpress/wp-content/uploads/2018/04/2018-04-19-209x300.png&quot; alt=&quot;&quot; class=&quot;alignnone size-medium wp-image-566&quot; width=&quot;209&quot; height=&quot;300&quot;&gt;&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
그 이후에는 윈도우즈에 DISPLAY 환경변수를 등록해준다.&lt;br /&gt;
&lt;/p&gt;&lt;ol&gt;&lt;li&gt;시작 - 실행 - powershell.exe 실행&lt;/li&gt;
&lt;li&gt;[Environment]::SetEnvironmentVariable(&quot;DISPLAY&quot;, &quot;:0.0&quot;, [System.EnvironmentVariableTarget]::User)&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;3. Emacs 설치&lt;br /&gt;&lt;/h2&gt;&lt;p&gt;
X Server와 마찬가지로 cygwin.exe에서 emacs 설치 후 바로가기를 만들어준다.&lt;br /&gt;
&amp;gt; D:\cygwin64\bin\run.exe /usr/bin/bash -c -l &quot;/usr/bin/emacs&quot;&lt;br /&gt;
&lt;br /&gt;
실행하면 정상적으로 Emacs가 실행된 것을 확인할 수 있다.&lt;br /&gt;
&lt;a href=&quot;http://39.118.114.86:8000/apps/wordpress/wp-content/uploads/2018/04/2018-04-19-3.png&quot;&gt;&lt;img src=&quot;http://39.118.114.86:8000/apps/wordpress/wp-content/uploads/2018/04/2018-04-19-3-300x163.png&quot; alt=&quot;&quot; class=&quot;alignnone size-medium wp-image-570&quot; width=&quot;300&quot; height=&quot;163&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>운영체제</category>
<category>cygwin</category>
<category>emacs</category>
<category>이맥스</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/241</guid>
<comments>https://chaoxifer.tistory.com/241#entry241comment</comments>
<pubDate>Thu, 19 Apr 2018 02:41:46 +0900</pubDate>
</item>
<item>
<title>방산업체 신입 개발자의 이야기</title>
<link>https://chaoxifer.tistory.com/231</link>
<description>&lt;p&gt;1년 반 전에 스타트업을 퇴사하고 평소에 관심이 있었던 리눅스와 커널 프로그래밍, 그리고 시스템 소프트웨어 개발 분야에서 일을 하기 위해 방위산업 분야에 있는 한 회사에 입사했다. 그때까지만 해도 軍에 관련된 무기 제품들은 민수 제품보다 '실시간 컴퓨팅'과 '사용자와의 상호작용'을 더 중요하게 여길 것이라 기대하였다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만, 입사하고 나서의 업무는 기대했던 것보다 많이 달랐다. 아직 사회 초년생이고 경험 없는 고작 2년차 신입이지만, 1년 동안 몸으로 느낀 무기 개발 프로세스에서의 아쉬웠던 점들에 대해 사견을 적으려 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;복잡한 협력 관계: 갑, 을, 병, 정..&lt;br /&gt;&lt;/h2&gt;&lt;p&gt;무기 개발 사업의 진행 과정을 &quot;아주&quot; 간단하게 요약하면, 軍은 필요한 무기체계에 대한 소요 제기를 하고, 방위사업청은 이를 검토하여 사업 공고를 낸다. 사업 공고가 나면 각 업체들이 제안서를 작성하여 사업을 수주하고 그 이후에는 통상적으로 국방과학연구소(줄여 '국과연') 관리 하에 개발을 진행한 뒤, 개발 성공 여부에 따라 개발한 제품을 양산한다.&lt;/p&gt;&lt;p&gt;문제는 사업 수주에서부터 생긴다. 방사청에서 사업을 낼 때, 제안서의 가산점으로서 &quot;중소기업 참여도&quot;가 있다. 얼핏 보아서는 대기업 독점을 막기 위한 좋은 규정인 듯한데 전형적인 탁상행정식 규정이다. 기술적인 성숙도와 노하우를 축적하고 있는 업체들이 설계나 개발을 하고 협력개발로 전환할 수 있는 것들을 선택하여 중소기업체들과 함께 동반성장할 수 있도록 해야하는데, 실상은 참여하는 중소기업의 업체 수, 전체 수주 금액에서 중소기업체들에게 돌아갈 금액의 비율을 따져 그 기준으로 가산점을 매긴다. 결국 하청업체들만 많아지고 대기업은 관리만 하게되며, '軍 - 방사청 - 국과연 - 수주 업체 - 협력 업체 1, 2, 3 - 협력 업체 1'-a,b,c...' 의 구조를 갖게 된다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 사업 수주에서 가장 중요한 것이 '저가 수주'. '금액'이다. 적은 금액을 제시해야만 사업을 수주할 수 있는데 복잡한 하청구조를 끼고, 저가 수주를 하다보니 실제 연구원들은 개발을 할 수가 없는 구조가 되어버렸다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;군(軍)도 모르는 애매모호한 요구사항&lt;/h2&gt;&lt;p&gt;요구사항 중에서 '소프트웨어를 최대한 재사용 가능하도록 만들어야 한다.' 라는 것이 기억에 남는다. '최대한'이라는 것이 들어간 걸 보고 얼마나 씁쓸하게 웃었던지... 군은 운용적인 측면에서 어떤 식으로 운용되어야 하는지 잘 알고 있지만, 개발자에게 그것을 어떤 식으로, 어떻게 구체적으로 전달해주어야 하는지에 대한 가이드라인이 명확하지가 않은 것 같다. 애매모호한 요구사항을 가지고 분석해서 개발해놓으면, 확실하게 결정난 것이 없으니 막바지에 설계가 변경되는 것이 비일비재하다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;철저한 보안. 100% 커버리지 만족과 오픈 소스 사용 금지&lt;/h2&gt;&lt;p&gt;동적 시험에서 100퍼센트 커버리지 만족이라는 말도 안되는 규정에, 오픈소스 또한 '직접적으로' 사용하지 못한다. 무분별한 오픈소스 사용은 반드시 규제되어야 하는 데에는 동의하지만, 일부 그렇지 못한 경우도 있다. 예를들어, 동영상 재생을 위해서 널리 사용되고 있는 ffmpeg 같은 경우 거의 모든 곳에서 사용되고 있지만 무기 개발 분야에서는 그대로 사용되지 못한다. 그러면서도 해당 라이브러리의 '직접적' 사용은 안되지만, 상용으로 구매하는 라이브러리를 사용하여 '간접적으로' 사용하여 개발하는 것은 가능하다. 오픈소스가 포함된 라이브러리에 대한 책임은 해당 라이브러리를 판매한 업체에게 있는 것이므로 사용이 가능하다는 얘기인데 이것 만큼은 아직도 이해할 수가 없다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2 style=&quot;text-align: left;&quot;&gt;회사에 입사하기 전, 내가 바라본 무기 개발 업체 : 비리의 온상&lt;br /&gt;하지만 실상은 ...&lt;br /&gt;&lt;/h2&gt;&lt;p&gt;방위 산업체는 외부에서 알기가 힘들다. 매니아라면 모를까 실제로 무기 개발이 어떠한 방식으로 이루어지는지 모르기 때문에 뉴스 기사로 접하는 게 유일하다. 이 때문인지 무기 체계 개발에 관련된 뉴스 기사가 올라올 때마다 '비리'에 대한 단어들이 끊이질 않는다. 무기 개발 실패나 성적서 조작 등의 기사들에는 비난하는 댓글들을 쉽게 볼 수 있다. &lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 실상은  개인의 도덕적 해이로 인한 문제보다 개발 전체에 대한 프로세스와 규정이 제대로 자리잡지 못하는데서 기인한 것들이 많다. 말도 안되는 USB 가격으로 유명했던 기사도 있는데 몇 개 생산하지도 않을 USB를 위해서 투입된 인원들과 군 스펙을 만족하기 위한 여러가지 환경 시험 비용, 각종 규제들을 생각한다면 어느 정도 그들만의 변명을 이해할 수 있지 않을까.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;계속해서 쏟아져 나오는 신기술들&lt;/h2&gt;&lt;p&gt;이외에도 여러가지로 문제점은 많지만, 그만큼 개선할 수 있는 것들도 많다는 점에 희망을 갖는다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;매일같이 계속해서 쏟아져 나오는 새로운 기술들과 새로운 프로그래밍 언어들, Kickstarter, Indigogo에 올라오는 신선한 프로젝트들과 매주 업데이트 되는 LWN의 포스팅을 볼 때마다 느긋할 수가 없다. 그럴 때마다, &quot;과연 이곳에서 내가 얻을 수 있는 건 무엇일까&quot; 라는 질문과 &quot;어딜 가나 자기 하기 나름&quot;이라는 생각이 계속해서 맴돈다. 그러던 중, 오늘 외국의 소프트웨어 엔지니어가 쓴 글(&lt;a href=&quot;https://stackoverflow.com/cv/thomasjowens&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://stackoverflow.com/cv/thomasjowens&lt;/a&gt;)을 보게 되었다. &lt;br /&gt;&lt;/p&gt;&lt;p&gt;애국이나 회사를 위해서가 아니라, 나 자신을 위해서 지금 맡고 있는 프로젝트에 책임지고, 프로젝트가 끝나면 여태까지 쌓아놓은 아이디어를 가지고 밀어붙일 것이다. 받아들여지지 않는다면 답은 하나 밖에 없다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;안정만을 추구하지 않고 계속해서 자기가 추구하는 바를 쫓다보면 그 끝에 무엇인가는 있을 거라 믿는다. &lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>잡생각</category>
<author>범이 chaoxifer</author>
<guid>https://chaoxifer.tistory.com/231</guid>
<comments>https://chaoxifer.tistory.com/231#entry231comment</comments>
<pubDate>Fri, 13 Apr 2018 21:53:27 +0900</pubDate>
</item>
</channel>
</rss>