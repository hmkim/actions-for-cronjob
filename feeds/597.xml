<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:blogChannel="http://backend.userland.com/blogChannelModule" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:pingback="http://madskills.com/public/xml/rss/module/pingback/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#">
  <channel>
    <title>SimpleIsBest.NET</title>
    <description>유경상의 닷넷 블로그</description>
    <link>http://www.simpleisbest.net/</link>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>BlogEngine.NET 2.0.0.36</generator>
    <language>ko-KR</language>
    <blogChannel:blogRoll>http://www.simpleisbest.net/opml.axd</blogChannel:blogRoll>
    <blogChannel:blink>http://www.dotnetblogengine.net/syndication.axd</blogChannel:blink>
    <dc:creator>유경상</dc:creator>
    <dc:title>SimpleIsBest.NET</dc:title>
    <geo:lat>0.000000</geo:lat>
    <geo:long>0.000000</geo:long>
    <item>
      <title>StringBuilder 다시 보기</title>
      <description>최근 구글 웹로그 분석에서 이 블로그의 방문자를 살펴보다가 아주 오래된 문서들이 여전히 참조되고 있다는 것을 알았습니다. 그래서 시간이 날 때마다 이전 글 중에서 업데이트가 필요한 글들을 갱신하고자 합니다. 이번 글은 2005년 이 블로그를 처음 만들면서 썼던 StringBuilder에 대한 글입니다. 최신 닷넷 프레임워크 4.x에서 변경된 부분도 다루어지므로 끝까지 읽어 보시길 권장드립니다.  문자열 이야기  String과 더불어 StringBuilder는 가장 많이 사용되는 닷넷 클래스 중 하나이다. 그런 의미에서 본좌가 2005년 이곳을 개설함과 동시에 몇 개의 글을 시리즈로 작성했었다. 이 글들은 String과 StringBuilder를 사용하면서 주의할 사항들 그리고 알아두어야 할 것을 다루고 있다... &lt;a href="/post/2013/04/24/Review-StringBuilder.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/04/24/Review-StringBuilder.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/04/24/Review-StringBuilder.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=407d6d5d-0742-4efb-8fc5-fe3fe0c124eb</guid>
      <pubDate>Wed, 24 Apr 2013 19:31:15 +0900</pubDate>
      <category>.NET Framework General</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=407d6d5d-0742-4efb-8fc5-fe3fe0c124eb</pingback:target>
      <slash:comments>1</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=407d6d5d-0742-4efb-8fc5-fe3fe0c124eb</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/04/24/Review-StringBuilder.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=407d6d5d-0742-4efb-8fc5-fe3fe0c124eb</wfw:commentRss>
    </item>
    <item>
      <title>Profiling Unit Test-Visual Studio 2012 Update 2</title>
      <description>몇 일전 Visual Studio 2012 Update 2가 정식 릴리스 되었습니다. 다양한 새로운 기능들이 많이 추가되었습니다만 이번 포스트에서는 유닛 테스트 프로파일링에 대해 몇 마디 하고자 합니다.  About Profiling  테스트 프로파일링(Test Profiling)은 유닛 테스트 코드에 대한 프로파일링을 말한다. 이 기능은 Visual Studio 2012 Update 1에 처음 추가되었지만 사소한 버그가 있었다. Update 2에 와서는 별다른 문제없이 사용할 수 있다.  프로파일링이란 단어를 처음 들어본 독자에겐 미안하지만 이 글을 읽기 전에 프로파일링이 무엇인지 모르는 독자를 위해 위키의 정의를 살펴보면 다음과 같다.  프로파일링(profiling, 프로그램 프로파일링/소프트웨어 프로파... &lt;a href="/post/2013/04/09/Profiling_Unit_Test.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/04/09/Profiling_Unit_Test.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/04/09/Profiling_Unit_Test.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=07ffcf18-5778-4cf7-8868-c1c09861a899</guid>
      <pubDate>Tue, 09 Apr 2013 18:15:08 +0900</pubDate>
      <category>Visual Studio</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=07ffcf18-5778-4cf7-8868-c1c09861a899</pingback:target>
      <slash:comments>0</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=07ffcf18-5778-4cf7-8868-c1c09861a899</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/04/09/Profiling_Unit_Test.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=07ffcf18-5778-4cf7-8868-c1c09861a899</wfw:commentRss>
    </item>
    <item>
      <title>탐정 놀이: 타임아웃 오류, 범인은?</title>
      <description>최근 고객에게 발생한 문제 해결 내용입니다. 다른 분들에게도 도움이 될 것 같아서 공유 합니다. 전혀 생각하지도 않았던 곳에서 타임 아웃의 원인을 제공하기 때문입니다. 원인도 중요하지만 어떤 문제에 대해 그 문제를 해결해 나가는 방법도 관심을 가지시면 좋을 듯합니다. (뻘쭘하긴 하네요.... ㅎㅎ)  신고 접수  피해자(고객)의 신고가 접수 되었다. 신고 내용은 간단했다. 1분이 넘는 응답 시간을 갖는 서버 호출에 대해, 개발 서버를 호출하면 잘 작동하는 WCF 서비스가 운영서버에 대해서 호출하면 타임아웃 오류가 난다는 것이었다. 타임 아웃 범죄는 흔히 발생하는 것들 중 하나이고 특히 WCF 서비스 호출 시 잘못된 서버 설정, 혹은 클라이언트 설정으로 흔히 발생하는 잡범 수준이었다.  구성 설정, 너냐?  ... &lt;a href="/post/2013/03/24/Case-Study-Timeout-Error.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/03/24/Case-Study-Timeout-Error.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/03/24/Case-Study-Timeout-Error.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=5051bb65-e489-463d-82c4-d7f18ad2d691</guid>
      <pubDate>Sun, 24 Mar 2013 21:30:12 +0900</pubDate>
      <category>WCF</category>
      <category>잡담</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=5051bb65-e489-463d-82c4-d7f18ad2d691</pingback:target>
      <slash:comments>6</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=5051bb65-e489-463d-82c4-d7f18ad2d691</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/03/24/Case-Study-Timeout-Error.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=5051bb65-e489-463d-82c4-d7f18ad2d691</wfw:commentRss>
    </item>
    <item>
      <title>간편한 비동기 프로그래밍: async/await (5)</title>
      <description>Async/await 키워드 시리즈 마지막 글입니다. 지난 글에서 예고한 대로 약간 복잡한 async/await 사용 예로부터 실제 컴파일러가 생성하는 코드를 살펴보도록 하겠습니다. 컴파일러가 어떤 코드를 생성하는지 이해하고 있다면 더욱 더 async/await 키워드를 잘 활용할 수 있을 것이고, 문제가 발생하더라도 좀 더 쉽게 문제를 해결하실 수 있을 겁니다.

간편한 비동기 프로그래밍:async/await (1) &amp;ndash; 동기 프로그래밍의 문제점 
간편한 비동기 프로그래밍:async/await (2) &amp;ndash; 전통적인 비동기 프로그래밍과 그 문제점 
간편한 비동기 프로그래밍:async/await (3) &amp;ndash; async/await 키워드 소개 
간편한 비동기 프로그래밍:async/aw... &lt;a href="/post/2013/03/12/About_Async_Await_Keyword_Part_5.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/03/12/About_Async_Await_Keyword_Part_5.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/03/12/About_Async_Await_Keyword_Part_5.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=e83573b1-1bbe-49af-a58c-65a033cc7c88</guid>
      <pubDate>Tue, 12 Mar 2013 18:44:00 +0900</pubDate>
      <category>.NET Framework General</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=e83573b1-1bbe-49af-a58c-65a033cc7c88</pingback:target>
      <slash:comments>0</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=e83573b1-1bbe-49af-a58c-65a033cc7c88</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/03/12/About_Async_Await_Keyword_Part_5.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=e83573b1-1bbe-49af-a58c-65a033cc7c88</wfw:commentRss>
    </item>
    <item>
      <title>간편한 비동기 프로그래밍: async/await (4)</title>
      <description>Async/await 키워드에 대한 네 번째 글입니다. 이번 글에서는 async/await의 구체적인 작동 원리를 살펴보고자 합니다. 즉, C# 코드에서 async/await 키워드를 사용했을 때 컴파일러가 생성하는 코드를 살펴봄으로 써 그 원리를 이해하는 것이지요. 굳이 이러한 원리를 모르더라도 async/await 키워드를 사용할 수 있습니다. 하지만 원리를 알고 있다면 다양한 상황에서 발생하는 문제들을 해결하는데 도움이 되리라 믿습니다.

간편한 비동기 프로그래밍:async/await (1) &amp;ndash; 동기 프로그래밍의 문제점 
간편한 비동기 프로그래밍:async/await (2) &amp;ndash; 전통적인 비동기 프로그래밍과 그 문제점 
간편한 비동기 프로그래밍:async/await (3) &amp;ndas... &lt;a href="/post/2013/02/28/About_Async_Await_Keyword_Part_4.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/02/28/About_Async_Await_Keyword_Part_4.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/02/28/About_Async_Await_Keyword_Part_4.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=26b2e10e-e98b-468b-8eb9-a7a290a17efc</guid>
      <pubDate>Thu, 28 Feb 2013 02:00:00 +0900</pubDate>
      <category>.NET Framework General</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=26b2e10e-e98b-468b-8eb9-a7a290a17efc</pingback:target>
      <slash:comments>4</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=26b2e10e-e98b-468b-8eb9-a7a290a17efc</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/02/28/About_Async_Await_Keyword_Part_4.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=26b2e10e-e98b-468b-8eb9-a7a290a17efc</wfw:commentRss>
    </item>
    <item>
      <title>간편한 비동기 프로그래밍:async/await (3)</title>
      <description>Async/await 키워드 세 번째 글이네요. 앞서 두 글은 aysnc/await의 등장 배경을 설명했습니다. UI를 가진 어플리케이션에서 동기 프로그래밍의 문제점과 전통적인 APM(Asynchronous Programming Model) 비동기 프로그래밍 모델의 단점을 중점적으로 설명했는데요, 이번 글에서는 닷넷 프레임워크 4.5와 함께 등장한 C# 5.0의 async/await 키워드에 대해 본격적으로 살펴보도록 하겠습니다.

간편한 비동기 프로그래밍:async/await (1) &amp;ndash; 동기 프로그래밍의 문제점 
간편한 비동기 프로그래밍:async/await (2) &amp;ndash; 전통적인 비동기 프로그래밍과 그 문제점 
간편한 비동기 프로그래밍:async/await (3) &amp;ndash; asyn... &lt;a href="/post/2013/02/16/About_Async_Await_Keyword_Part_3.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/02/16/About_Async_Await_Keyword_Part_3.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/02/16/About_Async_Await_Keyword_Part_3.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=0a17cc81-ce22-4232-9e8c-7faccd9952d2</guid>
      <pubDate>Sat, 16 Feb 2013 17:41:00 +0900</pubDate>
      <category>.NET Framework General</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=0a17cc81-ce22-4232-9e8c-7faccd9952d2</pingback:target>
      <slash:comments>4</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=0a17cc81-ce22-4232-9e8c-7faccd9952d2</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/02/16/About_Async_Await_Keyword_Part_3.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=0a17cc81-ce22-4232-9e8c-7faccd9952d2</wfw:commentRss>
    </item>
    <item>
      <title>간편한 비동기 프로그래밍:async/await (2)</title>
      <description>Async/await 키워드에 대한 두 번째 글입니다. 이번 글에서는 UI 상에서 사용할 수 있는 전통적인 비동기 프로그래밍 기법을 살펴보고 이 방법들의 문제점이 무엇인가 살펴보도록 하겠습니다. 기존 비동기 프로그래밍 방식의 문제점을 충분히 이해한다면 왜 async/await 키워드가 등장했는지 이해하기 보다 쉽기 때문입니다.

간편한 비동기 프로그래밍:async/await (1) &amp;ndash; 동기 프로그래밍의 문제점 
간편한 비동기 프로그래밍:async/await (2) &amp;ndash; 전통적인 비동기 프로그래밍과 그 문제점 
간편한 비동기 프로그래밍:async/await (3) &amp;ndash; async/await 키워드 소개
간편한 비동기 프로그래밍:async/await (4) &amp;ndash; async/... &lt;a href="/post/2013/02/12/About_Async_Await_Keyword_Part_2.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/02/12/About_Async_Await_Keyword_Part_2.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/02/12/About_Async_Await_Keyword_Part_2.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=84bfc78d-8ec5-478c-862e-9defa798a0b6</guid>
      <pubDate>Tue, 12 Feb 2013 10:19:00 +0900</pubDate>
      <category>.NET Framework General</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=84bfc78d-8ec5-478c-862e-9defa798a0b6</pingback:target>
      <slash:comments>4</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=84bfc78d-8ec5-478c-862e-9defa798a0b6</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/02/12/About_Async_Await_Keyword_Part_2.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=84bfc78d-8ec5-478c-862e-9defa798a0b6</wfw:commentRss>
    </item>
    <item>
      <title>간편한 비동기 프로그래밍:async/await (1)</title>
      <description>안녕하세요. 블로그쥔장 입니다. 간만에 다시 키보드를 잡았네요. 시간 없다는 핑계로 이렇게 사이트를 내버려두기도 그렇고 뭐라도 해서 다시 활력을 가져보고자 다시 플로그질을 시작해 볼까 합니다. 항상 그렇듯이 기약은 없답니다. ㅎㅎ
앞으로 몇 차례 닷넷 프레임워크 4.5에 추가된 새로운 키워드인 async/await에 대해 다루려고 합니다. 닷넷 프레임워크 4.5가 나온지 한참도 더 되었지만 async/await 키워드에 대해 심도 깊게 다룬 글들은 별로 없어 보이는지라&amp;hellip; 아는 척하기 좋겠다 싶어서 토픽으로 잡았습니다.
사실은 이 글은 2012년 월간 마이크로소프트웨어 1월, 2월에 연재 되었던 제 글을 바탕으로 한 것입니다. ^^

간편한 비동기 프로그래밍:async/await (1) &amp;ndas... &lt;a href="/post/2013/02/06/About_Async_Await_Keyword_Part_1.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2013/02/06/About_Async_Await_Keyword_Part_1.aspx</link>
      <comments>http://www.simpleisbest.net/post/2013/02/06/About_Async_Await_Keyword_Part_1.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=0550a88b-610c-4574-ad14-b6a39ed7bc8e</guid>
      <pubDate>Wed, 06 Feb 2013 20:09:00 +0900</pubDate>
      <category>.NET Framework General</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=0550a88b-610c-4574-ad14-b6a39ed7bc8e</pingback:target>
      <slash:comments>4</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=0550a88b-610c-4574-ad14-b6a39ed7bc8e</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2013/02/06/About_Async_Await_Keyword_Part_1.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=0550a88b-610c-4574-ad14-b6a39ed7bc8e</wfw:commentRss>
    </item>
    <item>
      <title>Worker Role에서 HTTP 기반 WCF 서비스 호스팅</title>
      <description>요즘 Windows Azure에 많은 시간을 할애하고 있습니다. NeoDEEX 4.x를 Azure-aware 프레임워크로 만들기 위한 작업이지요. 이런 저런 이유로 Azure 상에서 작동하는 다양한 예제를 만들고 있는데요, 그러다 Worker Role에 WCF 서비스를 호스팅 하는 예제를 작성하게 되었습니다. 아주 간단한 서비스였음에도 불구하고 하루 동안 삽질하다가 다음날에서야 겨우 예제가 돌아가게 할 수 있었습니다. 저와 비슷한 삽질을 많은 분들이 할 수 있으리라 생각되어 키보드를 두드리게 되었네요. 이 글은 독자 여러분이 WCF Service에 대한 기본(?)적인 지식을 가지고 있으며 Window Azure에 대해서도 기본 지식을 가지고 있다고 가정할 것입니다. ServiceHost, BasicHttpB... &lt;a href="/post/2012/11/06/Hosting-Http-based-WCF-Service-in-Windows-Azure-Worker-Role.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2012/11/06/Hosting-Http-based-WCF-Service-in-Windows-Azure-Worker-Role.aspx</link>
      <comments>http://www.simpleisbest.net/post/2012/11/06/Hosting-Http-based-WCF-Service-in-Windows-Azure-Worker-Role.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=ec41b7c1-64a4-47e4-a6fc-7447688ea2b8</guid>
      <pubDate>Tue, 06 Nov 2012 03:22:00 +0900</pubDate>
      <category>Windows Azure</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=ec41b7c1-64a4-47e4-a6fc-7447688ea2b8</pingback:target>
      <slash:comments>0</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=ec41b7c1-64a4-47e4-a6fc-7447688ea2b8</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2012/11/06/Hosting-Http-based-WCF-Service-in-Windows-Azure-Worker-Role.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=ec41b7c1-64a4-47e4-a6fc-7447688ea2b8</wfw:commentRss>
    </item>
    <item>
      <title>DataSet 이야기</title>
      <description>블로그 질 재개? 구차한 서론은 때려치우고 바로 본론으로...  DataSet에 대하여…  시작하기 전에, 이실직고부터 하겠다. 필자는 엔티티 기반의 프로젝트를 한번 해봤다. 1998년 동양시멘트 프로젝트를 약 1년여 동안 일반 개발자로서 약 100여 개의 화면을 Forte라는 도구를 사용하여 개발해 본 경험이 전부다. 그 외엔 Entity Framework로 다건의 데이터를 조회/추가/수정/삭제하는 WinForm/WPF 예제를 만들어 봤을 뿐이다. 따라서 여기서 이야기 하는 엔티티에 대한 내용은 상당히 주관적일 수도 있음을 밝히는 바이다. 기술적인 이야기를 주저리 주저리 나열하진 않겠다. 공연히 흥분한 내 마음이 차분해 질 수 있으니깐 말이쥐…  대안: 엔티티?  DataSet은 엔티티에 비해 꿇리는 점이... &lt;a href="/post/2012/09/12/About-DataSet.aspx"&gt;[상세]&lt;/a&gt;</description>
      <link>http://www.simpleisbest.net/post/2012/09/12/About-DataSet.aspx</link>
      <comments>http://www.simpleisbest.net/post/2012/09/12/About-DataSet.aspx#comment</comments>
      <guid>http://www.simpleisbest.net/post.aspx?id=1a86bb3e-a814-4490-98a3-29e88cbbd9ac</guid>
      <pubDate>Wed, 12 Sep 2012 01:18:38 +0900</pubDate>
      <category>.NET Framework General</category>
      <category>잡담</category>
      <dc:publisher>ksyu33</dc:publisher>
      <pingback:server>http://www.simpleisbest.net/pingback.axd</pingback:server>
      <pingback:target>http://www.simpleisbest.net/post.aspx?id=1a86bb3e-a814-4490-98a3-29e88cbbd9ac</pingback:target>
      <slash:comments>6</slash:comments>
      <trackback:ping>http://www.simpleisbest.net/trackback.axd?id=1a86bb3e-a814-4490-98a3-29e88cbbd9ac</trackback:ping>
      <wfw:comment>http://www.simpleisbest.net/post/2012/09/12/About-DataSet.aspx#comment</wfw:comment>
      <wfw:commentRss>http://www.simpleisbest.net/syndication.axd?post=1a86bb3e-a814-4490-98a3-29e88cbbd9ac</wfw:commentRss>
    </item>
  </channel>
</rss>