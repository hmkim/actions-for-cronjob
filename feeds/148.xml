<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shiren the creator</title>
    <description>Let the games begin.</description>
    <link>http://shiren.github.io</link>
    <atom:link href="http://shiren.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>타입스크립트에서 Vue 컴포넌트를 개발하는 방법</title>
        <description>
          
          타입스크립트에서 Vue 컴포넌트를 개발하는 방법 여기까지 오기까지 내가 처음 SPA 프로젝트를 진행했던 때는 2012년이다. 그때 제일 핫했던 백본(Backbone)을 기반으로 구축한 꽤 큰 규모의 프로젝트였다. 그때는 지금처럼 프론트엔드 개발환경이 좋지 않았고 SPA라는 개념 자체가 겨우 슬슬 알려지기 시작한 시기였다. MVC에서 벗어나질 못한 프레임웍들이 주를 이루었던 프론트엔드 진영이었다. 앵귤러JS(AngularJS)가 MVC가 맞느니 아니니...
        </description>
        <pubDate>Thu, 28 Mar 2019 02:53:00 +0900</pubDate>
        <link>http://shiren.github.io/2019-03-28-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-Vue-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EA%B0%9C%EB%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
        <guid isPermaLink="true">http://shiren.github.io/2019-03-28-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-Vue-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EA%B0%9C%EB%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      </item>
    
      <item>
        <title>오픈소스 프로젝트를 운영하며..</title>
        <description>
          
          오픈소스 프로젝트를 운영하며.. 2018년은 FE개발랩에 좋은 일이 많은 한 해였다. 랩에서 내놓은 오픈소스 프로젝트들이 좋은 반응을 얻었고, 몇 가지 의미있는 성과를 얻었다. 아직 오픈소스 생태계에서 큰 역할을 하지 못하는 대한민국에서 좋은 오픈소스 프로젝트들이 많이 나왔으면 하는 바람으로 몇 년간 우리가 오픈소스를 운영하면서 얻은 나름의 결과를 글로 작성한다. 이 글은 TOAST...
        </description>
        <pubDate>Fri, 11 Jan 2019 02:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2019-01-11-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%9A%B4%EC%98%81%ED%95%98%EB%A9%B0-.-</link>
        <guid isPermaLink="true">http://shiren.github.io/2019-01-11-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%9A%B4%EC%98%81%ED%95%98%EB%A9%B0-.-</guid>
      </item>
    
      <item>
        <title>(번역)reduce() 를 이용해 순차적으로 프라미스를 해결하는 방법</title>
        <description>
          
          원글: Why Using reduce() to Sequentially Resolve Promises Works https://css-tricks.com/why-using-reduce-to-sequentially-resolve-promises-works/ (번역)reduce() 를 이용해 순차적으로 프라미스를 해결하는 방법 Promise 객체를 사용하지 않고 비동기 자바스크립트 코드를 작성하는 것은 눈을 감고 케이크를 굽는 것 만큼 어렵다. 물론 할 수 있지만 복잡해질 것이고 결국 화딱지가 나서 못 해먹을 것이다. 꼭 필요하다고 말할 순 없지만...
        </description>
        <pubDate>Wed, 24 Oct 2018 02:53:08 +0900</pubDate>
        <link>http://shiren.github.io/2018-10-24-reduce()%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%88%9C%EC%B0%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
        <guid isPermaLink="true">http://shiren.github.io/2018-10-24-reduce()%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%88%9C%EC%B0%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      </item>
    
      <item>
        <title>(번역)Vue.js에서의 다이나믹 컴포넌트 템플릿</title>
        <description>
          
          원글: https://medium.com/scrumpy/dynamic-component-templates-with-vue-js-d9236ab183bb Vue.js에서의 다이나믹 컴포넌트 템플릿 컴포넌트들이 항상 같은 구조로 되어 있진 않다. 그리고 때론 관리해야할 상태들이 많을때도 있다. 이런 문제는 비동기적인 방법으로 해결할 수도 있다. 유즈 케이스 스크럼피는 알림, 댓글, 첨부 파일 등에서 컴포넌트 템플릿을 사용한다. 우선 댓글 부분을 살펴보면서 정확히 어떤 것을 말하는지 알아보자. 최근의 댓글은 더 이상...
        </description>
        <pubDate>Tue, 14 Aug 2018 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2018-08-14-Vue.js%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%85%9C%ED%94%8C%EB%A6%BF/</link>
        <guid isPermaLink="true">http://shiren.github.io/2018-08-14-Vue.js%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%85%9C%ED%94%8C%EB%A6%BF/</guid>
      </item>
    
      <item>
        <title>요즘 잘나가는 프론트엔드 개발환경 만들기(2018): ES6</title>
        <description>
          
          본 시리즈의 이전 아티클에서는 웹팩4에 대해 다루면서 바로 쓸 수 있는 환경을 만들어봤다. 이번편에는 그 환경 그대로 이용해 ES6 개발 환경을 추가한다. ES6는 이제 충분히 써도 될만한 시기라고 생각한다. “나는 프런트 개발자가 아니기도 하고 브라우저가 모두 지원하지도 않기에 ES6는 아직 못쓴다” 라고 생각하고 있다면 이 글을 통해 생각을 바꿀 수...
        </description>
        <pubDate>Tue, 10 Jul 2018 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2018-07-10-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-ES6/</link>
        <guid isPermaLink="true">http://shiren.github.io/2018-07-10-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-ES6/</guid>
      </item>
    
      <item>
        <title>요즘 잘나가는 프론트엔드 개발 환경 만들기(2018): Webpack 4</title>
        <description>
          
          최근에 새로운 프로젝트를 진행하게 되면서 기존에 간만 살짝 보고 있던 뷰(Vue, 이하 뷰)를 본격적으로 도입하게 되었다. 사실 팀에서는 리액트를 선호하고 있었으나 회사 내부에서 뷰의 사용이 빠른 속도로 증가하고 있었고 그에 따라 팀내에서도 뷰에 대한 전문성이 필요하게 되었다. 뷰와 리액트는 서로 영향을 주고받고 발전해나가는 도구들이라 비슷한 부분이 많아 큰 어려움 없이...
        </description>
        <pubDate>Mon, 16 Apr 2018 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2018-04-16-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-Webpack-4/</link>
        <guid isPermaLink="true">http://shiren.github.io/2018-04-16-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-Webpack-4/</guid>
      </item>
    
      <item>
        <title>ECMAScript 스펙 톺아보기: Primitive</title>
        <description>
          
          프리미티브에 대한 의문 현재 팀 내부에서는 시니어들이 팀 인력 채용 프로세스를 개선하고 있다. 프로세스 중에서도 현재는 필기시험 문제를 재출제하는 중인데 이게 생각보다 쉽지 않아 매일 매일 서로 의견이 분분하다. 그러던 어느 날 프리미티브에 대한 의견을 나누던 중 자바스크립트의 프리미티브를 객체 같이 사용된다고 설명해도 되느냐 안되느냐의 문제를 놓고 토론을 하게 되었는데...
        </description>
        <pubDate>Fri, 23 Feb 2018 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2018-02-23-ECMAScript-%EC%8A%A4%ED%8E%99-%ED%86%BA%EC%95%84%EB%B3%B4%EA%B8%B0-Primitive/</link>
        <guid isPermaLink="true">http://shiren.github.io/2018-02-23-ECMAScript-%EC%8A%A4%ED%8E%99-%ED%86%BA%EC%95%84%EB%B3%B4%EA%B8%B0-Primitive/</guid>
      </item>
    
      <item>
        <title>이맥스와 함께하는 개발환경</title>
        <description>
          
          금단의 영역에 손을 대다 에디터, IDE뿐 아니라 업무에 관련된 새로운 도구가 나오면 꼭 써봐야 직성이 풀리는 성격이었지만 언젠가부터 그놈이 그놈이고 저놈이 그놈이고 새로운 기능이 있어도 개발을 할 때 사용하는 기능들은 매우 한정적이라는 사실을 깨닫게 되었다. 인텔리제이도 일년 이상은 사용해봤지만 프론트 엔드를 주로 개발하기에 딱히 IDE가 필요하지 않았고 수많은 기능들을 거의...
        </description>
        <pubDate>Mon, 13 Nov 2017 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2017-11-13-%EC%9D%B4%EB%A7%A5%EC%8A%A4%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</link>
        <guid isPermaLink="true">http://shiren.github.io/2017-11-13-%EC%9D%B4%EB%A7%A5%EC%8A%A4%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</guid>
      </item>
    
      <item>
        <title>웹 기술로 구현하는 Adaptive HTTP Streaming</title>
        <description>
          
          한국은 물론 세계적으로 엄청난 양의 동영상 콘텐츠가 소비되고 있다. 플래시가 대세였던 웹 동영상 기술이 점차 표준 기술인 HTML5 비디오로 전환되었고 요즘은 대부분의 동영상 서비스는 HTML5를 기반으로 서비스되고 있다. 동영상 기술은 점차 고도화되어 네트워크 환경에 따른 최적의 동영상 품질을 스트리밍해 버퍼링없는 서비스를 제공하기 위해 여러 방법들이 모색되었고 그중 하나가 새로 프로토콜을...
        </description>
        <pubDate>Mon, 18 Sep 2017 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2017-09-18-%EC%9B%B9-%EA%B8%B0%EC%88%A0%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EB%8A%94-Adaptive-HTTP-Streaming/</link>
        <guid isPermaLink="true">http://shiren.github.io/2017-09-18-%EC%9B%B9-%EA%B8%B0%EC%88%A0%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EB%8A%94-Adaptive-HTTP-Streaming/</guid>
      </item>
    
      <item>
        <title>(번역)웹어셈블리 바로 사용 해보기</title>
        <description>
          
          원글: https://tutorials.technology/tutorials/11-webassembly-initial-steps-tutorial.html 소개 웹어셈블리는 미래에 매우 유용하게 사용될 새롭고도 새로운 표준이다. 이 기술은 W3C 커뮤니티 그룹에서 애플, 구글 , 마이크로소프트 그리고 모질라와 함께 개발되고 있다. 이 프로젝트의 초기 시점인 지금은 고 수준의 언어가 아닌 C/C++로 초점이 맞춰져 있고 웹어셈블리의 약어는 wasm 이며 자바스크립트와 브라우저의 개선 사항 중 하나이다. 웹어셈블리는 자바스크립트를...
        </description>
        <pubDate>Mon, 10 Apr 2017 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2017-04-10-(%EB%B2%88%EC%97%AD)%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EB%B0%94%EB%A1%9C-%EC%82%AC%EC%9A%A9-%ED%95%B4%EB%B3%B4%EA%B8%B0/</link>
        <guid isPermaLink="true">http://shiren.github.io/2017-04-10-(%EB%B2%88%EC%97%AD)%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EB%B0%94%EB%A1%9C-%EC%82%AC%EC%9A%A9-%ED%95%B4%EB%B3%B4%EA%B8%B0/</guid>
      </item>
    
      <item>
        <title>쉽게 이해하는 자바스크립트 프로토타입 체인</title>
        <description>
          
          자바스크립트는 객체 지향 언어이자 함수를 1급 객체로 취급하기 때문에 함수형 프로그래밍도 가능한 멀티 패러다임 언어이다. 자바스크립트를 조금이라도 다뤄봤던 사람이라면 익히 알고 있겠지만 자바스크립트에는 클래스란 개념이 없어 객체 생성이나 상속이 다른 언어와 다르고 특히 OOP는 주로 프로토타입이란 메커니즘을 통해 이루어진다. 검색을 조금만 해보면 프로토타입을 다룬 아티클들은 많이 찾아볼 수 있다. 하지만...
        </description>
        <pubDate>Tue, 21 Feb 2017 22:58:08 +0900</pubDate>
        <link>http://shiren.github.io/2017-02-21-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8/</link>
        <guid isPermaLink="true">http://shiren.github.io/2017-02-21-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8/</guid>
      </item>
    
      <item>
        <title>(번역)RxJS와 함께하는 함수형 리액티브 프로그래밍</title>
        <description>
          
          원글: https://www.sitepoint.com/functional-reactive-programming-rxjs/ RxJS와 함께하는 함수형 반응형 프로그래밍 이 글은 Moritz Kröger, Bruno Mota와 Vildan Softic의 검수를 받았다. SitePoint의 컨텐트들이 최고가 될 수 있게 도와주는 SitePont의 모든 동료 리뷰어들에게 감사를 표한다. 본론으로 들어가기 전에 한가지 중요한 질문을 던져 본다. “반응형 프로그래밍이란 무엇인가?” 지금 시점에서 가장 일반적인 답변은 “반응형 프로그래밍은 동시성 데이터...
        </description>
        <pubDate>Tue, 03 Jan 2017 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2017-01-03-RxJS%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
        <guid isPermaLink="true">http://shiren.github.io/2017-01-03-RxJS%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</guid>
      </item>
    
      <item>
        <title>크롬 개발자 도구를 이용한 프론트엔드 성능 측정</title>
        <description>
          
          크롬 개발자 도구를 이용한 프론트엔드 성능 측정 타임라인 타임라인은 웹페이지를 로드할때나 혹은 유저 인터렉션 등으로 인해 브라우저에서 발생하는 동작들을 레코딩하고 타임라인 형태로 시각화해주는 도구다. 시간의 흐름에 따라 브라우저의 이벤트(여기서의 이벤트는 DOM상의 이벤트가 아닌 브라우저 내부의 동작, 물론 DOM이벤트를 발생시키는 이벤트도 있다)뿐 아니라 CPU, 메모리, 네트워크 사용량과 FPS까지 확인 가능하다. 이벤트에...
        </description>
        <pubDate>Tue, 15 Nov 2016 22:44:08 +0900</pubDate>
        <link>http://shiren.github.io/2016-11-15-%ED%81%AC%EB%A1%AC%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8F%84%EA%B5%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EC%84%B1%EB%8A%A5%EC%B8%A1%EC%A0%95/</link>
        <guid isPermaLink="true">http://shiren.github.io/2016-11-15-%ED%81%AC%EB%A1%AC%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8F%84%EA%B5%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EC%84%B1%EB%8A%A5%EC%B8%A1%EC%A0%95/</guid>
      </item>
    
      <item>
        <title>(번역)도커로 노드앱을 구축하며 배운것들</title>
        <description>
          
          도커로 노드 앱을 구축하며 배운것들 원문 http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html by John Lees-Miller 도커를 이용해 노드제이에스 어플리케이션을 개발 하고 배포 하면서 어렵게 배운 팁과 트릭을 공유하고자 한다. 이 튜토리얼 아티클에서는 socket.io chat example을 이용해 기초부터 프로덕션에 응용 가능한 상태까지 될 수 있으면 쉽게 이해할 수 있도록 설명하려 한다. 아래와 같은 내용을 다룬다. 도커를...
        </description>
        <pubDate>Wed, 24 Aug 2016 01:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2016-08-24-%EB%8F%84%EC%BB%A4%EB%A1%9C-%EB%85%B8%EB%93%9C%EC%95%B1%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B4%EA%B2%83%EB%93%A4/</link>
        <guid isPermaLink="true">http://shiren.github.io/2016-08-24-%EB%8F%84%EC%BB%A4%EB%A1%9C-%EB%85%B8%EB%93%9C%EC%95%B1%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B4%EA%B2%83%EB%93%A4/</guid>
      </item>
    
      <item>
        <title>클로저, 그리고 객체화와 은닉화</title>
        <description>
          
          클로저와 객체 클로저를 처음 접했을때 전혀 이해가 되지 않았던 기억이 난다. 클로저를 제대로 이해하려면 자바스크립트 코어에대한 지식이 적지 않게 필요하기 때문이다. 개인적으로는 자신이 사라지기전까지 스코프의 종결을 미루기에, 바꿔 말하면 자신의 사라지면 자신의 스코프도 종결해 버리기에 Closure(종결) 라고 한때 간단하게 정리 했었다.(뭐 틀린말은 아니다) 클로저에 관한 설명은 여기 링크에서 자세하게 알아...
        </description>
        <pubDate>Mon, 27 Jun 2016 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2016-06-27-%ED%81%B4%EB%A1%9C%EC%A0%80,-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BA%A1%EC%8A%90%ED%99%94%EC%99%80-%EC%9D%80%EB%8B%89%ED%99%94/</link>
        <guid isPermaLink="true">http://shiren.github.io/2016-06-27-%ED%81%B4%EB%A1%9C%EC%A0%80,-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BA%A1%EC%8A%90%ED%99%94%EC%99%80-%EC%9D%80%EB%8B%89%ED%99%94/</guid>
      </item>
    
      <item>
        <title>웹개발자를 위한 크롬 개발자 도구</title>
        <description>
          
          웹 개발자를 위한 크롬 개발자 도구 시작하면서 꼭 프론트엔드 개발자가 아니더라도 웹 개발을 하다 보면 한 번쯤은 크롬 개발자 도구를 사용해 봤을 거라 생각한다. 크롬이 버전업할수록 크롬 개발자 도구 역시 나날이 발전해 왔고 현존하는 도구 중에는 최고의 웹 개발자 도구라고 말할 수 있다. 예전 IE6에서 alert과 status로 디버깅을 했던 시절을...
        </description>
        <pubDate>Wed, 23 Mar 2016 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2016-03-23-%EC%9B%B9%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%AC%EB%A1%AC-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%8F%84%EA%B5%AC/</link>
        <guid isPermaLink="true">http://shiren.github.io/2016-03-23-%EC%9B%B9%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%AC%EB%A1%AC-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%8F%84%EA%B5%AC/</guid>
      </item>
    
      <item>
        <title>(번역)네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법</title>
        <description>
          
          네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법 원문 https://medium.com/developers-writing/how-to-get-a-performance-boost-using-node-js-native-addons-fd3a24719c85#.buw8o2rrn 아마도 천 번 정도는 들어봤을 법한 Node.js(이하 노드)의 네이티브 모듈에 대해 그것이 무엇이고 왜 고려되어야 할지 다뤄본다. 노드 애드온은 C나 C++로 작성된 동적 링크 공유 객체로 노드의 require() 함수에 의해 로드 되어 일반적인 노드 모듈처럼 사용된다. 좋아 보이는데 왜 이미 익숙한...
        </description>
        <pubDate>Thu, 18 Feb 2016 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2016-02-18-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EC%95%A0%EB%93%9C%EC%98%A8%EC%9C%BC%EB%A1%9C-Node.js%EC%9D%98-%EC%84%B1%EB%8A%A5%EC%9D%84-%ED%96%A5%EC%83%81-%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
        <guid isPermaLink="true">http://shiren.github.io/2016-02-18-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EC%95%A0%EB%93%9C%EC%98%A8%EC%9C%BC%EB%A1%9C-Node.js%EC%9D%98-%EC%84%B1%EB%8A%A5%EC%9D%84-%ED%96%A5%EC%83%81-%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      </item>
    
      <item>
        <title>Webpack으로 자바스크립트 모듈관리 하기</title>
        <description>
          
          디펜던시 모듈 관리 기존의 프론트엔드 자바스크립트는 특별히 모듈화나 디펜던시관리에 대한 방법이 없어 필요한 자바스크립트 파일을 정해진 순서에 맞게 직접 스크립트 태그로 로드하고 각각 약속된 네임스페이스에 담아 공유했었다. 이런 방식은 프로젝트가 커질수록 그리고 참여 개발자가 많을수록 문제를 일으켰다. 이후 개발자들에 의해 AMD와 CommonJS 두가지 방법으로 모듈 관리 환경이 발전하게 되었는데, AMD...
        </description>
        <pubDate>Mon, 15 Feb 2016 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2016-02-15-Webpack%EC%9C%BC%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%AA%A8%EB%93%88%EA%B4%80%EB%A6%AC-%ED%95%98%EA%B8%B0/</link>
        <guid isPermaLink="true">http://shiren.github.io/2016-02-15-Webpack%EC%9C%BC%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%AA%A8%EB%93%88%EA%B4%80%EB%A6%AC-%ED%95%98%EA%B8%B0/</guid>
      </item>
    
      <item>
        <title>(번역)Flux 카툰 가이드</title>
        <description>
          
          Flux 카툰가이드 원문 https://code-cartoons.com/a-cartoon-guide-to-flux-6157355ab207#.9nbhrj3of Flux 카툰가이드 플럭스는 현재 웹개발에 대한 토픽들중에 가장 유명하지만 이것을 이해하고 있는 사람은 매우 적다. 본 가이드는 모두가 이해할 수 있도록 도움을 주려 작성되었다. 문제 첫번째로 플럭스가 해결하는 기초적인 문제부터 설명하려고 한다. 플럭스는 어플리케이션에서 데이터를 다루는 패턴으로 리액트와 함께 페이스북에서 성장해왔다. 각각 독립적으로 사용이 가능하지만 많은...
        </description>
        <pubDate>Mon, 19 Oct 2015 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2015-10-19-Flux-%EC%B9%B4%ED%88%B0-%EA%B0%80%EC%9D%B4%EB%93%9C/</link>
        <guid isPermaLink="true">http://shiren.github.io/2015-10-19-Flux-%EC%B9%B4%ED%88%B0-%EA%B0%80%EC%9D%B4%EB%93%9C/</guid>
      </item>
    
      <item>
        <title>(번역)유닛테스트가 해야할 5가지 답변 - 테스트를 잘 작성하는 방법</title>
        <description>
          
          유닛테스트가 해야할 5가지 답변 - 테스트를 잘 작성하는 방법 원문 https://medium.com/javascript-scene/what-every-unit-test-needs-f6cd34d9836d 대부분의 개발자들은 어떻게 테스트 해야하는지 모른다. 모든 개발자들을 프로덕션으로 디플로이할 때 발생할 수 있는 결함을 방지하기 위해 유닛 테스트를 해야 한다고 알고 있지만, 대부분의 개발자들은 유닛 테스트의 필수적인 요소를 모른다. 내가 보아온 유닛 테스트의 실패 사례는 셀 수가 없다....
        </description>
        <pubDate>Thu, 24 Sep 2015 19:07:08 +0900</pubDate>
        <link>http://shiren.github.io/2015-09-24-%EC%9C%A0%EB%8B%9B%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B0%80-%ED%95%B4%EC%95%BC%ED%95%A0-5%EA%B0%80%EC%A7%80-%EB%8B%B5%EB%B3%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
        <guid isPermaLink="true">http://shiren.github.io/2015-09-24-%EC%9C%A0%EB%8B%9B%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B0%80-%ED%95%B4%EC%95%BC%ED%95%A0-5%EA%B0%80%EC%A7%80-%EB%8B%B5%EB%B3%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      </item>
    
  </channel>
</rss>
