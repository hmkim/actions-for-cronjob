<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>Dive Into A Data Deluge</title>
	<atom:link href="https://diveintodata.org/feed/" rel="self" type="application/rss+xml" />
	<link>https://diveintodata.org</link>
	<description>Discussion about Newly Emerging Issues on Database</description>
	<lastBuildDate>
	Wed, 20 Mar 2019 23:24:24 +0000	</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>http://wordpress.com/</generator>
<cloud domain='diveintodata.org' port='80' path='/?rsscloud=notify' registerProcedure='' protocol='http-post' />
<image>
		<url>https://s0.wp.com/i/buttonw-com.png</url>
		<title>Dive Into A Data Deluge</title>
		<link>https://diveintodata.org</link>
	</image>
	<atom:link rel="search" type="application/opensearchdescription+xml" href="https://diveintodata.org/osd.xml" title="Dive Into A Data Deluge" />
	<atom:link rel='hub' href='https://diveintodata.org/?pushpress=hub'/>
	<item>
		<title>A Blog Post about Query Execution Engines</title>
		<link>https://diveintodata.org/2016/09/04/a-blog-post-about-query-execution-engines/</link>
				<comments>https://diveintodata.org/2016/09/04/a-blog-post-about-query-execution-engines/#respond</comments>
				<pubDate>Sun, 04 Sep 2016 18:31:13 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Research]]></category>
		<category><![CDATA[analytical database]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[execution engine]]></category>
		<category><![CDATA[query processing]]></category>
		<category><![CDATA[sql-on-hadoop]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1793</guid>
				<description><![CDATA[Recently, I joined a team blog for sharing knowledge and experiences with nice guys. In the blog, I wrote a blog post about query execution engines at A Survey of Query Execution Engines (from Volcano to Vectorized Processing). Enjoy! Advertisements]]></description>
								<content:encoded><![CDATA[<p>Recently, I joined a team blog for sharing knowledge and experiences with nice guys. In the blog, I wrote a blog post about query execution engines at<br />
<a href="https://chatwithengineers.com/2016/08/29/a-survey-of-query-execution-engines-from-volcano-to-vectorized-processing/">A Survey of Query Execution Engines (from Volcano to Vectorized Processing)</a>. Enjoy!</p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2016/09/04/a-blog-post-about-query-execution-engines/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Java GC 관련 링크 정리</title>
		<link>https://diveintodata.org/2016/02/29/java-gc-%ea%b4%80%eb%a0%a8-%eb%a7%81%ed%81%ac-%ec%a0%95%eb%a6%ac/</link>
				<comments>https://diveintodata.org/2016/02/29/java-gc-%ea%b4%80%eb%a0%a8-%eb%a7%81%ed%81%ac-%ec%a0%95%eb%a6%ac/#respond</comments>
				<pubDate>Tue, 01 Mar 2016 00:06:51 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[GC]]></category>
		<category><![CDATA[jvm]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1764</guid>
				<description><![CDATA[Java Garbage Collection, Naver D2 Hello World (in Korean) Garbage Collection Optimization for High-Throughput and Low-Latency Java Applications, LinkedIn Engineering JVM GC Settings and HBase Performance How Garbage Collection differs in the three big JVMs Java Garbage Collection Distilled Avoiding Full GCs in HBase with MemStore-Local Allocation Buffers: (Part 1, Part 2)]]></description>
								<content:encoded><![CDATA[<ul>
<li><a href="http://d2.naver.com/helloworld/1329">Java Garbage Collection</a>, Naver D2 Hello World (in Korean)</li>
<li><a href="https://engineering.linkedin.com/garbage-collection/garbage-collection-optimization-high-throughput-and-low-latency-java-applications">Garbage Collection Optimization for High-Throughput and Low-Latency Java Applications</a>, LinkedIn Engineering</li>
<li><a href="http://blog.asquareb.com/blog/2014/12/13/jvm-gc-settings-and-hbase/">JVM GC Settings and HBase Performance</a></li>
<li><a href="http://apmblog.dynatrace.com/2011/05/11/how-garbage-collection-differs-in-the-three-big-jvms/">How Garbage Collection differs in the three big JVMs</a></li>
<li><a href="http://mechanical-sympathy.blogspot.kr/2013/07/java-garbage-collection-distilled.html?m=1">Java Garbage Collection Distilled</a></li>
<li>Avoiding Full GCs in HBase with MemStore-Local Allocation Buffers: (<a href="http://blog.cloudera.com/blog/2011/02/avoiding-full-gcs-in-hbase-with-memstore-local-allocation-buffers-part-1/">Part 1</a>, <a href="http://blog.cloudera.com/blog/2011/02/avoiding-full-gcs-in-hbase-with-memstore-local-allocation-buffers-part-2/">Part 2</a>)</li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2016/02/29/java-gc-%ea%b4%80%eb%a0%a8-%eb%a7%81%ed%81%ac-%ec%a0%95%eb%a6%ac/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Links about Array DBMSs</title>
		<link>https://diveintodata.org/2015/12/01/links-about-array-dbmss/</link>
				<comments>https://diveintodata.org/2015/12/01/links-about-array-dbmss/#comments</comments>
				<pubDate>Tue, 01 Dec 2015 10:42:53 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Research]]></category>
		<category><![CDATA[Tokamak Project]]></category>
		<category><![CDATA[array dbms]]></category>
		<category><![CDATA[scientific computing]]></category>
		<category><![CDATA[tokamak]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1650</guid>
				<description><![CDATA[This article just lists resources available in Internet and papers  about array DBMSs and scientific databases. General Array DBMS in Wikipedia Rasdaman, an Array DBMS production Array Databases: The Next Big Thing in Data Analytics?, Datanami Applications of Array Data Model Geo-spatial data scientific data financial feeds sensor data sequencing data From Academia General Overview of SciDB, ACM SIGMOD 2010 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>This article just lists resources available in Internet and papers  about array DBMSs and scientific databases.</p>
<h2>General</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Array_DBMS" target="_blank">Array DBMS</a> in Wikipedia</li>
<li><a href="https://en.wikipedia.org/wiki/Rasdaman">Rasdaman</a>, an Array DBMS production</li>
<li><a href="http://www.datanami.com/2014/04/09/array_databases_the_next_big_thing_in_data_analytics_/">Array Databases: The Next Big Thing in Data Analytics?</a>, Datanami</li>
</ul>
<h3>Applications of Array Data Model</h3>
<ul>
<li>Geo-spatial data</li>
<li>scientific data</li>
<li>financial feeds</li>
<li>sensor data</li>
<li>sequencing data</li>
</ul>
<h2>From Academia</h2>
<h3>General</h3>
<ul>
<li><a href="http://homes.cs.washington.edu/~magda/papers/brown-sigmod10.pdf">Overview of SciDB</a>, ACM SIGMOD 2010 (<a title="Overview of SciDB" href="https://diveintodata.files.wordpress.com/2015/12/overview-of-scidb.pdf">PDF</a>)
<ul>
<li><a href="http://www.cs.cmu.edu/~pavlo/courses/fall2013/static/slides/scidb.pdf">A presentation material</a> made by other guy</li>
</ul>
</li>
<li><a href="http://database.cs.brown.edu/projects/scidb/">Paper List of Brown Univ&#8217;s Data Management Research Group</a></li>
<li><a href="http://scidb.cs.washington.edu/">Paper List of UW&#8217;s SciDB Branch</a></li>
<li><a href="http://users.eecs.northwestern.edu/~jennie/research/deb.pdf">SciDB DBMS Research at M.I.T.</a></li>
<li><a href="http://www.odbms.org/wp-content/uploads/2014/04/The_Architecture_of_SciDB.pdf">The Architecture of SciDB</a></li>
</ul>
<h3>Query Language or Interface</h3>
<ul>
<li><a href="http://www.rasdaman.com/ArrayDatabases-Workshop/Slides/1-sciql.pdf">SciQL: A Query Language for Science Applications</a>, Workshop Array Databases 2011 (<a title="SciQL: A Query Language for Science Applications" href="https://diveintodata.files.wordpress.com/2015/11/sciql-a-query-language-for-science-applications.pdf" target="_blank">PDF</a>)</li>
</ul>
<h3>Query Processing</h3>
<ul>
<li>Efficient Iterative Processing in the SciDB Parallel Array Engine, SSDBM 2015. (<a title="Efficient Iterative Processing in the SciDB Parallel Array Engine" href="https://diveintodata.files.wordpress.com/2015/12/efficient-iterative-processing-in-the-scidb-parallel-array-engine.pdf">PDF</a>)</li>
<li><a href="http://scidb.cs.washington.edu/paper/vanderplas.pdf">Squeezing a Big Orange into Little Boxes: The AscotDB System for Parallel Processing of Data on a Sphere</a>, IEEE Data Engineering Bulletin, 2013.</li>
<li><a href="http://scidb.cs.washington.edu/paper/sigmod362-soroush.pdf">ArrayStore: A Storage Manager for Complex Parallel Array Processing</a>, ACM SIGMOD 2011.</li>
<li><a href="http://www.rasdaman.com/ArrayDatabases-Workshop/Slides/3-overlap+merge.pdf">Hybrid Merge/Overlap Execution Technique for Parallel Array Processing</a>, Workshop Array Databases 2011 (<a title="Hybrid Merge-Overlap Execution Technique for Parallel Array Processing" href="https://diveintodata.files.wordpress.com/2015/11/hybrid-merge-overlap-execution-technique-for-parallel-array-processing.pdf">PDF</a>)</li>
<li><a href="http://www.rasdaman.com/ArrayDatabases-Workshop/Slides/2-sqlArray.pdf">An Array Library for MS SQL Server</a>, Workshop Array Databases 2011 (<a title="An Array Library for MS SQL Server" href="https://diveintodata.files.wordpress.com/2015/11/an-array-library-for-ms-sql-server.pdf">PDF</a>)</li>
<li><a href="http://web.cse.ohio-state.edu/~wayi/papers/SAGA.pdf">SAGA: Array Storage as a DB with Support for Structural Aggregations</a>, SSDBM 2014</li>
<li><a href="http://scidb.cs.washington.edu/paper/soroush-array-workshop.pdf">Hybrid Merge/Overlap Execution Technique for Parallel Array Processing</a>, AD 2011</li>
<li><a href="http://scidb.cs.washington.edu/paper/ICDE13_conf_full_422.pdf">Time Travel in a Scientific Array Database</a>, ICDE 2013</li>
</ul>
<h2>Applications</h2>
<ul>
<li><a href="http://www.rasdaman.com/ArrayDatabases-Workshop/Slides/4-rasdaman-demo.pdf">Accelerating Computationally Intensive Queries on Massive Earth Science Data</a>, Workshop Array Databases 2011 (<a title="Accelerating Computationally Intensive Queries on Massive Earth Science Data" href="https://diveintodata.files.wordpress.com/2015/11/accelerating-computationally-intensive-queries-on-massive-earth-science-data.pdf">PDF</a>)</li>
<li><a href="http://www.rasdaman.com/ArrayDatabases-Workshop/Slides/6-uses-of-hdf5-listing.pdf">Sample uses of HDF 2006</a> (<a title="Sample uses of HDF 2006" href="https://diveintodata.files.wordpress.com/2015/11/sample-uses-of-hdf-2006.pdf">PDF</a>)</li>
<li><a href="http://db.csail.mit.edu/nedbday15/pdf/Paper41.pdf">A Survey of Scientific Applications using SciDB</a></li>
<li><a href="http://www.paradigm4.com/resources/papers/">Paradigm4 White Papers</a></li>
</ul>
<h2>Data Format</h2>
<ul>
<li><a href="http://www.rasdaman.com/ArrayDatabases-Workshop/Slides/5-hdf5_oo.pdf">An Overview of the HDF5 Technology Suite and its Applications</a>, Workshop Array Databases 2011 (<a title="An Overview of the HDF5 Technology Suite and its Applications" href="https://diveintodata.files.wordpress.com/2015/11/an-overview-of-the-hdf5-technology-suite-and-its-applications.pdf">PDF</a>)</li>
</ul>
<h2>SciDB From Paradigm4</h2>
<ul>
<li><a href="http://www.paradigm4.com/why-an-array-database/">Why an Array Database?</a>, Paradigm4</li>
<li><a href="http://www.paradigm4.com/technology/multidimensional-array-clustering/">MAC<img src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/2122.png" alt="™" class="wp-smiley" style="height: 1em; max-height: 1em;" />—the key to fast range selects and joins</a></li>
<li><a href="http://cdn.oreillystatic.com/en/assets/1/event/63/Big%20Data%20and%20Big%20Analytics_%20%20SciDB%20is%20not%20Hadoop%20Presentation.pdf">Analytics for Massive Data Sets</a>, Paradigm4 (slide)</li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/12/01/links-about-array-dbmss/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Rust에서 LLVM Intrinsics 호출하기</title>
		<link>https://diveintodata.org/2015/11/28/rust%ec%97%90%ec%84%9c-llvm-intrinsics-%ed%98%b8%ec%b6%9c%ed%95%98%ea%b8%b0/</link>
				<comments>https://diveintodata.org/2015/11/28/rust%ec%97%90%ec%84%9c-llvm-intrinsics-%ed%98%b8%ec%b6%9c%ed%95%98%ea%b8%b0/#respond</comments>
				<pubDate>Sat, 28 Nov 2015 10:18:33 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[Tokamak Project]]></category>
		<category><![CDATA[llvm]]></category>
		<category><![CDATA[rust]]></category>
		<category><![CDATA[tokamak]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1618</guid>
				<description><![CDATA[요즘에는 내가 보려는 목적으로 기록을 하는 블로깅이 대부분인 듯 하다. Rust는 LLVM으로 구현되어 있고 LLVM 의 Intrinsics를 함수에 매핑해서 호출할 수 있는 기능이 공식적으로 제공된다. 예제는 아래와 같다.]]></description>
								<content:encoded><![CDATA[<p>요즘에는 내가 보려는 목적으로 기록을 하는 블로깅이 대부분인 듯 하다. Rust는 LLVM으로 구현되어 있고 LLVM 의 Intrinsics를 함수에 매핑해서 호출할 수 있는 기능이 공식적으로 제공된다. 예제는 아래와 같다.</p>
<p><script src="https://gist.github.com/hyunsik/7fa689200ee5ee6ecf3d.js"></script></p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/11/28/rust%ec%97%90%ec%84%9c-llvm-intrinsics-%ed%98%b8%ec%b6%9c%ed%95%98%ea%b8%b0/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>LLVM을 이용한 JIT 코드 개발 정리</title>
		<link>https://diveintodata.org/2015/11/25/llvm%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-jit-%ec%bd%94%eb%93%9c-%ea%b0%9c%eb%b0%9c-%ec%a0%95%eb%a6%ac/</link>
				<comments>https://diveintodata.org/2015/11/25/llvm%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-jit-%ec%bd%94%eb%93%9c-%ea%b0%9c%eb%b0%9c-%ec%a0%95%eb%a6%ac/#respond</comments>
				<pubDate>Wed, 25 Nov 2015 10:56:46 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[FOSS]]></category>
		<category><![CDATA[Tokamak Project]]></category>
		<category><![CDATA[JIT]]></category>
		<category><![CDATA[llvm]]></category>
		<category><![CDATA[tokamak]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1548</guid>
				<description><![CDATA[현재 작업 중인 Tokamak (가제) 프로젝트서 사용될 LLVM JIT 코드 몇 가지를 작성해보았다. Rust로 작업하고 있기 때문에 llvm-alt 라는 바인딩 라이브러리를 fork해서 작업을 진행했다. fork 한 이유는 버그와 미구현 API 때문인데 maintenance가 기존에 리포트된 버그도 수정 안되길래 아예 fork 해버렸다. LLVM은 레퍼런스 문서는 참 훌륭하다. 또한 LLVM IR 자체가 프로그래밍 코드와 비슷해서 Java Bytecode를 보다 훨씬 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>현재 작업 중인 Tokamak (가제) 프로젝트서 사용될 LLVM JIT 코드 몇 가지를 작성해보았다. Rust로 작업하고 있기 때문에 llvm-alt 라는 바인딩 라이브러리를 fork해서 작업을 진행했다. fork 한 이유는 버그와 미구현 API 때문인데 maintenance가 기존에 리포트된 버그도 수정 안되길래 아예 fork 해버렸다.</p>
<p>LLVM은 레퍼런스 문서는 참 훌륭하다. 또한 LLVM IR 자체가 프로그래밍 코드와 비슷해서 Java Bytecode를 보다 훨씬 쉬운 듯 하다. 자체는 쉬운 편인데, 친절한 문서는 별로 없다. 만든 녀석들이 워낙 똑똑한 녀석들이라 나 같은 초보들이 뭘 필요하는지는 잘 모르는 모양인데 이 글에 익힌 몇 가지 정리를 한다. 이 문서의 목적은 내가 보기 위해서기 때문에 체계적이지도 않고 부연설명도 없다.</p>
<h3>MJIT vs ORC</h3>
<ul>
<li>MCJIT 전에는 JIT 였음, JIT 는 LLVM 3.5에서 제거됨</li>
<li>MCJIT는 더 많은 타겟에 대한 네이티브 코드 지원</li>
<li>MCJIT는 lazy compilation 지원안함, ORC는 지원함. 다시말해 ORC는 함수 실행 전에 code generation을 하기 때문에 일반적으로 code generation time이 짧음
<ul>
<li>의문1: ORC는 thread safe 한가? (<a href="http://comments.gmane.org/gmane.comp.compilers.llvm.devel/83754">관련 링크</a>)</li>
<li>의문2: thread safe를 위한 성능 손해는 없는가?</li>
</ul>
</li>
<li>많은 새 프로젝트들은 MCJIT보다는 ORC 선택 중 또는 기존 프로젝트들도 전환 중</li>
</ul>
<h3>IR 코드와 Bitcode (BC)</h3>
<ul>
<li>프로그래밍 언어는 LLVM 거치면 IR로 변환되고 IR은 다시 BC로 변환되어 최종적으로 native 바이너리 형태로 변환된다. IR과 BC는 어디까지나 LLVM을 위한 intermediate representation 코드임</li>
<li>IR은 human readable representation 이고 BC는 더 컴팩트한 바이너리 포맷. 로딩은 당연 후자가 빠르므로 런타임 로딩을 위해서는 미리 BC로 빌드를 해놓아야 한다.</li>
<li>JIT 코드 작성 시에 IR 코드 생성을 해야 할 필요가 있는데 이는 프로그래밍 언어와 JIT 간에 interoperation 을 위해서이다.
<ul>
<li>예를 들면 JIT로 작성한 함수가 인자로 받을 구조체는 프로그래밍 언어에서도 가용해야 하는덷 이런 경우 c++ 등으로LLVM JIT에서 사용할 구조체와 함수등을 구현해 놓고 c++ 코드에서는 해당 구현을 사용하고 LLVM JIT에서는 미리 생성된 IR을 사용한다.</li>
</ul>
</li>
<li>IR 을 파싱하고 로딩해서 모듈을 생성할 수 있다.</li>
<li>생성된 모듈에서 iterator 를 통해 함수 리스트를 얻을 수 있다.
<ul>
<li>이때 함수에 attribute를 부여할 수 있는데 예를 들면 AlwaysInline 같은 것..</li>
<li>AlwaysInline 속성은 JIT로 작성된 코드 내부에서 호출하는 다른 JIT 함수들은 전부 inlining이 된다. 즉 함수 호출 비용이 줄어든다.
<ul>
<li>LLVM JIT를 굳이 어렵게 쓰는 이유는 interpretation cost를 줄이고 복잡한 로직을 주어진 정보를 통해 단순화 시켜 브렌치를 제거하기 위함인데 inlining은 이 목적에 잘 부합한다.</li>
<li>다른 속성도 살펴봐야..</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>Clang을 통해 emit-llvm 할 경우 extern 으로 감싸야 llvm 으로 함수에 접근 가능하다.</li>
<li>Clang을 통해 emit-llvm 할 경우 활용되지 않는 구조체는 컴파일러 레벨 최적화에서 제거 되기 때문에 IR에도 표현되지 않는데 이런 경우를 방지하려면 private dummy 함수를 만들어 인자에 struct들을 다 넣어버리면 IR에 struct를 유지시킬 수 있다.</li>
<li>Clang을 통해 emit-llvm 할 경우 같은 구성을 가진 구조체는 서로 구분하지 못한다. 따라서 다른 구조체의 symbol 이름으로 IR이 출력될 수 있다.</li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/11/25/llvm%ec%9d%84-%ec%9d%b4%ec%9a%a9%ed%95%9c-jit-%ec%bd%94%eb%93%9c-%ea%b0%9c%eb%b0%9c-%ec%a0%95%eb%a6%ac/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>LLVM 링크 정리</title>
		<link>https://diveintodata.org/2015/11/11/llvm-%ec%a0%95%eb%a6%ac/</link>
				<comments>https://diveintodata.org/2015/11/11/llvm-%ec%a0%95%eb%a6%ac/#respond</comments>
				<pubDate>Wed, 11 Nov 2015 13:39:13 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[Tokamak Project]]></category>
		<category><![CDATA[llvm]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1540</guid>
				<description><![CDATA[Documentation Links Kaleidoscope in Rust llvm-rs github (forked) llvm-rs Documentation llvm-sys Documentation Rustc LLVM source LLVM C API Doxygen Instruction Builders in LLVM C API IRBuilder.h in LLVM C++ IRBuilder API in LLVM C++ LLVM Programmer’s Manual Mapping High-Level Constructs to LLVM IR Presentation Materials LLVM &#38; LLVM Bitcode Introduction Compiled Python UDFs for Impala Sample Codes [&#8230;]]]></description>
								<content:encoded><![CDATA[<h2>Documentation Links</h2>
<ul>
<li><a href="https://github.com/pnkfelix/kaleido/tree/master/src">Kaleidoscope in Rust</a></li>
<li><a href="https://github.com/hyunsik/llvm-rs">llvm-rs github</a> (forked)</li>
<li><a href="https://tombebbington.github.io/llvm-rs/llvm/index.html">llvm-rs Documentation</a></li>
<li><a href="http://rustdoc.taricorp.net/llvm-sys/llvm_sys/index.html">llvm-sys Documentation</a></li>
<li><a href="https://github.com/rust-lang/rust/tree/master/src/librustc_trans">Rustc LLVM source</a></li>
<li><a href="http://llvm.org/docs/doxygen/html/modules.html">LLVM C API Doxygen</a></li>
<li><a href="http://llvm.org/docs/doxygen/html/group__LLVMCCoreInstructionBuilder.html">Instruction Builders in LLVM C API</a></li>
<li>IRBuilder.h in LLVM C++</li>
<li><a href="http://llvm.org/docs/doxygen/html/classllvm_1_1IRBuilder.html">IRBuilder API in LLVM C++</a></li>
<li><a href="http://llvm.org/docs/ProgrammersManual.html">LLVM Programmer’s Manual</a></li>
<li><a href="http://Mapping High-Level Constructs to LLVM IR">Mapping High-Level Constructs to LLVM IR</a></li>
</ul>
<h2>Presentation Materials</h2>
<ul>
<li><a href="http://pllab.cs.nthu.edu.tw/cs340402/lectures/lectures_2013/LLVM%20Bitcode%20Introduction.pdf">LLVM &amp; LLVM Bitcode Introduction</a></li>
<li><a href="http://www.slideshare.net/cloudera/20140520-impala-meetuppythonudfpptx">Compiled Python UDFs for Impala</a></li>
</ul>
<h2>Sample Codes</h2>
<ul>
<li><a href="https://github.com/imasahiro/llvm-sample">https://github.com/imasahiro/llvm-sample</a></li>
<li><a href="https://github.com/cloudera/Impala/tree/cdh5-trunk/be/src/codegen">codegen module of Impala</a></li>
<li><a href="https://github.com/benbjohnson/llvm-c-kaleidoscope/blob/master/src/codegen.c">Kaleidoscope in C API</a></li>
<li><a href="https://github.com/eliben/llvm-clang-samples">llvm-clang-samples</a></li>
</ul>
<h2>Tools</h2>
<ul>
<li><a href="https://ispc.github.io/faq.html">Frequently Asked Questions About ispc</a></li>
<li><a href="http://www.linux.org/threads/llvm-toolset.6644/">LLVM Toolset</a></li>
<li><a href="http://stackoverflow.com/questions/13676491/how-should-be-used-llvm-modules">How should be used LLVM modules?</a></li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/11/11/llvm-%ec%a0%95%eb%a6%ac/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>A skeleton code for Iterator in Rust</title>
		<link>https://diveintodata.org/2015/10/13/a-skeleton-code-for-iterator-in-rust/</link>
				<comments>https://diveintodata.org/2015/10/13/a-skeleton-code-for-iterator-in-rust/#respond</comments>
				<pubDate>Tue, 13 Oct 2015 10:36:13 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[iterator]]></category>
		<category><![CDATA[rust]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1523</guid>
				<description><![CDATA[For record, I wrote down the same code. Consuming Iterator Iterator that does not consume items]]></description>
								<content:encoded><![CDATA[<p>For record, I wrote down the same code.</p>
<h3>Consuming Iterator</h3>
<p><script src="https://gist.github.com/hyunsik/d4a8743bf6b5bf1ea7a4.js"></script></p>
<h3>Iterator that does not consume items</h3>
<p><script src="https://gist.github.com/hyunsik/1fc20bbcf35571e67907.js"></script></p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/10/13/a-skeleton-code-for-iterator-in-rust/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Awesome documentation links for Rust</title>
		<link>https://diveintodata.org/2015/10/11/rust-awesome-documentation-links/</link>
				<comments>https://diveintodata.org/2015/10/11/rust-awesome-documentation-links/#respond</comments>
				<pubDate>Sun, 11 Oct 2015 10:17:46 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[FOSS]]></category>
		<category><![CDATA[rust]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1515</guid>
				<description><![CDATA[I wrote down the useful links that I have learned. I&#8217;ll continue to update it. General The Rust Programming Language Rust for C++ programmers The Advanced Rust Programming Language Rust for Rubyists Abstraction Abstraction without overhead: traits in Rust Ownership Lifetime in Rust Book Understanding Pointers, Ownership, and Lifetimes in Rust http://alvalea.gitbooks.io/rust-for-cpp/content/lifetimes.html Understanding Lifetime in Rust [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>I wrote down the useful links that I have learned. I&#8217;ll continue to update it.</p>
<h2>General</h2>
<ul>
<li><a href="http://killercup.github.io/trpl-ebook/">The Rust Programming Language</a></li>
<li><a href="http://alvalea.gitbooks.io/rust-for-cpp/content/index.html">Rust for C++ programmers</a></li>
<li><a href="http://cglab.ca/~abeinges/blah/turpl/_book/">The Advanced Rust Programming Language</a></li>
<li><a href="http://www.rustforrubyists.com/book/index.html">Rust for Rubyists</a></li>
</ul>
<h2><a id="user-content-abstraction" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#abstraction"></a>Abstraction</h2>
<ul>
<li><a href="http://blog.rust-lang.org/2015/05/11/traits.html">Abstraction without overhead: traits in Rust</a></li>
</ul>
<h2><a id="user-content-ownership" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#ownership"></a>Ownership</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/lifetimes.html">Lifetime in Rust Book</a></li>
<li><a href="http://paulkoerbitz.de/posts/Understanding-Pointers-Ownership-and-Lifetimes-in-Rust.html">Understanding Pointers, Ownership, and Lifetimes in Rust</a></li>
<li><a href="http://alvalea.gitbooks.io/rust-for-cpp/content/lifetimes.html">http://alvalea.gitbooks.io/rust-for-cpp/content/lifetimes.html</a></li>
<li><a href="https://mobiarch.wordpress.com/2015/06/29/understanding-lifetime-in-rust-part-i/">Understanding Lifetime in Rust – Part I</a></li>
<li><a href="https://mobiarch.wordpress.com/2015/07/08/understanding-lifetime-in-rust-part-ii-3/">Understanding Lifetime in Rust – Part II</a></li>
</ul>
<h2><a id="user-content-object-safety" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#object-safety"></a>Object Safety</h2>
<ul>
<li><a href="http://huonw.github.io/blog/2015/01/object-safety/">Object Safety</a></li>
<li><a href="http://huonw.github.io/blog/2015/05/where-self-meets-sized-revisiting-object-safety/">Where Self Meets Sized: Revisiting Object Safety</a></li>
<li><a href="http://huonw.github.io/blog/2015/01/the-sized-trait/">The Sized Trait</a></li>
</ul>
<h2><a id="user-content-ffi" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#ffi"></a>FFI</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ffi.html">Foreign Function Interface &#8211; Rust Book</a></li>
<li><a href="http://doc.rust-lang.org/1.0.0-beta.2/libc/types/os/arch/c95/">C types in Rust</a></li>
<li><a href="http://stackoverflow.com/questions/24145823/rust-ffi-c-string-handling">Rust FFI C string handling</a></li>
<li><a href="http://stackoverflow.com/questions/28094636/how-do-i-get-a-mut-c-char-from-a-str">How do I get a *mut c_char from a Str?</a></li>
<li><a href="http://blog.rust-lang.org/2015/04/24/Rust-Once-Run-Everywhere.html">Rust Once, Run Everywhere</a></li>
<li><a href="http://siciarz.net/ffi-rust-writing-bindings-libcpuid/">FFI in Rust &#8211; writing bindings for libcpuid</a></li>
<li><a href="http://siciarz.net/24-days-of-rust-calling-rust-from-other-languages/">24 days of Rust &#8211; calling Rust from other languages</a></li>
<li>A Pythonist getting Rusty these days&#8230; <a href="http://wafflespeanut.github.io/blog/2015/07/05/a-pythonist-getting-rusty-these-days-dot/">Part 1</a>, <a href="http://wafflespeanut.github.io/blog/2015/07/08/a-pythonist-getting-rusty-these-days-dot-dot-dot-part-2/">Part 2</a></li>
<li><a class="title may-blank loggedin " href="https://www.reddit.com/r/rust/comments/3r5icb/exposing_rust_struct_to_python/">Exposing Rust struct to Python</a></li>
</ul>
<h2><a id="user-content-iterator" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#iterator"></a>Iterator</h2>
<ul>
<li><a href="http://hermanradtke.com/2015/06/22/effectively-using-iterators-in-rust.html">Effectively Using Iterators In Rust</a></li>
<li><a href="http://hoverbear.org/2015/05/02/a-journey-into-iterators/">A Journey into Iterators</a></li>
<li><a href="http://stackoverflow.com/questions/29669287/how-can-i-zip-more-than-two-iterators">How can I zip more than two iterators?</a></li>
<li><a href="http://stackoverflow.com/questions/27535289/correct-way-to-return-an-iterator">Correct way to return an Iterator?</a></li>
<li><a href="http://bluss.github.io/rust-itertools/doc/itertools/index.html">Itertools</a> (very useful iterator helper utility)</li>
</ul>
<h2><a id="user-content-pattern-matching" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#pattern-matching"></a>Pattern Matching</h2>
<ul>
<li><a href="http://pzol.github.io/getting_rusty/posts/20140417_destructuring_in_rust/">Destructuring and Pattern Matching</a></li>
<li><a href="http://blog.rust-lang.org/2015/04/17/Enums-match-mutation-and-moves.html">Mixing matching, mutation, and moves in Rust</a></li>
</ul>
<h2><a id="user-content-error-handling" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#error-handling"></a>Error handling</h2>
<ul>
<li><a href="http://phildawes.net/blog/2015/06/17/rust-stacktrace/">Rust error stacktraces</a></li>
<li><a href="http://www.hydrocodedesign.com/2014/05/28/practicality-with-rust-error-handling/">Practicality With Rust: Error Handling</a></li>
</ul>
<h2><a id="user-content-biildrs" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#biildrs"></a>biild.rs</h2>
<ul>
<li><a href="http://doc.crates.io/build-script.html">Build Script Support &#8211; Cargo Documentation</a></li>
<li><a href="https://github.com/alexcrichton/gcc-rs">gcc-rs</a></li>
</ul>
<h3><a id="user-content-examples" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#examples"></a>Examples</h3>
<ul>
<li><a href="https://github.com/tari/llvm-sys.rs/blob/master/build.rs">llvm-sys.rs/build.rs</a></li>
</ul>
<h2><a id="user-content-idiomatic-usages-of-rust" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#idiomatic-usages-of-rust"></a>Idiomatic Usages of Rust</h2>
<ul>
<li><a href="http://smallcultfollowing.com/babysteps/blog/2015/05/05/where-rusts-enum-shines/">Virtual Structs Part 1: Where Rust’s Enum Shines</a></li>
<li><a href="http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/">Modeling Graphs in Rust Using Vector Indices</a></li>
<li><a href="https://github.com/nrc/patterns/blob/master/README.md">Rust Design Patterns</a></li>
</ul>
<h3><a id="user-content-api-design" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#api-design"></a>API Design</h3>
<ul>
<li><a href="http://hermanradtke.com/2015/05/03/string-vs-str-in-rust-functions.html">String vs &amp;str in Rust functions</a></li>
<li><a href="http://hermanradtke.com/2015/05/06/creating-a-rust-function-that-accepts-string-or-str.html">Creating a Rust function that accepts String or &amp;str</a></li>
<li><a href="http://hermanradtke.com/2015/05/29/creating-a-rust-function-that-returns-string-or-str.html">Creating a Rust function that returns a &amp;str or String</a></li>
<li><a href="http://cglab.ca/~abeinges/blah/too-many-lists/book/">Learning Rust With Entirely Too Many Linked Lists</a></li>
<li><a href="https://llogiq.github.io/2015/07/30/traits.html">Rust&#8217;s Built-in Traits, the When, How &amp; Why</a></li>
</ul>
<h3><a id="user-content-ownership-1" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#ownership-1"></a>Ownership</h3>
<ul>
<li><a href="http://hermanradtke.com/2015/06/09/strategies-for-solving-cannot-move-out-of-borrowing-errors-in-rust.html">Strategies for solving &#8216;cannot move out of&#8217; borrowing errors in Rust</a></li>
</ul>
<h2><a id="user-content-network-and-io" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#network-and-io"></a>Network and I/O</h2>
<h2>Macro</h2>
<ul>
<li><a href="https://danielkeep.github.io/tlborm/book/index.html">The Little Book of Rust Macros</a></li>
</ul>
<h4><a id="user-content-mio" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#mio"></a>MIO</h4>
<ul>
<li><a href="http://rustdoc.s3-website-us-east-1.amazonaws.com/mio/v0.4.x/mio/index.html">API Documentation</a></li>
<li><a href="https://wycats.gitbooks.io/mio-book/content/">mio book</a></li>
<li><a href="http://hoverbear.org/2015/03/03/getting-acquainted-with-mio/">Getting Acquainted with MIO</a></li>
<li><a href="https://github.com/carllerche/mio">mio source code</a></li>
<li><a href="http://hermanradtke.com/2015/07/22/creating-a-multi-echo-server-using-rust-and-mio.html">Creating A Multi-echo Server using Rust and mio</a></li>
<li><a href="https://github.com/hjr3/mob/tree/protocol-blog-post">Accumulating echo server using Rust&#8217;s mio</a></li>
<li><a href="http://hermanradtke.com/2015/07/12/my-basic-understanding-of-mio-and-async-io.html">My Basic Understanding of mio and Asynchronous IO</a></li>
</ul>
<h2><a id="user-content-projects-worth-watching" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#projects-worth-watching"></a>Projects Worth Watching</h2>
<ul>
<li><a href="https://github.com/kud1ing/awesome-rust">Awesome Rust</a></li>
<li>Rust in Detail
<ul>
<li>Part 1) <a href="http://nbaksalyar.github.io/2015/07/10/writing-chat-in-rust.html">Writing Scalable Chat Service from Scratch</a></li>
<li>Part 2) <a href="https://nbaksalyar.github.io/2015/11/09/rust-in-detail-2.html">Sending and Receiving Messages</a></li>
</ul>
</li>
<li>Asynchronous IO in Rust
<ul>
<li><a href="https://blog.skcript.com/asynchronous-io-in-rust-36b623e7b965#.jbod3me4d">Part 1</a></li>
<li><a href="https://medium.com/@paulcolomiets/async-io-for-rust-part-ii-33b9a7274e67#.70hf6vtm6">Part 2</a></li>
</ul>
</li>
<li><a href="https://www.bignerdranch.com/blog/building-an-ios-app-in-rust-part-1/">Building an iOS App in Rust, Part 1: Getting Started with Rust</a></li>
<li><a href="http://hermanradtke.com/2015/07/22/creating-a-multi-echo-server-using-rust-and-mio.html">Creating A Multi-echo Server using Rust and mio</a></li>
<li><a href="http://blog.burntsushi.net/transducers/">Index 1,600,000,000 Keys with Automata and Rust</a>
<ul>
<li><a href="http://burntsushi.net/rustdoc/fst/">Library documentation</a></li>
</ul>
</li>
</ul>
<h2><a id="user-content-papers" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#papers"></a>Papers</h2>
<ul>
<li><a href="http://publications.lib.chalmers.se/records/fulltext/219016/219016.pdf">Parallelization in Rust with fork-join and friends</a></li>
</ul>
<h2><a id="user-content-profiling" class="anchor" href="https://gist.github.com/hyunsik/ef99bd8ada9ec7c7d29c#profiling"></a>Profiling</h2>
<ul>
<li><a href="https://llogiq.github.io/2015/07/15/profiling.html">Blog: Profiling Rust applications</a> (<a href="https://www.reddit.com/r/rust/comments/3dcquc/blog_profiling_rust_applications/">comments</a>)</li>
<li><a href="http://blog.adamperry.me/rust/2016/07/24/profiling-rust-perf-flamegraph/">Rust Performance: A story featuring perf and flamegraph on Linux</a></li>
</ul>
<p><strong>Updates</strong></p>
<ul>
<li>Oct 15, 2015 &#8211; Added The Little Book of Rust Macros.</li>
<li>Nov 3. 2015 &#8211; Add &#8216;Rust Design Pattern&#8217; and &#8216;Exposing Rust struct to Python&#8217;</li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/10/11/rust-awesome-documentation-links/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Git에서 GPG key로 signoff 하기</title>
		<link>https://diveintodata.org/2015/10/09/git%ec%97%90%ec%84%9c-gpg-key%eb%a1%9c-signoff-%ed%95%98%ea%b8%b0/</link>
				<comments>https://diveintodata.org/2015/10/09/git%ec%97%90%ec%84%9c-gpg-key%eb%a1%9c-signoff-%ed%95%98%ea%b8%b0/#respond</comments>
				<pubDate>Fri, 09 Oct 2015 19:08:24 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[FOSS]]></category>
		<category><![CDATA[git]]></category>
		<category><![CDATA[gpg]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1503</guid>
				<description><![CDATA[공헌자들 패치를 받아서 커밋할 때, 컨트리뷰터의 author를 유지하면서 또한 커미터가 직접 확인했다는 증명을 signoff 기능을 통해 할 수 가 있다. 그런데 signoff 가 단순하게 커밋로그에 남는 &#8216;메일 주소와 이름 뿐&#8217;인 태그일 뿐이라서 진짜 그 사람이 signoff를 했는지 증명하는 것이 어렵다는 문제가 있다. 다행히 git에서는 GPG key를 이용한 signoff 기능을 제공한다. 우선은 내가 볼 목적으로 그리고 동료들에게 설명할 목적으로 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>공헌자들 패치를 받아서 커밋할 때, 컨트리뷰터의 author를 유지하면서 또한 커미터가 직접 확인했다는 증명을 signoff 기능을 통해 할 수 가 있다. 그런데 signoff 가 단순하게 커밋로그에 남는 &#8216;메일 주소와 이름 뿐&#8217;인 태그일 뿐이라서 진짜 그 사람이 signoff를 했는지 증명하는 것이 어렵다는 문제가 있다. 다행히 git에서는 GPG key를 이용한 signoff 기능을 제공한다. 우선은 내가 볼 목적으로 그리고 동료들에게 설명할 목적으로 정리를 해본다.</p>
<p>GPG에 대한 사용법은 생략한다. 우선 자신의 Key id를 얻는다.</p>
<p><script src="https://gist.github.com/hyunsik/792391bd7566ccd426f5.js"></script></p>
<p>그리고 git config의 user.signingkey로 GPG key id를 설정한다. 각 repository 마다 설정하고 싶으면 &#8211;global 옵션을 빼면 지정 repository에만 (현재 디렉토리의 git repository) 지정할 수 있다.</p>
<p><script src="https://gist.github.com/hyunsik/9a35bde94a73b93ce364.js"></script></p>
<p>그리고 커밋을 한다. 아래 옵션이 많지만 GPG key로 사인을 위한 옵션은 <strong>-S</strong> 이다.</p>
<p><script src="https://gist.github.com/hyunsik/06de6f452c4e0ec725e3.js"></script></p>
<p>GPG key-agent가 켜져 있다면 패스워드 직접 입력없이 자동으로 위에서 설정한 키로 사인과 함께 커밋이 된다. 그럼 확인해보자.</p>
<p><script src="https://gist.github.com/hyunsik/b85e08619985c1b889db.js"></script></p>
<p>&#8216;not certified&#8217;라고 나올 수 가 있다. key가 로컬 머신에 등록되어 있지만 trust key로 설정되어 있지 않아서 그렇다고 한다 (자세히는 모름). 해결은 아래와 같이 <code>--edit-key</code> 옵션으로 한다.</p>
<p><script src="https://gist.github.com/hyunsik/9c3cfbc181fbb1c28be3.js"></script></p>
<p>그리고 다시 확인해보자.</p>
<p><script src="https://gist.github.com/hyunsik/f3525cf4a9763a58e278.js"></script></p>
<p>Warning이 없어진 것을 알 수 있다.</p>
<h2>See Also</h2>
<ul>
<li><a href="http://mikegerwitz.com/papers/git-horror-story">Git Horror Story</a></li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/10/09/git%ec%97%90%ec%84%9c-gpg-key%eb%a1%9c-signoff-%ed%95%98%ea%b8%b0/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>근래 배운 몇 가지 패턴 정리: Provider, Builder, Delegation</title>
		<link>https://diveintodata.org/2015/10/05/%ea%b7%bc%eb%9e%98-%eb%b0%b0%ec%9a%b4-%eb%aa%87-%ea%b0%80%ec%a7%80-%ed%8c%a8%ed%84%b4-%ec%a0%95%eb%a6%ac-provider-builder-delegation/</link>
				<comments>https://diveintodata.org/2015/10/05/%ea%b7%bc%eb%9e%98-%eb%b0%b0%ec%9a%b4-%eb%aa%87-%ea%b0%80%ec%a7%80-%ed%8c%a8%ed%84%b4-%ec%a0%95%eb%a6%ac-provider-builder-delegation/#respond</comments>
				<pubDate>Mon, 05 Oct 2015 13:30:29 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[design pattern]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1490</guid>
				<description><![CDATA[Provider 정확히 말하면 디자인 패턴은 아니라고 한다. 자세한 설명은 [1]에 있다. Factory 패턴과 유사하나 외부 설정에 따라 다른 객체를 생성하는 패턴을 칭한다. 나쁜 패턴이라며 [1]과 함께 Constructor Injection 같은 방법을 써야 한다는 주장이 있지만, 실제로 잘 작성된 오픈소스 프로젝트들에서도 이러한 구현을 꽤 많이 볼 수 있다. Builder 생성자에 전달되어야 할 파라메터가 다양해서 골치 아픈 경우 [&#8230;]]]></description>
								<content:encoded><![CDATA[<h2>Provider</h2>
<p>정확히 말하면 디자인 패턴은 아니라고 한다. 자세한 설명은 [1]에 있다. Factory 패턴과 유사하나 외부 설정에 따라 다른 객체를 생성하는 패턴을 칭한다. 나쁜 패턴이라며 [1]과 함께 Constructor Injection 같은 방법을 써야 한다는 주장이 있지만, 실제로 잘 작성된 오픈소스 프로젝트들에서도 이러한 구현을 꽤 많이 볼 수 있다.</p>
<h2>Builder</h2>
<p>생성자에 전달되어야 할 파라메터가 다양해서 골치 아픈 경우 Builder 패턴이 좋은 해결책이 된다. 방법은 Builder 객체를 만들고 setter 를 통해 필요한 파라메터를 설정 한 후에 build() 메소드 호출을 통해 실제 객체를 생성한다.</p>
<p><script src="https://gist.github.com/hyunsik/afa9ec5cbeaed9a9d6cc.js"></script></p>
<h2>Delegation</h2>
<p>처음 Delegation 패턴을 봤을 때는 Interface의 구현과 차이점을 잘 발견하지 못했었다. 위키 피디아에도 설명이 있지만 언제 써야 하는지가 설명되어 있지 않았다. [3] 에서 이유를 찾았는데. 요약을 해보면,</p>
<ul>
<li>원래 있는 객체의 동작을 그대로 유지하면서 동작의 앞뒤에 처리를 추가하고 싶을 때</li>
<li>호환되지 않는 인터페이스를 위한 Proxy 를 구현할 때</li>
<li>실제 구현 사용 시 복잡도가 높은 콜 루틴을 단순하게 제공하려고 할 때</li>
</ul>
<p>경우에 따라 서브클래싱과 함께 쓸 수 있을 것 같으며 데코레이터 패턴에서 주로 나타나는 패턴인 것 같다.</p>
<h2>See Also</h2>
<p>[1]<a href="https://msdn.microsoft.com/en-us/library/ms972319.aspx"> Provider Model Design Pattern and Specification, Part 1</a><br />
[2]<a href="http://blog.ploeh.dk/2011/04/27/Providerisnotapattern/"> Provider is not a pattern</a><br />
[3] <a href="https://wordpress.com/post/12237478/new/">http://stackoverflow.com/questions/7168714/what-is-the-purpose-of-a-delegation-pattern/7168737#7168737</a></p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/10/05/%ea%b7%bc%eb%9e%98-%eb%b0%b0%ec%9a%b4-%eb%aa%87-%ea%b0%80%ec%a7%80-%ed%8c%a8%ed%84%b4-%ec%a0%95%eb%a6%ac-provider-builder-delegation/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Jni Native를 통한 Rust 함수 호출</title>
		<link>https://diveintodata.org/2015/09/25/jni-native%eb%a5%bc-%ed%86%b5%ed%95%9c-rust-%ed%95%a8%ec%88%98-%ed%98%b8%ec%b6%9c/</link>
				<comments>https://diveintodata.org/2015/09/25/jni-native%eb%a5%bc-%ed%86%b5%ed%95%9c-rust-%ed%95%a8%ec%88%98-%ed%98%b8%ec%b6%9c/#respond</comments>
				<pubDate>Fri, 25 Sep 2015 11:31:20 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[FOSS]]></category>
		<category><![CDATA[Tokamak Project]]></category>
		<category><![CDATA[jni]]></category>
		<category><![CDATA[rust]]></category>
		<category><![CDATA[Tajo]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1482</guid>
				<description><![CDATA[회사 허락을 맡아 홀로 프로젝트를 하나 시작했다. 큰 그림은 일부 컴포넌트를 Rust로 구현하고 컴포넌트간 연결은 rpc로 하는 것인데 아직 Rust 로 rpc 구현을 하기에 시간이 더 필요하다. 임시적인 수단으로 JNI를 통해 기존 컴포넌트에 연결을 하려고 한다. 그 외 프로젝트에 자세한 이야기는 나중에 설명하고 위 목적으로 Stackoverflow 에서 참고하고 https://github.com/Monnoroch/RustJni 를 참고해서 JNI를 테스트를 해봤다. C 바인딩이 쉬운것은 Rust의 장점 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>회사 허락을 맡아 홀로 프로젝트를 하나 시작했다. 큰 그림은 일부 컴포넌트를 Rust로 구현하고 컴포넌트간 연결은 rpc로 하는 것인데 아직 Rust 로 rpc 구현을 하기에 시간이 더 필요하다. 임시적인 수단으로 JNI를 통해 기존 컴포넌트에 연결을 하려고 한다.</p>
<p>그 외 프로젝트에 자세한 이야기는 나중에 설명하고 위 목적으로 <a href="http://stackoverflow.com/questions/30258427/calling-rust-from-java">Stackoverflow</a> 에서 참고하고 https://github.com/Monnoroch/RustJni 를 참고해서 JNI를 테스트를 해봤다.</p>
<p>C 바인딩이 쉬운것은 Rust의 장점 중 하나인데 JNI 바인딩 역시 순조로웠다. 방법은 우선 아래와 같이 native 함수 인터페이스를 작성하고</p>
<p><script src="https://gist.github.com/hyunsik/b55b3b098ecb1d5841b5.js"></script></p>
<p>아래와 같이 Rust 코드를 작성하면 된다.</p>
<p><script src="https://gist.github.com/hyunsik/379913824ff7758b97e6.js"></script></p>
<p>이게 전부다. 위에서 사용된 <em>chars_to_str</em>와 <em>str_to_jstring</em> 는 아래 github repository에 있다.</p>
<p><a href="https://github.com/hyunsik/jni-rs/blob/master/src/helper.rs" rel="nofollow">https://github.com/hyunsik/jni-rs/blob/master/src/helper.rs</a></p>
<p>위 repository 는 https://github.com/Monnoroch/RustJni를 fork 해서 JNI 뿐 아니라 JNI 프로그램 작성 중에 반복되는 코드들에 대한 유틸리티 함수들을 추가할 계획이다.</p>
<p>그리고 아래는 JNI Native + Rust 를 위한 템플릿 프로젝트이다.</p>
<p><a href="https://github.com/hyunsik/rust-jni-template" rel="nofollow">https://github.com/hyunsik/rust-jni-template</a></p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/09/25/jni-native%eb%a5%bc-%ed%86%b5%ed%95%9c-rust-%ed%95%a8%ec%88%98-%ed%98%b8%ec%b6%9c/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>&#8216;개발자가 보는 소프트웨어 교육의 오해와 진실, 그리고 미래&#8217; 글에 대한 이견</title>
		<link>https://diveintodata.org/2015/08/08/%ea%b0%9c%eb%b0%9c%ec%9e%90%ea%b0%80-%eb%b3%b4%eb%8a%94-%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ea%b5%90%ec%9c%a1%ec%9d%98-%ec%98%a4%ed%95%b4%ec%99%80-%ec%a7%84%ec%8b%a4-%ea%b7%b8%eb%a6%ac/</link>
				<comments>https://diveintodata.org/2015/08/08/%ea%b0%9c%eb%b0%9c%ec%9e%90%ea%b0%80-%eb%b3%b4%eb%8a%94-%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ea%b5%90%ec%9c%a1%ec%9d%98-%ec%98%a4%ed%95%b4%ec%99%80-%ec%a7%84%ec%8b%a4-%ea%b7%b8%eb%a6%ac/#respond</comments>
				<pubDate>Sun, 09 Aug 2015 02:42:37 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1473</guid>
				<description><![CDATA[개발자가 보는 소프트웨어 교육의 오해와 진실, 그리고 미래 링크한 글에 부분적으로 공감이 가기는 하지만 저는 꽤 다른 생각을 가지고 있습니다. 요약을 하면 링크의 글에서는 &#8216;직접적인 SW 개발을 위한 지식 습득&#8217;이 SW교육의 핵심이라고 주장하고 있습니다. 제 의견은 초중등 SW 교육에서 직접적인 SW 개발을 다루는 것은 불필요하다고 생각합니다. 덧붙이면 제가 생각하는 초중 SW 교육의 참의는 논리적인 사고나 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p><a href="http://ppss.kr/archives/53121">개발자가 보는 소프트웨어 교육의 오해와 진실, 그리고 미래</a></p>
<p>링크한 글에 부분적으로 공감이 가기는 하지만 저는 꽤 다른 생각을 가지고 있습니다.</p>
<p>요약을 하면 링크의 글에서는 &#8216;직접적인 SW 개발을 위한 지식 습득&#8217;이 SW교육의 핵심이라고 주장하고 있습니다. 제 의견은 초중등 SW 교육에서 직접적인 SW 개발을 다루는 것은 불필요하다고 생각합니다. 덧붙이면 제가 생각하는 초중 SW 교육의 참의는 논리적인 사고나 알고리즘적 사고를 잘 가르치는 수단으로 SW가 활용되는 것이지 SW 개발에 목적이 있다고 생각하지 않습니다.</p>
<p>그 이유를 다음과 같습니다.</p>
<div class="text_exposed_show">
<p><b>SW 개발을 위한 지식은 쉬이 변합니다</b><br />
SW 개발 자체는 도메인 지식, SW 개발 방법론, 협업 도구, 프로그래밍 언어와 같은 응용의 말단 지식 (원론에서 먼)을 다수 요구하고 있으며 이러한 지식들은 10년 이상 단위로 보면 쉬이 변하는 영역입니다. 또한 SW 개발은 지식의 양적인 요구가 많거나 엔지니어링적인 요소가 많습니다. 이를 실제 현업에 종사하려면 10년 이상 걸리는 초중등 학생들이 배울 필요는 없습니다. 직접적인 SW 개발에 관심이 있는 친구들은 (글의 저자 설명과 같이) 인터넷 등 다른 수단을 통해 그때 그때 유망한 프로그래밍 언어나 방법론, 개발 도구들을 배우면 됩니다.</p>
<p><b>초중등 SW 교육이 SW 개발자를 만들기 위한 것이 아닙니다.</b><br />
저자 분이 &#8216;모두 개발자가 될 필요는 없다&#8217;고 언급한 것 처럼 당연히 초중등 SW 교육이 SW 개발자를 만들기 위한 것이 아닙니다. 따라서 직접 결과물을 내기 위해 배워야 하는 SW 개발 지식(글에서 언급된 방법론, 협업 도구, 현업에서 쓰이는 언어) 에 시간을 들이는 것은 대다수의 초중등 학생들에게 사실 시간 낭비일 것이라고 생각합니다. 어린 학생들일 수록 가능성 많고 잠재력이 크기 때문에 (다른 말로 하면 미래에 어떤 분야에 종사하게 될지 모르기 때문에) 학생들 전체에게 좋은 영향을 줄 지식인 논리력, 알고리즘적 사고력을 키우는게 본질이 되어야 합니다. SW 통해 생각의 방법을 배우게 되면 예술, 인문, 철학, 과학, 공학 분야에 다양하게 적용될 수 있습니다.</p>
</div>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/08/08/%ea%b0%9c%eb%b0%9c%ec%9e%90%ea%b0%80-%eb%b3%b4%eb%8a%94-%ec%86%8c%ed%94%84%ed%8a%b8%ec%9b%a8%ec%96%b4-%ea%b5%90%ec%9c%a1%ec%9d%98-%ec%98%a4%ed%95%b4%ec%99%80-%ec%a7%84%ec%8b%a4-%ea%b7%b8%eb%a6%ac/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>대학 SW 교육에 대한 유감</title>
		<link>https://diveintodata.org/2015/08/08/%eb%8c%80%ed%95%99-sw-%ea%b5%90%ec%9c%a1%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9c%a0%ea%b0%90/</link>
				<comments>https://diveintodata.org/2015/08/08/%eb%8c%80%ed%95%99-sw-%ea%b5%90%ec%9c%a1%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9c%a0%ea%b0%90/#respond</comments>
				<pubDate>Sun, 09 Aug 2015 02:37:24 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Others]]></category>
		<category><![CDATA[시사]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1471</guid>
				<description><![CDATA[대학 SW교육 확 바뀐다…전문인력 5천500명 양성 미국 같은 경우 SW 산업이 상당히 발달하고 인력 수요가 높다. 그래서 지금 SW 산업 발달 속도와 수요 증가로 보아 몇 년도 까지 얼마나 많은 SW 인력이 부족하다는 데이터를 바탕으로 인력 양성에 노력을 하고 있다. 다시 말해 공급이 부족하니 정책을 펼쳐 늘리는 것이다. 너무도 당연하다. 우리나라는 SW 산업이 발전하고 있지 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p><a href="http://news.naver.com/main/read.nhn?mode=LSD&amp;mid=sec&amp;oid=001&amp;aid=0007758428&amp;sid1=001&amp;lfrom=facebook">대학 SW교육 확 바뀐다…전문인력 5천500명 양성</a></p>
<p>미국 같은 경우 SW 산업이 상당히 발달하고 인력 수요가 높다. 그래서 지금 SW 산업 발달 속도와 수요 증가로 보아 몇 년도 까지 얼마나 많은 SW 인력이 부족하다는 데이터를 바탕으로 인력 양성에 노력을 하고 있다. 다시 말해 공급이 부족하니 정책을 펼쳐 늘리는 것이다. 너무도 당연하다.</p>
<p>우리나라는 SW 산업이 발전하고 있지 않다. 실질적 수요가 증가하는지도 잘 모르겠다. SW 기업이 몇 개나 있는지&#8230; 거의 없는 것 같다. 기업이나 정부가 SW를 제 돈 내고 사서 쓰는 것은 보기 힘들고 유수 대기업들 조차도 여전히 인건비 기반으로 비용 지불을 하려고 한다. 이런 상태로 볼 때 지금도 앞으로도 SW 기업이 더 크지도 새로 생길 가능성도 상당히 낮은 것 같다. 앞으로도 좋아질 징조는 보이지 않는다. 다시 말해 수요 증가에 대해 의문이 든다.</p>
<p>또한 산업계에서 진짜 원하는 것은 전문인력인데 전문인력은 산업 발달로 길러지는 것이지 제도적으로 인위적으로<span class="text_exposed_show"> 키울 수 있는 것은 아니다. 이런 정책으로 실질적 수요를 해소하기는 쉽지 않아 보인다.</span></p>
<div class="text_exposed_show">
<p>다소 비관적으로 본다면, 이런 정책으로 인위적으로 많이 양성된 인력들을 흡수할 곳은 없을 것으로 보인다. 운이 좋으면 외국으로 가서라도 일을 하게 되겠지만, 많은 사람들은 배운 것을 써먹지도 못하는 자리에서 일하게 되거나 헐값에 일을 하게 될 지도 모른다.</p>
<p>SW 산업의 진짜 발전을 위해서는 인위적인 인력 양성보다는 (너무 당연해서 심심한 이야기지만) SW 생태계 자체에 좋은 순환이 만드는 방법이 함께 혹은 먼저 고민되어야 할 것 같다.</p>
</div>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/08/08/%eb%8c%80%ed%95%99-sw-%ea%b5%90%ec%9c%a1%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9c%a0%ea%b0%90/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>Oracle이 고려 중인 Java 9의 Unsafe API 제거 계획</title>
		<link>https://diveintodata.org/2015/07/15/removal-of-unsafe-in-java9/</link>
				<comments>https://diveintodata.org/2015/07/15/removal-of-unsafe-in-java9/#respond</comments>
				<pubDate>Wed, 15 Jul 2015 09:20:58 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[java]]></category>
		<category><![CDATA[Java9]]></category>
		<category><![CDATA[Unsafe API]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1467</guid>
				<description><![CDATA[성능이 중요한 꽤 많은 자바 프로젝트 (하둡 등 데이터 처리 프로젝트들 역시)이 Java Unsafe API에 의존하고 있다. Unsafe API는 JVM에서 공식적으로 제공하는 API가 아닌 Oracle JDK에서 내부적인 사용을 목적으로 제공하는 API이다. JNI와 다른 기술이며 콜 오버헤드 없이 직접 native 코드로 실행된기 때문에 빠르고, C 와 같이 메모리를 동적할당할 수 있으며 bounding check 없는 배열 접근 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>성능이 중요한 꽤 많은 자바 프로젝트 (하둡 등 데이터 처리 프로젝트들 역시)이 Java Unsafe API에 의존하고 있다. Unsafe API는 JVM에서 공식적으로 제공하는 API가 아닌 Oracle JDK에서 내부적인 사용을 목적으로 제공하는 API이다. JNI와 다른 기술이며 콜 오버헤드 없이 직접 native 코드로 실행된기 때문에 빠르고, C 와 같이 메모리를 동적할당할 수 있으며 bounding check 없는 배열 접근 등 다소 위험하지만 성능 좋은 API를 100여가지 제공한다.</p>
<ul>
<li><a href="http://blog.dripstat.com/removal-of-sun-misc-unsafe-a-disaster-in-the-making/" target="_blank">Removal of sun.misc.Unsafe in Java 9 &#8211; A disaster in the making</a></li>
</ul>
<p>붙인 링크는 Oracle에서 JVM9 에서 Java Unsafe API 정말 제거하려는 계획과 지워질 경우 일어날 재앙에 대해서 언급한다. 아직까지는 계획일 뿐이고 계획을 직접 훑어보니 어느 정도의 대체 API도 고려하는 것 같기는 하다. 그럼에도 불구하고 그런일이 실제로 일어난다면 많은 자바 프로젝트들은 큰 변화를 겪어야 할 수 도 있다. 어쩌면 자바로 작성한 것이 의미가 없어질 정도로.. 어떤 프로젝트들은 헤비한 JNI 사용을 해야 할 것 이며 어떤 프로젝트들은 C++이나 기타 시스템 프로그래밍 언어로 이동을 해야 할지도 모르겠다.</p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/07/15/removal-of-unsafe-in-java9/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>오픈소스 홍보를 위한 사이트 정리</title>
		<link>https://diveintodata.org/2015/07/05/open-source-advertising/</link>
				<comments>https://diveintodata.org/2015/07/05/open-source-advertising/#respond</comments>
				<pubDate>Sun, 05 Jul 2015 11:41:26 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[FOSS]]></category>
		<category><![CDATA[foss]]></category>
		<category><![CDATA[opensource]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1460</guid>
				<description><![CDATA[오픈소스의 핵심은 커뮤니티와 사용자이기 때문에 홍보를 꾸준히 그리고 잘 해야 할 필요가 있다. 개발자 커뮤니티나 오픈소스 커뮤니티 사이트에서 홍보를 많이 하는데 매 릴리즈나 주요 로드맵 공개 때 마다 꾸준히 하는 것이 효과적이다. 추후 참고하기 위해 목록을 정리 한다. 글 또는 링크 포스트를 통한 홍보 사이트 https://www.reddit.com &#8211; 적절한 카테고리에 홍보 https://news.ycombinator.com https://dzone.com/ 각종 SNS 등록을 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>오픈소스의 핵심은 커뮤니티와 사용자이기 때문에 홍보를 꾸준히 그리고 잘 해야 할 필요가 있다. 개발자 커뮤니티나 오픈소스 커뮤니티 사이트에서 홍보를 많이 하는데 매 릴리즈나 주요 로드맵 공개 때 마다 꾸준히 하는 것이 효과적이다. 추후 참고하기 위해 목록을 정리 한다.</p>
<p>글 또는 링크 포스트를 통한 홍보 사이트</p>
<ul>
<li><a href="https://www.reddit.com" rel="nofollow">https://www.reddit.com</a> &#8211; 적절한 카테고리에 홍보</li>
<li><a href="https://news.ycombinator.com" rel="nofollow">https://news.ycombinator.com</a></li>
<li><a href="https://dzone.com/" rel="nofollow">https://dzone.com/</a></li>
<li>각종 SNS</li>
</ul>
<p>등록을 통한 홍보 사이트</p>
<ul>
<li><a href="https://www.openhub.net" rel="nofollow">https://www.openhub.net</a></li>
<li><a href="http://openhatch.org/" rel="nofollow">http://openhatch.org/</a></li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/07/05/open-source-advertising/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>해쉬 함수 구현 (hash function implementation) 링크 정리</title>
		<link>https://diveintodata.org/2015/05/25/hash-function-implementations/</link>
				<comments>https://diveintodata.org/2015/05/25/hash-function-implementations/#comments</comments>
				<pubDate>Mon, 25 May 2015 11:05:12 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Code]]></category>
		<category><![CDATA[Research]]></category>
		<category><![CDATA[hash]]></category>
		<category><![CDATA[hash function]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1450</guid>
				<description><![CDATA[이것도 한 3-4년전에 정리했다가 가끔 업데이트 한 것 같은데&#8230; 나름 괜찮은 링크가 몇 개 있어 공유한다. 이것도 앞으로는 이 페이지에서 업데이트를 하겠다. 오래 지나다보니 인터넷에 있는 정보라도 링크가 깨진 것들이 많아 지웠는데 아쉽다. 다행히 이 페이지는 web archive에서 찾을 수 있어 다행이다 싶다. General Which hashing algorithm is best for uniqueness and speed? Can one construct a [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>이것도 한 3-4년전에 정리했다가 가끔 업데이트 한 것 같은데&#8230; 나름 괜찮은 링크가 몇 개 있어 공유한다. 이것도 앞으로는 이 페이지에서 업데이트를 하겠다. 오래 지나다보니 인터넷에 있는 정보라도 링크가 깨진 것들이 많아 지웠는데 아쉽다. 다행히 이 <a href="https://web.archive.org/web/20120615165357/http://home.comcast.net/~bretm/hash/">페이지</a>는 web archive에서 찾을 수 있어 다행이다 싶다.</p>
<hr />
<h2 id="Hashing-General">General</h2>
<ul>
<li><a class="external-link" href="http://programmers.stackexchange.com/questions/49550/which-hashing-algorithm-is-best-for-uniqueness-and-speed" rel="nofollow">Which hashing algorithm is best for uniqueness and speed?</a></li>
<li><a class="external-link" href="http://stackoverflow.com/questions/2694740/can-one-construct-a-good-hash-function-using-crc32c-as-a-base" rel="nofollow">Can one construct a “good” hash function using CRC32C as a base?</a>
<ul>
<li>CRC32가 hash table등을 위한 목적으로 좋은가? (키가 uniform distribution으로 나오는가?)</li>
</ul>
</li>
<li><a class="external-link" href="http://blog.reverberate.org/2012/01/state-of-hash-functions-2012.html" rel="nofollow">State of the hash functions, 2012</a></li>
<li><a href="https://web.archive.org/web/20120615165357/http://home.comcast.net/~bretm/hash/">Hash Function</a>
<ul>
<li>해쉬 함수 총정리 (강력 추천)</li>
</ul>
</li>
</ul>
<h2 id="Hashing-SWHashFunctions">SW-based Implementations</h2>
<ul>
<li><a class="external-link" href="http://www.cse.yorku.ca/~oz/hash.html" rel="nofollow">http://www.cse.yorku.ca/~oz/hash.html</a>
<ul>
<li>단순한 해쉬 함수들 구현 소개 (바로 쓸 수 있는 코드들)</li>
</ul>
</li>
<li><a class="external-link" href="http://stackoverflow.com/questions/17645167/implementing-sse-4-2s-crc32c-in-software" rel="nofollow">Implementing SSE 4.2&#8217;s CRC32C in software</a>
<ul>
<li>SW 기반 HW 기반 코드 소개</li>
</ul>
</li>
<li><a class="external-link" href="http://www.strchr.com/crc32_popcnt" rel="nofollow">Benchmarking CRC32 and PopCnt instructions</a></li>
<li><a class="external-link" href="http://burtleburtle.net/bob/hash/doobs.html" rel="nofollow">The Hash</a> &#8211; 각종 hash 함수 소개 및 성능 평가</li>
<li><a class="external-link" href="https://sites.google.com/site/murmurhash/" rel="nofollow">MurmurHash</a> &#8211; 최근 가장 빠른 성능의 해쉬함수 중 하나로 평가되고 있는 Murmur의 원구현 소스 (코드 읽기 쉬워 포팅 쉬움)</li>
<li><a href="https://github.com/Cyan4973/xxHash">xxHash</a> &#8211; 현재 가장 빠르다고 주장되고 있는 해쉬 함수 구현</li>
</ul>
<h2 id="Hashing-HW-basedImplementations">HW-based Implementations</h2>
<ul>
<li><a class="external-link" href="http://stackoverflow.com/questions/15752770/mm-crc32-u64-poorly-defined" rel="nofollow">_mm_crc32_u64 poorly defined</a>
<ul>
<li>SSE4.2 제공 crc32 hashing 용례</li>
</ul>
</li>
<li><a class="external-link" href="http://byteworm.com/2010/10/13/crc32/" rel="nofollow">SSE4.2 and the new CRC32 instruction</a></li>
<li><a class="external-link" href="http://home.ustc.edu.cn/~shengjie/REFERENCE/sse4_instruction_set.pdf" rel="nofollow">http://home.ustc.edu.cn/~shengjie/REFERENCE/sse4_instruction_set.pdf</a>
<ul>
<li>SSE4 instruction set reference</li>
</ul>
</li>
<li><a class="external-link" href="http://www.drdobbs.com/parallel/fast-parallelized-crc-computation-using/229401411" rel="nofollow">Fast, Parallelized CRC Computation Using the Nehalem CRC32 Instruction</a></li>
<li><a class="external-link" href="https://software.intel.com/en-us/articles/intel-sha-extensions" rel="nofollow">Intel® SHA Extensions</a></li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/05/25/hash-function-implementations/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>데이터베이스 시스템의 주제별 기초 논문들</title>
		<link>https://diveintodata.org/2015/05/25/database-system-foundation-reading-list/</link>
				<comments>https://diveintodata.org/2015/05/25/database-system-foundation-reading-list/#respond</comments>
				<pubDate>Mon, 25 May 2015 10:34:09 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Research]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[paper]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1440</guid>
				<description><![CDATA[데이터베이스 시스템 이라는 큰 주제 아래 각 세부 주제에 대한 기초 논문 목록 들이다. 한참 학교에서 공부하던 시절에 정리하고 틈틈히 업데이트 했던 것 같다. 추후에 data processing이나 column store에 대한 논문들도 공유하도록 하겠다. 데이터베이스 분야는 일반적으로 순수한 알고리즘이나 자료구조 부터 다양한 응용 문제나 이론까지 아주 광범히 하다. 말 자체는 &#8216;데이터베이스&#8217;라서 약간은 고리타분해 보이기도 하지만 데이터에 대해 일반화 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p><strong><span style="text-decoration:underline;">데이터베이스 시스템</span></strong> 이라는 큰 주제 아래 각 세부 주제에 대한 <strong><span style="text-decoration:underline;">기초</span></strong> 논문 목록 들이다. 한참 학교에서 공부하던 시절에 정리하고 틈틈히 업데이트 했던 것 같다. 추후에 data processing이나 column store에 대한 논문들도 공유하도록 하겠다.</p>
<p>데이터베이스 분야는 일반적으로 순수한 알고리즘이나 자료구조 부터 다양한 응용 문제나 이론까지 아주 광범히 하다. 말 자체는 &#8216;데이터베이스&#8217;라서 약간은 고리타분해 보이기도 하지만 데이터에 대해 일반화 가능한 모든 연구라고 봐도 무방할 만큼 해당 학계에서 다양한 연구를 다룬다. 최근 큰 인기를 얻고 있는 하둡이나 분산 데이터처리 역시 데이터베이스 분야에서 활발히 다루어지고 있다. 마이닝의 많은 연구들 또한 이 분야에서 다루어진다. 제목에서 언급한 &#8216;데이터베이스 시스템&#8217;이라고 하면 일반적으로 시스템 구현기술과 이론에 해당되는 내용을 말한다.</p>
<p>개인적으로 해당 분야나 문제를 접할 때 그 문제에 대한 가장 초기 논문들은 꼭 읽어보려고 노력한다. 그 이유는 그 논문들이 그 문제에 대해 가장 깊은 통찰력과 고민들을 많이 담고 있기 때문이며 후대의 논문들 일수록 초기 논문들이 한 고민이나 통찰은 기본적인 전제로 사용되고 문제 풀이 아이디어 위주로 기술되기 때문이다. 그래서 아래 리스트는 각 분야의 초기 논문들 및 전체를 정리하는 논문들 위주로 리스팅이 되어 있다.</p>
<p>주제별로 중요한 논문을 다 담긴 것은 아니다. 주로 내가 관심 있었던 것들 위주이다. 또한 See Also에는 대학들의 좋은 커리큘럼이나 읽어볼만한 주제별 논문에 대해 정리한 리스트의 링크를 담고 있다. 그리고 그 동안은 개인적인 위키에 업데이트를 했었는데 앞으로는 이곳에서 업데이트를 하도록 하겠다.</p>
<hr />
<h1 id="RelationalDatabaseFoundations-RelationalDatabaseFoundations">History</h1>
<ul>
<li>M. Stonebraker and J. M. Hellerstein, “What Goes Around, Comes Around,” in Readings in Database Systems, 2005, pp. 2-41.</li>
<li>J. M. Hellerstein and M. Stonebraker, “Anatomy of a Database System,” in Readings in Database Systems, 2005, pp. 42-95.</li>
<li>Thomas Haigh, <a class="external-link" href="http://wp.sigmod.org/?p=688" rel="nofollow">Fifty Years of Databases</a>, <a class="external-link" href="http://wp.sigmod.org/?page_id=52" rel="nofollow">ACM SIGMOD Blog</a>, 2012.</li>
</ul>
<h2 id="RelationalDatabaseFoundations-Architecture">Architecture</h2>
<ul>
<li>M. M. ASTRAHAN et al., System R: relational approach to database management, ACM TODS, 1976.</li>
<li>Donald D. Chamberlin et al., A History and Evaluation of System R, Communications of the ACM, 1981.</li>
<li>Michael Stonebraker et al., The Design and Implementation of Ingres, ACM TODS, 1976.</li>
<li>Joseph M. Hellerstein, Michael Stonebraker, and James Hamilton, Architecture of a Database System, Foundations and Trends in Databases, 2007.</li>
</ul>
<h2 id="RelationalDatabaseFoundations-QueryProcessing">Query Processing</h2>
<ul>
<li>Leonard D. <span class="GINGER_SOFTWARE_mark">et</span> al., <a class="external-link" href="http://dl.acm.org/citation.cfm?id=6315" rel="nofollow">Join processing in database systems with large main memories</a>, ACM TODS, 1986.</li>
<li>D. J. DeWitt and Jim Gray, <a class="external-link" href="http://pages.cs.wisc.edu/~dewitt/includes/paralleldb/cacm.pdf" rel="nofollow">Parallel Database Systems: The Future of High Performance Database Processing</a>, CACM 1992.</li>
<li>Chris Nyberg et al., AlphaSort: a cache-sensitive parallel external sort, VLDB Journal, 1995.</li>
<li>Goetz Graefe, Encapsulation of Parallelism in the Volcano Query Processing System, ACM SIGMOD, 1990.</li>
<li>Lothar F. <span class="GINGER_SOFTWARE_mark">Mackert</span> et al., R* Optimizer Validation and Performance Evaluation for Distributed Queries, VLDB Conf, 1986.</li>
</ul>
<h2 id="RelationalDatabaseFoundations-AccessMethod">Access Method</h2>
<ul>
<li>P. Griffiths Selinger et al., Access Path Selection in a Relational Database Management System, ACM SIGMOD, 1979.</li>
<li>Jim Gray et al., The Five-Minute Rule Ten Years Later, and Other Computer Storage Rules of Thumb, ACM SIGMOD Record, 1997.</li>
</ul>
<h2 id="RelationalDatabaseFoundations-TransactionManagement">Transaction Management</h2>
<h3 id="RelationalDatabaseFoundations-Logging">Logging</h3>
<ul>
<li>C. Mohan et al., ARIES: A Transaction Recovery Method Supporting Fine-Granularity Locking and Partial Rollbacks Using Write-ahead Logging, ACM TODS, 1987.</li>
<li>C. Mohan, Repeating History Beyond ARIES, VLDB Conf, 1999.</li>
<li>Russel Sears et al<span class="GINGER_SOFTWARE_mark">,,</span> Segment-Based Recovery: Write-ahead logging revisited, PVLDB, 2009.</li>
<li>Philip L. Lehman et al., Efficient Locking for Concurrent Operations on B-Trees, ACM TODS, 1981.</li>
</ul>
<h3 id="RelationalDatabaseFoundations-ConcurrencyControl">Concurrency Control</h3>
<ul>
<li>Jim Gray et al., Granularity of Locks and Degrees of Consistency in a Shared Data Base, Readings in database systems, 1976.</li>
<li>Concurrency Control in Database Systems, ACM Computing Survey, 1981.</li>
<li>H. T. Kung, On optimistic methods for concurrency control, ACM TODS, 1981.</li>
<li>Rakesh Agrawal et al., Concurrency Control Performance Modeling: Alternatives and Implications, ACM TODS, 1987.</li>
<li>C. Mohan et al., Transaction Management in the R* Distributed Database Management System, ACM TODS, 1986.
<ul>
<li>Two Phase Commit</li>
</ul>
</li>
</ul>
<h2 id="RelationalDatabaseFoundations-DataWarehouse">Data Warehouse</h2>
<ul>
<li>Surajit Chaudhuri and Umeshwar Dayal., An Overview of Data Warehousing and OLAP Technology, ACM SIGMOD Record, 1997.</li>
<li>Patrick O&#8217;Neil and Dallan Quass, Improved Query Performance with Variant Indexes, ACM SIGMOD, 1997.</li>
<li>Jim Gray et al., Data Cube: A Relational Aggregation Operator Generalizing Group-by, Cross-Tab, and Sub Totals, Data Mining and Knowledge Discovery, 1997.</li>
<li><span class="GINGER_SOFTWARE_mark">Yihong</span> Zhao et al., An Array-Based Algorithm for Simultaneous Multidimensional Aggregates, ACM SIGMOD, 1997.</li>
<li>C. Mohan and Inderpal Narang, Algorithms for creating indexes for very large tables without <span class="GINGER_SOFTWARE_mark">quiescing</span> updates, ACM SIGMOD, 1992.</li>
</ul>
<h2 id="RelationalDatabaseFoundations-SeeAlso">See Also</h2>
<ul>
<li><a class="external-link" href="http://www.eecs.berkeley.edu/~brewer/cs262/" rel="nofollow">CS262a: Advanced Topics in Computer Systems</a>, EECS Berkeley</li>
<li>Michael Stonebraker et al., <a class="external-link" href="http://www.amazon.com/Readings-Database-Systems-Joseph-Hellerstein/dp/0262693143/ref=sr_1_1?ie=UTF8&amp;qid=1323597451&amp;sr=8-1" rel="nofollow">Readings in Database Systems</a> (<a class="external-link" href="http://redbook.cs.berkeley.edu/redbook3/lecs.html" rel="nofollow">Lecture Notes</a>, <a class="external-link" href="http://redbook.cs.berkeley.edu/bib4.html" rel="nofollow">List of papers</a>)</li>
<li><a class="external-link" href="http://www.itu.dk/people/pagh/DBT07/" rel="nofollow">Database Tuning, Spring 2007</a></li>
<li><a class="external-link" href="http://www.spatial.cs.umn.edu/Courses/Spring11/5708/" rel="nofollow">CSci 5708<span class="GINGER_SOFTWARE_mark"> :</span> Architecture and Implementation of Database Management Systems, Spring 2011</a></li>
<li><a class="external-link" href="http://www-2.cs.cmu.edu/afs/cs/academic/class/15721-f01/www/readings.html" rel="nofollow">http://www-2.cs.cmu.edu/afs/cs/academic/class/15721-f01/www/readings.html</a></li>
<li><a class="external-link" href="http://www.cs.umd.edu/class/spring2007/cmsc724/" rel="nofollow">CMSC724: Database Management Systems, Spring 2007</a> (<a class="external-link" href="http://www.cs.umd.edu/class/spring2007/cmsc724/" rel="nofollow">Presentation Material</a>)</li>
<li><a class="external-link" href="http://rxin.github.com/db-readings/" rel="nofollow">Readings in Databases</a></li>
<li><a class="external-link" href="http://db.inf.uni-tuebingen.de/teaching/ws0910/db2" rel="nofollow">Lecture &#8211; Datenbanksysteme II</a></li>
<li><a class="external-link" href="http://db.inf.uni-tuebingen.de/teaching/ws1011/db2" rel="nofollow">Lecture &#8211; Datenbanksysteme II (INF 4141)</a></li>
<li><a class="external-link" href="http://www.cs.albany.edu/~jhh/courses/2013S.445.660/Site/Readings.html" rel="nofollow">CSI 445/660. Topics in Data Management Systems, Albany CSI</a></li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/05/25/database-system-foundation-reading-list/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>글쓰기 자동 공유 해제</title>
		<link>https://diveintodata.org/2015/05/24/%ea%b8%80%ec%93%b0%ea%b8%b0-%ec%9e%90%eb%8f%99-%ea%b3%b5%ec%9c%a0-%ed%95%b4%ec%a0%9c/</link>
				<comments>https://diveintodata.org/2015/05/24/%ea%b8%80%ec%93%b0%ea%b8%b0-%ec%9e%90%eb%8f%99-%ea%b3%b5%ec%9c%a0-%ed%95%b4%ec%a0%9c/#respond</comments>
				<pubDate>Sun, 24 May 2015 09:23:13 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[Life]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1443</guid>
				<description><![CDATA[가만 보니 워드프레스에 글을 쓰다말아 Draft로 표시된 글만 50여개이다. 초반에 글을 잘 쓰다가 다듬는 중에 나 스스로도 만족 못해서 완성을 못한 글들이 50여개 인데&#8230; 내 성격을 보여주는 단면인 것 같아서 씁쓸하기도 하다. 글 쓰긴 뿐만 아니라 다른 것들에서도 눈만 높은데 반해 내 실력이 막상 따라주지 못해 만족하지 못해 내놓지 못한 일들이 많다. 사실 Tajo 같은 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>가만 보니 워드프레스에 글을 쓰다말아 Draft로 표시된 글만 50여개이다. 초반에 글을 잘 쓰다가 다듬는 중에 나 스스로도 만족 못해서 완성을 못한 글들이 50여개 인데&#8230; 내 성격을 보여주는 단면인 것 같아서 씁쓸하기도 하다. 글 쓰긴 뿐만 아니라 다른 것들에서도 눈만 높은데 반해 내 실력이 막상 따라주지 못해 만족하지 못해 내놓지 못한 일들이 많다. 사실 Tajo 같은 경우도 어쩌다 보니 공유해달라는 요청을 받아 공유했다가 여기까지 오게된 케이스 인데 그 당시에도 부끄러움에 공유를 망설였던 기억이 있다.</p>
<p>그런데 글을 꾸준히 쓰고 싶은 의욕은 항상 있어왔다. 혼자 정리한 내용도 꽤 많고 지금도 꾸준히 뭔가를 배우거나 개발을 하는 중이라 공유하고 싶은 것도 많다. 순간순간 느끼는 교훈이나 배운 것들은 나중에 내가 다시 보기 위해 기록하고 싶다. 일단은 그 부담을 줄여보고자 기본적으로 트위터나 페이스북을 통해 공유되는 기능을 꺼보았다. 아무래도 SNS를 통해 지인들에게 공유되는 것 보다는 필요에 따라 검색으로 들어오는 분들만 본다면 부담이 덜할 것 같다는 생각이다.</p>
<p>그럼에도 불구하고 잘 모르겠다. 꾸준히 기록해 나갈 수 있을지는.. 한번 노력해볼란다.</p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/05/24/%ea%b8%80%ec%93%b0%ea%b8%b0-%ec%9e%90%eb%8f%99-%ea%b3%b5%ec%9c%a0-%ed%95%b4%ec%a0%9c/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>아파치 타조 (Apache Tajo) 한글 문서 프로젝트 리소스 및 진행 공유</title>
		<link>https://diveintodata.org/2015/01/01/%ec%95%84%ed%8c%8c%ec%b9%98-%ed%83%80%ec%a1%b0-apache-tajo-%ed%95%9c%ea%b8%80-%eb%ac%b8%ec%84%9c-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8-%eb%a6%ac%ec%86%8c%ec%8a%a4-%eb%b0%8f-%ec%a7%84%ed%96%89/</link>
				<comments>https://diveintodata.org/2015/01/01/%ec%95%84%ed%8c%8c%ec%b9%98-%ed%83%80%ec%a1%b0-apache-tajo-%ed%95%9c%ea%b8%80-%eb%ac%b8%ec%84%9c-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8-%eb%a6%ac%ec%86%8c%ec%8a%a4-%eb%b0%8f-%ec%a7%84%ed%96%89/#respond</comments>
				<pubDate>Thu, 01 Jan 2015 04:14:42 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[FOSS]]></category>
		<category><![CDATA[Tajo]]></category>
		<category><![CDATA[apache]]></category>
		<category><![CDATA[Apache Tajo]]></category>
		<category><![CDATA[documentation]]></category>
		<category><![CDATA[문서화]]></category>
		<category><![CDATA[아파치 타조]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1420</guid>
				<description><![CDATA[지난 블로그 포스트 Tajo 한글 프로젝트 프로젝트를 시작에 대해 공유를 했습니다. 이 포스트에서는 짧았지만 몇 일간의 진행과 프로젝트 리소스 정보들을 공유합니다. 프로젝트 리소스 정보는 아래와 같습니다. 기본 웹 페이지 &#8211; http://hyunsik.github.io/tajo-doc-kr/ 두 페이지가 번역된 초안 &#8211; http://hyunsik.github.io/tajo-doc-kr/docs/0.10.0/ 이슈 트래커 &#8211; https://github.com/hyunsik/tajo-doc-kr/issues 공헌 방법 &#8211; https://github.com/hyunsik/tajo-doc-kr/wiki/HowToContribute 현재까지 번역된 페이지는 아래와 같습니다. Tajo 소개 페이지는 남윤민님이 번역해주셨습니다. [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>지난 블로그 포스트 Tajo 한글 프로젝트 프로젝트를 시작에 대해 공유를 했습니다. 이 포스트에서는 짧았지만 몇 일간의 진행과 프로젝트 리소스 정보들을 공유합니다.</p>
<p>프로젝트 리소스 정보는 아래와 같습니다.</p>
<ul>
<li>기본 웹 페이지 &#8211; <a href="http://hyunsik.github.io/tajo-doc-kr/" target="_blank">http://hyunsik.github.io/tajo-doc-kr/</a></li>
<li>두 페이지가 번역된 초안 &#8211; <a href="http://hyunsik.github.io/tajo-doc-kr/docs/0.10.0/" target="_blank">http://hyunsik.github.io/tajo-doc-kr/docs/0.10.0/</a></li>
<li>이슈 트래커 &#8211; <a href="https://github.com/hyunsik/tajo-doc-kr/issues" target="_blank">https://github.com/hyunsik/tajo-doc-kr/issues</a></li>
<li>공헌 방법 &#8211; <a href="https://github.com/hyunsik/tajo-doc-kr/wiki/HowToContribute" target="_blank">https://github.com/hyunsik/tajo-doc-kr/wiki/HowToContribute</a></li>
</ul>
<p>현재까지 번역된 페이지는 아래와 같습니다.</p>
<ul>
<li><a href="http://hyunsik.github.io/tajo-doc-kr/docs/0.10.0/introduction.html">Tajo 소개 페이지</a>는 남윤민님이 번역해주셨습니다.</li>
<li><a href="http://hyunsik.github.io/tajo-doc-kr/docs/0.10.0/time_zone.html">타임존</a> 페이지는 제가 번역을 했습니다.</li>
<li><a href="http://hyunsik.github.io/tajo-doc-kr/docs/0.10.0/getting_started.html">Tajo 시작하기</a> 페이지를 장정식님이 번역해주셨습니다.</li>
</ul>
<p>또한 현재 SQL 섹션을 남윤민 님이 님이 번역 진행 중이십니다.</p>
<p>사실 Tajo 문서의 양이 그렇게 많지가 않습니다. 그리고 주요 Tajo 개발자들이 한국인이다 보니 아무래도 영문 작성 보다는 한글 작성이 더 쉬운 면이 있습니다. 그래서 문서 추가를 우선 한글로 하고 한글에서 영문으로 번역하는 작업도 고민하고 있습니다. 꾸준히 진행되면 영문과 한글 문서 모두 풍성해지라 기대합니다.</p>
<p><strong>Update</strong></p>
<ul>
<li>1월 1일 오후 5시에 번역된 페이지 목록 수정</li>
</ul>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2015/01/01/%ec%95%84%ed%8c%8c%ec%b9%98-%ed%83%80%ec%a1%b0-apache-tajo-%ed%95%9c%ea%b8%80-%eb%ac%b8%ec%84%9c-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8-%eb%a6%ac%ec%86%8c%ec%8a%a4-%eb%b0%8f-%ec%a7%84%ed%96%89/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:thumbnail url="https://diveintodata.files.wordpress.com/2014/12/tajo.png" />
		<media:content url="https://diveintodata.files.wordpress.com/2014/12/tajo.png" medium="image">
			<media:title type="html">Tajo</media:title>
		</media:content>

		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
		<item>
		<title>아파치 타조 (Apache Tajo)의 한글 문서화 프로젝트를 시작합니다.</title>
		<link>https://diveintodata.org/2014/12/31/apache-tajo%ec%9d%98-%ed%95%9c%ea%b8%80-%eb%ac%b8%ec%84%9c%ed%99%94-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8%eb%a5%bc-%ec%8b%9c%ec%9e%91%ed%95%a9%eb%8b%88%eb%8b%a4/</link>
				<comments>https://diveintodata.org/2014/12/31/apache-tajo%ec%9d%98-%ed%95%9c%ea%b8%80-%eb%ac%b8%ec%84%9c%ed%99%94-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8%eb%a5%bc-%ec%8b%9c%ec%9e%91%ed%95%a9%eb%8b%88%eb%8b%a4/#comments</comments>
				<pubDate>Tue, 30 Dec 2014 15:20:46 +0000</pubDate>
		<dc:creator><![CDATA[Hyunsik Choi]]></dc:creator>
				<category><![CDATA[FOSS]]></category>
		<category><![CDATA[Tajo]]></category>
		<category><![CDATA[Apache Tajo]]></category>
		<category><![CDATA[documentation]]></category>
		<category><![CDATA[메뉴얼]]></category>
		<category><![CDATA[문서화]]></category>
		<category><![CDATA[타조]]></category>
		<category><![CDATA[아파치 타조]]></category>

		<guid isPermaLink="false">http://diveintodata.org/?p=1416</guid>
				<description><![CDATA[Tajo를 더 보급해보려는 노력으로 Apache Tajo의 한글 문서화 프로젝트를 시작하려고 합니다. 자세한 내용은 아래 링크를 참고 하세요. https://github.com/hyunsik/tajo-doc-kr 일단은 번역으로 시작하지만 잘 작성된 내용은 upstream에 반영하려고 합니다. 막 github 저장소를 만들고 아직 번역된 내용은 없습니다만 꾸준히 해보려고 합니다. 관심 있으신 분들은 메일이나 메시지를 주시구요.]]></description>
								<content:encoded><![CDATA[<p>Tajo를 더 보급해보려는 노력으로 Apache Tajo의 한글 문서화 프로젝트를 시작하려고 합니다. 자세한 내용은 아래 링크를 참고 하세요.</p>
<p><a href="https://github.com/hyunsik/tajo-doc-kr" rel="nofollow">https://github.com/hyunsik/tajo-doc-kr</a></p>
<p>일단은 번역으로 시작하지만 잘 작성된 내용은 upstream에 반영하려고 합니다.</p>
<p>막 github 저장소를 만들고 아직 번역된 내용은 없습니다만 꾸준히 해보려고 합니다. 관심 있으신 분들은 메일이나 메시지를 주시구요.</p>
]]></content:encoded>
							<wfw:commentRss>https://diveintodata.org/2014/12/31/apache-tajo%ec%9d%98-%ed%95%9c%ea%b8%80-%eb%ac%b8%ec%84%9c%ed%99%94-%ed%94%84%eb%a1%9c%ec%a0%9d%ed%8a%b8%eb%a5%bc-%ec%8b%9c%ec%9e%91%ed%95%a9%eb%8b%88%eb%8b%a4/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						
		<media:thumbnail url="https://diveintodata.files.wordpress.com/2014/12/tajo.png" />
		<media:content url="https://diveintodata.files.wordpress.com/2014/12/tajo.png" medium="image">
			<media:title type="html">Tajo</media:title>
		</media:content>

		<media:content url="https://1.gravatar.com/avatar/4213567e11cad51fc02bc2038e9ace27?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">Hyunsik Choi</media:title>
		</media:content>
	</item>
	</channel>
</rss>
