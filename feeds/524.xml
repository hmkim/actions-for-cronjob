<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>안승규(Ahn Seungkyu)의 블로그 (Stay hungry, stay foolish)</title>
<link>https://ahnseungkyu.com/</link>
<description>Kubernetes, OpenStack, Linux, Programming and so on</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 02:00:24 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>seungkyua@gmail.com</managingEditor>
<image>
<title>안승규(Ahn Seungkyu)의 블로그 (Stay hungry, stay foolish)</title>
<url>http://cfile9.uf.tistory.com/image/277A994B5306DAC5277652</url>
<link>https://ahnseungkyu.com</link>
<description>Kubernetes, OpenStack, Linux, Programming and so on</description>
</image>
<item>
<title>Ingress Controller 에서 subpath 사용</title>
<link>https://ahnseungkyu.com/257</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;Ingress Controller 를 사용하여 같은 도메인에서 subpath 로 웹서비스를 분리하는 방법은 각 서비스마다 Ingress 를 만들고, '/' path 는 무조건 포함시키는 방법입니다. 한가지 단점은 root path '/' 는 처음 만든 Ingress 가 먼저 선점하게 됩니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;물론 이 방법은 '/' 가 경로가 반드시 필요한 서비스가 2개 이상이면 적용할 수 없지만 그런 경우는 없다고 가정합니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;예를 들어 Jupyterlab 은 '/' 경로를 반드시 필요로 합니다. '/jupyter' 를 호출할 때 jupyterlab 이 호출되게 Ingress 의 subpath 를 지정하려면 다음과 같이 작성하면 됩니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre id=&quot;code_1555322308675&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: jupyterlab
  namespace: jupyterlab
spec:
  rules:
  - host: jupyterlab.myserver
    http:
      paths:
      - backend:
          serviceName: jupyterlab
          servicePort: 80
        path: /jupyter
  - host: jupyterlab.myserver
    http:
      paths:
      - backend:
          serviceName: jupyterlab
          servicePort: 80
        path: /&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이렇게 하면 '&lt;span style=&quot;color: #333333;&quot;&gt;http://&lt;/span&gt;jupyterlab.myserver/jupyter' 가 호출되거나 'http://jupyterlab.myserver/' 가 호출되어도 jupyterlab 이 잘 연결됩니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;여기에 '/echoserver' 를 subpath 로 연결되게 추가하고 싶으면 새로운 Ingress 를 만들면 됩니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555322551892&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: echoserver
  namespace: jupyterlab
spec:
  rules:
  - host: jupyterlab.myserver
    http:
      paths:
      - backend:
          serviceName: clusterip
          servicePort: 80
        path: /echoserver
  - host: jupyterlab.myserver
    http:
      paths:
      - backend:
          serviceName: clusterip
          servicePort: 80
        path: /&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;여기서 두번째에 들어가 '/' 는 소용이 없습니다. Nginx 에서는 처음 입력된 순서에 의해서 location 이 결정되기 때문에 'http://jupyterlab.myserver/' 를 호출하면 첫번째 생성한 jupyterlab ingress 가 적용되기 때문입니다.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/257&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>Ingress Controller subpath</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/257</guid>
<comments>https://ahnseungkyu.com/257#entry257comment</comments>
<pubDate>Mon, 15 Apr 2019 19:06:56 +0900</pubDate>
</item>
<item>
<title>Ingress Controller 에서 original source client ip 확인</title>
<link>https://ahnseungkyu.com/256</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;웹서비스를 인터넷에 노출시키기 위해서는 Cloud Provider 가 제공하는 Load Balancer 나 On-Prem 에서 Load Balancer 나 Ingress Controller 를 사용해야 합니다. Ingress Controller 를 사용할 때 원래의 Client IP 를 확인하는 방법은 다음과 같습니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;여기서 사용하는 Ingress Controller 와 Pod 의 Web Server 는 Nginx 를 사용했습니다.&lt;/p&gt;
&lt;h3&gt;1. [ 인터넷 ] ---&amp;gt; [ Ingress Controller ] ---&amp;gt; [ Pod (Web Server) ]&lt;/h3&gt;
&lt;p&gt;가장 기본적인 방법으로 추가 세팅없이도 바로 original client ip 를 알 수 있습니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Ingress Controller 를 설치하기 위해 node label 을 세팅합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555292234504&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ kubectl label --overwrite node k1-node01 node-role.kubernetes.io/ingress=true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;그리고 아래의 Ingress Controller yaml 로 설치합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555292307168&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ vi nginx-controller.yaml

apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
data:
  enable-underscores-in-headers: &quot;true&quot;

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - &quot;&quot;
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - &quot;&quot;
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - &quot;&quot;
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - &quot;extensions&quot;
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - &quot;&quot;
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - &quot;extensions&quot;
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - &quot;&quot;
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - &quot;&quot;
    resources:
      - configmaps
    resourceNames:
      # Defaults to &quot;&amp;lt;election-id&amp;gt;-&amp;lt;ingress-class&amp;gt;&quot;
      # Here: &quot;&amp;lt;ingress-controller-leader&amp;gt;-&amp;lt;nginx&amp;gt;&quot;
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - &quot;ingress-controller-leader-nginx&quot;
    verbs:
      - get
      - update
  - apiGroups:
      - &quot;&quot;
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - &quot;&quot;
    resources:
      - endpoints
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: ingress-nginx

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: ingress-nginx

---

apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: &quot;10254&quot;
        prometheus.io/scrape: &quot;true&quot;
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/ingress: &quot;true&quot;
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.0
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -&amp;gt; 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ingress Controller 가 설치 되었으면 echoserver 로 Pod 에서 어떻게 Client IP 를 받는지 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;echoserver 소스 :&amp;nbsp; &lt;a href=&quot;https://kubernetes.io/docs/tutorials/services/source-ip/&quot;&gt;https://kubernetes.io/docs/tutorials/services/source-ip/&lt;/a&gt;&lt;/p&gt;
&lt;figure id=&quot;og_1555292393410&quot; contenteditable=&quot;false&quot; data-ke-type=&quot;opengraph&quot;&gt;&lt;a href=&quot;https://kubernetes.io/docs/tutorials/services/source-ip/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-original-url=&quot;https://kubernetes.io/docs/tutorials/services/source-ip/&quot;&gt;
&lt;div class=&quot;og-image&quot; style=&quot;background-image: url('https://scrap.kakaocdn.net/dn/dbO2oM/hyAKyT98yz/KurBJpKxKf5LsTW14ORFqK/img.png?width=1727&amp;amp;height=373&amp;amp;face=0_0_1727_373');&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;og-text&quot;&gt;
&lt;p class=&quot;og-title&quot;&gt;Using Source IP&lt;/p&gt;
&lt;p class=&quot;og-desc&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p class=&quot;og-host&quot;&gt;kubernetes.io&lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/figure&gt;
&lt;pre id=&quot;code_1555292435487&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ kubectl create ns echoserver

$ vi echoserver.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: source-ip-app
  namespace: echoserver
  labels:
    run: source-ip-app
spec:
  replicas: 1
  selector:
    matchLabels:
      run: source-ip-app
  template:
    metadata:
      labels:
        run: source-ip-app
    spec:
      containers:
      - image: k8s.gcr.io/echoserver:1.4
        name: source-ip-app&lt;/code&gt;&lt;/pre&gt;
&lt;pre id=&quot;code_1555292460338&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ vi echoserver-service.yaml

apiVersion: v1
kind: Service
metadata:
  name: clusterip
  namespace: echoserver
  labels:
    run: source-ip-app
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    run: source-ip-app
  type: ClusterIP&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;echoserver 는 nginx 서버이며 head 의 값을 출력하는 로직을 가지고 있습니다.&lt;/p&gt;
&lt;p&gt;busybox 로 echoserver 출력 내용을 확인해 보겠습니다. 그러기 위해서 먼저,&amp;nbsp;echoserver 의 service ip 를 확인한 후 curl 로 http request 를 호출해 봅니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555292620078&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ kubectl get svc -n echoserver 
NAME        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
clusterip   ClusterIP   10.233.35.118   &amp;lt;none&amp;gt;        80/TCP    66s&lt;/code&gt;&lt;/pre&gt;
&lt;pre id=&quot;code_1555292642421&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl run busybox -it --image=busybox --restart=Never --rm -n echoserver

If you don't see a command prompt, try pressing enter.
/ # ip addr
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
2: tunl0@NONE: &amp;lt;NOARP&amp;gt; mtu 1480 qdisc noop qlen 1
    link/ipip 0.0.0.0 brd 0.0.0.0
3: gre0@NONE: &amp;lt;NOARP&amp;gt; mtu 1476 qdisc noop qlen 1
    link/gre 0.0.0.0 brd 0.0.0.0
4: gretap0@NONE: &amp;lt;BROADCAST,MULTICAST&amp;gt; mtu 1462 qdisc noop qlen 1000
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff
6: eth0@if404: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&amp;gt; mtu 1500 qdisc noqueue 
    link/ether 5e:8e:b0:19:be:56 brd ff:ff:ff:ff:ff:ff
    inet 10.233.125.19/32 scope global eth0
       valid_lft forever preferred_lft forever

/ # wget -qO - 10.233.35.118
CLIENT VALUES:
client_address=10.233.125.19
command=GET
real path=/
query=nil
request_version=1.1
request_uri=http://10.233.35.118:8080/

SERVER VALUES:
server_version=nginx: 1.10.0 - lua: 10001

HEADERS RECEIVED:
connection=close
host=10.233.35.118
user-agent=Wget
BODY:
-no body in request-&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pod 에서 service 를 통해 web server 를 호출하면 client_address 에 client ip 가 제대로 출력됩니다. 그러나, Ingress Controller 호출하는 경우에는 다음과 같습니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Ingress Controller 는 k1-node01 (192.168.30.12) 에 떠있고, k1-node05 (192.168.30.20) 에서 echoserver 를 호출해 보겠습니다.&lt;/p&gt;
&lt;p&gt;echoserver 를 위한 Ingress 를 생성합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555292876111&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ vi echoserver-ingress.yaml 

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: echoserver
  namespace: echoserver
spec:
  rules:
  - host: echoserver.ip
    http:
      paths:
      - backend:
          serviceName: clusterip
          servicePort: 80
        path: /&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;k1-node05 서버에서 echoserver.ip 도메인을 hosts 파일에 등록하고, echoserver 를 호출합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555292934766&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;$ cat /etc/hosts
192.168.30.12    k1-node01    echoserver.ip
192.168.30.20    k1-node05



$ curl -X GET echoserver.ip -H 'Host: echoserver.ip'
CLIENT VALUES:
client_address=192.168.30.12
command=GET
real path=/
query=nil
request_version=1.1
request_uri=http://echoserver.ip:8080/

SERVER VALUES:
server_version=nginx: 1.10.0 - lua: 10001

HEADERS RECEIVED:
accept=*/*
host=echoserver.ip
user-agent=curl/7.47.0
x-forwarded-for=192.168.30.20
x-forwarded-host=echoserver.ip
x-forwarded-port=80
x-forwarded-proto=http
x-original-uri=/
x-real-ip=192.168.30.20
x-request-id=15b32d8bb2a8945f0dfebf3fae29c736
x-scheme=http
BODY:
-no body in request-&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;client_address 에는 Ingress Controller 가 떠있는 서버의 ip 가 들어오고, header 의 x-forwared-for 값에 original client ip 가 출력되는 것을 알 수 있습니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;실제 Ingress Controller 의 echoserver 에 대한 config 값은 다음과 같습니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555293110492&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;proxy_set_header X-Request-ID           $req_id;
proxy_set_header X-Real-IP              $the_real_ip;
             
proxy_set_header X-Forwarded-For        $the_real_ip;
             
proxy_set_header X-Forwarded-Host       $best_http_host;
proxy_set_header X-Forwarded-Port       $pass_port;
proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
             
proxy_set_header X-Original-URI         $request_uri;
             
proxy_set_header X-Scheme               $pass_access_scheme;
             
# Pass the original X-Forwarded-For
proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pod 의 nginx 에서 client ip 에 original client ip 를 출력하고 싶을 때는 pod nginx 에 다음과 같은 설정이 필요합니다. (추가 확인 필요)&lt;/p&gt;
&lt;pre id=&quot;code_1555293261977&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;set_real_ip_from  192.168.30.0/24;
real_ip_header    X-Forwarded-For;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;set_real_ip_from 은 ingress controller 가 실행될 수 있는 서버의 cidr 입니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;2. [ 인터넷 ] ---&amp;gt; [ Google or Azure LB ] ---&amp;gt; [ Pod (Web Server) ]&lt;/h3&gt;
&lt;p&gt;Cloud Provider (Google or Azure) 의 LB 를 이용하고 Service 의&amp;nbsp; LoadBalancer type 으로 웹서비스를 한다면 아래와 같이 Service 의&amp;nbsp; externalTrafficPolicy 값을 local 로 지정하면 됩니다. local 로 지정하면 LB 에서 바로 Web Server Pod 가 떠 있는 서버로만 접근되기 때문에 다른 서버를 통해서 연결될 때 client ip 가 해당 서버의 ip 로 들어가는 것을 방지해 줍니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555294710496&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;---
kind: Service
apiVersion: v1
metadata:
  name: example-service
spec:
  ports:
  - port: 8765
    targetPort: 9376
  selector:
    app: example
  type: LoadBalancer
  externalTrafficPolicy: Local&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Azure 부분은 한국 MS 의 박인혜 차장께서 알려주셨습니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;3. [ 인터넷 ] ---&amp;gt; [ AWS ELB (classic lb) ] ---&amp;gt; [ Pod (Web Server) ]&lt;/h3&gt;
&lt;p&gt;Classic LB 에 proxy protocol 을 enable 하고, Service 의 annotations 에 다음과 같이 설정합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555294885369&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# Enable PROXY protocol
service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
service.beta.kubernetes.io/aws-load-balancer-backend-protocol: 'https'
service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-west-myarn-long-entry-obfuscated-here&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;4. [ 인터넷 ] ---&amp;gt; [ AWS NLB ] ---&amp;gt; [ Ingress Controller ] ---&amp;gt; [ Pod (Web Server) ]&lt;/h3&gt;
&lt;p&gt;Ingress Controller 의 config 에 다음과 같이 설정합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555294989837&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;use-proxy-protocol: &quot;true&quot;
real-ip-header: &quot;proxy_protocol&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;AWS NLB 의 각 타겟 그룹에&amp;nbsp;Proxy Protocol V2 를 설정한 후,&amp;nbsp; Ingress Controller 의 Service annotations 에 다음과 같이 설정합니다.&lt;/p&gt;
&lt;pre id=&quot;code_1555295059679&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# by default the type is elb (classic load balancer).
service.beta.kubernetes.io/aws-load-balancer-type: nlb
# Enable PROXY protocol
service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: &quot;*&quot;
service.beta.kubernetes.io/aws-load-balancer-backend-protocol: 'tcp'&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;※ AWS 와 Google 의 경우에는 테스트 해보지 못했습니다.&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/256&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>Cloud Provider Load Balancer</category>
<category>Ingress Controller Original Client IP</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/256</guid>
<comments>https://ahnseungkyu.com/256#entry256comment</comments>
<pubDate>Mon, 15 Apr 2019 11:29:56 +0900</pubDate>
</item>
<item>
<title>Ingress Controller TLS 적용</title>
<link>https://ahnseungkyu.com/255</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;Ingress Controller 를 활용한 웹서비스에 TLS 를 적용하는 방법 중 가장 쉬운 방법은 Ingress Controller 에 TLS 를 적용하는 방법입니다. 이 방법은 client 와 Ingress Controller 까지 https 로 통신하고 Ingress Controller 와 web server 와는 http 로 통신하게 됩니다.&lt;/p&gt;
&lt;p&gt;아래의 방법은 Ingress Controller 는 미리 설치되어 있다고 가정합니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;먼저, letsencrypt 로 접속하여&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;3개월간 무료로 인증서를 받는 방법을 알아봅니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;1. 필요 패키지 설치&amp;nbsp;(Ubuntu&amp;nbsp;16.04&amp;nbsp;기준)&lt;/p&gt;
&lt;pre id=&quot;code_1554702999406&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# apt-get update
# apt-get install software-properties-common
# add-apt-repository universe
# sudo add-apt-repository ppa:certbot/certbot
# sudo apt-get update
# sudo apt-get install certbot python-certbot-nginx&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2. 인증서 다운로드&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;중요한 것은 인터넷에서 해당 도메인으로 로컬 서버에 접속이 되어야 하며 (Inbound 가능) standalone 을 사용할 때 로컬에 80 포트는 unbind 되어 있어야 합니다. 아래와 같은 경우는 외부에서 &lt;a href=&quot;http://cloudnativeday.kr&quot;&gt;cloudnativeday.kr&lt;/a&gt;, &lt;a href=&quot;http://www.cloudnativeday.kr&quot;&gt;www.cloudnativeday.kr&lt;/a&gt;, test.cloudnativeday.kr 도메인이 갖는 ip address 가 내 로컬 서버여야 한다는 의미입니다. 정확히는 해당 ip address 로 외부에서 내 서버로 연결이 가능해야 합니다.&lt;/span&gt;&lt;/p&gt;
&lt;pre id=&quot;code_1554703294866&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# certbot certonly --standalone --cert-name cloudnativeday.kr -d cloudnativeday.kr,www.cloudnativeday.kr,test.cloudnativeday.kr&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;인증서 발급이 완료되면 다음과 같은 디렉토리에 인증서가 생성되어 보입니다. archive 디렉토리와 심볼릭 링크가 있는&amp;nbsp;&lt;/span&gt;live 디렉토리가 있는데 live 디렉토리를 활용합니다. 그리고,&amp;nbsp;crt 는 fullchain.pem 을, key 는 private.pem 을 사용합니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre id=&quot;code_1554703640829&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# ls -al /etc/letsencrypt/archive/cloudnativeday.kr/
total 24
drwxr-xr-x 2 root root 4096 Apr  7 21:31 .
drwx------ 3 root root 4096 Apr  7 21:31 ..
-rw-r--r-- 1 root root 1931 Apr  7 21:31 cert1.pem
-rw-r--r-- 1 root root 1647 Apr  7 21:31 chain1.pem
-rw-r--r-- 1 root root 3578 Apr  7 21:31 fullchain1.pem
-rw------- 1 root root 1704 Apr  7 21:31 privkey1.pem


# ls -al /etc/letsencrypt/live/cloudnativeday.kr/
total 12
drwxr-xr-x 2 root root 4096 Apr  7 21:31 .
drwx------ 3 root root 4096 Apr  7 21:31 ..
lrwxrwxrwx 1 root root   41 Apr  7 21:31 cert.pem -&amp;gt; ../../archive/cloudnativeday.kr/cert1.pem
lrwxrwxrwx 1 root root   42 Apr  7 21:31 chain.pem -&amp;gt; ../../archive/cloudnativeday.kr/chain1.pem
lrwxrwxrwx 1 root root   46 Apr  7 21:31 fullchain.pem -&amp;gt; ../../archive/cloudnativeday.kr/fullchain1.pem
lrwxrwxrwx 1 root root   44 Apr  7 21:31 privkey.pem -&amp;gt; ../../archive/cloudnativeday.kr/privkey1.pem
-rw-r--r-- 1 root root  692 Apr  7 21:31 README&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;인증서를 성공적으로 생성하고 나면, Ingress Controller 에서 사용하기위해서 인증서를 secret tls 타입으로 생성합니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;3. secret tls 생성&lt;/p&gt;
&lt;pre id=&quot;code_1554703984352&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl create secret tls cloudnativeday-certs --key /etc/letsencrypt/live/cloudnativeday.kr/privkey.pem --cert /etc/letsencrypt/live/cloudnativeday.kr/fullchain.pem --namespace cloudnative&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;타입은 secret tls 로 하고, key 는 private.pem 을, cert 는&amp;nbsp; fullchain.pem 을 사용합니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;4. tls ingress 생성&lt;/p&gt;
&lt;pre id=&quot;code_1554704243623&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: cloudnative-kr
  namespace: cloudnative
spec:
  tls:
  - secretName: cloudnativeday-certs
    hosts:
    - cloudnativeday.kr
    - www.cloudnativeday.kr
  rules:
  - host: cloudnativeday.kr
    http:
      paths:
      - backend:
          serviceName: nginx-cloudnative
          servicePort: 80
        path: /
  - host: www.cloudnativeday.kr
    http:
      paths:
      - backend:
          serviceName: nginx-cloudnative
          servicePort: 80
        path: /&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;http 로 들어오면 자동으로 https 로 redirect 됩니다. 왜냐하면 기본 값이 nginx.ingress.kubernetes.io/&lt;span&gt;ssl-redirect&lt;/span&gt;: &quot;true&quot; 이기 때문입니다. 일반 http 와 다른 부분은 tls 부분입니다. secret 과 인증서가 적용될 도메인명을 적으면 됩니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/255&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>Ingress Controller TLS</category>
<category>letsencrypt</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/255</guid>
<comments>https://ahnseungkyu.com/255#entry255comment</comments>
<pubDate>Mon, 08 Apr 2019 15:24:26 +0900</pubDate>
</item>
<item>
<title>Kubernetes 사용자 계정 생성과 권한 설정</title>
<link>https://ahnseungkyu.com/254</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;Kubernetes 는 RBAC 이 디폴트 접근 제어 권한으로 User account 와 RBAC 을 적절히 사용하면 효과적인 접근 제어를 할 수 있습니다.&lt;/p&gt;
&lt;p&gt;예를 들어, Kubernetes Cluster 에 접근할 수 있는 사용자 seungkyua 를 새로 만들고 해당 사용자는 seungkyua 네임스페이스에만 접근 가능하게 설정하고 싶은 경우가 있을 수 있습니다.&lt;/p&gt;
&lt;p&gt;또한 seungkyua 네임스페이스 접근 안에서도 pods, replicasets, deployments, services 만 생성, 조회, 수정, 삭제권한만 주고 싶을 때도 있습니다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;이러한 세팅은 아래와 같은 절차를 거쳐야 합니다. 물론 Kubernetes 는 RBAC 사용으로 세팅되어 있다고 가정합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;신규 namespace 생성&lt;/li&gt;
&lt;li&gt;User account 생성 (client key 와 client crt 생성)&lt;/li&gt;
&lt;li&gt;새로운 namespace 에 제한적으로 접근할 수 있는 권한 생성 (role 생성)&lt;/li&gt;
&lt;li&gt;3번의 새로운 User account 와 3 번의 role 을 연결 (rolebinding 생성)&lt;/li&gt;
&lt;li&gt;kubectl 이 사용할 새로운 config context 를 만들고 연결&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;1. 신규 naemspace 생성&lt;/h3&gt;
&lt;pre id=&quot;code_1554446425121&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl create namespace seungkyua&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;2. 새로운 User account 생성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;client private key 생성&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre id=&quot;code_1554446448070&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# openssl genrsa -out seungkyua.key 2048&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crt 생성을 위한 csr 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;pre id=&quot;code_1554446464102&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# openssl req -new -key seungkyua.key -subj &quot;/CN=seungkyua/O=Kubernetes Korea Group&quot; -out seungkyua.csr&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;client cert 파일 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;pre id=&quot;code_1554446476129&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# openssl x509 -req -in seungkyua.csr -CA /etc/kubernetes/ssl/ca.crt -CAkey /etc/kubernetes/ssl/ca.key -CAcreateserial -out seungkyua.crt -days 10000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;3. 새로운 namespace 로 접근 role 설정&lt;/h3&gt;
&lt;pre id=&quot;code_1554446492093&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# vi role.yaml

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: seungkyua-manager
  namespace: seungkyua
rules:
  - apiGroups:
      - &quot;&quot;            # core api
      - &quot;extensions&quot;
      - &quot;apps&quot;
    resources:
      - &quot;deployments&quot;
      - &quot;replicasets&quot;
      - &quot;pods&quot;
      - &quot;services&quot;
    verbs:
      - &quot;get&quot;
      - &quot;list&quot;
      - &quot;watch&quot;
      - &quot;create&quot;
      - &quot;update&quot;
      - &quot;patch&quot;
      - &quot;delete&quot;


# kubectl create -f role.yaml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;4. User 와 Role 을 연결 (rolebinding 생성)&lt;/h3&gt;
&lt;pre id=&quot;code_1554446572374&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# vi rolebinding.yaml

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: seungkyua-manager-rolebinding
  namespace: seungkyua
subjects:
  - kind: User         # User or ServiceAccount
    name: seungkyua
roleRef:
  kind: Role
  name: seungkyua-manager
  apiGroup: rbac.authorization.k8s.io
  

# kubectl create -f rolebinding.yaml&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;5. Kubectl config context 생성&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;인증을 위한 사용자 정보 등록 (key, crt 로 접속)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre id=&quot;code_1554446583534&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl config set-credentials seungkyua --client-certificate=/root/ahnsk/private-certs/seungkyua.crt --client-key=/root/ahnsk/private-certs/seungkyua.key --embed-certs=true&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;context 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;pre id=&quot;code_1554446593176&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl config get-clusters NAME cluster.local # kubectl config set-context seungkyua@k1 --cluster=cluster.local --user=seungkyua --namespace=seungkyua&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kubernetes 접속&lt;/li&gt;
&lt;/ul&gt;
&lt;pre id=&quot;code_1554446620209&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl config get-contexts
CURRENT   NAME                             CLUSTER         AUTHINFO           NAMESPACE
*         kubernetes-admin@cluster.local   cluster.local   kubernetes-admin   
          seungkyua@k1                     cluster.local   seungkyua 


# kubectl config use-context seungkyua@k1


# kubectl config get-contexts
CURRENT   NAME                             CLUSTER         AUTHINFO           NAMESPACE
          kubernetes-admin@cluster.local   cluster.local   kubernetes-admin   
*         seungkyua@k1                     cluster.local   seungkyua          seungkyua&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Kubernetes 에 접속하여 해당 계정이 해당 네임스페이스에만 접속 권한이 있는지 확인&lt;/p&gt;
&lt;pre id=&quot;code_1554446650000&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;# kubectl get pods

No resources found.



# kubectl get pods -n defaults

Error from server (Forbidden): pods is forbidden: User &quot;seungkyua&quot; cannot list resource &quot;pods&quot; in API group &quot;&quot; in the namespace &quot;defaults&quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/254&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>kubernetes</category>
<category>RBAC</category>
<category>user account</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/254</guid>
<comments>https://ahnseungkyu.com/254#entry254comment</comments>
<pubDate>Fri, 05 Apr 2019 15:46:11 +0900</pubDate>
</item>
<item>
<title>GoLang 으로 개발한 프로젝트 구조 설명</title>
<link>https://ahnseungkyu.com/253</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;Kubernetes 는 GoLang 으로 만들어진 대표적인 s/w 입니다. Kubernetes&amp;nbsp; 구조와 비슷하게 GoLang 으로 프로젝트를 만들 때 사용되는 일반적인 디렉토리 구조를 설명하겠습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;제일 먼저 GOPATH 를 지정하고, bin 디렉토리를 PATH에 추가로 지정합니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ GOPATH=/Users/ahnsk/Documents/go_workspace
$ PATH=/Users/ahnsk/Documents/go_workspace/bin:$PATH&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;다음은 go get 으로 govendor 를 설치합니다. govendor 는 dependency module 을 쉽게 다운받고 관리할 수 있습니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ go get -u github.com/kardianos/govendor
$ govendor -version
v1.0.9&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;이제 본인이 생성할 프로젝트를 만들어 보겠습니다. github.com 에 있는 go 프로젝트를 다운로드 받습니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ mkdir -p /Users/ahnsk/Documents/go_workspace/cookiemonster2
$ GOPATH=/Users/ahnsk/Documents/go_workspace/cookiemonster2
$ go get -u github.com/seungkyua/cookiemonster2&lt;/pre&gt;&lt;p&gt;GOPATH 는 각 프로젝트마다 자신만의 용도로 사용하기 위해&amp;nbsp;각각 지정하는 것이 편리합니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;cookiemonster2 라는 프로젝트는 GOPATH 아래의 src 디렉토리에 패키지 경로(github.com/seungkyua/cookiemonster2)로 다운로드 됩니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;/Users/ahnsk/Documents/go_workspace/cookiemonster2/src/
github.com/seungkyua/cookiemonster2&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;프로젝트 디렉토리로 이동해서 보면 다음과 같습니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ tree -L 2 .
.
├── Dockerfile.cookiemonster
├── LICENSE
├── Makefile
├── README.md
├── cmd
│   ├── cluster_client.go
│   ├── cluster_client2.go
│   └── server.go
├── config
│   └── config.yaml
├── manifest
│   ├── cookiemonster-cm-config.yaml
│   ├── cookiemonster-deployment.yaml
│   ├── cookiemonster-rbac.yaml
│   └── cookiemonster-service.yaml
├── pkg
│   ├── domain
│   └── handler
└── vendor
    └── ...&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;일반적으로 entrypoint 가 되는 go 파일은 cmd 디렉토리 아래에 위치하고 나머지 go 파일들은 pkg 디렉토리에 패키지 구조로 위치합니다.&lt;/p&gt;&lt;p&gt;vendor 디렉토리는 dependency module 을 다운받은 곳이므로 이 디렉토리는 삭제를 하고, 처음부터 새롭게 구성해 보겠습니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ rm -rf vendor&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;govendor init 으로 vendor 디렉토리를 생성합니다.&amp;nbsp; 새롭게 생성된 vendor 디렉토리에 vendor.json 파일이 보이는데 이것은 향후 dependency module 을 다운 받을 때 활용됩니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ govendor init

$ tree -L 2 .
.
├── Dockerfile.cookiemonster
├── LICENSE
├── Makefile
├── README.md
├── cmd
│   ├── cluster_client.go
│   ├── cluster_client2.go
│   └── server.go
├── config
│   └── config.yaml
├── manifest
│   ├── cookiemonster-cm-config.yaml
│   ├── cookiemonster-deployment.yaml
│   ├── cookiemonster-rbac.yaml
│   └── cookiemonster-service.yaml
├── pkg
│   ├── domain
│   └── handler
└── vendor
    └── vendor.json&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;vendor 디렉토리 밑으로 디펜던시 module 을 다운로드 받습니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ govendor get github.com/seungkyua/cookiemonster2

$ tree -L 2 .
.
├── Dockerfile.cookiemonster
├── LICENSE
├── Makefile
├── README.md
├── cmd
│   ├── cluster_client.go
│   ├── cluster_client2.go
│   └── server.go
├── config
│   └── config.yaml
├── manifest
│   ├── cookiemonster-cm-config.yaml
│   ├── cookiemonster-deployment.yaml
│   ├── cookiemonster-rbac.yaml
│   └── cookiemonster-service.yaml
├── pkg
│   ├── domain
│   └── handler
└── vendor
    ├── appengine
    ├── appengine_internal
    ├── github.com
    ├── golang.org
    ├── google.golang.org
    ├── gopkg.in
    ├── k8s.io
    ├── sigs.k8s.io
    └── vendor.json&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;vendor 디렉토리에 dependency module 의 특정버전까지 다운 받을 수 있으니 관리가 편리해 집니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;현재 버전에서&amp;nbsp;labstack 의 echo v4 모듈에 버그가 있어 v3 로 다시 다운받기 위해 해당 디렉토리를 지우고 다시 다운 받을 수 있습니다. @v3 는 v3&amp;nbsp; 이상의 최신 버전에 해당하는 git 브랜치나 태그를 다운받으라는 의미입니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ rm -rf vendor/github.com/labstack/echo

$ govendor get github.com/labstack/echo@v3&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;여기서 govendor 의 버그로 echo 는 다운받았지만 하위 디렉토리인&amp;nbsp;echo/middleware 는 다운이 안되었으므로 추가로 vendor.json 을 수정하여 다운로드 받습니다.&lt;/p&gt;&lt;pre class=&quot;EnlighterJSRAW&quot; data-enlighter-language=&quot;null&quot;&gt;$ vi vendor/vendor.json
{
   &quot;checksumSHA1&quot;: &quot;ynPXfBgVKquHSKkdFWk3oqSYf+g=&quot;,
   &quot;path&quot;: &quot;github.com/labstack/echo&quot;,
   &quot;revision&quot;: &quot;38772c686c76b501f94bd6cd5b77f5842e93b559&quot;,
   &quot;revisionTime&quot;: &quot;2019-01-28T14:12:53Z&quot;,
   &quot;version&quot;: &quot;v3.3.10&quot;,
   &quot;versionExact&quot;: &quot;v3.3.10&quot;
},
{
   &quot;checksumSHA1&quot;: &quot;Rp/k+BJKpaeB9vyjEPFBW4LeFP8=&quot;,
   &quot;path&quot;: &quot;github.com/labstack/echo/middleware&quot;,
   &quot;revision&quot;: &quot;38772c686c76b501f94bd6cd5b77f5842e93b559&quot;,
   &quot;revisionTime&quot;: &quot;2019-01-28T14:12:53Z&quot;,
   &quot;version&quot;: &quot;v3.3.10&quot;,
   &quot;versionExact&quot;: &quot;v3.3.10&quot;
}

$ govendor fetch github.com/labstack/echo/middleware&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;











































&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/253&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Go</category>
<category>golang</category>
<category>govendor</category>
<category>프로젝트디렉토리구조</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/253</guid>
<comments>https://ahnseungkyu.com/253#entry253comment</comments>
<pubDate>Thu, 28 Feb 2019 16:44:22 +0900</pubDate>
</item>
<item>
<title>Ansible playbook 변수 값 살펴 보기</title>
<link>https://ahnseungkyu.com/252</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;-en-clipboard:true;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Kubespray 와 같이 많은 role 을 가진 ansible playbook 에서는 선언된 변수와 실제 할당된 값을 살펴보는 것이 쉽지 않습니다. ansible 에서는 이러한 변수들에 대한 값, 특히 hostvar 값을 볼 수 가 있습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;일단 먼저 inventory 파일인 hosts.ini 로 어떤 host 와 group 이 지정되었는지 확인할 수 있습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;$ vi inventory/k1-seungkyua/hosts.ini
&lt;/div&gt;&lt;div&gt;[all]
&lt;/div&gt;&lt;div&gt;k1-master01 ip=192.168.30.13
&lt;/div&gt;&lt;div&gt;k1-master02 ip=192.168.30.14
&lt;/div&gt;&lt;div&gt;k1-master03 ip=192.168.30.15
&lt;/div&gt;&lt;div&gt;k1-node01 ip=192.168.30.12
&lt;/div&gt;&lt;div&gt;k1-node02 ip=192.168.30.17
&lt;/div&gt;&lt;div&gt;k1-node03 ip=192.168.30.18
&lt;/div&gt;&lt;div&gt;k1-node04 ip=192.168.30.21
&lt;/div&gt;&lt;div&gt;k1-node05 ip=192.168.30.20
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;[etcd]
&lt;/div&gt;&lt;div&gt;k1-master01
&lt;/div&gt;&lt;div&gt;k1-master02
&lt;/div&gt;&lt;div&gt;k1-master03
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;[kube-master]
&lt;/div&gt;&lt;div&gt;k1-master01
&lt;/div&gt;&lt;div&gt;k1-master02
&lt;/div&gt;&lt;div&gt;k1-master03
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;[kube-node]
&lt;/div&gt;&lt;div&gt;k1-node01
&lt;/div&gt;&lt;div&gt;k1-node02
&lt;/div&gt;&lt;div&gt;k1-node03
&lt;/div&gt;&lt;div&gt;k1-node04
&lt;/div&gt;&lt;div&gt;k1-node05
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;[k8s-cluster:children]
&lt;/div&gt;&lt;div&gt;kube-master
&lt;/div&gt;&lt;div&gt;kube-node
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;다양한 그룹이 있음을 볼 수 있는데 맨 마지막의 k8s-cluster 그룹은 하위로 kube-master 와 kube-node 를 가지고 있으므로, k8s-cluster 그룹이 모든 노드를 포함한다는 것을 알 수 있습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;이제 ansible 명령어로 하나의 host 노드 &quot;k1-master01&quot; 에 대해 적용된 변수를 볼 수 있습니다.
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&lt;br /&gt;
&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;$ ansible -i inventory/k1-seungkyua/hosts.ini -m debug -a &quot;var=hostvars['k1-master01']&quot; k8s-cluster
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;이에 대한 결과는 다음과 같습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;k1-node01 | SUCCESS =&amp;gt; {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;hostvars['k1-master01']&quot;: {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;admin_token&quot;: &quot;QVFBTmRVVlh5UmZoTlJBQTMyZTh6Qk5uajV1VElrMDJEbWFwWmc9PQ==&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_all_ipv4_addresses&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;192.168.230.13&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;192.168.30.13&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;172.16.31.64&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;172.17.0.1&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;10.233.0.1&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;10.233.0.3&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;10.233.55.72&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;10.233.18.191&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_all_ipv6_addresses&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;fe80::3ea8:2aff:fe1c:cfd4&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;fe80::5eb9:1ff:fe8c:67dc&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;fe80::42:98ff:fec4:7ad1&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;fe80::ecee:eeff:feee:eeee&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;fe80::ecee:eeff:feee:eeee&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_apparmor&quot;: {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;status&quot;: &quot;enabled&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_architecture&quot;: &quot;x86_64&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_bios_date&quot;: &quot;05/06/2015&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_bios_version&quot;: &quot;P89&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_cali1845c564081&quot;: {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;active&quot;: true,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;device&quot;: &quot;cali1845c564081&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;features&quot;: {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;busy_poll&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;generic_receive_offload&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;generic_segmentation_offload&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;highdma&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;large_receive_offload&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;loopback&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;netns_local&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ntuple_filters&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;receive_hashing&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_all&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_checksumming&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_fcs&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_vlan_offload&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_vlan_stag_hw_parse&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;scatter_gather&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tcp_segmentation_offload&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_checksum_ip_generic&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_checksumming&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_gre_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_ipip_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_lockless&quot;: &quot;on [fixed]&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_nocache_copy&quot;: &quot;off&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_scatter_gather&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_sit_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_tcp6_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_tcp_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_vlan_offload&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tx_vlan_stag_hw_insert&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;udp_fragmentation_offload&quot;: &quot;on&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;vlan_challenged&quot;: &quot;off [fixed]&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;hw_timestamp_filters&quot;: [],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ipv6&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;address&quot;: &quot;fe80::ecee:eeff:feee:eeee&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;prefix&quot;: &quot;64&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;scope&quot;: &quot;link&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;macaddress&quot;: &quot;ee:ee:ee:ee:ee:ee&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;mtu&quot;: 1500,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;promisc&quot;: false,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;speed&quot;: 10000,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;timestamping&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;rx_software&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;software&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;type&quot;: &quot;ether&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_uptime_seconds&quot;: 46351496,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_user_dir&quot;: &quot;/root&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_user_gecos&quot;: &quot;root&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_user_gid&quot;: 0,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_user_id&quot;: &quot;root&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_user_uid&quot;: 0,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_userspace_bits&quot;: &quot;64&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_verbosity&quot;: 0,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_version&quot;: {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;full&quot;: &quot;2.7.7&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;major&quot;: 2,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;minor&quot;: 7,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;revision&quot;: 7,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;string&quot;: &quot;2.7.7&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_virtualization_role&quot;: &quot;host&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ansible_virtualization_type&quot;: &quot;kvm&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;calico_ip_auto_method&quot;: &quot;can-reach=8.8.8.8&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ceph_version&quot;: &quot;mimic&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;dashboard_enabled&quot;: true,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;docker_insecure_registries&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;tacorepo:5000&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;gather_subset&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;all&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;global_as_num&quot;: &quot;65000&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;group_names&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;etcd&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k8s-cluster&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;kube-master&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;groups&quot;: {
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;all&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master03&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node03&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node04&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node05&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;etcd&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master03&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k8s-cluster&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node03&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node04&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node05&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master03&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;kube-master&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-master03&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;kube-node&quot;: [
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node01&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node02&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node03&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node04&quot;,
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;k1-node05&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ungrouped&quot;: []
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},
&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;helm_enabled&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ingress_nginx_enabled&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ingress_nginx_host_network&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ingress_nginx_node_count&quot;: 1,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ingress_nginx_nodeselector&quot;: {&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;node-role.kubernetes.io/ingress&quot;: &quot;true&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;inventory_dir&quot;: &quot;/home/seungkyua/deploy/my-kubespray/inventory/k1-seungkyua&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;inventory_file&quot;: &quot;/home/seungkyua/deploy/my-kubespray/inventory/k1-seungkyua/hosts.ini&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;inventory_hostname&quot;: &quot;k1-master01&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;inventory_hostname_short&quot;: &quot;k1-master01&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ip&quot;: &quot;192.168.30.13&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;ipip_mode&quot;: &quot;Never&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;kubeadm_enabled&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;kubeconfig_localhost&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;kubectl_localhost&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;local_volume_provisioner_enabled&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;module_setup&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;monitors&quot;: &quot;192.168.30.23:6789,192.168.30.24:6789,192.168.30.25:6789&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;nat_outgoing&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;omit&quot;: &quot;__omit_place_holder__4491a572b322dda2550f5ce4d8005946f456f738&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;override_system_hostname&quot;: false,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;peer_with_router&quot;: true,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;peers&quot;: [&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;as&quot;: &quot;65000&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;router_id&quot;: &quot;192.168.30.1&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;playbook_dir&quot;: &quot;/home/seungkyua/deploy/my-kubespray&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;pool_name&quot;: &quot;kubes&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;populate_inventory_to_hosts_file&quot;: false,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;storageclass_name&quot;: &quot;rbd&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;user_id&quot;: &quot;kube&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;user_secret_namespace&quot;: &quot;openstack&quot;,&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#941100&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;user_token&quot;: &quot;QVFDdC9CcFlpZ0o3TVJBQTV2eStjbDM5RXNLcFkzQyt0WEVHckE9PQ==&quot;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&lt;/div&gt;&lt;div&gt;}
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/252&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<category>Ansible</category>
<category>hostvars</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/252</guid>
<comments>https://ahnseungkyu.com/252#entry252comment</comments>
<pubDate>Tue, 26 Feb 2019 16:45:47 +0900</pubDate>
</item>
<item>
<title>Kubespray 를 쉽게 활용할 수 있는 my-kubespray</title>
<link>https://ahnseungkyu.com/251</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;https://github.com/seungkyua/my-kubespray&lt;/p&gt;&lt;h1 cid=&quot;n0&quot; mdtype=&quot;heading&quot; class=&quot;md-end-block md-heading md-focus&quot; style=&quot;box-sizing: border-box; break-after: avoid-page; break-inside: avoid; font-size: 2.25em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.2; cursor: text; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;my-kubespray&lt;/span&gt;&lt;/h1&gt;&lt;p cid=&quot;n2&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; width: inherit; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;You can easily add your custom logic without modifying kubespray.&lt;/span&gt;&lt;/p&gt;&lt;p cid=&quot;n41&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; width: inherit; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;The my-kubespray has serveral parameters to override and can deploy ceph rbd provisioner into namespace.&lt;/span&gt;&lt;/p&gt;&lt;h2 cid=&quot;n43&quot; mdtype=&quot;heading&quot; class=&quot;md-end-block md-heading&quot; style=&quot;box-sizing: border-box; break-after: avoid-page; break-inside: avoid; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;Prerequisites&lt;/span&gt;&lt;/h2&gt;&lt;ul class=&quot;ul-list&quot; cid=&quot;n19&quot; mdtype=&quot;list&quot; data-mark=&quot;-&quot; style=&quot;box-sizing: border-box; margin: 0.8em 0px; padding-left: 30px; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n18&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n17&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;All servers must have the same user, and the user must set root permissions to NOPASSWD in sudo.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n22&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n20&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;In the deployment node (or master 1 node), you need to enable ssh access to all other servers (including localhost) without a password to the corresponding account.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n25&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n23&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;Register all cluster servers in the /etc/hosts file.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n28&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n26&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;Time synchronization between servers with ntp.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n31&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n29&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt;Enable network restart with &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;systemctl restart network.service&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt; .&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n34&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n32&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;Disable firewall such as selinux or ufw.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n37&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n35&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;swapoff.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li class=&quot;md-list-item&quot; cid=&quot;n40&quot; mdtype=&quot;list_item&quot; style=&quot;box-sizing: border-box; margin: 0px; position: relative;&quot;&gt;&lt;p cid=&quot;n38&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin-right: 0px; margin-bottom: 0.5rem; margin-left: 0px; white-space: pre-wrap; position: relative;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;Install python 2.7.x in ansible runner node.  &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 cid=&quot;n5&quot; mdtype=&quot;heading&quot; class=&quot;md-end-block md-heading&quot; style=&quot;box-sizing: border-box; break-after: avoid-page; break-inside: avoid; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;Quick Start&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n7&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; width: inherit; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt;To deploy the cluster you can use :&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot; lang=&quot;&quot; contenteditable=&quot;false&quot; cid=&quot;n12&quot; mdtype=&quot;fences&quot; style=&quot;box-sizing: border-box; overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border: 1px solid rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); text-size-adjust: auto; position: relative !important;&quot;&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Download kubespray and my-kubespray&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ git clone https://github.com/kubernetes-sigs/kubespray.git&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ git clone https://github.com/seungkyua/my-kubespray.git&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Change directory into my-kubespray&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ cd my-kubespray&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Install dependencies from ``requirements.txt``&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ sudo pip install -r ../kubespray/requirements.txt&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Copy ``inventory/k2-seungkyua`` as ``inventory/mycluster``&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ cp -rfp inventory/k2-seungkyua inventory/mycluster&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Update Ansible inventory file&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ vi inventory/mycluster/hosts.ini&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;[all]&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master01 ip=192.168.30.151&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master02 ip=192.168.30.152&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master03 ip=192.168.30.153&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-ctrl01 ip=192.168.30.154&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-ctrl02 ip=192.168.30.155&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-ctrl03 ip=192.168.30.156&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-cn01 ip=192.168.30.157&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;[etcd]&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master01&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master02&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master03&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;[kube-master]&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master01&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master02&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-master03&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;[kube-node]&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-ctrl01&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-ctrl02&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-ctrl03&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;k2-cn01&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;[k8s-cluster:children]&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;kube-node&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;kube-master&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Review and change parameters under ``inventory/mycluster/group_vars/k8s-cluster.yml``&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ cat inventory/mycluster/group_vars/k8s-cluster.yml&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;populate_inventory_to_hosts_file: false&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;override_system_hostname: false&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;helm_enabled: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;etcd_memory_limit: 8192M&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;kubeconfig_localhost: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;kubectl_localhost: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;ipip_mode: Never&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;calico_ip_auto_method: &quot;can-reach=8.8.8.8&quot;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;kubeadm_enabled: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;docker_insecure_registries:&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;  - seungkyua:5000&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;dashboard_enabled: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;local_volume_provisioner_enabled: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;ingress_nginx_enabled: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;ingress_nginx_host_network: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;ingress_nginx_nodeselector:&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;  node-role.kubernetes.io/ingress: true&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;ceph_version: mimic&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;storageclass_name: rbd&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;monitors: 192.168.30.23:6789,192.168.30.24:6789,192.168.30.25:6789&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;admin_token: QBTEBmRVVlh5UmZoTlJBQTMyZTh6Qk5uajV1VElrMDJEbWFwWmc9WA==&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;user_secret_namespace: default&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;pool_name: kubes&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;user_id: kube&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;user_token: QEFESG9CcFlpZ0o3TVJBQTV2eStjbDM5RXNLcFkzQyt0WEVHckE9WA==&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Run Ansible Playbook to deploy kubernetes cluster&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ ansible-playbook -b -f 30 -i inventory/mycluster/hosts.ini ../kubespray/cluster.yml&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;span cm-text=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;# Run Ansible Playbook to deploy ceph rbd provisioner&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ ansible-playbook -b -f 30 -i inventory/mycluster/hosts.ini storage.yml&lt;/span&gt;&lt;/pre&gt;&lt;h2 cid=&quot;n10&quot; mdtype=&quot;heading&quot; class=&quot;md-end-block md-heading&quot; style=&quot;box-sizing: border-box; break-after: avoid-page; break-inside: avoid; font-size: 1.75em; margin-top: 1rem; margin-bottom: 1rem; position: relative; line-height: 1.225; cursor: text; padding-bottom: 0.3em; border-bottom: 1px solid rgb(238, 238, 238); white-space: pre-wrap; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt;Miscellaneous&lt;/span&gt;&lt;/h2&gt;&lt;p cid=&quot;n45&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; width: inherit; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt;After installation, you can find the artifacts which are &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;kubectl&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt; and &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;admin.conf&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt; in inventory/mycluster/artifacts directorin on deploy node(ansible runner).&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre spellcheck=&quot;false&quot; class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot; lang=&quot;&quot; contenteditable=&quot;false&quot; cid=&quot;n52&quot; mdtype=&quot;fences&quot; style=&quot;box-sizing: border-box; overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border: 1px solid rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); text-size-adjust: auto; position: relative !important;&quot;&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ ls -al inventory/mycluster/artifacts&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;total 173620&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;drwxr-x--- 2 seungkyua seungkyua &amp;nbsp; &amp;nbsp;  4096 Feb 22 05:25 .&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;drwxrwxr-x 4 seungkyua seungkyua &amp;nbsp; &amp;nbsp;  4096 Feb 22 02:38 ..&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;-rw-r----- 1 seungkyua seungkyua &amp;nbsp; &amp;nbsp;  5449 Feb 22 05:25 admin.conf&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;-rwxr-xr-x 1 seungkyua seungkyua 177766296 Feb 22 05:25 kubectl&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;-rwxr-xr-x 1 seungkyua seungkyua &amp;nbsp; &amp;nbsp; &amp;nbsp;  65 Feb 22 05:25 kubectl.sh&lt;/span&gt;&lt;/pre&gt;&lt;p cid=&quot;n50&quot; mdtype=&quot;paragraph&quot; class=&quot;md-end-block&quot; style=&quot;box-sizing: border-box; orphans: 4; margin: 0.8em 0px; white-space: pre-wrap; width: inherit; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Clear Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; text-size-adjust: auto;&quot;&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt;If desired, copy &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;admin.conf&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt; to &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;~/.kube/config&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot; style=&quot;box-sizing: border-box;&quot;&gt; and &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;kubectl&lt;/code&gt;&lt;/span&gt;&lt;span md-inline=&quot;plain&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt; to &lt;/span&gt;&lt;span md-inline=&quot;code&quot; spellcheck=&quot;false&quot; class=&quot;&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: var(--monospace); border: 1px solid rgb(231, 234, 237); background-color: rgb(243, 244, 244); border-radius: 3px; padding: 0px 2px; font-size: 0.9em;&quot;&gt;/usr/local/bin/kubectl&lt;/code&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre mdtype=&quot;fences&quot; cid=&quot;n53&quot; contenteditable=&quot;false&quot; lang=&quot;&quot; class=&quot;md-fences md-end-block ty-contain-cm modeLoaded&quot; spellcheck=&quot;false&quot; style=&quot;box-sizing: border-box; overflow: visible; font-family: var(--monospace); font-size: 0.9em; break-inside: avoid; white-space: normal; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(248, 248, 248); border: 1px solid rgb(231, 234, 237); border-radius: 3px; padding: 8px 4px 6px; margin-bottom: 15px; margin-top: 15px; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); text-size-adjust: auto; position: relative !important;&quot;&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ mkdir -p ~/.kube&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ cp inventory/mycluster/artifacts/admin.conf ~/.kube/config&lt;/span&gt;&lt;br /&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;$ sudo cp inventory/mycluster/artifacts/kubectl /usr/local/bin/kubectl&lt;/span&gt;&lt;/pre&gt;&lt;div&gt;&lt;span role=&quot;presentation&quot; style=&quot;box-sizing: border-box; padding-right: 0.1px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/251&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>kubespray</category>
<category>my-kubespray</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/251</guid>
<comments>https://ahnseungkyu.com/251#entry251comment</comments>
<pubDate>Fri, 22 Feb 2019 16:18:32 +0900</pubDate>
</item>
<item>
<title>Ansible dictionary 변수에서 가변 key 를 사용하는 방법</title>
<link>https://ahnseungkyu.com/250</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;-en-clipboard:true;&quot;&gt;변수의 key 값을 가져오기 위해서는 regex_replace 함수를 사용하여 substring 을 할 수 도 있지만 set_fact 를 이용할 수 도 있습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;아래 내용은 set_fact 를 활용한 내용입니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;예제는 ingress controller 가 실행될 node label 을 세팅하기 위한 방법입니다.
&lt;/div&gt;&lt;div&gt;node label 은 다음과 같은 명령어로 세팅할 수 있습니다.
&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;$ kubectl label --overwrite node k2-ctrl01 node-role.kubernetes.io/ingress=true
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;먼저 변수를 세팅하는 defaults/main.yml 파일은 다음과 같습니다.
&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;ingress_nginx_nodeselector:&lt;br /&gt;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;node-role.kubernetes.io/ingress: &quot;true&quot;
&lt;/div&gt;&lt;div&gt;ingress_nginx_node_count: 1
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;ingress_nginx_nodeselector 의 dict 값은&amp;nbsp;node-role.kubernetes.io/ingress: &quot;true&quot; 인데&amp;nbsp;node-role.kubernetes.io 는 key 값으로 이 값이 변경될 수 있으므로 key 를 사용하기에는 어렵습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;key 값을 유동적으로 활용하기 위해서는 set_fact 를 활용합니다.
&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;- name: Set ingress nginx node role
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;set_fact:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ingress_nginx_node_role:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;key: &quot;{{ item.key }}&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value: &quot;{{ item.value }}&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;with_dict: &quot;{{ ingress_nginx_nodeselector }}&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;when:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- inventory_hostname == groups['kube-master'][0]
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;위 태스크가 실행되면&amp;nbsp;ingress_nginx_node_role 변수에 {&quot;key&quot; : &quot;node-role.kubernetes.io/ingress&quot;, &quot;value&quot; :&amp;nbsp;&quot;true&quot;} 라고 저장됩니다.
&lt;/div&gt;&lt;div&gt;그럼 이제 쉽게 ingress_nginx_node_role.key 로 해당 값을 가져올 수 있습니다.
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;- name: Set ingress nginx node list
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;set_fact:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ingress_nginx_node_list:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &quot;{{ groups['kube-node'][item|int] }}&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;with_sequence: start=0 end={{ (ingress_nginx_node_count-1)|int }}
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;when:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- inventory_hostname == groups['kube-master'][0]
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;- name: NGINX Ingress Controller | Set node label
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;shell: |
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{{ bin_dir }}/kubectl label --overwrite node {{ item }} {{ ingress_nginx_node_role.key }}={{ ingress_nginx_node_role.value }}
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;loop: &quot;{{ ingress_nginx_node_list }}&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;when:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- inventory_hostname == groups['kube-master'][0]
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;/p&gt;&lt;div&gt;label 을 세팅하기 전에 node 를 선택해야 하기 때문에 node 를 선택하는 &quot;Set ingress nginx node list&quot; 태스크를 먼저 수행했고 &quot;NGINX Ingress Controller | Set node label&quot; 태스크가 node label 을 지정하는 명령어 입니다.&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&amp;nbsp;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/250&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<category>ansible variable key</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/250</guid>
<comments>https://ahnseungkyu.com/250#entry250comment</comments>
<pubDate>Fri, 22 Feb 2019 11:29:00 +0900</pubDate>
</item>
<item>
<title>Kubernetes Node 가 NotReady 일 때 - inotify_add_watch</title>
<link>https://ahnseungkyu.com/249</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;Kubernetes Node 가 NotReady 인 경우&amp;nbsp;해결을 위해서&amp;nbsp;제일 먼저 해당 노드의 syslog 를 확인 하는 것이 좋다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;-en-clipboard:true;&quot;&gt;## Node 의 syslog 확인 (ubuntu 인 경우)&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12px; color: rgb(51, 51, 51); font-family: Monaco;&quot;&gt;# vi &lt;b&gt;/etc/log/syslog&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12px; color: rgb(51, 51, 51); font-family: Monaco;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Feb 20 12:14:49 k1-node01 kubelet[31100]: E0220 12:14:49.401890&amp;nbsp;&amp;nbsp;&amp;nbsp;31100 raw.go:146] Failed to watch directory &quot;/sys/fs/cgroup/devices/system.slice&quot;: &lt;b&gt;inotify_add_watch&lt;/b&gt; /sys/fs/cgroup/devices/system.slice/run-ref5f878051f440b98dfd9bd843a01b58.scope: &lt;b&gt;no space left on device
&lt;/b&gt;&lt;/div&gt;&lt;div&gt;Feb 20 12:14:49 k1-node01 kubelet[31100]: F0220 12:14:49.401909&amp;nbsp;&amp;nbsp;&amp;nbsp;31100 kubelet.go:1369] Failed to start cAdvisor inotify_add_watch /sys/fs/cgroup/devices/system.slice/run-ref5f878051f440b98dfd9bd843a01b58.scope: no space left on device
&lt;/div&gt;&lt;div&gt;Feb 20 12:14:49 k1-node01 kubelet[31100]: E0220 12:14:49.640153&amp;nbsp;&amp;nbsp;&amp;nbsp;31100 kubelet.go:2266] node &quot;k1-node01&quot; not found
&lt;/div&gt;&lt;div&gt;Feb 20 12:14:49 k1-node01 systemd[1]: kubelet.service: Main process exited, code=exited, status=255/n/a
&lt;/div&gt;&lt;div&gt;Feb 20 12:14:49 k1-node01 systemd[1]: kubelet.service: Unit entered failed state.
&lt;/div&gt;&lt;div&gt;Feb 20 12:14:49 k1-node01 systemd[1]: kubelet.service: Failed with result 'exit-code'.
&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;위와 같이 inotify_add_watch 에서 no space left on device 로 에러가 날 경우에 sysctl 로 값을 늘려줘야 한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;##&amp;nbsp;fs.inotify.max_user_watches 값을 늘려줌
&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;# vi &lt;b&gt;/etc/sysctl.d/99-sysctl.conf
&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;net.ipv4.ip_forward=1
&lt;/div&gt;&lt;div&gt;net.ipv4.ip_local_reserved_ports=30000-32767
&lt;/div&gt;&lt;div&gt;net.bridge.bridge-nf-call-iptables=1
&lt;/div&gt;&lt;div&gt;net.bridge.bridge-nf-call-arptables=1
&lt;/div&gt;&lt;div&gt;net.bridge.bridge-nf-call-ip6tables=1
&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(204, 61, 61);&quot;&gt;fs.inotify.max_user_watches=1048576&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;해당 값을 적용하고 나서 kubelet 이 activating 상태이거나 failed 상태인 경우가 많으므로 아래와 같이 kubelet 을 재 시작해 준다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;## sysctl 로 적용 및 kubelet 재실행&lt;/div&gt;&lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;/p&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;div&gt;# sysctl -p
&lt;/div&gt;&lt;div&gt;# sudo systemctl restart kubelet&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/249&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>inotify_add_watch</category>
<category>kubernetes</category>
<category>node</category>
<category>NotReady</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/249</guid>
<comments>https://ahnseungkyu.com/249#entry249comment</comments>
<pubDate>Wed, 20 Feb 2019 12:51:28 +0900</pubDate>
</item>
<item>
<title>kubernetes 에서 rbd provisioner 활용하기</title>
<link>https://ahnseungkyu.com/248</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;kubernetes 에서 ceph rbd provisioner 활용 방법입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;-en-clipboard:true;&quot;&gt;1. 먼저 rbd provisioner 가 사용할 rbac 권한 yaml 파일을 만듭니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;# vi rbd-rbac.yaml
&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;kind: ClusterRole
&lt;/div&gt;&lt;div&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;rules:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&quot;persistentvolumes&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;create&quot;, &quot;delete&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&quot;persistentvolumeclaims&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;update&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- apiGroups: [&quot;storage.k8s.io&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&quot;storageclasses&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&quot;events&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbs: [&quot;create&quot;, &quot;update&quot;, &quot;patch&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&quot;services&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resourceNames: [&quot;kube-dns&quot;,&quot;coredns&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbs: [&quot;list&quot;, &quot;get&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resources: [&quot;endpoints&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;create&quot;, &quot;update&quot;, &quot;patch&quot;]
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;kind: ClusterRoleBinding
&lt;/div&gt;&lt;div&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;subjects:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- kind: ServiceAccount
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;namespace: kube-system
&lt;/div&gt;&lt;div&gt;roleRef:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;kind: ClusterRole
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;apiGroup: rbac.authorization.k8s.io
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: v1
&lt;/div&gt;&lt;div&gt;kind: ServiceAccount
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: kube-system
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/div&gt;&lt;div&gt;kind: Role
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: kube-system
&lt;/div&gt;&lt;div&gt;rules:
&lt;/div&gt;&lt;div&gt;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;resources: [&quot;secrets&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;verbs: [&quot;get&quot;]
&lt;/div&gt;&lt;div&gt;- apiGroups: [&quot;&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;resources: [&quot;endpoints&quot;]
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;create&quot;, &quot;update&quot;, &quot;patch&quot;]
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/div&gt;&lt;div&gt;kind: RoleBinding
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: kube-system
&lt;/div&gt;&lt;div&gt;roleRef:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;apiGroup: rbac.authorization.k8s.io
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;kind: Role
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;subjects:
&lt;/div&gt;&lt;div&gt;- kind: ServiceAccount
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: kube-system&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;#&amp;nbsp;kubectl create -f rbd-rbac.yaml&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2. kube-system 네임스페이스로 admin secret 과 user secret 을&amp;nbsp;생성한다.&lt;/div&gt;&lt;div&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;-en-clipboard:true;&quot;&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;# ceph auth get client.admin 2&amp;gt;&amp;amp;1 |grep &quot;key = &quot; |awk '{print&amp;nbsp;&amp;nbsp;$3'} |xargs echo -n &amp;gt; /tmp/secret.admin
&lt;/div&gt;&lt;div&gt;# kubectl create secret generic ceph-secret-admin --type=kubernetes.io/rbd --from-file=/tmp/secret.admin --namespace=kube-system
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;# ceph auth get-key client.kube &amp;gt; /tmp/secret.user
&lt;/div&gt;&lt;div&gt;# kubectl create secret generic ceph-secret-user --type=kubernetes.io/rbd --from-file=/tmp/secret.user --namespace=kube-system&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3. rbd provisioner 가 사용할 storage class yaml 파일을 만듭니다.&lt;/div&gt;&lt;div&gt;pool 이름과 userId 를&amp;nbsp; 정확히 입력해야 합니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;# vi rbd-storageclass.yaml
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: storage.k8s.io/v1beta1
&lt;/div&gt;&lt;div&gt;kind: StorageClass
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: &quot;rbd&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;annotations:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;storageclass.beta.kubernetes.io/is-default-class: &quot;true&quot;
&lt;/div&gt;&lt;div&gt;provisioner: ceph.com/rbd
&lt;/div&gt;&lt;div&gt;reclaimPolicy: Delete
&lt;/div&gt;&lt;div&gt;parameters:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;monitors: &quot;192.168.30.23:6789,192.168.30.24:6789,192.168.30.25:6789&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;adminId: &quot;admin&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;adminSecretName: &quot;ceph-secret-admin&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;adminSecretNamespace: &quot;kube-system&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;pool: &quot;kubes&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;userId: &quot;kube&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;userSecretName: &quot;ceph-secret-user&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;userSecretNamespace: &quot;kube-system&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;imageFormat: &quot;2&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;imageFeatures: &quot;layering&quot;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;# kubectl create -f&amp;nbsp;rbd-storageclass.yaml&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4. rbd provisioner 를 deployment 타입 yaml 로 생성합니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;# vi&amp;nbsp;deployment-rbd-provisioner.yaml
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: apps/v1
&lt;/div&gt;&lt;div&gt;kind: Deployment
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: kube-system
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;labels:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version: v2.1.1-k8s1.11
&lt;/div&gt;&lt;div&gt;spec:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;replicas: 2
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;strategy:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;type: Recreate
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;selector:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;matchLabels:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version: v2.1.1-k8s1.11
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;template:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;labels:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;version: v2.1.1-k8s1.11
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;spec:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;priorityClassName: system-cluster-critical
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;serviceAccount: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;containers:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: rbd-provisioner
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;image: quay.io/external_storage/rbd-provisioner:v2.1.1-k8s1.11
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;imagePullPolicy: IfNotPresent
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;env:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: PROVISIONER_NAME
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value: ceph.com/rbd
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: POD_NAME
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;valueFrom:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fieldRef:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fieldPath: metadata.name
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;command:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &quot;/usr/local/bin/rbd-provisioner&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &quot;-id=${POD_NAME}&quot;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;# kubectl create -f&amp;nbsp;deployment-rbd-provisioner.yaml&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5. 이제 default 네임스페이스에 테스트를 해 보겠습니다.&lt;/div&gt;&lt;div&gt;먼저 default 네임스페이스에 user secret 을 생성합니다. (rbd provisioner 를 사용하고자 하는 네임스페이스에는 user secret 을 만들어 줘야 합니다.)&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;# ceph auth get-key client.kube &amp;gt; /tmp/secret.user
&lt;/div&gt;&lt;div&gt;# kubectl create secret generic ceph-secret-user --type=kubernetes.io/rbd --from-file=/tmp/secret.user &lt;b&gt;--namespace=default&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;6. 테스트용 pod 생성.&lt;/div&gt;&lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;/p&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;div&gt;# vi rbd-test.yaml
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: v1
&lt;/div&gt;&lt;div&gt;kind: PersistentVolumeClaim
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-test
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: default&lt;/div&gt;&lt;div&gt;spec:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;accessModes:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- ReadWriteOnce
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;storageClassName: rbd
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;resources:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;requests:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;storage: 1Gi
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---
&lt;/div&gt;&lt;div&gt;apiVersion: v1
&lt;/div&gt;&lt;div&gt;kind: Pod
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: rbd-test
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;namespace: default
&lt;/div&gt;&lt;div&gt;spec:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;containers:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- name: pod-test
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;image: gcr.io/google_containers/busybox:1.24
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;command:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &quot;/bin/sh&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &quot;-c&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- &quot;touch /mnt/SUCCESS &amp;amp;&amp;amp; exit 0 || exit 1&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;volumeMounts:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- name: pvc
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mountPath: &quot;/mnt&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;restartPolicy: &quot;Never&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;volumes:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- name: pvc
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;persistentVolumeClaim:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;claimName: rbd-test&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;-en-clipboard:true;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;/p&gt;&lt;div style=&quot;box-sizing: border-box; padding: 8px; font-family: Monaco, Menlo, Consolas, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; background-color: rgb(251, 250, 248); border: 1px solid rgba(0, 0, 0, 0.14902);-en-codeblock:true;&quot;&gt;# kubectl create -f rbd-test.yaml&amp;nbsp;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/248&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>ceph rbd provisioner</category>
<category>kubernetes</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/248</guid>
<comments>https://ahnseungkyu.com/248#entry248comment</comments>
<pubDate>Thu, 14 Feb 2019 23:57:32 +0900</pubDate>
</item>
<item>
<title>Kubernetes Aggregation API 보안 취약점 확인</title>
<link>https://ahnseungkyu.com/247</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;h3&gt;CVE-2018-1002105: proxy request handling in kube-apiserver can leave vulnerable TCP connections&lt;br /&gt;
&lt;/h3&gt;&lt;div&gt;&lt;a href=&quot;https://github.com/kubernetes/kubernetes/issues/71411&quot;&gt;https://github.com/kubernetes/kubernetes/issues/71411&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;b&gt;[ Enable API Aggregation ]&lt;/b&gt;&lt;/h3&gt;&lt;div&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/access-kubernetes-api/configure-aggregation-layer/&quot;&gt;https://kubernetes.io/docs/tasks/access-kubernetes-api/configure-aggregation-layer/&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;## kube-apiserver 에 옵션에 다음과 같이 설정
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;--requestheader-client-ca-file=/etc/kubernetes/ssl/front-proxy-ca.crt
&lt;/div&gt;&lt;div&gt;--requestheader-allowed-names=front-proxy-client
&lt;/div&gt;&lt;div&gt;--requestheader-extra-headers-prefix=X-Remote-Extra-
&lt;/div&gt;&lt;div&gt;--requestheader-group-headers=X-Remote-Group
&lt;/div&gt;&lt;div&gt;--requestheader-username-headers=X-Remote-User
&lt;/div&gt;&lt;div&gt;--proxy-client-cert-file=/etc/kubernetes/ssl/front-proxy-client.crt
&lt;/div&gt;&lt;div&gt;--proxy-client-key-file=/etc/kubernetes/ssl/front-proxy-client.key
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;b&gt;[ Metrics API 서버 설치 ]&lt;/b&gt;&lt;/h3&gt;&lt;div&gt;$ mkdir -p ~/ahnsk/metric-server &amp;amp;&amp;amp; cd ~/ahnsk
&lt;/div&gt;&lt;div&gt;$ git clone &lt;a href=&quot;https://github.com/seungkyua/metrics-server.git&quot;&gt;https://github.com/seungkyua/metrics-server.git&lt;/a&gt;
&lt;/div&gt;&lt;div&gt;$ cd metrics-server
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl create -f deploy/1.8+/
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl -n kube-system get pods -l k8s-app=metrics-server
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;## metric-server 로그 보기
&lt;/div&gt;&lt;div&gt;kubectl -n kube-system logs $(kubectl get pods --namespace=kube-system -l k8s-app=metrics-server -o name)
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;## metric-server 가 hostname 을 알지 못한다는 로그가 나오면 metric-server 를 변경
&lt;/div&gt;&lt;div&gt;&lt;a href=&quot;https://github.com/kubernetes-incubator/metrics-server/issues/131&quot;&gt;https://github.com/kubernetes-incubator/metrics-server/issues/131&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl edit deployment metrics-server -n kube-system
&lt;/div&gt;&lt;div&gt;image: k8s.gcr.io/metrics-server-amd64:&lt;b&gt;v0.3.&lt;font color=&quot;#941100&quot;&gt;0&lt;/font&gt;&lt;/b&gt;
&lt;/div&gt;&lt;div&gt;&lt;b&gt;command:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;- /metrics-server&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;- --kubelet-insecure-tls&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;- --kubelet-preferred-address-types=InternalIP&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;[ 취약점 확인 ]
&lt;/h3&gt;&lt;div&gt;## 1.12.2 버전에서는 metric-server 가 node 의 stats 을 가져오고 있음
&lt;/div&gt;&lt;div&gt;$ kubectl version
&lt;/div&gt;&lt;div&gt;Client Version: version.Info{Major:&quot;1&quot;, Minor:&quot;12&quot;, GitVersion:&quot;v1.12.2&quot;, GitCommit:&quot;17c77c7898218073f14c8d573582e8d2313dc740&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2018-10-24T06:43:59Z&quot;, GoVersion:&quot;go1.10.4&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;}
&lt;/div&gt;&lt;div&gt;Server Version: version.Info{Major:&quot;1&quot;, Minor:&quot;12&quot;, GitVersion:&quot;v1.12.2&quot;, GitCommit:&quot;17c77c7898218073f14c8d573582e8d2313dc740&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2018-10-24T06:43:59Z&quot;, GoVersion:&quot;go1.10.4&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;}
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl get --raw /apis/metrics.k8s.io/v1beta1/nodes
&lt;/div&gt;&lt;div&gt;{&quot;kind&quot;:&quot;NodeMetricsList&quot;,&quot;apiVersion&quot;:&quot;metrics.k8s.io/v1beta1&quot;,&quot;metadata&quot;:{&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes&quot;},&quot;items&quot;:[{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-master01&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-master01&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:09Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;425054529n&quot;,&quot;memory&quot;:&quot;13992336Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-master02&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-master02&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:17Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;174426537n&quot;,&quot;memory&quot;:&quot;10275528Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-master03&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-master03&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:15Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;322881470n&quot;,&quot;memory&quot;:&quot;10741952Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-node01&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-node01&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:14Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;309956501n&quot;,&quot;memory&quot;:&quot;14327216Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-node02&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-node02&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:12Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;363826460n&quot;,&quot;memory&quot;:&quot;17359508Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-node03&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-node03&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:07Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;256312214n&quot;,&quot;memory&quot;:&quot;15248572Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-node04&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-node04&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:13Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;124689837n&quot;,&quot;memory&quot;:&quot;11814000Ki&quot;}},{&quot;metadata&quot;:{&quot;name&quot;:&quot;k1-node05&quot;,&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes/k1-node05&quot;,&quot;creationTimestamp&quot;:&quot;2018-12-05T08:38:13Z&quot;},&quot;timestamp&quot;:&quot;2018-12-05T08:37:15Z&quot;,&quot;window&quot;:&quot;30s&quot;,&quot;usage&quot;:{&quot;cpu&quot;:&quot;114905912n&quot;,&quot;memory&quot;:&quot;8340284Ki&quot;}}]}
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;## 1.11.5 패치 적용된 버전에서는 metric-server 가 system:anonymous 계정으로 node 의 stats 을 가져오지 못함
&lt;/div&gt;&lt;div&gt;$ kubectl version
&lt;/div&gt;&lt;div&gt;Client Version: version.Info{Major:&quot;1&quot;, Minor:&quot;11&quot;, GitVersion:&quot;v1.11.3&quot;, GitCommit:&quot;a4529464e4629c21224b3d52edfe0ea91b072862&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2018-09-09T18:02:47Z&quot;, GoVersion:&quot;go1.10.3&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;}
&lt;/div&gt;&lt;div&gt;Server Version: version.Info{Major:&quot;1&quot;, Minor:&quot;11&quot;, GitVersion:&quot;v1.11.5&quot;, GitCommit:&quot;753b2dbc622f5cc417845f0ff8a77f539a4213ea&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2018-11-26T14:31:35Z&quot;, GoVersion:&quot;go1.10.3&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;}
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl get --raw /apis/metrics.k8s.io/v1beta1/nodes
&lt;/div&gt;&lt;div&gt;{&quot;kind&quot;:&quot;NodeMetricsList&quot;,&quot;apiVersion&quot;:&quot;metrics.k8s.io/v1beta1&quot;,&quot;metadata&quot;:{&quot;selfLink&quot;:&quot;/apis/metrics.k8s.io/v1beta1/nodes&quot;},&quot;items&quot;:[]}
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl logs metrics-server-695bdf6996-sg429 -n kube-system
&lt;/div&gt;&lt;div&gt;E1205 08:14:30.157105&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1 manager.go:102] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:node1: unable to fetch metrics from Kubelet node1 (192.168.0.93): request failed - &quot;403 Forbidden&quot;, response:&quot;Forbidden (user=system:anonymous, verb=get, resource=nodes, subresource=stats)&quot;
&lt;/div&gt;&lt;div&gt;E1205 08:15:30.148565&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1 manager.go:102] unable to fully collect metrics: unable to fully scrape metrics from source kubelet_summary:node1: unable to fetch metrics from Kubelet node1 (192.168.0.93): request failed - &quot;403 Forbidden&quot;, response:&quot;Forbidden (user=system:anonymous, verb=get, resource=nodes, subresource=stats)&quot;
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;&lt;b&gt;[ work around 로 해결하는 방법 ]&lt;/b&gt;&lt;/h3&gt;&lt;div&gt;&lt;a href=&quot;https://github.com/kubernetes/kubernetes/issues/71411&quot;&gt;https://github.com/kubernetes/kubernetes/issues/71411&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;1. kube-apiserver 옵션에 --anonymous-auth=false 를 넣는 방법 (default 는 true 임)&lt;/h4&gt;&lt;h4&gt;2. 아래 clusterrolebinding 의 system:basic-user 와 system:discovery 에 들어있는 system:unauthenticated Group 을 삭제
&lt;/h4&gt;&lt;div&gt;&lt;a href=&quot;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings&quot;&gt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#default-roles-and-role-bindings&lt;/a&gt;&lt;/div&gt;&lt;div&gt;$ kubectl get clusterrolebindings system:basic-user -o yaml
&lt;/div&gt;&lt;div&gt;kubectl get clusterrolebindings system:basic-user -o yaml
&lt;/div&gt;&lt;div&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/div&gt;&lt;div&gt;kind: ClusterRoleBinding
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;annotations:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rbac.authorization.kubernetes.io/autoupdate: &quot;true&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;creationTimestamp: 2018-11-21T08:44:59Z
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;labels:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubernetes.io/bootstrapping: rbac-defaults
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: system:basic-user
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;resourceVersion: &quot;113&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;selfLink: /apis/rbac.authorization.k8s.io/v1/clusterrolebindings/system%3Abasic-user
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;uid: bae78dd9-ed69-11e8-b322-3ca82a1c0c40
&lt;/div&gt;&lt;div&gt;roleRef:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;apiGroup: rbac.authorization.k8s.io
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;kind: ClusterRole
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: system:basic-user
&lt;/div&gt;&lt;div&gt;subjects:
&lt;/div&gt;&lt;div&gt;- apiGroup: rbac.authorization.k8s.io
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;kind: Group
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: system:authenticated
&lt;/div&gt;&lt;div&gt;- apiGroup: rbac.authorization.k8s.io
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;kind: Group
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: system:unauthenticated
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;그리고 clusterrole 의 system:basic-user 와 system:discovery 에 세팅된 auto repaired 를 false 로 변경
&lt;/h4&gt;&lt;div&gt;&lt;a href=&quot;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#auto-reconciliation&quot;&gt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#auto-reconciliation&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;$ kubectl get clusterroles system:basic-user -o yaml
&lt;/div&gt;&lt;div&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/div&gt;&lt;div&gt;kind: ClusterRole
&lt;/div&gt;&lt;div&gt;metadata:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;annotations:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rbac.authorization.kubernetes.io/autoupdate: &quot;&lt;span style=&quot;color: rgb(152, 0, 0);&quot;&gt;&lt;b&gt;true&lt;/b&gt;&lt;/span&gt;&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;creationTimestamp: 2018-11-21T08:44:59Z
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;labels:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kubernetes.io/bootstrapping: rbac-defaults
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;name: system:basic-user
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;resourceVersion: &quot;58&quot;
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;selfLink: /apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Abasic-user
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;uid: baae6ff5-ed69-11e8-b322-3ca82a1c0c40
&lt;/div&gt;&lt;div&gt;rules:
&lt;/div&gt;&lt;div&gt;- apiGroups:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- authorization.k8s.io
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;resources:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- selfsubjectaccessreviews
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- selfsubjectrulesreviews
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;verbs:
&lt;/div&gt;&lt;div&gt;&amp;nbsp;&amp;nbsp;- create
&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?--&gt;

&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/247&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Kubernetes</category>
<category>Aggregation API 보안취약점</category>
<category>Kubernetes metric-server</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/247</guid>
<comments>https://ahnseungkyu.com/247#entry247comment</comments>
<pubDate>Wed, 05 Dec 2018 17:52:13 +0900</pubDate>
</item>
<item>
<title>AWS re:Invent 2018 - Keynote with Werner Vogels (CTO) 키노트 요약</title>
<link>https://ahnseungkyu.com/246</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;처음에는 대충 볼려고 했는데 내용이 좋아서 끝까지 집중해서 봤네요. 전체 요약해 봤습니다.&lt;/p&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=femopq3JWJg&quot; data-mce-href=&quot;https://www.youtube.com/watch?v=femopq3JWJg&quot; style=&quot;color: rgb(59, 115, 175) !important;&quot;&gt;AWS re:Invent 2018 - Keynote with Werner Vogels&lt;/a&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;2004-12-12 Amazon Oracle 장애 Lessons learned&lt;/h3&gt;&lt;ul data-mce-style=&quot;list-style-type: square;&quot; style=&quot;margin: 10px 0px 0px; list-style-type: square; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;SOA (Service Oriented Architecture) 로 서비스를 Flexible 하게 구성하였으나 Database Oracle의 로깅 코드 버그로 장애 발생, 12시간 동안 크리스마스 시즌 주문을 받지 못함&lt;/li&gt;&lt;li&gt;Oracle 은 SPOF (Single Point of Failure) 이고, Black Box 라 scale, reliability 를 높일 수 있는 방법이 없었음.&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/996FB74D5C0649260E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws01-2004-12-12-Oracle RAC.png&quot; height=&quot;354&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;1차 변경: Sharding 을 통해 데이터를 분산하여 performance 와&amp;nbsp; reliability 를 높힘&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E242495C06495416&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws02-sharding.png&quot; height=&quot;354&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Reducing your&amp;nbsp;&lt;strong&gt;blast radius&lt;/strong&gt;&amp;nbsp;: 장애가 발생하면 모든 면에서 영향을 최소화 해라.&lt;/li&gt;&lt;li&gt;2차 변경: Cell based architectures 로 변경 (cell 단위 독립적으로 구성, 한 곳에 문제가 생겨도 영향도를 최소화함)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/997C394D5C06496E0D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws03-cell-based-architectures.png&quot; height=&quot;353&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Cell based Architectures&lt;/strong&gt;: AWS 는 모두 Cell 단위로 구성되어 있음 (심지어 AZ (Availability Zone) 안에서도 Cell 단위로 구성되어 영향도 최소화 했음)&amp;nbsp;→ 근데 왜 한국 Region 은 장애가....???)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/999B1F445C06498734&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws04-zone.png&quot; height=&quot;355&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;AZ 서비스에서 DynamoDB 는 Cell 단위로 구성되어 DB 장애가 일어나도 최소화 됨.&lt;/li&gt;&lt;li&gt;Relational databases: not designed for the cloud (Sharding 을 하더라도 결국 Database 로 인해 서비스가 종속되게 됨)&lt;/li&gt;&lt;li&gt;Decompose the system into&amp;nbsp;&lt;strong&gt;fundamental building blocks&amp;nbsp;&lt;/strong&gt;-&amp;gt; 그래야 multi tenant, fault tolerant, self healing 서비스를 구현 가능&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;Amazon Aurora: Scaled-out distributed architecture (Database aware storage service)&lt;/h3&gt;&lt;p data-mce-style=&quot;margin-left: 30.0px;&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 30px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/999393425C0649C507&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws05-Aurora.png&quot; height=&quot;354&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;AWS 에서 가장 빠르게 성장하는 서비스 중에 하나임&lt;/li&gt;&lt;li&gt;AZ 단위로 분산이 가능하고 Cell based Architectures 로 mission critical 한 서비스 구현이 가능&lt;/li&gt;&lt;li&gt;On&amp;nbsp;&lt;strong&gt;quorums&lt;/strong&gt;&amp;nbsp;and&amp;nbsp;&lt;strong&gt;failures&lt;/strong&gt;&amp;nbsp;를 적용하였기에 이런 서비스를 구현 가능했음 (AZ 단위로 분산)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99F68A495C0649DF14&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws06-MTBF and MTTR.png&quot; height=&quot;354&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;AZ 마다 2개의 인스턴스를 띄우고 AZ 가 하나 죽고 다른 AZ 에서 인스턴스 1개가 죽어도 read 는 가능, 하지만 쓰기는 못함&lt;/li&gt;&lt;li&gt;10G 링크로 되어 있어 click 만으로 빠르게 복구되어 MTBF(Mean time between failures) 와 MTTR(Mean time to repair) 를 줄일 수 있음&lt;/li&gt;&lt;li&gt;Aurora 는 log 만 복사하기 때문에 복제 및 복구가 빠름 (storage node 에서 복사가 이루어짐)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9945944D5C0649FA36&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws07-log is the database.png&quot; height=&quot;354&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;AWS Aurora 는&lt;strong&gt;&amp;nbsp;Cloud native database as a foundation for innovation&amp;nbsp;&lt;/strong&gt;이다.&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/994AFC435C064A130A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws08-cloud-native-database.png&quot; height=&quot;353&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ASW 유형별 Databases 종류&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995E314C5C064A2B08&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws09-Purpose-built databases.png&quot; height=&quot;354&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px;&quot;&gt;&lt;li&gt;Relational - Amazon Aurora, Amazon RDS&lt;/li&gt;&lt;li&gt;Key Value - Amazon DynamoDB&lt;/li&gt;&lt;li&gt;Document - Amazon DynamoDB&lt;/li&gt;&lt;li&gt;In-Memory - Amazon ElasticCache&lt;/li&gt;&lt;li&gt;Graph - Amazon Neptune&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Time-Series (New) - Amazon Timestream&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Ledger (New) - Amazon QLDB&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;How to migrate Oracle to DynamoDB&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;Amazon item master service : sharding 된 Oracle databases 24개로 구성 (6,000억 레코드가 있으며, 50억 update 가 1day 에 일어남), 1년에 30~40% 정도 증가함&lt;/li&gt;&lt;/ul&gt;&lt;p data-mce-style=&quot;margin-left: 30.0px;&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 30px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99983B4A5C064A4006&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws10-item-offers-service.png&quot; height=&quot;354&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;Oracle 을 DynamoDB 로 변경 (schema 변경 및 Database Migration 진행)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993D54485C064A5E09&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws11-oracle schema-dynamoDB schema.png&quot; height=&quot;355&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Database Migration Service (6,000억 레코드 migration을 live 로 진행)&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99157B485C064A782F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws12-database-migration-service.png&quot; height=&quot;353&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS S3 - Mai-lan Tomsen Bukovec (Vice President, Amazon S3 and Glacier)&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;전체 10 Trillions objects 가 저장되어 있음&lt;/li&gt;&lt;li&gt;한개의 리전에서 최대 1초에 60 Terabytes 를 관리함&lt;/li&gt;&lt;li&gt;초기에 8개의 microservices 로 구성됨, 현재는 235개 이상의 분산 mircroservices 로 구성됨&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS Redshift&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;2018년 11월 1일 아주 큰 Oracle data warehouse 를 Redshift 로 옮김 (올해 가장 기쁜 순간)&lt;/li&gt;&lt;li&gt;성능 향상을 이룸&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995C2B465C064A900A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws13-increase performance Redshift.png&quot; height=&quot;355&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;지난주 (11월 4째주)&amp;nbsp;&lt;strong&gt;Redshift concurrency scaling&lt;/strong&gt;&amp;nbsp;기능 새로 소개&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99B122465C064AA805&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws14-Redshift concurrency scaling.png&quot; height=&quot;355&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS Lambda&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;&lt;p&gt;고객들이 serverless 로 가려고 하는가?&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/992D11465C064ABB10&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws15-why flocking serverless.png&quot; height=&quot;354&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px;&quot;&gt;&lt;li&gt;No Infrastructure provisioning, no management&lt;/li&gt;&lt;li&gt;Automatic scaling&lt;/li&gt;&lt;li&gt;Highly available and secure&lt;/li&gt;&lt;li&gt;Pay for value&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;2014년 Preview 공개 후 2015년 GA 로 오픈&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Worker:&amp;nbsp;&lt;/strong&gt;고객의 function 코드가 로딩되고 실행되는 환경&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Firecracker (New)&lt;/strong&gt;: serverless computing을 위한 안전하고 빠른 microVMs&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/992A694F5C064ACF1B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws16-Firecracker.png&quot; height=&quot;355&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px;&quot;&gt;&lt;li&gt;KVM hardware virtualizations&lt;/li&gt;&lt;li&gt;실행되는데 125ms 소요 (1개의 호스트에서 1초에 150 microVMs 실행 가능)&lt;/li&gt;&lt;li&gt;1개의 microVM 당 5MB 메모리 사용 (1개의 호스트에 수천개의 microVM 을 띄울 수 있음)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Lambda runtime 환경&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9969834C5C064B1608&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws17-lambda runtime.png&quot; height=&quot;355&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS 의 기능과 서비스의 95% 고객의 피드백으로 부터 개발된 것임&lt;/h3&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9908AC4C5C064B302D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws17-2-IDEs-Langauges-ProgrammingModels-Workflows.png&quot; height=&quot;355&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS Toolkits 새로운 IDEs&lt;/h3&gt;&lt;p data-mce-style=&quot;margin-left: 30.0px;&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 30px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99BCFE505C064B4504&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws18-new IDEs.png&quot; height=&quot;354&quot; style=&quot;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;PyCharm&lt;/li&gt;&lt;li&gt;IntelliJ&lt;/li&gt;&lt;li&gt;VS Code&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS Lambda 신규 기능&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;사실상 모든 언어 지원 가능해 졌음&lt;ul style=&quot;margin: 0px;&quot;&gt;&lt;li&gt;기존 지원 언어: NodeJS, JavaScript, Python, Java, .Net, Go&lt;/li&gt;&lt;li&gt;신규 지원 언어: Ruby&lt;/li&gt;&lt;li&gt;Lambda 에 Custom Runtime 적용 가능 (Ruby 도 그렇게 구현한 것으로 C++, Erlang 등 다른 언어 들도 적용하여 쓸 수 있음)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Lambda Layers: Lambda 를 라이브러리 형태의 함수로 만들어 재사용 가능&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:630px;text-align: center; font-size: 13.3333px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9985F4455C064B5B01&quot; filemime=&quot;image/jpeg&quot; filename=&quot;aws19-lambda layer.png&quot; height=&quot;353&quot; style=&quot;text-align: center; font-size: 13.3333px;&quot; width=&quot;630&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 13.3333px;&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Nested Applications using Serverless Application Repository (New)&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;&lt;strong&gt;AWS Step Functions&amp;nbsp;&lt;/strong&gt;&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;기존에는 workflow 를 Sequential steps, Parallel steps, Branching steps 로 지원&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Step Functions service Integrations (New)&lt;/strong&gt;: Step Functions 을 AWS 의 8개 서비스와 함께 쓸 수 있게 지원&lt;ul style=&quot;margin: 0px;&quot;&gt;&lt;li&gt;Step Functions 함께 쓸 수 있는 AWS 8개 서비스: Batch, ECS, Fargate(컨테이너 배포 서비스), Glue(ETL서비스), DynamoDB, SNS, SQS, SageMaker&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS API Gateway 에서 WebSocket 지원&amp;nbsp;&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;WebSocket 을 통해 Stateful 지원 가능&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS ALB 에서 Lambda 지원&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;ALB (Amazon Load Balancer) 뒷단에 Lambda 를 바로 연결 가능&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;Amazon Managed Streaming for Kafka&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;Fully managed and highly-available Apache Kafka service&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS Well-Architected site&lt;/h3&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;a href=&quot;https://aws.amazon.com/architecture/well-architected/&quot; data-mce-href=&quot;https://aws.amazon.com/architecture/well-architected/&quot; style=&quot;color: rgb(59, 115, 175) !important;&quot;&gt;Amazon Well-Architected&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px; line-height: 1.3; overflow-wrap: break-word;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;margin: 30px 0px 0px; color: rgb(23, 43, 77); font-size: 16px; line-height: 1.5; font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica;&quot;&gt;AWS Well-Architected Tool&lt;/h3&gt;&lt;ul style=&quot;margin: 10px 0px 0px; color: rgb(85, 85, 85); font-family: &amp;quot;맑은 고딕&amp;quot;, seoul, arial, helvetica; font-size: 13.3333px;&quot;&gt;&lt;li&gt;Measure and improve your architecture using AWS Well-Architectured best practices&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/246&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>AWS</category>
<category>AWS</category>
<category>AWS CTO</category>
<category>AWS re:Invent 2018</category>
<category>Keynote</category>
<category>Werner Vogels</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/246</guid>
<comments>https://ahnseungkyu.com/246#entry246comment</comments>
<pubDate>Tue, 04 Dec 2018 09:06:31 +0900</pubDate>
</item>
<item>
<title>docker container 활용 #5</title>
<link>https://ahnseungkyu.com/245</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;이번에는 docker 이미지 최적화에 대해서 설명하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이미지 최적화를 위해서는 다음의 3가지를 잘 활용하면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1. 레이어를 줄이기 위해서 다중 RUN 명령어는 하나의 RUN 명령어로 구성&lt;br /&gt;2. 파일 복사와 라이브러리 Install 은 순서가 중요&lt;br /&gt;3. 컴파일과 같은 작업은 Multistep build 를 이용&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;alpine linux 로 nginx 를 실행시기 위한 방법으로 다음과 같은 docker 이미지를 만들 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;먼저, nginx.conf 파일을 로컬 컴퓨터에 생성합니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ vi nginx.conf&lt;/p&gt;&lt;p&gt;user www;&lt;br /&gt;worker_processes auto;&lt;/p&gt;&lt;p&gt;error_log /var/log/nginx/error.log warn;&lt;br /&gt;pid /var/run/nginx.pid;&lt;/p&gt;&lt;p&gt;events {&lt;br /&gt;&amp;nbsp; &amp;nbsp; worker_connections 1024;&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;http {&lt;br /&gt;&amp;nbsp; &amp;nbsp; include /etc/nginx/mime.types;&lt;br /&gt;&amp;nbsp; &amp;nbsp; default_type application/octet-stream;&lt;br /&gt;&amp;nbsp; &amp;nbsp; sendfile on;&lt;br /&gt;&amp;nbsp; &amp;nbsp; access_log /var/log/nginx/access.log;&lt;br /&gt;&amp;nbsp; &amp;nbsp; keepalive_timeout 3000;&lt;br /&gt;&amp;nbsp; &amp;nbsp; server {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; listen 80;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; root /www;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; index index.html index.htm;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; server_name localhost;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; client_max_body_size 32m;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; error_page 500 502 503 504 /50x.html;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; location = /50x.html {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; root /var/lib/nginx/html;&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음은 간단한 index.html 입니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ vi index.html&lt;/p&gt;&lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;br /&gt;&amp;lt;html lang=&quot;en&quot;&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;lt;title&amp;gt;HTML5&amp;lt;/title&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; Server is online&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 두 파일을 활용한 Dockerfile 은 다음과 같습니다.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ vi Dockerfile&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;FROM alpine:3.8&lt;br /&gt;RUN apk update&lt;br /&gt;RUN apk add --no-cache nginx&lt;br /&gt;RUN adduser -D -g 'www' www&lt;br /&gt;RUN mkdir /www&lt;br /&gt;RUN chown -R www:www /var/lib/nginx&lt;br /&gt;RUN chown -R www:www /www&lt;/p&gt;&lt;p&gt;COPY nginx.conf /etc/nginx/nginx.conf&lt;br /&gt;COPY index.html /www/index.html&lt;/p&gt;&lt;p&gt;ENTRYPOINT [&quot;nginx&quot;]&lt;br /&gt;CMD [&quot;-g&quot;, &quot;daemon off;&quot;]&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;docker 이미지를 빌드하고 실행시키면 index.html 결과를 얻을 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ sudo docker build -t seungkyua/nginx-alpine .&lt;/p&gt;&lt;p&gt;$ docker run -d -p 30080:80 --name nginx-alpine seungkyua/nginx-alpine&lt;/p&gt;&lt;p&gt;$ curl http://localhost:30080&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h3&gt;하나의 RUN 명령어로 구성&lt;/h3&gt;&lt;p&gt;여기서 첫번째 이미지 최적화 포인트가 보입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;앞의 Dockerfile 에서 하나의 RUN 은 하나의 이미지 레이어가 되므로 이것을 하나로 다음과 같이 줄일 수 있습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN apk update &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;apk add --no-cache nginx &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;adduser -D -g 'www' www &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;mkdir /www &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;chown -R www:www /var/lib/nginx &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;chown -R www:www /www&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번에는 nodejs docker 이미지를 만들어 보겠습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$&amp;nbsp;package.json &lt;br /&gt;{&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;name&quot;: &quot;docker_web_app&quot;,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;version&quot;: &quot;1.0.0&quot;,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;description&quot;: &quot;Node.js on Docker&quot;,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;private&quot;: true,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;author&quot;: &quot;Seungkyu Ahn &amp;lt;seungkyua@gmail.com&amp;gt;&quot;,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;main&quot;: &quot;server.js&quot;,&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;scripts&quot;: {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; &quot;start&quot;: &quot;node server.js&quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; },&lt;br /&gt;&amp;nbsp; &amp;nbsp; &quot;dependencies&quot;: {&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; &quot;express&quot;: &quot;^4.16.1&quot;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ vi server.js&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'use strict';&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;const express = require('express');&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;const PORT = 8080;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;const HOST = '0.0.0.0';&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;const app = express();&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;app.get('/', (req, res) =&amp;gt; {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &lt;/span&gt;res.send('Hello world\n');&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;});&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;app.listen(PORT, HOST);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;console.log(`Running on http://${HOST}:${PORT}`);&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ vi Dockerfile&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;FROM node:8&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN mkdir -p /app&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;COPY package*.json /app/&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;WORKDIR /app&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;COPY . /app&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;s1&quot;&gt;RUN npm install --only=production&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;EXPOSE 8080&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;CMD [ &quot;npm&quot;, &quot;start&quot; ]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;파일 COPY 와 관련 라이브러리 설치 순서가 중요&lt;/h3&gt;&lt;p&gt;위의 Dockerfile 의 경우 현재 디렉토리 소스를 COPY 한 후에 npm install 을 수행합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;docker 이미지는 변경된 레이어만 build 되지만 연관된 하위 레이어까지 build 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서는 현재 디렉토리 소스가 변경되면 npm install 을 매번 다시 수행합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러므로 일단 package 설치를 먼저하고 COPY 를 나중에 하면 package 설치 내용이 변경되지 않는다면 npm install 은 캐시를 바로 사용하여 설치하지 않습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;s1&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;s1&quot;&gt;RUN npm install --only=production&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;COPY . /app&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막으로, 컴파일 하는 소스의 docker 이미지를 살펴보겠습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$ vi hello.c&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;int main ()&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &lt;/span&gt;printf (&quot;Hello, world!\n&quot;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &lt;/span&gt;return 0;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ vi Dockerfile&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;FROM alpine:3.8&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN apk update &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;apk add --update alpine-sdk&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN mkdir -p /app&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;COPY . /tmp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;WORKDIR /tmp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN gcc hello.c -o hello&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;ENTRYPOINT [&quot;/tmp/hello&quot;]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;h3&gt;Multistep build 활용&lt;/h3&gt;&lt;p&gt;위의 경우에 c 컴파일을 하기 위해 c 컴파일로가 들어있는 sdk 패키지를 설치하고 바이너리 파일로 컴파일을 하므로 이미지 사이즈가 커집니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서 build 단계를 활용하면 sdk 패키지는 제외하고 최종 바이너리 파일만 docker 이미지에 넣을 수 있습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;$ vi Dockerfile&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;FROM alpine:3.8 &lt;strong&gt;AS build&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN apk update &amp;amp;&amp;amp; \&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;apk add --update alpine-sdk&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN mkdir -p /app&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;COPY . /tmp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;WORKDIR /tmp&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;RUN gcc hello.c -o hello&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;FROM alpine:3.8&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;COPY &lt;strong&gt;--from=build&lt;/strong&gt; /tmp/hello /app/hello&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;p1&quot;&gt;&lt;span class=&quot;s1&quot;&gt;ENTRYPOINT [&quot;/app/hello&quot;]&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아래 이미지 사이즈는 build 스텝을 활용하지 않은 파일 사이즈와 활용한 사이즈의 차이입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;seungkyua/c-hello-world&amp;nbsp; &amp;nbsp; &amp;nbsp; 176MB&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;















































































































&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;seungkyua/c-hello-world&amp;nbsp; &amp;nbsp; &amp;nbsp; 4.42MB&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/245&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Container</category>
<category>docker</category>
<category>image최적화</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/245</guid>
<comments>https://ahnseungkyu.com/245#entry245comment</comments>
<pubDate>Thu, 01 Nov 2018 15:47:26 +0900</pubDate>
</item>
<item>
<title>docker container 활용 #4</title>
<link>https://ahnseungkyu.com/244</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;p&gt;docker 이미지가 어떻게 구성되는지 이해하기 위해서는 Copy-on-write 정책을 이해해야 합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아래와 같은 Dockerfile 이 있고 이를 이미지로 만들었을 때 이미지가 차지하는 스토리지 구성은 다음과 같습니다.&lt;/p&gt;&lt;p&gt;(아래 Dockerfile 은 sample 파일로 make tool 까지 있다고 가정합니다.)&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ubuntu&lt;/span&gt;:&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;COPY&lt;/span&gt; . /&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CMD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;python&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://docs.docker.com/v17.09/engine/userguide/storagedriver/images/container-layers.jpg&quot; alt=&quot;container-layers.jpg&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;이미지 출처:&amp;nbsp;https://docs.docker.com/v17.09/engine/userguide/storagedriver/images/container-layers.jpg&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;가장 아래 레이어 d3a1f33e8a5a 는 ubuntu:15.04 이미지 입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 다음 바로 위의 c22013c84729 는 현재 디렉토리의 이하의 모든 소스를 /app 디렉토리 아래 복사한 이미지 레이어입니다. (COPY . /app 명령에 의한)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;d74508fb6632 는 RUN make /app 가 실행된 이미지 레이어이고, 마지막으로 91e54dfb1179 는 CMD python /app/app.py 이미지 레이어입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Dockerfile 에서 하나의 명령어는 하나의 이미지 레이어 이며, 여기까지 이미지는 Read Only 이미지로 컨테이너가 실행되어도 바꿀 수 없습니다.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;위의 Dockerfile 로 만든 이미지로 컨테이너가 실행되면 제일 상단의 Container Layer 로 Thin Read/Write 스토리지가 생기며, 여기에만 데이터 쓰기가 가능합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;같은 이미지로 컨테이너 인스턴스를 여러 개 실행시켜도 이미지는 공유하며&amp;nbsp;Container Layer 만 각 인스턴스별로 생겨 자신의 쓰기 스토리지가 생기는 구조이며, 기본적으로 컨테이너가 실행되면서 생긴 스토리지는 실행된 컨테이너가 삭제될 때 같이 삭제됩니다.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;위의 Dockerfile 에서 두번째 라인이 현재 디렉토리를 /app 아래로 복사는 명령어에서 현재 디렉토리에 있는 파일이 변경되었다고 가정해 봅시다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;

















&lt;/p&gt;&lt;p&gt;다시 이미지를 만들 경우 맨아래 d74508fb6632 이미지 레이어는 링크로 그대로 활용되고, c22013c84729 이미지 레이어를 먼저 복사하고(copy), 수정된 파일들을 /app 디렉토리 아래로 복사하는(write) 부분이 일어나며 그 이후의 이미지 레이어들은 계속 실행됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Dockerfile 을 작성할 때 기본 예약 명령어는 다음과 같습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;FROM nginx:alpine&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;nginx 이미지의 alpine 태그를 Base 이미지로 사용합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;RUN mkdir -p /app&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;mkdir -p /app 명령을 실행합니다. shell 명령어를 쓸 때 사용합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ADD source.tar /app/&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;source.tar 를 /app 디렉토리 아래에 풉니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ADD http://ahnseungkyu.com/release /data/&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;인터넷의 http://ahnseungkyu.com/release 파일을 /data 디렉토리 아래에 다운받습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;COPY . /app&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;현재 디렉토리의 모든 파일과 하위 디렉토리를 /app 디렉토리 아래로 복사합니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;COPY ./conf /app/conf&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;conf 디렉토리 아래의 모든 파일과 하위 디렉토리를 /app/conf 디렉토리 아래로 복사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;COPY ./*.js /app/&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;현재 디렉토리으 모든 js 파일을 /app 디렉토리 아래로 복사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;추가로 Dockerfile 을 작성할 때 가장 기본이 되는 CMD 와 ENTRYPOINT 의 차이에 대해서 알아보겠습니다.&lt;/p&gt;&lt;p&gt;Dockerifle 에서는 기본적으로 최소 하나의 CMD 혹은 ENTRYPOINT 가 있어야 하며, 둘 다 있을 수 도 있습니다.&lt;/p&gt;&lt;p&gt;즉, docker 를 실행할 때 CMD 로 호출하거나 ENTRYPOINT 로 호출 할 수 있습니다.&lt;/p&gt;&lt;p&gt;아래 alpine ping Dockerfile 을 예로 살펴보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;From alpine:latest&lt;/p&gt;&lt;p&gt;RUN apk update &amp;amp;&amp;amp; apk add --update iputils \&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;amp;&amp;amp; rm -rf /var/cache/apk/*&lt;/p&gt;&lt;p&gt;CMD [&quot;ping&quot;, &quot;-c&quot;, &quot;3&quot;, &quot;8.8.8.8&quot;]&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서는 CMD 를 사용하여 ping -c 3 8.8.8.8 명령어를 실행했습니다.&lt;/p&gt;&lt;p&gt;docker 이미지를 만들고 실행해보면 결과가 잘 나옵니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ sudo docker build -t seungkyua/alpine-sample .&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ sudo docker run --name alipine-sample --rm -it seungkyua/alpine-sample&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이것을 ENTRYPOINT 사용으로 바꾸면 다음과 같습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;From alpine:latest&lt;/p&gt;&lt;p&gt;RUN apk update &amp;amp;&amp;amp; apk add --update iputils \&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;amp;&amp;amp; rm -rf /var/cache/apk/*&lt;/p&gt;&lt;p&gt;ENTRYPOINT [&quot;ping&quot;, &quot;-c&quot;, &quot;3&quot;, &quot;8.8.8.8&quot;]&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;똑같이 결과가 나타납니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럼 이 둘의 차이는 무엇일까요? 그건 둘 다 사용했을 때 알 수 있습니다. 다음과 같이 바꿔보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;From alpine:latest&lt;/p&gt;&lt;p&gt;RUN apk update &amp;amp;&amp;amp; apk add --update iputils \&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;amp;&amp;amp; rm -rf /var/cache/apk/*&lt;/p&gt;&lt;p&gt;ENTRYPOINT [&quot;ping&quot;]&lt;/p&gt;&lt;p&gt;CMD [&quot;-c&quot;, &quot;3&quot;, &quot;8.8.8.8&quot;]&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결과가 똑같습니다. 하지만 여기서 아래와 같이 docker 를 실행할 때 8.8.8.8 을 맨 뒤에 추가하면 결과가 달라집니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;$ sudo docker run --name alipine-sample --rm -it seungkyua/alpine-sample 8.8.8.8&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막의 CMD 부분이 argument 로 처리 되는데 8.8.8.8 이라는 argument 가 override 되어 -c 3 8.8.8.8 부분이 8.8.8.8 로 되어 버립니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결과적으로 ENTRYPOINT 와 CMD 를 함께 쓰는 경우는 CMD argument 를 override 하고 싶을 때 사용할 수 있기 때문에 가능하면 둘 다 사용하는 방법을 추천드립니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-6292884203190541&quot;
     data-ad-slot=&quot;8864253314&quot;
        &gt;
&lt;/ins&gt;
&lt;script&gt;(adsbygoogle = window.adsbygoogle || []).push({});&lt;/script&gt;
&lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://ahnseungkyu.com/244&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Container</category>
<category>docker</category>
<category>Layer</category>
<author>Kubernetes Korea co-leader seungkyua@gmail.com</author>
<guid>https://ahnseungkyu.com/244</guid>
<comments>https://ahnseungkyu.com/244#entry244comment</comments>
<pubDate>Tue, 30 Oct 2018 19:23:50 +0900</pubDate>
</item>
<item>
<title>docker container 활용 #3</title>
<link>https://ahnseungkyu.com/243</link>
<description>&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;