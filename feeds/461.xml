<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Developer's Delight</title>
<link>https://sonseungha.tistory.com/</link>
<description>Linux System Programmer.

Tizen Framework Programmer.

linuxias@gmail.com

https://github.com/linuxias/

https://linuxias.gitbooks.io/

https://www.linkedin.com/in/seungha-son-a97a02b3/</description>
<language>ko</language>
<pubDate>Sun, 12 May 2019 14:17:00 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>Linuxias</managingEditor>
<image>
<title>Developer's Delight</title>
<url>https://tistory1.daumcdn.net/tistory/1135772/attach/789073b7b20d4abbac3d4ee7d94fb25e</url>
<link>https://sonseungha.tistory.com</link>
<description>Linux System Programmer.

Tizen Framework Programmer.

linuxias@gmail.com

https://github.com/linuxias/

https://linuxias.gitbooks.io/

https://www.linkedin.com/in/seungha-son-a97a02b3/</description>
</image>
<item>
<title>User Namespace(1)</title>
<link>https://sonseungha.tistory.com/520</link>
<description>&lt;h1&gt;User Namespace&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;먼저 이 글에서 사용한 코드는 linux kernel 4.16 임을 알려드립니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;User namespace는 시큐리티와 관련된 식별자 및 속성을 분리하며, 특히 User ID와 Group ID, 루트 디렉토리, Key, Capability를 분리합니다. 프로세스의 User, Group ID는 user namespace 내,외부적으로 다를수 있습니다. 특히 프로세스는 User namespace 외부에 권한이 없는 정상적인 User ID를 가질 수 있으며, 동시에 namepsace 내부에 User ID 0을 가질 수 있습니다. 즉, 프로세스에는 user namespace 내의 작업에 대한 전체 권한이 있지만 namespace 외부 작업에 대한 권한이 없습니다.&lt;/p&gt;
&lt;h2&gt;Nested namespaces, Namespace membership&lt;/h2&gt;
&lt;p&gt;User namespace는 PID namespace 처럼 중첩되어 질 수 있습니다. 이 말은 root namespace를 제외하고 각 User namespace는 부모 user namespace를 가질 수 있다는 것입니다. 다른 관점에서 본다면 User namespace는 0개 또는 그 이상의 자식 User namespace를 가질 수 있습니다. 부모 User namespace는 &lt;strong&gt;CLONE_NEWUSER&lt;/strong&gt; flag를 사용한 &lt;strong&gt;unshare(2)&lt;/strong&gt; 또는 &lt;strong&gt;clone(2)&lt;/strong&gt; 시스템콜을 통해 user namespace를 생성하는 프로세스의 namespace입니다. 음, 새로 생성된 namespace는 그 namespace를 생성하는 프로세스의 namespace를 부모 namespace로 가진다는 의미입니다.&lt;/p&gt;
&lt;p&gt;커널은 이렇게 중첩할 수 있는 user namespace의 레벨을 32개로 제한하고 있습니다.&lt;/p&gt;
&lt;p&gt;아래 &lt;strong&gt;struct user_namespace&lt;/strong&gt;를 살펴보시죠. 아래 line.61에 &lt;strong&gt;int level;&lt;/strong&gt; 구조체 멤버변수가 보이시나요? user namespace 는 이처럼 레벨을 관리하고 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt; File path : include/linux/user_namespace.h

 55 struct user_namespace {
 56     struct uid_gid_map  uid_map;
 57     struct uid_gid_map  gid_map;
 58     struct uid_gid_map  projid_map;
 59     atomic_t        count;
 60     struct user_namespace   *parent;
 61     int         level;
 62     kuid_t          owner;
 63     kgid_t          group;
 64     struct ns_common    ns;
 65     unsigned long       flags;
 66
 67     /* Register of per-UID persistent keyrings for this namespace */
 68 #ifdef CONFIG_PERSISTENT_KEYRINGS
 69     struct key      *persistent_keyring_register;
 70     struct rw_semaphore persistent_keyring_register_sem;
 71 #endif
 72     struct work_struct  work;
 73 #ifdef CONFIG_SYSCTL
 74     struct ctl_table_set    set;
 75     struct ctl_table_header *sysctls;
 76 #endif
 77     struct ucounts      *ucounts;
 78     int ucount_max[UCOUNT_COUNTS];
 79 } __randomize_layout;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;만약 limit을 초과하게 되면 &lt;strong&gt;EUSERS&lt;/strong&gt; 에러가 발생하게 됩니다.&lt;/p&gt;
&lt;p&gt;모든 프로세스들은 User namespace 중 하나에 속합니다. 여러분들이 프로세스 생성에 많이 사용하는 &lt;strong&gt;fork(2)&lt;/strong&gt;, &lt;strong&gt;clone(2)&lt;/strong&gt;을 사용할 때 flag로 &lt;strong&gt;CLONE_NEWUSER&lt;/strong&gt;를 전달하지 않는다면 해당 시스템 콜을 호출한 프로세스의 User namespace에 속하게 됩니다. 싱글스레드 프로세스는 &lt;strong&gt;setns(2)&lt;/strong&gt; 시스템 콜을 사용하여 다른 user namespace로 포함될 수 있습니다. 조건은 &lt;strong&gt;setns(2)&lt;/strong&gt; 시스템 콜을 호출하는 프로세스가 &lt;strong&gt;CAP_SYS_ADMIN&lt;/strong&gt; Capability를 가지고 있어야 합니다.&lt;/p&gt;
&lt;p&gt;여기서 주의할 점은 멀티스레드 프로세스에서는 &lt;strong&gt;setns(2)&lt;/strong&gt; 시스템 콜을 호출한 스레드만 namespace가 변경되어 버립니다. 그럼, 이상한 문제점들이 발생하게 될겁니다.&lt;/p&gt;
&lt;p&gt;하나의 스레드만 적용되는 이유는 아래 코드에서 확인할 수 있습니다. &lt;strong&gt;setns(2)&lt;/strong&gt; 시스템 콜을 호출하게 되면 아래 함수가 수행됩니다. 여기서 line.268을 확인해보시면 현재 task_struct를 가져오게되고, line.283에서 task_struct를 가져와 namespace를 생성하게 되는데, 스레드는 각각의 task_struct를 가지고 있기에, 해당 thread에 대해서만 변경이 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;  File path : kernel/nsproxy.c
  266 SYSCALL_DEFINE2(setns, int, fd, int, nstype)
  267 {
  268     struct task_struct *tsk = current;
  269     struct nsproxy *new_nsproxy;
  270     struct file *file;
  271     struct ns_common *ns;
  272     int err;
  273
  274     file = proc_ns_fget(fd);
  275     if (IS_ERR(file))
  276         return PTR_ERR(file);
  277
  278     err = -EINVAL;
  279     ns = get_proc_ns(file_inode(file));
  280     if (nstype &amp;amp;&amp;amp; (ns-&amp;gt;ops-&amp;gt;type != nstype))
  281         goto out;
  282
  283     new_nsproxy = create_new_namespaces(0, tsk, current_user_ns(), tsk-&amp;gt;fs);
  284     if (IS_ERR(new_nsproxy)) {
  285         err = PTR_ERR(new_nsproxy);
  286         goto out;
  287     }
  288
  289     err = ns-&amp;gt;ops-&amp;gt;install(new_nsproxy, ns);
  290     if (err) {
  291         free_nsproxy(new_nsproxy);
  292         goto out;
  293     }
  294     switch_task_namespaces(tsk, new_nsproxy);
  295
  296     perf_event_namespaces(tsk);
  297 out:
  298     fput(file);
  299     return err;
  300 }&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Capability&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CLONE_NEWUSER&lt;/strong&gt; flag를 이용하여 &lt;strong&gt;clone(2)&lt;/strong&gt; 시스템 콜로 생성된 자식 프로세스는 새로운 User namespace에서 완전한 Capability 집합을 가지고 실행됩니다. 마찬가지로 &lt;strong&gt;unshare(2)&lt;/strong&gt;, &lt;strong&gt;setns(2)&lt;/strong&gt; 시스템 콜도 마찬가지로 Namepsace 내부에서 Capability의 전체 집합을 가지게 됩니다.&lt;/p&gt;
&lt;p&gt;반면에, 새로운 네임 스페이스가 생성 되더라도 그 프로세스는 부모 네임 스페이스 (클론 (2)의 경우) 또는 이전 (&lt;strong&gt;unshare(2)&lt;/strong&gt; 및 &lt;strong&gt;setns(2)&lt;/strong&gt;의 경우) User namepsace의 CCapability를 갖지 않습니다 또는 루트 사용자 (즉, Root User namepsace에서 사용자 ID가 0 인 프로세스)에 의해 조인됩니다.&lt;/p&gt;
&lt;p&gt;다른 경우로서, &lt;strong&gt;execve(2)&lt;/strong&gt;를 호출하면 프로세스의 기능이 일반적인 방법으로 재계산됩니다 이 방식은 이 글의 범위를 벗어나기 때문에 다루지 않겠습니다. 관심있으신 분은 &lt;strong&gt;capabilites(7)&lt;/strong&gt; 을 참조해주세요결과적으로 Namespace 내에 프로세스의 사용자 ID가 0이 아니거나 실행 가능 파일에 비어 있지 않은 상속 기능 마스크가 있으면 프로세스가 모든 기능을 잃게됩니다. 음, 자세한 내용은 아래에서 다시 다루겠습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;clone(2)&lt;/strong&gt; 또는 &lt;strong&gt;unshared(2)&lt;/strong&gt; 를 이용해 새로운 IPC, mount, network, PID, UTS namespace를 생성할 때 커널은 새로운 Namespace에 대해 생성한 프로세스의 User namespace를 기록합니다. 새로운 Namespace의 프로세스가 나중에 Namespace 내에 격리된 전역 리소스에서 작동하는 권한 작업을 수행하면 커널이 새 Namespace와 연결된 User namespace의 프로세스 Capability에 따라 검사가 수행됩니다. 즉 Namepsace의 Capability는 User namespace와 상호작용하며 체크하게 된다는 것입니다.&lt;/p&gt;
&lt;h2&gt;Restrictions on mount namespaces&lt;/h2&gt;
&lt;p&gt;mount namespace 관련하여 정리한 내용입니다.&lt;/p&gt;
&lt;p&gt;mount namespace는 owner user namespace를 가지고 있습니다. owner user namespace가 상위 mount namespace의 owner user namespace와 다른 mount namespace는 권한이 낮은 mount namespace로 간주됩니다. 낮은 권한의 mount namespace가 생성될 때 공유 마운트는 슬레이브 마운트로 축소됩니다. 이렇게하면 권한이 낮은 mount namespace에서 수행 된 매핑이보다 많은 권한을 가진 mount namespace로 전파되지 않습니다.&lt;/p&gt;
&lt;p&gt;더 많은 권한을 가진 마운트에서 하나의 단위로 나오는 마운트는 함께 잠기고 특권이 적은 mount namespace에서 분리되지 않을 수 있습니다.&lt;/p&gt;
&lt;p&gt;파일 및 디렉토리에 대해서는 다른 namespace 마운트 지점이 아닌 하나의 namespace의 마운트 지점인 파일 또는 디렉터리는 마운트 지점이 아닌 mount namespace에서 이름을 변경하거나 연결 해제하거나 제거(rmdir(2))할 수 있다.&lt;br&gt;다른 mount namespace에서 마운트 포인트의 파일, 디렉토리를 삭제, rename, unlink를 시도하게 되면 &lt;strong&gt;EBUSY&lt;/strong&gt; 에러가 나타납니다. 이런 결과는 특권이 많은 사용자로부터 DoS 공격을 막기 위한 방안입니다.&lt;/p&gt;
&lt;p&gt;User Namespace의 추가적인 사항은 다음 글에서 이어서 작성하겠습니다. 감사합니다.&lt;/p&gt;
&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Container</category>
<category>Linux</category>
<category>Mount Namespace</category>
<category>namespace</category>
<category>Network namespace</category>
<category>PID namespace</category>
<category>User namespace</category>
<category>UTS namespace</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/520</guid>
<comments>https://sonseungha.tistory.com/520#entry520comment</comments>
<pubDate>Wed, 08 May 2019 11:02:12 +0900</pubDate>
</item>
<item>
<title>PID Namespace</title>
<link>https://sonseungha.tistory.com/519</link>
<description>&lt;h1&gt;PID Namespace&lt;/h1&gt;
&lt;p&gt;PID namespace는 프로세스 ID 공간을 격리 시킵니다. 이 말인 즉, 다른 PID namespace의 프로세스들은 같은 PID를 가질 수도 있음을 의미합니다. PID namespace들은 프로세스 집합의 종료, 재시작과 같은 기능을 제공하기 위한 컨테이너를 허용합니다. 또한 컨테이너를 새로운 호스트로 마이그레이션하는 등의 기능을 컨테이너가 제공할 수 있도록 해줍니다.&lt;/p&gt;
&lt;p&gt;PID namepsace의 특이한 점은 새로운 PID namespace의 PID는 1 부터 시작한다는 것입니다. standalone 시스템과 동일하게 각 namespace의 시작 프로세스는 pid를 1번을 가지게됩니다. PID namespace를 사용하기 위해선 &lt;strong&gt;CONFIG_PID_NS&lt;/strong&gt; 커널 옵션을 설정해야 합니다.&lt;/p&gt;
&lt;h3&gt;The namespace init process&lt;/h3&gt;
&lt;p&gt;CLONE_NEWPID flag를 파라미터로 한 unshare(2) 시스템 콜을 호출한 이후, 또는 clone(2) 시스템 콜의 flag로 CLONE_NEWPID를 전달하여 생성한 프로세스는 새로운 Namespace의 첫 번째 프로세스가 됩니다. 이 말인 즉, 이 프로세스의 PID가 1번이라는 것입니다.&lt;/p&gt;
&lt;p&gt;조금 혼란스러울 수 있습니다. 리눅스에서 PID는 고유하며, 프로세스의 식별자로 사용이 되는데, 새로운 Namespace의 첫 번째 프로세스의 PID가 1번이라면, 중복될테니까요. 그 이후 이 프로세스에 자식 프로세스들도 2,3,4... 와 같은 PID를 가질 수 있다는 말이됩니다. 식별자로써의 가치가 사라지게 되는 것일까요? 조금씩 정리해보도록 하겠습니다.&lt;/p&gt;
&lt;p&gt;새로운 PID namespace의 첫 번째 프로세스의 PID가 1번이라고 말씀드렸습니다. 그 의미는 해당 namespace를 위한 init process가 된다는 의미입니다. 아래 그림처럼 새로운 namespace는 PID 1번부터 시작하게 됩니다. 뭔가 속임수 같나요?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://uploads.toptal.io/blog/image/674/toptal-blog-image-1416487554032.png&quot; alt=&quot;Parent PID namespace&quot;&gt;&lt;/p&gt;
&lt;p&gt;그림 출처 : &lt;a href=&quot;https://www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linux-namespaces&quot;&gt;https://www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linux-namespaces&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;만약 8,1 두 개의 PID를 가진 프로세스에서 &lt;strong&gt;getpid(2)&lt;/strong&gt; 시스템 콜을 호출하게 되면, 어떤 결과가 리턴 될까요? 결과는 1입니다. PID를 이용해 동작하는 시스템 콜들은 항상 호출자의 PID namespace 내에 표시되는 PID를 사용하게 됩니다. 그렇기 때문에 child PID namespace에서 표시되는 1이 반환됩니다.&lt;/p&gt;
&lt;p&gt;namespace 동작 중에 init process가 종료되면 어떻게 될까요? 만약 PID namespace 내의 init process가 종료된다면, 커널은 &lt;strong&gt;SIGKILL&lt;/strong&gt; 시그널을 통해 해당 namespace 내에 모든 프로세스를 종료시키게 됩니다. 이 의미는 PID namespace가 정상적으로 동작하기 위해선 PID 1의 init process가 필수적이란 의미입니다.&lt;/p&gt;
&lt;p&gt;init process에 시그널을 보낼 수 있는 경우는 시그널 핸들러에 등록한 시그널들만 PID namespace의 다른 프로세스들에 의해 전달될 수 있습니다. 이러한 제한은 권한이 있는 프로세스들에게도 해당되며 실수로 init process가 PID namespace 내의 다른 멤버 프로세스에 의해 종료되는 것을 막아주게됩니다. 마찬가지로 상위 PID namespace의 프로세스는 자식 PID namespace의 init process가 등록한 시그널 &lt;strong&gt;kill(2)&lt;/strong&gt;을 호출하여 전달할 수 있습니다. 여기서 &lt;strong&gt;SIGKILL&lt;/strong&gt;과 &lt;strong&gt;SIGSTOP&lt;/strong&gt;은 예외적으로 처리되는데요, 상위 PID namespace에서 시그널을 전달하면 init process에서는 처리할 수 없기에, 해당 시그널이 처리되어 프로세스 종료 및 중지가 발생하게 됩니다.&lt;/p&gt;
&lt;h3&gt;Nesting PID namespace&lt;/h3&gt;
&lt;p&gt;PID Namespace는 중첩해서 사용이 가능합니다. 그 말은, 각 PID namespace는 상위(부모) namespace를 가지고 있습니다.(root PID namespace는 제외입니다 :D) PID namepsace의 부모 namespace는 &lt;strong&gt;clone(2)&lt;/strong&gt; 또는 &lt;strong&gt;unshare(2)&lt;/strong&gt;를 사용하여 namespace를 생성한 프로세스의 PID namepsace가 됩니다. 이러한 구조는 PID namespace가 트리 자료구조 형태로 이루어져 있습니다. 모든 namepsace는 자신의 상위 namespace들(root namespace 포함)을 언제든 찾을 수 있습니다.&lt;/p&gt;
&lt;p&gt;특정 Namespace에 속한 프로세스는 해당 namespace에 속한 프로세스들과, 상위 모든(root namespace로 가는 경로의) namespace 프로세스들에게 보여집니다. 보여진다는 의미는 해당 프로세스를 타겟으로 작업을 진행할 수 있다는 의미입니다. 하지만 반대로 자식 PID namespace에서는 부모나 제거된 상위 namespace의 프로세스들을 볼 수 없습니다. 정리하면, 프로세스는 오직 자신의 PID namsepace의 프로세스들이나 자식 namespace들의 프로세스들만 볼 수 있습니다.&lt;/p&gt;
&lt;p&gt;특정 PID namespace내의 프로세스들은 가끔 namespace 외부에 부모 프로세스를 가지는 경우가 있습니다. 첫 번째는 위에서 살펴보았듯이, Namespace가 생성된 후 첫 프로세스는 자신을 생성한 프로세스가 부모프로세스가 됩니다. 이 경우엔 부모와 자식 프로세스가 각각 다른 PID namespace에 존재하게 됩니다. 두 번째로 &lt;strong&gt;setns(2)&lt;/strong&gt; 시스템콜을 이용하여 특정 PID namespace로 조인하게 되는 경우입니다. 조인할 수 있는 PID namespace는 자식 PID namespace으로만 가능합니다. 완전 다른 방향의 namespace로는 불가능합니다. 잘 생각하셔야 할게 지금 설명드리는 부분은 namespace간 부모, 자식 관계가 아닌 프로세스의 부모, 자식 관계입니다.&lt;/p&gt;
&lt;h3&gt;/proc 파일시스템과 PID namespace&lt;/h3&gt;
&lt;p&gt;/proc 파일시스템은 /proc 파일시스템이 다른 Namespace에서 보여지더라도 마운트를 수행한 프로세스의 PID namespace에 보이는 프로세스만 보여줍니다. 새 PID namespace를 만든 후에는 ps (1)와 같은 툴이 정상적으로 작동하도록 /proc 파일시스템에 새로운 procfs 인스턴스를 마운트하고 루트 디렉토리를 변경하는 것이 좋습니다. clone (2) 또는 unshare(2)의 flags에 CLONE_NEWNS를 포함하여 새로운 마운트 네임 스페이스를 동시에 생성하면 루트 디렉토리를 변경할 필요가 없습니다. 새로운 procfs 인스턴스를 /proc에 직접 마운트 할 수 있습니다.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;mount -t proc proc /proc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PID namespace는 container에서 유용하게 사용되는 기술 중 하나입니다. 추가적인 내용들은 정리되는대로 갱신하겠습니다. 글 읽어주셔서 감사합니다.&lt;/p&gt;
&lt;p&gt;감사합니다.&lt;/p&gt;
&lt;p&gt;참조 :&lt;br&gt;&lt;a href=&quot;https://www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linux-namespaces&quot;&gt;https://www.toptal.com/linux/separation-anxiety-isolating-your-system-with-linux-namespaces&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Container</category>
<category>container</category>
<category>IPC namespace</category>
<category>Linux</category>
<category>Mount Namespace</category>
<category>namespace</category>
<category>Network namespace</category>
<category>PID namespace</category>
<category>User namespace</category>
<category>UTS namespace</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/519</guid>
<comments>https://sonseungha.tistory.com/519#entry519comment</comments>
<pubDate>Fri, 03 May 2019 18:48:23 +0900</pubDate>
</item>
<item>
<title>Namespace Overview</title>
<link>https://sonseungha.tistory.com/518</link>
<description>&lt;h1&gt;Namespace&lt;/h1&gt;
&lt;p&gt;namespace 기술은 cgourp(Control Group)과 함께 컨테이너(Container) 솔루션을 구성하는 기술 중 하나입니다. 이번 글에서는 namespcae에 대해 정리한 후linux에서 제공하는 namespcae의 종류에 대해 정리하고자 합니다.&lt;/p&gt;
&lt;p&gt;namespace는 전역 시스템 리소스를 추상화하여 전역 리소스의 자체 격리 인스턴스가있는 namespace 내의 프로세스에 표시 되도록합니다. 전역 리소스에 대한 변경은 namespace의 멤버, 즉 동일한 namespace를 가진 다른 프로세스에서 볼 수 있지만 다른 namespace를 가진 프로세스에서는 보이지 않습니다. namespcae를 사용하는 것은 컨테이너를 구현하는 것입니다.&lt;/p&gt;
&lt;h3&gt;namespace의 종류&lt;/h3&gt;
&lt;p&gt;리눅스에서 제공하는 namespace 들은 아래와 같습니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Namespace&lt;/th&gt;
&lt;th&gt;Constant&lt;/th&gt;
&lt;th&gt;Isolates&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;IPC&lt;/td&gt;
&lt;td&gt;CLONE_NEWIPC&lt;/td&gt;
&lt;td&gt;System V IPC, POSIX message queues&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network&lt;/td&gt;
&lt;td&gt;CLONE_NEWNET&lt;/td&gt;
&lt;td&gt;Network devices, stacks, ports, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mount&lt;/td&gt;
&lt;td&gt;CLONE_NEWNS&lt;/td&gt;
&lt;td&gt;Mount points&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PID&lt;/td&gt;
&lt;td&gt;CLONE_NEWPID&lt;/td&gt;
&lt;td&gt;Process IDs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User&lt;/td&gt;
&lt;td&gt;CLONE_NEWUSER&lt;/td&gt;
&lt;td&gt;User and group IDs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UTS&lt;/td&gt;
&lt;td&gt;CLONE_NEWUTS&lt;/td&gt;
&lt;td&gt;Hostname and NIS domain name&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;namespace API&lt;/h2&gt;
&lt;p&gt;namespace API에는 아래의 시스템 콜과 함께 /proc 파일이 포함됩니다.&lt;br&gt;먼저 system call에 대해 설명드립니다.&lt;/p&gt;
&lt;h3&gt;시스템 콜&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;API&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;setns(2)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;setns 시스템 콜은 호출하는 프로세스가 존재하는 namespace에 조인합니다. 조인하고자 하는 namespace는 /proc/[pid]/ns 디렉토리 아래 존재하는 하나의 namespace 파일디스크립터(fd) 를 이용합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clone(2)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;clone(2) 시스템 콜은 새로운 프로세스를 생성합니다. 시스템 콜 호출 시 &lt;strong&gt;flags&lt;/strong&gt; argument로 &lt;strong&gt;CLONE_NEW*&lt;/strong&gt; flag를 하나 이상 전달합니다. CLONE_NEW* flag는 위에서 설명한 바 있습니다. 그럼 각 flag에 해당하는 새로운 namespace가 생성되며 그 namepsaces의 멤버로 자식 프로세스가 생성됩니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unshare(2)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;unshare() 시스템 콜을 호출한 프로세스를 새로운 namespace로 이동시킵니다. 만약 &lt;strong&gt;flags&lt;/strong&gt; argutment가 &lt;strong&gt;CLONE_NEW*&lt;/strong&gt; flag를 입력한다면, 새로운 namespace가 생성되고, 해당 namespace의 멤버로 이동합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;여기서 유의할 점은 clone(2) 와 unshare(2) 시스템 콜을 사용하여 새로운 namespace들을 생성하기 위해선 **CAP_SYS_ADMIN** capability가 필요합니다. user namespace 생성은 예외적으로 privilege가 필요하지 않습니다.&lt;/p&gt;
&lt;h3&gt;/proc/[pid]/ns 디렉토리&lt;/h3&gt;
&lt;p&gt;그럼 /proc 파일시스템에서 namespace에 대해 간략히 정리하겠습니다. 모든 프로세스들은 /proc/[pid]/ns 디렉토리가 존재합니다. 아래 ns 디렉토리에 여러 namespace가 존재하는 것을 확인할 수 있습니다. 이 namespace는 setns(2) 시스템 콜을 이용해 namespace를 변경하고자 할 때 변경을 원하는 namespace의 fd로 사용됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l /proc/$$/ns
total 0
lrwxrwxrwx. 1 mtk mtk 0 Jan 14 01:20 ipc -&amp;gt; ipc:[4026531839]
lrwxrwxrwx. 1 mtk mtk 0 Jan 14 01:20 mnt -&amp;gt; mnt:[4026531840]
lrwxrwxrwx. 1 mtk mtk 0 Jan 14 01:20 net -&amp;gt; net:[4026531956]
lrwxrwxrwx. 1 mtk mtk 0 Jan 14 01:20 pid -&amp;gt; pid:[4026531836]
lrwxrwxrwx. 1 mtk mtk 0 Jan 14 01:20 user -&amp;gt; user:[4026531837]
lrwxrwxrwx. 1 mtk mtk 0 Jan 14 01:20 uts -&amp;gt; uts:[4026531838]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;각 namespace 별 proc 파일은 다음과 같습니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;namespace&lt;/th&gt;
&lt;th&gt;/proc file&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;IPC namespace&lt;/td&gt;
&lt;td&gt;/proc/[pid]/ns/ipc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mount namespace&lt;/td&gt;
&lt;td&gt;/proc/[pid]/ns/mount&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network namespace&lt;/td&gt;
&lt;td&gt;/proc/[pid]/ns/net&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PID namespace&lt;/td&gt;
&lt;td&gt;/proc/[pid]/ns/pid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User namespace&lt;/td&gt;
&lt;td&gt;/proc/[pid]/ns/user&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uts namespace&lt;/td&gt;
&lt;td&gt;/proc/[pid]/ns/uts&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;Namespace 간략 정리&lt;/h2&gt;
&lt;p&gt;각 Namespace의 상세내용은 다른 글로 정리하고자 하며, 여기서는 간략하게 정리하고자 합니다.&lt;/p&gt;
&lt;h3&gt;IPC namespace (CLONE_NEWIPC)&lt;/h3&gt;
&lt;p&gt;IPC namespace는 특정 IPC 자원들(System V IPC,와 POSIX message queue)을 격리시킵니다. 특정 IPC 자원들의 공통적인 특징은 IPC 객체가 파일시스템 경로명 외의 메커니즘으로 식별된다는 것입니다. System V IPC에는 메시지 큐, 세마포어, 공유메모리를 가리킵니다.&lt;/p&gt;
&lt;h3&gt;Network namespace (CLONE_NEWNET)&lt;/h3&gt;
&lt;p&gt;Network namespace는 네트워크와 관련된 시스템 자원의 격리, 고립을 제공합니다. 해당되는 시스템 자원으로는 네트워크 디바이스들, IPv4, IPv6 프로토콜 스택, IP routing tables, 방화벽, /proc/net 디렉토리, /sys/class/net 디렉토리, 포트 번호 등등이 있습니다. 물리적 네트워크 장치는 정확히 하나의 네트워크 네임스페이스를 가질 수 있습니다. 가상 네트워크 장치는 네트워크 namespace 간에 터널을 생성하는데 사용할 수 있는 추상화된 파이프를 제공합니다.&lt;/p&gt;
&lt;p&gt;Network namespace가 해제되면, 물리 네트워크 장치는 초기 Network namespace로 변경됩니다. Network namespace를 사용하기 위해선 &lt;strong&gt;CONFIG_NET_NS&lt;/strong&gt; 커널 옵션이 설정되어 있어야 합니다.&lt;/p&gt;
&lt;h3&gt;Mount namespaces (CLONE_NEWNS)&lt;/h3&gt;
&lt;p&gt;Mount namespace는 파일시스템 마운트 지점의 집합을 고립, 격리합니다. 즉, 서로 다른 Mount namespace의 프로세스가 파일 시스템 구조에 대해 다른 뷰를 가질 수 있습니다. &lt;strong&gt;mount(2)&lt;/strong&gt;, &lt;strong&gt;umount(2)&lt;/strong&gt; 를 이용해 Mount namespace 내에 마운트 집합들을 수정할 수 있습니다.&lt;/p&gt;
&lt;p&gt;/proc/[pid]/mounts 파일은 현재 프로세스의 Mount namespace에 마운트된 모든 파일시스템을 나열합니다. 이 파일의 포맷은 &lt;strong&gt;fstab(5)&lt;/strong&gt;를 참고해주세요.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;seunghason@linuxias$cat /proc/self/mounts
sysfs /sys sysfs rw,nosuid,nodev,noexec,relatime 0 0
proc /proc proc rw,nosuid,nodev,noexec,relatime 0 0
udev /dev devtmpfs rw,nosuid,relatime,size=16413672k,nr_inodes=4103418,mode=755 0 0

...

binfmt_misc /proc/sys/fs/binfmt_misc binfmt_misc rw,relatime 0 0
tmpfs /run/user/1000 tmpfs rw,nosuid,nodev,relatime,size=3288548k,mode=700,uid=1000,gid=1000 0 0
gvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1000,group_id=1000 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;/proc/[pid]/mountstat 파일은 프로세스의 Mount namespace의 마운트 지점에 대한 정적, 설정 정보들을 보여줍니다. 보여지는 정보에 대한 것은 아래를 참고해주세요.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;device /dev/sda7 mounted on /home with fstype ext3 [statistics]
(       1      )            ( 2 )             (3 ) (4)
The fields in each line are:
(1)  The name of the mounted device (or &amp;quot;nodevice&amp;quot; if there is no corresponding device).
(2)  The mount point within the filesystem tree.
(3)  The filesystem type.
(4)  Optional statistics and configuration information.
     Currently (as at Linux 2.6.26), only NFS filesystems export information via this field.&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;PID namespace&lt;/h3&gt;
&lt;p&gt;PID namespace는 프로세스 ID 공간을 격리 시킵니다. 이 말인 즉, 다른 PID namespace의 프로세스들은 같은 PID를 가질 수도 있음을 의미합니다. PID namespace들은 프로세스 집합의 종료, 재시작과 같은 기능을 제공하기 위한 컨테이너를 허용합니다. 또한 컨테이너를 새로운 호스트로 마이그레이션하는 등의 기능을 컨테이너가 제공할 수 있도록 해줍니다.&lt;/p&gt;
&lt;p&gt;PID namepsace의 특이한 점은 새로운 PID namespace의 PID는 1 부터 시작한다는 것입니다. standalone 시스템과 동일하게 각 namespace의 시작 프로세스는 pid를 1번을 가지게됩니다.&lt;/p&gt;
&lt;p&gt;PID namespace를 사용하기 위해선 &lt;strong&gt;CONFIG_PID_NS&lt;/strong&gt; 커널 옵션을 설정해야 합니다.&lt;/p&gt;
&lt;h3&gt;User namespace&lt;/h3&gt;
&lt;p&gt;User namespace는 시큐리티와 관련된 식별자 및 속성을 분리하며, 특히 User ID와 Group ID, 루트 디렉토리, Key, Capability를 분리합니다. 프로세스의 User, Group ID는 user namespace 내,외부적으로 다를수 있습니다. 특히 프로세스는 User namespace 외부에 권한이 없는 정상적인 User ID를 가질 수 있으며, 동시에 namepsace 내부에 User ID 0을 가질 수 있습니다. 즉, 프로세스에는 user namespace 내의 작업에 대한 전체 권한이 있지만 namespace 외부 작업에 대한 권한이 없습니다. 자세한 내용은 다른 글로 살펴보겠습니다.&lt;/p&gt;
&lt;h3&gt;UTS namespace&lt;/h3&gt;
&lt;p&gt;UTS namespace는 두개의 시스템 식별자를 고립, 격리시킵니다. 두 개의 시스템 식별자는 hostname과 NIS domain name입니다. 이 식별자들은 &lt;strong&gt;sethostname(2)&lt;/strong&gt;, &lt;strong&gt;setdomainname(2)&lt;/strong&gt;으로 설정가능합니다. UTS namespace의 사용은 &lt;strong&gt;CONFIG_UTS_NS&lt;/strong&gt; 커널 옵션을 설정해야 합니다.&lt;/p&gt;
&lt;p&gt;이상으로 Namespace에 대해 간단히 정리해보았습니다. 다음 글에서 각 namespace의 사용 및 예제에 대해 다뤄보겠습니다.&lt;/p&gt;
&lt;p&gt;감사합니다.&lt;/p&gt;
&lt;p&gt;참고 :&lt;br&gt;linux manual page - namespaces&lt;/p&gt;
&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Container</category>
<category>container</category>
<category>IPC namespace</category>
<category>Linux</category>
<category>Mount Namespace</category>
<category>namespace</category>
<category>Network namespace</category>
<category>PID namespace</category>
<category>User namespace</category>
<category>UTS namespace</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/518</guid>
<comments>https://sonseungha.tistory.com/518#entry518comment</comments>
<pubDate>Fri, 03 May 2019 00:22:44 +0900</pubDate>
</item>
<item>
<title>[Opengrok] java heap space Problem</title>
<link>https://sonseungha.tistory.com/516</link>
<description>&lt;h2&gt;java heap space Problem&lt;/h2&gt;
&lt;p&gt;잘 사용하던 Opengrok에서 java heap space 문제가 발생하였습니다.&lt;br&gt;&lt;br&gt;&lt;br&gt;매우 큰 프로젝트, 예를 들어 안드로이드 같은 경우에는 JVM의 heap 사이즈로는 메모리에 로드하기 어려움으로써 발생하는 문제입니다.&lt;br&gt;&lt;br&gt;&lt;br&gt;저는 Opengrok을 Tomcat/Apache을 사용하기 때문에 아래와 같은 방법으로 해결하였습니다.&lt;br&gt;HTTP 헤더 사이즈의 제한을 변경하시면 됩니다.&lt;br&gt;&lt;br&gt;&lt;br&gt;/etc/tomcat/server.xml을 아래와 같이 수정해 줍니다.&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;Connector port=&amp;quot;8888&amp;quot; protocol=&amp;quot;HTTP/1.1&amp;quot;
           connectionTimeout=&amp;quot;20000&amp;quot;
           maxHttpHeaderSize=&amp;quot;65536&amp;quot;
           redirectPort=&amp;quot;8443&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

&lt;p&gt;Opengrok service를 동작시키는 다양한 환경에 따라 조치하는 방법이 다양합니다.&lt;br&gt;&lt;br&gt;&lt;br&gt;해당 방법은 아래 링크를 참조해 주세요.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/oracle/opengrok/wiki/Tuning-for-large-code-bases&quot;&gt;Tuning for large code bases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;감사합니다.&lt;/p&gt;
&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/516</guid>
<comments>https://sonseungha.tistory.com/516#entry516comment</comments>
<pubDate>Tue, 30 Apr 2019 16:06:23 +0900</pubDate>
</item>
<item>
<title>[S/W Architecture] Hierarchical Software Architecture</title>
<link>https://sonseungha.tistory.com/515</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Hierarchical Software Architecture, 한국어로 계층적 소프트웨어 아키텍처라 불리는 아키텍처에 대해 정리하겠습니다.&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Hierarchical Architecture는&amp;nbsp;전체 시스템을 계층 구조적으로 나뉘어져 있으며 계층적으로 서로 다른 레벨의 서브시스템으로 구성되어 있습니다. Hierarchical Software Architecture는 매우 다양한 곳에서 사용되고 있습니다. 운영체제, 네트워크 프로토콜 계층들, 인터프리터, 그 외 다양한 곳에서 사용되고 있는데요, 이 아키텍처의 가장 대표적인 구조로서 여러분들이 가장 많이 접해본 아키텍처의 한 예가&amp;nbsp;안드로이드 일 것 같습니다.&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://t1.daumcdn.net/cfile/tistory/9985F7365C9A34E51B' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://t1.daumcdn.net/cfile/tistory/9985F7365C9A34E51B' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F9985F7365C9A34E51B' width=&quot;500&quot; height=&quot;406&quot; style=&quot;width: 500px; height: 406px;&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위 안드로이드 아키텍처를 보시면 Applications, Application Framework, Libraries, Linux Kernel 까지 여러 개의 서브시스템이 계층적으로 구성되어 하나의 시스템을 이루고 있습니다. 각 서브시스템은 상위 시스템이 하위 시스템을 호출하는 구조, 즉 Call-and-Return 연결 구조를 가집니다. 서로 다른 계층 레벨들은 Method Invocation에 의해 연결되어 있으며 하위 레벨의 서브시스템이 상위 레벨 서브시스템에게 필요한 서비스를 제공하는 방식으로 구성됩니다.&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이런 Hierarchical Software Architecture 스타일을 가지는 여러 아키텍처들이 존재합니다. 각 아키텍처에 대해서는 다른 글로 다룰 예정이니 참고 바랍니다.&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;- Master - Slave Architecture&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;- Layered Architecture&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;- Virtual Machine Architecture&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;- Plug-in Architecture&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;- Micro-kernel Architecture&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Hierarchical Software Architecture를 적용하기 위해서 몇 가지 주의해야 할 부분들이 있습니다. 먼저, 계층을 나누는 기준이 명확해야 합니다. 각 계층은 하위 계층만을 의존해야 하며, 각 계층을 명확하고 특정적인 태스크를 처리하도록 분리해야 합니다. 다음으로 계층을 몇 개로 나눌지도 고민해야 합니다. 무조건 많거나 무조건 적다고 좋은 것이 아닌 본인이 설계하는 시스템에 가장 접합한 계층의 수를 정의해야합니다. 세 번째로 각 계층에 대한 인터페이스를 정의해야 합니다. 인터페이스를 잘 정의해야 계층의 수정사항이 발생하여도 다른 계층에 영향을 주지 않도록 정의되어야 합니다. 마지막으로 각 계층에서 발생한 에러를 어떻게 처리할 지 고민해야 합니다. 해당 에러를 그 계층에서 처리할 지 아니면, 상위 계층에게 전달할지에 대한 부분도 잘 정의해야합니다.&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Hierarchical Software Architecture에 대해 간단히 정리해 보았습니다. 감사합니다.&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Architecture</category>
<category>hierarchical</category>
<category>Hierarchy Architecture</category>
<category>layered</category>
<category>Master-Slave</category>
<category>MicroKernel</category>
<category>Plug-In</category>
<category>software</category>
<category>virtual machine</category>
<category>계층구조적</category>
<category>아키텍처</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/515</guid>
<comments>https://sonseungha.tistory.com/515#entry515comment</comments>
<pubDate>Tue, 26 Mar 2019 23:55:35 +0900</pubDate>
</item>
<item>
<title>[S/W Architecture] Process Control Architecture</title>
<link>https://sonseungha.tistory.com/512</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;Process Control Architecture는 Data Flow Architecture 분류에 속하는 아키텍처입니다. 해당 분류에 속하는 아키텍처는 이전에 다뤘던 Batch Sequential, Pipe and Filter Architecture가 있습니다. 자세한 내용은 아래 링크 참고 부탁드립니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;https://sonseungha.tistory.com/507&quot; target=&quot;_blank&quot;&gt;2019/03/10 - [Developer's Delight/Software Architecture] - [S/W Architecture] Data Flow Software Architectures&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;https://sonseungha.tistory.com/508&quot; target=&quot;_blank&quot;&gt;2019/03/10 - [Developer's Delight/Software Architecture] - [S/W Architecture] Batch Sequential Architecture&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;https://sonseungha.tistory.com/510&quot; target=&quot;_blank&quot;&gt;2019/03/14 - [Developer's Delight/Software Architecture] - [S/W Architecture] Pipe and Filter Architecture&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Process Control Architecture에 대해 간략히 정리해보겠습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Process Control의 가장 큰 특징은 데이터의 흐름이 프로세스의 실행을 제어하는 변수 집합이라는 것입니다. 한 번에 이해하기 어려운 말인 것 같습니다. 좀 더 살펴보겠습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Process Control Architecture는 임베디드 시스템에서 많이 사용됩니다. 시스템이 프로세스를 제어할 수 있는 변수에 의해 조작되는 시스템에 알맞는 아키텍처입니다. 많은 임베디드 시스템은 연속적으로 동작해야 합니다. 안정된 상태에 대한 출력 데이터를 유지하는게 가장 중요한 시스템입니다. 예를 들어 크루즈나 화장실 변기를 많이 예시로 듭니다. 화장실 변기 물을 내리면 다시 물이 차오릅니다. 그 때 차오르는 물의 높이는 항상 일정합니다. 이러한 시스템은 물의 높이 즉 출력 데이터를 안정화 시키기 위해 프로세스가 데이터를 제어하게 되는 구조가 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;해당 시스템을 구성하는 몇 개의 서브시스템이 있는데 각 서브시스템은 아래와 같습니다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Controlled Variable :&amp;nbsp;기본 시스템에 대한 값을 제공하며 센서에 의해 측정되어지는 값&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Input Variable :&amp;nbsp;프로세스에 대한 입력 값&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Manipulated Variable :&amp;nbsp;컨트롤러에 의해 조정되거나 변경되는 값&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Process :&amp;nbsp;변수를 조작하기 위한 메커니즘&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Sensor :&amp;nbsp;시스템 제어와 같련된 변수의 값을 구하며 조작된 변수를 재계산 하기 위한 피드백으로 사용&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Set Point :&amp;nbsp;이 값은 제어된 변수에 대한 원하는 값&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Control Algorithm :&amp;nbsp;프로세스 변수 조작 방법을 결정하는데 사용함&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:577px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F9913CF335C924CC920F84C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9913CF335C924CC920&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2019-03-20 23-22-50.png&quot; height=&quot;437&quot; width=&quot;577&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(140, 140, 140);&quot;&gt;출처 : &lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(140, 140, 140);&quot;&gt;https://www.cs.cmu.edu/afs/cs/project/tinker-arch/www/html/Tutorial_Slides/Soft_Arch/base.097.html&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;위 그림은 Cruise Control 시스템의 예제입니다. 자동차의 크루즈 모드는 일정한 속도를 유지하기 위한 시스템입니다. 원하는 속도가 입력 값이 되고 컨트롤러에 의해 Throttle이 설정됩니다. 해당 Throttle은 엔진을 동작하게 만들고 엔진은 바퀴를 회전시킵니다. 바퀴의 회전은 센서에 의해 측정되고 Controller에게 전달됩니다. Controller는 Desired Speed에 도달할 때 까지 지속적으로 Throttle을 설정하게됩니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;위 와 같은 시스템이 Process Control Architecture를 적용한 시스템이라고 보시면 됩니다. 바퀴의 회전을 센서로 다시 컨트롤러에게 전달되는데요, 이처럼 출력 데이터가 다시 컨트롤러의 입력으로 전달되어 Close-loop 형태를 뛰는 구조들이 있습니다. 만약 출력 데이터가 다시 피드백 되지 않는다면 Open-loop 형태라고 합니다. Close-loop Feedback은 Open-loop보다 출력 데이터를 제어하는데 훨씬 좋은 구조라는 것을 알 수 있을겁니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;이상으로 Process Control Architecture에 대해 정리해보았습니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;감사합니다.&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Close-loop Feedback</category>
<category>Process Control Architecture</category>
<category>S/W Architecture</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/512</guid>
<comments>https://sonseungha.tistory.com/512#entry512comment</comments>
<pubDate>Wed, 20 Mar 2019 23:28:55 +0900</pubDate>
</item>
<item>
<title>[Python] 문자열에 문자열 리스트의 요소가 포함되어 있는지 찾기</title>
<link>https://sonseungha.tistory.com/511</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;많은 사람들이 문자열에 특정 문자열이 존재하는지, 또는 문자열 리스트에서 특정 문자열이 존재하는지를 많이 확인합니다. 이번에는 문자열에 문자열 리스트의 요소가 포함되어 있는지 찾는 방법에 대해 알아 보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;아래와 같은 문자열 리스트&amp;nbsp;이 있다고 가정합시다. 그리고 해당 리스트의 요소가 특정 문자열 내에 포함되는지를 알고 싶습니다. 가장 단순하게 생각했을 때 아래와 같이 찾을 수 있을 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;file_format&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;[&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'son'&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'seungha'&lt;/span&gt;&amp;nbsp;]&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;file_name&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;seungha'&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;format&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;file_format:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;format&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;file_name:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color:#066de2&quot;&gt;format&lt;/span&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;python의 any method를 사용하면 다른 방식으로 문제를 해결할 수 있습니다.&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;file_format&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;[&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'son'&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'seungha'&lt;/span&gt;&amp;nbsp;]&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;file_name&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;'My&amp;nbsp;name&amp;nbsp;is&amp;nbsp;seungha'&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;any(&lt;span style=&quot;color:#066de2&quot;&gt;format&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;file_name&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;format&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;file_format):&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;print&lt;/span&gt;(&lt;span style=&quot;color:#066de2&quot;&gt;format&lt;/span&gt;)&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;p&gt;&lt;span style=&quot;color: white; font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;cs&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;두 개의 코드는 동일한 동작을 합니다. any의 동작은 검색해 보시면 많이 나오니 참고 부탁드립니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;감사합니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Python</category>
<category>any</category>
<category>python</category>
<category>문자열에 리스트 요소 찾기</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/511</guid>
<comments>https://sonseungha.tistory.com/511#entry511comment</comments>
<pubDate>Wed, 20 Mar 2019 20:14:35 +0900</pubDate>
</item>
<item>
<title>[S/W Architecture] Pipe and Filter Architecture</title>
<link>https://sonseungha.tistory.com/510</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Data flow Architecture에는 Batch Sequential, Pipe and Filter, Process Control Architecture 로 3가지로 분류할 수 있습니다. 그 중 Pipe and Filter Architecture에 대해 정리해보려 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Pipe and Filter Architecture는 데이트 스트림을 처리하는&amp;nbsp;시스템을 위한 구조를 제공합니다. 데이터를 처리하는 각 프로세싱 단계는 Filter 컴포넌트 내부에 포함되어 있습니다. 데이터는 Filter 사이를 Pipe를 통해 전달되게됩니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 75px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile2.uf.tistory.com%2Fimage%2F99545C3F5C89238C0A5135&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99545C3F5C89238C0A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;캡처.PNG&quot; height=&quot;75&quot; original=&quot;yes&quot; style=&quot;width: 600px; height: 75px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이러한 구조로 인해 Pipe and Filter Architecture는 Batch Sequential Architecture와 많이 비교됩니다. Batch Sequential Architecture에 대해에서는 아래 글을 참조해주세요.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;https://sonseungha.tistory.com/508&quot; target=&quot;_blank&quot;&gt;2019/03/10 - [Developer's Delight/Software Architecture] - [S/W Architecture] Batch Sequential Architecture&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Pipe and Filter 구조의 구성요소는 크게 3가지 입니다. 데이터 스트림, 필터, 그리고 파이프입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;데이터 스트림은 XML이나 Json 파이트 스트림 등 first-in / first-out 버퍼를 가지고 있습니다. 특정 시스템에서는 마샬링, 언마샬링도 사용합니다. 다음 구성요소인 필터는 Pipe and Filter Architecture에서 독립적으로 데이터 스트림을 처리하는 구성요소입니다. 입력 데이터 스트림으로부터 데이터를 읽고, 읽어들인 데이터를 처리한 후 다음 필터로 전달하도록 파이프로 데이터를 전달합니다. Pipe and Filter는 데이터가 연결된 파이프를 통해 전달되면 그 즉시 처리를 하고 다음 필터로 전달합니다. 필터를 독립적으로 동작하므로 시스템에서 자유롭게 교체 및 추가가 가능합니다. 여기서 필터는 2가지 타입으로 다시 분류할 수 있습니다. Active(능동형) 필터와 Passive(수동형) 필터입니다. 먼저 능동형 필터는 데이터를 가져오고 전달하는 것을 필터에서 처리하고 수동형 필터는 파이프가 필터로부터 데이터를 가져오고, 다음 필터로 전달합니다. 즉 능동형 필터는 수동형 파이프와 함께 동작하고 수동형 필터는 능동형 파이프와 함께 동작합니다. 마지막 구성요소인&amp;nbsp;파이프는 필터 사이에 데이터 스트림을 이동하는 경로입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Pipe and Filter 구조는 리눅스 사용자라면 많이 사용하는 파이프를 생각하시면 편합니다.&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;$cat example.txt | grep 'test'&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;위와 같은 예제는 쉽게 이해할 수 있습니다. cat을 이용해 example.txt 내부 문자열들을 파이프를 통해 grep에게 전달되고 처리하게 됩니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이러한 Pipe and Filter Architecture의 장점은 Concurrency(동시성), Reusability(재사용), Modifiability(변경용이성), Simplicity(단순성), Flexibility(유연함)입니다. Concurrency는 과도한 데이터 처리에 대해 각 필터가 독립적으로 동작하여 높은 처리량을 얻을 수 있습니다. Reusability는 각 필터가 독립적으로 동작되며 다른 필터와의 종속성이 없으므로 각 필터를 다른 시스템에 재사용이 가능합니다.&amp;nbsp;Modifiability는 필터 간 종속성이 낮기에 새로운 필터를 추가하거나 수정, 제거했을때에도 시스템에 다른 수정을 최소화 할 수 있습니다. 두 필터 사이의 파이프가 존재한다는 매우 단순한 구조를 가지고 있으며 각 해당 시스템의 데이터를 Sequential하게 Parallel하게 수행이 가능함으로 유연한 구조를 만들 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;하지만, Pipe and Filter 구조에도 여러 단점이 있습니다. 데이터 스트림 형태가 고정된 형태의 구조이기에 동적으로 데이터 포맷을 변경하는 구조에는 알맞지 않습니다. 만약 A 필터로 이미지가 입력되었는데 출력으로는 XML 포맷으로 출력하고 B 필터는 XML을 입력받아 Character Stream으로 출력한다면, 이 구조의 장점인 변경용이성, 유연함을 잃어버리게 됩니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이런 장점과 단점을 이해하고 정확하게 필요한 곳에 구조를 적용하는 연습이 필요할 것 같습니다. 마지막으로 많이 비교되는 Batch Sequential Architecture와의 차이점을 정리하고 글을 끝맺겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;Batch Sequential 과의 차이점&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위에서 정리한 내용을 보면 Batch Sequential Architecture와 매우 유사해 보이지만 큰 차이점을 가지고 있습니다. Batch Sequential은 데이터가 처리되고 다음 데이터 처리 단계로 넘어가기 위해선 이전 데이터 처리가 모두 완료되어야 합니다. 즉 A에서 B 처리 단계로 데이터가 전달되기 위해선 모든 데이터가 A처리가 완료된 이후 B로 입력됩니다. 하지만 Pipe And Filter Architecture는 데이터 스트림 처리를 위한 구조로서 A 단계에서 모든 데이터가 처리되고 B의 입력이 되는 것이 아닌 A 단계에서 먼저 처리된 데이터는 바로 B의 입력으로 Pipe를 통해 전달됩니다. 100개의 데이터가 있을 때 Batch Sequential은 100개가 모두 처리된 이후 다음 스텝으로 입력되지만, Pipe And Filter는 100개 중 처리된 데이터는 B로 전달됩니다. 이 점이 가장 큰 차이입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;감사합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Data flow architecture</category>
<category>Filter</category>
<category>pipe</category>
<category>pipe and filter</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/510</guid>
<comments>https://sonseungha.tistory.com/510#entry510comment</comments>
<pubDate>Thu, 14 Mar 2019 00:27:29 +0900</pubDate>
</item>
<item>
<title>[python] isinstance</title>
<link>https://sonseungha.tistory.com/509</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;isinstance() 의 설명은 아래와 같습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;Return whether an object is an instance of a class or of a subclass thereof.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;A tuple, as in isinstance(x, (A, B, ...)), may be given as the target to check against. This is equivalent to isinstance(x, A) or isinstance(x, B) or ... etc.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;해석하면 객체&lt;/span&gt;&lt;span style=&quot;font-family: Helvetica, &amp;quot;Apple SD Gothic Neo&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;가 클래스의 인스턴스인지 하위 클래스의 인스턴스인지 여부를 반환합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;font face=&quot;Helvetica, Apple SD Gothic Neo, sans-serif&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;font face=&quot;Helvetica, Apple SD Gothic Neo, sans-serif&quot;&gt;예를 들어 아래와 같이&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;font face=&quot;Helvetica, Apple SD Gothic Neo, sans-serif&quot;&gt;isinstance(1, int) 라는 코드는 True를 반환합니다.&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;font face=&quot;Helvetica, Apple SD Gothic Neo, sans-serif&quot;&gt;isinstance(1.4, string) 이라는 코드는 False를 반환합니다.&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;test = Test()&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;isinstance(test, Test) 는 True입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;사용법은 간단하니 다양하게 사용할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Python</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/509</guid>
<comments>https://sonseungha.tistory.com/509#entry509comment</comments>
<pubDate>Tue, 12 Mar 2019 16:28:35 +0900</pubDate>
</item>
<item>
<title>[S/W Architecture] Batch Sequential Architecture</title>
<link>https://sonseungha.tistory.com/508</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Batch Sequential Architecture에 대해 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Batch Sequential Architecture는 이전 글에서 정리한 Data Flow Software Architecture 중 하나입니다. 참고가 필요하신 분은 해당 글을 확인해주세요.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;https://sonseungha.tistory.com/507&quot; target=&quot;_blank&quot;&gt;2019/03/10 - [Developer's Delight/Software Architecture] - [S/W Architecture] Data Flow Software Architectures&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Batch Sequential Architecture는 1950~70년대에 많이 사용된 데이터 처리 모델입니다. 데이터는 하나의 서브시스템에서 다음 서브시스템으로 데이터로 전달됩니다. 각 데이터 전송 서브시스템 또는 모듈은 이전 서브시스템의 데이터 처리가 끝나기 전에는 스스로 시작할 수 없습니다. 정리하자만 A-B 로 연결된 Batch Sequential Architecture에서 B는 A가 모든 데이터 처리를 완료한 후 결과 데이터가 출력되기 전까지 스스로 독립적으로 시작할 수 없습니다. 데이터를 분리해 중간중간 처리가 아닌 하나의 서브시스템이 데이터를 처리한 전체 결과를 출력해야만 다음 서브시스템이 시작할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Batch Sequential Architecture를 구성하는 컴포넌트는 Program과 Data store입니다. 각 프로그램의 연결은 단방향 파이프로써 데이터 셋을 전달합니다. 아래와 같은 형태로 Batch Sequential Architecture가 구성됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;입력 =&amp;gt; FILTER -&amp;gt; FILTER -&amp;gt; FILTER -&amp;gt; FILTER -&amp;gt; FILTER =&amp;gt; 출력&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Batch Sequential Architecture는 서브시스템들이 단순하게 분리되어 있고 입력 데이터와 출력 데이터에 맞춘 서브시스템의 교체도 가능합니다. 서브시스템간 연결은 오직 데이터 이므로 데이터만 맞추면 된됩니다. 하지만 외부에서 서브시스템을 제어하기 위한 구현에서는 부적합하며 인터렉션을 위한 인터페이스를 제공할 수가 없다. 오직 데이터만이 입력과 출력이기 때문입니다. 또한 동시성을 지원하지 않기 때문에 낮은 성능과 높은 Latency를 가지는게 이 아키텍처의 한계입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이상 Batch Sequential Architecture에 대해 정리해보았습니다. 감사합니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/508</guid>
<comments>https://sonseungha.tistory.com/508#entry508comment</comments>
<pubDate>Sun, 10 Mar 2019 20:20:20 +0900</pubDate>
</item>
<item>
<title>[S/W Architecture] Data Flow Software Architectures</title>
<link>https://sonseungha.tistory.com/507</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;Data Flow Software Architecture에 대해 정리해보고, 해당 아키텍처에 속하는 이키텍처들을 정리해 보려합니다. 주제에서 알 수 있듯이 데이터의 흐름에 대한 소프트웨어 아키텍처입니다.&amp;nbsp;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Data Flow Software Architecture는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;전체 소프트웨어 시스템을 연속적인 데이터 집합에 대한 일련의 변환&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;으로 봅니다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;소프트웨어 시스템은 데이터가 데이터 연산 처리 순서를 지시하고 제어하는 데이터 처리 요소로 분리 될 수 있습니다. 각 컴포넌트는 입력으로 데이터를 받고, 출력으로 연산된 데이터를 출력합니다. 이렇게 출력된 연산 데이터는 다음 컴포넌트의 입력이 됩니다. 이 부분이 Data Flow Software Architecture 들의 가장 큰 특징입니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;데이터를 처리하는 각 서브시스템 컴포넌트들 사이의 연결은 I/O 스트림, I/O 파일, 버퍼나 파이프등 다양한 방법이 있습니다. 이 아키텍처에서 트리 구조에서는 사이클이 없는&amp;nbsp;선형적인 구조를 가지고 있으며, 그래프 토폴로지와 같은 데이터 흐름에서는 사이클이 발생할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;Data Flow Software Architecture에 속하는 대표적인 구조 3가지는 아래와 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; Batch Sequential Architecture&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; Pipe and Filter Architecture&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; Process Control Architecture&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;Data Flow Software Architecture의 장점은 변경용이성과 재사용성입니다. 서브시스템은 서로간 독립적으로 구성되어 있습니다. 각 서브시스템은 서로간의 어떠한 영향없이 새로운 서브시스템으로 교체가 가능하며 중간에 새로운 서브시스템의 추가도 쉽기 때문에 아키텍처의 변경이 용이하고 각 서브시스템은 다른 아키텍처에서 재사용이 쉽습니다. 한 가지 유의점은 서브시스템 추가 시 출력되는 데이터 형태가 다음 서브시스템의 입력과 일치해야 합니다. A에서 B 모듈로 파일을 이용해 입출력을 하는 아키텍처에서 중간에 S 서브시스템을 추가한다고 합시다. 이때 S 서브시스템의 출력은 파일이 아니라 Buffer 형태를 사용한다면 추가가 불가능 합니다. 이런 점은 유의해야 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;위와 같은 특징을 생각했을 때 전통적인 절차지향적 구조라는 생각이 듭니다. Data Flow Software Architecture는 컴파일러나 Batch 데이터 처리 등에서 많이 사용합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;다음 글에서 Batch Sequential, Pipe and Filter, Process Control을 순서대로 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;감사합니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>archtecture</category>
<category>batch sequential</category>
<category>data</category>
<category>data flow</category>
<category>pipe and filter</category>
<category>process control</category>
<category>software architecture</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/507</guid>
<comments>https://sonseungha.tistory.com/507#entry507comment</comments>
<pubDate>Sun, 10 Mar 2019 19:42:32 +0900</pubDate>
</item>
<item>
<title>[Requirements Engineering]  #3 Feasibility</title>
<link>https://sonseungha.tistory.com/505</link>
<description>&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;Feasibility Study&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Why a Feasibility Study?&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Feasibility(실행가능성)는 시스템 개발 프로젝트를 할 수 있는지 없는지는 판단하기 위함입니다. 프로젝트 시작 전 이 프로젝트를 우리가 할 수 있는가? 다른 가능한 대안이 있는가?에 대해 질문을 던지는 것입니다. 위 질문을 답하기 위해 충분한 정보를 수집하여 알고있어야 합니다. Feasibility Study 이후에 이 프로젝트의 START/STOP 여부를 결정하게 됩니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Content of Feasibility Study(실행가능성 판단을 위한 컨텐츠)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Feasibility 판단을 위해 파악해야 할 항목은 여러 가지입니다. 항목은 아래 리스트를 참고하세요.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;- 존재하는 시스템들&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;- 현재 시스템의 문제&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;- 새로운 시스템을 위한 목표와 기타 요구사항&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;- 제한사항 : NFR 포함&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;- 가능한 대체방안 : 문제 해결을 위한 다른 방안&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;- 대체 방안의 강점과 약점&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Four Types of Feasibility&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;위 4가지 항목이 Feasibility를 확인 시 확인해야 할 요소들 입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;b&gt;Technical feasibility&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;현재 기술로 이 프로젝트 진행이 가능한다. 기술적 위험은 무엇이 있는가 등을 파악합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;b&gt;Schdule feasibility&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;제 때에 솔루션 제공이 가능한가? 일정 지연에 영향을 미치는 요소는 무엇인가? 일정 상 어떤 제약사항이 있는가 등을 확인합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;b&gt;Economic feasibility&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;주어진 자원(예산 등) 제한 내에 프로젝트 진행이 가능한가? 프로젝트 진행 시 이익이 무엇인가? 등을 확인합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;b&gt;Operational feasibility&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;만약 시스템이 개발되었다고 가정하에 사용자들이 사용할 것인가? 사회적, 인간적 문제들을 파악해야 합니다. 관리적인 측면이나 사회적으로 받아들일 수 있는 프로젝트인지, 법적인 문제는 없는지 등을 확인합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Feasibility는 프로젝트를 시작하기 전 진행을 할지 말지에 대한 여부를 결정하기에 중요한 단계 중 하나입니다. 꼭 필요한 정보를 충분히 수집한 이유 검토가 필요함을 명심하시면 좋을 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;감사합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Feasibility</category>
<category>re</category>
<category>Requirements Engineering</category>
<category>요구공학</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/505</guid>
<comments>https://sonseungha.tistory.com/505#entry505comment</comments>
<pubDate>Fri, 11 Jan 2019 09:27:33 +0900</pubDate>
</item>
<item>
<title>[Requirements Engineering]  #1 Overview</title>
<link>https://sonseungha.tistory.com/503</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;시스템 아키텍쳐에서 필수적인 것이 무엇을 설계할 것인가 입니다. 막연히 뭘 설계 개발해야할지 모르는 상황에서 컴퓨터 앞에 앉는 행위는&amp;nbsp;어리석은 행동입니다. 클라이언트가 어떠한 것을 요청하는지 파악해야 설계를 할 수 있습니다. 아래는 많이 보셨을 그림입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 1112px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile1.uf.tistory.com%2Fimage%2F9985CB435C35FCD21BC963&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9985CB435C35FCD21B&quot; filemime=&quot;image/gif&quot; filename=&quot;나무_그네_그림.gif&quot; height=&quot;1112&quot; original=&quot;yes&quot; style=&quot;width: 400px; height: 1112px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;고객이 설명한 것을 시스템에 관련된 이해관계자들이 이해하고 만들어나가는 과정입니다. 실제로 고객이 원하는건 나무에 타이어 하나 매달아 그네를 쓰고자 했는데 결과물은 전혀 다른 것이 나왔습니다. 이 그림은 시스템 개발 시 발생할 수 있는 문제를 웃음으로 승화시킨 그림인데요, 정말 웃고 지나갈만한 일일까요? 위와 같은 문제는 자주 발생할 수 있습니다. 이러한 문제를 방지하고 영향을 최소화 하기위해 요구공학이란 학문이 존재합니다.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;실제로 클라이언트와의 미팅 이후 요구사항 분석, 설계, 구현, 테스트 등을 진행하다 보면 문제가 발생할 수 있습니다. 여러분이 구현 후 테스트하는 단계에서 문제를 발견하였다고 합시다. 해당 문제가 발생한 부분이 구현 시 발생한 것과 아니면 클라이언트의 요구사항을 잘못 분석한 문제라고 할 때 어떤 문제가 에러 수정에 큰 비용이 들어갈까요? 당연히 클라이언트의 요구사항을 잘못 분석한 문제가 매우 큰 영향을 끼치게됩니다. 잘못하게되면 설계 자체를 수정해야하는 문제가 발생할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;1-10-100 Rule&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;1-10-100 Rule 이란 것이 있습니다. 프로젝트에서 발견하지 못한 에러를 수정하는 드는 비용에 관련된 것입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;824&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border:none;border-collapse:collapse;;font-family:&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:16px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-width: 1px; border-style: solid; border-color: rgb(0, 0, 0); background-color: rgb(230, 230, 230); color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Project Stage&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-top: 1px solid rgb(0, 0, 0); background-color: rgb(230, 230, 230); color: rgb(0, 0, 0);&quot;&gt;&lt;p&gt;Relative Repair Cost&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Requirements Analysis&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;1-2&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Design&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;5&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Coding&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;10&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Unit Testing&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;20&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;System Testing&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;50&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-left: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Maintenance&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 412px; height: 24px; border-bottom: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); background-color: transparent; color: rgb(0, 0, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;200&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Requirements Analysis 단계의 문제를 늦게 발견하면 할수록 그 문제를 해결하기 위해 필요한 비용이 매우 크다는 것을 알 수 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Requirements Engineering&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위와 같은 문제를 해결하기 위해 요구공학 이란 학문이 존재하는 것을 알게되었습니다. 그럼 이 학문이 정확히 무엇인지 정리해보고자 합니다. 먼저 위키피디아에 요구공학은 아래와 같이 정의되어 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); padding: 10px; text-align: justify;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;Apple SD Gothic Neo&amp;quot;, arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;요구공학&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: 12pt;&quot;&gt;(&lt;/span&gt;&lt;b style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;Apple SD Gothic Neo&amp;quot;, arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;Requirements engineering&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: 12pt;&quot;&gt;, RE)은 시스템&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;Apple SD Gothic Neo&amp;quot;, arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;요구&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: 12pt;&quot;&gt;사항 문서를 생성, 검증, 관리하기 위하여 수행되는 구조화된 활동의 집합이다.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; text-align: start;&quot;&gt;요구사항 엔지니어링은 소프트웨어 집약적 시스템의 목적 및 이 시스템이 사용될 맥락을 식별하고 전달하는 것과 관련된 일련의 활동입니다. 따라서, 요구공학 (이하 RE)는 사용자, 고객 및 소프트웨어 시스템의 영향을 받는 기타 요소의 실제 요구와 소프트웨어 집약적 기술이 제공하는 능력과 기회 사이의 다리 역할을 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;쉽게 설명하면 RE는 시스템에서&amp;nbsp;고객의 요구하는 서비스와 이 시스템을 개발함에 있어서 존재하는 제한사항을 찾아내는 절차입니다. 요구공학에서 말하는 요구(Requirements)는 요구공학 절차 시 생성되는 서비스와 제한사항의 명세라고 생각하시면 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;요구사항 분석(Requirements Analysts)&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;그럼 요구사항 분석을 무엇을 하는 걸까요, 요구사항 분석은 &lt;b&gt;문제&lt;/b&gt;와 그 문제를 해결하기 위한 &lt;b&gt;해결책&lt;/b&gt;을 찾는것입니다. 실제로 이 프로젝트를 진행할지에 대한 분석부터 시작하여 이해관계자 정의와 클라이언트는 왜 이 문제 해결을 원하는가, 어떻게 소프트웨어 시스템으로 문제 해결에 도움을 줄 수 있는가 등 여러가지 관점으로 접근하게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;RE는&amp;nbsp;무조건 Sequential하게&amp;nbsp;프로세스를 진행할 필요는 없습니다. RE 활동은 개발 프로세스에서 지속적으로 진행될수도 있습니다. 문제 상태는 항상 불완전합니다. 요구사항 분석은 추후에 발생할 위험을 줄이기 위함이지 완벽하게 문제 상황을 해결할 수 없을 수도 있습니다. 소프트웨어는 지속적으로 변경될 것이며 문제가 발생할 수 있습니다. 그러한 문제에 대해 조금이라도 줄이고자 하는 활동이 RE라고 생각하시면 될 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;감사합니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>re</category>
<category>Requirements Engineering</category>
<category>software architect</category>
<category>System Architect</category>
<category>요구공학</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/503</guid>
<comments>https://sonseungha.tistory.com/503#entry503comment</comments>
<pubDate>Wed, 09 Jan 2019 23:14:04 +0900</pubDate>
</item>
<item>
<title>[Design Pattern] Adapter Patter</title>
<link>https://sonseungha.tistory.com/502</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Adapter Pattern은 wrapper라고도 많이 불립니다. 어댑터라는 용어는 많이 들어보셨을 겁니다. '돼지코' 를 크게 예로 들 수 있을텐데요. 위키피디아에 설명된 정의는 아래와 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px; text-align: justify;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b style=&quot;color: rgb(34, 34, 34); font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;어댑터 패턴&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;(Adapter pattern)은&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%ED%81%B4%EB%9E%98%EC%8A%A4&quot; class=&quot;mw-disambig&quot; title=&quot;클래스&quot; style=&quot;color: rgb(11, 0, 128); background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;클래스&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;의&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9A%A9%EC%9E%90_%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4&quot; title=&quot;사용자 인터페이스&quot; style=&quot;color: rgb(11, 0, 128); background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; font-family: sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;인터페이스&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;를 사용자가 기대하는 다른 인터페이스로 변환하는 패턴으로, 호환성이 없는 인터페이스 때문에 함께 동작할 수 없는 클래스들이 함께 작동하도록 해준다.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Adapter 패턴은 기존에 지원하는 인터페이스 이외 다른 인터페이스 형태로 맞춰주기 위해 자주 사용됩니다. 클라이언트가 사용하는 타겟 인터페이스와 다른 인터페이스를 제공하는 모듈을 사용하고자 할 때 중간에 Adapter를 추가하여 기존에 사용하던 인터페이스와 동일한 형태로 제공받아 사용할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;클라이언트는 어댑터를 타겟 인터페이스를 사용하기 위해 어댑터의 메소드를 호출하는 방식으로 사용하고 어댑터는 하나 또는 그 이상의 메소드 콜을 이용해 클라이언트의 요청을 처리합니다. 클라이언트는 어댑터가 변환해준 결과를 받게되지만 내부에 대해선 전혀 알지 못합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;Client -&amp;gt; Target Interface -&amp;gt; Adaptee Interface&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;다시 정리하면 어댑터 패턴은 클라이언트가 사용하려는 툴킷이나 라이브러리가 호환이 되지 않을 때나 라이브러리의 권한이 없어 수정할 수 없는 경우 어댑터 패턴을 사용하여 클라이언트에서 사용할 수 있습니다. 만약 라이브러리 수정 권한이 주어져있다고하여도 안정화된 라이브러리에 대해 코드 수정은 불필요하며 좋지 않은 결과를 야기시킬 수 있기에 어댑터 패턴을 사용합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;어댑터는 클래스 어댑터와 오브젝트 어댑터 두 부분으로 생각할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:474px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile2.uf.tistory.com%2Fimage%2F99129F3D5C34976A0E186C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99129F3D5C34976A0E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Adapter1.png&quot; height=&quot;261&quot; style=&quot;&quot; width=&quot;474&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; clear: none; float: none;&quot;&gt;위는 클래스 어댑터의 클래스 다이어그램입니다. 클래스 어댑터는 다중상속을 지원하는 언어에서 주로 사용하는데요, Adapter 클래스가 Target과 Adaptee 클래스를 모두 상속받고 있습니다. 그럼으로 타겟 인터페이스의 메소드를 Adapter 내에서 쉽게 구현할 수 있습니다.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:479px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F9933163D5C34976A091D11&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9933163D5C34976A09&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Adapter2.png&quot; height=&quot;260&quot; style=&quot;&quot; width=&quot;479&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위는 오브젝트 어댑터의 클래스 다이어그램입니다. Composition과 Delegation을 이용합니다. Adapter는 Target Interface를 Implements 하고 Adaptee에 대해 Composition 관계 가짐으로써 Adapter는 Adaptee에 대한 메소드 콜로 Wrapping됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;메소드 네임이나 아규먼트가 변경되는 수준은 매우 단순한 어댑터가 될 수 있지만, 그 외 복잡한 어댑터가 구현될 수 있습니다. 지금까지 말씀드린건 단방향의 어댑터인데요, 양방향의 복잡한 어댑터 구조도 충분히 가능합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;마지막으로 정리한다면 어댑터 패턴은 서로 상이한 인터페이스를 가진 클래스들이 서로 협력하지 못하고 한 쪽 클래스에 맞춰 변경이 어려운 경우 클라이언트가 중간에 어댑터를 둠으로써 쉽게 사용할 수 있도록 지원하는 것입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;감사합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>adapter pattern</category>
<category>Design Pattern</category>
<category>구조 패턴</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/502</guid>
<comments>https://sonseungha.tistory.com/502#entry502comment</comments>
<pubDate>Tue, 08 Jan 2019 21:34:44 +0900</pubDate>
</item>
<item>
<title>[Design Pattern] Decorator Pattern</title>
<link>https://sonseungha.tistory.com/501</link>
<description>&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Decorator Pattern의 SOLID의 OCP(Open Closed Principle)을 원칙으로 하는 Pattern입니다. Decorator Pattern은 예시로 바로 살펴보도록 하겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;아래 UML을 보시면 음료를 상속받아&amp;nbsp;각 커피를 구현하고 있는 형태입니다. 이 구조를 Decorator Pattern이 접목되며 변화하는 과정을 살펴보려합니다. Beverage 추상클래스를 상속받아 각 커피 클래스 만들었습니다. 이제 판매만 하면 될까요?&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:575px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F99CFBE4C5C33362C1CC5B6&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99CFBE4C5C33362C1C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Descorator1.png&quot; height=&quot;294&quot; width=&quot;575&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;점점 고객들의 요구가 많아지고 있습니다. 우유를 추가해달라는 고객, 휘핑크림을 넣어달라는 고객 등 여러 요구사항에 맞춰주고 가격을 따로 받으려 합니다. 그럼 어떻게 해야하나요? 가장 단순한 방법은 아래와 같은 구조가 되는 것입니다. 아래 UML은 휘핑크림 추가에 대한 클래스들만 추가되었지만, WithMilk WithMilkAndWhip 등등의 클래스도 추가가 되어야 합니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:672px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F9960703F5C3338042A5C22&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9960703F5C3338042A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Decorator2.png&quot; height=&quot;414&quot; width=&quot;672&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; clear: none; float: none;&quot;&gt;이런 방식으로 점점 추가되는 구조는 끔찍할 것 같습니다. 커피에 추가되는 첨가료를 더하거나 뺄때마다 경우의 수가 너무 많아집니다. 모든 커피를 Beverage 클래스에서 상속받아 구현하는 것 말고 다른 방법을 생각해봐야겠습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; clear: none; float: none;&quot;&gt;아래는 다음 접근방법 입니다. Beverage 클래스에서 milk, soy, mocha, whip 데이터를 가지고있으며 has, setter 메소드를 지원합니다. cost() 메소드 내부에서 각 첨가물의 has 여부에 따라 cost가 누적될 것 입니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:626px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile1.uf.tistory.com%2Fimage%2F99B5974F5C33391316225C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99B5974F5C33391316&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Decorator3.png&quot; height=&quot;436&quot; width=&quot;626&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;코드로 구현하면 아래와 같은 형태가 되겠네요.&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;27&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;28&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;package&lt;/span&gt;&amp;nbsp;example.designpattern;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;*&amp;nbsp;Created&amp;nbsp;by&amp;nbsp;linuxias&amp;nbsp;on&amp;nbsp;19.&amp;nbsp;1.&amp;nbsp;7.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;class&lt;/span&gt;&amp;nbsp;Beverage&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;protected&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;String&lt;/span&gt;&amp;nbsp;description;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;boolean&lt;/span&gt;&amp;nbsp;milk;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;boolean&lt;/span&gt;&amp;nbsp;soy;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;boolean&lt;/span&gt;&amp;nbsp;mocha;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;boolean&lt;/span&gt;&amp;nbsp;whip;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;float&lt;/span&gt;&amp;nbsp;cost()&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;float&lt;/span&gt;&amp;nbsp;condimentCost&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0.&lt;/span&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(hasMilk())&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;condimentCost&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;milkCost;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(hasSoy())&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;condimentCost&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;soyCost;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(hasMocha())&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;condimentCost&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;mochaCost;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(hasWhip())&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;condimentCost&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;whipCost;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;condimentCost;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;위 코드의 문제점은 무엇일까요?&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; margin-left: 2em;&quot;&gt;1. 가격변화가 있을 때 Beverage class가 변경됩니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; margin-left: 2em;&quot;&gt;2. 새로운 첨가물이 추가됬을 경우에도 Beverage class가 수정됩니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; margin-left: 2em;&quot;&gt;3. 새로운 beverage가 milk, soy등이 필요없을 때 상속받는 건 문제가 있어보입니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; margin-left: 2em;&quot;&gt;4. 고객이 mocha를 두번 원할 때는 어떻게 해야할까요? 지금구조로는 불가능할 것 같습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Beverage Class는 많은 음료 클래스들이 상속받고 있는 슈퍼클래스로서 수정을 최소한으로 해야합니다. 만약 수정될 시 영향을 받는 클래스들이 매우 많아 전체 클래스를 다시 테스트해야 되는 불상사까지 발생할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Decorator Pattern 설명을 위해 도입부에 OCP에 대해 언급하였는데요, OCP를 다시 한번 정리하고 넘어가면 좋을 것 같습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;b&gt;Open Cloased Principle&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Classes should be open for extension, buf closed for modification.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Allow classes to be easily extended to incorporate new behavior without modifying existing code.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Caution : Don't try applying the Open-Cloased Principle to every signle case. Keep simple designs if possible!&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;위 원칙을 상기시키고 다시 구조를 생각해봅시다. Whip, Milk 등의 첨가물이 추가나 제거되어도 구조에 영향을 주지 않도록 하는 방법이 무엇이 있을까요?&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Decorator Pattern의 UML은 아래와 같습니다. Decorator 추상 클래스가 Component를 상속받고 있으면서도, Association관계를 가지고 있습니다. 만약 상속구조가 없으면 어떻게 될까요? 한번 생각해보시기 바랍니다. Composition 과 Delegation을 이용한 구조란 것만 이해하시면 좋을 것 같습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:475px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F999E84495C334B7B159F90&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/999E84495C334B7B15&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Decorator4.png&quot; height=&quot;325&quot; width=&quot;475&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Decorator Pattern과 유사한 패턴으로는 Adapter Pattern과 Proxy Pattern이 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Adaptor Pattern은 다른 인터페이스를 제공하는 패턴으로 클라이언트가 요구하는 타겟 인터페이스를 맞춰주고 서비스해주는 패턴입니다. Proxy 패턴은 Subject와 동일한 인터페이스를 제공합니다. Decorator 패턴은 향상된 인터페이스를 제공하게됩니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Decorator의 디자인 원칙은 OCP였습니다. Decorator의 중요한 메커니즘은 Composition과 Delegation이였던 것 기억나시나요?&amp;nbsp; Decorator패턴은 추가적인 책임을 동적으로 객체에 붙여줄 수 있으며 유연하고 확장적인 구조를 가질 수 있다는 장점이 있습니다. 그에 반해 단점은 Decorator 자체가 객체가 되기 때문에 무수히 많은 객체가 생성될 수 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Decorator pattern</category>
<category>Design Pattern</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/501</guid>
<comments>https://sonseungha.tistory.com/501#entry501comment</comments>
<pubDate>Mon, 07 Jan 2019 22:03:38 +0900</pubDate>
</item>
<item>
<title>[Design Pattern] Mediator Pattern</title>
<link>https://sonseungha.tistory.com/500</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Mediator Pattern의 목적은 명확합니다. 중간 관리자를 하나두어 문제를 해결하겠다는 것입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;서로 커뮤니케이션하고자하는 객체들이 있을 때&amp;nbsp;상호작용하려는 객체들의 집합의 구조가 복잡할 때 복잡성을 해소하면서 커뮤니케이션이 가능하도록 하는 목적의 패턴입니다. 매우 복잡한 커뮤니케이션 관계가 존재할 때 중앙집중적인 관리가 필요할 때 사용된다고 보시면 됩니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이러한 Mediator Pattern의 공항 관제탑을 생각하시면 좀 더 이해가 쉬울 것 같습니다. 인천공항에 이,착률 하려는 모든 항공사의 항공기간 서로 커뮤니케이션을 직접적으로 하는것이 아니라 중앙에 위치한 관제탑에서 정보를 수집하고 데이터를 전달함으로써 이,착륙 시 발생할 수 있는 많은 문제를 해결하고 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위 예시와 같이 Mediator Pattern 구조에서는 커뮤니케이션에 참여한 모든 객체간 직접적인 커뮤니케이션을 절대 발생하지 않는다는 것입니다. 만약 상호 커뮤니케이션이 직접 발생하게 된다면, Mediator Pattern의 장점이 사라지게 됩니다. 중간에 위치한 Mediator는 인터커넥션을 캡슐화하여 스스로 커뮤니케이션 허브역할을 합니다. 매우 복잡한 커뮤니케이션 플로우도 캡슐화 되어 외부로 오픈되지 않기때문에 커뮤니케이션 플로우를 이해하기 매우 쉽습니다. Mediator를 통해서 커뮤니케이션이 되는 것이기 때문입니다. 모든 커뮤니케이션 로직이 Mediator 내에 캡슐화 되기에 통신을 참여한 여러 객체간의 결합도를 매우 낮추게 됩니다. 이런 특징 때문에 GUI Component에서 많이 사용됩니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;단점으로는 Mediator Pattern의 경우 Mediator 자체의 재사용성이 매우 낮습니다. 복잡한 커뮤니케이션 로직을 Mediator가 떠안는 형태이기 때문에 특정 프로젝트에 사용한 Mediator를 다른 프로젝트에 재사용할 수 있는 확률은 매우 낮습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이 전에 살펴본 Observer Pattern 기억나시나요? Observer pattern도 Object들 간의 커뮤니케이션을 위한 구조였습니다. 두 패턴의 차이는 &lt;b&gt;명확&lt;/b&gt;합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Observer Pattern&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Observer와 Subject 객체들로 커뮤니케이션이 분산되어 있으며 재사용성이 매우 높습니다. 하지만 커뮤니케이션 플로우를 이해하기 어렵다는 단점이 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Mediator Pattern&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Mediator는 커뮤니케이션이 캡슐화되어 있습니다. Mediator가 모두 떠안는 구조이기에 재사용하기 어려우나 커뮤니케이션 플로우를 이해하기 매우 쉽습니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Design Pattern</category>
<category>mediator pattern</category>
<category>Observer Pattern</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/500</guid>
<comments>https://sonseungha.tistory.com/500#entry500comment</comments>
<pubDate>Mon, 07 Jan 2019 20:13:37 +0900</pubDate>
</item>
<item>
<title>[Design Pattern] Iterator Pattern</title>
<link>https://sonseungha.tistory.com/499</link>
<description>&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;Iterator Pattern&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Iterator Pattern은 여러 객체를 보관하고 있는 Aggregate Object가 있을 때 각 구성요소 하나 씩 방문하고자 할때 사용됩니다. 이 때 각 Element 내부를 접근하는 등의 표현은 외부로 노출되지 않습니다. 여기서 Aggregate Object에 대해 정리를 하자면 특정&amp;nbsp;객체를 하나의 단위로 그룹화 할 목적으로 다른 객체를&amp;nbsp;포함하는 객체를 입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Iterator Pattern은 구성요소들의 순회가 필요하거나 순회를 위한 일관된 인터페이스가 필요할 때 사용합니다. 또한 전체&amp;nbsp;구성요소에 대해 모두 알 필요없이 각 구성요소에 접근하기 위해서 사용되기도 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;'Head First Design Pattern' 도서에서 소개하고 있는 예시를 사용해 설명하려 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Problem&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;&lt;/b&gt;마을에 인접한 두 식당이 하나로 합치기로 하였습니다. 각 식당의 사장님들은 메뉴의 통일성을 위해 메뉴판을 새로 작성하게 되었습니다. 메뉴판에는 메뉴의 이름, 설명, 채식자를 위한 식단인지, 가격을 포함시키기로 하였습니다. A식당은 지금까지 메뉴를 ArrayList를 이용하여 관리했으며 B 식당은 Array를 이용하여 관리하고 있었습니다. 메뉴에 포함될 내용만 통일하였지 각자 사용하던 방식은 그대로 유지하려 합니다. 이 때 새로이 고용된 웨이터는 각 메뉴를 알기 위해 ArrayList와 Array로 관리되던 각각의 메뉴를 모두 각 콜렉션의 형태를 익혀서 사용해야만 합니다. 위 상황에 대해서 처음 구현된 상황을 보시죠. 코드는&amp;nbsp;아래 URL에 있습니다.&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://github.com/linuxias/DesignPattern/tree/master/Iterator/Problem/src/example/designpattern&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot; style=&quot;&quot;&gt;Iterator Problem&lt;/a&gt;&lt;/i&gt;&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Main.java에도 명시해 놓았듯이 해당 프로젝트의 문제는 무엇인가요? 다시 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;1. 이 프로젝트는 인터페이스로 구현되어 있지않습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;2. 만약 MenuItem을 관리하는 방식이 Array에서 HashTable 등으로 변경된다면 해당 수정이 웨이터에게 직접적인 영향을 줌으로서 문제가 발생합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;3. 메뉴를 출력하는 웨이터는 어떻게 각 메뉴를 보여줄 수 있을지 내부 콜렉션의 구조를 알아야 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;4. 중복된 코드들이 존재합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;위와 같은 문제들이 있습니다. 글의 처음에 설명드렸듯이 MenuItem이란 특정 객체를 출력하기 위해 순회하고자 합니다. 다시 한번 말씀드리면&amp;nbsp;&lt;span style=&quot;text-align: justify;&quot;&gt;Iterator Pattern은 구성요소들의 순회가 필요하거나 순회를 위한 일관된 인터페이스가 필요할 때 사용합니다. 또한 전체&lt;/span&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&amp;nbsp;구성요소에 대해 모두 알 필요없이 각 구성요소에 접근하기 위해서 사용되기도 합니다. 웨이터는&amp;nbsp;ArrayList, Array, HashTable 등 아무것도 관심없고 MenuItem만 알고 출력해 주고싶을 뿐입니다. 이런 경우 Iterator Pattern을 사용하면 구조를 개선할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;아래 Iterator Pattern을 적용한 개선된 구조에 대한 코드입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;&lt;i&gt;&lt;a href=&quot;https://github.com/linuxias/DesignPattern/tree/master/Iterator/Solving/src/example/designpattern&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Iterator Solving&lt;/a&gt;&lt;/i&gt;&lt;/b&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Iterator 인터페이스를 이용하였으며 각 식당은 자신에게 맞는 Iterator를 생성해서 웨이터에게 전달해줍니다. 웨이터는 Iterator 인터페이스만 알 뿐 이제 Array,&amp;nbsp;ArrayList 등에 대해 알 필요가 없어졌습니다. 만약 HashTable로 변경한다하여도 영향이 없습니다. 또한 순회도 가능하며 메뉴출력을 위한 중복된 코드도 제거되었습니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;Iterator 패턴에서 가장 중요하게 SRP(Single Responsibility Principle), 단일책임의 원칙입니다. 앞선 예제에서는 각 클래스가 Aggregate와 Iteration을 위한 2개의 책임을 가지고 있었다면 Iterator Solving 예제에선 각 책임을 분리함으로서 Cohesion을 높였습니다.&amp;nbsp;Java 언어에서는 내부적으로 Iterator 인터페이스를 제공하기에 해당 인터페이스를 사용하여 구현하여도 무방합니다. 이와 같은 디자인패턴은 정해진 것이 아니라 항상 변형가능하고 융통성있게 사용할 수 있어야 합니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;지금까지 간략히 Iterator Pattern에 대해 정리하였습니다. 읽어주셔서 감사합니다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Design Pattern</category>
<category>iterator pattern</category>
<category>Single Responsibility Principle</category>
<category>SRP</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/499</guid>
<comments>https://sonseungha.tistory.com/499#entry499comment</comments>
<pubDate>Tue, 18 Dec 2018 22:45:56 +0900</pubDate>
</item>
<item>
<title>소프트웨어 설계의 부패</title>
<link>https://sonseungha.tistory.com/498</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;소프트웨어 설계는 무엇일까? 소스코드 작성하기 전 UML 다이어그램을 작성하는 것? 가끔 몇몇 개발자 분들과 이야기를 할 때 설계는 UML 다이어그램을 작성하는 것이라는 말을 듣는다. 그럼 설계는 UML 다이어그램과 동일 시 할 수 있는가에 대해서 고민해보면 그렇지 않다 라는 결론이 나올 수 있다. 다이어그램은 설계에서 부수적인 부분일 뿐 설계 그 자체가 될 수는 없다고 생각한다. 소프트웨어 설계는 매우 추상적인 것이라 생각한다. 사용자 요구사항부터 시나리오, 모듈, 클래스, 메소드와 더불어 어떠한 형태와 구조를 가질 것인지 프로그램 전체의 형태, 구조와도 관련이 있다고 생각한다.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;과거에 프로젝트를 개발할 때 가끔 머리속으로 설계에 대한 그림이 그려질 때가 있었다. 내 머리속에 들어있는 설계의 청사진이 옳다고 생각하고 한 번에 첫 번째 릴리즈까지 가능한 적이 있었다. 그 순간은 매우 뿌듯하고 기분 좋았으나 점차 내 머리속의 설계는 잘못되었고 설계가 부패한 고기처럼 썩어있다는 걸 확인할 수 있다. 외형적으로 매우 신선해보였으나 내부를 살펴보니 곪고 또 곪아서 어떻게 할 수가 없는 상태가 된 적도 있다. 재설계를 하려해도, 시간적 소모와 지속적인 사용자의 요구사항으로 인해 새로운 설계안도 설계와 동시에 썩어들어가는 기분을 느꼈다.&amp;nbsp;&amp;nbsp;그럼 언제 내 설계가 잘못되었는지 알 수 있는 방법이 없을까? 부패하고 있다는 느낌이 들때가 언제인지 고민을 하다 로버트 마틴의 '클린 소프트웨어' 란 도서에서 잘 정리해둔 것 같아 인용하여 정리해보려 한다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;지금부터 아래와 같은 조짐이 보이면 그 설계는 부패하고 있다고 판단할 수 있다. 누구나 알고있으면서 쉽게 놓치고 있는 부분이라 생각한다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;경직성&lt;/span&gt;&lt;/b&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;시스템의 변경이 어려운 상태이다. 변경을 하려보니 다른 여러 부분들까지 변경되어야 하는 구조이다. 단순한 방법으로 변경하려 해보지만 쉽게 변경이 어렵다. 즉 의존성으로 인해 하나의 변경이 의존된 다른 부분까지 모두 영향을 미치게 되는 형태이다. 이런 파급효과는 개발자를 지치게하고 이런 모듈의 변경사항이 많아질수록 설계는 유연성을 점점 잃어간다. 새로운 요구사항이 발생하였을 때 해당 요구사항에 대해 분석하고 추가, 수정의 범위 등 작업량을 산출해 내지만 실제 해당 작업을 하다보면 예상하지 못한 부분에서 변경이 필요한 부분이 있다는 것을 깨닫게 된다. 산출한 작업량보다 잘못하면 2, 3배 이상의 작업량 추정이 발생할 수 있다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;취약성&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;특정 부분 설계 변경 시 전혀 상관관계가 없는 부분까지 영향을 미쳐 망가지게 된다. 위의 경직성과 다르게 의존성이 없는데도 그러한 경우가 있다. 변경사항의 영향이 전혀 관계없는 부분까지 망가뜨리게 된다면 개발자는 어떠한 생각이 들까? 문제가 문제를 만들어내는 최악의 경우가 될 것이다. 어떤 모듈의 취약성이 점점 심해질수록 전혀 관계없는 부분에서 계속 문제가 발생하게 되고 그럴 가능성은 점점 커진다. 이슈는 계속 생기게되고 개발자는 지쳐간다. 개발자 중 이슈가 발생했을 때 '이 부분은 내가 수정한 부분이 아니에요, 내 이슈가 아니에요' 라고 말하는 개발자들이 가끔 있다. 안타까운 일이다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;부동성&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;움직이지 않는 컴포넌트, 음&amp;nbsp;움직일 수 없는 컴포넌트가 더 어울리는 말인 것 같다.&amp;nbsp;설계한 시스템에서 다른 시스템에서 재사용할 수 있는 부분은 재사용하는게 가장 좋다. 하지만 가끔 설계한 소프트웨어에서 재사용가능한 부분을 전혀 찾지 못하는 경우가 있다. 다른 시스템에서도 충분히 유용하게 사용할 수 있지만 분리해낼 수 없는 부분들, 분리해내려하면 많은 시간적 소모와 분리 시 발생할 수 있는 위험으로 인해 쉽게 설계를 변경할 수 없는 경우를 말한다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;점착성&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;점착성이란 간단히 말하면 다른 물질에 끈끈히 달라붙는 성질을 말한다. 설계에서 점착성은 소프트웨어의 점착성과 환경의 점착성이라는 2가지 형태로 나뉠 수 있다. 변경사항이 발생했을 때 개발자들은 변경할 수 있는 여러가지 방법들을 찾게된다. 설계가 유지된 형태일 수도 아닐수도 있다. 설계를 유지한 상태에서 변경하는 방법이 설계를 변경하는 방법보다 어렵다면 그 설계는 점착성이 매우 높은 것이다. 서로 간 너무 끈끈히 붙어있어 수정이 매우 어려운 상황이다. 환경의 점착성은 개발환경에서 비롯된다. 주변 개발환경으로 인해 좀 더 빠른 개발을 위해 설계를 변경하고 싶을 때가 있다. 하지만 설계의 유지는 생각치 않고 잘못된 유혹에 빠져 설계가 변경된다면 옳은 동작을 하지 못할 수도 있다. 개발환경의 개선이 설계까지 영향을 미치는 잘못된 상황을 말이다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;불필요한 복잡성&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;설계를 하다보면 직접적으로 전혀 쓸모없는 구조가 설계에 포함되어 있을 수 있다. 설계하는 과정에선 전혀 발견하지 못하다가 리뷰를 하다보면 그러한 경우를 발견을 할 때도 있고 소스코드 작성 중에 발견할 수 도 있다. 나중에 필요하겠지 란 생각으로 일단 설계해놓고 전혀 불필요한 구조가 들어가 있는 것은 복잡성만 증가시키는 행위이다. 개발자 스스로 미래의 발생할 수 있는 요구사항에 대해 너무 고민한 나머지, 오버엔지니어링을 발생시킬 수 있다. 처음엔 뿌듯할 수 있다. 나중에 이런 요구사항이 왔을 때 내 설계는 유지된 상태에서 제공을 할 수 있다고, 분명 그 말도 맞는 말이다. 미래의 변경을 대비할 수 있다면 설계의 유연성과 추후 변경사항을 방지해줄 수 있다. 하지만 예상했던 효과와 다른 악영향을 미칠 수도 있음을 항상 고려해야 한다. 지금 전혀 사용하지 않는 구조로 인해 설계는 점점 복잡해져가고 미래의 원하는 성과도 얻지 못할 수 있다. 그런 경우를 더 많이 보았다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;불필요한 반복&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;단일 추상 개념으로 통합할 수 있는 반복적인 구조가 설계에 포함되어 있다. 주변 개발자분들 중 가끔 필요한 내용을 Ctrl C + V를 이용해 붙여넣는 경우가 있다. 빠른 기능구현을 위해 '복붙'은 매우 유용하지만 사용할 때와 사용하지 말아야할 때를 인식해야 한다. 그렇게 붙여넣은 기능이 여러 곳일 때 문제 발생 시 모든 곳을 찾아다니며 수정하는 경우를 보았다. 리뷰 패치가 올라왔을 때 동일한 수정이 수 십 곳이 되는 경우도 있었다. 중복된 기능은 왜 계속 중복되는 꼭 복붙으로만 해결할 수 있는지에 대한 고민을 한번이라도 했으면 그런 구조는 나오지 않았을거란 아쉬움이 남는다. 적절한 추상화를 통해 반복되는 부분을 없애는 일은 최우선 순위는 아니지만 그 일을 행함으로서 매우 유지보수가 쉬운 소프트웨어 구조를 가질 수 있다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;불투명성&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;전혀 이해하기 어려운 애매모호한 구조가 있다. 어떠한 의도인지 이해가 쉽지 않은 구조들은 명료하지 않기에 더욱 변경사항에 유연하게 대처하기 어려운 경향이 있다. 처음엔 명료한 구조였지만 추후 점차 불투명성이 커지는 구조가 될 수도 있다. 지속적으로 명료한 구조를 가지기 위해 노력해야 한다. 시간이 지남에 따라 불투명성으로 인해 구조가 점점 부패해지는 경우를 막아야 할 것이다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위와 같이 소프트웨어 설계가 썩어들어가는 여러 신호들이 있다. 이를 무시하지 말고 융통성있게 대처할 수 있어야 할 것 같다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;참고 : 로버트 C 마틴 | 클린 소프트웨어&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>설계</category>
<category>소프트웨어 아키텍쳐</category>
<category>클린 소프트웨어</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/498</guid>
<comments>https://sonseungha.tistory.com/498#entry498comment</comments>
<pubDate>Sun, 16 Dec 2018 15:54:05 +0900</pubDate>
</item>
<item>
<title>[Design Pattern] Template Method Pattern</title>
<link>https://sonseungha.tistory.com/497</link>
<description>&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Template method pattern&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;어느 식당에 들어가서 주문을 하려합니다. 이 식당에는 음식을 세트로 판매하고 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;세트 = 밥 + 국 + 메인반찬 + 추가반찬&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;위와 같이 세트는 4가지 메뉴로 구성이 되어있습니다. 밥 과 추가반찬은 동일하며 각 세트마다 국과 메인반찬이 변경된다고 합시다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;예를 들어 아래와 같이 세트들이 구성된다고 합시다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;제육세트 = 밥 + 된장국 + 제육볶음 + 추가반찬,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;생선세트 = 밥 + 된장국 + 생선구이 + 추가반찬,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;	&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;해장세트 = 밥 + 콩나물해장국 + 해장에좋은반찬 + 추가반찬&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;여러분들이 각 세트를 선택함에 따라 국과 메인반찬이 변경됨을 알 수 있습니다.&lt;/span&gt;&lt;span style=&quot;white-space: pre; font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;	&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;위 상황을 여러분들이 디자인하고 구현한다고 생각해보시죠. 각 세트메뉴가 클래스가 되고&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;밥, 국, 메인반찬, 추가반찬을 위한 메소드를 모두 구현하면 될 것 같습니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;readySet() 라는 메소드를 만들어 그 내부에서 각 메뉴를 쟁반에 올려주면 되겠네요!&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;그럼 이번에 계절메뉴로 새로운 세트가 생겼다고 합시다. 또 밥, 국, 메안반찬, 추가반찬을 쟁반에 놓으면 되나요?&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;각 세트에서 변경없이 반복되는게 밥과 추가반찬인데요, 이 중복된 음식을 따로 분리해 내면 더 좋을 것 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;아래 URL에 예제 (Problem / Solving) 이 있습니다. 해당 예제는 Head First Design Pattern 도서를 참고하였습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;https://github.com/linuxias/DesignPattern/tree/master/Template&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Template Pattern Example&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;Design Principle : Hollywood principle&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;em style=&quot;font-family: &amp;quot;Malgun Gothic&amp;quot;; font-size: medium;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&quot;Don't call us, we'll call you&quot;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;상위 모듈이 먼저 하위 모듈에게 연락하기 전에는 하위 모듈이 상위 모듈에게 연락하는 일이 없도록 해야한다는 의미입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;Template method pattern은 Strategy pattern과 유사하여 자주 비교되곤 합니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;원하는 것을 낮은 결합도(Loose coupling)로 변경할 수 있다는 장점과 알고리즘 군의 변경은 유사한데요,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;Strategy pattern의 경우 전체 알고리즘을 변경하는 것이고, Template method pattern은&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;알고리즘 집합에서 내부의 몇몇 로직을 변경할 수 있다는 차이가 있을 뿐입니다. :D&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;감사합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Software Architecture</category>
<category>Design Pattern</category>
<category>Template</category>
<category>template method</category>
<category>Template Pattern</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/497</guid>
<comments>https://sonseungha.tistory.com/497#entry497comment</comments>
<pubDate>Sat, 15 Dec 2018 17:34:33 +0900</pubDate>
</item>
<item>
<title>[inotify] inotify로 watch 중인 파일을 vi(vim)나 gedit으로 수정 시 문제</title>
<link>https://sonseungha.tistory.com/496</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;inotify API들을 이용해 파일이벤트들을 Watch 하는 과정에서 vi나 gedit으로 수정하면 IN_MODIFY 이벤트가 발생할 거라고 생각하시는 분들이 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;vim 또는 gedit은 swap 파일을 생성하고 수정 후 파일을 대체하는 방식으로 진행하기에 vi나 gedit으로 수정 시 IN_MODIFY가 아니라 IN_IGNORED 이벤트가 발생합니다. Manual page에서 확인 시 아래와 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px; line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;IN_IGNORED&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;Watch &amp;nbsp;was &amp;nbsp;removed &amp;nbsp;explicitly &amp;nbsp;(inotify_rm_watch(2)) &amp;nbsp;or &amp;nbsp;automatically &amp;nbsp;(file &amp;nbsp;was &amp;nbsp;deleted, &amp;nbsp;or filesystem was&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;unmounted). &amp;nbsp;See also BUGS.&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;이벤트를 확인하려는 파일이 만약 vim이나 gedit에서 수정이 된다면 IN_IGNORED 이벤트 발생 시 다시 inotify_add_watch()를 하시면 됩니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>System Programming</category>
<category>gedit</category>
<category>inotify</category>
<category>inotify_add_watch</category>
<category>IN_IGNORED</category>
<category>Linux</category>
<category>SWAP</category>
<category>vim</category>
<category>watch 중인 파일 vim 으로 수정</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/496</guid>
<comments>https://sonseungha.tistory.com/496#entry496comment</comments>
<pubDate>Mon, 10 Dec 2018 15:12:10 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] 웹 주요 취약점</title>
<link>https://sonseungha.tistory.com/495</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;국제웹보안표준기구에서는 각 분야별 주요 취약점들을 발표하고 있습니다. 그 중 몇 가지 리스트로 작성해보면 아래와 같습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;1. Injection&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;클라이언트의 요청을 처리하기 위해 전달받은 인수에 특정 명령을 실행하는 코드를 포함시켜 공격하는 방법입니다. 이런 Injection 공격은 SQL, OS,&amp;nbsp;LDAP 등 웹을 통해 명령을 전달하는 어떠한 경우에도 적용될 수 있습니다. 이를 필터링 하는 방법등을 준비해 놓지 않는다면 문제가 발생할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;2. 인증 및 세션 관리 취약점 &lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;(Broken Authentication and Session Management&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;인증이나 세션 기능이 미흡하다면 공격자가 허가되지 않은 여러 서비스에 접근하고 사용할 수 있습니다. 가장 대표적인 문제로 패스워드 설정으로서 패스워드를 취약하게 설정한 경우입니다. 사용자 데이터를 이용한 인증 취약점의 경우 서버에서 로그인된 사용자를 인증하기 위한 값으로 쿠키와 같은 세션 값을 클라이언트에게 전달합니다. 이 때 공격자는 이 값을 이용해 연결하게 됨으로서 실제 사용자의 요청인지 공격자의 요청인지 구별하기 어렵습니다. 이런 문제는 최초 인증 후에는 인증과 신분 증명을 위한 역할을 클라이언트에게 위임했기에 발생하는 문제입니다. 서버가 통제해야 할 기능과 정보를 편의를 위해 클라이언트에게 전달함으로서 위험한 결과를 초래할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;3. XSS 취약점 (Cross-Site Scripting&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;XSS 취약점은 공격자가 작성한 악성 스크립트가 다른 사용자에게 서버를 통해 전달되는 것입니다. 다른 사용자들은 웹 브라우저 내에서 검증없이 해당 스크립트가 수행되므로 많은 문제를 야기할 수 있습니다. XSS 취약점이 존재하는 서버에 공격자가 스크립트를 작성하여 저장하게 됩니다. 해당 웹 서비스를 이용하는 사용자는 자신이 게시글의 글을 읽는 등의 활동을 하며 인지도 하지 못한 채 스크립트 코드에 접근하게 됩니다. 웹 서버는 요청에 의해 코드가 포함된 데이터를 사용자에게 전달하고 시스템에선 전달받은 스크립트를 수행하게 되는 것입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;4. 취약한 접근 제어 (Broken Access Control)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;인증된 사용자라 할지라도 접근하지 못하는 페이지들이 있습니다. 하지만 취약한 제어는 사용자가 접근할 수 없어야 하는 페이지도 접근할 수 있게 만드는 것입니다. 공격자는 이런 방법을 이용해 다양한 문제를 일으킬 수 있습니다. 권한 없는 기능을 사용할 수 있다는 것은 강력한 무기를 가지게 된것입니다. 관리자 페이지에 접근을 했는데 URL만 알고 있으면 접근이 가능하거나 관리자가 사용할 수 있는 모든 기능을 일반 사용자도 할 수 있는 등의 취약점입니다. 이러만 문제를 막기 위해 세션 값을 확인하는 방안이 필요합니다. 페이지 뿐만아니라 파일에도 적용됩니다. 웹 페이지 주소에서 확인 가능한 경로를 탐색하여 특정 파일을 다운로드 할 수도 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;5. 보안 설정 오류 (Security Misconfiguration)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;웹 브라우저에서 웹 서버의 특정 디렉토리에 접근하게 되면 모든 파일 리스트를 확인할 수 있는 경우가 있습니다. 관리자가 의도하는 경우도 있지만 대부분 관리자의 인지하지 못하여 발생하는 문제가 대다수입니다. 또한 개발자가 백업 파일이나 임시 파일을 삭제하지 않고 방치함으로써 내부 정보를 획득할 수도 있습니다. 미흡한 주석관리도 문제가 될 수 있습니다. 웹은 누구나 볼 수 있기에 주석에 주요 로직이나 구조, 데이터를 작성해 놓게 되면 문제가 발생할 수 있습니다. 웹 서버에 어떠한 파일이라도 업로드 할 수 있도록 방치하는 것도 공격자에게 공격을 위한 빌미를 제공하는 것입니다. 악성 파일을 전송하여 서버에서 실행하게 된다면 내부 침투가 가능하게 됩니다. 이런 악성 파일 업로드를 통해 리버스 텔넷 공격등도 가능해집니다. 대부분 서버는 텔넷등의 포트로 서버에 접속하지 못하도록 방화벽을 사용하는데, 인바운드만 신경쓰게 되고 아웃바운드에 대해선 인식이 미흡하다면 악성 프로그램 업로드로 서버에서 공격자에게 텔넷을 연결하도록 할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;6 민감한 데이터 노출 (Sensitive Data Exposure)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;사용자의 주요 정보를 암호화하지 않고 다룸으로서 데이터 유출 시 추가적인 문제가 발생할 수 있습니다. 정보를 서버-클라이언트 간 송수신하는 경우에도 암호화 알고리즘이 미흡한 경우에도 공격 대상이 될 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;7. 공격 방어 취약점 (Insufficient Attack Protection)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;웹 어플리케이션 레벨에서 기본적인 유효성 검사나 침입 탐지, 로깅, 공격 차단등의 로직을 포함해야 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;8. &lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;CSRF 취약점 (Cross-Site Request Forgery)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;CSRF는 불특정 대상에게 공격자가 원하는 작업을 수용하도록 만드는 공격방법입니다. 은행을 이용하는 불특정 대상에서 자신도 모르는 사이 공격자에게 돈을 송금하는 등의 행위를 하게 합니다. 위에서 살펴본 XSS 공격과 매우 유사하지만 스크립트가 사용자가 아닌 서버에서 수행되도록 하는 구조적 차이가 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;9. 취약점이 있는 컴포넌트 사용 (Using Components with Known Vulnerabilities&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;웹 개발자들은 다양한 오픈소스 라이브러리, 프레임워크 등을 사용하게 됩니다. 본인이 알지못하는 취약점이 있는 컴포넌트들을 사용함으로서 문제를 발생시킬 수 있습니다. 충분한 보안측면에서의 검토가 필요합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;10. 취약한 API (Underprotected APIs&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;웹 서비스 간의 연동이 점점 많아지게 되고 이런 상호작용은 각 서비스에서 제공하는 API를 이용하여 이루어지는 경우가 많습니다. 이 경우에도 취약점이 있는 컴포넌트와 마찬가지로 문제가 발생할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;참고 : 정보 보안 개론 3판 | 양대일 지음&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>security</category>
<category>web security</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/495</guid>
<comments>https://sonseungha.tistory.com/495#entry495comment</comments>
<pubDate>Tue, 04 Dec 2018 16:25:27 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] Session Hijacking 공격</title>
<link>https://sonseungha.tistory.com/494</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;세션 하이재킹 공격은 세션을 가로채서 공격하는 방법입니다. 세션은 사용자와 컴퓨터 또는 컴퓨터 간 연결상태가 활성화 된 상태를 위해 사용하는 방법입니다. 클라이언트-서버 간 연결되어 있거나 사용자가 특정 컴퓨터에 로그인되어 있는 상태들을 말합니다. 이러한 세션을 가로채서 공격하는 방법입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;이 중 TCP 세션 하이재킹의 경우 공격자가 공격대상자의 세션을 하이재킹함으로서 본인이 세션을 유지하고 있도록 하는 방법입니다. TCP 세션 하이재킹은 TCP가 가진 고유한 취약점을 이용하게 됩니다. TCP는 클라이언트-서버간 통신 시 패킷의 연속성을 보장하기 위해 시퀀스 넘버를 사용합니다. 각 패킷에 번호를 붙여 패킷의 순서를 알 수 있도록 하는 것이죠. 클라이언트, 서버에 잘못된 시퀀스 넘버를 전달함으로서 연결된 세션에 혼란을 준 뒤 그 틈을 이용해 중간에 끼어들어가는 방식입니다. 중간에 끼어들어가 클라이언트 - 공격자 - 서버 의 순서로 모든 패킷이 공격자를 지나가도록 하는 방법입니다. 공격자는 서버에게 RST 패킷을 전달하여 연결을 리셋하고, 다시 3-Way handshaking을 통해 서버와 연결됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;위 방법을 이용해 공격자는 클라이언트가 열어놓은 세션을 하이재킹 할 수 있습니다. 특히 텔넷 등의 취약한 프로토콜은 쉽게 하이재킹 당할 수 있습니다. SSH와 같은 인증 수준이 좀 더 높은 프로토콜을 사용하는 것을 추천드립니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;감사합니다.&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>attack</category>
<category>Hijacking</category>
<category>security</category>
<category>session</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/494</guid>
<comments>https://sonseungha.tistory.com/494#entry494comment</comments>
<pubDate>Tue, 04 Dec 2018 14:40:46 +0900</pubDate>
</item>
<item>
<title>Slack Bot (작성중)</title>
<link>https://sonseungha.tistory.com/492</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;토이프로젝트로 Slack Bot을 만들어보려고 합니다. 관심있는 블로그나 저널의 RSS feed를 받아 Slack에 Notification을 해주는 단순한 형태가 될 것 같습니다. 구현할 언어는 python 버전 3.7을 사용하려 합니다.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이 글은 프로젝트를 진행해가는 과정을 하나씩 기록으로 남기고자 작성하는 것입니다. 만약 필요한 부분이 있어 방문해주신 분들은 부족한 부분이 많을테니 참고 부탁드리고, 언제든지 좋은 방향에 대한 커멘트와 논의는 환영입니다 :D&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;1. RSS feed 정보 받아오기.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;RSS feed는 feedparser(https://pypi.org/project/feedparser/)를 이용합니다. 2018년 11월 16일 기준으로 feedparser는 5.2.1버전까지 릴리즈되었습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 409px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F9980F54B5BED8DAC031D82&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9980F54B5BED8DAC03&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-11-16 00-15-37.png&quot; height=&quot;409&quot; original=&quot;yes&quot; style=&quot;width: 600px; height: 409px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;$ sudo pip3.7&amp;nbsp;install feedparser&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;설치하였다면 간단한 테스트 코드를 작성하여 확인해보세요. 저는 제 블로그 rss를 이용했습니다 ^^&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px; line-height: 2; text-align: justify;&quot;&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; align=&quot;justify&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding: 6px; border-right: 2px solid rgb(229, 229, 229); height: 220px;&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding: 6px 0px; height: 220px;&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;import&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;feedparser&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;f&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;feedparser.parse(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;'https://sonseungha.tistory.com/rss'&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;#&amp;nbsp;Print&amp;nbsp;feed&amp;nbsp;tags&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;tag&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;f:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(tag)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;#&amp;nbsp;Print&amp;nbsp;all&amp;nbsp;feed&amp;nbsp;tags&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;feed&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;f[&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;'feed'&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;]:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(feed)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;#&amp;nbsp;Print&amp;nbsp;all&amp;nbsp;title&amp;nbsp;in&amp;nbsp;entries&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;feed&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;f[&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;'entries'&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;]:&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(feed.title)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align: bottom; padding: 0px 2px 4px 0px; height: 220px;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 11pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;2. Slack bot 만들기&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;&lt;/b&gt;Slack bot을 만들기 위해서 Slack에서 제공하는 Slacker를 이용하기로 하였습니다.&amp;nbsp; Slack bot이란 사용자들과 인터렉션을 하기위해 디자인된 Slack App 입니다. Bot도 하나의 Slack app이라고 보시면 됩니다. Bot도 메시지를 보내거나 파일을 업로드하거나 Channel로 초대하거나 퇴장시킬 수 있습니다.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;아래 페이지에서 상세한 내용을 살펴보실 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;a href=&quot;https://github.com/os/slacker&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Slacker github&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;a href=&quot;https://api.slack.com/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Slacker API&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Slacker API 페이지를 접속하면&amp;nbsp;아래와 같은 페이지를 볼 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:860px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F99D2133C5BED913A029658&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D2133C5BED913A02&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-11-16 00-30-52.png&quot; height=&quot;394&quot; style=&quot;&quot; width=&quot;860&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;그 중에 우리가 원하는 건 Bot를 만드는 겁니다. 아래로 내리시다 보면 App features 카테고리에 Building bots란 메뉴가 보입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:650px;width: 650px; height: 545px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F9931FB465BED91A60ED19A&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9931FB465BED91A60E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-11-16 00-32-42.png&quot; height=&quot;545&quot; style=&quot;width: 650px; height: 545px;&quot; width=&quot;650&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Slack bot을 개발하기 전에 Slack app을 먼저 생성해야 합니다.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 288px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F991FCD485BED92F11173B0&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/991FCD485BED92F111&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-11-16 00-38-13.png&quot; height=&quot;288&quot; style=&quot;width: 500px; height: 288px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;아래로 내리시다보면 위와 같은 Create your Slack app 버튼이 나타납니다. 클릭하여 아래와 같이 Slack app을 생성해주세요.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:450px;width: 450px; height: 380px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F999E304B5BED941D108F15&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/999E304B5BED941D10&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-11-16 00-42-51.png&quot; height=&quot;380&quot; style=&quot;width: 450px; height: 380px;&quot; width=&quot;450&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;전 App의 이름은 RssFeedBotForMyPresent라고 길게 지었습니다 하하. 생성하고 나면 여러가지 항목이 보이는데 먼저 '&lt;b&gt;Add features and functionality' &lt;/b&gt;에서 Bots를 선택해줍니다. 선택하면 이름을 지을 수 있는 화면이 나오는데요, Display name와 Default username을 지어줍니다. 그리고 저장합니다. 다음 &lt;b&gt;'OAuth &amp;amp; Permissions'&lt;/b&gt;&amp;nbsp;메뉴를 선택하여 Install App to Team 버튼을 클릭합니다. 그 후 나타나는 2개의 토큰을 잘 저장해두었습니다. 이 Token은 나중에 Slacker API를 사용할 때 사용될 것 같습니다. 그리고 아래로 내려와 변경사항을 저장합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이제 Slacker를 이용하여 python 코드를 작성해 보려합니다. Slacker API를 테스트해본 후 Rss feed 기능을 붙일 계획입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Project</category>
<category>Bot</category>
<category>feed</category>
<category>RSS</category>
<category>slack</category>
<category>Slack Bot</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/492</guid>
<comments>https://sonseungha.tistory.com/492#entry492comment</comments>
<pubDate>Fri, 16 Nov 2018 00:57:19 +0900</pubDate>
</item>
<item>
<title>RSS feed parsing 하기</title>
<link>https://sonseungha.tistory.com/490</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;feedparser를 이용하여 feed를 파싱할 수 있다. 만약 feedparser가 설치되어 있지 않다면 pip를 이용해 설치해 준다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;RSS구조에 대해서는 아래 URL을 참고하자&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/489&quot; target=&quot;_blank&quot;&gt;2018/11/15 - [Developer's Delight/ETC] - RSS 에 대해서&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;간단한 소스코드이다. 파싱한 정보에는 RSS 구조에 맞춰 다양한 정보들이 있다. 필요한 정보를 사용하면 될 것 같다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;import&lt;/span&gt;&amp;nbsp;feedparser&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;f&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;feedparser.parse(&lt;span style=&quot;color:#63a35c&quot;&gt;'https://sonseungha.tistory.com/rss'&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;#&amp;nbsp;Print&amp;nbsp;feed&amp;nbsp;tags&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;tag&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;f:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;print&lt;/span&gt;(tag)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;#&amp;nbsp;Print&amp;nbsp;all&amp;nbsp;feed&amp;nbsp;tags&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;feed&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;f[&lt;span style=&quot;color:#63a35c&quot;&gt;'feed'&lt;/span&gt;]:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;print&lt;/span&gt;(feed)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;#&amp;nbsp;Print&amp;nbsp;all&amp;nbsp;title&amp;nbsp;in&amp;nbsp;entries&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;feed&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;in&lt;/span&gt;&amp;nbsp;f[&lt;span style=&quot;color:#63a35c&quot;&gt;'entries'&lt;/span&gt;]:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;print&lt;/span&gt;(feed.title)&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Python</category>
<category>feed</category>
<category>feedparser</category>
<category>parser</category>
<category>python</category>
<category>RSS</category>
<category>RSS Feed</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/490</guid>
<comments>https://sonseungha.tistory.com/490#entry490comment</comments>
<pubDate>Thu, 15 Nov 2018 23:07:14 +0900</pubDate>
</item>
<item>
<title>RSS 에 대해서</title>
<link>https://sonseungha.tistory.com/489</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;이번에 토이 프로젝트로 제가&amp;nbsp;관심있는 블로그들의 RSS 피드를 기반으로 Slack으로 메신저를 보내주는 간단한 프로그램을 만들어보려고 합니다. 오랜만에 RSS를 사용하려니 리마인드 겸 RSS가 무엇인지와 구조에 대해 정리하고 시작하고자 이 글을 작성합니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;RSS&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;란?&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;RSS란&amp;nbsp;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Really Simple Syndication&lt;/span&gt;의 약자로 웹 콘텐츠 표현 방식이자 통신 포맷입니다. XML 1.0 version에 정의된 데이터를 공유하기 위한 포맷입니다. RSS는 웹 사이트에서 제공하는 정보나 뉴스를 컴퓨터가 처리할 수 있는 형식으로 가져올 수 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;RSS는 어떻게 동작하는가?&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;뉴스기사나 블로그 글을 배포하기 위한 RSS 시스템은 매우 단순합니다. 본인의&amp;nbsp;글이나 기사들이&amp;nbsp;다른 웹사이트에서&amp;nbsp;표시되기를 원하는 웹 페이지들이 있을 것입니다. 이러한 페이지들의 집합을 RSS 피드라고 합니다. RSS 피드를 정의하는 파일은 XML파일형태이며 이 파일 내에는 URL, title, 그리고 각 페이지에서 보여주고자하는 내용들이 포함되어 있습니다. 자신의 컴퓨터에서 RSS 피드를 읽기 원하는 사람은 그 RSS 피드를 추가하고 RSS Reader 또는 브라우저를 사용하여 볼 수 있습니다. 콘텐츠 제공자(다른 웹사이트에서 페이지 정보를 보이길 원하는)로부터&amp;nbsp;RSS 파일을 로드하고 페이지의 URL을 추출하고 Title과 Summary를 표시합니다. 누군가가 해당 웹페이지에 방문하면 콘텐츠 제공자의 웹사이트에서 RSS 파일을 불러와 데이터를 표시해줍니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;RSS는 XML파일이며 제공받을 파일을 분석하여 표시해주는 것이라고 간단히 생각하면 될 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;RSS의 구조는?&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;RSS는&amp;nbsp;XML 파일입니다. RSS 내에는 최소 하나 이상의 Channel을 가지고 있어야 합니다. 채널은 이 RSS파일을 제공하는 웹사이트의 정보가 포함되어 있습니다.&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;제 블로그의 RSS를 이용해서 분석해 보겠습니다. 주소는 아래와 같습니다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;https://sonseungha.tistory.com/rss&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;처음 들어가면 펼쳐져 있지만, 모두 접은 상태에서부터 시작해보겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;가장 먼저 rss version이 보이고 channel이 보입니다. rss는 global&amp;nbsp; container이며 channel은 배포하는 채널의 정보가 담겨있습니다. 내부에는 또 많은 항목들이 포함되어 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;rss&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0a9989&quot;&gt;version&lt;/span&gt;=&lt;span style=&quot;color:#df5000&quot;&gt;&quot;2.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#0a9989&quot;&gt;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;channel&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;channel&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;rss&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;channel 내부를 확인해 보시죠. channel 내부에는 title, link, description, language, pubDate, generator, managingEditor, image와 여러가지 item 들이 포함되어 있는걸 볼 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;rss&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0a9989&quot;&gt;version&lt;/span&gt;=&lt;span style=&quot;color:#df5000&quot;&gt;&quot;2.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#0a9989&quot;&gt;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;channel&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;Developer's&amp;nbsp;Delight&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;http://sonseungha.tistory.com/&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Linux&amp;nbsp;System&amp;nbsp;Programmer.&amp;nbsp;Tizen&amp;nbsp;Framework&amp;nbsp;Programmer.&amp;nbsp;linuxias@gmail.com&amp;nbsp;https://github.com/linuxias/&amp;nbsp;https://linuxias.gitbooks.io/&amp;nbsp;https://www.linkedin.com/in/seungha-son-a97a02b3/&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;language&lt;/span&gt;&amp;gt;ko&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;language&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;pubDate&lt;/span&gt;&amp;gt;Wed,&amp;nbsp;14&amp;nbsp;Nov&amp;nbsp;2018&amp;nbsp;22:06:38&amp;nbsp;+0900&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;pubDate&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;generator&lt;/span&gt;&amp;gt;TISTORY&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;generator&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;managingEditor&lt;/span&gt;&amp;gt;Linuxias&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;managingEditor&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;image&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;Developer's&amp;nbsp;Delight&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;https://tistory4.daumcdn.net/tistory/1135772/attach/789073b7b20d4abbac3d4ee7d94fb25e&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;url&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;http://sonseungha.tistory.com&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Linux&amp;nbsp;System&amp;nbsp;Programmer.&amp;nbsp;Tizen&amp;nbsp;Framework&amp;nbsp;Programmer.&amp;nbsp;linuxias@gmail.com&amp;nbsp;https://github.com/linuxias/&amp;nbsp;https://linuxias.gitbooks.io/&amp;nbsp;https://www.linkedin.com/in/seungha-son-a97a02b3/&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;image&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;channel&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;rss&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하나씩 정리해보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &lt;b&gt;title&lt;/b&gt; : channel의 타이틀입니다. 'Developer's Delight'는 제 블로그의 제목입니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &lt;b&gt;link &lt;/b&gt;: 이 채널을 제공하는 웹사이트의 URL입니다. 제 블로그 주소네요.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &lt;b&gt;description &lt;/b&gt;: 웹사이트의 간략한 정보들입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &lt;b&gt;language &lt;/b&gt;: 별도로 설명이 필요없겠죠?&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &lt;b&gt;pubDate &lt;/b&gt;: 배포 일자입니다.&lt;br /&gt;&amp;nbsp; &lt;b&gt;image &lt;/b&gt;: 웹사이트에서 사용하는 이미지 정보가&amp;nbsp; 포함되어 있습니다. 지금은 스킨으로 인해 가려져있지만, 기본적으로 제 사진을 추가해 놓았습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &lt;b&gt;item &lt;/b&gt;: 컨텐츠에 대한 태그입니다. channel에 하나 이상의 item이 포함되어 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;원하는 컨테츠를 정보는 item 태그 내에 존재하는 것 같습니다. 하나만 펼쳐서 확인해 보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;라인 14~36을 보시면 제일 첫번째 item 내용을 볼 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;27&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;28&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;29&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;30&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;31&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;32&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;33&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;34&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;35&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;36&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;37&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;38&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;39&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;40&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;rss&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0a9989&quot;&gt;version&lt;/span&gt;=&lt;span style=&quot;color:#df5000&quot;&gt;&quot;2.0&quot;&lt;/span&gt;&lt;span style=&quot;color:#0a9989&quot;&gt;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;channel&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;Developer's&amp;nbsp;Delight&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;http://sonseungha.tistory.com/&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Linux&amp;nbsp;System&amp;nbsp;Programmer.&amp;nbsp;Tizen&amp;nbsp;Framework&amp;nbsp;Programmer.&amp;nbsp;linuxias@gmail.com&amp;nbsp;https://github.com/linuxias/&amp;nbsp;https://linuxias.gitbooks.io/&amp;nbsp;https://www.linkedin.com/in/seungha-son-a97a02b3/&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;language&lt;/span&gt;&amp;gt;ko&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;language&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;pubDate&lt;/span&gt;&amp;gt;Wed,&amp;nbsp;14&amp;nbsp;Nov&amp;nbsp;2018&amp;nbsp;22:06:38&amp;nbsp;+0900&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;pubDate&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;generator&lt;/span&gt;&amp;gt;TISTORY&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;generator&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;managingEditor&lt;/span&gt;&amp;gt;Linuxias&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;managingEditor&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;image&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;image&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;NUMA&amp;nbsp;BALANCING&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;http://sonseungha.tistory.com/488&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;link&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Kernel&amp;nbsp;Analysis&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Balancing&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Fault&amp;nbsp;statistics&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Linux&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Linux&amp;nbsp;Kernel&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;memory&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;NUMA&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;NUMA&amp;nbsp;balancing&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;NUMA&amp;nbsp;hinting&amp;nbsp;page&amp;nbsp;faults&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;NUMA&amp;nbsp;page&amp;nbsp;migraion&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Pseudo-interleaving&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Task&amp;nbsp;grouping&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;Task&amp;nbsp;placement&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;누마&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;category&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;author&lt;/span&gt;&amp;gt;Developer's&amp;nbsp;Delight&amp;nbsp;Linuxias&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;author&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;guid&lt;/span&gt;&amp;gt;http://sonseungha.tistory.com/488&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;guid&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;comments&lt;/span&gt;&amp;gt;http://sonseungha.tistory.com/488#entry488comment&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;comments&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;pubDate&lt;/span&gt;&amp;gt;Sat,&amp;nbsp;10&amp;nbsp;Nov&amp;nbsp;2018&amp;nbsp;16:20:44&amp;nbsp;+0900&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;pubDate&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;...&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;channel&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#066de2&quot;&gt;rss&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;title, link는 위에서 channel 바로 아래 존재하는 태그정보와 일치합니다. category는 티스토리에서 태그 붙이기 위해 작성한 커멘트들이네요. 그럼 실제 제가 블로그에 작성한 내용은 description에 존재할 것 같습니다. 펼친 정보를 보여드리고 싶지만, 너무 방대해서... 직접 들어가서 보시는게 더 좋을 것 같습니다.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;RSS에 대한 정리는 여기까지 하겠습니다. 자세한 내용은 검색하시면 더 많이 나오니 참고바랍니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;감사합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>ETC</category>
<category>RSS</category>
<category>RSS Feed</category>
<category>RSS 구조</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/489</guid>
<comments>https://sonseungha.tistory.com/489#entry489comment</comments>
<pubDate>Thu, 15 Nov 2018 00:18:19 +0900</pubDate>
</item>
<item>
<title>NUMA BALANCING</title>
<link>https://sonseungha.tistory.com/488</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;NUMA BALANCING에 대해 정리해보고자 합니다. NUMA BALANCING에 대한 설정은 kernel 분석 시 Configure로 설정할 수 있습니다. 먼저 NUMA에 대해 정리해보고 NUMA BALANCING에 대해 정리하겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;NUMA는 Non-Uniform Memory Access(불균일&amp;nbsp;기억장치 접근)의 약자입니다. 멀티프로세서 시스템에서 불균일 메모리 접근을 위한 설계 기법으로 개발되었습니다. NUMA 시스템에서 프로세서는 자신과 연결된 메모리를 가지고 있습니다. 프로세서와 메모리가 여러 노드를 구성하여 여러 노드가 모여 시스템을 이루고 있습니다. 노드 내 프로세서는 로컬메모리라하고 다른 노드의 메모리를 리모트 메모리라 합니다. 프로세서는 로컬메모리 뿐만 아니라 리모트메모리에도 접근할 수 있습니다. 로컬메모리에 접근하는 속도는 빠르며 다른 노드의 리모트 메모리의 접근은 속도가 느린 구조를 가지고 있습니다.&amp;nbsp;아래 NUMA 시스템의 간략한 예시 그림입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/NUMA.svg/300px-NUMA.svg.png&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;[출처 :&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt; Wikipedia]&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;프로세서에서 메모리 접근을 빠르게 향상시키기 위해 캐시메모리와 캐시미스를 줄이기위해 많은 알고리즘들이 개발되어 왔습니다. 하지만 프로세서에서 동작하는 어플리케이션은 더욱 더 고사양화 되어가며 더욱 많은 메모리를 필요로 하게되었습니다. 다중 프로세서 시스템에서는 여러 프로세서가 동시에 메모리 접근을 허용하지 않기에 성능에 치명적입니다. 그래서 각 프로세서 별로 자신의 로컬메모리를 사용함으로써 성능 향상을 꾀하였습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;NUMA에서도 성능에 대한 고려는 계속됩니다. 로컬메모리가 아닌 리모트메모리에 접근하는 경우 높은 Latency가 발생합니다. 프로세서의 스레드들도 리소스를 공유하면서 접근하기에 여러 성능에 대한 검토가 필요하게 됩니다. 다양한 성능 이슈를 커널 레벨에서 해결하기 위해 제안된 것이 NUMA Balancing 입니다. 레드햇에서 발표한 자료를 인용하면 NUMA Balancing의 전략은 아래와 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp; &lt;b&gt;-&lt;/b&gt;&amp;nbsp;&lt;b&gt;CPU follows memory : &lt;/b&gt;Reschedule tasks on same nodes as memory&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&amp;nbsp; - Memory follows CPU : &lt;/b&gt;Copy memory pages to same nodes as tasks/threads&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위의 두 가지 전략은 NUMA Balancing의 기본이 되는 역할을 하게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이제 NUMA Balancing에 대해 자세히 정리해보려 합니다. NUMA Balancing이 무엇인지 내부적으로 어떤 알고리즘을 사용하는 등에 대해 알아보겠습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;NUMA Balancing은 위에서 말씀드린 문제점과 그 문제점을 해결하기 위해 2가지 전략을 기반으로 만들어졌습니다. NUMA balancing은 주기적으로 태스크를 태스크가 필요로하는 데이터가 존재하는 메모리가 속한 노드로 옮기거나 다른 리모트메모리에 존재하는 필요한 메모리를 그 태스크가 실행되는 노드의 로컬 메모리로 가져옴으로서 성능향상을 하는 방법입니다. 위에서 설명한 2가지 전략이 그대로 반영되어 있는 것이죠. 그런 내부적으로 어떻게 동작하는지 알아보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;내부적으로는 크게 아래와 같이 나뉠 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• NUMA hinting page faults&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• NUMA page migration&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• Task grouping&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• Fault statistics&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• Task placement&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• Pseudo-interleaving&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;NUMA hinting page faults&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;각 태스크의 메모리는 주기적으로 Unmap 됩니다. 런타임에 주기적으로 동작하게 되며 Unmap된 메모리에 대해서는 페이지테이블에 접근 권한이 없음을 설정하게 됩니다. 그 후 태스크가 Unmap된 메모리에 접근하려하면 Page fault가 발생하게됩니다. 이 것이 NUMA hinting page faults 입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;NUMA page migraion&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;NUMA page fault는 다른 리모트메모리에 있는 페이지를 마이그레이션 하는 것보다 값이 싸므로 페이지를 바로바로 마이그레이션하는 것은 매우 부담스러운 동작입니다. 그래서 마이그레이션 기준을 Page fault가 두번 발생하면 마이그레이션을 하도록 합니다. 마이그레이션하는 노드는 해당 태스크가 동작하고 있는 노드가 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Fault statistics&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Fault statistics는 태스크를 이동시키기 위해 사용됩니다. 첫 번째 전략은 CPU follows memory에 기반한 방법입니다. Statistics는 각 태스크마다 가지고 있습니다. 각 NUMA Node마다 NUMA page fault 횟수를 카운팅하고 Page Fault 이후에&amp;nbsp;태스크가 접근하는 메모리 노드가 어디인지 알기위해 페이지 위치를 찾게됩니다. NUMA fault의 타입은 locality와 private vs shared로 나뉠 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• Locality&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&amp;nbsp; - Local fault vs Remote fault&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&amp;nbsp; - 태스크와 같은 노드에 있는 메모리와 다른 노드에 있는 메모리에 접근했을 때 Fault를 구분합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;• Private vs Shared&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&amp;nbsp; - Private fault : 동일한 태스크에 인해 연달아 2번 접근된 메모리&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&amp;nbsp; - Shared fault : 마지막 접근한 태스크와 다른 태스크에 의해 발생한 Fault&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Task placement&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;태스크를 수행하기 위해 어느 노드 프로세서에 위치시켜야 할지에 대한 문제는 그렇게 간단하지 않습니다. 태스크들은 메모리를 공유하는 경우가 많으며 노드에서 메모리에 접근하는 태스크들은 노드의 CPU 코어에서 수행할 수 있는 수보다 많은 스레드를 가지고 있을수도 있습니다. 그렇게되면 로드밸런서는 빠른 처리를 위해 스레드들을 다른 노드로 분산시켜버리게 됩니다. Task placement는&amp;nbsp;로드 불균형을 만들어내서는 안됩니다. 접근해야할 데이터가 이 노드에 있다고 한 노드에 집중된 로드를 분산시키지 못하게 해서는 안된다는 의미입니다. 그럼 Task placement를 어떻게 수행해야 할까요? N개의 노드가 있으며 노드 K에 태스크 a가 수행되고 있다고 가정해봅시다. Task placement는 태스크 a에 대해 모든 노드를 체크합니다. 체크하는 요소는 어느 노드에 태스크 a의 가장 큰 메모리 부분을 가지고 있는지를 점검하게됩니다. 만약 현재 노드 K보다 다른 노드 A에 더 많은 메모리 부분이 존재한다면 노드 A가 idle 상태인지 태스크를 옮겨도 되는지 확인합니다. 만약 idle 상태가 아니라면 현재 A에서 수행중인 태스크 t가 a가 수행되는 노드 K에서 더 잘 수행될 수 있는지 확인합니다. 그리고 태스크 t를 노드 K로 옮기는게 이익이 되는지 확인해야 합니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Task grouping&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;공유메모리를 사용하는 경우에 멀티테스크들은&amp;nbsp;대해&amp;nbsp;동일 메모리에 접근할 수 있습니다. 공유 메모리를 찾기위해 PID와 CPU번호를 사용하게 됩니다. NUMA task placement를 향상시키기 위해 NUMA fault가 발생했을 때 페이지가 마지막으로 Fault난 CPU를 확인하고 PID가 동일하다면 Task grouping으로 group으로 만듭니다. group은 연관된 태스크들로만 구성되어 있습니다. 이 group을 이용해 Task placement와 함께 Numa balancing을 향상시킵니다. 만약 태스크가 numa group에 속하고 다른 task가 이 numa_group으로 속하도록 한다면 효율적인 태스크 배치를 할 수 있습니다. 그림으로 나타내는 아래와 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:509px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F9989763F5BE81C0C358014&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9989763F5BE81C0C35&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.PNG&quot; height=&quot;216&quot; width=&quot;509&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;task grouping 전&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F9960BC3F5BE81C0D1DDFA2&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9960BC3F5BE81C0D1D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.PNG&quot; height=&quot;220&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;T&lt;span style=&quot;text-align: center;&quot;&gt;ask grouping &amp;amp; Task placement 적용 후&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;태스크를 묶는 방법은 통계학적 정보를 이용합니다. 그룹 정보는 그룹 내 태스크들에 대한 NUMA fault의 합으로 정리되고 해당 Task가 그룹에 속하게 되면 태스크의 정보가 아닌 그룹의 정보를 사용하게 됩니다. 비교된 태스크가 동일 그룹에 속하게 되면 좀 더 효율적으로 그룹 내의 태스크 배치를 할 수 있게됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Pseudo-interleaving&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;가끔 하나의 워크로드가 여러 노드로 퍼져있는 경우가 있습니다. 로드밸런서에 의해 다른 노드에 분산된 경우도 이에 해당합니다. 이런 경우에 메모리 Bandwidth를 최대화 하고 태스크가 사용하는 Private 메모리를 유지하면서도 페이지 마이그레이션을 최소화 해야 합니다. 아래 그림을 보시면 하나의 워크로드가 여러 노드에 퍼져있는 경우의 그림입니다. 대부분의 태스크의 메모리는 첫 번째 노드에 위치하고 있는데 다른 노드에 위치한 태스크들이 접근을 함으로서 성능에 문제를 주는 경우 십니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:489px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F991EDC385BE81D5810A654&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/991EDC385BE81D5810&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.PNG&quot; height=&quot;182&quot; width=&quot;489&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;그럼 어떻게 성능향상을 꾀할 수 있을까요? 메모리를 좀 더 효율적으로 노드별 분산을 시키면 좋을 것 같습니다. Pseudo-interleaving에서 사용하는 알고리즘은 다음과 같습니다. 페이지 마이그레이션을 위해 private fault를 항상 허용합니다. Shared Fault는 더 로드가 큰 노드에서 적은 노드로만 페이지 마이그레이션을 허용하게 됩니다. 이 말인즉&amp;nbsp;만약 Shared fault가 발생했을 때 로드가 큰 곳으로는 메모리 마이그레이션을 하지 않겠다는 의미입니다. 아래 그림을 참고하시죠.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:481px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F993F75375BE81E672706DA&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/993F75375BE81E6727&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4.PNG&quot; height=&quot;187&quot; width=&quot;481&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;페이지 마이그레이션을 이용하여 아래와 같이 만들어줍니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:482px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F999BEE375BE81E6717C6D2&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/999BEE375BE81E6717&quot; filemime=&quot;image/jpeg&quot; filename=&quot;5.PNG&quot; height=&quot;179&quot; width=&quot;482&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&amp;nbsp;지금까지 NUMA 시스템과 NUMA Balancing에 대해 간단히 정리해보았습니다. 더 자세한 정보와 추가적인 내용들은 아래 참고자료 링크들을 참고해주세요.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;긴 글 읽어주셔서 감사합니다. :D&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;[참고자료]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;http://www.linux-kvm.org/images/7/75/01x07b-NumaAutobalancing.pdf&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;https://ko.wikipedia.org/wiki/%EB%B6%88%EA%B7%A0%EC%9D%BC_%EA%B8%B0%EC%96%B5_%EC%9E%A5%EC%B9%98_%EC%A0%91%EA%B7%BC&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<category>Balancing</category>
<category>Fault statistics</category>
<category>Linux</category>
<category>Linux Kernel</category>
<category>memory</category>
<category>NUMA</category>
<category>NUMA balancing</category>
<category>NUMA hinting page faults</category>
<category>NUMA page migraion</category>
<category>Pseudo-interleaving</category>
<category>Task grouping</category>
<category>Task placement</category>
<category>누마</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/488</guid>
<comments>https://sonseungha.tistory.com/488#entry488comment</comments>
<pubDate>Sat, 10 Nov 2018 16:20:44 +0900</pubDate>
</item>
<item>
<title>Bit 연산 매크로</title>
<link>https://sonseungha.tistory.com/487</link>
<description>&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;overflow: auto; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifndef&lt;/span&gt;&amp;nbsp;__S_BIT_H__&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;__S_BIT_H__&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;s_bit_t;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifndef&lt;/span&gt;&amp;nbsp;TRUE&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;TRUE&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifndef&lt;/span&gt;&amp;nbsp;FALSE&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;FALSE&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_BIT_SET(NR,&amp;nbsp;BITS)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(NR&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;(1LL&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;BITS));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_BIT_SET_ALL(NR)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(NR&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;1LL);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_BIT_CLR(NR,&amp;nbsp;BITS)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(NR&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;~(1LL&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;BITS));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_BIT_CLR_ALL(NR)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(NR&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;~(&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;1LL));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_BIT_IS_SET(NR,&amp;nbsp;BITS)&amp;nbsp;&amp;nbsp;((NR&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;(1LL&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;BITS))&amp;nbsp;?&amp;nbsp;TRUE&amp;nbsp;:&amp;nbsp;FALSE)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_BIT_IS_CLR(NR,&amp;nbsp;BITS)&amp;nbsp;&amp;nbsp;((&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;(NR&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;(1LL&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;BITS)))&amp;nbsp;?&amp;nbsp;TRUE&amp;nbsp;:&amp;nbsp;FALSE)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;__S_BIT_H__*/&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;p&gt;&lt;span style=&quot;color: white; font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;cs&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사용 예시&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#include&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;stdio.h&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#include&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;s_bit.h&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s_bit_t&amp;nbsp;bits&amp;nbsp;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S_BIT_SET_ALL(bits);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S_BIT_CLR_ALL(bits);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S_BIT_SET(bits,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;4&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;S_BIT_SET(bits,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;8&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;printf&lt;/span&gt;(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;S_BIT_IS_SET(bits,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;7&lt;/span&gt;));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;printf&lt;/span&gt;(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;S_BIT_IS_SET(bits,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;4&lt;/span&gt;));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;printf&lt;/span&gt;(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;S_BIT_IS_CLR(bits,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;4&lt;/span&gt;));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;printf&lt;/span&gt;(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;S_BIT_IS_CLR(bits,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;7&lt;/span&gt;));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;$.&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;/&lt;/span&gt;test&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>C,C++</category>
<category>bit 연산</category>
<category>c</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/487</guid>
<comments>https://sonseungha.tistory.com/487#entry487comment</comments>
<pubDate>Thu, 08 Nov 2018 19:55:20 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] 스푸핑 공격 (Spoofing)</title>
<link>https://sonseungha.tistory.com/486</link>
<description>&lt;p style=&quot;text-align: center; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;b&gt;스푸핑 공격 (Spoofing)&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;스푸핑 공격 방법에 대해 정리해보겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;스푸핑(Spoofing)은 '속이다'라는 의미를 가지고 있는 단어입니다. 공격자가 공격대상을 속여서 공격하는 방법이겠네요. 시스템이 잘못된 정보를 올바른 정보로 속여서 받아들일 수 있도록 함으로서 공격하는걸까요? 자세한 건 공격 방법들을 살펴보며 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;ARP 스푸핑 공격&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;ARP는 IP 주소를 이용해 MAC 주소를 알아내기 위한 프로토콜입니다. &amp;nbsp;반대로 RARP는 MAC 주소로 IP 주소를 알아내기 위한 프로토콜이구요. ARP 스푸핑 공격은 MAC 주소를 속이는 것으로 공격하는 방법입니다. 로컬에서 통신하는 서버와 클라이언트의 IP 주소에 대한 데이터 링크 계층의 MAC 주소를 공격자의 MAC 주소로 속여 클라이언트에서 서버로 가는 패킷이나 서버에서 클라이언트로 가는 패킷이 공격자에게 전송되도록하는 방법입니다. 공격자는 서버에는 클라이언트 IP에 해당하는 가짜 MAC 주소를 만들어 전송하고 클라이언트에는 서버 IP에 해당하는 가짜 MAC 주소를 만들어 전송함으로써 모든 패킷흐름이 공격자를 통하도록 합니다. ARP 스푸핑의 대처방안은 ARP 테이블이 변경되지 않도록 MAC 값을 정적으로 고정시켜 놓는 방법이 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;IP 스푸핑 공격&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;IP 스푸핑 공격은 IP를 속여 공격하는 방법입니다. IP를 속임으로서 어떻게 공격하는지 정리하기 전 트러스트 인증에 대해 정의해야 할 것 같습니다. 트러스트란 서버에서 미리 알고있는 클라이언트가 접속하게 되면 아이디와 패스워드 입력 없이 로그인을 허용하는 방법입니다. 그럼 트러스트된 클라이언트의 IP를 얻어 서버에 접속하면 자동으로 로그인이 될 것 같습니다. 트러스트 관계인 서버와 클라이언트를 확인한 후 클라이언트에 DoS 공격을 하여 서버와의 연결을 끊습니다. 클라이언트의 IP를 확보하여 실제 클라이언트처럼 패스워드 없이 서버에 접근할 수 있습니다. IP 스푸핑을 막는 방법은 트러스트 인증법 자체를 사용하지 않는 것이 가장 확실할 것 같습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;DNS 스푸핑 공격&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;실제 DNS 서버보다 빠르게 위조된 DNS response 패킷을 보내 공격 대상이 잘못된 IP 주소로 웹 접속을 하도록 만드는 공격 방법입니다. 클라이언트는 이미 DNS response를 받았으므로 정상 DNS response는 드랍시킵니다. DNS 스푸핑을 막으려면 중요 서버에 대해 DNS query를 보내지 않고 hosts 파일에 해당 URL에 대한 IP를 등록해 놓음으로서 방지할 수 있습니다. 하지만 모든 서버에 대해 IP를 등록하는건 무리이므로 모든 DNS 스푸핑 공격을 방어하기는 어렵습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>ARP 스푸핑 공격</category>
<category>DNS 스푸핑 공격</category>
<category>IP 스푸핑 공격</category>
<category>spoofing</category>
<category>스푸핑</category>
<category>정보보호개론</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/486</guid>
<comments>https://sonseungha.tistory.com/486#entry486comment</comments>
<pubDate>Wed, 07 Nov 2018 14:19:57 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] 스니핑 (Sniffing)</title>
<link>https://sonseungha.tistory.com/485</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;스니핑 공격 기법 (Sniffing)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;스니핑 공격 기법에 대해 정리해보려 합니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;스니핑 공격은 공격대상에게 직접적으로 공격을 하지 않고 데이터만 몰래 들여다 보는&amp;nbsp;수동적 공격기법입니다. 간단히 스니핑 공격의 원리를 설명드리면 네트워크에서 송수신 되는 많은 데이터 중 본인에게 맞는 데이터만 보기 위해서&amp;nbsp;데이터 링크와 네트워크 레이어에서 필터링을 하고 있습니다. MAC 주소와 IP 주소를 확인해서 내 호스트와 맞지 않는 정보는 위 레이어까지 전달하지 않고 아래에서 필터링하게 되는거죠. 이 필터링을 만약 해제하게 된다면 필터링 되지 않고 위 레이어까지 모든 정보들이 전달되고 확인이 가능 할 것 같습니다. 랜 카드에는 &lt;b&gt;프로미스큐어스(Promiscuous)&lt;/b&gt; &lt;b&gt;모드&lt;/b&gt;란 녀석을 지원합니다. 이 모드를 이용해서 필터링을 해제 할 수 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;스니핑 공격에도 여러 종류가 있는데요, 각 &lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;공격방법&lt;/span&gt;&lt;/b&gt;에 대해 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;스위치 재밍 공격&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;스위치가 MAC 주소 테이블을 기반으로 포트에 패킷을 스위칭할 때 정상적인 스위칭을 하지 못하도록 하는 공격입니다. MACOF 공격이라고도 불립니다. 정상적으로 스위칭 하지 못하도록 하는 방법은 스위치의 특징을 이용하는 것인데요, 만약 스위치가 관리하는 MAC 주소 테이블에 정보가 모두 입력되서 테이블이 가득차면 허브처럼 패킷을 브로드캐스트하게 됩니다. 공격자는 위조된 MAC 주소를 계속해서 스위치로 보내고, 스위치는 위조된 MAC 주소로 테이블을 채우게 됩니다. 그렇게 MAC 테이블을 오버플로우 시키게되면 브로드캐스트로 인해 모든 패킷을 공격자가 받을 수 있습니다. 이 때 네트워크 속도가 현저히 저하되서 공격자에게도 영향이 있습니다. 요즘 고가의 스위치는 MAC 테이블의 캐시와 연산자가 쓰는 캐시가 독립적으로 구성되어 있어 스위치 재밍 공격을 통하지 않습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;ARP Redirect&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;공격자는 자기가 라우터인 것처럼 속여 공격하는 기법입니다. 위조된 ARP reply를 주기적으로 브로드캐스트함으로서 주변 기기들이 공격자를 라우터로 인식하도록 만들고 외부로 전달되는 모든 패킷을 공격자에게 전달되도록 합니다. 자신이 공격자라는 걸 숨기기 위해 주변 기기들은 정상 응답을 받아야하므로 공격자는 스니핑 이후 패킷을 IP Forwarding으로 게이트웨이로 전달해줘야 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;SPAN 포트 태핑(Port mirroring)&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;스위치의 포트 미러링(Port mirroring) 기능을 이용한 공격방법입니다. 포트 미러링이란 각 포트에 전송되는 데이터를 미러링하는 포트에도 동일하게 전달하는 것으로 침입 탐지 시스템, 네트워크 모니터링, 로그시스템 등에 많이 사용됩니다. 이 포트를 이용해 모든 정보를 볼 수 있습니다. 스니핑 공격에 악용될 수 있죠.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;ICMP Redirect&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;ICMP Redirect는 ARP Redirect와 동일하게 공격자가 라우터로 인식되도록 하는 공격방법입니다. 여러 라우터가 존재하는 네트워크 시스템에서 최적의 데이터 전송 경로를 찾기위해 네트워크 들은 여러 알고리즘으로 동작하게 되는데 공격자는 공격대상에게 자신이 라우터이고 최적의 경로라고 수정된 ICMP Redirect를 보내 데이터를 전달받습니다. ARP Redirect와 동일하게 게이트웨이로 다시 전달해줘야합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;4가지 정도의 공격방법에 대해 알아봤는데요, 그럼 스니핑 공격을 당하고 있는지 &lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;탐지하는 방법&lt;/span&gt;&lt;/b&gt;도 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Ping을 이용한 스니퍼 탐지&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;ping은 Transport 레이어에서 처리됩니다. 공격자로 의심이 되는 호스트에 네트워크에 존재하지 않는 MAC 주소로 위조된 ping을 보내면 Transport 레이어에서 다시 reply를 보내게 됩니다. 만약 공격자가 아니라면 ping 요청을 볼 수 없기에 reply가 있을 수 없습니다. 이 방법으로 공격자를 탐지할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;ARP를 이용한 탐지&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위조된 ARP request를 보냈을 때 ARP Response가 오면&amp;nbsp;&lt;b&gt;프로미스큐어스(Promiscuous)&lt;/b&gt;&amp;nbsp;&lt;b&gt;모드&lt;/b&gt;로 설정된 것입니다. ARP는 정적으로 구성하는 게 좋습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;DNS를 이용한 탐지&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;일반적인 스니퍼는 스니핑한 시스템의 IP 주소에 DNS의 Reverse-DNS lookup(IP를 이용하여 Domain Name을 찾는 것) 과정을 수행하게됩니다. 대상 네트워크로 ping sweep을 보내고 들어오는 Reverse-DNS lookup을 감시하면 스니퍼를 탐지할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;유인을 이용한 스니퍼 탐지&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;공격자를 유인하는 방법입니다. ID,&amp;nbsp;PW같은 정보를 스니핑하게 된 공격자들은 로그인을 시도하게 될텐데요, 유인을 위해 가짜 ID와 PW 정보를 네트워크 상에 계속 전송하고 이를 이용해 접속을 시도하면 스니퍼가 있다고 탐지할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;ARP watch를 이용한 탐지&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;ARP watch는 MAC주소와 IP 주소의 매칭 값을 초기에 저장하고 ARP 트래픽을 모니터링하여 위조한 패킷이 탐지되면 알려주는 툴입니다. 위조된 ARP를 사용하는 공격은 쉽게 탐지할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;이상으로 스니핑에 대해 정리해보았습니다. 감사합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>ARP Redirect</category>
<category>ICMP Redirect</category>
<category>security</category>
<category>sniffing</category>
<category>SPAN 포트 태핑(Port mirroring)</category>
<category>네트워크 보안</category>
<category>스니퍼 탐지</category>
<category>스니핑</category>
<category>스위치 재밍 공격</category>
<category>정보보호개론</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/485</guid>
<comments>https://sonseungha.tistory.com/485#entry485comment</comments>
<pubDate>Wed, 07 Nov 2018 11:49:10 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] SSL / TLS</title>
<link>https://sonseungha.tistory.com/483</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;SSL (Secure Socket Layer) 와 TLS (Transport Layer Security)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;SSL / TLS는 네트워크 상에서 전송되는 데이터를 암호화 하기 위한 규약입니다. 넷스케이프에서 개발된 SSL 3.0을 기반으로 TLS가 개발되었습니다. 데이터 암호화를 위한 규약은 많이 논의되고 개발되어 왔습니다. Point to Point로 Encryption 적용한 Link Encryption은 보안성은 좋으나 비효율적인 측면이 있었으며 Application Layer에서 암호화를 하는 End to End Encryption는 어플리케이션에서 직접 데이터를 암호화 복호화 함으로서 데이터는 숨길 수 있으나 보내는 이과 받는 이의 정보가 그대로 노출되는 문제가 있으며 웹 측면에서&amp;nbsp;웹페이지 HTML을 암호화하는 과정은&amp;nbsp;비효율적인 측면이 있습니다. SSL과 TLS는 Transport Layer에서 암호화와 복호화를 진행합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b style=&quot;font-size: 14pt;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;SSL (Secure Socket Layer)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;먼저 SSL (Secure Socket Layer) 에 대해 간략히 정리해보고자 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;SSL은많이 사용되는 보안서비스 중 하나입니다. SSL은 TCP에 의존적인 프로토콜의 집합으로써 구현되어있습니다. Application Layer와&amp;nbsp;Transport Layer사이에 SSL이 위치해 있으며, Handshake Protocol, ChangeCipherSpec Protocol, Alert Protocol, Record Protocol로 총 4개의 프로토콜로 구성되어 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;------------------------------------------------------------------------------&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;Application Layer&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;------------------------------------------------------------------------------&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;Handshake Protocol | ChangeCipherSpec Protocol | Alert Protocol&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;------------------------------------------------------------------------&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;Record Protocol&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;------------------------------------------------------------------------------&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;Transport Layer&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;------------------------------------------------------------------------------&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;1. Record Protocol&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Record Protocol은 데이터 교환을 위한 프로토콜입니다. SSL payload의 암호화를 위해(Confidentiality), 메시지 인증 코드(MAC, message authentication code)를 만들기 위해 Handshake protocol에서 정의한 shared secr et key를 사용합니다. 위에서 설명한 기능을 위해 여러 절차를 걸쳐 수행되는데요,&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:479px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F996EAE485C06334F184B21&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/996EAE485C06334F18&quot; filemime=&quot;image/gif&quot; filename=&quot;f14-3_big.gif&quot; height=&quot;316&quot; width=&quot;479&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;상위 레이어 프로토콜로 부터 전달된 Payload를 잘라내고(Fragment) 압축합니다.(Compression) 압축한 값을 다른 값을 이용해 Hash 함수를 이용해 MAC를 만들어 기존의 압축된 Payload 뒤에 붙여줍니다. 그럼 [&amp;nbsp;Compressed Fragment ]&amp;nbsp;가 [ Compressed Fragment | MAC ] 형태가 됩니다. 이렇게 만들어진 값을 다시 암호화(Encryption)함으로서 confidentiality를 보장하게 됩니다. 암호화된 fragment를 Record Protocol Header 앞에 붙여주게 됩니다. 매우 복잡한 과정을 거치게 되죠.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;2. HandShake&amp;nbsp;Protocol&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Handshake는 TCP/IP에 대해 알고계신분들은 익숙하실텐데요, SSL에서도 보안성 강화를 위해 Handshake 기법을 사용합니다. Handshake의 프로세스는 아래 그림과 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:456px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F99DAA24B5C063418103795&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99DAA24B5C06341810&quot; filemime=&quot;image/gif&quot; filename=&quot;f14-6_big.gif&quot; height=&quot;679&quot; width=&quot;456&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;서버-클라이언트 간 HandShake의 수행과정을 보여줍니다. 총 4개의 Phase로 나뉘어져 수행됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Phase 1. (client hello ~ server hello)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;클라이언트 - 서버 간 hello 메시지를 서로 전송합니다. 해당 메시지에는 프로토콜 버전, 세션 ID, cipher suite, 암축 방법, 초기 랜덤수 정보가 포함되어 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Phase 2. (Certificate ~ server_hello_done)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;서버는 certificate, key exchange를 보내고 certificate를 요청합니다. 서버가 보낸 Certificate 메시지에는 인증서가 포함되어 있으며 인증된 기관에서 발급된 것으로 서버가 신뢰할 수 있다는 것을 보장하게 됩니다. 그 후 server_hello_done 메시지로 끝났음을 알립니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Phase 3. (Certificate ~ Certificate_verify)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;클라이&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;언트는 서버에서 전달받은 인증서를 검증합니다. 유효기관, 발급기관등을 확인하고 인증되었다면 다음 단계로 진행합니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;클라이언트는 임의의 pre-master secret을 생성한 뒤, 서버가 보낸 인증서에 포함된 공개 키를 사용해 암호화합니다. 이렇게 암호화된 pre-master secret을 ClientKeyExchange 메시지에 포함시켜 서버에 전송합니다.&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;서버는 클라이언트로부터 전달받은 정보를 복호화하여 pre-master secret을 알아냅니다. 이정보를 이용해 master secret을 생성하게 되죠, 이 master secret을 이용해 지금부터 서버 클라이언트 간 데이터 송수신 시 암호화하는데 사용할 Session key를 생성하게 됩니다. 클라이언트는 pre-master secret을 이미 알고 있기에 스스로 Session key를 만들게 되고 이를 기반으로 통신을 하게 됩니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(55, 58, 60); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Phase 4. (change_cipher_spec ~ finished)&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify; margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;서버와 클라이언트는 동일한 Session key를 이용해 통신을 할 수 있습니다. change_cipher_spec 메시지를 서로 교환함으로서 모든 데이터는 Session key를 사용해 암호화할 것임을 알려주고 Finished 메시지를 통해 Handshake 과정을 종료합니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;위 단계를 거쳐 서버-클라이언트 간 안정한 통신을 할 수 있습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;3. Change Cipher Protocol&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;서버 - 클라이언트 간 암호화된 통신을 위해 일련의 암호화 알고리즘 정보를 사전에 협의하기 위해 상대방에서 보안 정보를 전송하는데 사용하는 프로토콜 입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;4. Alert Protocol&lt;/b&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;Handshake 진행 중 상대가 제시한 암호화 방식을 지원할 수 없는 경우나 그 외 여러 문제가 발생한 경우 문제를 알려주기 위한 기능을 수행하는 프로토콜 입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;더욱 상세한 내용은 기회가 된다면 다시 정리해보도록 하겠습니다. 감사합니다.&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>Secure Socket Layer</category>
<category>ssl</category>
<category>TLS</category>
<category>Transport Layer Security</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/483</guid>
<comments>https://sonseungha.tistory.com/483#entry483comment</comments>
<pubDate>Sun, 04 Nov 2018 21:24:18 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] 인증 (Authentication)</title>
<link>https://sonseungha.tistory.com/482</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;정보보호에서 Authentication, 즉 인증은 매우 중요한 요소입니다. 인증이란 시스템을 위해 또는 시스템에 의해 요청된 신원을 검증하는 과정입니다. 시스템을 사용하거나 정보를 요청하기 위해 매우 필수적인 요소입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;인증에는 크게 2가지 과정을 거칩니다.&lt;/span&gt;&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Identification step&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;보안 시스템을 위해 식별자를 전달하는 과정입니다. 비밀번호를 입력하거나 지문인식기에 손을 가져다 대어 지문이 인식되도록 하는 과정입니다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Verification step&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;입력된 정보와 시스템의 정보가 일치하는지 확인하는 과정입니다.&lt;/span&gt;&lt;/p&gt;&lt;/style=&quot;line-height:&gt;&lt;/style=&quot;line-height:&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;이런 인증은 여러 의미로 나뉠 수 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Something the individual &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;knows&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;개인이 알고 있는 정보 입니다. 패스워드나 PIN, 아니면 비밀번호를 찾기 위한 질문의 답 등입니다.&lt;/span&gt;&lt;/div&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Something the individual&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;has&lt;/span&gt;&lt;br /&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;개인이 소유하고 있는 정보입니다. 전자 스마트 카드나, OTP 와 같은 것입니다.&lt;/span&gt;&lt;/div&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Something the individual &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;is (static biometrics)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;정적 생체정보입니다. 지문이나, 얼굴, 홍채 인식등이 해당합니다.&lt;/span&gt;&lt;/div&gt;&lt;/style=&quot;line-height:&gt;&lt;/style=&quot;line-height:&gt;&lt;/style=&quot;line-height:&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;Something the individual does (dynamic biometrics)&lt;/b&gt;&lt;/div&gt;&lt;/style=&quot;line-height:&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;동적 생체정보입니다. 행위로 인증이 이뤄지는 과정으로 음성인식, 제스쳐 등이 있습니다.&lt;/div&gt;&lt;/style=&quot;line-height:&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;위와 같은 방식을 결합해서 많이 사용하게 되는데요, 결합하는 분류에 따라 2가지로 나뉩니다.&lt;/span&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Multi-Factor&lt;/b&gt; : 다른 요소의 결합입니다. 지문 + 비밀번호, OTP + 음성인식 등입니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;Multi-modal&lt;/b&gt; : 같은 modal을 함께 사용하는 방법입니다. &lt;/span&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;is &lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;에서 지문과 홍채를 함께 사용 하는 등의 방식입니다.&lt;/span&gt;&lt;/div&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;요즘 인증을 위해서&amp;nbsp;비밀번호 외에도 OTP, 지문, 홍채 등 다양한 방법을 사용하고 새로운 보안 인증을 위한 여러 방식들이 연구, 개발되고 있습니다. 그럼에도 가장 오래되고 보편적으로 많이 사용되는 인증방법이 비밀번호라는 것은 분명합니다. 하지만 다양한 방식 중 가장 취약한 인증 방법도 비밀번호 입니다. 사람들은 취약하다는 생각보단 본인이 기억하기 쉽고, 입력하게 편한 비밀번호를 선호하게 됩니다. 이러한 비밀번호는 매우 취약하여 정보보호 측면에서 매우 위험합니다. 사람들이 많아 사용하는 비밀번호 특징들은 아래와 같습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Default password : password, default, admin, guest 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Dictionary words: hello, apple, banana, ManU 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Words with number substitutions : password1, Real10 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Words with simple obfuscation : P@ssW0rd, @bcde 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Doubled words : abcabc, ReadRead, BoomBoom 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Common sequence : qwert, qwer1234, 1234567, asdfgh 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Numeric sequences based on well known numbers&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Identifiers : 1/10/1994, 010-0000-1234 등&lt;/div&gt;&lt;div style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;Anything personally related to you : 주민등록번호, 생일, 전화번호, 학번, 학교 등&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;위와 같은 비밀번호에 속하신다면 지금 당장 비밀번호를 변경할 것을 권고합니다. 매우 보안에 취약한 상태입니다. 많은 사람들이 보안에 강한 비밀번호를 만들고 싶지만 쉽지 않습니다. 특히 본인과 전혀 연관없는 형태의 비밀번호는 외우는게 매우 힘들죠. 그럼 조금이라도 강화하기 위한 방안은 무엇일까요? 많은 회원가입을 위한 서비스에서 추천하는 숫자, 특수문자, 소문자, 대문자를 우선적으로 섞어서 생성하는 방법입니다. 추가로 비밀번호의 길이도 길게 할수록 좋겠죠. 아까 위에서 설명한 유추하기 쉬운 비밀번호는 피하는게 가장 좋습니다. 반복되는 문자도요!&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;서비스 개발자들이 이런 취약점에도 보호하기 위해 다양한 기법을 사용해서 보안성을 높이고 있습니다. 비밀번호를 기억하지 않고 단방향 해쉬함수를 이용해 서버가 해킹을 당해도 비밀번호를 알 수 없도록 하거나, 몇 회 이상 틀렸을 시 로그인을 하지 못하게 잠군다거나 하는 방법들입니다. 그럼에도 매우 간단한 비밀번호 설정은 Brute-Force 방식으로 쉽게 비밀번호를 알아낼 수 있습니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;그럼 비밀번호를 해쉬화하는 것만으로 안정성 보장이 될까요? 그렇진 않습니다. 서버가 보안이 100% 완벽하다면 괜찮겠지만, 그러기엔 쉽지 않습니다. 그럼 해쉬된 비밀번호를 데이터를 취득했다고 하면 어떻게 비밀번호를 추측할 수 있을까요? 추측 가능한 방법이 있다면 단방향 해쉬도 안전하진 않을겁니다. 여러 방법들이 있겠지만, 그 중 Rainbow Table 기법에 대해 간략히 소개 드리겠습니다.&lt;/span&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/style=&quot;line-height:&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Rainbow Table&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/style=&quot;line-height:&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Rainbow Table은 brute force보다 훨씬 좋은 성능을 내는 방법입니다. 암호화된 비밀번호를 풀어내기 위해 미리 계산된 테이블을 이용하여 비밀번호를 구해내는 방법입니다. Rainbow Table은 시간과 메모리의 Trade off가 큰 방법입니다. 사전에 정의된 단어를 해쉬함수를 이용해 해쉬값을 구하고 Reduce 함수를 이용해 새로운 값을 구합니다. 그 후 다시 해쉬함수를 이용해 새로운 해쉬값을 만들고 다시 Reduce 함수를 이용하고... 하는 과정을 반복하게 됩니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Rainbow_table1.svg/550px-Rainbow_table1.svg.png&quot;&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(0, 0, 0);&quot;&gt;(출처 : 위키피디아 https://ko.wikipedia.org/wiki/%EB%A0%88%EC%9D%B8%EB%B3%B4_%ED%85%8C%EC%9D%B4%EB%B8%94)&lt;/span&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;위 그럼에서 첫 번째 라인을 보시면 wikipedia를 해쉬화 해서 ao4kd 란 값을 얻었고 다시 Reduce함수를 이용해 secret 이란 값을 구합니다. 다시 secret을 해쉬화하고.. 다시 Reduce함수로 반복하다 보면 마지막엔 rootroot만 값을 구할 수 있습니다. 이런 과정을 통해 테이블을 만들게 됩니다. 그럼 이걸로 어떻게 비밀번호를 유추 할까요?&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;테이블을 생성할 때 위의 모든걸 저장하는게 아니라 처음 시작값과 끝 값만 가지고 있습니다. 위의 과정을 거쳤을 때 생성되는 테이블은 아래와 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;wigipedia | rootroot&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;abcdefgh | myname&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;.....&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp; passwd | linux123&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;시작과 끝값만을 이용해 테이블을 만들어 냅니다. 이런 방식으로 하면 메모리가 매우 적게 듭니다. 하지만 그만큼 계산해야 하는 시간은 늘어날 겁니다. 비밀번호를 유추하는 시간이 늘어나더라도 공간을 절약할 수 있는 이점이 있습니다. 그럼 다시 그림을 보면서 어떻게 비밀번호를 유추하는지 설명드리겠습니다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Rainbow_table1.svg/550px-Rainbow_table1.svg.png&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;훔친 Hash값을 이용해서 시작합니다. 만약 탈취한 정보에서 re3xes만 값을 이용한다고 가정해봅시다. 첫 번째 테이블부터 Reduce함수 Rn에서 R1순으로 대입하여 비밀번호를 구하게됩니다. 위 예시는 Reduce함수가 1,2,3 까지 존재하네요. 그럼 먼저 R3함수를 이용해서 re3xes값의 값을 찾으면 rambo만 값이 나온다고 합시다. 하지만 rambo는 어디에도 없으니 잘못 찾았네요. 다음 R2 함수에 대입해 봅시다. crypto란 값이 나올겁니다. crypto는 체인안에 존재하니 쭉 진행해봅니다. 진행하다보니 마지막 linux123을 구할 수 있습니다. linux123이 레인보우 테이블 내에 존재하네요! 그럼 이제 시작 값인 passwd를 이용해 다시 Hash -&amp;gt; Reduce를 반복하면 re3xe3란 해쉬값은 culture만 값을 해쉬화 하였음을 알 수 있습니다. 이렇게 비밀번호를 찾아내는 방법이 Rainbow table 입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;style=&quot;line-height: 2;&quot;=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; color: rgb(0, 0, 0);&quot;&gt;Salt&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/style=&quot;line-height:&gt;&lt;/ul&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;그럼 Rainbow Table을 이용한 공격에 대비하기 위해 어떤 방법이 나왔을까요? Salt에 대해 정리해보겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Salt는 Rainbow Table과 같이 미리 계산하여 생성해놓은 값을 이용한 공격을 막기 위해 만들어 졌습니다. 서버의 DB에 비밀번호를 저장할 때 Hash된 값만 저장했다면 Salt란 값과 비밀번호와 Salt란 값을 연산한 값을 해쉬함수에 입력함으로서 보안성을 향상시켰습니다. 이러한 경우 공격자가 해쉬된 비밀번호를 알아내더라도 비밀번호를 역으로 유추하기 매우 어려워집니다. 또한 사용자마다 다른 Salt를 사용한다면? 테이블을 만들어 내기 더 어려워 질 것 같습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 18.6667px; font-weight: 700; color: rgb(0, 0, 0);&quot;&gt;One Time Passwords(OTP)&lt;/span&gt;&lt;/div&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;단방향 해쉬함수를 연속적으로 사용함으로서 보안성을 향상시킨 기법입니다. 처음에 Alice란 사용자가 비밀번호를&amp;nbsp; 입력하여 인증 요청을 하면&amp;nbsp;서버에서는 Alice란 유저에 대해 비밀번호를 몇 번 해쉬함수를 적용할지에 대한 n 값과 hash_n(P0)값이 존재합니다. 이 n 값은 다시 사용자에게 전달되게 됩니다. n 값이 계속 업데이트 되면서 Alice란 유저는 그에 맞도록 초기 비밀번호를 n번 해쉬함수를 적용한 비밀번호가 이용을 위해 입력됩니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;h^n(x) = h(h^n-1(x))&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;h(h^n-1(x)&amp;nbsp;= h(h^n-2(x))&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;....&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;h1(x) = h(x)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;사용자는 x에 대해서만 알고있으면 됩니다. 단방향이기에 여러번 해쉬함수를 적용함으로써 역함수 계산을 매우 어렵게 만드는 방법입니다.&lt;/span&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;이후에도 다양한 공격기법이 나오고 다양한 방어기법들이 개발되어 왔습니다. 기회가 된다면 다음에 전체적으로 정리 할 수 있으면 좋겠네요. 지금은 인증에 관련된 글을 정리하고자 하니 이정도에서 인증을 위한 여러 기법들이 적용되고 있다라는 것만 알아주셨으면 좋겠습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;하드웨어의 발전으로 오랜 시간 걸리면 연산이 매우 짧은시간에 수행됨에따라 어떠한 비밀번호 암호화도 빠른 시간내에 해결되고 있습니다. 오직 Brute-force만으로 모든 비밀번호를 추정할 수 있는 단계까지 성장하고 있습니다. 비밀번호가 복잡하면 할수록 추정하는데 시간이 오래 걸리게되니 비밀번호는 항상 위에서 나열한 취약점은 피하고 복잡하고 어렵게 만드시는게 가장 좋습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;시스템에서 사용자 인증할 경우 발생할 수 있는 문제로 False positive와 False Negative가 있습니다. 잘못된 인증이 인증 성공이라고 확인되는 경우를 False positive라 하고 제대로 된 정보를 입력했음에도 인증 거절되는 것이 False negative입니다. 인증 측면에서 False Positive와 False Negative는 어떻게 되어야 할까요? 당연히 False Negative가 높아야 합니다. 잘못된 정보로 인증될바엔 정확한 정보로 인증을 했을 때 실패하더라도 잘못된 정보로 인증되는 일은 없도록 만드는게 보안측면에서 매우 좋을 것 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;이상으로 인증에 대해 간랸하게 정리해보았습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;감사합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>Authentication</category>
<category>brute force</category>
<category>Rainbow Table</category>
<category>레인보우테이블</category>
<category>인증</category>
<category>정보보호</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/482</guid>
<comments>https://sonseungha.tistory.com/482#entry482comment</comments>
<pubDate>Sun, 04 Nov 2018 20:42:53 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] Dos와 DDos (서비스 거부 공격)</title>
<link>https://sonseungha.tistory.com/481</link>
<description>&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;서비스 거부 공격은 네트워크 보안에서 단순한 공격 기법 중 하나입니다. 서비스 거부 공격의 목적은 정보 탈취가 아니라 서비스 방해에 있습니다. 악의적인 요청으로 시스템의 리소스를 소비하게 하여 서비스를 마비시키는 것이죠.&amp;nbsp;예를 들어 여러분들이 수업시간에 발표를 하고 있는데 발표 중 큰 소리로 계속 떠듬으로서 여러분들의 발표를 다른 사람들이 듣지 못하도록 하는 방식이나 장사를 하는 곳에서 손님이 들어오지 못하게 난동을 부리는 것도 해당할 것 같습니다. 서비스 거부 공격으로 Dos와 DDos에 대해 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;1. Dos (Denial of Service)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;1) 취약점 공격형&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;style=&quot;text-align: justify;=&quot;&quot; line-height:=&quot;&quot; 2;&quot;=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;보잉크, 봉크, 티어드롭 공격 (Boink, Bonk, TearDrop Attack) &lt;/b&gt;&lt;br /&gt;프로토콜의 오류 제어를 이용한 공격기법입니다. TCP 프로토콜은 상호 연결간 유효성과 신뢰성을 위해 데이터 송수신 시&amp;nbsp;다양한 오류제어 기법을 사용합니다. TCP 프로토콜에서 사용하는 오류제어 기법으로 Sequence number가 있습니다. 패킷의 순서와 손실여부, 그리고 손실된 패킷의 재전송을 위한 오류제어 기법인데요, Sequence number를 조작한다면 어떻게 될까요?&lt;br /&gt;보잉크, 봉크 공격 기법은 Sequence Number를 이용하여 공격하는 기법입니다. Sequence Number를 조작하여 동일한 Sequence Number로 변조하게 되면 시스템은 잘못된 Sequence Number에 대한 오류를 처리하기 위해 많은 리소스를 소비하게 되고 결국 제대로 된 서비스를 제공하지 못하게 합니다.&lt;br /&gt;티어드롭 공격은 Sequence Number의 범위를 변조함으로서 서비스를 방해하는 기법입니다. 만약 1~100, 101~200, 201 ~ 300과 같이 정상적인 Sequence Number에게 1~80, 101~200, 150~210, .. 과 같이 Sequence Number를 겹치거나 중간에 홀을 두게되면 시스템은 그 처리를 하기 위해 리소스를 소비해서 되는 공격입니다. 위와 같은 공격은 과부하가 걸리거나 계속 반복되는 패킷은 무시하고 버리게 처리하게 됩니다.&lt;/p&gt;&lt;style=&quot;text-align: justify;=&quot;&quot; line-height:=&quot;&quot; 2;&quot;=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;br /&gt;랜드 공격 (Land Attack)&lt;/b&gt;&lt;br /&gt;Land Attack은 IP 변조로 공격하는 기법입니다. 패킷 전송 시 Source와 Destination IP를 동일하게 설정하여 서버에게 전달합니다. 그럼 패킷을 전달받은 서버 측에서는 3-Way HandShaking을 위해 SYN 패킷의 주소에게 SYN + ACK 를 전송하게 됩니다. 하지만 Source의 IP가 서버의 IP로 설정되어 있으므로 해당 패킷은 다시 자신에게 돌아오게 되고 다시 ACK를 위해 서버가 자신에게 전송하게 됩니다.&amp;nbsp;&lt;/p&gt;&lt;/style=&quot;text-align:&gt;&lt;/style=&quot;text-align:&gt;&lt;style=&quot;text-align: justify;=&quot;&quot; line-height:=&quot;&quot; 2;&quot;=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/style=&quot;text-align:&gt;&lt;/ul&gt;&lt;div style=&quot;text-align: justify; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;2) 자원 고갈 공격형&lt;/b&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;자원 고갈 공격형은 시스템이 사용하는 리소스를 비정상적으로 소비하게 함으로서 서비스를 방해하는 공격입니다. CPU, 네트워크 대역 등 다양한 리소스를 소비하도록 만듭니다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;Ping of Death Attack&lt;/b&gt;&lt;br /&gt;각 네트워크 장비 마다 패킷을 쪼개서 전송하는 특성을 이용한 기법입니다. 여러분들이 보낼 수 있는 ping의 가장 큰 크기의 패킷을 만들어 봅시다. 여러분들은 하나의 패킷만 보낸다고 생각하겠지만, 각 장비를 거치면서 수십, 수백개의 패킷으로 쪼개질 수 있습니다. 그럼 하나의 패킷 전송이 서버 측에서는 수십, 수백개의 패킷으로 나눠져서 들어와서 쪼개진 패킷에 대해 모두 처리해야 하는 로드가 발생할 수 있습니다. 이 특성을 이용하여 공격하는 기법입니다. ping 명령을 수행 시 가장 긴 길이의 패킷을 만들어 계속 보내는 방식의 공격입니다. 이러한 문제 해결방법 중 하나는 ping은 ICMP 프로토콜인데 ICMP 프로토콜에 대해서는 차단을 하는 방식으로 처리하면 될 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;SYN Flooding Attack&lt;/b&gt;&lt;br /&gt;3-Way HandShaking을 생각해보면 SYN - SYN+ACK - ACK의 순으로 이루어지는데요, 클라이언트에서 서버에게 SYN을 요청한 이후에 SYN+ACK를 무시하게 되면 어떻게 될까요? 서버에서는 ACK를 받기 위해 대기중이 됩니다. 이 방식을 이용한 공격 기법이 SYN Flooding Attack입니다.&amp;nbsp;많은 서버들은 서버 접속자 수를 제한해 놓고 있는데요, 위와 같은 방법으로 무수히 많은 SYN를 전송하게 되고, 서버에서는 ACK+SYN 요청을 전송 후 ACK를 받기 위해 기다리는 시간으로 인해 다른 정상적인 요청을 처리할 리소스가 없는 상황이 되는 겁니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;HTTP GET Flooding Attack&lt;/b&gt;&lt;br /&gt;3-Way Handshaking으로 클라이언트-서버간 정상적으로 접속이 된 후에 공격하는 기법입니다. HTTP GET 요청을 함으로서 서버를 무력화 시키는 공격입니다. 서버-클라이언트 간 연결된 후에 특정 페이지를 무한대로 요청함으로서 서버 측에서 정상적으로 연결된 클라이언트의 요청을 처리하기 위해 시스템 리소스를 소비하게 만듭니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;HTTP Cache Control 공격&lt;/b&gt;&lt;br /&gt;이 공격은 HTTP 1.1버전에 적용된 Cache Control 옵션을 변경할 수 있도록 한 기능을 이용한 공격기법입니다. 현재는 잘 사용되지 않으며 공격받은 서버에서도 탐지가 쉽고 많은 리소스를 사용하지 않아 잘 사용되지 않습니다. 원리는 서버-클라이언트 간 중간에 캐시를 두어 변경되지 않은 내용에 대한 Request에 대해 캐시에 저장된 데이터를 이용해 빠른 응답을 보이는 Cache 기능을 이용합니다. Cache Control 옵션을 'no-store, must-revalidate' 옵션을 사용하여 데이터를 캐시에 저장하지 않고 서버 측에서 데이터를 재검증하도록 요청하는 옵션을 설정하믕로써 서버의 부하를 증가시키는 기법입니다. 특히 고사양의 이미지등을 많이 사용하는 웹페이지에 대해서 사용하게 된다면 큰 영향을 줄 수 있을 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;Dynamic HTTP Request Flooding Attack&lt;/b&gt;&lt;br /&gt;위에서 설명한 HTTP GET Flooding, HTTP Cache Control 공격방법은 지정된 페이지에 대해 서버에게 요청하는 공격인데 해당 패턴은 쉽게 캐치될 수 있고 서버측에서 쉽게 방어할 수 있습니다. Dynamic HTTP Request Flooding Attack은 서버에서 패턴을 캐치하지 못하도록 다양한 웹 페이지에 대해 동적으로 요청하는 페이지를 변경하여 서버에 요청하는 공격 방법입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;슬로 HTTP Header DoS Attack&lt;/b&gt;&lt;br /&gt;서버로 전달하는 HTTP의 헤더를 변경하여 공격하는 방법입니다. 헤더에 포함된 정보를 비정상적으로 조작함으로서 서버가 모든 데이터를 전달 받을 때까지 연결을 강제로 연결시켜 놓는 방법입니다. HTTP 헤더와 바디를 구분하는 구분자들을 변조하게 되고, 변조된 HTTP 데이터로 인해 서버는 데이터가 모두 수신될 때 까지 기다리도록 만드는 방법입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;슬로 HTTP POST Attack&lt;/b&gt;&lt;br /&gt;HTTP POST 메소드를 사용한 공격기법입니다. 헤더를 조작하는건 위 슬로 HTTP Header DoS Attack과 동일합니다. 변조하는 정보는 헤더의 Content-Length 필드에 매우 큰 값을 입력함으로써 서버에서 Content가 모두 들어올 때까지 계속 연결을 유지시킴으로서 다른 사용자의 요청을 처리하지 못하도록 리소스를 낭비하도록 합니다. 이때 HTTP의 바디 데이터를 매우 드문드문 시간 간격으로 전송함으로서 최대한 장시간 연결을 유지하도록 합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;br /&gt;스머프 공격&lt;/b&gt;&lt;br /&gt;ICMP 프로토콜과 다이렉트 브로드캐스트를 이용한 공격방법입니다. ping을 이용해 클라이언트가 서버에게 전송하고 응답받는 방법을 브로드캐스트와 접목하였습니다. 기본적인 브로드캐스트는 기본적으로 라우터를 넘어서지 못하는데 Source IP를 임의의 IP를 작성하고 Destination IP에 브로드캐스트 IP인 255.255.255.255를 기입합니다. 그럼 Source IP에 적힌&amp;nbsp;네트워크로 ping이 브로드캐스팅 됨으로써 라우터를 넘어설 수 있습니다. 이 방법이 다이렉트 브로드 캐스트입니다. 이렇게 브로드캐스트로 전달받은 ping을 서버 IP로 변경해 놓은 시작 IP주소로 ICMP Reply를 전달하게 됨으로서 서버의 리소스를 소모하게 만드는 공격 방법입니다.&lt;/p&gt;&lt;/ul&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;2. DDos (Distributed Denial of Service)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size:12pt;&quot;&gt;&lt;b&gt;&lt;/b&gt;DDoS는 말그대로 분산 서비스 거부 공격입니다. 공격자가 중간 시스템에 공격을 명령하고 중간 시스템에서 관리하는 각 PC들이 서버에게 로드를 가하는 방법입니다. 공격자는 중간 시스템과 공격자를 악성 코드를 이용해 좀비 PC로 만들고 해당 PC들에게 공격을 가하는 기법이기에 정확한 공격자를 찾기 어려운 측면이 있습니다. 악성 프로그램이 퍼져나갈수록 좀비 PC를 늘어날테고 서버 즉, 공격대상 또한 피해가 크게 되는 방법입니다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size:12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size:12pt;&quot;&gt;간단하게 Dos와 DDoS에 대해 정리해보았습니다. 감사합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size:12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size:12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: right;&quot;&gt;&lt;span style=&quot;font-size:12pt;&quot;&gt;참고 | 정보 보안 개론 3판, 양대일 지음&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>DDoS</category>
<category>denial of service</category>
<category>dos</category>
<category>서비스 거부 공격</category>
<category>정보보호개론</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/481</guid>
<comments>https://sonseungha.tistory.com/481#entry481comment</comments>
<pubDate>Sun, 04 Nov 2018 16:29:50 +0900</pubDate>
</item>
<item>
<title>[정보보호개론] 정보보안의 3가지 속성</title>
<link>https://sonseungha.tistory.com/480</link>
<description>&lt;div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Confidentiality (기밀성)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;비인가된 사용자의 정보 접근은 막고 인증된 사용자만이 정보에 접근할 수 있음을 뜻합니다. Confidentiality와 가까운 예로서 암호, 방화벽, 인증 등이 있습니다.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Integrity (무결성)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;권한을 가진 사용자만이 정보를 변경할 수 있음을 뜻합니다. 예를 들어 각 나라에서 발행하는 지폐는 해당 국가의 기관이 주관하게 될텐데요, 그와 별개로 다른 기관이나 개인이 지폐의 형태나 위조를 하는건 불법입니다. 또는 나의 인스타그램의 사진을 내가 아닌 누군가가 바꿀 수 있다는건 무결성을 잃게된 경우입니다.&amp;nbsp;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Availability (가용성)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;필요한 시점에 정보에 대한 접근이 가능하도록 하는 것입니다. 요즘 많이 사용하는 삼성페이의 경우에 나의 카드를 등록해서 내가 결제를 원하는 시점에 사용할 수 있어야 합니다. 만약 정책적으로 오후 1시부터 5시까지만 사용할 수 있다면 정보에 대한 가용성을 잃게 됩니다.&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: right;&quot;&gt;참고 : 정보 보안 개론 개정 3판 | 양대일 지음&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Security</category>
<category>security</category>
<category>정보보호개론</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/480</guid>
<comments>https://sonseungha.tistory.com/480#entry480comment</comments>
<pubDate>Sun, 04 Nov 2018 13:05:23 +0900</pubDate>
</item>
<item>
<title>zone_size_init</title>
<link>https://sonseungha.tistory.com/479</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;[분석 기준]&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&amp;nbsp;kernel version : linux kernel 4.16&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&amp;nbsp;architecture : aarch64 (arm64)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px;&quot;&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;memblock_init() 에서 zone_sizes_init() 함수를 분석한다. 분석 기준은 CONFIG_NUMA가 설정되어 있다는 가정하에 설정한다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;zone_sizes_init() 함수에 전달되는 min, max는 DRAM의 memblock 시작과 끝 주소를 전달한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding: 6px; border-right: 2px solid rgb(229, 229, 229); height: 182px;&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding: 6px 0px; height: 182px;&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 11pt;&quot;&gt;#ifdef&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;CONFIG_NUMA&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;//&amp;nbsp;IMRT&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;yes!&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;zone_sizes_init(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;min,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;max)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;max_zone_pfns[MAX_NR_ZONES]&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;};&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(IS_ENABLED(CONFIG_ZONE_DMA32))&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;max_zone_pfns[ZONE_DMA32]&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;PFN_DOWN(max_zone_dma_phys());&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;//&amp;nbsp;IMRT&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;DMA32&amp;nbsp;빼고&amp;nbsp;나머지&amp;nbsp;전부&amp;nbsp;NORMAL&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;max_zone_pfns[ZONE_NORMAL]&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;max;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;free_area_init_nodes(max_zone_pfns);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align: bottom; padding: 0px 2px 4px 0px; height: 182px;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 11pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 12 :&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;NUMA 시스템인 경우 전체 노드에 대해 초기화를 해야하므로 free_area_init_nodes() 함수를 호출한다. CONFIG_NUMA가 설정되지 않은 경우에는 free_area_init_node() 함수가 호출되서 하나의 노드만을 초기화한다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;memblock_init()&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; -&amp;gt; zone_sizes_init()&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp; &amp;nbsp; -&amp;gt; free_area_init_nodes()&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 1.5;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding: 6px; border-right: 2px solid rgb(229, 229, 229); height: 1870px;&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;21&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;22&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;23&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;26&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;27&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;28&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;29&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;30&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;31&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;32&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;33&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;34&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;35&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;36&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;37&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;38&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;39&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;40&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;41&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;42&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;43&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;44&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;45&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;46&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;47&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;48&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;49&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;50&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;51&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;52&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;53&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;54&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;55&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;56&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;57&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;58&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;59&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;60&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;61&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;62&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;63&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;64&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;65&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;66&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;67&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;68&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;69&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;70&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;71&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;72&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;73&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;74&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;75&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;76&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;77&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;78&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;79&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;80&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;81&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;82&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;83&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;84&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;85&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;86&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;87&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;88&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;89&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;90&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;91&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding: 6px 0px; height: 1870px;&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;free_area_init_nodes&amp;nbsp;-&amp;nbsp;Initialise&amp;nbsp;all&amp;nbsp;pg_data_t&amp;nbsp;and&amp;nbsp;zone&amp;nbsp;data&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;@max_zone_pfn:&amp;nbsp;an&amp;nbsp;array&amp;nbsp;of&amp;nbsp;max&amp;nbsp;PFNs&amp;nbsp;for&amp;nbsp;each&amp;nbsp;zone&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;This&amp;nbsp;will&amp;nbsp;call&amp;nbsp;free_area_init_node()&amp;nbsp;for&amp;nbsp;each&amp;nbsp;active&amp;nbsp;node&amp;nbsp;in&amp;nbsp;the&amp;nbsp;system.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;Using&amp;nbsp;the&amp;nbsp;page&amp;nbsp;ranges&amp;nbsp;provided&amp;nbsp;by&amp;nbsp;memblock_set_node(),&amp;nbsp;the&amp;nbsp;size&amp;nbsp;of&amp;nbsp;each&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;zone&amp;nbsp;in&amp;nbsp;each&amp;nbsp;node&amp;nbsp;and&amp;nbsp;their&amp;nbsp;holes&amp;nbsp;is&amp;nbsp;calculated.&amp;nbsp;If&amp;nbsp;the&amp;nbsp;maximum&amp;nbsp;PFN&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;between&amp;nbsp;two&amp;nbsp;adjacent&amp;nbsp;zones&amp;nbsp;match,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;assumed&amp;nbsp;that&amp;nbsp;the&amp;nbsp;zone&amp;nbsp;is&amp;nbsp;empty.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;if&amp;nbsp;arch_max_dma_pfn&amp;nbsp;==&amp;nbsp;arch_max_dma32_pfn,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;assumed&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;that&amp;nbsp;arch_max_dma32_pfn&amp;nbsp;has&amp;nbsp;no&amp;nbsp;pages.&amp;nbsp;It&amp;nbsp;is&amp;nbsp;also&amp;nbsp;assumed&amp;nbsp;that&amp;nbsp;a&amp;nbsp;zone&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;starts&amp;nbsp;where&amp;nbsp;the&amp;nbsp;previous&amp;nbsp;one&amp;nbsp;ended.&amp;nbsp;For&amp;nbsp;example,&amp;nbsp;ZONE_DMA32&amp;nbsp;starts&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*&amp;nbsp;at&amp;nbsp;arch_max_dma_pfn.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;free_area_init_nodes(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;max_zone_pfn)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;start_pfn,&amp;nbsp;end_pfn;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 11pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;i,&amp;nbsp;nid;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Record&amp;nbsp;where&amp;nbsp;the&amp;nbsp;zone&amp;nbsp;boundaries&amp;nbsp;are&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(arch_zone_lowest_possible_pfn,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(arch_zone_lowest_possible_pfn));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(arch_zone_highest_possible_pfn,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(arch_zone_highest_possible_pfn));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start_pfn&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;find_min_pfn_with_active_regions();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;;&amp;nbsp;i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;MAX_NR_ZONES;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;ZONE_MOVABLE)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;end_pfn&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;max(max_zone_pfn[i],&amp;nbsp;start_pfn);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arch_zone_lowest_possible_pfn[i]&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;start_pfn;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arch_zone_highest_possible_pfn[i]&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;end_pfn;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start_pfn&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;end_pfn;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Find&amp;nbsp;the&amp;nbsp;PFNs&amp;nbsp;that&amp;nbsp;ZONE_MOVABLE&amp;nbsp;begins&amp;nbsp;at&amp;nbsp;in&amp;nbsp;each&amp;nbsp;node&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(zone_movable_pfn,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;sizeof&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(zone_movable_pfn));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;find_zone_movable_pfns_for_nodes();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Print&amp;nbsp;out&amp;nbsp;the&amp;nbsp;zone&amp;nbsp;ranges&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;Zone&amp;nbsp;ranges:\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;;&amp;nbsp;i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;MAX_NR_ZONES;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;ZONE_MOVABLE)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;&amp;nbsp;&amp;nbsp;%-8s&amp;nbsp;&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&amp;nbsp;zone_names[i]);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(arch_zone_lowest_possible_pfn[i]&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arch_zone_highest_possible_pfn[i])&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_cont(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;empty\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_cont(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;[mem&amp;nbsp;%#018Lx-%#018Lx]\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(u64)arch_zone_lowest_possible_pfn[i]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;PAGE_SHIFT,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((u64)arch_zone_highest_possible_pfn[i]&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;PAGE_SHIFT)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Print&amp;nbsp;out&amp;nbsp;the&amp;nbsp;PFNs&amp;nbsp;ZONE_MOVABLE&amp;nbsp;begins&amp;nbsp;at&amp;nbsp;in&amp;nbsp;each&amp;nbsp;node&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;Movable&amp;nbsp;zone&amp;nbsp;start&amp;nbsp;for&amp;nbsp;each&amp;nbsp;node\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;;&amp;nbsp;i&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;MAX_NUMNODES;&amp;nbsp;i&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(zone_movable_pfn[i])&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;&amp;nbsp;&amp;nbsp;Node&amp;nbsp;%d:&amp;nbsp;%#018Lx\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&amp;nbsp;i,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(u64)zone_movable_pfn[i]&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;PAGE_SHIFT);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Print&amp;nbsp;out&amp;nbsp;the&amp;nbsp;early&amp;nbsp;node&amp;nbsp;map&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;Early&amp;nbsp;memory&amp;nbsp;node&amp;nbsp;ranges\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for_each_mem_pfn_range(i,&amp;nbsp;MAX_NUMNODES,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;start_pfn,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;end_pfn,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;nid)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 11pt;&quot;&gt;&quot;&amp;nbsp;&amp;nbsp;node&amp;nbsp;%3d:&amp;nbsp;[mem&amp;nbsp;%#018Lx-%#018Lx]\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&amp;nbsp;nid,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(u64)start_pfn&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;PAGE_SHIFT,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((u64)end_pfn&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;PAGE_SHIFT)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 11pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Initialise&amp;nbsp;every&amp;nbsp;node&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mminit_verify_pageflags_layout();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setup_nr_node_ids();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for_each_online_node(nid)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pg_data_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;pgdat&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;NODE_DATA(nid);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;free_area_init_node(nid,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 11pt;&quot;&gt;NULL&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;find_min_pfn_for_node(nid),&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 11pt;&quot;&gt;NULL&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 11pt;&quot;&gt;/*&amp;nbsp;Any&amp;nbsp;memory&amp;nbsp;on&amp;nbsp;that&amp;nbsp;node&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;(pgdat&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 11pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;node_present_pages)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node_set_state(nid,&amp;nbsp;N_MEMORY);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;check_for_memory(pgdat,&amp;nbsp;nid);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;zero_resv_unavail();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align: bottom; padding: 0px 2px 4px 0px; height: 1870px;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 11pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/479</guid>
<comments>https://sonseungha.tistory.com/479#entry479comment</comments>
<pubDate>Sat, 03 Nov 2018 17:33:33 +0900</pubDate>
</item>
<item>
<title>[Agent] Software Agent Architecture</title>
<link>https://sonseungha.tistory.com/478</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;소프트웨어 에이전트 아키텍쳐에 대해 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;에이전트 구조는 3개로 크게 나뉠 수 있습니다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Deliberative : 의도적인, 신중한&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Reactive : 반응하는&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Hybrid : Deliberative + Reactive&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;용어 의미만 보아서 파악할 수 있는건 Hybrid밖에 없는 것 같네요. 하나씩 정리해보도록 하겠습니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Deliberative Agents&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Deliberative Agents는 명확하게 표현되어 질 수 있는 실세계의 상징적 모델이며 Symbolic reasoning을 통해 결정을 만들어 나가는 에이전트입니다. Sense-plan-act 를 통한 문제 해결방식으로 Deliberative 구조로 BDI, GRATE*, HOMER, Shoham 등이 유명합니다. Deliberative는 Deductive reasoning agents와 Practical reasoning agents로 나뉘어져 있습니다. Deductive reasoning은 연역적 추론을 기반으로 한 Agent이며 Practical reasoning은 실용적 추론을 기반으로 한 Agent 입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Deliberative Agent는 아래와 같은 플로우를 가집니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;Input -&amp;gt; &lt;b&gt;[ Sensors -&amp;gt; World Model -&amp;gt; Planner -&amp;gt; Plan Executor -&amp;gt; Effector ]&lt;/b&gt;&amp;nbsp;-&amp;gt; Output&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;입력에 대해 Sensing하고 Model에 대해 목표 달성을 위한 Plan을 세우게 됩니다. 이 때 Plan은 하나일 수도 있고 여러개 일 수도 있습니다. 그 중 목표달성을 위한 적절한 Plan을 선택하여 실행하게 되는 순서입니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Deliberative Agents의 문제는 Performance와 Representation 문제가&amp;nbsp;있습니다. Performance는 환경이 급속하게 변화된다면 상징적 표현을 필요한 모든 정보로 변환하는데 시간 소모가 많습니다. Representation은 어떻게 세계 모델이 상직적으로 표현될 수 있는가와 그리고 결과를 유용하게 사용할 수 있도록 제 시간에 정보를 근거로 에이전트를 추론하는 방법에 대한 문제가 있습니다. 이렇게 느린 결과는 쓸모가 없을 뿐더러 실제 세계 모델은 매우 복잡하기에 심볼로만 처리하기엔 어려움이 많습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Deliberative Agents에는 Deductive Reasoning과 Practical Reasoning이 있다고 말씀드렸는데요, 이 둘에 대해 자세히 정리해 보겠습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;먼저 Deliberative Agent입니다. 연역적 추론을 기반으로하는 에이전트 인데요, 연역적 추론이란 전제들이 참이면 결론은 항상 참이라는 것이 보장되는 추론입니다. 에이전트가 어떻게 정리 이론을 이용해서 무엇을 하는지 결정해야하는가? 에 대한 질문을 던질 수 있는데요, 기본적인 아이디어는 주어진 상황에서 수행가능한 최고의 액션을 서술하는&amp;nbsp;이론을 인코딩하는 사용하는 것입니다. 뭔가 어렵네요. Deductive Reasoning은 매우 단순하고 논리적인 의미를 담고있습니다. 하지만 어떻게 어떻게 실세계의 정보를 심볼정보로 변경할 지, 추론에 대한 시간 복잡도는 어떨지 고민해봐야 할 것 같습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;다음 Practical Reasoning입니다. Practical Reasoning은 행동에 대한 Reasoning입니다. Practical reasoning은 두 개의 activity로 구성되어 있는데요, Deliberation과 Means-ends reasoning입니다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Deliberation (숙고, 신중함) : 달성하고자 하는 일의 상태가 무엇인지 결정하는 것&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Means-ends reasoning (방법 목적 추론) : 일의 상태들을 달성하기 위해 어떻게 해야하는지 결정하는 것&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;어렵네요. Deliberation은 달성하고자 하는 일 자체의 상태이고, Means-ends reasoning은 일의 상태를 달성하기 위해 어떠한 과정을 결정해야 하는 것인가(?) 로 생각해보면 좋을 것 같습니다. Deliberation의 출력이 곧 Intentions입니다. Intentions이란 용어는 에이전트가 선택하고 실행해야할 일의 상태를 말합니다. Practical reasoning에서 중요한 역할을 하는 녀석입니다. Intentions은 means-ends reasoning을 드라이브하고 지속됩니다. 미래의 Deliberation을 제한하기도 하며 미래에 대한 Belief들과 연관된 녀석입니다. 좀 어렵나요? 천천히 정리해보시기 바랍니다. 다음 Means-end reasoning은 에이전트에게 달성하기 위한 목표, 수행할 수 있는 액션들, 환경의 표현을 주기 위함입니다. 목표를 달성하기 위한 계획을 생성하는 것입니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Reactive Agents&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;Reactive agent는 내부적으로 세계의 표현을 매우 단순화하였으며 Perception과 Action이 매우 강하게 결속되어 있는 에이전트입니다. 행위 기반 에이전트의 전형적인 예로서 에이전트 내부에서 각 상태에 따른 Agent가 나뉘어져 있습니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;[&amp;nbsp;State 1&amp;nbsp;-&amp;gt; Action 1&amp;nbsp;]&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;[ State 2&amp;nbsp;-&amp;gt; Action 2 ]&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;Sensors -&amp;gt;[&amp;nbsp;State 3&amp;nbsp;-&amp;gt; Action 3&amp;nbsp;] -&amp;gt;Effectors&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&amp;nbsp;[ State 4 -&amp;gt; Action 4 ]&lt;/div&gt;&lt;div style=&quot;line-height: 2; text-align: center;&quot;&gt;&amp;nbsp;[ State 5&amp;nbsp;-&amp;gt; Action 5 ]&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;위 처럼 Sensor에서 받아들인 입력을 각 State로 전달하고 액션을 결정하여 Effector로 전달합니다. 각 행위는 지각의 입력에서 출력이 연속적으로 매핑되어 있는 구조입니다. Reactive Agents는 매우 단순하고 경제적이며 구현하기 매우 쉽습니다. 시스템 문제에 대한 강건성 또한 이 에이전트의 이점입니다. 하지만 문제도 다양합니다. 환경 모델 없는 에이전트들은 지역적 환경으로부터 가능한 충분한 정보를 가져야 합니다. 만약 지역 환경을 기반으로한 결정들은 비지역 환경들에 대해선 어떻게 고려할 것이냐도 문제가 됩니다. 또한 Reactive agents는 학습시키 매우 어렵습니다. 마지막으로 상호작용하는 요소들과 환경에 따라 동작이 달라지기 때문에 특정 에이전트를 엔지니어링 하기 어렵습니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Hybrid Agents&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;Hybrid Agent는 Deliberative와 Reactive 행위의 결합입니다. 계획을 세우거나 상징적 추론을 사용해 결정을 만드는 시스템과 복잡한 추론 없이 이벤트에 대해 빠르게 반응하는 시스템이 Hybrid Agent의 서브시스템으로 구성되어 있습니다. Sensor와 Effector 사이에 Deliberative 요소와 Reactive 요소가 함께 포함되어 있습니다.&amp;nbsp;Deliberative와 Reactive를 자세히 알아보았으니 Hybrid는 두개의 결합이라고 이해하면 가장 좋을 것 같습니다 :D&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;잘못된 내용이나 궁금한 내용은 댓글 부탁드립니다. 긴 글 읽어주셔서 감사드립니다.&lt;/div&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>AI - Theory</category>
<category>Architecture</category>
<category>Deliberative agent</category>
<category>Hybrid Agent</category>
<category>Reactive Agent</category>
<category>Software Agent</category>
<category>소프트웨어 에이전트</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/478</guid>
<comments>https://sonseungha.tistory.com/478#entry478comment</comments>
<pubDate>Sun, 28 Oct 2018 21:21:46 +0900</pubDate>
</item>
<item>
<title>[Agent] Communication</title>
<link>https://sonseungha.tistory.com/477</link>
<description>&lt;p style=&quot;text-align: center; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;Communication between agents&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;에이전트들간의 커뮤니케이션을 알아보기 이전에 한 가지 용어를 정리하고자 합니다. 'Speech Act' 란 용어입니다. Speech Act는 한국어로 언어행위론 이라고 정의할 수 있습니다. 언어행위론이란 언어를 통해 이루어지는 행위를 말합니다. 나는 너를 용서한다 라고는 말하면 말로써 행위가 표현되듯 언어가 어떤 영향을 주는지에 대해 초점이 맞춰져 있습니다. 명령, 요구 등으로 나뉠 수 있죠.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;그럼 이제 커뮤니케이션에 대해 정리해보겠습니다. 예를 들어서 살펴보죠. 개인비서 에이전트가 있다고 합니다. 이 에이전트에게 여러분은 김군과 저녁 약속을 잡아달라고 요청합니다. 그럼 이 에이전트를 어떠한 것들이 필요할까요? 간단히 생각해 보세요. 김군의 저녁 일정들이 필요할 것 같네요. 그리고 약속을 위한 약속장소의 정보도 필요할 것 같습니다. 약속을 잡기위한 목표를 이루기 위해 MAS가 필요할 것 같네요. 약속을 잡기 위한 전체 흐름을 살펴보죠.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:706px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F990BCA445BD574BD0E1127&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/990BCA445BD574BD0E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Notes_181028_173408_219_1.jpg&quot; height=&quot;378&quot; width=&quot;706&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;먼저 DA에게 김군 일정을 관리하는 에이전트가 누군지 문의합니다. 김군의 에이전트를 모르니 정보를 알아야겠죠. DA는 모든 정보를 관리하는 중계 에이전트라고 생각하시면 됩니다. DA에서 전달받은 김군 에이전트의 정보를 이용해 약속 가능한 일정을 문의하고 답변받은 리스트 중 선택한 요일을 알려줘 약속을 최종적으로 잡게되는 흐름입니다. 생각보다 단순하죠? 위 그림에서 저렇게 에이전트간 커뮤니케이션를 어떻게 이루어지는지에 대해 살펴보게 될 것 입니다. 여기서 목표는 김군과 약속을 잡는 것으로 김군 캘린더에 나의 시간을 할당받는 것입니다. 목표를 이루기 위한 Intention으로 김군의 캘린더 에이전트를 찾는 것도 있을테구요. 그 Intention은 Speech act로 이루어 집니다. DA에게 누가 김군 캘린더를 관리하니? 란 Speech가 행위로 연결되죠.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;에이전트간 커뮤니케이션을 위한 언어가 정의되어 있습니다. Agent Communication Language입니다. ACL은 다른 위치와 행동을 하는 에이전트들 간의 커뮤니케이션을 할 수 있도록 해주고 각 에이전트가 가진 정보와 지식을 교환할 수 있도록 지원해주는 역할을 합니다. 사람의 언어와 똑같은거죠. 처음엔 커뮤니케이션을 Remote Procedure Calls나 Remote Method Invocation과 같은 방식을 사용했습니다. 하지만 사람과 유사한 방식을 만들고자 노력하였고 유연하면서도 요청이나 역할을 다룰수 있는 방식으로 진화하며 만들어졌습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;MAS에서 커뮤니케이션은 가장 처음 설명한 Speech act 이론에서 영감을 받아 만들어졌습니다. 사람들이 매우매우 Goal과 Intention을 달성하기 위해 어떻게 언어를 사용하였는지 확인하였고 사람과 가장 유사한 방식이길 바랬습니다. 일반적으로 Speech Act는 2가지 요소로 나눠볼 수 있습니다. Performative verb(실행자)와 Propositional content(상태)입니다. 실행자는 Request, Inform 등을 행하게되고, Content는 그 정보가 되는 것이죠. 단순 예시를 들어보겠습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;784&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border:none;border-collapse:collapse;;font-family:&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:16px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 196px; height: 33px; border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&amp;nbsp;Speech Act&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 196px; height: 33px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&quot;문을 닫아주세요&quot;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 196px; height: 33px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&quot;문을 닫혀있다&quot;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 196px; height: 33px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&quot;문이 닫혀있나요?&quot;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 196px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Performative(실행자)&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Request(요청)&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;Inform(정보)&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Inquire(문의)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 196px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Content(상태표현)&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;문이 닫혀있다.&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;문이 닫혀있다.&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;문이 닫혀있다.&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;Speech Act에 따라 Performative는 문에 대한 요청이나 정보, 문의등이 되고 Content는 그에 따른 상태표현이 됩니다. 이렇게 Speech act는 물리적인 행위로서 간주될 수 있습니다. 행위는 선행조건(precondition)&amp;nbsp;또는 후행조건(postcondition)으로 특화될 수 있습니다. 만약 A가 B에서 t를 요청한 경우에 대해 선행 조건은 'A는 B가 t를 할 수 있다고 믿는다.' , 'A는 B가 t를 할 수 있다는걸 B가 믿는다는걸 믿는다' , 'A는 A가 t를 원한다고 믿는다' 는 조건이 될 수 있다. 후행조건은 'A가 t를 원한다고 A가 믿는걸 B는&amp;nbsp;믿는다' 라는 의미입니다. 음, 설명해 놓고나니 무슨 말인지 잘 모르겠네요. 다음에 좀 더 좋은 예시가 있다면 수정하겠습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;Speech Act를 기반으로 제작된 ACL은 다른 에이전트들과 효율적으로 커뮤니케이션하거나 지식 정보를 교환할 수 있도록 해줍니다. ACL의 3가지 측&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;면(Syntax, Semantics, Pragmatics)에서 바라보면 Syntax는 어떻게 커뮤니케이션의 실&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;볼들이 구조화되는지하는 것이며, Semantic은 심볼이 나타내는 것이 무엇인지, Pragmatics는 심볼을 어떻게 이해하는지에 관한 관점입니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;ACL로서 대표적인 언어 중 하나로 KQML이 있습니다. KQML은 (&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;Knowledge Query and Manipulation Language)의 약자인데요,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Dotum, AppleGothic, sans-serif; font-size: 12px; margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;에이전트 간의 지식과 정보의 교환을 위해 설계된 통신 언어입니다.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;일반적으로 질문, 선언, 신뢰, 요구, 획득, 묘사, 제공 등과 같은 정보에 대한 상태를 교환하는 데 사용되는 일종의 메시지 포멧이라고 보시면 됩니다. KQML의 카테고리는 아래와 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;784&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border:none;border-collapse:collapse;;font-family:&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:16px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 201px; height: 24px; border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&amp;nbsp;Category&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 583px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&amp;nbsp;Performatives&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 201px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp;Basic Query&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 583px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;evaluate, ask-if, ask-one, ..&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 201px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp;Multi-response Query&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 583px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;stream-about, stream-all&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 201px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp;Response&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 583px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;reply, sorry&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 201px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp;Generic Informational&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 583px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;tell, achieve, cancel, ..&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 201px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp;Generator&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 583px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;Standby, ready, next, rest, ...&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;KQML에는 송신자, 수신자, 그들의 주소 등 통신과 관련된 요소들을 나열한 통신 계층과 수행어로써 메시지의 성질을 정의하는 메세지 계층, 실제적인 메시지가 들어 있는 내용 계층이 있습니다. 또한 커뮤니케이션 프로토콜을 만들기 위해 도와주는 Facilitator도 포함하고 있습니다. Facilitator는 유용한 커뮤니케이션 서비스를 제공하기 위핸 에이전트들의 특별한 그룹입니다. 여기서 말하는 유용한 커뮤니케이션 서비스란 서비스 네임등록을 유지하거나 메시지를 서비스들에게 전달하거나 Content 기반의 메시지들을 Routing 하는 기능, 찾고자하는 자와 정보를 가진 에이전트를 매칭시켜주거나 하는 역할을 말합니다. Facilitator의 예시를 한번 보겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;A, B란 에이전트가 있고 F란 이름의 Facilitator가 있다고 가정합니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;1. A-B간 Point-to-Point Protocol&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;Point-to-point protocol에선 A가 B에게 X에 대한 정보를 얻기 위해 ask(X)를 다이렉트로 하고 B또한 A에게 tell(X)로 받아들입니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;2. Using the subscribe performative&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;A -&amp;gt; F : subscribe(ask(X))&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;A가 F에게 ask(X)에 대한 구독을 요청합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;B- &amp;gt; F : tell(X)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;B가 F에게 X에 대한 정보를 알립니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;F -&amp;gt; A : tell(X)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;F가 A에게 X의 정보를 알려줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;위 방식은 F를 통해 구독을 요청하고 정보를 F를 통해 받는 방식입니다. A, B간에는 어떠한 경우도 다이렉트로 커뮤니케이션 하는 일이 없습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;3. Using the broker Performative&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;A -&amp;gt; F : broker(ask(X))&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;A가 F에서 X를 해결해줄 에이전트를 찾음.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;B -&amp;gt; F : advertise(ask(X))&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;B는 F에게 X를 처리할 수 있다고 자신을 광고하고 알림&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;F -&amp;gt; A : tell(X) and F -&amp;gt; B : ask(X)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;위 구조는 F가 브로커 역할을 하여 A와 B의 요청을 각각 처리해 줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;4. Using the recruit performative&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;A -&amp;gt; F : recruit(tell(X))&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;tell(X)를 처리해줄 수 있는 적절한 에이전트를 찾아달라고 요청합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;B -&amp;gt; F : advertise(ask(X))&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;B는 F에게 ask(X)를 자신이 처리할 수 있는 에이전트라고 광고합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;F -&amp;gt; B : ask(X)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;A에게 요청한 ask(X)에 적절한 B 에이전트를 찾았고 B에게 ask(X)를 보낸다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;B -&amp;gt; A : tell(X)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;F를 거치지 않고 B가 A에게 다이렉트로 응답합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;5. Using the recommend performative&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;A -&amp;gt; F : recommend(ask(X))&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;A가 F에게 ask(X)를 처리해줄 수 있는 에이전트를 추천해 달라고 요청한다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;B -&amp;gt; F : advertise(ask(X))&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;B는 F에게 ask(X)를 처리해 줄 수 있는 에이전트라고 광고한다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;F -&amp;gt; A : reply(B)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 4em;&quot;&gt;F는 A에게 B가 알맞은 에이전트라고 알려준다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;A -&amp;gt; B : ask(X)&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;B -&amp;gt; A : tell(X)&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;text-align: left; line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;위와 같이 A,B란 에이전트와 F (Facilitator)의 관계에서의 예시를 살펴보았습니다. 조금 이해가 되시나요?&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;그럼 KQML이 아닌 FIPA ACL에 대해 정리해보겠습니다. FIPA는 The Foundation for Intelligent Physical Agents의 약자입니다. FIPA의 목적은 에이전트 기반의 어플리케이션, 서비스들의 성공을 위해 만들어진 곳입니다. 공공의 이익을 위한 집단입니다. FIPA가 집단이면 FIPA ACL은 FIPA에서 만든 ACL이겠죠? FIPA ACL은 KQML과 매우 유사합니다. Performative도 존재하구도 Content도 존재하구요. 메시지 구조는 봉투 형태를 띄고 있습니다. 메시지 내용은 봉수 내에 들어있고 봉투에는 전송 정보만 작성되어 있는 형태입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;FIPA ACL에서 기본적인 Performative는 Inform 과 Request입니다. Inform과 Request의 의미는 두 부분으로 정의할 수 있습니다. Precondition(사전조건, speech act가 성공하기 위해 진실이여야만 하는 것들) 과 Rational effect(합리적 영향, 그 메신지의 발신자가 가져오길 바라는 것)입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;784&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border:none;border-collapse:collapse;;font-family:&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:16px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 126px; height: 24px; border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 298px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;Inform&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 359px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(255, 228, 0);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Request&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 126px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Content&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 298px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;statement&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 359px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;action&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 126px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Precondition&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 298px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&amp;nbsp;Content가 사실이라고 주장.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&amp;nbsp;수신자가 Content를 믿도록 의도.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&amp;nbsp;미리 수행하지 않음&lt;br /&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 359px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&amp;nbsp;수행할 작업 내용을 의도.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&amp;nbsp;수신자가 이 작업을 할 수 있다고 믿음.&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;KQML과 FIPA ACL을 잠시 비료해 보죠.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;KQML과 FIPA ACL의 유사한 점은&amp;nbsp;Outer Language(Performative)와 Inner Language(Content)가 분리되어 있으며 어떤 content language도 허용한다는 점입니다. 차이점은 KQML은 Performative를 FIPA ACL은 communicative act를 좀 더 중점에 두고 있다는 것과 다른 프레임워크 사용으로 KQML과 FIPA Performative 간 정확한 매핑이나 전송이 불가능하며 KQML은 facilitator를 지원하지만 FIPA ACL는 그렇지 않다는 점이죠. KQML은 무조건 중계자가 있어야 함으로 중앙 집중식 구조가 되며, Facilitator에 로드가 크다는 단점이 있을 수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;에이전트 간 커뮤니케이션하기 위한 방법으로 Speech Act를 기반으로 만들어진 ACL과 ACL 중 가장 많이 사용되는 KQML, FIPA ACL에 대해 정리해보았습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;긴 글 읽어주셔서 감사합니다. 수정되어야 할 부분이나 질문있으시면 댓글로 언제든지 부탁드립니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>AI - Theory</category>
<category>agent</category>
<category>communication</category>
<category>mas</category>
<category>MultiAgentSystem</category>
<category>Software Agent</category>
<category>Speech Act</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/477</guid>
<comments>https://sonseungha.tistory.com/477#entry477comment</comments>
<pubDate>Sun, 28 Oct 2018 17:52:29 +0900</pubDate>
</item>
<item>
<title>[Agent] MAS (Multi-agent System)</title>
<link>https://sonseungha.tistory.com/476</link>
<description>&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;MAS (Multi-agent System)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;현재 세계의 시스템에선 하나의 agent로는 모든 처리를 할 수 없습니다. 그래서 각각의 기능을 담당하는 여러 agent를 생성하여 협업 또는 조율하게 만드는 방법을 사용하기도 합니다. 이번 글에서는 MAS, Multi-agent System에 대해 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Multi-agent System (지금부턴 MAS라 칭하겠습니다.)은 시스템 내에 여러 agent를 가지고 있는 시스템입니다. 각 agent 간 커뮤니케이션을 통해 상호작용을 하게 되고, 서로 다른 작업을 하기에 &quot;spheres of influence&quot; 라고 불리는 자신만의 환경 영역을 가지고 있습니다. 즉 변화하는 환경에 대해 영향을 받거나 주는 환경이 다를 수 있습니다. 분산 AI 측면에서 MAS를 살펴보면 하나의 Agent로는 해결하기 어려운 문제들을 여러 Agent가 서로 보유한 다른 정보들과 능력을&amp;nbsp;이용하여 해결하게 됩니다. 문제의 해를 찾기위해 함께 동작하게 되며 서로간은 루즈하게 결합되어 있습니다. 각각의 agent는 문제 해결을 위해 불완전한 기능들을 가지고 있습니다. 하나의 agent만으로는 문제 해결이 불가능하단 얘기이죠. 또한 MAS는 중계자, 전체 시스템을 컨트롤하는 녀석이 별도로 존재하지 않고 각 데이터도 agent들에게 분산되어 있기에 탈 중앙화 시스템입니다. 이러한 탈 중앙화로 보안성과 안정성이 확보되었습니다. 개별적으로 agent가 동작할 수 있기에 비동기적으로 동작되는 시스템입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;MAS에서 agent가 모두 협렵하는 방식으로 구성되는 건 아닙니다. agent들이 서로 경쟁하도록 만들수도 있죠. 문제해결을 위한 방법 중 하나인데요. 하나의 문제를 협력하여 해결하는게 아니라 서로 경쟁시킴으로써 가장 좋은 해를 구할 수 있게 됩니다. 뭐가 더 좋은지는 상황에 따라 다르겠지요. 좀 더 자세히 Cooperative MAS와 Competitive of Self-interested MAS에 대해 정리해 보죠&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Cooperative MAS&lt;/p&gt;&lt;/li&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;대표적인 MAS domain입니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;분산&amp;nbsp;문제 해결로 각 agent는 자율성이 낮습니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;협력과 팀웍을 위한 모델로써 각자 새우는 계획이 다릅니다. 다른 동작을 하기 때문이죠.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;Competitie of Self-interested MAS&lt;/p&gt;&lt;/li&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;분산된 합리성입니다. 투표나 경쟁하는 시스템입니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;협상 등에 자주 사용되는 모델입니다.&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;MAS의 전통적인 모델은 서버-클라이언트 모델이였습니다. 서버-클라이언트 간 커뮤니케이션 또한 매우 Low-level의 메시지들을 사용하였으며 동기적으로 동작하였습니다. 클라이언트가 요청하면 서버가 응답하는 구조였죠. 하지만 지금은 여러 Agents들이 Peer-to-Peer로 연결되어 있으며 서버라는 개념이 없습니다. 캡슐화된 메시징 기법으로 보안성도 강화화였으며 High-level의 메시지 프로토콜들을 사용하게 되었습니다. MAS를 연구하는 사람들은 Agent간 커뮤니케이션을 매우 중요하게 생각하였습니다. 그래서 멀티 시스템에 맞는 Communication Language, Interaction Protocol 들을 개발하게 되었지요. 개발에 영감을 준건 곤충의 군집생활입니다. 이런 MAS와 같은 시스템에 좋은 본보기가 될 수 있죠. 공통의 목적을 위해 어떻게 군집활동을 하고 어떻게 커뮤니케이션하며 어떠한 룰을 정하는가와 같은 점을 토대로 만들었습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;그럼 유명한 MAS 몇개 모델만 간단히 정리해보겠습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Object Manager Group (OMG)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;일반적인 패턴들과 정책들을 사용하여 협업하는 에이전트들과 에이전시들로 구성되어 있습니다. 에이전트는 능력, 상호협력의 타입으로 특정지어지며 에이전스들은 에이전트들의 동시 실행, 보안 등을 지원하는 녀석입니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;FIPA(Foundation for Intelligent Physical Agents)'s Model&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Agents, Agent Platform, Directory Facilitator, Agent Management System, Agent Communication Channel, Agent Communication Language 로 구성되어 있는 모델입니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;KAoS'S Model&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;에이전트를 위한 개방형 분산 아키텍쳐입니다. 다양한 에이전트 구현들을 정의하고 있으며 에이전트 간 커뮤니케이션을 위해 대화 정책을 사용합니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;OAA Model&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;User Interface, NL to ICL, Application, Meta에이전트들과 이 에이전트들이 커뮤니케이션을 하는&amp;nbsp;Facilitator 에이전트로 구성되어 있습니다. 어플리케이션은 API를 통해 Application Agent를 사용하게 되고 User Interface 에이전트는 사용자의 요청등을 처리하게 됩니다. 각 에이전트간의 커뮤니케이션은 모두 Facilitator 에이전트가 중재하게 되는 구조입니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;General Magic's Model&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;전자상거래를 위한 금융 에이전트로 시작되었습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Zeus (MAS development toolkil)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;MAS 개발을 위한 개발도구 입니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;MAS의 각 Agent들은 서로 조직을 이루기 위해 다른 기능을 가지고 있는데요, 그 기능들 사이의 종속성들을 관리하는 과정을 Coordination이라고 합니다. Coordination을 통해 순서나 병렬적 수행들을 관리할 수 있죠. 이런 Coordination은 Activity, Conversation, Implementation 3가지 측면에서 살펴보겠습니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Activity&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;실행해야 할 행위가 무엇인지 언제 실행되어야 하는지에 대한 것입니다. 분산 태스크에 대해 Statechart나 Flowchart, process algebra 등으로 표현할 수 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Conversation (State)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;협력하는 개체들간의 대화 구조가 무엇인지에 대한 것입니다. FSM, Petri-Nets, State Transition Diagram 등이 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Implementation&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;어떻게 분산 시스템을 구현할지 협력하는 행위들의 요소들이 어디에 위치해야 할지에 대한 것입니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;또한 MAS는 기본 협업 메커니즘(Coordination mechanism)에 기초한 지식을 교환하여 단일 목표에 도달하기 위해 에이전트 간 협업을 합니다. 대표적인 예시가&amp;nbsp;CNP(Contract Net protocol)입니다. CNP는 4개의 Phase로 구성되어 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Phase 1 - Task Announcement&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;계약 에이전트가 태스크를 수행할 능력이 있는 에이전트들이 나타나도록 브로드캐스팅합니다. 그 태스크를 수행하기 위한 잠재적 후보자들을 평가하기 위함입니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Phase 2 - Submission of Bids / Proposal&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;요구를 만족하고 태스크를 수행할 능력이 있는&amp;nbsp;에이전트들은 계약 에이전트에게 입찰을 하게 됩니다. 본인이 해당 태스크를 처리할 수 있도록 말이죠.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Phase 3 - Selection&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;계약 에이전트는 받은 입찰들을 기반으로 최종 후보자를 선택하는 과정을 진행합니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Phase 4 - Contract awarding&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;계약 에이전트, 최종 선택된 에이전트간 계약이 성립되고 상호 커뮤니케이션을 위한 채널이 생성됩니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;위와 같은 단계를 거쳐 Collaboration이 일어나게 됩니다. 일반 사회에서 일어나는 경매 시스템과 비슷한 것을 느끼시나요? 그에 맞춰서 이해하셔도 좋을 것 같습니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이 글의 앞부분에서 MAS는 Cooperative와 Competitive 모델이 있다고 했습니다. Competitive보단 Cooperative가 많이 사용되는데 Competitive 모델을 디자인하는데 몇 가지 이슈를 확인해보겠습니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;첫 번째 이슈는 Distributed Rationality입니다. Distributed Rationality는 Self-interested Agent 들이 샌드 박스에서 공정하게 경쟁하도록 유도하거나 강제하는 기술입니다. 모든 에이전트들의 의견을 취합하는 투표방식이나 모든 에이전트들이 얼마나 공정하게 기회를 부여받을지에 대한 경쟁등이 있습니다. 공정성, 안정성, 거짓말, 전역적으로 사용성을 높이기 위한 방안 등에 대한 이슈입니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;두 번째 이슈는 Pareto optimality(파레토 효율성)입니다. Pareto Optimality는 [1]어떤 경제주체가 새로운 거래를 통해 예전보다 유리해지기 위해서는 반드시 다른 경제주체가 예전보다 불리해져야만 하는 자원배분상태를 의미합니다.&amp;nbsp;최적화를 위해서 단편적으로 보아서는 안되며 여러 측면에서 고려가 필요한 문제입니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;마지막으로 Stability(안정성)입니다. 만약 어느 에이전트가 특정 전략을 가지고 다른 에이전트들의 행동과 관련없이 사용성&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;을 항상 최대화 할 수 있다면 어떻까요? 다른 에이전트의 전략을 고려할 때 각 에이전트의 전략이 지역 최적인 경우 에이전트 전략 집합은&amp;nbsp;[2]내쉬 균형(&lt;/span&gt;&lt;a href=&quot;https://terms.naver.com/entry.nhn?docId=778576&amp;amp;ref=y&quot; style=&quot;color: rgb(0, 51, 172); cursor: pointer; font-family: 나눔고딕, NanumGothic, &amp;quot;맑은 고딕&amp;quot;, &amp;quot;malgun gothic&amp;quot;, 돋움, Dotum, &amp;quot;Apple SD Gothic Neo&amp;quot;, Helvetica, sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;게임이론&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 나눔고딕, NanumGothic, &amp;quot;맑은 고딕&amp;quot;, &amp;quot;malgun gothic&amp;quot;, 돋움, Dotum, &amp;quot;Apple SD Gothic Neo&amp;quot;, Helvetica, sans-serif; font-size: 12pt;&quot;&gt;의 개념으로서 각 참여자(&lt;/span&gt;&lt;span class=&quot;u_word_dic&quot; data-hook=&quot;tip&quot; data-type=&quot;ore&quot; data-lang=&quot;en&quot; style=&quot;color: rgb(51, 51, 51); font-family: 나눔고딕, NanumGothic, &amp;quot;맑은 고딕&amp;quot;, &amp;quot;malgun gothic&amp;quot;, 돋움, Dotum, &amp;quot;Apple SD Gothic Neo&amp;quot;, Helvetica, sans-serif; font-size: 12pt;&quot;&gt;Player&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 나눔고딕, NanumGothic, &amp;quot;맑은 고딕&amp;quot;, &amp;quot;malgun gothic&amp;quot;, 돋움, Dotum, &amp;quot;Apple SD Gothic Neo&amp;quot;, Helvetica, sans-serif; font-size: 12pt;&quot;&gt;)가 상대방의 전략을 주어진 것으로 보고 자신에게 최적인 전략을 선택할 때 그 결과가 균형을 이루는 최적 전략의 집합을 말한다&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;)에 있습니다. 그렇게 되면 전략을 변경하려는 에이전트도 없을 것입니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;MAS를 어떤 플로우로 개발하는지 살펴보겠습니다.&lt;/span&gt;&lt;/div&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;특정 문제를 해결하기 위한 MAS 구성을 정의한다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Coordination mechanism을 결정한다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;MAS를 구현하기 위한 프레임워크(Zeus 같은&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;)를 선택한다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;MAS를 지원할 Collaborative mechanism을 구현한다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Shared ontology를 구현한다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;각 태스크 에이전트를 구현한다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;중간자 에이전트를 커스터마이징 한다. (Facilitators, Mediators, Brokers, ...)&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/ol&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;큰 그림부터 필요한 요소들을 하나하나 선택, 결정하고 구현하는 단계를 거칩니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이러한 MAS는 다양한 곳에서 사용됩니다. 인터넷에서 정보검색을 하거나 보안 강화나 전자상거래의 쇼핑 에이전트들, 분산 신호처리 시스템 등에서 다양하게 사용됩니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;뭔가 주절주절 나열한 것 같습니다. 이해가 안되시는 부분이나 잘못된 부분은 언제든지 댓글로 남겨주세요.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;감사합니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;[1]&amp;nbsp;https://terms.naver.com/entry.nhn?docId=3437709&amp;amp;cid=58393&amp;amp;categoryId=58393&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;[2]&amp;nbsp;https://terms.naver.com/entry.nhn?docId=778808&amp;amp;cid=42085&amp;amp;categoryId=42085&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>AI - Theory</category>
<category>AI</category>
<category>mas</category>
<category>Multi Agent</category>
<category>Multi Agent System</category>
<category>Software Agent</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/476</guid>
<comments>https://sonseungha.tistory.com/476#entry476comment</comments>
<pubDate>Sun, 28 Oct 2018 17:09:31 +0900</pubDate>
</item>
<item>
<title>[Agent] BDI Architect(Belief - Desire - Intention Architect)</title>
<link>https://sonseungha.tistory.com/475</link>
<description>&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Belief - Desire - Intention Architect&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;BDI Architect는 Software Agent 분야에서 자주 사용되었던 구조입니다. 이 구조의 이름인 B&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;D&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;I 는 3가지 단어 입니다. Belief, Desire, Intention 이 3가지 단어의 앞자리를 따서 만들어졌습니다. 그럼 3가지 단어가 이 구조의 큰 요소일 텐데 구조를 정리해 가며 설명드리겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;BDI Architect는 목표를 이루기 위해 &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;순간, 순간 행해야할 행위를 결정하는 &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;의사결정&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;프로세스입니다. BDI 구조는 reactive behavior와 goal-directed behavior가 조화를 이루는 구조로써 Agent는 그 목표를 달성하기 위해 최선을 다하면서도 그 목표가 여전히 유효한지, 달성할 수 있는지에 대해 계속해서 확인하는 과정을 거치게 됩니다.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;BDI agent는 두 개의 중요한 프로세스를 사용합니다&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;. Deliberations와 Means-ends reasoning인데요, Deliberation은 우리가 달성하기 원하는 목표가 무엇인지 결정하는 프로세스이며 Means-ends reasoning은 어떻게 우리가 그것을 달성할지에 대해 결정하는 것입니다. 이름은 어려운데 결국 어떤 목표를 어떻게 달성해야 할지에 대한 것을 프로세스를 나눠놓은 것이라 생각하시면 편합니다. 어떤 목표를 세우고 어떻게 달성하지에 대해 BDI에서는 3가지 개념을 이용해 정의해 놓았습니다. 가장 처음 말씀드린 BDI 입니다. 하나의 예시를 개념 별로 들어보겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;B (Beilive&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;) : &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;만약 내가 &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;공부를 열심히 한다면 이번 시험을 패스할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;D (Desire) : 이번 시험을 통과하길 바랍니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;I (Intend) : 나는 공부를 열심히 할겁니다!!&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;사람이 무엇인가 목표를 세우고, 목표를 이루기 위해 어떻게 해야할지 결정하는 과정과 유사한 것 같습니다. BDI가 이 구조에서 어떤 역할을 하는지 정리해야 할 것 같습니다. Belief는 Agent가 가진 믿음, 정보입니다. 여기서&amp;nbsp;이 정보가 100% True일 필요는 없으며 Agent가 어떠한 정보를 가지고 있다라는 것이 중요한 점이라고 생각됩니다&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;. 조금 의아하시겠지만, 아래서 더 자세히 설명드리겠습니다. Desire은 목표입니다. 이번 시험에서 통과하는게 목표가 되겠네요. 그리고 Intend는 목표를 이루기 위해 행동하는 방안입니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;위에서 너무 나불나불 한 것 같아서 예시를 한번 들어보겠습니다. 예시는 호텔 매니저&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;로 하겠습니다. 여러분들이 호텔 매니저라면 B, D, I 가 무엇이 되어야 할지 한번 생각해보시죠. 먼저 호텔 매니저는 룸 관리를 해야 할 것 입니다. 예약 상태나 현재 어느 객실에 고객이 숙박하고 있는지 등의 관리가 필요할 것입니다. &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;저는 아래와 같이 정리하였습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;ul&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;B (Beilive) : 룸 상태와 스케쥴 정보(예약 상태, 현재 숙박 여부 등&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;)를 알고 있어야합니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;D (Desire) : 고객 문의에 대해 정확한 룸 상태와 예약 여부등을 알려주고 싶습니다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;I (Intend) : 룸 상태가 청결하며 현재 예약 여부 및 숙박 상태를 정리해 예약을 받아야 합니다.&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;뭔가 정리가 잘 안된 것 같지만.. 얼추 이해가 되시나요? 더 좋은 의견 있으시면 댓글로 부탁드려요 :D&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;계속해서 설명드리겠습니다. Intention의 역할에 관한 것입니다. Intention&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;은 목표를 이루기 위한 행위라고 하였습니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;어떻게 달성할지에 대한 행위라고 했죠. 만약 이 행위가 실패한다면 또 다른 방법으로 목표를 달성하기 위해 행동해야 할 것 입니다. 이 행위는 목표를 달성하기 위해 쉽게 포기해서는 안될 것 입니다. 그렇다고 무조건적으로 유지되는 것도 아니죠. 만약 더 좋은 정보로 인해 목표 달성에 좋아진다면 행위가 변경될 수 있습니다. 아까 공부에서 열심히 공부한다도 좋겠지만, 시험 감독이 없다 라는 정보가 있다면(잘못된 정보라 하더라도) 컨닝을 한다 라는 행위가 발생할 수 있다는 것이죠. 최종 목표는 시험을 통과하는 것이닌깐요. 이러한 Intention은 추후 practical reasoning을 기반으로 &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;Belief에 영향을 주게됩니다.&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;그럼 얼마나 자주 현재 진행하고 있는 Inten&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;tion이 재검토 될까요? 현재 결정된 Intention이 목표 달성에 불가능한 행위인데도 불구하고 계속 진행한다면 잘못된 것일테니 분명 재검토는 필요합니다. 공부를 계속해도 안된다면 컨닝으로 방향을 틀어서라도 목표를 달성해야죠!! (물론 잘못된 행동이지만요..) 재고의 빈도에 대해서는 2가지 Agent로 나뉠 수 있습니다. Bold agent와 Cautious agent인데요. 먼저 Bold agent는 대범한 에이전트입니다. 거의 재고하는 일이 없는 녀석이죠. 더이상 불가능하거나 달성할 이유가 없더라도 우직하게 수행해 나가는 에이전트입니다. 다른 하나는 Cautious agent입니다. 조심스러운 녀석으로 Intentions 수행위해 계속하여 시간을 투자해서 끊임없이 재고함으로써 결국 목표를 달성하지 못하는 에이전트입니다. Intention을 재고하는 가장 좋은 방법은 Bold도 Cautious도 아닌 둘의 적절한 균형이 필요할 것 같습니다. Agent는 항상 동일한 환경과 동일한 외부자극을 받는게 아니니 환경과 외부자극에 대해 현재 Intention을 검토할 필요가 있습니다. The rate of world change(r)&amp;nbsp;라는 값을 이용하게 됩니다. r이 낮다면 bold agents 쪽으로 더욱 강화하면 좋습니다. 외부 환경 변화가 적은편이니 현재 Intention을 유지해 나가면 좋죠, 반대로 r이 높다면 Cautious agent 쪽에 중점을 두면 좋습니다. 새로운 변화와 자극은 기회가 될 수 있고 어떠한 이점이 있는지 검토가 필요하닌깐요.&amp;nbsp;r에 변화에 따라 어느 방향으로 나아갈 지 결정된다면 좋을 것 같네요.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;그럼 이제 BDI Architecture의 큰 그림을 살펴보겠습니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 625px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F99AFBB395BD54F381C4F02&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99AFBB395BD54F381C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;SmartSelect_20181028-145324_Samsung Notes.jpg&quot; height=&quot;625&quot; style=&quot;width: 600px; height: 625px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;A belief revision function (brf)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- 외부환경, 자극, 입력과 현재 Beliefs를 이용해 정보를 표현합니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;A set of current beliefs&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- 현재 Beliefs의 집합&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;An option generation function&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- 환경 및 현재 Intention들 그리고 Belief 들을 기반으로 할 수 있는 Options들을 결정하게 됩니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;A set of current desires (options)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- 현재 Desire들의 집합입니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;A filter function&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- Intentions을 표현하기 위한 녀석으로 Deliberation Process를 나타냅니다. 이때 현재 Belief, Desire, Intention 모두를 사용합니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;A set of current intentions&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- 현재 Intection들의 집합&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;An action selection function&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;- 현재 Intention들을 기반으로 수행할 Action을 선택합니다.&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;BDI Architecture에 대해 간단하게 정리해보았습니다. Belief, Desire, Intention을 기반으로 입력, 외부환경, 자극에 대해 최종적으로 목표를 이루기 위한 Output이 결정되는 모델이라는 점에 주목하면 좋을 것 같네요.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;부족한 점이나 수정해야 될 부분이 있다면 언제든지 댓글 부탁드립니다. 감사합니다.&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>AI - Theory</category>
<category>AI</category>
<category>BDI</category>
<category>BDI Agent</category>
<category>BDI Architect</category>
<category>belief</category>
<category>Desire</category>
<category>intention</category>
<category>Software Agent</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/475</guid>
<comments>https://sonseungha.tistory.com/475#entry475comment</comments>
<pubDate>Sun, 28 Oct 2018 01:18:17 +0900</pubDate>
</item>
<item>
<title>표준출력에 텍스트 색상 입히기 (colorize printf format)</title>
<link>https://sonseungha.tistory.com/474</link>
<description>&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;27&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;28&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;29&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;30&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;31&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;32&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;33&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;34&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;35&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;36&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;37&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;38&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;39&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;40&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;41&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;42&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;43&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;44&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifndef&lt;/span&gt;&amp;nbsp;__S_PRINT_FORMAT_H__&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;__S_PRINT_FORMAT_H__&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_RED&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[31m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_GREEN&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[32m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_YELLOW&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[33m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_BLUE&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[34m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_MAGENTA&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[35m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_CYAN&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[36m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\x1b[0m&quot;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;printf&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT_RED(fmt&amp;nbsp;,&amp;nbsp;args...)&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;do&lt;/span&gt;&amp;nbsp;{&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRINT(S_COLOR_RED&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;fmt&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;,&amp;nbsp;##args);&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT_GREEN(fmt&amp;nbsp;,&amp;nbsp;args...)&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;do&lt;/span&gt;&amp;nbsp;{&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRINT(S_COLOR_GREEN&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;fmt&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;,&amp;nbsp;##args);&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT_YELLOW(fmt&amp;nbsp;,&amp;nbsp;args...)&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;do&lt;/span&gt;&amp;nbsp;{&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRINT(S_COLOR_YELLOW&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;fmt&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;,&amp;nbsp;##args);&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT_BLUE(fmt&amp;nbsp;,&amp;nbsp;args...)&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;do&lt;/span&gt;&amp;nbsp;{&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRINT(S_COLOR_BLUE&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;fmt&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;,&amp;nbsp;##args);&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT_MAGENTA(fmt&amp;nbsp;,&amp;nbsp;args...)&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;do&lt;/span&gt;&amp;nbsp;{&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRINT(S_COLOR_MAGENTA&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;fmt&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;,&amp;nbsp;##args);&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#define&lt;/span&gt;&amp;nbsp;PRINT_CYAN(fmt&amp;nbsp;,&amp;nbsp;args...)&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;do&lt;/span&gt;&amp;nbsp;{&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PRINT(S_COLOR_CYAN&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;fmt&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;\n&quot;&lt;/span&gt;&amp;nbsp;S_COLOR_RESET&amp;nbsp;,&amp;nbsp;##args);&amp;nbsp;\&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;__S_PRINT_FORMAT_H__&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;위 매크로에서 PRINT_##COLOR 문을 printf 처럼 사용하시면 출력에 색상이 입혀집니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>C,C++</category>
<category>color</category>
<category>colorize print format</category>
<category>format</category>
<category>fprintf</category>
<category>printf</category>
<category>stdout</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/474</guid>
<comments>https://sonseungha.tistory.com/474#entry474comment</comments>
<pubDate>Tue, 09 Oct 2018 16:02:38 +0900</pubDate>
</item>
<item>
<title>메모리 모델 (FLATMEM, DISCONTIGMEM, SPARSEMEM)</title>
<link>https://sonseungha.tistory.com/471</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;리눅스에서 사용 가능한 메모리 모델은 3가지 입니다. 각 메모리 모델에 대해 간단히 정리하겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;3가지 모델의 차이는 물리 메모리 주소 범위와 어떻게 메모리 맵을 관리하는지에 따라 구별됩니다. 3가지의 모델은 FLATMEM, DISCONTIGMEM, SPARSEMEM 입니다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;각 메모리 모델은 리눅스 커널 빌드 시 하나를 선택하여 빌드를 해야합니다. 각 메모리 특징에 대해 정리해 보겠습니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;FLATMEM&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;우리나라 용어로 평면 메모리라고도 불립니다. UMA 시스템에서 많이 사용되며 메모리 주소가 연속되는 특성이 입니다. DISCONTIGMEM, SPARSEMEM과 달리 메모리 주소가 연속되어 있기 때문에 중간에 주소 사이의 홀이 없다는 장점이 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;DISCONTIGMEM&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;분리된 메모리 영역입니다. 분리가 되어 있어 메모리 뱅크들의 주소가 연속되지 않는 특성을 가지고 있습니다. UMA, NUMA 시스템에서 모드 사용하고 있습니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;SPARSEMEM&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;설치된 메모리 뱅크들의 주소가 연속되지 않습니다. 그 특징은 DISCONTIGMEM과 같지만 다른 점이라면 DISCONTIGMEM은 2개로 분리되지만, SPARSEMEM은 여러 영역으로 나뉘어 집니다. 나뉘어지는 최소 단위는 section으로써 ARM64에서는 1G 가 하나의 section이 됩니다. 여러 섹션으로 나뉘어져 관리되므로 중간에 홀이 발생할 수 있습니다. section 단위로 관리하는 이유는 HOTPLUG 기능을 지원하기 위함입니다. 탈/장착 가능한 메모리를 구현하기 위함입니다. SPARSEMEM은 NUMA, UMA 모두 사용할 수 있습니다. ARM64에서 Default로 사용하는 메모리 모델이 SPARSEMEM입니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;참고자료 : 코드를 알아보는 ARM 리눅스 커널&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;감사합니다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/471</guid>
<comments>https://sonseungha.tistory.com/471#entry471comment</comments>
<pubDate>Sat, 06 Oct 2018 19:24:49 +0900</pubDate>
</item>
<item>
<title>bootmem_init() 부트 메모리 초기화</title>
<link>https://sonseungha.tistory.com/470</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;[분석 기준]&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;kernel version : linux kernel 4.16&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;architecture : aarch64 (arm64)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;bootmem_init() 함수는 함수네임 그대로 부트 메모리 초기화를 위한 함수입니다. 커널은 ZONE이라는 개념을 도입해 메모리를 관리하게 됩니다. bootmem_init() 함수에서 어떻게 부트 메모리를 초기화 하는지 분석해 보도록 하겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;bootmem_init(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;min,&amp;nbsp;max;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;min&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;PFN_UP(memblock_start_of_DRAM());&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;max&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;PFN_DOWN(memblock_end_of_DRAM());&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;early_memtest(min&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;PAGE_SHIFT,&amp;nbsp;max&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;PAGE_SHIFT);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;max_pfn&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;max_low_pfn&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;max;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arm64_numa_init();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Sparsemem&amp;nbsp;tries&amp;nbsp;to&amp;nbsp;allocate&amp;nbsp;bootmem&amp;nbsp;in&amp;nbsp;memory_present(),&amp;nbsp;so&amp;nbsp;must&amp;nbsp;be&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;done&amp;nbsp;after&amp;nbsp;the&amp;nbsp;fixed&amp;nbsp;reservations.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arm64_memory_present();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sparse_init();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;zone_sizes_init(min,&amp;nbsp;max);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_dump_all();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;min, max 변수는 memblock 주소의 시작과 끝을 가진 변수입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 8 :&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;memtest=count 파라미터를 이용하여 해당 count 만큼 메모리 패턴 테스트를 지정합니다. memtest는 dt에 설정된 값을 ealry_param() 을 이용해 가져오게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 12:&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;numa 시스템을 사용하는 경우 초기화를 진행합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 17:&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;sparse memory model인 경우(ARM64인 경우 sparse가 default) memblock에 등록된 모든 메모리타입에 대해 mem_section을 초기화 합니다. 그 후 초기화된 mem_section 에 전체 메모리의 node id를 설정하여 줍니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 18:&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;sparse memory 모델에서 사용하는 mem_map을 초기화합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;arm64_numa_init()&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;numa 시스템을 초기화하기 위한 함수입니다. &lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;arm64_numa_init(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;numa_off)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;acpi_disabled&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;numa_init(arm64_acpi_numa_init))&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(acpi_disabled&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;numa_init(of_numa_init))&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;numa_init(dummy_numa_init);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 10&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;numa_init() 함수는 파라미터로 함수포인터를 전달받습니다. 전달된 함수는 dummy_numa_init() 함수이며, 해당 함수는 아래와 같습니다. SMP 시스템이라고 생각하고 분석을 했을 때 간단히 dummy로 numa를 초기화 하게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;dummy_numa_init(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;ret;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;memblock_region&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;mblk;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(numa_off)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;NUMA&amp;nbsp;disabled\n&quot;&lt;/span&gt;);&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Forced&amp;nbsp;off&amp;nbsp;on&amp;nbsp;command&amp;nbsp;line.&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_info(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;Faking&amp;nbsp;a&amp;nbsp;node&amp;nbsp;at&amp;nbsp;[mem&amp;nbsp;%#018Lx-%#018Lx]\n&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0LLU,&amp;nbsp;PFN_PHYS(max_pfn)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for_each_memblock(memory,&amp;nbsp;mblk)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ret&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;numa_add_memblk(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;,&amp;nbsp;mblk&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;base,&amp;nbsp;mblk&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;base&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&amp;nbsp;mblk&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;ret)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;continue&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_err(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;NUMA&amp;nbsp;init&amp;nbsp;failed\n&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;ret;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;numa_off&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 11 - 18&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;memblock의 모든 memory region을 interator하며 모든 nid(node id)를 0으로 설정하게 됩니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;arm64_memory_present()&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;SPARSEMEM 메모리 모델인 경우에는 memblock에 등록된 모든 memory 타입 블록에 대해
섹션별로 메모리가 존재하는 곳의 mem_section을 초기화합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;arm64_memory_present(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;memblock_region&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;reg;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for_each_memblock(memory,&amp;nbsp;reg)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;nid&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;memblock_get_region_node(reg);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memory_present(nid,&amp;nbsp;memblock_region_memory_base_pfn(reg),&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_region_memory_end_pfn(reg));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 5 - 10&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;foreach로 모든 memory 타입의 region에 대해 memblock_get_region_node()를 통해 nid를 구해오고, memory_present()함수를 통해 mem_section을 초기화합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;memory_present() -&amp;nbsp;mm/sparse.c&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;27&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;28&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;29&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;30&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;31&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;32&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;33&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Record&amp;nbsp;a&amp;nbsp;memory&amp;nbsp;area&amp;nbsp;against&amp;nbsp;a&amp;nbsp;node.&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;memory_present(&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;nid,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;start,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;end&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;pfn;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifdef&lt;/span&gt;&amp;nbsp;CONFIG_SPARSEMEM_EXTREME&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(unlikely(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;mem_section))&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;,&amp;nbsp;align;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;sizeof&lt;/span&gt;(&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;mem_section&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;&amp;nbsp;NR_SECTION_ROOTS;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;align&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;(INTERNODE_CACHE_SHIFT);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mem_section&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;memblock_virt_alloc(&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;,&amp;nbsp;align);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;start&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;PAGE_SECTION_MASK;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mminit_validate_memmodel_limits(&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;start,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#066de2&quot;&gt;end&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;(pfn&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;start;&amp;nbsp;pfn&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;end&lt;/span&gt;;&amp;nbsp;pfn&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;PAGES_PER_SECTION)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;section&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;pfn_to_section_nr(pfn);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;mem_section&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;ms;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sparse_index_init(section,&amp;nbsp;nid);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set_section_nid(section,&amp;nbsp;nid);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ms&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;__nr_to_section(section);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;ms&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;section_mem_map)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ms&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;section_mem_map&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;sparse_encode_early_nid(nid)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;|&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SECTION_IS_ONLINE;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;section_mark_present(ms);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;line 6 -14&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;CONFIG_SPARSEMEM_EXTREME은 ARM64에서 Default로 설정되어 있습니다. mem_section은 부트업 타임에 아직 초기화 되지 않았으므로 해당 조건문이 수행되고 memblock_virt_alloc에 의해 메모리가 할당됩니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;line 18 - 31&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;각 섹션에 node id (UMA 에선 dummy로 초기화 하여 전체 node id가 0)를 설정해줍니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;hr&gt;&lt;p&gt;sparse_init() - mm/sparce.c&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;27&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;28&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;29&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;30&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;31&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;32&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;33&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;34&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;35&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;36&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;37&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;38&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;39&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;40&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;41&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;42&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;43&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;44&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;45&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;46&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;47&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;48&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;49&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;50&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;51&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;52&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;53&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;54&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;55&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;56&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;57&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;58&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;59&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;60&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;61&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;62&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;63&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;64&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;65&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;66&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;67&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;68&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;69&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;70&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;sparse_init(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;pnum;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;page&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;map;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;usemap;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;usemap_map;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifdef&lt;/span&gt;&amp;nbsp;CONFIG_SPARSEMEM_ALLOC_MEM_MAP_TOGETHER&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;size2;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;page&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;map_map;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;see&amp;nbsp;include/linux/mmzone.h&amp;nbsp;'struct&amp;nbsp;mem_section'&amp;nbsp;definition&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BUILD_BUG_ON(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;is_power_of_2(&lt;span style=&quot;color:#a71d5d&quot;&gt;sizeof&lt;/span&gt;(&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;mem_section)));&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Setup&amp;nbsp;pageblock_order&amp;nbsp;for&amp;nbsp;HUGETLB_PAGE_SIZE_VARIABLE&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set_pageblock_order();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;map&amp;nbsp;is&amp;nbsp;using&amp;nbsp;big&amp;nbsp;page&amp;nbsp;(aka&amp;nbsp;2M&amp;nbsp;in&amp;nbsp;x86&amp;nbsp;64&amp;nbsp;bit)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;usemap&amp;nbsp;is&amp;nbsp;less&amp;nbsp;one&amp;nbsp;page&amp;nbsp;(aka&amp;nbsp;24&amp;nbsp;bytes)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;so&amp;nbsp;alloc&amp;nbsp;2M&amp;nbsp;(with&amp;nbsp;2M&amp;nbsp;align)&amp;nbsp;and&amp;nbsp;24&amp;nbsp;bytes&amp;nbsp;in&amp;nbsp;turn&amp;nbsp;will&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;make&amp;nbsp;next&amp;nbsp;2M&amp;nbsp;slip&amp;nbsp;to&amp;nbsp;one&amp;nbsp;more&amp;nbsp;2M&amp;nbsp;later.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;then&amp;nbsp;in&amp;nbsp;big&amp;nbsp;system,&amp;nbsp;the&amp;nbsp;memory&amp;nbsp;will&amp;nbsp;have&amp;nbsp;a&amp;nbsp;lot&amp;nbsp;of&amp;nbsp;holes...&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;here&amp;nbsp;try&amp;nbsp;to&amp;nbsp;allocate&amp;nbsp;2M&amp;nbsp;pages&amp;nbsp;continuously.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;powerpc&amp;nbsp;need&amp;nbsp;to&amp;nbsp;call&amp;nbsp;sparse_init_one_section&amp;nbsp;right&amp;nbsp;after&amp;nbsp;each&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;sparse_early_mem_map_alloc,&amp;nbsp;so&amp;nbsp;allocate&amp;nbsp;usemap_map&amp;nbsp;at&amp;nbsp;first.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;sizeof&lt;/span&gt;(&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;&amp;nbsp;NR_MEM_SECTIONS;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usemap_map&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;memblock_virt_alloc(&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;usemap_map)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;panic(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;can&amp;nbsp;not&amp;nbsp;allocate&amp;nbsp;usemap_map\n&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;alloc_usemap_and_memmap(sparse_early_usemaps_alloc_node,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;)usemap_map);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifdef&lt;/span&gt;&amp;nbsp;CONFIG_SPARSEMEM_ALLOC_MEM_MAP_TOGETHER&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;size2&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;sizeof&lt;/span&gt;(&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;page&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;&amp;nbsp;NR_MEM_SECTIONS;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_map&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;memblock_virt_alloc(size2,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;map_map)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;panic(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;can&amp;nbsp;not&amp;nbsp;allocate&amp;nbsp;map_map\n&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;alloc_usemap_and_memmap(sparse_early_mem_maps_alloc_node,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;)map_map);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for_each_present_section_nr(&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;,&amp;nbsp;pnum)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usemap&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;usemap_map[pnum];&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;usemap)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;continue&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifdef&lt;/span&gt;&amp;nbsp;CONFIG_SPARSEMEM_ALLOC_MEM_MAP_TOGETHER&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;map_map[pnum];&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#else&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;sparse_early_mem_map_alloc(pnum);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;map)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;continue&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sparse_init_one_section(__nr_to_section(pnum),&amp;nbsp;pnum,&amp;nbsp;map,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usemap);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vmemmap_populate_print_last();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#ifdef&lt;/span&gt;&amp;nbsp;CONFIG_SPARSEMEM_ALLOC_MEM_MAP_TOGETHER&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_free_early(__pa(map_map),&amp;nbsp;size2);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#0086b3&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_free_early(__pa(usemap_map),&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;size&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;line 17&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;전체 메모리에 대해 페이지&amp;nbsp;블록 크기 단위로 나누기 위한 pageblock_order를 설정합니다.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; line-height: 2; position: relative !important;&quot;&gt;line 30&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; line-height: 2; position: relative !important;&quot;&gt;usemap_map에 사용할 사이즈를 계산합니다. MEM_SECTIONS의 개수 * 포인터 사이즈를 usemap_map의 사이즈로 사용합니다.&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; line-height: 2; position: relative !important;&quot;&gt;.....&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; line-height: 2; position: relative !important;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; line-height: 2; position: relative !important;&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;http://jake.dothome.co.kr/&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;도서&amp;nbsp;&lt;/span&gt;&lt;font size=&quot;2&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;코드로 알아보는 ARM 리눅스 커널&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<category>Linux Kernel</category>
<category>memboot_init</category>
<category>usemap</category>
<category>메모리 초기화</category>
<category>커널 부트 메모리</category>
<category>커널 분석</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/470</guid>
<comments>https://sonseungha.tistory.com/470#entry470comment</comments>
<pubDate>Sat, 06 Oct 2018 17:31:27 +0900</pubDate>
</item>
<item>
<title>void __init paging_init() - 커널 페이지 초기화 하기</title>
<link>https://sonseungha.tistory.com/469</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;[분석 기준]&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;kernel version : linux kernel 4.16&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;architecture : aarch64 (arm64)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;커널용 페이지 테이블 초기화 하는 함수입니다. 전체적인 내용을 분석 후 각 주요 함수에 대해 아래에 연속적으로 분석해 보도록 하겠습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;21&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;22&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;23&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;26&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;27&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;28&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;29&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;30&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;paging_init(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;pgd_phys&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;early_pgtable_alloc();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pgd_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;pgdp&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;pgd_set_fixmap(pgd_phys);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_kernel(pgdp);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_mem(pgdp);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;We&amp;nbsp;want&amp;nbsp;to&amp;nbsp;reuse&amp;nbsp;the&amp;nbsp;original&amp;nbsp;swapper_pg_dir&amp;nbsp;so&amp;nbsp;we&amp;nbsp;don't&amp;nbsp;have&amp;nbsp;to&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;communicate&amp;nbsp;the&amp;nbsp;new&amp;nbsp;address&amp;nbsp;to&amp;nbsp;non-coherent&amp;nbsp;secondaries&amp;nbsp;in&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;secondary_entry,&amp;nbsp;and&amp;nbsp;so&amp;nbsp;cpu_switch_mm&amp;nbsp;can&amp;nbsp;generate&amp;nbsp;the&amp;nbsp;address&amp;nbsp;with&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;adrp+add&amp;nbsp;rather&amp;nbsp;than&amp;nbsp;a&amp;nbsp;load&amp;nbsp;from&amp;nbsp;some&amp;nbsp;global&amp;nbsp;variable.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;To&amp;nbsp;do&amp;nbsp;this&amp;nbsp;we&amp;nbsp;need&amp;nbsp;to&amp;nbsp;go&amp;nbsp;via&amp;nbsp;a&amp;nbsp;temporary&amp;nbsp;pgd.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cpu_replace_ttbr1(__va(pgd_phys));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memcpy(swapper_pg_dir,&amp;nbsp;pgdp,&amp;nbsp;PGD_SIZE);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cpu_replace_ttbr1(lm_alias(swapper_pg_dir));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pgd_clear_fixmap();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_free(pgd_phys,&amp;nbsp;PAGE_SIZE);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;We&amp;nbsp;only&amp;nbsp;reuse&amp;nbsp;the&amp;nbsp;PGD&amp;nbsp;from&amp;nbsp;the&amp;nbsp;swapper_pg_dir,&amp;nbsp;not&amp;nbsp;the&amp;nbsp;pud&amp;nbsp;+&amp;nbsp;pmd&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;allocated&amp;nbsp;with&amp;nbsp;it.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_free(__pa_symbol(swapper_pg_dir)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;PAGE_SIZE,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__pa_symbol(swapper_pg_end)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__pa_symbol(swapper_pg_dir)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;PAGE_SIZE);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 10pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;페이지 테이블 용도로 사용할 하나의&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;페이지를 할당하여 0으로 초기화 한 후 물리 주소를 반환하는 함수입니다.&amp;nbsp; 페이지에 매핑된 영역은 다시 매핑이 해제되고 할당 해제됩니다.&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;memblock에 등록된 각 메모리 영역을 pgd에 매핑합니다. 이 때 매핑되는 영역은 커널 과 메모리영역입니다. 매핑 시 임시로 할당받은 fixmap 영역의 pgd페이지에 매핑하게 됩니다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;커널용 페이지 테이블이 준비되었으므로 TTBR1이 커널용 페이지 테이블을 가리키도록 합니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;line 18&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;준비한 커널 페이지 테이블을 swapper_pg_dir로 PGD_SIZE 만큼 복사합니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;line 19&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;원래 커널 페이지 테이블은 swapper_pg_dir을 TTBR1 레지스터에 설정해줍니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;line 21&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;fixmap의 pgd 페이지를 언매핑하고 임시로 할당한 커널용 pgd 테이블을 해제합니다. fixmap 영역을 모두 해제하는 것이 아닌 pgd영역을 clear해줍니다.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;line 22&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;임시로 할당받아 사용하던&amp;nbsp;하나의 page을 free해줍니다. swapper_pd_dir에 이미 복사되었기에 해제합니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;line 27&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;커널빌드 시 swapper_pg_dir는 한 페이지가 아닌 페이지 테이블 단계 수 만큼 만들어지므로 추가로 만들어진 swapper_pg_dir의 사용하지 않는 부분은 해제해줍니다.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;ealry_pgtable_allc() 함수는 페이지 테이블 용도로 사용할 싱글 페이지를 할당하여 0으로 초기화 한 후 물리 주소를 반환하는 함수입니다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 1.5;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;phys_addr_t&amp;nbsp;__init&amp;nbsp;early_pgtable_alloc(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;phys;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;ptr;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_alloc(PAGE_SIZE,&amp;nbsp;PAGE_SIZE);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;The&amp;nbsp;FIX_{PGD,PUD,PMD}&amp;nbsp;slots&amp;nbsp;may&amp;nbsp;be&amp;nbsp;in&amp;nbsp;active&amp;nbsp;use,&amp;nbsp;but&amp;nbsp;the&amp;nbsp;FIX_PTE&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;slot&amp;nbsp;will&amp;nbsp;be&amp;nbsp;free,&amp;nbsp;so&amp;nbsp;we&amp;nbsp;can&amp;nbsp;(ab)use&amp;nbsp;the&amp;nbsp;FIX_PTE&amp;nbsp;slot&amp;nbsp;to&amp;nbsp;initialise&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;any&amp;nbsp;level&amp;nbsp;of&amp;nbsp;table.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ptr&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;pte_set_fixmap(phys);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(ptr,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;PAGE_SIZE);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Implicit&amp;nbsp;barriers&amp;nbsp;also&amp;nbsp;ensure&amp;nbsp;the&amp;nbsp;zeroed&amp;nbsp;page&amp;nbsp;is&amp;nbsp;visible&amp;nbsp;to&amp;nbsp;the&amp;nbsp;page&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;table&amp;nbsp;walker&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pte_clear_fixmap();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;phys;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 10pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 5&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;커널 페이지 테이블로 사용할 하나의 페이지를 memblock으로 부터 할당받는다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 11&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;memblock으루부터 할당받은 페이지 물리주소를 전달하여 fixmap의 FIX_PTE주소에 매핑한 후 해당페이지를 0으로 클리어하고 다시 매핑을 해제합니&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;다. FIX_PTE는 커널 페이지 테이블에 대한 수정이 필요할 때 런타임 중에 사용하는 fixmap 영역입니다&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 12&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;매핑된 영역을 0으로 모두 초기화 합니다.&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;map_kernel() 함수에서는 커널의 코드 및 데이터 영역과 메모리 영역을 매핑합니다. 매핑하는 영역은 fixmap영역의 pgd 페이지에 매핑하고 수정하는 과정을 거칩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;21&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;22&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;23&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;26&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;27&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;28&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;29&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;30&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;31&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;32&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;33&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;34&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;35&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;36&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;37&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;38&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;39&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;40&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;41&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;42&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;43&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;44&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;45&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;46&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;47&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;48&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;map_kernel(pgd_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;pgdp)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;vm_struct&amp;nbsp;vmlinux_text,&amp;nbsp;vmlinux_rodata,&amp;nbsp;vmlinux_inittext,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vmlinux_initdata,&amp;nbsp;vmlinux_data;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;External&amp;nbsp;debuggers&amp;nbsp;may&amp;nbsp;need&amp;nbsp;to&amp;nbsp;write&amp;nbsp;directly&amp;nbsp;to&amp;nbsp;the&amp;nbsp;text&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;mapping&amp;nbsp;to&amp;nbsp;install&amp;nbsp;SW&amp;nbsp;breakpoints.&amp;nbsp;Allow&amp;nbsp;this&amp;nbsp;(only)&amp;nbsp;when&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;explicitly&amp;nbsp;requested&amp;nbsp;with&amp;nbsp;rodata=off.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pgprot_t&amp;nbsp;text_prot&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;rodata_enabled&amp;nbsp;?&amp;nbsp;PAGE_KERNEL_ROX&amp;nbsp;:&amp;nbsp;PAGE_KERNEL_EXEC;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Only&amp;nbsp;rodata&amp;nbsp;will&amp;nbsp;be&amp;nbsp;remapped&amp;nbsp;with&amp;nbsp;different&amp;nbsp;permissions&amp;nbsp;later&amp;nbsp;on,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;all&amp;nbsp;other&amp;nbsp;segments&amp;nbsp;are&amp;nbsp;allowed&amp;nbsp;to&amp;nbsp;use&amp;nbsp;contiguous&amp;nbsp;mappings.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_kernel_segment(pgdp,&amp;nbsp;_text,&amp;nbsp;_etext,&amp;nbsp;text_prot,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;vmlinux_text,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VM_NO_GUARD);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_kernel_segment(pgdp,&amp;nbsp;__start_rodata,&amp;nbsp;__inittext_begin,&amp;nbsp;PAGE_KERNEL,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;vmlinux_rodata,&amp;nbsp;NO_CONT_MAPPINGS,&amp;nbsp;VM_NO_GUARD);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_kernel_segment(pgdp,&amp;nbsp;__inittext_begin,&amp;nbsp;__inittext_end,&amp;nbsp;text_prot,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;vmlinux_inittext,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;VM_NO_GUARD);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_kernel_segment(pgdp,&amp;nbsp;__initdata_begin,&amp;nbsp;__initdata_end,&amp;nbsp;PAGE_KERNEL,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;vmlinux_initdata,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;VM_NO_GUARD);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;map_kernel_segment(pgdp,&amp;nbsp;_data,&amp;nbsp;_end,&amp;nbsp;PAGE_KERNEL,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;vmlinux_data,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;READ_ONCE(pgd_val(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;pgd_offset_raw(pgdp,&amp;nbsp;FIXADDR_START))))&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;The&amp;nbsp;fixmap&amp;nbsp;falls&amp;nbsp;in&amp;nbsp;a&amp;nbsp;separate&amp;nbsp;pgd&amp;nbsp;to&amp;nbsp;the&amp;nbsp;kernel,&amp;nbsp;and&amp;nbsp;doesn't&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;live&amp;nbsp;in&amp;nbsp;the&amp;nbsp;carveout&amp;nbsp;for&amp;nbsp;the&amp;nbsp;swapper_pg_dir.&amp;nbsp;We&amp;nbsp;can&amp;nbsp;simply&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;re-use&amp;nbsp;the&amp;nbsp;existing&amp;nbsp;dir&amp;nbsp;for&amp;nbsp;the&amp;nbsp;fixmap.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;set_pgd(pgd_offset_raw(pgdp,&amp;nbsp;FIXADDR_START),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;READ_ONCE(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;pgd_offset_k(FIXADDR_START)));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(CONFIG_PGTABLE_LEVELS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;The&amp;nbsp;fixmap&amp;nbsp;shares&amp;nbsp;its&amp;nbsp;top&amp;nbsp;level&amp;nbsp;pgd&amp;nbsp;entry&amp;nbsp;with&amp;nbsp;the&amp;nbsp;kernel&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;mapping.&amp;nbsp;This&amp;nbsp;can&amp;nbsp;really&amp;nbsp;only&amp;nbsp;occur&amp;nbsp;when&amp;nbsp;we&amp;nbsp;are&amp;nbsp;running&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;with&amp;nbsp;16k/4&amp;nbsp;levels,&amp;nbsp;so&amp;nbsp;we&amp;nbsp;can&amp;nbsp;simply&amp;nbsp;reuse&amp;nbsp;the&amp;nbsp;pud&amp;nbsp;level&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;entry&amp;nbsp;instead.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BUG_ON(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;IS_ENABLED(CONFIG_ARM64_16K_PAGES));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pud_populate(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;init_mm,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pud_set_fixmap_offset(pgdp,&amp;nbsp;FIXADDR_START),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lm_alias(bm_pmd));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pud_clear_fixmap();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BUG();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kasan_copy_shadow(pgdp);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 12pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 15 ~ 23&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;커널 이미지의 각 세그먼트를 커널 페이지 타입으로 매핑합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 24&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;FIXMAP 영역을 pgdp가 가리키는 ptage table 영역에 설정합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;아래 코드 분석 시&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;CONFIG_KEXEC_CORE &lt;/span&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre; font-size: 12pt;&quot;&gt;는 분석하지 않겠습니다.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;map_mem() 함수는 memblock에 등록된 각 메모리 영역을 pgd에 매핑하는 함수입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;21&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;22&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;23&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;26&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;27&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;28&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;29&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;30&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;31&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;32&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;33&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;34&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;35&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;36&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;37&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;38&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;39&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;40&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;41&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;42&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;43&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;44&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;45&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;46&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;47&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;48&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;49&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;50&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;51&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;52&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;53&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;54&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;55&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;56&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;57&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;58&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;59&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;60&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;61&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;62&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;63&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;64&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;65&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;map_mem(pgd_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;pgdp)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;kernel_start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__pa_symbol(_text);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;kernel_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__pa_symbol(__init_begin);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_region&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;reg;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;flags&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(debug_pagealloc_enabled())&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flags&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;NO_BLOCK_MAPPINGS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;NO_CONT_MAPPINGS;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Take&amp;nbsp;care&amp;nbsp;not&amp;nbsp;to&amp;nbsp;create&amp;nbsp;a&amp;nbsp;writable&amp;nbsp;alias&amp;nbsp;for&amp;nbsp;the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;read-only&amp;nbsp;text&amp;nbsp;and&amp;nbsp;rodata&amp;nbsp;sections&amp;nbsp;of&amp;nbsp;the&amp;nbsp;kernel&amp;nbsp;image.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;So&amp;nbsp;temporarily&amp;nbsp;mark&amp;nbsp;them&amp;nbsp;as&amp;nbsp;NOMAP&amp;nbsp;to&amp;nbsp;skip&amp;nbsp;mappings&amp;nbsp;in&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;the&amp;nbsp;following&amp;nbsp;for-loop&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_mark_nomap(kernel_start,&amp;nbsp;kernel_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;kernel_start);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#ifdef&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;CONFIG_KEXEC_CORE&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(crashk_res.&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;end&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_mark_nomap(crashk_res.start,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resource_size(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;crashk_res));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;map&amp;nbsp;all&amp;nbsp;the&amp;nbsp;memory&amp;nbsp;banks&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for_each_memblock(memory,&amp;nbsp;reg)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;reg&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;base;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;end&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;reg&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;end&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(memblock_is_nomap(reg))&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__map_memblock(pgdp,&amp;nbsp;start,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;end&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;PAGE_KERNEL,&amp;nbsp;flags);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Map&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;alias&amp;nbsp;of&amp;nbsp;the&amp;nbsp;[_text,&amp;nbsp;__init_begin)&amp;nbsp;interval&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;as&amp;nbsp;non-executable&amp;nbsp;now,&amp;nbsp;and&amp;nbsp;remove&amp;nbsp;the&amp;nbsp;write&amp;nbsp;permission&amp;nbsp;in&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;mark_linear_text_alias_ro()&amp;nbsp;below&amp;nbsp;(which&amp;nbsp;will&amp;nbsp;be&amp;nbsp;called&amp;nbsp;after&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;alternative&amp;nbsp;patching&amp;nbsp;has&amp;nbsp;completed).&amp;nbsp;This&amp;nbsp;makes&amp;nbsp;the&amp;nbsp;contents&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;of&amp;nbsp;the&amp;nbsp;region&amp;nbsp;accessible&amp;nbsp;to&amp;nbsp;subsystems&amp;nbsp;such&amp;nbsp;as&amp;nbsp;hibernate,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;but&amp;nbsp;protects&amp;nbsp;it&amp;nbsp;from&amp;nbsp;inadvertent&amp;nbsp;modification&amp;nbsp;or&amp;nbsp;execution.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Note&amp;nbsp;that&amp;nbsp;contiguous&amp;nbsp;mappings&amp;nbsp;cannot&amp;nbsp;be&amp;nbsp;remapped&amp;nbsp;in&amp;nbsp;this&amp;nbsp;way,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;so&amp;nbsp;we&amp;nbsp;should&amp;nbsp;avoid&amp;nbsp;them&amp;nbsp;here.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__map_memblock(pgdp,&amp;nbsp;kernel_start,&amp;nbsp;kernel_end,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PAGE_KERNEL,&amp;nbsp;NO_CONT_MAPPINGS);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_clear_nomap(kernel_start,&amp;nbsp;kernel_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;kernel_start);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#ifdef&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;CONFIG_KEXEC_CORE&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Use&amp;nbsp;page-level&amp;nbsp;mappings&amp;nbsp;here&amp;nbsp;so&amp;nbsp;that&amp;nbsp;we&amp;nbsp;can&amp;nbsp;shrink&amp;nbsp;the&amp;nbsp;region&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;in&amp;nbsp;page&amp;nbsp;granularity&amp;nbsp;and&amp;nbsp;put&amp;nbsp;back&amp;nbsp;unused&amp;nbsp;memory&amp;nbsp;to&amp;nbsp;buddy&amp;nbsp;system&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;through&amp;nbsp;/sys/kernel/kexec_crash_size&amp;nbsp;interface.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(crashk_res.&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;end&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__map_memblock(pgdp,&amp;nbsp;crashk_res.start,&amp;nbsp;crashk_res.&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;end&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PAGE_KERNEL,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;NO_BLOCK_MAPPINGS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;NO_CONT_MAPPINGS);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_clear_nomap(crashk_res.start,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;resource_size(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;crashk_res));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 12pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 17&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;kernel 영역을 nmap으로 설정합니다. 그 이유는 그 아래 foreach 문에서 nomap 영역을 skip하기 위함입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 25 ~ 35&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;memblock의 memory 타입 영역을 pgd에 매핑하기 위함입니다. 전체 memblock memory 타입의 region을 확인하며&amp;nbsp;하나씩 매핑하게 됩니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;line 47&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;kernel 영역을 pgd 에 매핑하는데 NO_CONT_MAPPINGS 플래그로 설정함으로써 연속적이지 않도록 pte 영역에 매핑하도록 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;cpu_replace_ttbr1함수는 안전하게 TTBR1 레지스터가 커널 페이지 테이블을 가리키도록 하기위한 함수입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;상세한 사유는 적용된 패치를 살펴보는게 더 빠를것 같습니다. (http://lists.infradead.org/pipermail/linux-arm-kernel/2015-December/392305.html)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;TLB conflic 문제를 해결하기 위해 idmap을 사용해서 TTBR0에서 페이지 테이블을 교체해 주는 작업을 해주고 있습니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;idmap_cpu_r&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;eplace_ttbr1 함수는 idmap&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;에서만 사용할 수 있으므로 TTBR0를 idmap 페이지 테이블로 교체한 후 TTBR0 에서 함수를 호출하도록 합니다. 그 이후 idmap을 해제하여 TTBR0를 원상복구 시켜줍니다. TTBR0는 여기서 오직 idmap을 위해서 사용되어 집니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;inline&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;cpu_replace_ttbr1(pgd_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;pgdp)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;typedef&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(ttbr_replace_func)(phys_addr_t);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;extern&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;ttbr_replace_func&amp;nbsp;idmap_cpu_replace_ttbr1;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ttbr_replace_func&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;replace_phys;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;pgd_phys&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;virt_to_phys(pgdp);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;replace_phys&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)__pa_symbol(idmap_cpu_replace_ttbr1);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cpu_install_idmap();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;replace_phys(pgd_phys);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cpu_uninstall_idmap();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 12pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 9&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;idmap_cpu_replace_ttbr1은 idmapping 상태에서만 사용가능하기에 물리주소를 가져온다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 11&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;ttbr0에 idmap page table을 매핑합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 12&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;idmap_cpu_replace_ttbr1 함수 호출하여 ttbr1에 인자로 전달받은 pgd를 전달합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 13&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;ttbr0에 매핑했던 idmap을 해제합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;http://jake.dothome.co.kr/&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;도서 &lt;/span&gt;&lt;font size=&quot;2&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;코드로 알아보는 ARM 리눅스 커널&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<category>fixmap</category>
<category>idmap</category>
<category>Linux Kernel</category>
<category>Page</category>
<category>paging_init</category>
<category>커널 페이지</category>
<category>페이지 초기화</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/469</guid>
<comments>https://sonseungha.tistory.com/469#entry469comment</comments>
<pubDate>Sat, 29 Sep 2018 17:38:52 +0900</pubDate>
</item>
<item>
<title>[커널분석] arm64_memblock_init()</title>
<link>https://sonseungha.tistory.com/468</link>
<description>&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;&lt;b&gt;리눅스 커널 분석은 4.16 버전을 기준으로 하였습니다.&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;memblock은 리눅스 커널 부트업 단계에서 사용되는 메모리 할당자입니다. memblock은 메모리를 3가지 타입으로 나누어 관리하고 있는데요, 각각 memory, reserved, physmem 타입입니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;먼저 memblock 자료구조에 대해 확인해보시죠. memblock은 3개의 type을 위한 memblock_type 구조체를 가지고 있고, 각 타입에는 region이란 영역을 관리하기 위해 memblock_region 구조체 포인터를 가지고 있습니다. memory, reserved 영역은 총 128개의 region을 가질 수 있으며 모두 사용하게 되면 2배로 크기가 늘어나 설정되어 집니다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;[include/linux/memblock.h]&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px; line-height: 1.5;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;p&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;21&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;22&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;23&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;26&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;27&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_region&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;base;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;flags;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#ifdef&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;CONFIG_HAVE_MEMBLOCK_NODE_MAP&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;nid;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;};&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_type&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;cnt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;number&amp;nbsp;of&amp;nbsp;regions&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;max;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;size&amp;nbsp;of&amp;nbsp;the&amp;nbsp;allocated&amp;nbsp;array&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;total_size;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;size&amp;nbsp;of&amp;nbsp;all&amp;nbsp;regions&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_region&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;regions;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;name;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;};&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;bool&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;bottom_up;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;is&amp;nbsp;bottom&amp;nbsp;up&amp;nbsp;direction?&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;phys_addr_t&amp;nbsp;current_limit;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_type&amp;nbsp;memory;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_type&amp;nbsp;reserved;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#ifdef&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;CONFIG_HAVE_MEMBLOCK_PHYS_MAP&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_type&amp;nbsp;physmem;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;};&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 10pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;arm64_memblock_init() 함수는 memblock이 관리하는 타입 중 reserved 영역에 대한 초기화를 진행하는 함수입니다. reserved영역에 대한 초기화는 아래 같은 설정을 진행합니다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;커널 영역&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;initrd영역&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;페이지 테이블 영역&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;DTB 영역 및 DTB 요청 영역&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;CMA-DMA영역&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;그럼 arm64_memblock_init에서는 위에 나열에 다섯가지 영역을 reserved 영역에 추가하기 위해 memblock 관련 내용을 초기화 하고, 하나씩 추가하게 됩니다. 코드를 보며 확인해보겠습니다.&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;[arch/arm64/mm/init.c]&lt;/div&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px; line-height: 1.5;&quot;&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color: rgb(1, 1, 1); overflow: auto; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important; line-height: 1.5;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;20&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;21&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;22&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;23&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;25&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;26&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;27&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;28&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;29&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;30&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;31&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;32&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;33&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;34&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;35&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;36&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;37&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;38&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;39&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;40&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;41&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;42&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;43&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;44&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;45&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;46&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;47&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;48&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;49&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;50&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;51&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;52&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;53&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;54&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;55&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;56&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;57&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;58&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;59&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;60&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;61&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;62&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;63&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;64&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;65&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;66&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;67&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;68&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;69&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;70&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;71&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;72&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;73&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;74&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;75&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;76&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;77&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;78&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;79&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;80&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;81&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;82&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;83&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;84&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;85&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;86&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;87&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;88&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;89&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;90&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;91&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;92&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;93&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;94&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;95&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;96&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;97&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;98&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;99&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;101&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;102&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;103&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;104&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;105&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;106&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;107&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;108&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;109&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;110&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;111&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;112&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;113&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;114&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;115&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;116&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;117&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;118&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;119&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;120&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;121&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;122&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;123&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;124&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;125&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;v&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;oid&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;arm64_memblock_init(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;s64&amp;nbsp;linear_region_size&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;(s64)PAGE_OFFSET;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;Handle&amp;nbsp;linux,usable-memory-range&amp;nbsp;property&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fdt_enforce_memory_region();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;Remove&amp;nbsp;memory&amp;nbsp;above&amp;nbsp;our&amp;nbsp;supported&amp;nbsp;physical&amp;nbsp;address&amp;nbsp;size&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_remove(1ULL&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;PHYS_MASK_SHIFT,&amp;nbsp;ULLONG_MAX);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Ensure&amp;nbsp;that&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;region&amp;nbsp;takes&amp;nbsp;up&amp;nbsp;exactly&amp;nbsp;half&amp;nbsp;of&amp;nbsp;the&amp;nbsp;kernel&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;virtual&amp;nbsp;address&amp;nbsp;space.&amp;nbsp;This&amp;nbsp;way,&amp;nbsp;we&amp;nbsp;can&amp;nbsp;distinguish&amp;nbsp;a&amp;nbsp;linear&amp;nbsp;address&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;from&amp;nbsp;a&amp;nbsp;kernel/module/vmalloc&amp;nbsp;address&amp;nbsp;by&amp;nbsp;testing&amp;nbsp;a&amp;nbsp;single&amp;nbsp;bit.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BUILD_BUG_ON(linear_region_size&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;BIT(VA_BITS&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Select&amp;nbsp;a&amp;nbsp;suitable&amp;nbsp;value&amp;nbsp;for&amp;nbsp;the&amp;nbsp;base&amp;nbsp;of&amp;nbsp;physical&amp;nbsp;memory.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memstart_addr&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;round_down(memblock_start_of_DRAM(),&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ARM64_MEMSTART_ALIGN);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Remove&amp;nbsp;the&amp;nbsp;memory&amp;nbsp;that&amp;nbsp;we&amp;nbsp;will&amp;nbsp;not&amp;nbsp;be&amp;nbsp;able&amp;nbsp;to&amp;nbsp;cover&amp;nbsp;with&amp;nbsp;the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;linear&amp;nbsp;mapping.&amp;nbsp;Take&amp;nbsp;care&amp;nbsp;not&amp;nbsp;to&amp;nbsp;clip&amp;nbsp;the&amp;nbsp;kernel&amp;nbsp;which&amp;nbsp;may&amp;nbsp;be&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;high&amp;nbsp;in&amp;nbsp;memory.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_remove(max_t(u64,&amp;nbsp;memstart_addr&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;linear_region_size,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;__pa_symbol(_end)),&amp;nbsp;ULLONG_MAX);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(memstart_addr&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;linear_region_size&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_end_of_DRAM())&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;ensure&amp;nbsp;that&amp;nbsp;memstart_addr&amp;nbsp;remains&amp;nbsp;sufficiently&amp;nbsp;aligned&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memstart_addr&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;round_up(memblock_end_of_DRAM()&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;linear_region_size,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ARM64_MEMSTART_ALIGN);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_remove(&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;memstart_addr);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Apply&amp;nbsp;the&amp;nbsp;memory&amp;nbsp;limit&amp;nbsp;if&amp;nbsp;it&amp;nbsp;was&amp;nbsp;set.&amp;nbsp;Since&amp;nbsp;the&amp;nbsp;kernel&amp;nbsp;may&amp;nbsp;be&amp;nbsp;loaded&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;high&amp;nbsp;up&amp;nbsp;in&amp;nbsp;memory,&amp;nbsp;add&amp;nbsp;back&amp;nbsp;the&amp;nbsp;kernel&amp;nbsp;region&amp;nbsp;that&amp;nbsp;must&amp;nbsp;be&amp;nbsp;accessible&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;via&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;mapping.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(memory_limit&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(phys_addr_t)ULLONG_MAX)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_mem_limit_remove_map(memory_limit);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_add(__pa_symbol(_text),&amp;nbsp;(u64)(_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;_text));&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(IS_ENABLED(CONFIG_BLK_DEV_INITRD)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;initrd_start)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Add&amp;nbsp;back&amp;nbsp;the&amp;nbsp;memory&amp;nbsp;we&amp;nbsp;just&amp;nbsp;removed&amp;nbsp;if&amp;nbsp;it&amp;nbsp;results&amp;nbsp;in&amp;nbsp;the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;initrd&amp;nbsp;to&amp;nbsp;become&amp;nbsp;inaccessible&amp;nbsp;via&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;mapping.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Otherwise,&amp;nbsp;this&amp;nbsp;is&amp;nbsp;a&amp;nbsp;no-op&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u64&amp;nbsp;base&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;initrd_start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;PAGE_MASK;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u64&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;PAGE_ALIGN(initrd_end)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;base;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;We&amp;nbsp;can&amp;nbsp;only&amp;nbsp;add&amp;nbsp;back&amp;nbsp;the&amp;nbsp;initrd&amp;nbsp;memory&amp;nbsp;if&amp;nbsp;we&amp;nbsp;don't&amp;nbsp;end&amp;nbsp;up&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;with&amp;nbsp;more&amp;nbsp;memory&amp;nbsp;than&amp;nbsp;we&amp;nbsp;can&amp;nbsp;address&amp;nbsp;via&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;mapping.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;It&amp;nbsp;is&amp;nbsp;up&amp;nbsp;to&amp;nbsp;the&amp;nbsp;bootloader&amp;nbsp;to&amp;nbsp;position&amp;nbsp;the&amp;nbsp;kernel&amp;nbsp;and&amp;nbsp;the&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;initrd&amp;nbsp;reasonably&amp;nbsp;close&amp;nbsp;to&amp;nbsp;each&amp;nbsp;other&amp;nbsp;(i.e.,&amp;nbsp;within&amp;nbsp;32&amp;nbsp;GB&amp;nbsp;of&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;each&amp;nbsp;other)&amp;nbsp;so&amp;nbsp;that&amp;nbsp;all&amp;nbsp;granule/#levels&amp;nbsp;combinations&amp;nbsp;can&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;always&amp;nbsp;access&amp;nbsp;both.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(WARN(base&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_start_of_DRAM()&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;base&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_start_of_DRAM()&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;linear_region_size,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 10pt;&quot;&gt;&quot;initrd&amp;nbsp;not&amp;nbsp;fully&amp;nbsp;accessible&amp;nbsp;via&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;mapping&amp;nbsp;--&amp;nbsp;please&amp;nbsp;check&amp;nbsp;your&amp;nbsp;bootloader&amp;nbsp;...\n&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;))&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;initrd_start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_remove(base,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;clear&amp;nbsp;MEMBLOCK_&amp;nbsp;flags&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_add(base,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_reserve(base,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(IS_ENABLED(CONFIG_RANDOMIZE_BASE))&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;extern&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;u16&amp;nbsp;memstart_offset_seed;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u64&amp;nbsp;range&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;linear_region_size&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(memblock_end_of_DRAM()&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_start_of_DRAM());&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;If&amp;nbsp;the&amp;nbsp;size&amp;nbsp;of&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;region&amp;nbsp;exceeds,&amp;nbsp;by&amp;nbsp;a&amp;nbsp;sufficient&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;margin,&amp;nbsp;the&amp;nbsp;size&amp;nbsp;of&amp;nbsp;the&amp;nbsp;region&amp;nbsp;that&amp;nbsp;the&amp;nbsp;available&amp;nbsp;physical&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;memory&amp;nbsp;spans,&amp;nbsp;randomize&amp;nbsp;the&amp;nbsp;linear&amp;nbsp;region&amp;nbsp;as&amp;nbsp;well.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(memstart_offset_seed&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;range&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;ARM64_MEMSTART_ALIGN)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;range&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;range&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;/&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;ARM64_MEMSTART_ALIGN&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memstart_addr&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;ARM64_MEMSTART_ALIGN&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((range&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memstart_offset_seed)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;Register&amp;nbsp;the&amp;nbsp;kernel&amp;nbsp;text,&amp;nbsp;kernel&amp;nbsp;data,&amp;nbsp;initrd,&amp;nbsp;and&amp;nbsp;initial&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&amp;nbsp;pagetables&amp;nbsp;with&amp;nbsp;memblock.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_reserve(__pa_symbol(_text),&amp;nbsp;_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;_text);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#ifdef&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;CONFIG_BLK_DEV_INITRD&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(initrd_start)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_reserve(initrd_start,&amp;nbsp;initrd_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;initrd_start);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;the&amp;nbsp;generic&amp;nbsp;initrd&amp;nbsp;code&amp;nbsp;expects&amp;nbsp;virtual&amp;nbsp;addresses&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;initrd_start&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__phys_to_virt(initrd_start);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;initrd_end&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__phys_to_virt(initrd_end);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;#endif&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;early_init_fdt_scan_reserved_mem();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;4GB&amp;nbsp;maximum&amp;nbsp;for&amp;nbsp;32-bit&amp;nbsp;only&amp;nbsp;capable&amp;nbsp;devices&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(IS_ENABLED(CONFIG_ZONE_DMA32))&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arm64_dma_phys_limit&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;max_zone_dma_phys();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;arm64_dma_phys_limit&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;PHYS_MASK&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reserve_crashkernel();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reserve_elfcorehdr();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;high_memory&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__va(memblock_end_of_DRAM()&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dma_contiguous_reserve(arm64_dma_phys_limit);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memblock_allow_resize();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre; color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&lt;span style=&quot;font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre; color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre; color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre; color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;line3&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt; : &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-size: 12pt; white-space: pre; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;64bit 자료형으로 선언된 linear_region_size 변수에 대해 64비트 커널에서 사용할 가상 주소 공간 크기의 절반에&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre; font-size: 10pt;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre; font-size: 12pt;&quot;&gt;해당하는 사이즈를 저장합니다. &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre; font-size: 10pt;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt; white-space: pre;&quot;&gt;line6 : &lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;dt property인 usable-memory를 기반으로 메모리 영역을 제한합니다. kernel dump를 위한 메모리 영역을 제한해 주기 위한 영역을 설정하기 위한 함수입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre;&quot;&gt;[&lt;/span&gt;&lt;font color=&quot;#010101&quot; face=&quot;Consolas, Liberation Mono, Menlo, Courier, monospace&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;arch/arm64/mm/init.c]&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); padding: 10px; margin-left: 4em;&quot;&gt;&lt;font color=&quot;#010101&quot; face=&quot;Consolas, Liberation Mono, Menlo, Courier, monospace&quot;&gt;&lt;span style=&quot;white-space: pre; font-size: 10pt;&quot;&gt;static void __init fdt_enforce_memory_region(void)
{
    struct memblock_region reg = {
        .size = 0,
    };

    of_scan_flat_dt(early_init_dt_scan_usablemem, &amp;amp;reg);

    if (reg.size)
        memblock_cap_memory_range(reg.base, reg.size);
}&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;early_init_dt_scan_usablemem() 함수를 iterator 하며 조건에 맞는 region 값을 얻어오게됩니다.&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre;&quot;&gt;of_scan_flat_dt(early_init_dt_scan_usablemem, &amp;amp;reg);
&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; white-space: pre;&quot;&gt;[&lt;/span&gt;&lt;font color=&quot;#010101&quot; face=&quot;Consolas, Liberation Mono, Menlo, Courier, monospace&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;arch/arm64/mm/init.c]&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; margin: 0px; padding: 0px; border: none; border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding: 6px; border-right: 2px solid rgb(229, 229, 229);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; word-break: normal; text-align: right; color: rgb(102, 102, 102); line-height: 20.8px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;line-height: 20.8px;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding: 6px 0px;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(1, 1, 1); line-height: 20.8px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;static&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;early_init_dt_scan_usablemem(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;unsigned&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;long&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;node,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;uname,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;depth,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;data)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;struct&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;memblock_region&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;usablemem&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;data;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;const&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__be32&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;reg;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;len;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(depth&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;strcmp(uname,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 10pt;&quot;&gt;&quot;chosen&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;reg&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;of_get_flat_dt_prop(node,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(99, 163, 92); font-size: 10pt;&quot;&gt;&quot;linux,usable-memory-range&quot;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;len);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;reg&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(len&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(dt_root_addr_cells&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;dt_root_size_cells)))&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usablemem&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;base&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;dt_mem_next_cell(dt_root_addr_cells,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;reg);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;usablemem&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;dt_mem_next_cell(dt_root_size_cells,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;reg);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding: 0px 6px; white-space: pre; line-height: 20.8px; margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: right; margin-top: -13px; margin-right: 5px; font-size: 9px; font-style: italic; margin-left: 2em;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align: bottom; padding: 0px 2px 4px 0px;&quot;&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 10pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 4em;&quot;&gt;linux,usable-memory-range에 대해 정보를 가져와 region 구조체의 base와 size를 대입하여 줍니다.&lt;/div&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre; font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre; font-size: 12pt;&quot;&gt;line 9: &lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;지원하는 물리적 메모리보다 큰 영역은 memblock memory type 영역에서 제거하게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre;&quot;&gt;line 21 : &lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;물리메모리(dram)의 시작 주소를 ARM64에 맞춰 정렬(?) 해주게 되고 해당 시작주소를 얻어옵니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(1, 1, 1); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; white-space: pre;&quot;&gt;line 29 : &lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;start부터 linear_region 크기를 넘어서는 영역에 대해 memblock에서 제거합니다. linear_region 영역을 넘어서는 메모리는 관리할 수 없기에 제거하게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;line 31 ~ 34 : DRAM 크기가 linear_region 영역보다 크다면 linear_mapping에 대해 사용할 수 있는 영역 외에 나머지 영역을 제거합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 48~75 : initrd를 memblock reserved영역에 추가해주기 위한 logic입니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;line 48 : CONFIG_BLK_DEV_INITRD가 설정되어 있고 initrd_start(부트엄 과정 중 dt에서 값을 읽어 저장함)에 값이 있다면 진행하게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;line 71 ~ 73 : 기존에 존재하는 memblock의 memory 영역에 initrd_start와 initrd_end로 계산한 base와 size만큼 제거한 이후 다시 추가해줍니다. memblock_add는 memory 타입에 추가되는 것이므로 memblock_reserve()함수를 이용해 reserved 타입에 추가해줍니다. 이렇게 하여 initrd를 위한 reserved 타입의 region을 확보해줍니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 76 ~ 91 : 보안 목적으로 커널 시작 주소를 램던하게 변경하고 변경되는 경우 memstart_addr을 구합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 97 : vmlinux.lds.S에 명시되어 있는 .text부터 .end 영역까지 커널영역을 reserved 타입 영역에 등록한다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 99 ~ 105 : initrd 여역을 reserved 타입 영역에 등록하고 initrd의 start와 end 물리주소를 가상메모리 주소로 변경하여 저장합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 108 : dtb에 관련된 영역을 reserved 에 추가합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;p style=&quot;margin-left: 2em; line-height: 1.5;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;5&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;6&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;9&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;10&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;11&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;12&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;13&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;15&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;16&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;17&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;18&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;19&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;__init&amp;nbsp;early_init_fdt_scan_reserved_mem(&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;n;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u64&amp;nbsp;base,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;initial_boot_params)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 153, 153); font-size: 10pt;&quot;&gt;/*&amp;nbsp;Process&amp;nbsp;header&amp;nbsp;/memreserve/&amp;nbsp;fields&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;for&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(n&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&amp;nbsp;;&amp;nbsp;n&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&amp;nbsp;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fdt_get_mem_rsv(initial_boot_params,&amp;nbsp;n,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;base,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;span style=&quot;color:#ff3399&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93); font-size: 10pt;&quot;&gt;break&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;early_init_dt_reserve_memory_arch(base,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(6, 109, 226); font-size: 10pt;&quot;&gt;size&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 153, 204); font-size: 10pt;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;of_scan_flat_dt(__fdt_scan_reserved_mem,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 134, 179); font-size: 10pt;&quot;&gt;NULL&lt;/span&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fdt_init_reserved_mem();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;Colored by Color Scripter&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 10pt; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.5; margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;위 함수는 2가지를 담당하게 되는데, DTB Header의 off_mem_rsvmap 필드가 가리키는 memory reserve 블록에서 읽은 address와 size를 가진 enty를 등록하는 것과 DTB reserved 영역을 필요로 하는 node들을 위해 reserved 타입 영역에 등록해줍니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;line 10~15 :&amp;nbsp; fdt_get_mem_rsv로 initial_boot_params(dtb의 시작주소) 부터 시작해서 base와 size를 구해옵니다. 그 이후 early_init_dt_reserve_memory_arch() 함수를 이용해서 해당 base부터 size 크기만큼 reserved 타입 영역에 추가해줍니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;line 17 ~ 18 : 두 번째로 for문 밖의 함수들에서 node들이 원하는 reserve 영역에 대해 추가해줍니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 110~114 : DMA physical limit을 설정합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 116 : Kernel crash를 위한 메모리 공간을 reserved 타입에 추가합니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 120 : DRAM의 end 물리 주소를 가상주소로 변환합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;line 122 : DMA영역을 reserved 타입 영역에 추가하고 CMA(Contiguous Memory Allocator) 영역에도 추가합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;arm64_memblock_init()을 분석은 여기서 끝내겠습니다. 추가적인 상세한 내용은 추후에 공부하다 보완하겠습니다. 감사합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: right;&quot;&gt;참고자료 : 코드로 알아보는 ARM 리눅스 커널 | 저 윤석훈, 문영일, 구본규, 유희재&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 4em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/468</guid>
<comments>https://sonseungha.tistory.com/468#entry468comment</comments>
<pubDate>Sat, 15 Sep 2018 17:59:54 +0900</pubDate>
</item>
<item>
<title>[ELF] Symbol Resolution</title>
<link>https://sonseungha.tistory.com/467</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;ELF 란 용어를 많이 들어보셨을텐데요, ELF는 Executable and Linking Format의 약어입니다. UNIX / LINUX 기반에서 사용되는 실행&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;및 링킹 파일 포맷입니다. 지난 글에 이어 이번 글에서는 Symbol Resolution&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;에 대해&amp;nbsp;알아보겠습니다.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;[이전 글]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/460&quot; target=&quot;_blank&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;2018/08/27 - [Linux/Debugging &amp;amp; Testing] - [ELF] ELF Header&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/461&quot; target=&quot;_blank&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;2018/08/29 - [Linux/Debugging &amp;amp; Testing] - [ELF] Segment와 Program Header&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/462&quot; target=&quot;_blank&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;2018/09/07 - [Linux/Debugging &amp;amp; Testing] - [ELF] Sections and the Section header table&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/466&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;2018/09/09 - [Linux/Debugging &amp;amp; Testing] - [ELF] Stripping an ELF object&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;margin: 0px; padding: 0px; outline: none; list-style: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif;&quot;&gt;&lt;li style=&quot;margin: 0px; padding: 0px; outline: none; list-style: none;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; color: rgb(0, 0, 0);&quot;&gt;이번 글은 대부분 예제로 글을 진행할 예정입니다. 좀 더 이해하기 쉽게 하고자 코드를 이용한 방법을 말씀드립니다. 먼저 예제가 어떤 구조를 띄고있는지 보시죠.&lt;/span&gt;&lt;br /&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; outline: none; list-style: none;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; outline: none; list-style: none;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 153px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F9993763E5B94E53829E60C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9993763E5B94E53829&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr1.PNG&quot; height=&quot;153&quot; style=&quot;width: 400px; height: 153px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; outline: none; list-style: none;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;resm 이란 실행파일이 libres.so와 libres2.so를 링킹하고 있는 구조입니다. 그럼 각 소스코드를 살펴보시죠.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px; padding: 0px; outline: none; list-style: none;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;소스코드의 순서는 좌측으로부터 res2.c, res.c, resm.c 입니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:830px;width: 830px; height: 463px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F99BD3D3E5B94E5880EFC6B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99BD3D3E5B94E5880E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr2.PNG&quot; height=&quot;463&quot; style=&quot;width: 830px; height: 463px;&quot; width=&quot;830&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;resm.c에 프로그램의 시작인 main()함수가 있네요. res.c , res2.c 는 공유 라이브러리로 컴파일되고 최종적으로 resm이 linking하도록 만듭니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;위와 같이 코드를 작성 후 함께 진행해보실 분들은 함께해주세요. 공유라이브러리 만드는 법을 모르시는 분들은 인터넷에 검색하면 많은 내용들이 나오고 있습니다. 여기서는 따로 다루지 않을 생각이니 별도의 학습 부탁드립니다.&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif;&quot;&gt;그럼 글만 보시는 분들은 위의 그림에서 어떻게 호출이 될까요? 보다보니 function1()과 function2()가 동일한 이름의 함수와 globInt1, globInt2란 전역변수가&amp;nbsp;resm.c와 res1.c 모두 존재하네요. 흠, res2.c에서 globInt1, globInt2를 모두 전역변수 참조하여 선언하고 있습니다.. 복잡하네요, 그럼 코드만 보고 결과로 어떤 출력이 나올지 고민해보세요.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;main()함수 부터 살펴보면 아래 처럼 호출을 할 것 같네요. function3()을 main에서 호출하면서 res.c에 존재하는 function3이 호출될 것 같습니다. 그 후 function3()에서 function2()를 호출하네요. 그런데 function2()가 두개 존재합니다..? 흠 어떤 파일에 위치한 function2()가 호출될까요?&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile3.uf.tistory.com%2Fimage%2F995B7F365B94E8E41AD0B5&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/995B7F365B94E8E41A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr4.PNG&quot; height=&quot;463&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;맞는지 틀렸는지는 중요하지 않습니다. 생각해보고 왜 그럴까 분석해 보는 행동, 노력 자체가 중요한 것이닌깐요! 모두 고민해보셨나요? 그럼 결과를 한번 보시죠.&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt; 심볼 정보와 함께 결과는 아래와 같습니다. 심볼정보만 먼저 살펴보시면 GlobInt와 function과 관련해서 동일한 이름의 Symbol이 각각 존재함을 알 수 있습니다. linking한 후 실행하게 되면 어떤결과가 나타날까요?&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 389px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F993E0D3A5B94E7E4189E23&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/993E0D3A5B94E7E418&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr3.PNG&quot; height=&quot;389&quot; style=&quot;width: 600px; height: 389px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;위의 노란박스를 살펴보면 res.c에서 function3()가 같은 파일내에 존재하는 function2()를 호출하지 않고, resm에 존재하는 function2()를 호출하고 있습니다.!!!!! 왜 라이브러리 내에 존재하는 함수가 아닌 다른 곳에 위치한 함수를 호출하게 되는걸까요? 라이브러리 개발자의 의도는 분명 자신의 함수가 호출되길 바랬을 것 같습니다. 우연치 않게 함수의 이름이 겹쳐버린 것 같은데 위와 같은 문제가 발생하게 됩니다.&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F99958C345B94E9731700A0&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99958C345B94E97317&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr5.PNG&quot; height=&quot;462&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;function2() 함수 호출 이후의 globInt2 변수 참조하여 출력하는 printf()함수에서도.. resm.c에 선언한 전역변수를 참조하고 있습니다. 원치 않는 결과네요. 그리고 다음엔 function6()이 호출되겠네요.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F99F1FA355B94E9D6278F17&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99F1FA355B94E9D627&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr6.PNG&quot; height=&quot;461&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;위에서 언급한 결과 그림에서 보면 function6()에서도 참조하는 globInt2 전역변수를 res.c가 아닌 resm.c에 선언된 전역변수를 참조하고 있네요. 이런 의도치 않은 결과로 인해 문제가 발생하게 되면 문제 해결을 위한 디버깅도 굉장히 힘들어 집니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;공유라이브러리 개발자들은 이런 문제를 사전에 방지하고자 할 것 입니다. 이러한 문제들은 간단하게 컴파일 옵션만으로도 문제를 해결할 수 있습니다. -Bsymbolic Option 입니다. 해당 옵션에 대한 설명은 아래 인용문으로 대체하겠습니다. 읽어보시면 쉽게 이해되실 거에요.!&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;span id=&quot;docs-internal-guid-a08ffd9e-7fff-098d-5649-119a6d94efde&quot;&gt;&lt;p style=&quot;list-style-type: disc; font-size: 28pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre; margin-left: -4pt;&quot;&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.7999999999999998;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;i&gt;&lt;span style=&quot;font-size: 12pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;- Bsymbolic Option&lt;/span&gt;&lt;span style=&quot;font-size: 28pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;br class=&quot;kix-line-break&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;: When creating a shared library, bind references to global symbols to the definition within the shared library, if any. &amp;nbsp;Normally, it is possible for a program linked against a shared library to override the definition within the shared library. This option is only meaningful on ELF platforms which support shared libraries.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;그럼 해당 옵션을 적용 후 실행 결과를 살펴보겠습니다. 정상적으로 동작해야겠죠?&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F9922D3505B94EB5D15F988&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9922D3505B94EB5D15&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sr7.PNG&quot; height=&quot;246&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;와 결과가 정상적으로 동작합니다. 휴 다행이네요. Symbol Resolution에 대한 개념을 직접적으로 설명은 드리지 않았지만 어느정도 이해를 하신 것 같습니다. 좀 더 복잡한 예제 및 테스트는 직접 해보시면서 확인해보시는 걸 추천드립니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;감사합니다.&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: -8pt; padding: 0px; outline: none; font-variant-numeric: normal; font-variant-east-asian: normal; background-color: transparent; list-style-type: disc; font-size: 20pt; font-family: Arial; vertical-align: baseline; white-space: pre; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 10pt; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Tool Interface Standards – Portable Formats Specification, Version 1.1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;Self-Service Linux , MarkWilding and Dan Behman&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;How To Write Shared Libraries, Ulrich Drepper&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;Linking, Randy Bryant and Dave O’Hallaron&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: -8pt; padding: 0px; outline: none; font-variant-numeric: normal; font-variant-east-asian: normal; background-color: transparent; list-style-type: disc; font-size: 20pt; font-family: Arial; vertical-align: baseline; white-space: pre; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;text-decoration-line: underline; font-size: 10pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-family: Arial; font-size: 11pt; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;http://man7.org/linux/man-pages/man5/elf.5.html&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: -8pt; padding: 0px; outline: none; font-variant-numeric: normal; font-variant-east-asian: normal; background-color: transparent; list-style-type: disc; font-size: 20pt; font-family: Arial; vertical-align: baseline; white-space: pre; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;a href=&quot;http://egloos.zum.com/recipes/v/5010841&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://egloos.zum.com/recipes/v/5010841&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: -8pt; padding: 0px; outline: none; font-variant-numeric: normal; font-variant-east-asian: normal; background-color: transparent; list-style-type: disc; font-size: 20pt; font-family: Arial; vertical-align: baseline; white-space: pre; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: -8pt; padding: 0px; outline: none; font-variant-numeric: normal; font-variant-east-asian: normal; background-color: transparent; list-style-type: disc; font-size: 20pt; font-family: Arial; vertical-align: baseline; white-space: pre; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin: 0pt 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;https://en.wikipedia.org/wiki/Weak_symbol&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br style=&quot;color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Debugging &amp; Testing</category>
<category>elf</category>
<category>ELF symbol</category>
<category>symbol</category>
<category>Symbol Resolution</category>
<category>심볼</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/467</guid>
<comments>https://sonseungha.tistory.com/467#entry467comment</comments>
<pubDate>Sun, 09 Sep 2018 18:45:53 +0900</pubDate>
</item>
<item>
<title>[ELF] Stripping an ELF object</title>
<link>https://sonseungha.tistory.com/466</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;ELF 란 용어를 많이 들어보셨을텐데요, ELF는 Executable and Linking Format의 약어입니다. UNIX / LINUX 기반에서 사용되는 실행&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;및 링킹 파일 포맷입니다. 지난 글에 이어 이번 글에서는 Stripping ELF 에 대해&amp;nbsp;알아보겠습니다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;[이전 글]&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/460&quot; target=&quot;_blank&quot;&gt;2018/08/27 - [Linux/Debugging &amp;amp; Testing] - [ELF] ELF Header&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/461&quot; target=&quot;_blank&quot;&gt;2018/08/29 - [Linux/Debugging &amp;amp; Testing] - [ELF] Segment와 Program Header&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/462&quot; target=&quot;_blank&quot;&gt;2018/09/07 - [Linux/Debugging &amp;amp; Testing] - [ELF] Sections and the Section header table&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;div style=&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Strip (?)&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;ELF 파일을 Strip 하는 것에 대해 알아보려 하는데요, 먼저 Strip이 무엇인지 부터 정의하고 넘어가야 할 것 같습니다. Strip에 대한 사전적 의미부터 살펴보죠. Naver에서 검색한 내용입니다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none; line-height: 2;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 133px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F9946DB355B94CF010D2030&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9946DB355B94CF010D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;strip.PNG&quot; height=&quot;133&quot; style=&quot;width: 600px; height: 133px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;가장 먼저 표시되는 사전적 의미가 옷을 벗다... 라고 하네요 ^^; 그럼 ELF file을 strip 시킨다는건 무슨 의미일까요? ELF의 옷을 벗기는걸까요? 그럼 ELF의 옷은.. 무엇일까요? 좀 더 고민해 보시면 ELF 파일에서 특정 데이터를 벗겨서(?) 제거하는 의미임을 추측하실 수 있으실 겁니다. 그럼 도대체 어떤 정보를 제거하고, 제거한 후에는 어떻게 되는지 살펴보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;모든 ELF object 들은 Strip될 수 있습니다. 여기서 제거되는 정보는 실행 중에 필요치 않은 정보들, 즉 런타임에 필요로 하지 않은 Main symbol table과 section들이 삭제될 것 입니다. 만약 런타임에 필요한 정보들이 제거되면.. 제대로 동작하지 않겠죠? 그런 정보들이 무엇일까요?&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;리눅스 배포판에는 strip이란 명령어가 있습니다. man strip으로 확인하면 아래와 같은 설명이 나옵니다.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;i&gt;discard symbols from object files&lt;/i&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럼 strip 전과 후 어떤 section들이 사라졌는지 readelf 툴로 확인해봅시다!&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:646px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F99D3364E5B94D1590D206B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D3364E5B94D1590D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;strip2.PNG&quot; height=&quot;321&quot; width=&quot;646&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;위가 Strip 전이고 아래가 strip 이후의 section들을 보여주고 있습니다. 뭔가 줄어든것 같은 느낌이 확 드시나요? 이렇게 보니 잘 안보이네요. 표로 정리된 내용을 살펴보죠.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F99B5B24F5B94D1BB0A8D91&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99B5B24F5B94D1BB0A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;strip3.PNG&quot; height=&quot;450&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;strtab과 symtab 섹션이 strip 이후에 사라졌습니다.!! 저 2개의 section에 어떤정보들이 있었는지 기억하시나요? 다시 한번 리마인드 겸 Section 관련 글에서 가지고 와보겠습니다.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.strtab&lt;br /&gt;- Main symbol table을 위한 심볼 이름들이 위치하고 있는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.symtab&lt;br /&gt;- 모든 정적 함수와 변수를 포함한 모든 Symbol table의 정보가 위치하는 섹션&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;String Format의 정보들이 사라져보리는군요. String Format은 사람이 읽을 수 있는 Format으로 실제 실행중에는 필요없는 정보입니다. 하지만 이 정보들은 문제 발생 시 디버깅 할 때 매우 유용하게 사용되는 섹션들입니다 ^^ 이렇게 섹션을 Strip하여 지워버리면 당연히 ELF 파일의 사이즈도 줄어들겠죠? 정말 줄어드는지는 직접 해보시면 좋을 것 같습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번 글은 여기서 짧게 끝을 맺으려 합니다. 감사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;list-style-type: disc; font-size: 20pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre; margin-left: -8pt; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 10pt; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Tool Interface Standards – Portable Formats Specification, Version 1.1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Self-Service Linux , MarkWilding and Dan Behman&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;How To Write Shared Libraries, Ulrich Drepper&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Linking, Randy Bryant and Dave O’Hallaron&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;list-style-type: disc; font-size: 20pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;span style=&quot;text-decoration: underline; font-size: 10pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-family: Arial; font-size: 11pt; white-space: pre-wrap;&quot;&gt;http://man7.org/linux/man-pages/man5/elf.5.html&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;list-style-type: disc; font-size: 20pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;a href=&quot;http://egloos.zum.com/recipes/v/5010841&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://egloos.zum.com/recipes/v/5010841&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;list-style-type: disc; font-size: 20pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot; style=&quot;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;list-style-type: disc; font-size: 20pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.5; margin-top: 0pt; margin-bottom: 0pt; text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Weak_symbol&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Debugging &amp; Testing</category>
<category>elf</category>
<category>Linux</category>
<category>strip</category>
<category>Stripping</category>
<category>분석</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/466</guid>
<comments>https://sonseungha.tistory.com/466#entry466comment</comments>
<pubDate>Sun, 09 Sep 2018 16:58:16 +0900</pubDate>
</item>
<item>
<title>[ARMv8] aarch64 프로세서 상태 레지스터(PSTATE)</title>
<link>https://sonseungha.tistory.com/464</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;PSTATE는 프로세서 상태 레지스터입니다. 이 레지스터를 이용해 프로세서의 상태를 알수도 있고 설정할 수도 있습니다. 아래 그림은 ARM Developer 페이지에서 가져온 그림입니다. PSTATE field를 정의해 놓았습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 606px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile29.uf.tistory.com%2Fimage%2F993301345B93AB0B209721&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/993301345B93AB0B20&quot; filemime=&quot;image/jpeg&quot; filename=&quot;PSATE.PNG&quot; height=&quot;606&quot; style=&quot;width: 300px; height: 606px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center;&quot;&gt;(http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.den0024a/BABICCBC.html)&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;PSTATE의 각 비트가 하나 씩 어떤 행위를 하는지 정리해보겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;N(Negative Condition Flag)&lt;/b&gt; : 연산의&amp;nbsp;결과 값이 음수인 경우 설정되는 비트&lt;br /&gt;&lt;b&gt;Z(Zero Condition Flag)&lt;/b&gt; : 연산의 결과 값이 0인 경우 설정되는 비트&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;C(Carry Condition Flag)&lt;/b&gt; : 캐리 발생 시 설정되는 비트&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;V(oVerflow Condition Flag)&lt;/b&gt; : 오버플로우 발생 시 설정되는 비트&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;D(Debug mask bit)&lt;/b&gt; : 디버그 익센셥의 허용 유무를 설정하는 비트 (0 : 허용 / 1: 허용하지 않음)&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;A(SError mask bit)&lt;/b&gt; : 시스템 에러 익센션의 허용 유무를 설정하는 비트 (0 : 허용 / 1: 허용하지 않음)&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;I(IRQ mask bit)&lt;/b&gt; : IRQ 익센셥 발생을 허용 유무를 설정하는 비트 (0 : 허용 / 1: 허용하지 않음)&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;F(FIQ&amp;nbsp;mask bit)&lt;/b&gt; : FIQ 익센셥 발생을 허용 유무를 설정하는 비트 (0 : 허용 / 1: 허용하지 않음)&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;SS(Software Step bit)&lt;/b&gt; : ...?&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;IL(Illegal Exception State bit)&lt;/b&gt; : 임의의 명령을 실행하지 못하고도록 설정하는 비트&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;EL(Exception level)&lt;/b&gt; : 현재 익센셥 레벨 표시&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;nRW(Excution state)&lt;/b&gt; : 현재 실행 상태 (aarch64 : 1 / aarch32 : 0)&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;SP(Stack Pointer Selector)&lt;/b&gt; : 사용할 스택포인터 설정하기 위한 비트 (0 : SP_EL0, 1 : SP_ELx)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<category>å</category>
<category>aarch64</category>
<category>ARM64</category>
<category>Kernel</category>
<category>Linux</category>
<category>pstate</category>
<category>프로세서 상태 레지스터</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/464</guid>
<comments>https://sonseungha.tistory.com/464#entry464comment</comments>
<pubDate>Sat, 08 Sep 2018 20:19:21 +0900</pubDate>
</item>
<item>
<title>[커널분석] parse_early_param()</title>
<link>https://sonseungha.tistory.com/463</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;parse_early_param() 함수는 커널 부트업 타임에 사용하는 early parameter를 파싱해 오는 함수로 boot command line을 파싱해오는 역할을 합니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;parse_early_param()&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 18.6667px;&quot;&gt;&lt;b&gt;init/main.c&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; background-color:#fafafa; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Arch&amp;nbsp;code&amp;nbsp;calls&amp;nbsp;this&amp;nbsp;early&amp;nbsp;on,&amp;nbsp;or&amp;nbsp;if&amp;nbsp;not,&amp;nbsp;just&amp;nbsp;before&amp;nbsp;other&amp;nbsp;parsing.&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;parse_early_param(&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;done&amp;nbsp;__initdata;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;tmp_cmdline[COMMAND_LINE_SIZE]&amp;nbsp;__initdata;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(done)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;All&amp;nbsp;fall&amp;nbsp;through&amp;nbsp;to&amp;nbsp;do_early_param.&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strlcpy(tmp_cmdline,&amp;nbsp;boot_command_line,&amp;nbsp;COMMAND_LINE_SIZE);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parse_early_options(tmp_cmdline);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;done&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;__initdata 메모리 영역에 tmp_cmdline 문자 배열을 선언하고, boot_command_line (dt /chosen node의 bootargs 값) 을 복사해 옵니다. parse_early_options() 함수를 호출하여 option을 파싱해 옵니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;parse_early_param()&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;-&amp;gt; parse_early_options()&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b style=&quot;font-size: 18.6667px;&quot;&gt;init/main.c&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;margin: 0px; padding: 0px; border: none; border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;parse_early_options(&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;cmdline)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parse_args(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;early&amp;nbsp;options&quot;&lt;/span&gt;,&amp;nbsp;cmdline,&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;NULL&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do_early_param);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;인자 마지막에 do_early_param 이란 함수포인터를 전달한다. 해당 함수포인터를 어떤 용도로 사용하는지는 parse_args() 함수 분석 시 설명한다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;parse_early_param()&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;-&amp;gt; parse_early_options()&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp; &amp;nbsp;-&amp;gt; parse_args();&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b style=&quot;font-size: 18.6667px;&quot;&gt;kernel/params.c&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;23&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;24&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;25&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;26&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;27&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;28&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;29&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;30&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;31&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;32&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;33&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;34&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;35&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;36&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;37&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;38&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;39&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;40&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;41&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;42&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;43&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;44&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;45&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;46&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;47&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;48&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;49&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;50&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;51&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;52&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;53&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;54&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;55&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Args&amp;nbsp;looks&amp;nbsp;like&amp;nbsp;&quot;foo=bar,bar2&amp;nbsp;baz=fuz&amp;nbsp;wiz&quot;.&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;parse_args(&lt;span style=&quot;color:#a71d5d&quot;&gt;const&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;doing,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;args,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;const&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;kernel_param&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;params,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;unsigned&lt;/span&gt;&amp;nbsp;num,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s16&amp;nbsp;min_level,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s16&amp;nbsp;max_level,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;arg,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;unknown)(&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;param,&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;val,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;const&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;doing,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;arg))&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;param,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;val,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;err&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0086b3&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Chew&amp;nbsp;leading&amp;nbsp;spaces&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;skip_spaces(args);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;args)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_debug(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;doing&amp;nbsp;%s,&amp;nbsp;parsing&amp;nbsp;ARGS:&amp;nbsp;'%s'\n&quot;&lt;/span&gt;,&amp;nbsp;doing,&amp;nbsp;args);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;while&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;args)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;ret;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;irq_was_disabled;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;args&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;next_arg(args,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;param,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;val);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;Stop&amp;nbsp;at&amp;nbsp;--&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;val&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;strcmp(param,&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;--&quot;&lt;/span&gt;)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;err&amp;nbsp;?:&amp;nbsp;args;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;irq_was_disabled&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;irqs_disabled();&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ret&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;parse_one(param,&amp;nbsp;val,&amp;nbsp;doing,&amp;nbsp;params,&amp;nbsp;num,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;min_level,&amp;nbsp;max_level,&amp;nbsp;arg,&amp;nbsp;unknown);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(irq_was_disabled&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;irqs_disabled())&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_warn(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%s:&amp;nbsp;option&amp;nbsp;'%s'&amp;nbsp;enabled&amp;nbsp;irq's!\n&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;doing,&amp;nbsp;param);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;switch&lt;/span&gt;&amp;nbsp;(ret)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;case&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;continue&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;case&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;ENOENT:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_err(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%s:&amp;nbsp;Unknown&amp;nbsp;parameter&amp;nbsp;`%s'\n&quot;&lt;/span&gt;,&amp;nbsp;doing,&amp;nbsp;param);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;case&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;ENOSPC:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_err(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%s:&amp;nbsp;`%s'&amp;nbsp;too&amp;nbsp;large&amp;nbsp;for&amp;nbsp;parameter&amp;nbsp;`%s'\n&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;doing,&amp;nbsp;val&amp;nbsp;?:&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;,&amp;nbsp;param);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;default&lt;/span&gt;:&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_err(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;%s:&amp;nbsp;`%s'&amp;nbsp;invalid&amp;nbsp;for&amp;nbsp;parameter&amp;nbsp;`%s'\n&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;doing,&amp;nbsp;val&amp;nbsp;?:&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;&quot;&lt;/span&gt;,&amp;nbsp;param);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;err&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;ERR_PTR(ret);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;err;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;args = next_arg(args, &amp;amp;param, &amp;amp;val);&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;args로 bootargs 속성 값인 cmdline을 전달하고 그 내부에 param과 val를 output으로 전달하게 됩니다. 내부는 &quot;A=B, C=D&quot;와 같은 형식에서 A,&amp;nbsp; C는 param이고, B, D는 value로서 output으로 전달됩니다. 스페이스를 기준으로 전달되며 while문에서 args가 null일 때까지 반복해서 param과 val을 얻어옵니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;irq_was_disabled = irqs_disabled();&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;System control register의 인터럽트가 disable 상태인지 확인합니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;b&gt;ret = parse_one(param, val, doing, params, num, min_level, max_level, arg, unknown);&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; margin-left: 2em;&quot;&gt;param, val, doing 등의 파라미터와 마지막으로 함수포인터 unknown이 전달됩니다. 위 unknown은 parse_early_options()내에서 전달하는 do_early_param 함수포인터입니다. next_arg로 가져온 param, val를 전달하여 do_early_param() 함수에서 뭔가 처리하는 것 같습니다. 해당 함수는 아래 설명하겠습니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;parse_one() 함수 이후는 에러 핸들링을 위한 로직입니다. 위에서 설명한대로 최종적으로 arg가 NULL이 될 때까지 위 과정을 반복하게 됩니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;parse_early_param()&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;-&amp;gt; parse_early_options()&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp; &amp;nbsp;-&amp;gt; parse_args();&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;-&amp;gt; do_ealrly_param(); (parse_early_options() 함수에서 전달된 함수포인터)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(203, 203, 203); background-color: rgb(255, 255, 255); padding: 10px;&quot;&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; position:relative !important; overflow:auto&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; style=&quot;margin:0; padding:0; border:none; border-radius:4px;&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;padding:6px; border-right:2px solid #e5e5e5&quot;&gt;&lt;div style=&quot;margin:0; padding:0; word-break:normal; text-align:right; color:#666; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;line-height:130%&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;line-height:130%&quot;&gt;17&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;padding:6px 0&quot;&gt;&lt;div style=&quot;margin:0; padding:0; color:#010101; font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace !important; line-height:130%&quot;&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;static&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;int&lt;/span&gt;&amp;nbsp;__init&amp;nbsp;do_early_param(&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;param,&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;val,&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;const&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#066de2&quot;&gt;char&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;unused,&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;arg)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;const&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;struct&lt;/span&gt;&amp;nbsp;obs_kernel_param&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;*&lt;/span&gt;p;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;for&lt;/span&gt;&amp;nbsp;(p&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;__setup_start;&amp;nbsp;p&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;lt;&lt;/span&gt;&amp;nbsp;__setup_end;&amp;nbsp;p&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;+&lt;/span&gt;)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;((p&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;early&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;parameq(param,&amp;nbsp;p&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;str))&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;|&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(strcmp(param,&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;console&quot;&lt;/span&gt;)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;amp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strcmp(p&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;str,&amp;nbsp;&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;earlycon&quot;&lt;/span&gt;)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;if&lt;/span&gt;&amp;nbsp;(p&lt;span style=&quot;color:#a71d5d&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;&amp;gt;&lt;/span&gt;setup_func(val)&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;!&lt;/span&gt;&lt;span style=&quot;color:#a71d5d&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pr_warn(&lt;span style=&quot;color:#63a35c&quot;&gt;&quot;Malformed&amp;nbsp;early&amp;nbsp;option&amp;nbsp;'%s'\n&quot;&lt;/span&gt;,&amp;nbsp;param);&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#999999&quot;&gt;/*&amp;nbsp;We&amp;nbsp;accept&amp;nbsp;everything&amp;nbsp;at&amp;nbsp;this&amp;nbsp;stage.&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#a71d5d&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#0099cc&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;padding:0 6px; white-space:pre; line-height:130%&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align:right; margin-top:-13px; margin-right:5px; font-size:9px; font-style:italic&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229);&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;vertical-align:bottom; padding:0 2px 4px 0&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: white;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; background-color: rgb(229, 229, 229); border-radius: 10px; padding: 1px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;do_early_param() 함수는 while() 내에서 param과 val를 하나씩 전달받아 실행이 됩니다. 이 때 obs_kernel_param에 등록된 모든 setup_func() 들을 호출해주며 val 값을 전달해주고 있습니다. setup_func() 함수는 early_param() 함수를 통해 등록된 함수포인터입니다. obs_kernel_param은 컴파일 타임에 .init.setup 섹션에 메모리 할당되는 녀석들입니다.&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Kernel Analysis</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/463</guid>
<comments>https://sonseungha.tistory.com/463#entry463comment</comments>
<pubDate>Sat, 08 Sep 2018 18:58:09 +0900</pubDate>
</item>
<item>
<title>[ELF] Sections and the Section header table</title>
<link>https://sonseungha.tistory.com/462</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;ELF 란 용어를 많이 들어보셨을텐데요, ELF는 Executable and Linking Format의 약어입니다. UNIX / LINUX 기반에서 사용되는 실행 &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;및 링킹 파일 포맷입니다. 지난 글에 이어 이번 글에서는 ELF 파일&amp;nbsp;포맷에서 Section 과 Section Header Table에 대해&amp;nbsp;알아보겠습니다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;[이전 글]&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/460&quot; target=&quot;_blank&quot;&gt;2018/08/27 - [Linux/Debugging &amp;amp; Testing] - [ELF] ELF Header&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/461&quot; target=&quot;_blank&quot;&gt;2018/08/29 - [Linux/Debugging &amp;amp; Testing] - [ELF] Segment와 Program Header&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; padding: 0px; outline: none; color: rgb(102, 102, 102); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;div style=&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Section Header Table&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;Section Header Table은 ELF file의 거의 모든 파트(?)에 대한 정보가 들어있습니다. '거의 모든' 이라고 말씀드린 이유는 ELF Header, Program Header Table, Section Header Table 이 3가지에 대한 정보는 포함되어 있지 않기 때문입니다. Section Header Table이란 이름에서 조금 감이 오셨을 텐데요, ELF을 구성하는 각기 다른&amp;nbsp;Section들을 정의하는 Section Header 구조체가 연속된 메모리에 나열되어 있기 때문입니다. 그럼 Section Header와 관련된 구조체를 보겠습니다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:711px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99E6D84E5B94B17031ADFE&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99E6D84E5B94B17031&quot; filemime=&quot;image/jpeg&quot; filename=&quot;section.PNG&quot; height=&quot;280&quot; width=&quot;711&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;section name, type, flags, virtual address 등 다양한 정보, 즉 Section에 대한 메타데이터를 가지는 녀석임을 쉽게 파악할 수 있습니다. 이런 Section Header의 위치가 어디에 나타나 있는지 기억하시나요? ELF Header에 program header와 함께 Section Header에 대한 정보도 있었던 것 같은데.. 기억나시나요? 다시 한번 살펴보겠습니다. 아래 그림은 readelf 툴로 ELF header를 살펴본 내용입니다. 하늘색 박스로 된 부분이 보이시나요?&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:544px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile6.uf.tistory.com%2Fimage%2F99D41E465B94B206068DE8&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D41E465B94B20606&quot; filemime=&quot;image/jpeg&quot; filename=&quot;section2.PNG&quot; height=&quot;356&quot; width=&quot;544&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Start of section headers, Size of section headers, Number of section headers 란 녀석을 집중적으로 보면 될 것 같습니다. 해석해 보면 Section Header들의 첫 시작은 ELF 파일의 시작주소로 부터 384byte 떨어진 곳부터 시작을 하는군요, Section Header의 사이즈는 64 byte이며 총 13개의 section headers들이 있습니다. 정리가 되시나요? 384 byte 떨어진 지점부터 시작한다는 건 그 중간에 어떠한 데이트들이 있단 얘기인데요, 앞에서 살펴본 ELF Header나 Program Header등이 중간에 차지하고 있겠죠?&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;Section의 메타데이터를 가지고 있는 Section Header에 대해 알아보았으니 그럼 이제 Section에 대해 살펴보겠습니다. 먼저 Section에 집중하기 전에 Section Format에 대해 알아보겠습니다. Section에는&amp;nbsp;2가지 형태의 Format이 존재합니다. String Table Format과 Symbol Table Format입니다.&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left;&quot;&gt;String Format Table&lt;br /&gt;- ELF file에서 사용되어 지는 모든 문자열의 리스트들을 나타내는 형태입니다. ELF file에는 dynamic symbol table, main symbol table, section header names와 같은 String Format Table이 존재합니다.&lt;br /&gt;- Format은 아래와 같습니다.&lt;br /&gt;&amp;nbsp; &amp;nbsp;&amp;lt;string1&amp;gt;\0&amp;lt;string2&amp;gt;&lt;span style=&quot;text-align: justify;&quot;&gt;\0&amp;lt;string3&lt;/span&gt;&amp;gt;\0....&amp;lt;string&amp;gt;\0\0&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left;&quot;&gt;Symbol Table Format&lt;br /&gt;- 함수, 정적/전역 변수 그리고 다른 심볼 타입을 나타내기 위한 ELF 심볼 구조체의 집합입니다. Dynamic Symbol Table와 Main Symbol Table 두 가지로 또 다시 구분이 가능합니다.&lt;br /&gt;- Dynamic Symbol Table은 ELF object에서 여러 심볼 정보들을 런타임에 찾기위해 사용하는 Table입니다.&lt;br /&gt;- Main Symbol Table은 링킹 타임에 사용되는 정적 심볼 정보들입니다.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;이제 Section에 대해 정리해 보겠습니다. 복잡하지 않도록 최대한 단순하게 정리해보려 합니다.&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.bss section&lt;br /&gt;- 초기화 되지 않은 전역 변수가 위치하는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.data section&lt;br /&gt;- 초기화 된 전역, 정적 그리고 쓸수있는(writable) 변수들이 위치하는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.dynamic section&lt;br /&gt;- dynamic linking에 대한 정보가 위치하는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.dynsym section&lt;br /&gt;- 프로그램 실행에 필요한 심볼들과 전역 심볼들이 위치하는 섹션 (정적 심볼은 포함하지 않음)&lt;br /&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.fini section&lt;br /&gt;- 함수 __fini()를 위한 Instruction이 위치한 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.init section&lt;br /&gt;- 함수 __init()을 위한 instruction이 위치한 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.interp section&lt;br /&gt;- 프로그램 인터프리터의 경로명이 위치한 섹션&lt;br /&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.rodata section&lt;br /&gt;- 오직 읽기(read-only)만 가능한 const 값, 문자열 상수 등 constant 데이터가 위치하는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.shstrtab&lt;br /&gt;- 여러 섹션들의 섹션 이름들이 위치하고 있는 String Table&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.strtab&lt;br /&gt;- Main symbol table을 위한 심볼 이름들이 위치하고 있는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.symtab&lt;br /&gt;- 모든 정적 함수와 변수를 포함한 모든 Symbol table의 정보가 위치하는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.text&lt;br /&gt;- ELF 파일의 실행가능한 코드들이 위치하고 있는 섹션&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;.got section(Global Offset Table)&lt;br /&gt;- data 섹션에 있는 주소들의 테이블로 position-independent code를 위해 필요로 함. 좀 더 상세한 부분은 추후 다룰 예정&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;p&gt;.hash section(Symbol hash table)&lt;br /&gt;- ELF은 정확한 심볼을 찾기위해 다양한 심볼 테이블 이름들을 찾기위한 빠른 방법이 구현되어 있어야 합니다. 그 방법으로 HashTable을 사용하게 됩니다. 아래에 해당 HashTable이 어떻게 동작하는지 간략화한 그림이 있습니다. 상세한 내용은 기회가 된다면 나중에 설명들리겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:514px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F991A6E455B94C76301616C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/991A6E455B94C76301&quot; filemime=&quot;image/jpeg&quot; filename=&quot;section hash.PNG&quot; height=&quot;406&quot; width=&quot;514&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;.plt section (Procedure Linkage Table)&lt;br /&gt;- 주소공간에서 함수들을 찾는데 도움을 주는 기능들의 Instruction 리스트가 위치하는 섹션&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;.rel (relocation section)&lt;br /&gt;- 주소 공간에서 shared library들이 로드될 수 있도록 prefix된 섹션.&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;ELF Section들과 Section Header Table에 대해 간략히 알아보았습니다. 각 섹션에 대해 상세한 내용을 분석하여 설명드리고 싶지만, 한번에 너무 많은 내용을 설명드리는 건 좋지 않을 것 같아, 추후에 심화적으로 분석하는 글을 작성하도록 하겠습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;감사합니다.&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 10pt; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Tool Interface Standards – Portable Formats Specification, Version 1.1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Self-Service Linux , MarkWilding and Dan Behman&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;How To Write Shared Libraries, Ulrich Drepper&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Linking, Randy Bryant and Dave O’Hallaron&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;text-decoration-line: underline; font-size: 10pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-family: Arial; font-size: 11pt; white-space: pre-wrap;&quot;&gt;http://man7.org/linux/man-pages/man5/elf.5.html&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;a href=&quot;http://egloos.zum.com/recipes/v/5010841&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://egloos.zum.com/recipes/v/5010841&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5; text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Weak_symbol&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Debugging &amp; Testing</category>
<category>elf</category>
<category>Linux</category>
<category>section</category>
<category>Section Header Table</category>
<category>섹션</category>
<category>섹션 헤더 테이블</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/462</guid>
<comments>https://sonseungha.tistory.com/462#entry462comment</comments>
<pubDate>Fri, 07 Sep 2018 21:21:05 +0900</pubDate>
</item>
<item>
<title>[ELF] Segment와 Program Header</title>
<link>https://sonseungha.tistory.com/461</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;ELF 란 용어를 많이 들어보셨을텐데요, ELF는 Executable and Linking Format의 약어입니다. UNIX / LINUX 기반에서 사용되는 실행 및 링킹 파일 포맷입니다. 지난 글에 이어 이번 글에서는 ELF 파일&amp;nbsp;포맷에서 Program Header에 대해 알아보겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;[이전 글]&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;a href=&quot;http://sonseungha.tistory.com/460&quot; target=&quot;_blank&quot;&gt;2018/08/27 - [Linux/Debugging &amp;amp; Testing] - [ELF] Executable and Linking Format - ELF Header&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;/p&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;b style=&quot;font-size: 18.6667px;&quot;&gt;Program Header&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;line-height: 2; text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;Program Header Table은 ELF내의 Segment들에 대한 정보와 그 Segment들을 메모리에 어떻게 로드해야 하는지에 대한&amp;nbsp;정보가 포함되어 있습니다. Segment란 앞 선 글에서도 설명하였지만 다시 한번 말씀드리면&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; font-size: 12pt;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;동일한 메모리 속성(read-only, writable, ...)을 가진 하나 또는 그 이상의 섹션의 집합입니다.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;nbsp;여러 개의 Segment들이 존재할테고 각 Segment들에 대한 정보를 가지고 있는 녀석이 있을텐데요, 그 정보가 명시된 곳이 Program Header입니다. readelf로 ELF Header를 확인했을 때 Program Header에 대한 정보가 있었던 것 기억하시나요? 그 정보를 다시 한번 보시죠.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 12pt;&quot;&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; text-align: center; clear: none; float: none; line-height: 2;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 378px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99D926335B86A3FF2AC493&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D926335B86A3FF2A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;3.PNG&quot; height=&quot;378&quot; style=&quot;width: 500px; height: 378px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;Program Header의 시작위치와 각 Program Header의 사이즈와 개수가 ELF Header 정보에 나와있네요. 그럼 ELF Header 정보를 확인하여 Program Header를 분석할 수 있을 것 같습니다. Program Header에는 어떤 정보들이 있는지 먼저 구조체로 확인해보죠.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:450px;width: 450px; height: 172px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F99C404455B86B01E3B9A3F&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99C404455B86B01E3B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-08-29 23-39-12.png&quot; height=&quot;172&quot; style=&quot;width: 450px; height: 172px;&quot; width=&quot;450&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;Program Header에는 어떤 내용들이 있는지&amp;nbsp;옆에 주석을 보면 조금 파악이 됩니다. Segment 타입, 플래그, 오프셋 정보부터 가상 주소, 물리 주소 등이 있네요. 그럼 readelf로 이 정보들이 어떻게 표시되는지 한번 보시죠.&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 471px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile29.uf.tistory.com%2Fimage%2F99EBB23F5B86B08E017DD5&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99EBB23F5B86B08E01&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-08-29 23-41-07.png&quot; height=&quot;471&quot; style=&quot;width: 600px; height: 471px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;구조체에서 본 내용들이 보기 좋죠 정리되어 있습니다. Type에는 PHDR, INTERP, LOAD, DYNAMIC 등이 있고 Offset과 VirtAddr 등이 16진수로 나타나네요. 각 정보에 대해 하나씩 살펴보기전에 아래쪽을 살펴보니 Section to Segment Mapping이라고 표기된 정보들이 있습니다. 섹션들이 세그먼트 내에 위치하고 있습니다. 세그먼트와 섹션에 대한 내용은 앞 글에서 다뤘으니 살펴보시기 바랍니다. 하나만 살펴보면 GNU_EH_FRAME Segment에는 .note.ABI-tag, .note.gnu.build-id 란 섹션이 존재하네요!&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;그럼 이제 각 Segment의 각 타입에 대해 정의하고 넘어가겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li style=&quot;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;PHDR&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;Programe Header 정보 자기 자신에 대한 Segment입니다. Offset과 Siz 등을 살펴보면 ELF Header정보에 들어있던 내용과 같음을 알 수 있습니다.&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;INTERP&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;INTERP Segment는 프로그램 인터프리터의 이름만을 가지고 있는 Segment입니다.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin-left: 2em; line-height: 2;&quot;&gt;아래 /lib64/ld-linux-x86-64.so.2라고 인터프리터 이름이 문자열로 나타나는 것 보이시나요? 정말 저 메모리 위치에 저렇게 저장되어 있는지 살펴보면 아래와 같습니다.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile3.uf.tistory.com%2Fimage%2F9976D7495B86B255046331&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9976D7495B86B25504&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-08-29 23-48-39.png&quot; height=&quot;272&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;위의 정보를 보면 알 수 있듯이 INTERP의 Offset은 파일 시작으로 부터 0x238위치였습니다. 그럼 그 위치에 정보를 살펴보면 정말 문자열로 이름이 저장되어 있네요.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;LOAD&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;LOAD Segment는 로드할 수 있는 프로그램 Segment 입니다. 섹션을 다시 살펴보면 .intrp, .dynsym, .dynstr 등 다양한 섹션들이 존재하는데요. 메모리에 로드될 수 있는 섹션들이 모여있습니다. 그런데 왜 LOAD란 이름이 두개일까요? 2개의 Segment는 같은 이름을 가지고 있지만 다른 메모리 속성을 가지고 있습니다. Segment는 각각의 메모리 속성을 가진 Section들의 그룹이라고 앞 글에서 설명했던 것 기억나시나요? 자세히 Flags 정보를 보시면 RE와 RW로 속성이 다릅니다. 그 말은 읽고 실행할 수 있는 영역과 읽고 쓸수만 있는 영역이란 것을 의미합니다.&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;NOTE&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;Array 요소들은 보조적인 정보들의 위치와 크기가 저장되어 있습니다.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;DYNAMIC&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;DYNAMIC Segment는 동적 링킹에 사용되는 세그먼트입니다. 자세한 내용은 나중에 다시 다루기로 하겠습니다. 지금은 말 그대로 프로그램 실행 중에 동적으로 링크되는 녀석들, 공유라이브러리 같은 놈들에 관련된(?) 것인가 추측만 하고 지나가셔도 됩니다.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;GNU_EH_FRAME / GNU_STACK / GNU_RELRO&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;Vendor-specific한 정보들을 위한 매우 특별한 세그먼트들입니다.&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;여기까지 간단히 각 세그먼트들에 대해 알아보았는데요, 세그먼트는 다시 말씀드리지만 동일한 메모리 속성을 가진 섹션들의 집합입니다. 좀 더 자세히 이해하려면 섹션들에 대한 내용을 살펴봐야겠네요. 섹션에 관련된 내용은 다음 글에서 다룰 예정입니다.&lt;/div&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;마지막으로 하나 더 말씀드리면, Object 파일들은 Program Header 정보가 없습니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:553px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F99DA47345B86A51F0A24F2&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99DA47345B86A51F0A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;4.PNG&quot; height=&quot;373&quot; style=&quot;text-align: center;&quot; width=&quot;553&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;Object는 Section만을 가지고 있으며 Linking 과정 중 Section 정보들이 ELF파일 내 Segment들에 위치하게 되기 때문입니다. 아래 처럼 Object 파일은 ELF Header를 살펴보면 Program Header 정보들이 모두 0으로 존재하지 않음을 알 수 있습니다 :D&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2;&quot;&gt;다음 글에서 Section Header와 관련된 정보들을 살펴보겠습니다. 감사합니다.&lt;/p&gt;&lt;p style=&quot;font-family: &amp;quot;Noto Sans&amp;quot;, sans-serif; line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 10pt; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Tool Interface Standards – Portable Formats Specification, Version 1.1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Self-Service Linux , MarkWilding and Dan Behman&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;How To Write Shared Libraries, Ulrich Drepper&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Linking, Randy Bryant and Dave O’Hallaron&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;text-decoration-line: underline; font-size: 10pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-family: Arial; font-size: 11pt; white-space: pre-wrap;&quot;&gt;http://man7.org/linux/man-pages/man5/elf.5.html&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://egloos.zum.com/recipes/v/5010841&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://egloos.zum.com/recipes/v/5010841&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Weak_symbol&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Debugging &amp; Testing</category>
<category>Debugging</category>
<category>elf</category>
<category>ELF header</category>
<category>Linux</category>
<category>program header</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/461</guid>
<comments>https://sonseungha.tistory.com/461#entry461comment</comments>
<pubDate>Wed, 29 Aug 2018 22:53:23 +0900</pubDate>
</item>
<item>
<title>[ELF] ELF Header</title>
<link>https://sonseungha.tistory.com/460</link>
<description>&lt;p style=&quot;line-height: 2;&quot;&gt;ELF 란 용어를 많이 들어보셨을텐데요, ELF는 Executable and Linking Format의 약어입니다. UNIX / LINUX 기반에서 사용되는 실행 및 링킹 파일 포맷입니다. 이번 글에서는 ELF 파일&amp;nbsp;포맷에 대해 알아보겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li style=&quot;line-height: 2;&quot;&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;개념 및 사전 지식 정의&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;ELF는 하나의 ELF Header와 파일데이터로 구성되어 있습니다. 아래 그림을 보시면 파일의 가장 위에 ELF Header 정보가 들어있고, 그 아래 program header table이 있습니다. 그 이후 Segment 정보와 Section 관련 정보들이 나오네요.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;209&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border: none; border-collapse: collapse; width: 209px;&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:16px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 208px; height: 24px; border-width: 1px; border-style: solid; border-color: rgb(124, 132, 239);&quot;&gt;&lt;p style=&quot;text-align: center; line-height: 2;&quot;&gt;&amp;nbsp;ELF header&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 208px; height: 24px; border-bottom: 1px solid rgb(124, 132, 239); border-right: 1px solid rgb(124, 132, 239); border-left: 1px solid rgb(124, 132, 239);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Program header table&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 208px; height: 24px; border-bottom: 1px solid rgb(124, 132, 239); border-right: 1px solid rgb(124, 132, 239); border-left: 1px solid rgb(124, 132, 239);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Segment 1&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 208px; height: 24px; border-bottom: 1px solid rgb(124, 132, 239); border-right: 1px solid rgb(124, 132, 239); border-left: 1px solid rgb(124, 132, 239);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Segment 2&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 208px; height: 24px; border-bottom: 1px solid rgb(124, 132, 239); border-right: 1px solid rgb(124, 132, 239); border-left: 1px solid rgb(124, 132, 239);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;...&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 208px; height: 24px; border-bottom: 1px solid rgb(124, 132, 239); border-right: 1px solid rgb(124, 132, 239); border-left: 1px solid rgb(124, 132, 239);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;Section header table optional&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;ELF header는 ELF 파일의 Metadata를 가진 Header일텐데 Segment와 Section은 뭘까요? 그리고 ELF 포맷을 이해하기 위해 필요한 개념들이 무엇인지 정리하고&amp;nbsp;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Segment &lt;br /&gt;: 동일한 메모리 속성(read-only, writable, ...)을 가진 하나 또는 그 이상의 섹션의 집합&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Section &lt;br /&gt;: 특정 정보(machine instructions, symbol table, ..)를 포함하고 있는 ELF file의 작은 조각&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Symbol &lt;br /&gt;: ELF file내에 저장된 함수 또는 변수의 디스크립션입니다. 간단한 함수 또는 변수의 정보를 포함하고 있습니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Objec file&lt;br /&gt;: 컴퓨터에서 읽을 수 있는 소스파일 버전입니다. Object file은 소스파일의 전역, 정적 변수 이름같은 심볼 정보들이 아직 남아있는 파일입니다. 하지만 이 파일은 메모리에 어떻게 로드되어야 하는지 정보가 명시되어 있지 않기 때문에 직접 실행은 불가능합니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Shared Library&lt;br /&gt;: 하나 또는 그 이상의 Object 파일의 심볼들로 구성된 파일입니다. 주소 공간 어디에든 로드 되어질 수 있습니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Executables&lt;br /&gt;: Shared Library와 매우 유사하지만 메모리 내 특정 주소에 로드될 수 있는 파일입니다. 프로그램 시작을 위한 함수를 가지고 있습니다. 해당 함수에서 Executables 파일은 시작됩니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Core Files&lt;br /&gt;: ELF 의 특별한 타입의 파일입니다. 실행된 프로세스에 의해 사용된 여러 메모리 세그먼트 들을 포함한&amp;nbsp;메모리 이미지 정보를 가지고 있습니다.&amp;nbsp;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;Linking&lt;br /&gt;: object 파일들로 부터 심볼 정도들을 가져와 특정 순서에 맞게 정렬을 해주는 과정입니다. 오브젝트의 각 섹션들을 공유 라이브러리나 실행파일 내에 각 세그먼트내에 정렬해 주는 과정입니다.&amp;nbsp;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 342px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F996406335B855898106EE5&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/996406335B85589810&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-08-28 23-13-21.png&quot; height=&quot;342&quot; original=&quot;yes&quot; style=&quot;width: 400px; height: 342px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: left;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;b style=&quot;font-size: 18.6667px;&quot;&gt;ELF Header&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;text-align: left;&quot;&gt;ELF Header는 모든 ELF파일의 시작부분에 위치하고 있습니다. ELF Header는 아래와 같은 형식으로 되어 있습니다.&lt;/div&gt;&lt;div style=&quot;text-align: left; line-height: 2;&quot;&gt;지금부터 설명드리는 내용은 x86-64 기준임을 미리 말씀드립니다.&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left; line-height: 2;&quot;&gt;&lt;p style=&quot;font-size: 10pt; text-align: center; clear: none; float: none; line-height: 2;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:750px;width: 750px; height: 379px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F9989DC345B8559BF02E684&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9989DC345B8559BF02&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-08-28 23-18-22.png&quot; height=&quot;379&quot; original=&quot;yes&quot; style=&quot;width: 750px; height: 379px;&quot; width=&quot;750&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 10pt; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;보시면 struct Elf64_Ehdr 구조체에 매핑되어 질 수 있습니다. 각 변수의 이름과 사이즈는 왼쪽 표를 참고해 주세요. 내용을 보시면 ELF의 매직넘버를 포함하는 e_ident 변수를 시작으로 타입이나 아키텍쳐 정보 그리고 처음들어보시는 분들도 계실텐데 프로그램 헤더나 섹션 헤더에 관련된 정보들이 들어있습니다. 프로그램 헤더와 섹션 헤더는 뒤에서 계속 알아볼 예정입니다. 궁금증은 잠시 묻어두고 조금씩 분석해보겠습니다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 10pt; line-height: 2;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;테스트 프로그램을 빌드한 후 만들어진 ELF 파일을 hex형태로 표현해보고 구조체에 매칭해 보겠습니다. 처음 8바이트는 e_ident 값이라고 했습니다. 이 안에 매직넘버가 포함되어 있는데 오른쪽 스트링 값을 보면 ELF란 문자열이 보이네요. ELF의 매직넘버는 16진수로 0x7f 0x45 0x4c 0x46 입니다. 그럼 이 파일이 ELF인지 아닌지 판단할 수 있는 소중한 정보가 될 수 있겠네요.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:682px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile29.uf.tistory.com%2Fimage%2F99B78D3D5B855AAE02D8E5&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99B78D3D5B855AAE02&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot from 2018-08-28 23-22-26.png&quot; height=&quot;373&quot; width=&quot;682&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;그 뒤로 e_type, e_machine, e_version등의 정보가 연속되어 위치하고 있습니다. 그럼 그 뒤에 연속된 영역도 위에서 말씀드린 구조체와 매칭시켜 보시죠. 아래 보면 e_flags, e_ehsize 등에 매칭되어 집니다.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:680px;width: 680px; height: 383px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99F20E345B869CB306747B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99F20E345B869CB306&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.PNG&quot; height=&quot;383&quot; style=&quot;width: 680px; height: 383px;&quot; width=&quot;680&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;위의 16진수 정보로는 분석하기 쉽지 않습니다. 이 때 쉽게 ELF를 분석할 수 있는 툴이 readelf 입니다. 이 툴을 이용해서 어떻게 분석할 수 있는지는 readelf 를 설명하는 글이 아니라 자세하게 다루지는 않겠습니다. 그럼 readelf로 ELF Header를 출력한 결과를 보시죠.&lt;/p&gt;&lt;p style=&quot;line-height: 2; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F994A62415B869D7A10B94B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/994A62415B869D7A10&quot; filemime=&quot;image/jpeg&quot; filename=&quot;2.PNG&quot; height=&quot;369&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 2;&quot;&gt;readelf -h 옵션은 ELF Header를 출력하는 옵션입니다. 그럼 위에서 나온 정보와 매칭해서 살펴보시죠. Magic Number는 ELF 파일을 설명하고 있습니다. 그리고 ELF64이며 little endian이네요. Machine 정보는 x86-64네요. 이 정도로도 이 ELF 파일의 내용을 살펴볼 수 있습니다. 그리고 추가로 살펴볼 내용이 있는데요. 하늘색, 노란색 테두리로 표시된 Program 과 Section Header에 관련된 정보들입니다. 이 내용들을 자세히 살펴봐 주세요. 각 Header들이 어디에 위치하고 있는지 헤더의 크기는 얼마인지가 나와있습니다. Program Header와 Section Header는 다음 글에서 자세히 살펴보겠습니다.&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: right;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; outline: none; line-height: 2; text-align: justify;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;[참고자료&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 10pt; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Tool Interface Standards – Portable Formats Specification, Version 1.1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Self-Service Linux , MarkWilding and Dan Behman&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;How To Write Shared Libraries, Ulrich Drepper&lt;/span&gt;&lt;span style=&quot;background-color: transparent; font-size: 11pt; white-space: pre-wrap;&quot;&gt;Linking, Randy Bryant and Dave O’Hallaron&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;text-decoration-line: underline; font-size: 10pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Executable_and_Linkable_Format&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-family: Arial; font-size: 11pt; white-space: pre-wrap;&quot;&gt;http://man7.org/linux/man-pages/man5/elf.5.html&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://egloos.zum.com/recipes/v/5010841&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://egloos.zum.com/recipes/v/5010841&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(5, 99, 193); background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;font-variant-numeric: normal; font-variant-east-asian: normal; list-style-type: disc; font-size: 20pt; font-family: Arial; background-color: transparent; vertical-align: baseline; white-space: pre; margin-left: -8pt; line-height: 1.5;&quot;&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;margin-top: 0pt; margin-bottom: 0pt; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://en.wikipedia.org/wiki/Weak_symbol&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-2972201602312138&quot;
     data-ad-slot=&quot;6065133484&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Debugging &amp; Testing</category>
<category>elf</category>
<category>ELF header</category>
<category>Excutable and Linking Format</category>
<category>readelf</category>
<author>Developer&#039;s Delight Linuxias</author>
<guid>https://sonseungha.tistory.com/460</guid>
<comments>https://sonseungha.tistory.com/460#entry460comment</comments>
<pubDate>Mon, 27 Aug 2018 15:34:13 +0900</pubDate>
</item>
</channel>
</rss>