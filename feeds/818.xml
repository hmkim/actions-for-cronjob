<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Nalee와 함께 떠나는 IT이야기</title>
<link>https://naleejang.tistory.com/</link>
<description>내가 알고 있는 것들, 살아가면서 느낀것들을 표현해 보고 싶다.</description>
<language>ko</language>
<pubDate>Mon, 13 May 2019 12:38:05 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>naleejang</managingEditor>
<image>
<title>Nalee와 함께 떠나는 IT이야기</title>
<url>https://tistory3.daumcdn.net/tistory/906815/attach/f649273b06f44fef93a62bf05f5b0876</url>
<link>https://naleejang.tistory.com</link>
<description>내가 알고 있는 것들, 살아가면서 느낀것들을 표현해 보고 싶다.</description>
</image>
<item>
<title>Octavia Amphora Instance</title>
<link>https://naleejang.tistory.com/213</link>
<description>&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;오늘은 지난 포스팅에 이어 이번에는 Amphora 인스턴스를 한번 파헤쳐볼까 합니다. 지난 포스팅에서 보았던 Amphora 인스턴스에 대한 아키텍처를 혹시 기억하시나요? 지난 포스팅에서 저는 Octavia가 뭔지? 그리고, Octavia를 이용하여 로드밸런서 생성까지 해보았습니다. 그때 테스트로 미리 생성해 둔 10.10.10.0/24 대역의 인스턴스들을 기억하시나요? 해당 설정을 적용하여 다시 그려본 아키텍처가 아래 그림입니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/NTkN8/btqu9lnLIYz/sP3RvhUHpSI5jcQf1UwGNK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/NTkN8/btqu9lnLIYz/sP3RvhUHpSI5jcQf1UwGNK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FNTkN8%2Fbtqu9lnLIYz%2FsP3RvhUHpSI5jcQf1UwGNK%2Fimg.png' &gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;b&gt;## How to connect octavia amphora instance&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;시스템을 운영하다보면 가끔 때로는 인스턴스에 직접 들어가 시스템 상태를 체크해야 할 경우가 종종 있습니다. 그때를 대비해서 시스템에 어떻게 접근을 하는지 알고 있다면 참 많은 도움이 되겠죠!!&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Amphora 인스턴스에 접속을 하기 위해서는 우선 인스턴스에 접속하기 위한 고정 IP주소와 액세스를 하기 위한 ssh key가 필요합니다. IP주소는 대쉬보드의 인스턴스 목록에서 172.24.0.0 대역의 IP를 확인 할 수 있습니다. 앞에서 만든 인스턴스의 고정 IP 주소는 172.24.0.23이였습니다. 그리고, 필요한것은 ssh key입니다. 레드햇 오픈스택은 TripleO라는 배포 노드를 통해 오픈스택을 설치하는데 이때 설치과정에서 Octavia가 사용할 network, flavor, amphora image, security group, ssh key를 만들어 줍니다. 이때 사용되는 ssh key는 배포 노드의 stack 계정에 생성되어진 ssh public key와 private key를 사용합니다. 그러니 ssh key는 배포 노드의 stack 게정에 생성된 ssh private key를 컨트롤러 노드에 복사하면 되겠죠!!&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;1. 그럼, 복사한 ssh key를 이용하여 아래와 같이 amphora 인스턴스에 접속할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[heat-admin@con1 ~]$ &lt;b&gt;ssh -i octavia_key cloud-user@172.24.0.23&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;The authenticity of host '172.24.0.23 (&amp;lt;no hostip for proxy command&amp;gt;)' can't be established.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;ECDSA key fingerprint is SHA256:+R8/b/0Kc9LXoezkoCWDV7niPPjy/RLsNeJk5dPeBsg.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;ECDSA key fingerprint is MD5:97:f5:87:b6:6c:aa:1c:82:7f:72:0e:2f:4a:5f:21:fa.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Are you sure you want to continue connecting (yes/no)? &lt;b&gt;yes&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;Warning: Permanently added '172.24.0.23' (ECDSA) to the list of known hosts.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[cloud-user@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]$&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;2. Amphora 인스턴스에 접속을 했습니다. 우선, 먼저 IP를 확인해 보겠습니다. 네트워크 디바이스는 eth0 하나이고, 고정IP 주소를 통해 들어온 172.24.0.23이 설정되어 있는것을 확인할 수 있습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[cloud-user@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]$ &lt;b&gt;ip a&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet 127.0.0.1/8 scope host lo&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet6 ::1/128 scope host&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;2: &lt;span style=&quot;color: #f41a18;&quot;&gt;eth0&lt;/span&gt;: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;link/ether fa:16:3e:01:c3:59 brd ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet &lt;span style=&quot;color: #f41a18;&quot;&gt;172.24.0.23&lt;/span&gt;/16 brd 172.24.255.255 scope global noprefixroute dynamic eth0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft 65661sec preferred_lft 65661sec&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet6 fe80::f816:3eff:fe01:c359/64 scope link&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[cloud-user@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]$&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;3. 이번에는 프로세스 목록을 확인해 보겠습니다. 프로세스 목록에서 우리는 amphora-agent가 실행이 되고 있고, haproxy 가 실행되고 있는것을 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[cloud-user@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]$ &lt;b&gt;ps -ef&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;UID&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;PID&amp;nbsp;&amp;nbsp;PPID&amp;nbsp;&amp;nbsp;C STIME TTY&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;TIME CMD&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3180&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;0 Apr22 tty1&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 /sbin/agetty --noclear tty1 linux&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3181&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;0 Apr22 ttyS0&amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 /sbin/agetty --keep-baud 115200 38400 9600 ttyS0 vt220&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #f41a18;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3184&amp;nbsp;&amp;nbsp;2844&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:29 /usr/bin/python2 /usr/bin/amphora-agent --config-file /etc/octavia/amphora-agent.conf&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3188&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 rhnsd&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3191&amp;nbsp;&amp;nbsp;2844&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 gunicorn: worker [gunicorn]&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3234&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 /usr/sbin/sshd -D&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #f41a18;&quot;&gt;root&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;3667&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 /usr/sbin/haproxy-systemd-wrapper -f /var/lib/octavia/aabe2b08-ebcb-4243-b411-33c24ecca342/haproxy.cfg -f /var/lib/octavia/haproxy-default-user-group.conf -p /var/lib/oct&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;nobody&amp;nbsp; &amp;nbsp;&amp;nbsp;3795&amp;nbsp;&amp;nbsp;3667&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 /usr/sbin/haproxy -f /var/lib/octavia/aabe2b08-ebcb-4243-b411-33c24ecca342/haproxy.cfg -f /var/lib/octavia/haproxy-default-user-group.conf -p /var/lib/octavia/aabe2b08-eb&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;nobody&amp;nbsp; &amp;nbsp;&amp;nbsp;3796&amp;nbsp;&amp;nbsp;3795&amp;nbsp;&amp;nbsp;0 Apr22 ?&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:16 /usr/sbin/haproxy -f /var/lib/octavia/aabe2b08-ebcb-4243-b411-33c24ecca342/haproxy.cfg -f /var/lib/octavia/haproxy-default-user-group.conf -p /var/lib/octavia/aabe2b08-eb&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;cloud-u+ 16522 16503&amp;nbsp;&amp;nbsp;0 01:17 pts/0&amp;nbsp; &amp;nbsp;&amp;nbsp;00:00:00 ps -ef&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[cloud-user@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]$&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;4. 그럼, VIP는 어디에 설정이 되어 있는걸까요? 우선, sudo 명령어를 이용하여 root 계정으로 전환한 후 ip netns 명령어를 이용하여 가상 네트워크를 확인해 보겠습니다. 가상 네트워크 목록에는 amphora-haproxy라는 가상 네트워크가 생성되어 있는걸을 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[cloud-user@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]$&lt;b&gt; sudo -i&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]# &lt;b&gt;ip netns show&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;color: #f41a18;&quot;&gt;amphora-haproxy&lt;/span&gt; (id: 0)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]#&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;5. 가상 네트워크의 환경설정 정보를 확인해보면 아래와 같이 eth1이라는 가상 네트워크 디바이스와 인스턴스 목록에서 확인되었던 IP, 그리고 로드밸런서의 VIP를 함께 확인할 수 있습니다. VIP는 바로 여기 숨어 있었습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]# &lt;b&gt;ip netns exec amphora-haproxy ip a&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;1: lo: &amp;lt;LOOPBACK&amp;gt; mtu 65536 qdisc noop state DOWN group default qlen 1000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;3: &lt;span style=&quot;color: #f41a18;&quot;&gt;eth1&lt;/span&gt;: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;link/ether fa:16:3e:6d:d2:69 brd ff:ff:ff:ff:ff:ff&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet &lt;span style=&quot;color: #f41a18;&quot;&gt;10.10.10.5/24&lt;/span&gt; brd 10.10.10.255 scope global eth1&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet &lt;span style=&quot;color: #f41a18;&quot;&gt;10.10.10.13/24&lt;/span&gt; brd 10.10.10.255 scope global secondary eth1:0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;inet6 fe80::f816:3eff:fe6d:d269/64 scope link&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;valid_lft forever preferred_lft forever&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]#&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;6. 그럼, 이번에는 haproxy 모듈의 환경설정 파일을 살펴보도록 하겠습니다. 앞에서 이미 프로세스 목록을 확인했습니다. 그리고, 프로세스 목록을 통해 haporxy 환경설정 파일이 어느 디렉토리에 위치하는지를 확인했습니다. 확인된 디렉토리에 들어가 ls 명령어를 이용하여 파일 목록을 확인해 보면 아래와 같이 UUID와 같은 디렉토리명과 conf 파일 하나를 확인할 수 있습니다. conf 파일을 내용을 확인해 보니 특별한 내용은 없는듯 합니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf ~]# &lt;b&gt;cd /var/lib/octavia/&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf octavia]# &lt;b&gt;ls&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;3c22219d-7c34-48f3-acf6-6e15f76ec9a1&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: #f41a18;&quot;&gt;haproxy-default-user-group.conf&lt;/span&gt;&amp;nbsp;&amp;nbsp;plugged_interfaces&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;3c22219d-7c34-48f3-acf6-6e15f76ec9a1.sock&amp;nbsp;&amp;nbsp;ping-wrapper.sh&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;plugged_interfaces.sorted&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf octavia]# &lt;b&gt;cat haproxy-default-user-group.conf&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;global&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;group haproxy&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf octavia]#&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;7. UUID와 같이 보이는 디렉토리로 들어가서 파일 목록을 확인해 보면 haproxy.cfg라는 환경설정 파일을 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf octavia]# &lt;b&gt;ll&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;total 24&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;drwxr-xr-x. 2 root root 4096 Apr 22 21:28 &lt;span style=&quot;color: #f41a18;&quot;&gt;3c22219d-7c34-48f3-acf6-6e15f76ec9a1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;srw-rw-rw-. 1 root root&amp;nbsp; &amp;nbsp;&amp;nbsp;0 Apr 22 21:28 3c22219d-7c34-48f3-acf6-6e15f76ec9a1.sock&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;-rw-r--r--. 1 root root&amp;nbsp;&amp;nbsp;&amp;nbsp;25 Jan 10 10:32 haproxy-default-user-group.conf&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;-rwxr-xr-x. 1 root root&amp;nbsp;&amp;nbsp;209 Jan 10 10:32 ping-wrapper.sh&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;-rw-r--r--. 1 root root&amp;nbsp;&amp;nbsp;&amp;nbsp;23 Apr 22 21:26 plugged_interfaces&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;-rw-r--r--. 1 root root&amp;nbsp;&amp;nbsp;&amp;nbsp;23 Apr 22 21:26 plugged_interfaces.sorted&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf octavia]# &lt;b&gt;cd 3c22219d-7c34-48f3-acf6-6e15f76ec9a1&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf 3c22219d-7c34-48f3-acf6-6e15f76ec9a1]# &lt;b&gt;ls&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;3c22219d-7c34-48f3-acf6-6e15f76ec9a1.pid&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: #f41a18;&quot;&gt;haproxy.cfg&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf 3c22219d-7c34-48f3-acf6-6e15f76ec9a1]#&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;8. haproxy.cfg 파일 내용을 확인해 보니 로드밸런서를 생성할때 지정해 주었던 인스턴스들의 IP가 보이고, 로드밸런서 VIP도 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf 3c22219d-7c34-48f3-acf6-6e15f76ec9a1]#&amp;nbsp;&lt;b&gt;cat haproxy.cfg&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;# Configuration for cmp-was-lb&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;global&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;daemon&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;user nobody&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;log /dev/log local0&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;log /dev/log local1 notice&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;stats socket /var/lib/octavia/3c22219d-7c34-48f3-acf6-6e15f76ec9a1.sock mode 0666 level user&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;maxconn 1000000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;defaults&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;log global&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;retries 3&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;option redispatch&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;timeout connect 5000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;timeout client 50000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;timeout server 50000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;frontend 3c22219d-7c34-48f3-acf6-6e15f76ec9a1&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;option tcplog&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;maxconn 1000000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;bind &lt;span style=&quot;color: #f41a18;&quot;&gt;10.10.10.13:80&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;mode tcp&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;default_backend 42e1058e-a298-42b3-83ce-1123c2d94547&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;backend 42e1058e-a298-42b3-83ce-1123c2d94547&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;mode tcp&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;balance roundrobin&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;stick-table type ip size 10k&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;stick on src&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;timeout check 5s&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;fullconn 1000000&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;server 8d712f3b-1ee1-47ef-8c0a-4779fd044365 &lt;span style=&quot;color: #f41a18;&quot;&gt;10.10.10.8:80&lt;/span&gt; weight 1 check inter 5s fall 10 rise 10&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;server a523158c-cddb-4528-b5bd-660971ff08a1 &lt;span style=&quot;color: #f41a18;&quot;&gt;10.10.10.9:80&lt;/span&gt; weight 1 check inter 5s fall 10 rise 10&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[root@amphora-93b939b0-c1ff-48a0-a2f0-31378aaf5abf 3c22219d-7c34-48f3-acf6-6e15f76ec9a1]# exit&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;[heat-admin@con1 ~]$&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;이제 아래 그림이 이해가 가시나요? 왜 이런 그림이 나왔는지, 어떻게 동작하는지도 조금은 이해를 하셨으리라 생각이 듭니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/NTkN8/btqu9lnLIYz/sP3RvhUHpSI5jcQf1UwGNK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/NTkN8/btqu9lnLIYz/sP3RvhUHpSI5jcQf1UwGNK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FNTkN8%2Fbtqu9lnLIYz%2FsP3RvhUHpSI5jcQf1UwGNK%2Fimg.png' &gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000;&quot;&gt;이렇게해서, 2019년도 두번째 포스팅을 마무리해 봅니다. 모두들!!! 즐거운 주말되세요~~~&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/213&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>OpenStack</category>
<category>Amphora</category>
<category>loadbalancer</category>
<category>Octavia</category>
<category>openstack</category>
<category>Redhat</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/213</guid>
<comments>https://naleejang.tistory.com/213#entry213comment</comments>
<pubDate>Fri, 10 May 2019 17:59:06 +0900</pubDate>
</item>
<item>
<title>Load balancer as a service Octavia</title>
<link>https://naleejang.tistory.com/212</link>
<description>&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;안녕하세요!!&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;그동안 어떻게 지내셨나요? 저는 그동안 여러 프로젝트를 하느라 정말 바쁜 나날을 보내고 있었습니다. 그래서, 블로그에 글을 올릴 시간조차 없었네요! 오늘도 사실은 영어로 포스팅을 하려고 하다가 시간도 너무 오래 걸리고, 영어로 바로 쓰려니 무슨말을 어떻게 써야할지 생각조차 나질 않더라구요! 그래서, 그냥 2019년에 처음으로 쓰는 블로그 글이니까 그냥 한글로 오랜만에 써보기로 했어요. 그리고나서, 다시 영어로 바꿔 쓰면 되니까요!!&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;오늘은 Octavia에 대해서 한번 써보려고 해요. 오픈스택이 뭘하는건지는 다들 아실테고, 오픈스택이 어떤 서비스로 이루어져 있는지도 다들 아실꺼라 생각이 듭니다. 아래 그림이 레드햇에서 제공하는 오픈스택 아키텍처입니다. 요즘 오픈스택에는 너무나도 많은 서비스들이 있기 때문에, 그 중에서도 가장 많이 사용하는 서비스들을 아래와 같이 레드햇에서 제공을 하고 있습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/ct3VNU/btquXjv1LvA/jSDLbeACtylIqeack9jW21/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/ct3VNU/btquXjv1LvA/jSDLbeACtylIqeack9jW21/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fct3VNU%2FbtquXjv1LvA%2FjSDLbeACtylIqeack9jW21%2Fimg.png' width=&quot;881px;&quot; height=&quot;327px;&quot; data-filename=&quot;blob&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;그럼, 오늘 이야기할 Octavia가 뭐냐구요? 뭐냐하면, 바로 Load Balancer 서비스입니다. 로드밸런서가 뭐냐구요? 로드밸런서는 한마디로 말해서 많은 사용자가 웹사이트를 사용할때 웹사이트의 부하를 분산해주는 부하 분산 처리기라고 할 수 있습니다. 종류도 L3(IP기반), L4(IP+Port 기반), L7(사용자 어플리케이션 기반) 으로 여러가지입니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;아래 그림은 오픈스택의 Octavia라는 로드밸런서의 아키텍처입니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;쉽게 이야기하면 사용자는 웹사이트를 접속하기 위해 Amphora라는 인스턴스에서 실행되는 https 또는 http 리스너를 통해 웹사이트에 접속을 합니다. 이때 접속할 웹사이트들의 집합을 Pool이라고 하고 웹사이트들을 Pool의 Member라고 합니다. 그리고, Member들이 잘 살아있는지, 정상적으로 동작을 하는지를 체크하는 모니터링 도구를 Pool Health Monitor라고 합니다.&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cMaE9v/btquVggdYlp/vn8YqLduxnQR14jxalR3hK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cMaE9v/btquVggdYlp/vn8YqLduxnQR14jxalR3hK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcMaE9v%2FbtquVggdYlp%2Fvn8YqLduxnQR14jxalR3hK%2Fimg.png' width=&quot;895px;&quot; height=&quot;227px;&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;이렇게 Octavia에서 제공하는 로드밸런서는 아래와 같은 서비스들로 구성되어 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- 로드밸런서&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Amphora 인스턴스&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- 리스너(Listener)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- 풀(Pool)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- 멤버(Member)&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- 헬스체크 모니터(Health-check Monitor)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/d8GlGz/btquWladQtl/1WkYy3LRLykTzzBWIgy9N0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/d8GlGz/btquWladQtl/1WkYy3LRLykTzzBWIgy9N0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fd8GlGz%2FbtquWladQtl%2F1WkYy3LRLykTzzBWIgy9N0%2Fimg.png' &gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;여기서 가장 중요한 역할을 하는건 바로 amphora 라고 불리는 인스턴스입니다. amphora 인스턴스는 Red Hat Enterprise Linux 7.6 기반에 Haproxy 데몬이 설치되어 있습니다. 그리고, Octavia-agent가 Octavia-server로부터 명령을 받아 Listener를 생성하고 Haproxy에 환경설정을 하고 VIP를 Virtual Network로 생성을 하는 역할을 합니다. 그러면, 클라이언트는 Octavia-agent에 의해 생성된 VIP를 통해 Haproxy가 연결해주는 VM으로 접근을 하게 되는 것입니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/5dSpe/btquXKzU0Kw/0NOyxWrI8DPwKLsvRBP0j1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/5dSpe/btquXKzU0Kw/0NOyxWrI8DPwKLsvRBP0j1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2F5dSpe%2FbtquXKzU0Kw%2F0NOyxWrI8DPwKLsvRBP0j1%2Fimg.png' &gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;&lt;b&gt;그럼, 이제 데쉬보드를 통해 로드밸런서를 한번 만들어 볼까요?&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;레드햇 오픈스택 13 버전의 데쉬보드에서는 Project &amp;gt; Network &amp;gt; Load Balancers 메뉴를 통해 로드밸런서를 만들수 있습니다. 아래와 같이 메뉴를 찾아 들어가면 로드밸런서 목록을 확인할 수 있습니다. 그러나 생성된 로드밸런서가 없으니 아무것도 없겠죠!&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/qNOPo/btquWlgYytz/QuUx5npYwVo0TJS45uHSKk/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/qNOPo/btquWlgYytz/QuUx5npYwVo0TJS45uHSKk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FqNOPo%2FbtquWlgYytz%2FQuUx5npYwVo0TJS45uHSKk%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;상단의 [+Create Load Balancer] 버튼을 클릭하면 아래와 같이 Load Balancer 화면이 뜹니다. 그러면, 아래와 같이 Name을 입력합니다. 이때 고정IP를 사용하고 싶다면 IP address에 사용하고자 하는 IP를 입력합니다. 그리고, 해당 IP가 포함된 서브넷을 선택합니다. 입력하지 않는다면 DHCP에 의한 IP가 할당됩니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Name : 로드밸런서 이름&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Description : 로드밸런서 설명&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- IP address : 로드밸런서로 사용할 VIP 주소&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Subnet: VIP가 포함된 네트워크 서브넷&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bMP1kA/btquXi4VR7G/b8d67exkxkX76kDNqZkkXK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bMP1kA/btquXi4VR7G/b8d67exkxkX76kDNqZkkXK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbMP1kA%2FbtquXi4VR7G%2Fb8d67exkxkX76kDNqZkkXK%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;이번에는 리스너를 만들어보겠습니다. 아래와 같이 리스너 Name, Protocol, Port를 입력합니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Name: 리스너 이름&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Description: 리스너 설명&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Protocol: 프로토콜로 HTTP, TCP, UDP를 선택할 수 있음.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Port: 리스닝을 할 포트&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Connection Limit: 접속 제한, -1은 제한을 하지 않겠다는 의미임&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bHdzDU/btqu191sktY/MNMxDYKrecmkgzYn5o0TTK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bHdzDU/btqu191sktY/MNMxDYKrecmkgzYn5o0TTK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbHdzDU%2Fbtqu191sktY%2FMNMxDYKrecmkgzYn5o0TTK%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;리스너 정보 입력이 끝나면 풀에 대한 정보를 입력합니다.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Name: 풀 이름&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Description: 풀 설명&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Session Persistence: 세션 지속 방법&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;- Algorithm: 로드밸런서 방법&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/qz9Og/btquXJOxBYk/1iPKjBthksKCECgRAxCTwK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/qz9Og/btquXJOxBYk/1iPKjBthksKCECgRAxCTwK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fqz9Og%2FbtquXJOxBYk%2F1iPKjBthksKCECgRAxCTwK%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;풀에 대한 정보 입력후 이번에는 멤버를 선택합니다. 앞에서 이미 서브넷을 선택했습니다. 따라서 해당 서브넷에 이미 생성된 인스턴스 목록을 Available Instances 에서 확인할 수 있습니다. 그럼, 로드밸런싱을 할 인스턴스를 2개 이상 선택합니다. 여기서는 앞에서 HTTP를 선택했기 때문에 자동으로 80 port가 설정되지만, 만일 TCP나 UDP를 선택했다면 해당 Port를 입력해야 합니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cf18pw/btqu3slIWtR/iCDMEvecUps1V67jD3TfMK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cf18pw/btqu3slIWtR/iCDMEvecUps1V67jD3TfMK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fcf18pw%2Fbtqu3slIWtR%2FiCDMEvecUps1V67jD3TfMK%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;마지막으로 모니터링에 대한 정보를 입력합니다. 여기서는 모니터링 타입을 Ping으로 선택했습니다. 그리고, 하단의 [Create Load Balancer] 버튼을 클릭합니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/MfvXB/btquXjissZ7/CUWl9YTiASKS2UuMYKFMu1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/MfvXB/btquXjissZ7/CUWl9YTiASKS2UuMYKFMu1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FMfvXB%2FbtquXjissZ7%2FCUWl9YTiASKS2UuMYKFMu1%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;그러면 로드밸런서 목록에서 아래와 같이 로드밸런서가 생성되고 있는것을 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bX6wS0/btquWkPWMrm/OXwMUDojO5M9fqQFcIgwo0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bX6wS0/btquWkPWMrm/OXwMUDojO5M9fqQFcIgwo0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbX6wS0%2FbtquWkPWMrm%2FOXwMUDojO5M9fqQFcIgwo0%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;로드밸런서 생성이 완료되면 아래와같이 Provisioning Status가 Pending Create 에서 Active로 변경됩니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/qow0S/btquWj4yoPi/6DOQIFgMRFfqWQzvzN2Mu1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/qow0S/btquWj4yoPi/6DOQIFgMRFfqWQzvzN2Mu1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fqow0S%2FbtquWj4yoPi%2F6DOQIFgMRFfqWQzvzN2Mu1%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;생성이 완료된 로드밸런서에 외부에서 접속이 가능할 수 있도록 Floating IP를 설정해 보도록 하겠습니다. Floating IP를 할당할 로드밸런서 우측 버튼을 클릭하여 [Associate Floating IP] 버튼을 클릭하고 아래와 같이 External IP나 서브넷을 선택하고 하단의 [Associate] 버튼을 클릭합니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/QOkV6/btquVzmemFo/5aPvTwno2qsnUzMbZ58Y7k/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/QOkV6/btquVzmemFo/5aPvTwno2qsnUzMbZ58Y7k/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FQOkV6%2FbtquVzmemFo%2F5aPvTwno2qsnUzMbZ58Y7k%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;할당된 IP는 로드밸런서 상세정보에서 아래와 같이 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cOX8Ob/btquWkvCeuW/byrjr6m5H7neoNE3xKyeQ1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cOX8Ob/btquWkvCeuW/byrjr6m5H7neoNE3xKyeQ1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcOX8Ob%2FbtquWkvCeuW%2Fbyrjr6m5H7neoNE3xKyeQ1%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;상세정보에서 Listeners 탭을 클릭하면 아래와 같이 리스너 목록을 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cOwoow/btquWMMfAUK/mi7W1ghVx0Qcfgw960VfTk/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cOwoow/btquWMMfAUK/mi7W1ghVx0Qcfgw960VfTk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcOwoow%2FbtquWMMfAUK%2Fmi7W1ghVx0Qcfgw960VfTk%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;리스너 목록에서 리스너를 클릭하면 아래와 같이 리스너 정보와 풀 목록을 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/zaVaJ/btquXjbINdv/Si1CzycKha0xbplAGXPkf0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/zaVaJ/btquXjbINdv/Si1CzycKha0xbplAGXPkf0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FzaVaJ%2FbtquXjbINdv%2FSi1CzycKha0xbplAGXPkf0%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;풀 목록에서 풀을 클릭하면 해당 풀의 상세정보와 함께 Health Monitors와 Members 목록을 확인 할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bnQZv6/btquXvwcWKk/sxl2t9kUxErSuj0VGmdOgK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bnQZv6/btquXvwcWKk/sxl2t9kUxErSuj0VGmdOgK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbnQZv6%2FbtquXvwcWKk%2Fsxl2t9kUxErSuj0VGmdOgK%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bSNafu/btquT14QChu/Z4rjmv2NixZdE0o777htk0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bSNafu/btquT14QChu/Z4rjmv2NixZdE0o777htk0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbSNafu%2FbtquT14QChu%2FZ4rjmv2NixZdE0o777htk0%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;생성된 로드밸런서용 amphora 인스턴스는 관리자 계정으로 들어가서 Admin &amp;gt; Compute &amp;gt; Instances 메뉴에서 아래와 같이 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignLeft'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/5yKSk/btquVhMXaHu/coePw4YAHXOu5e4He9eLc1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/5yKSk/btquVhMXaHu/coePw4YAHXOu5e4He9eLc1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2F5yKSk%2FbtquVhMXaHu%2FcoePw4YAHXOu5e4He9eLc1%2Fimg.png' width=&quot;660&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;이제 로드밸런싱이 제대로 되는지 테스트를 해보도록 하겠습니다. 컨트롤러 노드에서 ip netns를 명령어를 이용하며 가상 네트워크 및 라우터 정보를 확인할 수 있습니다. 테넌트 네트워크가 포함된 라우터 정보를 ip netns exec 명령어를 이용하여 해당 테넌트의 VIP에 curl를 실행하면 아래와 같이 로드밸런싱이 되는 것을 확인할 수 있습니다. 또한 연결해 준 Floating IP로 curl를 실행하면 역시 로드밸런싱이 되는것을 확인 할 수 있습니다.&lt;/span&gt;&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%; height: 74px;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 100%;&quot;&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;[root@overcloud-controller-0 ~]#&amp;nbsp;&lt;b&gt;ip netns exec qrouter-355b554a-a5a2-4ff5-878f-1fb3f0de6509 curl http://10.10.10.13&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;Welcome to 10.10.10.9&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;[root@overcloud-controller-0 ~]#&amp;nbsp;&lt;b&gt;ip netns exec qrouter-355b554a-a5a2-4ff5-878f-1fb3f0de6509 curl http://10.10.10.13&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;Welcome to 10.10.10.8&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;[root@overcloud-controller-0 ~]#&amp;nbsp;&lt;b&gt;curl http://192.168.122.56&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;Welcome to 10.10.10.9&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;[root@overcloud-controller-0 ~]#&amp;nbsp;&lt;b&gt;curl http://192.168.122.56&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;Welcome to 10.10.10.8&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; font-family: 'Nanum Gothic';&quot;&gt;[root@overcloud-controller-0 ~]#&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;font-size: 1.12em;&quot;&gt;&lt;span style=&quot;color: #000000; background-color: #ffffff; font-family: 'Nanum Gothic';&quot;&gt;이렇게 해서 오픈스택의 로드밸런서 서비스인 Octavia에 대해서 알아보았습니다. 다음에는 Octavia 인스턴스에 접속을 해서 Octavia가 어떻게 구성이 되었는지 확인해 보도록 하겠습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/212&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>OpenStack</category>
<category>load balancer</category>
<category>Octavia</category>
<category>openstack</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/212</guid>
<comments>https://naleejang.tistory.com/212#entry212comment</comments>
<pubDate>Mon, 06 May 2019 20:19:49 +0900</pubDate>
</item>
<item>
<title>Looking back on 2018~!!</title>
<link>https://naleejang.tistory.com/211</link>
<description>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Hello my friends that visit my blog.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;How was your Christmas holiday? In my case, I enjoyed that day with my daughter and husband. We had delicious food and watched movie &quot;Aqua Man&quot; in 4D theater. And we took some picture with Christmas tree. This Christmas was really wonderful day.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Today, I thought that I want to look back my life of this year and&amp;nbsp;to post about this year's my story in English for my foreign friends. Because I want what my English writing skill upgrade.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;In this year, I was a lot of work. Dream that I wanted in this year was accomplished&amp;nbsp;great.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;I wanted to post&amp;nbsp;my story about work and technical&amp;nbsp;in English at this&amp;nbsp;blog. so I started to write episode about my Ansible training. First my posting was not good. I didn't knew how to express in English well. So&amp;nbsp;my English sentence was not good. However, I was my best. I think this express&amp;nbsp;still is not good. But If I try and try to express&amp;nbsp;in English, I believe my English skill will improved.&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Below articles are my English postings.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;My First Ansible Project Episode I (&lt;/span&gt;&lt;a href=&quot;http://naleejang.tistory.com/205&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;http://naleejang.tistory.com/205&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;My First Ansible Project Episode II (&lt;/span&gt;&lt;a href=&quot;http://naleejang.tistory.com/206&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;http://naleejang.tistory.com/206&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;OpenStack Instance auto provisioning with Ansible (&lt;/span&gt;&lt;a href=&quot;http://naleejang.tistory.com/207&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;http://naleejang.tistory.com/207&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;AWS EC2 with Ansible Episode (&lt;/span&gt;&lt;a href=&quot;http://naleejang.tistory.com/208&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;http://naleejang.tistory.com/208&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995F0F465C2630472A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스냅샷4.png&quot; height=&quot;363&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995D6F465C2630461B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스냅샷3.png&quot; height=&quot;543&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;After writing my Ansible training episodes, I had&amp;nbsp;a opportunity about presenting my ansible story with openstack at Open Infra Days Korea 2018 event.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;For I prepare presentation slides, I made test environment in my notebook computer. I installed KVM hypervisor in my rhel notebook. And, I created vm for installing Ansible tower. After installing Ansible tower, I developed playbooks for installing gitlab. I uploaded my playbook sources to gitlab that installed by ansible tower. So I completed Ansible environment for test.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;And then I made small Openstack environment on KVM. It was small controller node 1ea, small compute node 1ea.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;When many people built Openstack, they did Openstack function test a lot. It is iterative work. So I developed playbook for iterative work and I executed job templates a lot for presentation demo.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;And I made presentation slides. My presentation of Open Infra Days Korea 2018 event was so nice. Many people attended to my sessions. Of course, the language was Korean. But I wanted to share my presentation episode to my friends. So I changed my presentation's language from Korean to English. And I posted it to my blog. Below is the posting.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/999E45465C26304A28&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스냅샷9.png&quot; height=&quot;336&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;My First Ansible Presentation Story&amp;nbsp;(&lt;/span&gt;&lt;a href=&quot;http://naleejang.tistory.com/209&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;http://naleejang.tistory.com/209&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;As soon as finish the event, I went to Gwangju for working Openstack NFV project. And I worked hard&amp;nbsp;for 5 months. I really learned a lot of things through the project.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:678px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99C384465C2630492E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스냅샷7.png&quot; height=&quot;482&quot; style=&quot;text-align: center;&quot; width=&quot;678&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Um... at the September, I attended at Red Hat Tech Exchange 2018 APAC as a speaker. While I prepare the presentation, I had to work a lot. Also I had to made presentation slide and I had to&amp;nbsp;practice presentation&amp;nbsp;in English. It was presentation review day. At the day, I was forgetting this. Because I was&amp;nbsp;training about openstack to my client. APEC&amp;nbsp;manager was angry a lot because me. Anyway I made a plan for presentation reviw with apec manager and my manager. My presentation review was a successful.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;How was real my presentation?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Of course, It was a successful. Many people attended my session. So many people sent cheering and clapping to me. I was so happy.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/999A3C465C2630472F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스냅샷5.png&quot; height=&quot;363&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Looking back on 2018, I want to thank to my supporters. So I prepared small gifts. I started to give the gift with&amp;nbsp;a letter.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:341px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9970B1465C26304A31&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스냅샷8.png&quot; height=&quot;494&quot; style=&quot;text-align: center;&quot; width=&quot;341&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;I&amp;nbsp;have&amp;nbsp;new plans of new year. I want to improve my technical skill, English skill and&amp;nbsp;communication skill.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;And I want to share my experience about technical to many people in the world.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/211&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Life</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/211</guid>
<comments>https://naleejang.tistory.com/211#entry211comment</comments>
<pubDate>Wed, 26 Dec 2018 23:13:23 +0900</pubDate>
</item>
<item>
<title>CloudFroms Policies(정책) 용어 정리</title>
<link>https://naleejang.tistory.com/210</link>
<description>&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot; id=&quot;docs-internal-guid-64be838c-7fff-f276-eccc-f88c958742e9&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;b&gt;Policies(정책)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;가상 환경을 관리할때 사용하며, 정책 준수와 제어의 두가지 유형을 사용할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Compliance policies(규정준수 정책)&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;가상 인프라를 강화하고 보안 요구사항을 준수하는지 확인할 때 사용된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;Control policies(제어정책)&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;특정 조건을 검사하고 결과에 따라 조치를 수행할 때 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;예를 들면 다음과 같은 경우가 있다.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;관리자 계정없이 가상 컴퓨트가 실행되지 않도록 한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;특정 패키지가 적용되지 않으면 가상 컴퓨트가 시작되지 않도록 한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;프로덕션 가상 컴퓨트가 프로덕션 호스트에서 실행중일 경우에만 시작한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;호스트가 클러스터에 추가되거나 제거될때 SmartState 분석을 수행한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;b&gt;Control policies(제어 정책)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;제어정책은 이벤트(event), 조건(condition), 실행(action)으로 이루어지는데 이것은 가상 환경에서 관리 기능을 제공한다.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;이벤트(event): 조건을 체크하기 위한 트리거&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;조건(condition): 이벤트에 의해 트리거된 테스트&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;조건이 맞을경우 발생되는 실행들.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;** 주의사항&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;정책을 생성하기 전에 정책의 목적을 신중하게 계획해야 한다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;정책이 이벤트에 의해 트리거되면 즉시 조건 범위가 적용되어 정책이 실행된다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li dir=&quot;ltr&quot; style=&quot;list-style-type: disc; font-size: 11pt; font-family: Arial; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre;&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap; font-family: Gulim, 굴림;&quot;&gt;이때 만일 항목이 범위를 벗어나면 관련된 동작은 실행되지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;b&gt;Compliance policies(규정준수 정책)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;사용자가 만든 조건을 확인하여 시스템 환경을 보호하도록 특별히 디자인되었다. 이러한 조건은 제어 정책에서 사용하는 동일한 조건이 포함될 수 있으며, 대부분의 절차는 동일하다.&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;규정준수 정책은 정책이 적용되는 엔티티 유형(예: 가상 시스템 또는 호스트)이 모든 조건을 통과할때 마크를 준수 액션으로 자동 할당한다. 조건 중 하나라도 충족되지 않으면 가상 시스템 또는 호스트가 비규격으로 표시된다. 컴플라이언스 상태는 엔티티 유형 및 비교, 드리프트 화면에 대한 요약 화면에 표시된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height:1.38;margin-top:0pt;margin-bottom:0pt;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: Gulim, 굴림; background-color: transparent; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;컴플라이언스 정책은 이벤트와 조치를 자동으로 할당한다. 엔티티 유형(예:VM 및 호스트) 준수 확인 이벤트가 컴플라이언스 정책에 할당되면 가상 시스템 또는 호스트가 모든 조건을 통과할때 준수 동작으로 표시를 실행한다. 조건 중 하나라도 충족되지 않으면 가상 시스템 또는 호스트가 비 규격으로 표시된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/210&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Cloud</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/210</guid>
<comments>https://naleejang.tistory.com/210#entry210comment</comments>
<pubDate>Fri, 14 Dec 2018 19:39:16 +0900</pubDate>
</item>
<item>
<title>My First Ansible Presentation Story</title>
<link>https://naleejang.tistory.com/209</link>
<description>&lt;p&gt;Hello, everyone~!!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;How was your day? In my case, I went to Gwangju for OpenStack with NFV Project last Sunday. At that time, it was rain a lot. So I used train. In that day, I contracted small apartment to stay&amp;nbsp;Gwangju for 5 months. I will stay here for 5 months from now.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;And I have an episode one more. Last Thursday, OpenStack Korea User Group held &quot;OpenInfra Days Korea 2018&quot; event with OpenStack Foundation, CNCF Foundation and other technical communities during 2 days.&lt;/p&gt;&lt;p&gt;So many people attended to the event. And, many companies attended and supported also. So I was delighted to meet people who is I know.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;The First day, I presented about OpenStack Automation with Ansible. Many people attended to my presentation. So I would like to post about my presentation in this time.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Actually, I made that the original presentation material's language is Korean. But I want to post in English. So I translated&amp;nbsp;language from Korean to English like below slide.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/NaleeJang/red-hat-openstack-automation-with-ansible&quot; title=&quot;[Red Hat] OpenStack Automation with Ansible&quot; target=&quot;_blank&quot;&gt;[Red Hat] OpenStack Automation with Ansible&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/NaleeJang&quot; target=&quot;_blank&quot;&gt;Nalee Jang&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;p&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/4cn4MK8PhKjihj&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt; &lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;The agenda that I prepared is like following.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;- Work Life of IT Engineer&lt;/p&gt;&lt;p&gt;- Cloud! OpenStack!&lt;/p&gt;&lt;p&gt;- Not Easy! Iterative Work!&lt;/p&gt;&lt;p&gt;- Automation for Iterative Work&lt;/p&gt;&lt;p&gt;- What is Ansible?&lt;/p&gt;&lt;p&gt;- OpenStack Automation with Ansible&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Before I speak about Automation with Ansible, I wanted to look about IT engineer's work life. Today's IT engineers have to know about lots of technologies like infrastructures, OS, program languages and various development tools. So They need to work hard. and they&amp;nbsp;try to solve the faced problems again and again.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Nowadays, many IT engineers have to know about cloud computing technical.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Cloud computing technical started by Amazon Web Services before 10 years ago.&amp;nbsp;And OpenStack started by NASA and Rackspace at June, 2010 as IaaS. A few years ago, open source cloud compute projects were like apache cloudstack, OpenNebula, Eucalyptus and OpenStack. But Now famous public cloud services are Google cloud, Microsoft Azure and Amazon Web Service. And the OpenStack became famous private cloud service.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Many companies are introduced OpenStack for their private cloud. And operators are operating OpenStack. &amp;nbsp;But they have to work iterative tasks every time.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Let us see case about IT process!&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1. General department users requested to create instance&lt;/p&gt;&lt;p&gt;2. Operation team reviewed the request.&lt;/p&gt;&lt;p&gt;3. Operator create project and user account.&lt;/p&gt;&lt;p&gt;4. Operator create network&lt;/p&gt;&lt;p&gt;5. Operator create flavor&lt;/p&gt;&lt;p&gt;6. Operator create security group&lt;/p&gt;&lt;p&gt;7. Operator create ssh key-pair&lt;/p&gt;&lt;p&gt;8. Operator create instance&lt;/p&gt;&lt;p&gt;9. Operator associate floating ip to instance&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;They have to work above iterative task every time or frequently.&amp;nbsp; How do we exit from iterative work? I think the answer is to make automation. Popular automation methods are OpenStack Heat and&amp;nbsp;Ansible.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Ansible is IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;so How do I make OpenStack&amp;nbsp;automation using Ansible?&lt;/p&gt;&lt;p&gt;First, we need to prepare OpenStack environment like git repository, ansible, ansible tower, openstack director, controller and compute nodes. And then we will design roughly process for automation. After finish to design process, we need to design playbook roles architecture and detailed role process like below.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;- Register Glance Image&lt;/p&gt;&lt;p&gt;- Creating network&lt;/p&gt;&lt;p&gt;- Creating SSH key&lt;/p&gt;&lt;p&gt;- Create Security Group&lt;/p&gt;&lt;p&gt;- Create Flavor&lt;/p&gt;&lt;p&gt;- Create Instance&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;After finish role process design, we have to develop playbook refer to ansible document.&amp;nbsp;&lt;/p&gt;&lt;p&gt;And we push ansible playbook of your local directory to git repository. And You create&amp;nbsp;a project using git authentication&amp;nbsp;in your andible tower web UI. You create job template from projects. After create job template, you click rocket icon button for executing playbook.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Finally, I want to&amp;nbsp;show the some photos of OpenInfra Days Korea 2018 event. I was happy because I could attend to the event and I could enjoy to the event. I will remember the days for a long time.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99D181485B48BBFA13&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-07-13 오후 11.48.51.png&quot; height=&quot;454&quot; style=&quot;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99EEAC4E5B48BDF51D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-07-13 오후 11.57.10.png&quot; height=&quot;353&quot; style=&quot;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/209&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/209</guid>
<comments>https://naleejang.tistory.com/209#entry209comment</comments>
<pubDate>Thu, 05 Jul 2018 23:52:36 +0900</pubDate>
</item>
<item>
<title>AWS EC2 with Ansible Episode</title>
<link>https://naleejang.tistory.com/208</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0); font-family: Arial;&quot;&gt;Hello.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;How was your days?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;In my case, I developed Ansible Playbook and test playbook execution&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;nowadays. 10 years ago, I was a developer. I could use Java, C, Basic, Python, Javascript, Shellscript and etc. A&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;nd I am a s&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;ystem engineer now.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;When I code&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Ansible Playbook, I am sometimes confused playbook grammar. I think my logic or code &lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;can run well, but the code is not working. If I have problem about playbook, I usually used ask it in&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Facebook Ansible Korea user group or timeline. So some people give answers to my asking.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;I like technical&amp;nbsp;communities. I like this culture of communities. I like these people who can share there knowledge and experiences&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;. I also try to share my experience.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;Anyway, today's preface wa&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;s long. In this posting, I would like to write a episode about my AWS ec2 instance&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;One month ago, I was testing playbook that create AWS EC2 instance. Because this was my homework of Ansible training in China. Of course, i&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;t was provide training environment. But at the time, my environment was deleted already. So I decided to use my AWS account.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-family: Arial; font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;I coded playbook that create AWS ec2 instance and upload it to my github's repository.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;And then I registered my github's repository to Ansible Tower.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;And I made job template using the playbook of github's repository.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;Of course, I configured environment for accessing&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;AWS in my workstation.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;I clicked rocket sha&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;pe's&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;butt&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;on. And Ansible Tower started to create ec2 instance in AWS.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;Below picture is a flow about above describing.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99C351475B0FF37F01&quot; filemime=&quot;image/jpeg&quot; filename=&quot;AWS Instance 생성.png&quot; height=&quot;342&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; text-align: left;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;After click rocket shape's button, &lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;I started to monitor&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;AWS dashboard for checking instance.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;Suddenly it started to look &lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;lots of unknown instances in my AWS dashboard. I was embarrassed as soon as discover unknown instances.&lt;/span&gt;&lt;span style=&quot;font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;So I deleted the unknown instances in my AWS dashboard.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;After a few minutes, I could not create instance anymore. In that night&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;, I got a mail that have title like &quot;Your AWS account is compromised&quot; from AWS. The next day, I opened a case that have title like &quot;Who did provision&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;instance in my account?&quot; in AWS support center page.&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Then, I knew that my AWS account hacked from someone. The hacker created a lot of instances in the each region. The 1 day's charge was almost&amp;nbsp;$3K.&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Arial;&quot;&gt;AWS was answered &quot;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Arial; font-size: 11pt; white-space: pre-wrap;&quot;&gt;An agent from our billing team will reach out to you when your case has been reviewed. &quot; to me. And I have waited their review. But after a few days, they billed by registered credit card. &lt;/span&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;I felt shocked and angry about this case because they billed without any notice. So I inquired it to AWS support center in many times. But I could not get any answers from AWS. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;I talked this case to my co-workers. My co-worker gave a guide to me about chargeback application.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;As soon as got guide, I called at credit card call center. And I talked my case to agent of call center. &lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; white-space: pre-wrap; color: rgb(0, 0, 0);&quot;&gt;I have worried about it. Because the credit card was company card. And I thought that was unreasonable to charge for unknown instances&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;After 2 weeks, I got a message from AWS. The message was that they will refund my bill about unauthorized resources&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;At last, I could throw my worry.&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;I am still afraid to use AWS account. And I learned a lot of things by this case.&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Finally, I would like to talk to my co-workers and AWS team thanks.&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/208&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/208</guid>
<comments>https://naleejang.tistory.com/208#entry208comment</comments>
<pubDate>Fri, 01 Jun 2018 00:15:10 +0900</pubDate>
</item>
<item>
<title>OpenStack Instance auto provisioning with Ansible</title>
<link>https://naleejang.tistory.com/207</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Hello,&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;It's rain in out of&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;the office. My office building elevator is not working. I walked up the stairs to the 14th floor. It's so hot. How is your day?&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;Anyway,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;In this blog, I would like to post about how to provision OpenStack Instance using Ansible. Before develop Ansible playbook, we need to prepare test environment like below.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Github repository : There are OpenStack provisioning Playbook.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Ansible Tower : It will makes Job Template using playbook of Github repository and It will plays.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OpenStack Director : I will install Shade&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;OpenStack module for Ansible&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OpenStack Controller Node : The Ansible playbook will call OpenStack API of this node.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OpenStack Compute Node&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt; : It will create&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;OpenStack Instance in this node.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;This Job flow is like below. If your test environment preparing is done, &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;you need to develop playbook and upload it to the your github repository first. And then,&amp;nbsp; you need to configure github repository information and OpenStack director credential. And you make Job Template for provisioning OpenStack instance using your github playbook.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99069B4C5AFB77631E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ansible_with_openstack.png&quot; height=&quot;348&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;To develop ansible playbook, we need to design provisioning task process.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;Before OpenStack instance create, OpenStack needs OS image, network, keypiar, flavor and security group. We can express these process like below.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/992EFF4C5AFB77641C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ansible_openstack_process.png&quot; height=&quot;567&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Above each task process&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;can make role process.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OSP-Image&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;When upload OS image to glance, we need to download OS image first. And then downloaded image can upload to glance.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OSP-Network&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Openstack needs to create &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Public network and Tenant network for providing network ip&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;to instance.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;If you use Tenant network, you need to create Router for connecting each public and tenant network.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OSP-Keypair&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Keypair needs when we connect Instance more safely. First, it generate ssh key and register public key file.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99DE3C4C5AFB776406&quot; filemime=&quot;image/jpeg&quot; filename=&quot;openstack_role_process.png&quot; height=&quot;432&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OSP-Security Group&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Security Group is firewall for instances. If your instance is for web service, you would&amp;nbsp;create &quot;web security group&quot; and add http service port to the created web security group.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;OSP-Flavor&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Flavor is spec of instance like cpu, memory and hard disk.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Create Instance&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;After it makes all resources without instances, you can create instance. If creating instance is done, floating ip add to created instance. And you&amp;nbsp;would wait for being available instance status.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9952B04C5AFB77651A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;openstack_role_process1.png&quot; height=&quot;427&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Playbook Architecture&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Right now, it's time to develop ansible playbook. You would&amp;nbsp;make git directory for developing playbook like below.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/990E014C5AFB77651D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;openstack-playbook.png&quot; height=&quot;271&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;When we develop playbook, we need sample playbook code. Below code is example&amp;nbsp;codes for provisiong instance.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: Consolas, &amp;quot;Andale Mono WT&amp;quot;, &amp;quot;Andale Mono&amp;quot;, &amp;quot;Lucida Console&amp;quot;, &amp;quot;Lucida Sans Typewriter&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Liberation Mono&amp;quot;, &amp;quot;Nimbus Mono L&amp;quot;, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 12px; margin-top: 0px; margin-bottom: 0px; padding: 12px; overflow: auto; line-height: normal; color: rgb(64, 64, 64);&quot;&gt;&lt;span class=&quot;c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 0, 0); font-style: italic; font-size: 10pt; font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;# Create a new instance with 4G of RAM on a 75G Ubuntu Trusty volume&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;launch a compute instance&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;localhost&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;-&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;launch an instance&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;os_server&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;vm1&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;present&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;mordred&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;region_name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;ams01&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;Ubuntu Server 14.04&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;flavor_ram&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;4096&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;boot_from_volume&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;True&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;volume_size&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot; style=&quot;box-sizing: border-box; font-size: 10pt; color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;75&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Following urls are included example codes that you need for developing playbook. You can develop playbook as refer below url.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_image_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_image_module.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_network_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_network_module.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_subnet_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_subnet_module.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_nova_flavor_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_nova_flavor_module.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_keypair_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_keypair_module.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_security_group_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_security_group_module.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;a href=&quot;http://docs.ansible.com/ansible/latest/modules/os_server_module.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible/latest/modules/os_server_module.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Actually this blog's contents is part of my ansible training lesson in China. After came back to Korea, I wanted to summarize about my training. Finally I am so happy cause I summarize this.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/207&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/207</guid>
<comments>https://naleejang.tistory.com/207#entry207comment</comments>
<pubDate>Wed, 16 May 2018 10:00:05 +0900</pubDate>
</item>
<item>
<title>My First Ansible Project Episode II</title>
<link>https://naleejang.tistory.com/206</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Hello, my blog &lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;visitors&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;~!!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;In this article,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;I will try to post about my first ansible code. Actually, I drew some architecture &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;for posting an article &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;because I hope&amp;nbsp;that you can&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;understand my ansible code well.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;My first ansible project code exist on my github repository&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;like below.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Github URL&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;: &lt;/span&gt;&lt;a href=&quot;https://github.com/naleejang/Ansible_Project&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;https://github.com/naleejang/Ansible_Project&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;If you don't know about Cobbler well, you need to study Cobbler and Kickstart before looking this blog. You can study Cobbler following site. (&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;a href=&quot;http://cobbler.github.io/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;http://cobbler.github.io/&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;What is Cobbler?&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;According to Cobbler, Cobbler is a Linux installation server that allows for rapid setup of network installation environ&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;ments.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Cobbler with Ansible Architecture&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;When I developed ansible playbook about cobbler, I didn't know cobbler's process well. so I had found cobbler information on the internet like google. Most blog's posting described only text and codes. so I found cobbler architecture on the internet. but I couldn't understand cobbler architecture and process. I created 3 VMs via KVM and configured test environment like below architecture.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E6503B5AF1582529&quot; filemime=&quot;image/jpeg&quot; filename=&quot;cobbler_ansible_architecture.jpg&quot; height=&quot;384&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;The 3 VM's role are like below.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Cobbler Server : This is installation server. It needs dhcp, rsync, tftp, createrepo and apache packages for configuring Cobbler server.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Ansible Tower: This is ansible server with web ui. It needs credential for connecting target host via SSH, playbook codes for making Cobbler tasks automatically.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Test Se&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;rver : This is empty bare metal server or VM using Network boot.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;After create 3 VMs, &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;I deployed Cobbler server as &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;refer Cobbler Quickstart Guide.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;a href=&quot;http://cobbler.github.io/manuals/quickstart/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;http://cobbler.github.io/manuals/quickstart/&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;and then I deployed Ansible and Ansible Tower as refer Ansible document.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;http://docs.ansible.com/ansible-tower/latest/html/quickinstall/index.html)&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;I booted test server using network boot. As soon as start to boot the test server, I could look screen like above blue picture.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.2;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Ansible Playbook Architecture&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;After configure test bed, I started to develop ansible playbook code as refer other people's &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;cobbler playbook.&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;My playbook architecture is like below.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99A26C3B5AF1582430&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ansible_playbook_architecture.png&quot; height=&quot;336&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none; line-height: 1.5;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;add_iso_cobbler.yml : It calls cobbler-addISO's main tasks of roles&amp;nbsp;if this playbook called by ansible tower.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;remove_iso_cobbler.yml : It calls cobbler-removeISO's main tasks of roles if this playbook called by ansible tower.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;roles :&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;Roles are ways of automatically loading certain vars_files, tasks, and handlers based on a known file structure. Grouping content by roles also allows easy sharing of roles with other users.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;cobbler-addISO : It includes tasks and vars for importing ISO image information to cobbler&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;tasks : process for importing ISO image to cobbler.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;vars : variables about ISO image&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;cobbler-removeISO : It includes tasks and vars for deleting ISO image information from cobbler.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;tasks : process for deleting ISO image information.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;line-height: 1.5;&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;vars : variables about ISO image&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(0, 0, 0);&quot;&gt;Ansible Playbook Task Process&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;My playbook's code of cobbler-addISO task process is like below. If I don't use Ansible and Ansible Tower, I have to execute commands like following&amp;nbsp;tasks everytime maybe.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px; color: rgb(0, 0, 0);&quot;&gt;Some cobbler playbooks that I found on the ansible galaxy includes from configure cobbler server to import ISO images.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9903D43B5AF1582427&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ansible_playbook_task.jpg&quot; height=&quot;505&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;You can look my playbook code in my github repository. If you don't understand after&amp;nbsp;you read this article, I recommend to&amp;nbsp;study about cobbler an&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;kickstart first.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/206&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/206</guid>
<comments>https://naleejang.tistory.com/206#entry206comment</comments>
<pubDate>Tue, 08 May 2018 18:55:14 +0900</pubDate>
</item>
<item>
<title>My First Ansible Project Episode I</title>
<link>https://naleejang.tistory.com/205</link>
<description>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Hello,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Today, I try to write an article in English in my tistory blog.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;I think my English skill is not good and my English expression is also not good.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;However one of my dreams was to write article in English. So I have decided to practice writing article in English today.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;So Please understand my English expression.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Last month, I started to study Ansible. Because I want to provide high quality service when I deploy OpenStack or CloudForms to customer's DataCenter. Actually, I don't like to work same process like provision instance, configure development environment and set up basic system configuring.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;Almost during 2 weeks, I had studied Ansible alone through online learning system. At that time, I didn't&amp;nbsp;understand about ansible functions, how to develop playbook and playbook's programming rule. anyway, I just studied Ansible continue.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;At 3rd week of April, I went to Beijing, China Red Hat office for Ansible training.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;All trainees were man, All trainees were&amp;nbsp;Chinese. and Trainer was a man also. Woman was only me.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;At first day, I couldn't understand trainer's words. So second day, I moved my seat near the trainer. And I tried to listen his voice and looked his class materials. I started to understand his words and I started to&amp;nbsp;interest&amp;nbsp;the class. And I studied how to develop playbook and how to use ansible and ansible tower&amp;nbsp;through his class materials.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:516px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99483E3F5AEC187A32&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷, 2018-05-04 17-14-54.jpg&quot; height=&quot;407&quot; width=&quot;516&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;As soon as&amp;nbsp;came back Korea office, I needed&amp;nbsp;to prepare first Ansible job for a weekend. Next Monday, I deployed Ansible and Ansible Tower to customer's server. After came back home, I developed Ansible playbook till late night. It was about baremetal OS provisioning using cobbler and Ansible. While&amp;nbsp;I worked with Ansible, I have liked Ansible more. I fell into Ansible's attractiveness. Because Ansible can make automate numerous repetitive tasks. This is my github site that have my playbook codes.&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://github.com/naleeJang/Ansible_Project&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;https://github.com/naleeJang/Ansible_Project&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt; You can refer the url.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;If I have any opportunity, I will try to describe my Ansible codes.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/205&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Ansible</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/205</guid>
<comments>https://naleejang.tistory.com/205#entry205comment</comments>
<pubDate>Fri, 04 May 2018 17:08:45 +0900</pubDate>
</item>
<item>
<title>Red Hat! and After 1 year</title>
<link>https://naleejang.tistory.com/204</link>
<description>&lt;div style=&quot;margin-bottom:5px&quot;&gt;안녕하세요!&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt;정말 오랜만에 블로그에 글을 올리는 것 같습니다.&lt;/div&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt;그리고, 정말 오랜만에 커뮤니티에서 그동안 어떻게 지내고 있었는지에 대해서도 이야기를 나눌수 있었던 거 같습니다. 요즘 이상하게도 하는일 없이 무척 바쁜 일정 이였지만, 그래도 커뮤니티 세미나에 나가 오랫동안 만나지 못했던 반가운 사람들을 만나니 밝은 에너지를&amp;nbsp;&amp;nbsp;가득 받고 온 기분이 들어 참으로 좋았습니다.&lt;/div&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt;세미나에 참석 못하신 분들을 위해서 준비해 봤습니다. 가벼운 마음으로&amp;nbsp;재미있게 보아 주세요~!!&lt;/div&gt;&lt;div style=&quot;margin-bottom:5px&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/pLASPWLis30TUc&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt; &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;My Life for 1 year&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;저는 지난해 그러니까 2017년 3월에 한국 레드햇에 입사를 했습니다. 그것도 삽질 전문가로 말입니다. 그리고, 정말 정신없는 삶을 살았던거 같습니다. 레드햇에 입사하기 전 저는 작은 스타트업에서 프리세일즈 업무를 했었습니다. 누군가에게&amp;nbsp;기술에 대해 그리고 내가 제안하는 시스템에 대해 전문가로서 기술적으로 당당하고 싶었지만, 기술과 세일즈를 동시에 다 잘 한다는건 사실 너무 힘이 들었습니다. 그래서, 늘 그런 부분에 있어서 부족함으로 느끼고 있었던 찰나에 레드햇에 입사를 하게 되었던 것이였습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서, 그동안 하지 못했던 수많은 삽질을 1년동안 정말 많이 했던것 같습니다. 거기에다가 외국계 회사 문화를 잘 알지 못했었기에 회사 문화에도 적응이 필요했습니다. 사실 일하는 방식이야 작은 회사에 있든 이곳 레드햇에서 일을 하든 크게 달라지는 건 없었지만, 수많은 각종 시스템들을 사용해야만 했고, 그런것들에 익숙해 지는것조차 상당한 시간이 필요했던 것 같습니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;레드햇에 와서 참으로 좋았던건 전에 있었던 회사에서는 새로운 업무를 익히기 위해서 늘 혼자서 고군분투하고, 그래서, 커뮤니티에 의지할 수 밖에 없었는데, 많은 교육 시스템을 활용할 수 있고, 필요에 따라 적절한 교육을 보내주신다는 점이었습니다. 물론 대부분의 교육이 영어로 이루어져 이전보다 더 영어공부를 열심히 해야만 하는 계기도 되었던거 같습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러다 보니 어느새 1년이라는 시간이 훅하고 지나버렸더라구요~!! 이제 저도 2년차 프로 삽질러가&amp;nbsp;되었네요.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Meet Technology, Meet People&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;레드햇에 입사하기 전에 저는 주로 DevStack이라던가 PackStack과 같은 스크립트로 되어 있는 툴을 사용하여 오픈스택을 설치하곤 했었습니다. 그런데, 레드햇에 입사를 해서 오픈스택을 설치하려고 보니 여기는 TripleO라는 프로젝트를 통해 오픈스택을 설치하고 있었습니다. TripleO의 핵심은 Baremetal Provisioning Service라는 IRONIC이라는 프로젝트가 핵심으로 사용되며, 이를 하기 위해서는 DHCP, TFTP, Network 설정 등 다양한 네트워크 기술 및 리눅스 기술을&amp;nbsp;필요로 했습니다. 이외에 오픈스택과 연동되는 다양한 스토리지 기술들도 필요로 합니다. 역시 오픈스택은 예전이나 지금이나 어렵습니다. 알아야 할 기술들이 많기 때문입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다양한 프로젝트들을 하면서 좋은 사람들도 참 많이 만났습니다. 실력이 좋고, 성격이 좋고, 게다가 외모까지~~~ 여튼 참으로 좋은 엔지니어들을 많이 만났습니다. 그리고, 다양한 고객들도 많이 만났죠~!! 그들은 모두 오픈스택을 쓰고자 하는 목적이 모두 달랐으며, 관심도와 기술 이해도 역시 모두 달랐습니다. 하지만, 모든 사람들이 오픈스택이라는 단어를 쓸때는 연애를 할때 가슴이 콩닥콩닥 뛰는 것 같은 묘한 기분이 들기도 했습니다. 그만큼 제가 오픈스택을 사랑했었나 봅니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;OpenStack and Others&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;프로젝트를 수행하면서 저는 평소에 사용할 기회가 없어서 잘 알지 못했던 기술에 대해서도 하나씩 알아가게&amp;nbsp;되었습니다. 그 중에서도 가장 기억에 남은 것이 바로 Ceilometer 바로 미터링 서비스였습니다. 전에는 이런 서비스가 있다는 것만 알았지, 해당 서비스가 어떤 방식으로 동작을 하는지 어떤 구조와 프로세스로 이루어졌는지 이해를 하기가 어려웠습니다. 그런데, 프로젝트를 하면서 해당 서비스에 대해서 알게 되었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;OpenStack Ceilometer의 프로세스를 보면 아래와 같습니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;1. 오픈스택에는 인스턴스와 같은 다양한 리소스들이 존재합니다.&lt;/p&gt;&lt;p&gt;2. 이런 리소스 정보들은 Collector에 의해 Metric 정보와 함께&amp;nbsp;모두 수집이 되어 MongoDB와 같은 데이터베이스에 저장됩니다.&lt;/p&gt;&lt;p&gt;3. 이때, Evaluator는 관리자가 사전에 정의해 놓은 평가 룰에 의해서, 수집된 정보와 평가 룰을 비교합니다.&lt;/p&gt;&lt;p&gt;4. 비교된 정보가 평가 룰에 해당하면 Notifier에 의해 로그와 Web-hook URL에 의해 사용자에게 알람을 보내게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99A1953C5AE5E71402&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.34.31.png&quot; height=&quot;354&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;OpenStack Ceilometer 프로세스의 각 요소들은 아래와 같은 서비스에서 프로젝트화 되어 관리되어 집니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;- Gnocchi - 자원의 사용률을 수집하는 서비스&lt;/p&gt;&lt;p&gt;- Ceilometer - 자원 정보 및 사용율을 수집하는 서비스&lt;/p&gt;&lt;p&gt;- Aodh - 자원 사용율과 평가룰을 비교하고 알람을 발생시키는 서비스&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99ADFD3C5AE5E71329&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.34.50.png&quot; height=&quot;362&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럼, Ceilometer에 의해 수집되어진 정보들을 어떤 명령어로 확인하면 될까요? 바로 아래와 같이 openstack metric resource list 라는 명령어로 확인할 수 있습니다. 아래 예제에서는 인스턴스만 검색하여 확인한 예입니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99F0033C5AE5E7120F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.35.16.png&quot; height=&quot;378&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 검색된 인스턴스 정보를 자세히 들여다보면 인스턴스를 이루고 있는 자원 정보들을 모두 확인할 수 있습니다. CPU, CPU 사용률,&amp;nbsp;&amp;nbsp;디스크 사용률, 메모리 사용률 및 CPU 할당량 등을 말입니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99D117335AE5E7110E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.35.38.png&quot; height=&quot;405&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서 그럼 CPU에 대해 정보와 메모리에 대한 정보를 아래와 같이 확인해 보겠습니다. CPU는 1 vcore가 할당되어 있는 것을 확인할 수 있고, 메모리는 512 GB가 할당되어 있는것을 확인할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99150B335AE5E7102C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.35.54.png&quot; height=&quot;404&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위에서 확인했던 인스턴스 자원 정보는 openstack server 목록에서 확인할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/997052335AE5E70D28&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.36.39.png&quot; height=&quot;217&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럼 앞에서 확인한 인스턴스에 알람을 설정해 보겠습니다. 여기서부터는 aodh에 해당하는 것입니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9902CF335AE5E70C0B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.37.02.png&quot; height=&quot;218&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;알람을 설정하고 나서 openstack alarm-history show 명령어를 이용하여 앞에서 설정한 알람을 확인해 보면 아래와 같이 알람 정보에 대해 확인할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9912C5335AE5E70B1B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.37.17.png&quot; height=&quot;394&quot; style=&quot;text-align: center;&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또한 notifier.log에서 알람이 발생된것을 로그로 모두 확인할 수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E60D335AE5E70A34&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-04-30 오전 12.37.37.png&quot; height=&quot;395&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;또한 저는 하이브리드 클라우드로 갈 수 있도록 도와주는 CloudForms라는 레드햇 제품을 함께 기술지원을 하였습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;CloudForms의 오픈소스 버전은 ManageIQ로 CloudForms를 미리한번 만나 보고 싶다면, ManageIQ를 이용해 직접 설치하여 사용할 수 있습니다. 물론 저와 함께 저의 도움이 필요하다면 CloudForms를 사용하셔도 좋습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;text-align: center;&quot;&gt;CloudForms는 다양한 퍼블릭 클라우드를 관리할 수 있으며,&amp;nbsp;이외에 기존에 사용하던 하이퍼바이저인 Vmware, MS VCenter, RHV와 같은 인프라를 관리할 수 있으며, CloudForms에서 직접 프로비저닝 및 인스턴스를 관리할 수 있습니다. 또한 Ansible과 연동하여 오토메이션을 구현할 수 있으며, 쇼핑몰과 같은 Self-Service 포탈을 만들어 주는 기능 또한 가지고 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;Wrap up&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;커뮤니티란? 혼자 살아갈 수 없기에 다 같이 모여서 기술에 대해 함께 공부하고 이런 문화를 공유하는 곳이 바로 커뮤니티입니다. 레드햇은 오픈스택이라는 기술에 상당히 많은 컨트리뷰션과 기여를 하고 있는 회사입니다. 그리고, 커뮤니티는 이런 기술을 함께 사용하고, 또 컨트리뷰션하고 기술을 함께 발전시켜 나가는 곳입니다. 또한 그안에서 커뮤니티만의 문화를 만들어 나가는 곳이기도 하죠~!!&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;레드햇에서 근무하면서 저는 벤더와 커뮤니티를 편가르기 하는 경우를 종종 보았습니다. 기술은 편을 가르는게 아닙니다. 오픈스택이라는 오픈소스는 시간이 있고, 실력이 있으면, 얼마든지 가져가서 직접 사용하고 문제가 있으면 수정하고 해당 소스를 다시 커뮤니티로 기여하는 것이지, 레드햇과 같은 벤더와 편을 가르는것은 아니라고 생각을 합니다. 다만, 빠른 시간안에 클라우드 환경을 도입하고 싶고, 내가 아닌 다른 사람의 도움이 필요할 경우에 사용하는게 바로 레드햇 오픈스택이라고 생각&amp;nbsp;합니다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;물론 오픈소스를 직접 가져다가 사용하고 기여를 할지, 레드햇과 같은 벤더사의 오픈스택을 사용할지는 기술을 도입하려고 하는 회사의 몫이겠지요~!!&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;아무튼 저는 레드햇이라는 회사에서 꿈에 그리던 오픈스택과 이와 관련된 다양한 기술들을 매일 매일 익히고, 이런 기술들을 고객사에 제공해 줄 수 있어서 매일매일&amp;nbsp;신이 나고 즐겁습니다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://naleejang.tistory.com/204&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Life</category>
<author>나리 짱!!! naleejang</author>
<guid>https://naleejang.tistory.com/204</guid>
<comments>https://naleejang.tistory.com/204#entry204comment</comments>
<pubDate>Mon, 30 Apr 2018 01:24:01 +0900</pubDate>
</item>
</channel>
</rss>