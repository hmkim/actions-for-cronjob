<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">
	<channel>
		<title>Outsider's Dev Story</title>
		<link>https://blog.outsider.ne.kr/</link>
		<description>Stay Hungry. Stay Foolish. Don't Be Satisfied.</description>
		<language>ko</language>
		<pubDate>Mon, 13 May 2019 13:08:59 +0900</pubDate>
		<generator>Textcube 1.10.7 : Tempo primo</generator>
		<image>
		<title>Outsider's Dev Story</title>
		<url>//blog.outsider.ne.kr/attach/1/7222840157.jpg</url>
		<link>https://blog.outsider.ne.kr/</link>
		<width>100</width>
		<height>100</height>
		<description>Stay Hungry. Stay Foolish. Don't Be Satisfied.</description>
		</image>
		<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/rss_outsider_dev" /><feedburner:info uri="rss_outsider_dev" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><item>
			<title>[Book] 구글 스토리</title>
			<link>http://feedproxy.google.com/~r/rss_outsider_dev/~3/6Q9dcDHiaIA/1440</link>
			<description>&lt;div&gt;
  &lt;fieldset style="padding: 20px 5px 5px 5px;"&gt;
    &lt;legend&gt;&lt;a href="https://coupa.ng/bhaE5a"&gt;구글 스토리&lt;/a&gt;&lt;/legend&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;a href="https://coupa.ng/bhaE5a"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/8708128193.jpg" alt="책 표지" title="" /&gt;&lt;/a&gt;
          &lt;/td&gt;
          &lt;td style="vertical-align: top"&gt;
            &lt;a href="https://coupa.ng/bhaE5a"&gt;구글 스토리&lt;/a&gt; - ⭐⭐⭐⭐
            &lt;br&gt;데이비드 A. 바이스 지음&lt;br&gt;마크 맬시드 지음&lt;br&gt;우병현 역&lt;br&gt;인플루엔셜 
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/fieldset&gt;
  &lt;br&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;페이지는 다음과 같이 말했다. "만약 큰 회사를 가지고 있는데, 할 수 있는 일이 오직 다섯 가지뿐이라면 그건 어리석은 일이라고 항상 생각해왔습니다. 신생 기업의 경우, 한 가지 일을 잘 수행하지 못하면, 나머지 일도 할 수 없게 됩니다. 하지만 대기업의 경우와 스타트업의 경우는 달라야 한다고 생각합니다."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 책은 구글이 만들어지고 현재까지 오기까지의 내용을 정리한 책으로 2005년 처음 나왔다가 구글 창립 20주년을 기념해서 내용을 업그레이드해서 다시 나온 책이다. 2005년에 나왔던 구글 스토리는 보지 않았고 다양한 글이나 책을 통해서 구글의 이야기는 어느 정도 알고 있지만, 구글이 걸어온 길을 다시 보고 싶었다.&lt;/p&gt;

&lt;p&gt;이전 버전과 비교해 보진 않았지만, 그 사이에 구글은 알파벳이란 모회사가 생기고 사업 규모가 더욱 커졌는데 개정판이다 보니 주 내용은 2005년까지의 일에 집중되어 있다. 그래서 스탠퍼드 대학교에서 래리 페이지와 세르게이 브린이 구글을 창업하고 검색엔진 시장에서 경쟁하면서 성장하고 지메일 등의 서비스를 내놓은 초반에 대부분 내용이 정리되어 있다. 사실 그 뒤의 이야기들도 궁금하긴 했는데 알파벳을 만들고 유전자 검색이나 자율주행 같은 사업은 뒷부분에서 간략히 설명하고 끝난 점은 좀 아쉬웠다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;"불가능을 무시하는 건전한 도전 정신을 지녀라. 정말로 좋은 말 아닙니까? 여러분은 다른 이들이 잘 하지 않으려는 일을 과감하게 시도해야 합니다."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;여러분이 성공할 수 있는 유일한 방법은 우선 실수를 많이 하는 것입니다. 더 많이 실패할수록 가치 있는 일을 할 가능성이 높아진다는 것을 깨달은 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;구글 홈페이지를 처음으로 방문한 사용자는 가끔 너무나 평범한 디자인을 보고 놀라기도 한다. 화려하게 꾸며진 다른 웹사이트나 당시 유행과 달리 구글 사이트는 단순하고 별 꾸밈이 없었다. '간결한 것이 더 아름답다Less is more'는 말은 구글을 두고 하는 말이었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;래리 페이지와 세르게이 브린이 스탠퍼드에서 구글을 창업한 과정은 익히 알고 있는 얘기지만 잘 정리된 내용을 읽으니 새로 기억도 나면서 재미있었다. "아 맞다" 구글이 이랬었지라는 재미가 있었다. 당시에 개발자는 아니었지만, 구글을 처음 이용했을 때 너무 깔끔한 검색 화면(지금도 그렇지만)이 맘에 들었던 거와 지메일 쓸 때 처음에는 초청장을 받아서 베타 버전 달고 사용했었지 하는 기억이 새록새록 나서 재밌었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;알타비스타, 익사이트, 라이코스 등 유명한 상업 검색엔진들은 가장 중요한 사업 영역인 검색을 향상하는 데 투자를 게을리하고 있었다. 대주주들이 검색엔진의 성능 개선에 관심이 없었고, 닷컴 열풍이 불자 기술 개발보다는 광고 수익 같은 수익성만을 좇았던 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;다른 기업들이 검색을 하나의 상품에 불과하다고 우롱하며 검색 사업을 내던지고 있을 때 구글이 이 분야에서 독보적인 지위를 차지하겠다는 것. 이들은 검색이야말로 확장하고 있는 월드와이드웹을 항해하는 데 가장 중요한 역할을 한다고 굳게 믿었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;지금은 구글의 검색이 얼마나 중요하고 강력한지 모르는 사람이 없지만, 결과를 아는 입자에서 당시에 알타비스타, 야후, AOL 등 대형 업체들이 검색엔진을 등한시하고 구글은 이 사이에서 검색엔진에 집중해서 성장하는 모습을 보는 것은 꽤 재미가 있었다. 지금 보면 당연한 검색의 중요성을 눈치채지 못한 당시의 상황을 상상해 보게 되었고 검색 시장이 점점 커지면서 경쟁자와 또 경쟁만 하는 것이 아니라 제휴를 맺어서 시장 파이를 키우는 전략이 무척 흥미로웠다. 특히 무너져가던 애스크 지브스가 구글과 협약을 맺어서 회복하는 모습을 보면서 결과를 모르는 상황에서 얼마나 큰 모험이었을까 싶은 생각이 들었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1998년 발표한 글에서 강한 어조로 광고에 대한 검색엔진의 입장을 이렇게 표현한 바 있다. "광고 수익에 의존하는 검색엔진은 '어쩔 수 없이 광고주에게 편향'될 수밖에 없다. 소비자가 원하는 검색결과를 제공하기 위해 광고를 적게 싣는 검색엔진이 더 바람직하다." 하지만 동시에 일부 사용자는 일종의 정보로서 광고를 원할 수도 있다는 생각이 들었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;브린과 페이지는 광고를 사악한 대상으로 여겼던 생각을 바꿔, 광고도 온라인 검색 사용자에게 제공할 수 있는 중요한 정보의 일부분으로 바라보기 시작했다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;또한, 검색 광고도 지금은 당연한 접근이지만 오버추어를 벤치마킹해서 기존과 다른 검색 광고 시장을 만들어내고 이 때문에 법정 공방까지 가는 일도 흥미로웠다. 당시에도 배너광고라는 형태는 있었던 것 같지만 키워드를 중심으로 입찰해서 광고하고 이 시작이 실제로 꽤 크다는 것을 오랫동안 숨겨오면서 검색엔진에서 수익을 만들어가는 과정은 흥미진진하다. 구글을 처음 썼을 때 나도 "구글에 광고가 있어?" 하는 반응을 했던 기억이 있는데 검색 결과를 헤치지 않으려고 영역을 분리해서 광고를 노출하는 방식을 선보이는 과정까지도 잘 나와 있다. 오버추어라는 추억의 이름도 오랜만에 들었지만, 이 가운데 방향이 조금만 달라졌어도 지금과 같은 형태의 검색 키워드 광고를 사용하고 있었을까 하는 생각도 들었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;"구글의 광고는 아주 효과적인데, 이는 대부분의 사람들이 그것을 광고로 인식하지 못하기 때문이다. 이것은 과연 사악하지 않은 것인가?" 앨런 도이치먼(Alan Deutschman)은 〈패스트컴퍼니Fast Company〉의 한 기사에서 구글의 전략에 의문을 던졌다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그동안 유명한 구글의 "사악해지지 말자"라는 표어가 사실이 아니라는 얘기도 많이 들었는데 구글에서 발행한 것은 아니더라도 구글의 일대기 같은 이 책에 이 말이 너무 많이 나와서 사실이 아니라는 말이 잘못된 거구나 하는 생각을 하게 되었다. 구글에서 좋아하는 부분도 있고 최근에는 안 좋아하는 부분도 있지만, 엔지니어가 좋아하는 회사로 잘 키워왔다는 생각이 책을 읽으면서 많이 들었다. 지금은 너무 대기업이 되었지만 이래서 내가 구글을 좋아했었지 하는 느낌이랄까?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.outsider.ne.kr/1440?commentInput=true#entry1440WriteComment"&gt;댓글 쓰기&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/rss_outsider_dev/~4/6Q9dcDHiaIA" height="1" width="1" alt=""/&gt;</description>
			<category>BlaBlaBla~</category>
			<category>Google</category>
			<category>구글</category>
			<category>책 후기</category>
			<author>outsideris@gmail.com (Outsider)</author>
			<guid isPermaLink="false">https://blog.outsider.ne.kr/1440</guid>
			<comments>https://blog.outsider.ne.kr/1440#entry1440comment</comments>
			<pubDate>Mon, 13 May 2019 11:01:55 +0900</pubDate>
		<feedburner:origLink>https://blog.outsider.ne.kr/1440</feedburner:origLink></item>
		<item>
			<title>기술 뉴스 #125 : 19-05-01</title>
			<link>http://feedproxy.google.com/~r/rss_outsider_dev/~3/N-KI0NSrBXA/1439</link>
			<description>&lt;h1&gt;웹개발 관련&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://code.fb.com/developer-tools/isinputpending-api/"&gt;Faster input events with Facebook’s first browser API contribution&lt;/a&gt;&lt;/strong&gt; : 웹페이지에서 다운받은 JavaScript 파일을 실행할 때는 싱글 스레드라 다른 작업을 못 하게 되는데 큰 파일을 한 번에 처리하면 로딩속도는 빠르지만, 사용자가 인터렉션을 하기까지 시간이 걸리고 여러 파일로 쪼개면 인터렉션은 빠르지만, 로딩 속도가 느린 문제가 있다. 이를 해결하기 위해 Facebook에서 &lt;code&gt;isInputPending&lt;/code&gt;이란 API를 만들어서 W3C에 제안하고 크롬과 협업해서 크롬 74에 포함되었다. &lt;code&gt;isInputPending&lt;/code&gt;를 사용하면 큐에 들어간 이벤트가 있는지 빨리 확인할 수 있어서 로딩속도와 인터렉션 시작이 느린 문제를 둘 다 해결할 수 있다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.cypress.io/blog/2019/04/15/introducing-the-open-source-and-full-featured-seed-dashboard-plans/"&gt;Introducing the Open Source and Full-Featured Seed Dashboard Plans&lt;/a&gt;&lt;/strong&gt; : 브라우저 테스트 플랫폼인 &lt;a href="https://www.cypress.io/"&gt;cypress&lt;/a&gt;에서 대시보드 기능까지 완전히 사용할 수 있는 오픈소스 플랜을 발표해서 오픈소스 프로젝트에서는 무료로 사용할 수 있게 되었다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://webmasters.googleblog.com/2019/04/instant-loading-amp-pages-from-your-own.html"&gt;Instant-loading AMP pages from your own domain&lt;/a&gt;&lt;/strong&gt; : &lt;code&gt;google.com/amp&lt;/code&gt;로 제공되던 AMP 페이지를 &lt;a href="https://amp.dev/documentation/guides-and-tutorials/optimize-and-measure/signed-exchange"&gt;Signed Exchanges&lt;/a&gt;를 통해서 서비스 프로바이더의 도메인에서 직접 제공할 수 있게 되었다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://jamie.build/javascripts-new-private-class-fields.html"&gt;JavaScript's new #private class fields&lt;/a&gt;&lt;/strong&gt; : 문법과 기능 모두를 좋아하진 않지만, private 클래스 필드가 최신 크롬과 Node.js v12에 들어왔는데 이 사용법을 설명하는 글이다. 현재 이 기능은 &lt;a href="https://tc39.github.io/process-document/"&gt;stage 2단계&lt;/a&gt;이다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;그 밖의 프로그래밍 관련&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://sematext.com/blog/open-distro-elasticsearch-review/"&gt;Open Distro for Elasticsearch Review&lt;/a&gt;&lt;/strong&gt; : Elasticsearch의 상용라이센스를 문제 삼으면서 Amazon이 직접 오픈소스로 배포한 &lt;a href="https://opendistro.github.io/for-elasticsearch/"&gt;Open Distro for Elasticsearch&lt;/a&gt;를 Elasticsearch와 기능 비교를 하고 docker-compose를 이용해서 실행하는 방법 및 Elasticsearch Apache 2.0 라이센스 버전에서 제공하지 않는 기능 위주로 설정하는 방법을 설명하는 글이다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://hackerwins.github.io/crdt/2019/04/16/co-editor.html"&gt;Editor 01. Google Docs 같은 실시간 협업 에디터를 만드는 방법&lt;/a&gt;&lt;/strong&gt; : 실시간 협업 에디터를 만들 때 각 사용자의 변경 사항을 충돌 없이 합치는 접근 방법을 설명하는 글이다. Git처럼 로컬에서 만들어서 머지하는 방식이 아닌 실시간으로 변경하면서도 각 사용자의 변경내용이 문제없이 합쳐질 때 어떤 문제가 있는지 부터 이를 해결하기 위한 데이터 타입으로 LinkedList, Logical Clock, RGA, RGATreeSplit의 방식을 설명하고 있다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://blog.2dal.com/2019/04/24/kubernetes-03-kubernetes-cluster-on-aws-with-kops/"&gt;Kubernetes 03 – Kubernetes Cluster on AWS with kops&lt;/a&gt;&lt;/strong&gt; : &lt;a href="https://github.com/kubernetes/kops"&gt;kops&lt;/a&gt;로 AWS에 Kubernetes 클러스터를 구성하는 방법을 설명하는 글로 기존 VPC 위에 설정하는 방법부터 예제 코드까지 함께 제공하고 있다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://medium.com/@nodejs/announcing-a-new-experimental-modules-1be8d2d6c2ff"&gt;Announcing a new — experimental-modules&lt;/a&gt;&lt;/strong&gt; : Node.js 8.9.0부터 &lt;code&gt;--experimental-modules&lt;/code&gt; 플래그를 통해 ES modules를 사용할 수 있었는데 Node.js v12에서는 그동안의 피드백을 통해 완전히 새로 만든 구현체가 포함되었고 기존 코드에서 ES modules를 어떻게 사용할 수 있는지를 설명하는 글이다. 기존처럼 &lt;code&gt;.mjs&lt;/code&gt; 확장자나 프로젝트 &lt;code&gt;package.json&lt;/code&gt;에 &lt;code&gt;"type": "module"&lt;/code&gt;를 지정해서 ES modules로 인식할 수 있으며 CJS가 섞여 있는 경우 &lt;code&gt;.cjs&lt;/code&gt; 확장자를 사용하거나 하위 디렉토리 &lt;code&gt;package.json&lt;/code&gt;에 &lt;code&gt;"type": "commonjs"&lt;/code&gt;를 지정할 수 있다고 한다. v12가 LTS가 되는 10월 전에 &lt;code&gt;--experimental-modules&lt;/code&gt; 플래그를 제거하는 것이 목표라고 한다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://medium.com/wasmer/announcing-wapm-the-webassembly-package-manager-18d52fae0eea"&gt;Announcing WAPM: The WebAssembly Package Manager&lt;/a&gt;&lt;/strong&gt; : &lt;a href="https://wasmer.io/"&gt;wasmer&lt;/a&gt;에서 WebAssembly를 이용해서 어디서나 실행할 수 있는 유니버설 바이너리를 배포하고 사용할 수 있도록 패키지 매니저인 &lt;a href="https://wapm.io/"&gt;wapm&lt;/a&gt;을 공개했다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://jasonet.co/posts/scheduled-actions/"&gt;Run your GitHub Actions workflow on a schedule&lt;/a&gt;&lt;/strong&gt; : GitHub Actions에 새로 추가된 스케쥴 기능의 사용방법을 설명하는 글이다. 이 기능을 이용하면 크론탭을 쓰듯이 GitHub Actions를 주기적으로 실행할 수 있다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;볼만한 링크&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.blog/2019-04-29-apache-joins-github-community/"&gt;Apache Software Foundation joins GitHub open source community&lt;/a&gt;&lt;/strong&gt; : &lt;a href="https://apache.org/foundation/"&gt;아파치 재단&lt;/a&gt;이 2016년 GitHub 저장소로 통합하기로 하고 작업한 후 2019년 2월 마이그레이션을 완료했다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.44bits.io/ko/post/news--fluentd-has-graduated-cncf"&gt;CNCF, Fluentd 프로젝트 졸업을 발표&lt;/a&gt;&lt;/strong&gt; : &lt;a href="https://www.fluentd.org/"&gt;fluentd&lt;/a&gt;가 CNCF의 졸업 프로젝트가 되었다. CNCF의 프로젝트 단계는 샌드박스 단계, 인큐베이팅 단계, 졸업 단계로 나누어져 있다.(한국어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;IT 업계 뉴스&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ferd.ca/goodbye-joe.html"&gt;Goodbye Joe&lt;/a&gt;&lt;/strong&gt; : Erlang을 만든 Joe Armstrong이 지난 4월 20일 별세했다. 삼가 고인의 명복을 빕니다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.44bits.io/ko/post/news--docker-found-unauthorized-access-to-docker-hub-database"&gt;4월 25일, 도커 허브 계정 정보 유출&lt;/a&gt;&lt;/strong&gt; : &lt;a href="https://news.ycombinator.com/item?id=19763413"&gt;Docker Hub가 해킹당해서&lt;/a&gt; 19만 개의 계정이 유출되었고 여기에는 계정명, 해싱된 패스워드, GitHub/BitBucket의 엑세스 토큰 등이 포함되어있다고 한다. 사용자는 비밀번호를 바꿔야 하고 토큰이 리보크되어 자동빌드가 멈추었을 수 있으니까 재연결 등을 해야 한다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://realm.io/blog/mongodb-to-acquire-realm-the-future-is-bright/"&gt;MongoDB to Acquire Realm - The Future is Bright&lt;/a&gt;&lt;/strong&gt; : 도큐먼트 데이터베이스를 만드는 MongoDB가 모바일 데이터베이스를 만드는 Realm을 인수했다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://markets.businessinsider.com/news/stocks/pinterest-initial-public-offering-shares-debut-for-trading-2019-4-1028122063"&gt;Pinterest, the latest unicorn to hit the public market, jumps 25% in its trading debut (PINS)&lt;/a&gt;&lt;/strong&gt; : 지난 18일 Pinterest가 뉴욕 증시에 상장했다. 주식당 $23.75로 시작했으며 100억 달러의 가치평가를 받게 되었다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.theverge.com/2019/4/26/18518022/slack-public-offering-ipo-announced-sk-stock"&gt;Slack plans to go public after hitting 10 million daily users&lt;/a&gt;&lt;/strong&gt; : 슬랙이 뉴욕 증시에 상장하기 위해 &lt;a href="https://www.sec.gov/Archives/edgar/data/1764925/000162828019004786/slacks-1.htm"&gt;S1 문서&lt;/a&gt;를 제출했다. 이 문서에 따르면 천만 일간 사용자를 기록하고 있고 최근 3년간 1억 달러에서 4억 달러로 수익이 올라갔지만, 아직 적자 상태라고 한다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.nytimes.com/2019/04/29/business/dealbook/wework-ipo-filing.html"&gt;WeWork Files for I.P.O., Joining Wave of Cash-Burning Start-Ups in Going Public&lt;/a&gt;&lt;/strong&gt; : WeWork가 작년 12월에 비밀리에 상장을 준비해 온 것으로 알려졌다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;프로젝트&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://accessibilityinsights.io/"&gt;Accessibility Insights&lt;/a&gt;&lt;/strong&gt; : 웹사이트의 접근성 지원 여부를 검사해주는 크롬 확장으로 Microsoft에서 만들었다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://reporemover.xyz/"&gt;Repo Remover&lt;/a&gt;&lt;/strong&gt; : 다수의 GitHub 저장소를 지우거나 아카이빙 할 수 있는 웹 서비스.&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;버전 업데이트&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://nodejs.org/"&gt;Node.js&lt;/a&gt; v12.0.0 (Current)&lt;/strong&gt; : 자바스크립트 런타임, &lt;a href="https://nodejs.org/en/blog/release/v12.0.0/"&gt;릴리스 공지&lt;/a&gt;, &lt;a href="https://medium.com/@nodejs/introducing-node-js-12-76c41a1b3f3f"&gt;Introducing Node.js 12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt; 19.04 Disco Dingo&lt;/strong&gt; : Linux 배포판, &lt;a href="https://wiki.ubuntu.com/DiscoDingo/ReleaseNotes"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; v0.12 Beta 2&lt;/strong&gt; : 서버 인프라 설정 도구, &lt;a href="https://www.hashicorp.com/blog/announcing-terraform-0-1-2-beta-2"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.packer.io/"&gt;Packer&lt;/a&gt; v1.4.0&lt;/strong&gt; : 머신 이미지 생성 도구, &lt;a href="https://www.hashicorp.com/blog/announcing-packer-v-1-4-0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://electron.atom.io/"&gt;Electron&lt;/a&gt; v5.0.0&lt;/strong&gt; : 크로스 플랫폼 데스크탑 애플리케이션 플랫폼, &lt;a href="https://electronjs.org/blog/electron-5-0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://developer.android.com/studio/index.html"&gt;Android Studio&lt;/a&gt; v3.4&lt;/strong&gt; : 안드로이드 IDE, &lt;a href="https://android-developers.googleblog.com/2019/04/android-studio-34.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/zeit/next.js"&gt;Next.js&lt;/a&gt; v8.1&lt;/strong&gt; : 서버렌더링 React 애플리케이션 프레임워크, &lt;a href="https://nextjs.org/blog/next-8-1"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://facebook.github.io/create-react-app/"&gt;Create React App&lt;/a&gt; v3.0.0&lt;/strong&gt; : React 프로젝트 환경 설정 도구, &lt;a href="https://github.com/facebook/create-react-app/releases/tag/v3.0.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt; v1.0.0&lt;/strong&gt; : 컴포넌트식 마크다운, &lt;a href="https://mdxjs.com/blog/v1/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://about.gitlab.com/"&gt;GitLab&lt;/a&gt; v11.10&lt;/strong&gt; : 오픈소스 설치형 Git 플랫폼, &lt;a href="https://about.gitlab.com/2019/04/22/gitlab-11-10-released/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/GoogleChrome/puppeteer"&gt;Puppeteer&lt;/a&gt; v1.15.0&lt;/strong&gt; : Headless Chrome의 Node.js 라이브러리, &lt;a href="https://github.com/GoogleChrome/puppeteer/releases/tag/v1.15.0"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.openbsd.org/"&gt;OpenBSD&lt;/a&gt; 6.5&lt;/strong&gt;: 운영체제, &lt;a href="https://www.openbsd.org/65.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.lagomframework.com/"&gt;Lagom&lt;/a&gt; v1.5.0&lt;/strong&gt; : 마이크로서비스 프레임워크, &lt;a href="https://www.lightbend.com/blog/lagom-1-5-released-akka-management-kubernetes-openshift-grpc-couchbase"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://naver.github.io/egjs-flicking/"&gt;Flicking&lt;/a&gt; v3.0.0&lt;/strong&gt; : JavaScript 캐러셀 라이브리러, &lt;a href="https://github.com/naver/egjs-flicking/releases/tag/3.0.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://serverless.com/"&gt;Serverless Framework&lt;/a&gt; v1.41.0&lt;/strong&gt; : AWS Lambda에서 앱을 만드는 프레임워크, &lt;a href="https://serverless.com/blog/framework-release-v141/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.reactboilerplate.com/"&gt;react boilerplate&lt;/a&gt; v4.0.0&lt;/strong&gt; : React.js 보일러플레이트, &lt;a href="https://github.com/react-boilerplate/react-boilerplate/releases/tag/v4.0.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; v3.0.0&lt;/strong&gt; : 웹앱 프레임워크, &lt;a href="https://svelte.dev/blog/svelte-3-rethinking-reactivity"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.outsider.ne.kr/1439?commentInput=true#entry1439WriteComment"&gt;댓글 쓰기&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/rss_outsider_dev/~4/N-KI0NSrBXA" height="1" width="1" alt=""/&gt;</description>
			<category>Newsletter</category>
			<category>AMP</category>
			<category>Elasticsearch</category>
			<category>isInputPending</category>
			<category>kubernetes</category>
			<category>webassembly</category>
			<author>outsideris@gmail.com (Outsider)</author>
			<guid isPermaLink="false">https://blog.outsider.ne.kr/1439</guid>
			<comments>https://blog.outsider.ne.kr/1439#entry1439comment</comments>
			<pubDate>Wed, 01 May 2019 19:31:05 +0900</pubDate>
		<feedburner:origLink>https://blog.outsider.ne.kr/1439</feedburner:origLink></item>
		<item>
			<title>Netlify Dev 기능으로 개발 중인 사이트 Netlify에 배포하기</title>
			<link>http://feedproxy.google.com/~r/rss_outsider_dev/~3/2UrZ2tuwcis/1438</link>
			<description>&lt;p&gt;전에 &lt;a href="https://blog.outsider.ne.kr/1417"&gt;Netlify를 소개&lt;/a&gt;했었는데 며칠 전에 &lt;a href="https://www.netlify.com/blog/2019/04/09/netlify-dev--our-entire-platform-right-on-your-laptop/"&gt;Netlfify Dev&lt;/a&gt;라는 기능이 공개되었다.&lt;/p&gt;

&lt;p&gt;Netlify에 배포한다는 것은 기본적으로 사이트를 정적 웹사이트로 빌드해서 배포한다는 것이므로 빌드된 배포 파일을 웹서버로 확인해 보는 것은 간단한 일이다. 서버 웹 애플리케이션보다는 훨씬 간단하므로 빌드가 제대로 된다면 로컬에서 확인해야 할 필요가 적은 편이지만 실제로 서버리스 Functions나 Forms 등 정적 웹사이트만으로는 구현하기 어려운 추가 기능이 있으므로 배포하기 전에 로컬에서 Netlify의 동작을 확인할 수 있다면 좋은 일이다.&lt;br /&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;Netlify Dev&lt;/h1&gt;

&lt;p&gt;쉽게 웹사이트를 Netlify에 배포할 수 있게 &lt;a href="https://www.netlify.com/docs/cli/"&gt;netlify-cli&lt;/a&gt;가 제공되고 있는데 이번에 나온 Netlify Dev는 &lt;code&gt;netlify-cli&lt;/code&gt;에 추가된 서브 명령어다. 나는 보통 GitHub 저장소에 Netlify를 연결해서 자동 배포를 했기 때문에 &lt;code&gt;netlify-cli&lt;/code&gt; 자체를 사용하고 있지는 않았는데 여기서는 Netlify Dev만 살펴보려고 한다.&lt;/p&gt;

&lt;p&gt;다음은 예시 정적 사이트로 &lt;a href="https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/"&gt;gatsby-starter-blog&lt;/a&gt;라는 Gatsby 스터타킷으로 만든 사이트를 &lt;code&gt;netlify dev&lt;/code&gt;로 실행한 모습이다. 실제로는 &lt;code&gt;npx netlify-cli dev&lt;/code&gt;로 실행했는데 &lt;code&gt;netlify-cli&lt;/code&gt;를 글로벌로 설치(&lt;code&gt;npm install -g netlify-cli&lt;/code&gt;)하기 싫어서 &lt;a href="https://www.npmjs.com/package/npx"&gt;npx&lt;/a&gt;를 이용한 것이다.&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;code class="language-bash"&gt;$ npx netlify-cli dev
◈ Netlify Dev ◈
◈ Starting Netlify Dev with gatsby
Waiting for localhost:8000.
&amp;gt; gatsby-starter-blog@0.1.0 start /Users/outsider/temp/netlify-dev/gatsby-blog
&amp;gt; npm run develop


&amp;gt; gatsby-starter-blog@0.1.0 develop /Users/outsider/temp/netlify-dev/gatsby-blog
&amp;gt; gatsby develop

success onPostBootstrap — 0.093 s

info bootstrap finished - 2.766 s

.
Connected!

   ┌─────────────────────────────────────────────────┐
   │                                                 │
   │   ◈ Server now ready on http://localhost:8888   │
   │                                                 │
   └─────────────────────────────────────────────────┘

You can now view gatsby-starter-blog in the browser.

  http://localhost:8000/

View GraphiQL, an in-browser IDE, to explore your site's data and schema

  http://localhost:8000/___graphql

Note that the development build is not optimized.
To create a production build, use npm run build

 DONE  Compiled successfully in 36ms                                                          02:22:08
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Netlify Dev와 Gatsby의 출력이 섞여서 내용 파악이 어려울 수 있는데 Netlfify는 현재 프로젝트의 정적 사이트 실행 명령어와 설정을 자동으로 찾아낸다. 그래서 알려진 정적 사이트 도구를 사용하고 있다면 &lt;code&gt;npx netlify-cli dev&lt;/code&gt;만으로 바로 서버를 띄워볼 수 있다.(막상 해보니 정적사이트를 개발할 때 내가 개발용으로 쓰는 &lt;code&gt;python -m http.server&lt;/code&gt;보다 편한 듯하다)&lt;/p&gt;

&lt;p&gt;위에서 &lt;code&gt;Starting Netlify Dev with gatsby&lt;/code&gt; 부분을 보면 Gatsby를 사용한 프로젝트라는 것을 찾았고 &lt;code&gt;Waiting for localhost:8000.&lt;/code&gt; 부분을 보면 Gatsby 사이트가 &lt;code&gt;8000&lt;/code&gt;포트로 뜨리라는 것을 알 수 있다. 이후로는 &lt;code&gt;gatsby develop&lt;/code&gt; 명령어로 실행되는 Gastby 빌드결과가 출력된다. 중간에 &lt;code&gt;Server now ready on http://localhost:8888&lt;/code&gt;라는 부분이 있는데 Netlify Dev가 Gastby 서버와 연결되어 &lt;code&gt;8888&lt;/code&gt;포트로 제공되는 것을 볼 수 있다. Gastby 개발 서버가 실행되었으므로 로컬에서 &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;, &lt;a href="http://localhost:8888/"&gt;http://localhost:8888/&lt;/a&gt; 모두로 접속해서 웹사이트를 볼 수 있다.&lt;br /&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h1&gt;Netlify Dev 공개 주소로 배포하기&lt;/h1&gt;

&lt;p&gt;위에서 사용한 것은 로컬에서 확인하는 것이므로 크게 유용하지는 않다. Netlify 플랫폼을 이용해서 외부에서도 접속할 수 있도록 공개 주소로도 배포할 수 있다.&lt;/p&gt;

&lt;p&gt;사용하기 전에 먼저 로컬에서 &lt;code&gt;npx netlify-cli init&lt;/code&gt;로 환경설정을 해야 한다.&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;code class="language-bash"&gt;$ npx netlify-cli init
Logging into your Netlify account...
Opening https://app.netlify.com/authorize
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;초기화를 하면 먼저 Netlify 인증이 필요하므로 아래처럼 인증 화면이 나온다.&lt;/p&gt;

&lt;p style="text-align: center;"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/6669727432.gif" width="750" height="549" alt="Netlify 웹사이트의 인증 요구" title="" /&gt;&lt;/p&gt;

&lt;p&gt;Authorize 버튼을 누르면 터미널에서 로그인이 완료된다.&lt;/p&gt;

&lt;p style="text-align: center;"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/3181220277.gif" width="750" height="430" alt="Netlify 웹사이트의 인증 완료" title="" /&gt;&lt;/p&gt;

&lt;p&gt;인증이 완료되면 터미널에서 추가 설정을 할 수 있다.&lt;/p&gt;

&lt;p style="text-align: center;"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/7340157465.gif" width="750" height="284" alt="터미널의 사이트 연결방법 선택 요청" title="" /&gt;&lt;/p&gt;

&lt;p&gt;여기서 초기화는 Netlify 사이트 배포 설정이므로 GitHub에 저장소도 있어야 하고 Netlify 사이트도 설정해야 한다. 기존에 이미 있는 프로젝트에 연결할 수도 있지만 여기서는 완전히 새로 만들어 보자. CLI에서 직접 GitHub 저장소도 만들 수 있는 것으로 보이지만 이미 GitHub에는 테스트용 저장소를 만들어 놓았다.&lt;/p&gt;

&lt;p style="text-align: center;"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/9214427251.gif" width="750" height="461" alt="터미널의 Netlify 사이트 설정" title="" /&gt;&lt;/p&gt;

&lt;p&gt;Netlify에서 사용한 사이트명과 GitHub과 연결하기 위한 계정 정보를 넣고 빌드 설정을 하면 Netlify 사이트가 생성된다.&lt;/p&gt;

&lt;p style="text-align: center;"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/1656912256.gif" width="750" height="541" alt="Netlify에 생성된 사이트" title="" /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트에 Netlify를 설정했으므로 이제 Netlify Dev를 통해 배포해 보자. 공개로 배포하려면 &lt;code&gt;npx netlify-cli dev --live&lt;/code&gt;처럼 &lt;code&gt;--live&lt;/code&gt; 옵션을 주면 된다.&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;code class="language-bash"&gt;$ npx netlify-cli dev --live
◈ Netlify Dev ◈
◈ Starting Netlify Dev with gatsby
Waiting for localhost:8000.
◈ Lambda server is listening on 34567

&amp;gt; gatsby-starter-blog@0.1.0 start /Users/outsider/temp/netlify-dev/gatsby-blog
&amp;gt; npm run develop


&amp;gt; gatsby-starter-blog@0.1.0 develop /Users/outsider/temp/netlify-dev/gatsby-blog
&amp;gt; gatsby develop

info bootstrap finished - 2.790 s

Connected!
Waiting for localhost:34567.
Connected!
Waiting for localhost:8000.
Connected!
◈ Creating Live Tunnel for ac5effef-2a67-4d45-929c-da0a4e740b96

   ┌───────────────────────────────────────────────────────────┐
   │                                                           │
   │                   ◈ Server now ready on                   │
   │   https://outsider-netlify-dev-demo-b3aa5c.netlify.live   │
   │                                                           │
   └───────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;앞에서 로컬에서 띄웠던 것과 거의 같지만 이번에는 Netlify와 터널을 연결해서 &lt;code&gt;https://outsider-netlify-dev-demo-b3aa5c.netlify.live&lt;/code&gt; 같은 주소로 접속할 수 있게 해준다. Netlify로 배포하는 사이트는 &lt;code&gt;netlify.com&lt;/code&gt;으로 배포되지만 Netlify Dev는 &lt;code&gt;netlify.live&lt;/code&gt;를 사용한다. 이는 당연히 Git 저장소에 푸시하지 않은 로컬 변경사항 그대로 배포되고 로컬 개발 환경이 핫 리로딩을 제공한다면 (터널이니까 어쩌면 당연히) 수정하는 변경사항도 위 주소로 접속해서 확인할 수 있다.&lt;/p&gt;

&lt;p style="text-align: center;"&gt;&lt;img src="//blog.outsider.ne.kr/attach/1/5143092942.gif" width="750" height="571" alt="Netlify 주소로 접속해서 확인한 Gatsby 블로그" title="" /&gt;&lt;/p&gt;

&lt;p&gt;디자이너나 기획자와 일한다면 이 주소를 제공하고 같이 확인해 볼 수 있을 것이다. 비슷한 용도로는 이전에는 &lt;a href="https://blog.outsider.ne.kr/1159"&gt;ngrok&lt;/a&gt;을 사용했는데 Netlify를 사용하고 있다면 Netlify Dev를 그대로 쓰는 것도 좋아 보인다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.outsider.ne.kr/1438?commentInput=true#entry1438WriteComment"&gt;댓글 쓰기&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/rss_outsider_dev/~4/2UrZ2tuwcis" height="1" width="1" alt=""/&gt;</description>
			<category>Publishing</category>
			<category>GitHub</category>
			<category>netlify</category>
			<category>netlify dev</category>
			<category>netlify-cli</category>
			<category>static site</category>
			<author>outsideris@gmail.com (Outsider)</author>
			<guid isPermaLink="false">https://blog.outsider.ne.kr/1438</guid>
			<comments>https://blog.outsider.ne.kr/1438#entry1438comment</comments>
			<pubDate>Wed, 24 Apr 2019 20:24:33 +0900</pubDate>
		<feedburner:origLink>https://blog.outsider.ne.kr/1438</feedburner:origLink></item>
		<item>
			<title>기술 뉴스 #124 : 19-04-15</title>
			<link>http://feedproxy.google.com/~r/rss_outsider_dev/~3/dVkR6xFkPoM/1437</link>
			<description>&lt;h1&gt;웹개발 관련&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://overreacted.io/ko/react-as-a-ui-runtime/"&gt;UI 런타임으로서의 React&lt;/a&gt;&lt;/strong&gt; : React를 단순히 UI 라이브러리가 아니라 UI 런타임이라는 관점에서 React 코어 개발자인 Dan Abramov가 설명하는 글이다. 이는 단순히 브라우저만을 위한 것이 아니라 UI를 표현하기 위한 호스트 트리를 생성함으로써 단순히 웹사이트뿐만 아니라 모바일 앱, 문서 등 원하는 UI를 만들기 위해서 React가 어떻게 관여하는지를 설명하고 있는데 초보자를 위한 글은 아니지만, React가 여러 플랫폼 사이에서 어떤 위치를 가지고자 하는지를 잘 이해할 수 있는 글이다. 전에 영어로 읽다가 너무 길어서 포기했는데 번역이 되어서 쉽게 읽을 수 있었다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://unlikekinds.com/article/google-amp-page-speed"&gt;Google AMP lowered our page speed, and there's no choice but to use it&lt;/a&gt;&lt;/strong&gt; : AMP와 아닌 사이트를 비교했을 때 글쓴이의 사이트는 AMP가 오히려 속도가 더 느렸음에도 구글이 웹을 거의 소유하고 있어서 사이트 제공자가 구글을 무시할 수밖에 없기 때문에 AMP를 사용할 수밖에 없다는 글이다. AMP의 제약이 너무 심하고 사이트에 특화된 기능을 제공하고 싶어도 AMP 컴포넌트가 아니면 할 수가 없고 오픈소스여도 사실상 구글의 입김이 가장 세기 때문에 사용자들이 의견을 제시해도 제대로 적용이 되고 있지 않다고 한다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://v8.dev/blog/code-caching-for-devs"&gt;Code caching for JavaScript developers&lt;/a&gt;&lt;/strong&gt; : V8에서 코드 캐싱이 동작하는 방법과 캐싱을 활용하기 위해 개발자들이 할 수 있는 방법을 설명하고 있다. 캐싱을 더 잘 이용하려면 코드나 URL, 혹은 런타임에 따라 달라지는 조건을 바꾸지 않는 것이 좋고 상황에 따라 라이브러리를 분리하거나 합쳐야 할 수도 있고 1KiB 이상만 캐싱하므로 작은 스크립트를 합치고 즉시 실행 함수 표현식을 사용하면 더 캐싱을 적극적으로 사용할 수 있다고 한다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;그 밖의 프로그래밍 관련&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://medium.com/the-node-js-collection/easily-identify-problems-in-node-js-applications-with-diagnostic-report-dc82370d8029"&gt;Easily identify problems in Node.js applications with Diagnostic Report&lt;/a&gt;&lt;/strong&gt; : 별도의 모듈로 있던 Node.js 프로세스를 진단하는 Diagnostic Report API가 노드 코어로 들어와서 프로세스의 힙 덤프나 연결된 SSL 버전 등을 더 쉽게 확인할 수 있다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://steemit.com/kr-dev/@kingori2/koin-2-0"&gt;koin 2.0 맛보기&lt;/a&gt;&lt;/strong&gt; : Kotlin용 의존성 주입 프레임워크인 koin 2.0의 사용법을 안드로이드 개발 환경 위주로 설명하는 글이다.(한국어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;볼만한 링크&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.inven.co.kr/webzine/news/?news=216524"&gt;[연대기] '게임왕' 마이크 모하임, 그 위대한 27년의 기록&lt;/a&gt;&lt;/strong&gt; : 마이크 모하임이 "실리콘&amp;amp;시냅스"부터 "블리자드"를 만들고 이제 은퇴하기까지 그간의 과정을 정리한 글이다. 꼭 게임을 엄청나게 좋아하지 않더라도 블리자드를 무시할 수 없는데 마이크 모하임이 블리자드와 함께 어떻게 발전해 왔는지에 대한 일대기가 정리되어 있어서 재미있는 글이다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://brunch.co.kr/@javajigi/4"&gt;후배 개발자에게 - 2019년&lt;/a&gt;&lt;/strong&gt; : 현업에서 오랜 경험을 가지고 지금은 교육자의 길을 걷고 계신 자바지기님이 후배 개발자들이 성장하기 위해서 도움이 될만한 내용을 정리해서 쓴 글이다. SI 개발자들한테 욕먹을 생각으로 "하루라도 빨리 떠나라"라고 하신 것처럼 나도 욕먹을까 봐 얘기하진 못했지만, 기본적으로 생각하는 내용은 거의 같다. 구체적인 실천사례보다는 방향을 위주로 얘기하고 있지만, 개발자의 진로에 대해서 고민하고 있다면 한번 읽어볼 가치가 있는 글이다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://newspeppermint.com/2018/04/03/fblikeprofiling/"&gt;페이스북의 '좋아요'는 어떻게 프로파일링에 사용되었는가&lt;/a&gt;&lt;/strong&gt; : 페이스북 - 케임브리지 아날리티카 스캔들은 정리한 &lt;a href="https://theconversation.com/how-cambridge-analyticas-facebook-targeting-model-really-worked-according-to-the-person-who-built-it-94078"&gt;How Cambridge Analytica’s Facebook targeting model really worked - according to the person who built it&lt;/a&gt;를 번역한 글이다. 데이터 분석 쪽은 잘 모르지만, 이 스캔들의 핵심인 코건과 메일을 주고받은 내용을 바탕으로 페이스북 사용자의 좋아요를 넷플릭스의 추천알고리즘과 유사한 데이터 차원 축소 방식으로 분석했다고 하고 이를 통해 사용자의 정당 지지 여부를 85%까지 예측할 수 있다고 한다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://insights.stackoverflow.com/survey/2019"&gt;Stack Overflow Developer Survey Results 2019&lt;/a&gt;&lt;/strong&gt; : Stack Overflow가 매년 사용자를 대상으로 진행한 설문 결과를 공개했다. 이 결과를 통해 Stack Overflow의 사용자들이 지역이나 성별, 선호 기술, 연차 등 아주 자세한 설문 결과의 통계를 볼 수 있다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://digg.com/2019/tech-companies-main-revenue-stream-data-visualization"&gt;How The Big Five Tech Companies Make Their Money, Visualized&lt;/a&gt;&lt;/strong&gt; : Apple, Amazon, Facebook, Alphabet, Microsoft가 주 수익이 어디서 나오는지를 정리한 글이다. 애플은 아이폰에서, 아마존은 온라인스토어에서 반 이상의 이익을 얻고 있고 페이스북과 알파벳은 광고에서 대부분의 이익을 얻고 있다. 마이크로소프트는 오피스의 수익이 가장 크지만 비교적 고르게 수익구조가 나누어져 있다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.19192019.com/"&gt;100주년 기념 서체&lt;/a&gt;&lt;/strong&gt; : 윤디자인에서 3.1운동 및 대한민국임시정부 수립 100주년을 기념해서 4종의 무료 폰트를 공개했다.(한국어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;IT 업계 뉴스&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.forbes.com/sites/alexkonrad/2019/04/11/pagerdutys-ipo-values-it-at-18-billion--heres-why-it-had-doubters-early-on/"&gt;PagerDuty Hits $1.8 Billion Valuation At IPO—Here's Why It Had Doubters Early On&lt;/a&gt;&lt;/strong&gt; : 지난 11일 장애 알림을 전파하는 PagerDuty가 18억 달러 규모로 상장하고 첫날 60% 가까이 상승한 $38.25로 가격으로 거래되어 첫날 28억 달러로 마감했다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.sec.gov/Archives/edgar/data/1543151/000119312519103850/d647752ds1.htm"&gt;Uber S-1&lt;/a&gt;&lt;/strong&gt; : Uber가 상장을 위해 증권거래소에 S-1 문서를 제출했다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;프로젝트&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://goreleaser.com/"&gt;GoReleaser&lt;/a&gt;&lt;/strong&gt; : Go 프로젝트의 릴리스 자동화 도구.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/doyensec/electronegativity"&gt;Electronegativity&lt;/a&gt;&lt;/strong&gt; : Electron 애플리케이션의 설정이 잘못된 부분이나 보안 관련 안티패턴을 찾아주는 도구.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://giistr.com"&gt;Giistr&lt;/a&gt;&lt;/strong&gt; : GitHub에서 Star를 누른 프로젝트를 기준으로 기여할 수 있는 이슈를 쉽게 검색할 수 있도록 하는 서비스.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://flawlessapp.io/designtools"&gt;Awesome Design Tools&lt;/a&gt;&lt;/strong&gt; : 디자인 관련 도구를 주제별로 정리해 놓은 사이트.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Microsoft/pyright"&gt;pyright&lt;/a&gt;&lt;/strong&gt; : Microsoft에서 만든 Python 정적 타입 검사기.&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;버전 업데이트&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://nodejs.org/"&gt;Node.js&lt;/a&gt; v11.14.0 (Current)&lt;/strong&gt; : 자바스크립트 런타임, &lt;a href="https://nodejs.org/en/blog/release/v11.14.0/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://mochajs.org/"&gt;mocha&lt;/a&gt; v6.1.3&lt;/strong&gt; : JavaScript 테스트 프레임워크, &lt;a href="https://github.com/mochajs/mocha/releases/tag/v6.1.3"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://jquery.com/"&gt;jQuery&lt;/a&gt; v3.4.0&lt;/strong&gt; : JavaScript 라이브러리, &lt;a href="http://blog.jquery.com/2019/04/10/jquery-3-4-0-released/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://pm2.io/"&gt;pm2&lt;/a&gt; v3.5.0&lt;/strong&gt;: Node.js 프로세스 관리자, &lt;a href="https://github.com/Unitech/pm2/releases"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://nestjs.com/"&gt;nest.js&lt;/a&gt; v6.1.0&lt;/strong&gt; : Node.js 웹 프레이워크, &lt;a href="https://github.com/nestjs/nest/releases/tag/v6.1.0"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/asciidoctor/asciidoctor.js"&gt;Asciidoctor.js&lt;/a&gt; v2.0&lt;/strong&gt; : Asciidoctor의 JavaScript 버전, &lt;a href="https://github.com/asciidoctor/asciidoctor.js/releases/tag/v2.0.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rollup/rollup"&gt;Rollup&lt;/a&gt; v1.10.0&lt;/strong&gt; : JavaScript 번들러, &lt;a href="https://github.com/rollup/rollup/blob/master/CHANGELOG.md#1100"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; v2.2&lt;/strong&gt; : Python 웹 프레임워크, &lt;a href="https://www.djangoproject.com/weblog/2019/apr/01/django-22-released/"&gt;릴리스 공지&lt;/a&gt;, &lt;a href="https://www.44bits.io/ko/post/django-2-2-release-note-summary"&gt;Django 2.2 LTS 릴리스와 주요 변경 사항&lt;/a&gt; 참고.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.nomadproject.io/"&gt;Nomad&lt;/a&gt; v0.9&lt;/strong&gt; : HashiCorp의 배포도구, &lt;a href="https://www.hashicorp.com/blog/hashicorp-nomad-0-9"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://grafana.org/"&gt;Grafana&lt;/a&gt; v6.1&lt;/strong&gt; : 매트릭 대쉬보드, &lt;a href="https://grafana.com/blog/2019/04/03/grafana-v6.1-released/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.elastic.co/kr/products"&gt;Elastic Stack&lt;/a&gt; v7.0.0&lt;/strong&gt; : 엘라스틱 스택, &lt;a href="https://www.elastic.co/blog/elastic-stack-7-0-0-released"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://coredns.io/"&gt;CoreDNS&lt;/a&gt; v1.5.0&lt;/strong&gt; : DNS, 서비스 디스커버리, &lt;a href="https://coredns.io/2019/04/06/coredns-1.5.0-release/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.rust-lang.org/"&gt;Rust&lt;/a&gt; 1.34.0&lt;/strong&gt; : 프로그래밍 언어, &lt;a href="https://blog.rust-lang.org/2019/04/11/Rust-1.34.0.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://kotlinlang.org/"&gt;Kotlin&lt;/a&gt; v1.3.30&lt;/strong&gt; : JVM 기반의 프로그래밍 언어, &lt;a href="https://blog.jetbrains.com/kotlin/2019/04/kotlin-1-3-30-released/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; v1.36&lt;/strong&gt; : 에디터, &lt;a href="https://blog.atom.io/2019/04/09/atom-1-36.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.gnu.org/software/emacs/emacs.html"&gt;Emacs&lt;/a&gt; v26.2&lt;/strong&gt; : 에디터, &lt;a href="https://lists.gnu.org/archive/html/emacs-devel/2019-04/msg00503.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://emberjs.com/"&gt;ember&lt;/a&gt; v3.9.0&lt;/strong&gt; : JavaScript 프레임워크, &lt;a href="https://blog.emberjs.com/2019/04/10/ember-3-9-released.html"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.outsider.ne.kr/1437?commentInput=true#entry1437WriteComment"&gt;댓글 쓰기&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/rss_outsider_dev/~4/dVkR6xFkPoM" height="1" width="1" alt=""/&gt;</description>
			<category>Newsletter</category>
			<category>AMP</category>
			<category>react</category>
			<category>V8</category>
			<author>outsideris@gmail.com (Outsider)</author>
			<guid isPermaLink="false">https://blog.outsider.ne.kr/1437</guid>
			<comments>https://blog.outsider.ne.kr/1437#entry1437comment</comments>
			<pubDate>Mon, 15 Apr 2019 23:55:52 +0900</pubDate>
		<feedburner:origLink>https://blog.outsider.ne.kr/1437</feedburner:origLink></item>
		<item>
			<title>기술 뉴스 #123 : 19-04-01</title>
			<link>http://feedproxy.google.com/~r/rss_outsider_dev/~3/7DJ4wOw9EWs/1436</link>
			<description>&lt;h1&gt;웹개발 관련&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.saturnsoft.net/network/2019/03/21/quic-http3-1/"&gt;QUIC과 HTTP/3 - 1. UDP기반 전송 프로토콜의 대두&lt;/a&gt;&lt;/strong&gt; : QUIC을 설명하는 시리즈 글인데 1편에서는 TCP에 어떤 특징과 한계가 있어서 UDP 프로토콜을 사용하게 되었는지(QUIC이 UDP를 사용한다) &lt;a href="https://www.saturnsoft.net/network/2019/03/26/quic-http3-2/"&gt;QUIC과 HTTP/3 - 2. 기존의 성능 개선 기법 및 한계&lt;/a&gt;에서는 우리가 사용하는 HTTP에서 지연시간에 영향을 주는 RTT, HoLB를 설명하고 HTTP/2에 특징을 설명하고 있다. 관련 레퍼런스까지 꽤 자세하게 나와 있어서 찬찬히 읽어볼 만하고 본격적으로 QUIC이 등장할 3편이 기대된다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/"&gt;Standardizing WASI: A system interface to run WebAssembly outside the web&lt;/a&gt;&lt;/strong&gt; : WebAssembly가 웹 브라우저 밖에서도 주목을 받으면서 다양한 머신에서 WebAssembly를 실행할 때 브라우저 외에 운영체제에서도 실행할 수 있도록 만들어진 WASI(WebAssembly system interface)를 설명하는 글이다. 왜 WASI가 필요했고 어떻게 구성되어 있는지가 설명되어 있다. WASI에 대해서는 최근에 알게 되었는데 이글을 통해 대충의 개념을 잡을 수 있다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://webkit.org/blog/8685/introducing-the-jetstream-2-benchmark-suite/"&gt;Introducing the JetStream 2 Benchmark Suite&lt;/a&gt;&lt;/strong&gt; : Webkit에서 JavaScript 벤치마크 도구인 JetStream의 새 버전인 &lt;a href="https://browserbench.org/JetStream2.0/"&gt;JetStream 2&lt;/a&gt;를 발표했다. 2에서는 2014년 공개한 이전 버전에서 지원하지 않던 WebAssembly, 웹 워커 등이 추가되었다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://cloud.google.com/blog/products/application-development/amp-for-email-developer-preview"&gt;Introducing the Gmail Developer Preview of AMP in Email&lt;/a&gt;&lt;/strong&gt;: 모바일 콘텐츠를 빠르게 로딩해 주는 AMP를 이메일에서도 사용할 수 있게 한다고 Google에서 발표했다. AMP for Email을 통해서 AMP 컴포넌트를 이메일에서 사용할 수 있어서 더 인터렉티브한 이메일 콘텐츠를 작성할 수 있게 된다고 한다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;그 밖의 프로그래밍 관련&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://engineering.vcnc.co.kr/2019/03/kubernetes-on-aws/"&gt;AWS 서비스를 활용한 Kubernetes 클러스터 구축&lt;/a&gt;&lt;/strong&gt; : 타다에서 AWS에 Kubernetes 클러스터를 구성한 방법을 설명하고 있다. Kubernetes 자체 설명보다는 gRPC를 쓰면서 ingress를 어떻게 구성했는지 컨테이너에서 AWS 권한을 주기 위해서 kube2iam를 적용한 방법, 로그를 수집하기 위해 CloudWatch Logs와 Prometheus를 구성한 방법, 오토스케일링을 위해서 Cluster Autoscaler를 어떻게 사용하고 있는지가 자세히 나와있다. AWS에서 Kubernetes를 구축한다면 큰 도움이 될 글이다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://snyk.io/blog/introducing-experimental-integrity-policies-to-node-js/"&gt;Introducing experimental integrity policies to Node.js&lt;/a&gt;&lt;/strong&gt; : Node.js 11.8.0에 실험적으로 들어간 &lt;code&gt;integrity&lt;/code&gt; 정책에 관해 설명하는 기능이다. 이는 웹브라우저가 리소스의 무결성을 검사하는 &lt;code&gt;integrity&lt;/code&gt;와 마찬가지로 모듈이 조작되었는지 검사한 뒤 이상이 없으면 메모리에 올린다. 11.8.0에는 모듈 로더가 만 포함되었고 정책 manifest를 다루는 기능은 아직 들어가지 않았으므로 &lt;a href="https://github.com/bmeck/node-policy"&gt;&lt;code&gt;node-policy&lt;/code&gt;&lt;/a&gt;를 설치해서 테스트해 보아야 한다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.elastic.co/blog/elastic-infrastructure-app-released"&gt;Elastic Infrastructure GA Released&lt;/a&gt;&lt;/strong&gt; : Elastic Stack에서 인프라스트럭처의 매트릭을 모니터링하는 &lt;a href=""&gt;Elastic Infrastructure&lt;/a&gt;가 GA로 릴리스 되었다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;볼만한 링크&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.ianbicking.org/blog/2019/03/open-source-doesnt-make-money-by-design.html"&gt;Open Source Doesn’t Make Money Because It Isn’t Designed To Make Money&lt;/a&gt;&lt;/strong&gt; : 오픈소스는 돈을 벌기 위해 만들어지지 않았으므로 돈을 벌기 어렵다는 얘기의 글이다. 광고나 호스팅 서비스, 컨설팅 등 우리가 주로 돈을 내고 쓰는 제품들을 설명하고 오픈소스에는 비즈니스적인 관점이 있으므로 이런 부분을 해결하지 않으면 돈을 벌기 어렵다고 얘기하고 있다. 최근 &lt;a href="https://aws.amazon.com/ko/blogs/korea/keeping-open-source-open-open-distro-for-elasticsearch/"&gt;AWS의 Open Distro for Elasticsearch&lt;/a&gt;도 있고 해서 생각해 볼만한 주제이다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.vw-lab.com/64"&gt;많은 양의 개체들을 시각화하는 방법, 그리고 전국의 모든 건물&lt;/a&gt;&lt;/strong&gt; : 인구의 이동이나 각 건물 등을 대량의 데이터를 시각화하면서 개선한 내용을 설명하고 있다. 그려야 할 개체들이 많으므로 처음 Java로 구현했을 때는 렌더링에 6시간이 걸렸지만, 프로세싱으로 100초로 줄였지만 이마저도 OpenGL로 0.03초 이하로 줄이면서 시각화를 더 인터렉티브 할 수 있게 만들게 된다. 여기서 Mesh Shader라는 새로운 방식으로 더 개선하는 내용까지 나오는데 렌더링에 대한 전문 지식이 없더라도 재미있게 읽을 수 있다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://blog.dramancompany.com/2019/03/%EB%93%9C%EB%9D%BC%EB%A7%88-qa%ED%8C%80%EC%9D%B4-%ED%95%98%EB%8A%94-%EC%9D%BC/"&gt;리멤버 QA팀이 하는 일&lt;/a&gt;&lt;/strong&gt; : 드라마앤컴퍼니에서 QA팀이 앱 테스트를 개선하는 과정을 설명하고 있다. 매번 전수 테스트를 하면서 점점 비효율적으로 되어서 테스트 시나리오의 기능별 분할을 통해서 수정 내용에 따라 테스트를 효율적으로 진행할 수 있게 하고 자동화할 수 있는 부분은 Appium과 Selenium을 통해 테스트를 자동화했다고 한다. QA에서 API를 배워서 테스트의 효율 및 개발팀과의 협업을 개선한 부분도 흥미롭다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://blog.goorm.io/please-call-me-goorm/"&gt;스타트업에서 디자인과 고군분투하기 : 브알못의 로고 리디자인&lt;/a&gt;&lt;/strong&gt; : 서비스 "구름"을 만드는 코다임에서 사명을 구름으로 바꾸기로 하면서 새로 로고를 디자인한 과정을 나와 있다. 새 로고의 컨셉을 정하는 부분부터 다양한 디자인을 통해서 사내에 피드백을 통해서 로고를 정하고 이를 다듬는 과정을 보여주고 있다.(한국어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;IT 업계 뉴스&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://slack.com/enterprise-key-management"&gt;Slack Enterprise Key Management&lt;/a&gt;&lt;/strong&gt; : Slack 엔터프라이즈 버전에서 키를 암호화해서 관리할 수 있는 EKM(Enterprise Key Management) 기능이 발표되었다. 업무용으로 쓰다 보니 키 파일이나 비밀번호 등 민감한 데이터를 Slack으로 주고받는 경우가 많은데 EKM을 사용하면 Slack에서 이를 안전하게 관리할 수 있다. 구현에 대한 세부 내용은 &lt;a href="https://slack.engineering/engineering-dive-into-slack-enterprise-key-management-1fce471b178c"&gt;How We Built Slack Enterprise Key Management&lt;/a&gt;에서 볼 수 있다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.inven.co.kr/webzine/news/?news=217065"&gt;[GDC2019] 언제 어디서나 플레이, 구글 스트리밍 서비스 '스태디아' 공개&lt;/a&gt;&lt;/strong&gt; : Google이 스티리밍 게임 서비스 Stadia를 공개했다.(한국어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://techcrunch.com/2019/03/28/lyft-prices-ipo-at-top-of-range/"&gt;Lyft prices IPO at top of range&lt;/a&gt;&lt;/strong&gt; : Lyft가 $72로 나스닥에 상장하기로 결정되었고 평가가치는 27조 원 정도이다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://musically.com/2019/03/25/pinterest-ipo-filing-reveals-plenty-of-data/"&gt;Pinterest IPO filing reveals plenty of data&lt;/a&gt;&lt;/strong&gt; : Pinterest가 상장을 위해 S1 문서를 작성해서 공개했다. 이 문서에 따르면 2억 6천 5백만의 MAU를 기록하고 있으면 연간 소득이 7억 5천만 달러 이상이라고 한다.(영어)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://stackoverflow.blog/2019/03/28/the-next-ceo-of-stack-overflow/"&gt;The Next CEO of Stack Overflow&lt;/a&gt;&lt;/strong&gt; : 조엘 스폴스키가 Stack OVerflow의 CEO에서 물러나고 새로운 CEO를 찾고 있다고 밝혔다.(영어)&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;프로젝트&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/bfred-it/github-issue-link-status"&gt;GitHub Issue Link Status&lt;/a&gt;&lt;/strong&gt; : GitHub의 이슈 링크에서 열렸는지 닫혔는지 등 상태를 색상으로 표시해 주는 브라우저(크롬, 파이어폭스, 오페라) 확장 프로그램.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/toolmantim/release-drafter"&gt;Release Drafter&lt;/a&gt;&lt;/strong&gt; : Pull Request가 머지되면 draft 릴리스를 업데이트해 주는 GitHub App.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ozbillwang/terraform-best-practices"&gt;terraform-best-practices&lt;/a&gt;&lt;/strong&gt; : Terraform 사용 팁을 모아놓은 저장소.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://chrome.google.com/webstore/detail/한글-맞춤법-검사기/cdaobjknnljdidejlgjlmmkfjaglnfll"&gt;한글 맞춤법 검사기&lt;/a&gt;&lt;/strong&gt; : Facebook, Twitter, GitHub 등에서 글을 작성할 때 맞춤법 검사를 도와주는 크롬 익스텐션.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/fastly/lucet"&gt;Lucet&lt;/a&gt;&lt;/strong&gt; : Fastly에서 만든 웹어셉블리 컴파일러.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/godaddy/kubernetes-client"&gt;kubernetes-client&lt;/a&gt;&lt;/strong&gt; : GoDaddy에서 Node.js로 만든 Kubernetes API 클라이언트.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/davidmarkclements/0x"&gt;0x&lt;/a&gt;&lt;/strong&gt; : Node.js 프로세스를 프로파일링하는 프레임 그래프를 생성해 주는 도구.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/facebookincubator/ptr"&gt;ptr&lt;/a&gt;&lt;/strong&gt; : Python 테스트 러너.&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;버전 업데이트&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt; v7.4.0&lt;/strong&gt; : JavaScript 컴파일러, &lt;a href="https://babeljs.io/blog/2019/03/19/7.4.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; v3.4&lt;/strong&gt; : Microsoft가 만든 JavaScript transpiler, &lt;a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://chromium.googlesource.com/v8/v8.git"&gt;V8&lt;/a&gt; v7.4&lt;/strong&gt; : JavaScript 엔진, &lt;a href="https://v8.dev/blog/v8-release-74"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://reacttraining.com/react-router/"&gt;React Router&lt;/a&gt; v5.0.0&lt;/strong&gt; : React의 라우팅 라이브러리, &lt;a href="https://reacttraining.com/blog/react-router-v5/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://nuxtjs.org/"&gt;Nuxt.js&lt;/a&gt; v2.5.0&lt;/strong&gt; : 서버렌더링 Vue.js 애플리케이션 프레임워크, &lt;a href="https://github.com/nuxt/nuxt.js/releases/tag/v2.5.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/webpack/webpack-cli"&gt;webpack-cli&lt;/a&gt; v3.3.0&lt;/strong&gt; : Webpack의 커맨드라인 인터페이스, &lt;a href="https://github.com/webpack/webpack-cli/releases/tag/v.3.3.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://eslint.org/"&gt;ESLint&lt;/a&gt; v5.16.0&lt;/strong&gt; : JavaScript 코드 분석 도구, &lt;a href="https://eslint.org/blog/2019/03/eslint-v5.16.0-released"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rollup/rollup"&gt;Rollup&lt;/a&gt; v1.7.0&lt;/strong&gt; : JavaScript 번들러, &lt;a href="https://github.com/rollup/rollup/blob/master/CHANGELOG.md#170"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://jdk.java.net/"&gt;JDK&lt;/a&gt; 12&lt;/strong&gt; : Oracle Java Development Kit, &lt;a href="https://blogs.oracle.com/thejavatutorials/jdk-12-has-been-released"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://projects.spring.io/spring-boot/"&gt;Spring Boot&lt;/a&gt; v2.2.0&lt;/strong&gt; : 스프링 애플리케이션의 구축을 도와주는 도구, &lt;a href="https://spring.io/blog/2018/10/30/spring-boot-2-1-0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://spring.io/tools4"&gt;Spring Tools&lt;/a&gt; 4.2.0&lt;/strong&gt; : Spring 코딩 환경을 위한 도구, &lt;a href="https://spring.io/blog/2019/03/29/spring-tools-4-2-0-released"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://gradle.org/"&gt;Gradle&lt;/a&gt; v5.3&lt;/strong&gt; : Java 빌드 도구, &lt;a href="https://docs.gradle.org/5.3/release-notes.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://llvm.org/"&gt;LLVM&lt;/a&gt; v8.0.0&lt;/strong&gt; : 컴파일러, &lt;a href="http://releases.llvm.org/8.0.0/docs/ReleaseNotes.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; 1.14&lt;/strong&gt; : 컨테이너 오케스트레이션 도구, &lt;a href="https://kubernetes.io/blog/2019/03/25/kubernetes-1-14-release-announcement/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.vaultproject.io/"&gt;Vault&lt;/a&gt; v1.1&lt;/strong&gt; : 시크릿 정보 관리 도구, &lt;a href="https://www.hashicorp.com/blog/vault-1-1"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://konghq.com/"&gt;Kong&lt;/a&gt; 1.1&lt;/strong&gt; : API 게이트웨이, &lt;a href="https://konghq.com/blog/kong-1-1-released/"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://pypy.org/"&gt;PyPy&lt;/a&gt; v7.1.0&lt;/strong&gt; : Python 구현체, &lt;a href="https://morepypy.blogspot.com/2019/03/pypy-v71-released-now-uses-utf-8.html"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://libuv.org/"&gt;libuv&lt;/a&gt; v1.27.0&lt;/strong&gt; : Node.js의 비동기 I/O 라이브러리, &lt;a href="https://github.com/libuv/libuv/releases/tag/v1.27.0"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://repo.yona.io/yona-projects/yona"&gt;Yona&lt;/a&gt; v1.12.0&lt;/strong&gt; : 설치형 이슈 트래커, &lt;a href="https://github.com/yona-projects/yona/releases/tag/v1.12.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://probot.github.io/"&gt;Probot&lt;/a&gt; v9.0&lt;/strong&gt; : GitHub 앱을 만들 수 있는 프레임워크, &lt;a href="https://github.com/probot/probot/releases/tag/v9.0.0"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.elastic.co/kr/products"&gt;Elastic Stack&lt;/a&gt; v6.7.0&lt;/strong&gt; : 엘라스틱 스택, &lt;a href="https://www.elastic.co/kr/blog/elastic-stack-6-7-0-released"&gt;릴리스 공지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.fastify.io/"&gt;fastify&lt;/a&gt; v2.1.0&lt;/strong&gt; : Node.js 웹 프레임워크, &lt;a href="https://github.com/fastify/fastify/releases/tag/v2.1.0"&gt;변경사항&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.outsider.ne.kr/1436?commentInput=true#entry1436WriteComment"&gt;댓글 쓰기&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/rss_outsider_dev/~4/7DJ4wOw9EWs" height="1" width="1" alt=""/&gt;</description>
			<category>Newsletter</category>
			<category>HTTP/3</category>
			<category>JetStream</category>
			<category>kubernetes</category>
			<category>QUIC</category>
			<category>WASI</category>
			<category>wasm</category>
			<author>outsideris@gmail.com (Outsider)</author>
			<guid isPermaLink="false">https://blog.outsider.ne.kr/1436</guid>
			<comments>https://blog.outsider.ne.kr/1436#entry1436comment</comments>
			<pubDate>Mon, 01 Apr 2019 18:22:27 +0900</pubDate>
		<feedburner:origLink>https://blog.outsider.ne.kr/1436</feedburner:origLink></item>
	</channel>
</rss>
