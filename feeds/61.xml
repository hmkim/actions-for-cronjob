<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://dataninja.me/feed.xml" rel="self" type="application/atom+xml" /><link href="http://dataninja.me/" rel="alternate" type="text/html" /><updated>2018-08-05T02:43:53+00:00</updated><id>http://dataninja.me/</id><title type="html">Data Science Fun</title><subtitle>R, 파이썬(Python), 데이터 과학 (data science) 이야기. 실리콘밸리 데이터과학자 권재명 (Jaimie Kwon) 의 홈페이지입니다.</subtitle><entry><title type="html">Moving from WordPress.com to Github Pages to Netlify</title><link href="http://dataninja.me/2017/12/31/moving-from-wordpress-com-github-pages-to-netlify/" rel="alternate" type="text/html" title="Moving from WordPress.com to Github Pages to Netlify" /><published>2017-12-31T00:00:00+00:00</published><updated>2017-12-31T00:00:00+00:00</updated><id>http://dataninja.me/2017/12/31/moving-from-wordpress-com-github-pages-to-netlify</id><content type="html" xml:base="http://dataninja.me/2017/12/31/moving-from-wordpress-com-github-pages-to-netlify/">&lt;p&gt;&lt;strong&gt;TL;DR: I migrated my homepage from
WordPress.com to GitHub Pages for speed and flexibilty,
then to Netlify for HTTPS support.&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;WordPress.com&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;GitHub Pages&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Netlify&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Easy to Use?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Use Git+Markdown&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Use Git+Markdown&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cost&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Free for basic&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Free for basic&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Free for basic&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Load Speed?&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Slow&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fast&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Fast&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Flexibility&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Low&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Very flexible&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Very flexible&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;HTTPS for Custom Domain&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Build logs&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NA&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Yes&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Table: Comparison of the 3 platforms.&lt;/p&gt;

&lt;h2 id=&quot;1-from-wordpresscom-&quot;&gt;1. From Wordpress.com …&lt;/h2&gt;

&lt;p&gt;I have been using &lt;a href=&quot;https://wordpress.com&quot;&gt;WordPress.com&lt;/a&gt; to host my homepage at
&lt;a href=&quot;http://dataninja.me&quot;&gt;http://dataninja.me&lt;/a&gt; for almost a year.
It was a good solution for quickly spinning up the site, but
I hit the limit as I was planning to put in more professional contents (python and R markdown stuff).
Overall, for my use cases, WordPress.com was too:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;slow (heavy overhead),&lt;/li&gt;
  &lt;li&gt;ugly (espeically Korean and highlighted codes), and&lt;/li&gt;
  &lt;li&gt;inflexible (e.g. cannot change fonts easily; adding custom pages are hard).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-moving-to-github-pages-&quot;&gt;2. Moving to Github Pages …&lt;/h2&gt;

&lt;p&gt;So, I considered &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; / &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; again.
Last time when I tried to use it (~3 yrs ago),
the static site build process was clunky and it took some work to make the site look pretty.
It seems the situation has changed a lot over past couple of years.
Now, the default theme (&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt;)
looks OK and the build process is simpler and faster.
So, unlike WordPress.com, GitHub page is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;fast to load,&lt;/li&gt;
  &lt;li&gt;pretty by default,&lt;/li&gt;
  &lt;li&gt;flexible, and&lt;/li&gt;
  &lt;li&gt;free.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use GitHub and &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdowns&lt;/a&gt;,
especially, &lt;a href=&quot;http://rmarkdown.rstudio.com/&quot;&gt;R Markdown&lt;/a&gt;,
almost daily anyway. So why not??
So, I decide to switch back.
The process looked like this on OSX.
(Replace &lt;a href=&quot;https://github.com/jaimyoung/jaimyoung.github.io&quot;&gt;https://github.com/jaimyoung/jaimyoung.github.io&lt;/a&gt; with your own GitHub Pages repo.)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Backup the old GitHub Pages repo, if you had one already.
    &lt;ul&gt;
      &lt;li&gt;(In my case, this meant
  moving &lt;a href=&quot;https://github.com/jaimyoung/jaimyoung.github.io&quot;&gt;https://github.com/jaimyoung/jaimyoung.github.io&lt;/a&gt; to
  &lt;a href=&quot;https://github.com/jaimyoung/jaimyoung.github.io-old&quot;&gt;https://github.com/jaimyoung/jaimyoung.github.io-old&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install brew-maintained ruby not to pollute the OSX system ruby
(Of course, your OSX must have &lt;a href=&quot;https://brew.sh/&quot;&gt;homebrew&lt;/a&gt; installed already):&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; brew install ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Install Jekyll per &lt;a href=&quot;https://jekyllrb.com/docs/quickstart/&quot;&gt;Jekyll Quickstart Guide&lt;/a&gt;, i.e.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; gem install jekyll bundler
 jekyll new jaimyoung.github.io
 cd jaimyoung.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create github page repo
 &lt;a href=&quot;https://github.com/jaimyoung/jaimyoung.github.io&quot;&gt;https://github.com/jaimyoung/jaimyoung.github.io&lt;/a&gt;, and
 make the &lt;code class=&quot;highlighter-rouge&quot;&gt;jaimyoung.github.io&lt;/code&gt; directory to track the github repo:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; echo &quot;# jaimyoung.github.io&quot; &amp;gt;&amp;gt; README.md
 git init
 git add README.md
 git commit -m &quot;first commit&quot;
 git remote add origin git@github.com:jaimyoung/jaimyoung.github.io.git
 git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Serve the test site on &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt; by running:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Import old WordPress.com contents per &lt;a href=&quot;http://import.jekyllrb.com/docs/wordpressdotcom/&quot;&gt;WordPress.com to Jekyll import guide&lt;/a&gt;.
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;First you need to install &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-import&lt;/code&gt; (&lt;a href=&quot;https://github.com/jekyll/jekyll-import&quot;&gt;https://github.com/jekyll/jekyll-import&lt;/a&gt;):&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; gem install jekyll-import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;and a couple other dependencies.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Then, export the old WordPress.com contents per direction to some xml file.
 (In my case, I exported from &lt;a href=&quot;https://statkwon.wordpress.com/wp-admin/export.php&quot;&gt;https://statkwon.wordpress.com/wp-admin/export.php&lt;/a&gt;
 to &lt;code class=&quot;highlighter-rouge&quot;&gt;datasciencefun.wordpress.2017-12-25.xml&lt;/code&gt;).&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Copy it over the the blog directory and
 import to the page like:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ruby -rubygems -e 'require &quot;jekyll-import&quot;;
     JekyllImport::Importers::WordpressDotCom.run({
       &quot;source&quot; =&amp;gt; &quot;datasciencefun.wordpress.2017-12-25.xml&quot;,
       &quot;no_fetch_images&quot; =&amp;gt; false,
       &quot;assets_folder&quot; =&amp;gt; &quot;assets&quot;
     })'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Browse the imported files (mostly under &lt;code class=&quot;highlighter-rouge&quot;&gt;_pages&lt;/code&gt; folder in my case),
 clean them up as needed,
 and move them to correct folders or collections.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Modify theme files as needed.
    &lt;ul&gt;
      &lt;li&gt;In my case, I had to overwrite:
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/head.html&lt;/code&gt; : to add font-awesome&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/header.html&lt;/code&gt; : to use custom navigation menu at the top&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/footer.html&lt;/code&gt; : to add linkedin contact as well&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Find the theme files &lt;a href=&quot;https://jekyllrb.com/docs/themes/&quot;&gt;https://jekyllrb.com/docs/themes/&lt;/a&gt; by running:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  bundle show minima
  open $(bundle show minima)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;copy the files to your repo, and make necessary changes.
  See my github repo for the changes I made to above files.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use &lt;a href=&quot;https://jekyllrb.com/docs/collections/&quot;&gt;Jekyll Collections&lt;/a&gt;
 to organize “따라 하며 배우는 데이터 과학” (my Korean data science book)
 pages under
 &lt;code class=&quot;highlighter-rouge&quot;&gt;_ipds-kr/&lt;/code&gt; directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set up redirect for a few pages,
 using &lt;a href=&quot;https://help.github.com/articles/redirects-on-github-pages/&quot;&gt;Redirects on GitHub Pages&lt;/a&gt;.
 In my case, I wanted to move &lt;code class=&quot;highlighter-rouge&quot;&gt;ipds-kr-slides-ppt&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;ipds-kr/slides-ppt&lt;/code&gt;, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set up and add &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; for comments.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set up and add &lt;a href=&quot;https://analytics.google.com&quot;&gt;Google Analytics&lt;/a&gt; for site analytics.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Transfer &lt;code class=&quot;highlighter-rouge&quot;&gt;dataninja.me&lt;/code&gt; custom domain from WordPress.com to
 GitHub Pages per &lt;a href=&quot;https://help.github.com/articles/setting-up-an-apex-domain/&quot;&gt;directions&lt;/a&gt;.
    &lt;ul&gt;
      &lt;li&gt;github help page is a bit unclear; google is your friend here, which gives you
  a more thorough instructions on specific name provider.
  For namecheap.com for example, &lt;a href=&quot;https://www.namecheap.com/support/knowledgebase/article.aspx/9645/2208/how-do-i-link-my-domain-to-github-pages&quot;&gt;this page&lt;/a&gt; was helpful.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;3-then-to-netlify&quot;&gt;3. Then to Netlify…&lt;/h2&gt;

&lt;p&gt;Now everything &lt;em&gt;almost&lt;/em&gt; works.
But it turned out that &lt;strong&gt;github pages doesn’t support HTTPS for custom domain.&lt;/strong&gt;
This is a huge problem for me since:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;There already are quite a few
 &lt;strong&gt;https:&lt;/strong&gt;//dataninja.me domain names on the Facebook, LinkedIn, etc.,&lt;/li&gt;
  &lt;li&gt;Chrome browser doesn’t handle &lt;a href=&quot;https://superuser.com/questions/565409/chrome-how-to-stop-redirect-from-http-to-https&quot;&gt;https to http change easily&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;Google search engine indexing values https a lot higher than http sites, and&lt;/li&gt;
  &lt;li&gt;there seems to be &lt;a href=&quot;https://github.com/isaacs/github/issues/156&quot;&gt;no plan to support https for custom domtain in github&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, Netlify(&lt;a href=&quot;https://www.netlify.com/&quot;&gt;https://www.netlify.com/&lt;/a&gt;) comes to the rescue.
It is mentioned in the &lt;a href=&quot;https://github.com/isaacs/github/issues/156&quot;&gt;above github thread&lt;/a&gt;,
as a great (free) solution that provides HTTPS support for custom domains.
I also found it mentioned in some R markdown/bookdown/blogdown sites, so it looked reputable.&lt;/p&gt;

&lt;p&gt;The process was pretty simple and took ~10 minutes:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Set up netlify account and hook it up to github repo and start building.
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Initially, the build failed (of course) but it was easy to troubleshoot 
 thanks to the build logs like this:&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 6:55:18 PM: ruby_dep-1.5.0 requires ruby version &amp;gt;= 2.2.5, which is incompatible with the
 current version, ruby 2.1.2p95
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;So, that’s a lot more transparent than github (+1).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Thanks to the logs, I could track the build failure to the wrong ruby version.
 To fix, I added &lt;code class=&quot;highlighter-rouge&quot;&gt;.ruby-version&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;2.4.2&lt;/code&gt; per &lt;a href=&quot;https://www.netlify.com/blog/2016/10/18/how-our-build-bots-build-sites/&quot;&gt;help page&lt;/a&gt;
 and the build succeeded.&lt;/li&gt;
      &lt;li&gt;Now, the page is up and running at &lt;a href=&quot;https://${random_words}.netlify.com/&quot;&gt;https://${random_words}.netlify.com/&lt;/a&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Set up DNS.
 Netlify provides their own nameservers, so it was pretty simple to follow their
 directions.&lt;/li&gt;
  &lt;li&gt;Final step is, the original requirement, to get HTTPS working.
 Again, this was super simple and HTTPS certificate was up and running in a few minutes.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After these, the site is now up and running at &lt;a href=&quot;https://dataninja.me/&quot;&gt;https://dataninja.me/&lt;/a&gt;.
Pretty sweet!&lt;/p&gt;

&lt;h3 id=&quot;making-disqus-comments-working-on-netlify&quot;&gt;Making Disqus comments working on Netlify&lt;/h3&gt;
&lt;p&gt;To use Disqus comments, one adds the following line in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;disqus:
  shortname: dataninja-me
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This works in github pages, but Netlify version doesn’t activate the comments.
It is because minima theme has the &lt;a href=&quot;https://github.com/jekyll/minima/blob/master/_includes/disqus_comments.html&quot;&gt;following lines&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if `jekyll.environment == &quot;production&quot;`:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;until it activate disqus comments. 
The environment is set by Github Pages when the site builds,
but Netlify doesn’t, hence no Disqus comments.
To fix it, per &lt;a href=&quot;https://jekyllrb.com/docs/configuration/&quot;&gt;Netlify config directions&lt;/a&gt;,
set this environment variable in the site deploy setting:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`JEKYLL_ENV=production`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(The URL looks like &lt;a href=&quot;https://app.netlify.com/sites/pensive-keller-afeae1/settings/deploys#build-environment-variables&quot;&gt;https://app.netlify.com/sites/pensive-keller-afeae1/settings/deploys#build-environment-variables&lt;/a&gt; in my case).&lt;/p&gt;

&lt;p&gt;Voilà, now the comments works on Netlify.&lt;/p&gt;

&lt;h2 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;I described how I migrated my homepage from
WordPress.com to GitHub Pages for speed and flexibilty,
then to Netlify for HTTPS support.&lt;/p&gt;

&lt;h2 id=&quot;update-in-31118&quot;&gt;Update in 3/11/18&lt;/h2&gt;
&lt;p&gt;After notebook migration,
my xcode build pipeline broke,
which prevents me from installing jekyll =(
After 2 hrs of trying to re-install xcode,
I concluded it’s not worth it and got lazy(!)
and decided to use Docker (of course).
Per &lt;a href=&quot;https://github.com/BretFisher/jekyll-serve&quot;&gt;https://github.com/BretFisher/jekyll-serve&lt;/a&gt;,
This is all I need:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 80:4000 -v $(pwd):/site bretfisher/jekyll-serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Lesson: spend at most 1 hr on your own IT; 
Look for Docker solution after that.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.cloudcannon.com/jekyll/why-use-a-static-site-generator/&quot;&gt;Getting started with Jekyll - Series&lt;/a&gt; by
  CloudCannon&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">TL;DR: I migrated my homepage from WordPress.com to GitHub Pages for speed and flexibilty, then to Netlify for HTTPS support.</summary></entry><entry><title type="html">Routine for Starting a Data Science Project in R</title><link href="http://dataninja.me/2017/08/23/routine-for-starting-a-data-science-project-in-r/" rel="alternate" type="text/html" title="Routine for Starting a Data Science Project in R" /><published>2017-08-23T16:51:01+00:00</published><updated>2017-08-23T16:51:01+00:00</updated><id>http://dataninja.me/2017/08/23/routine-for-starting-a-data-science-project-in-r</id><content type="html" xml:base="http://dataninja.me/2017/08/23/routine-for-starting-a-data-science-project-in-r/">&lt;p&gt;Routine is mostly a good thing. Morning routine, gym routine, bedtime routine, etc. Thanks to routine or good habit, one doesn't spend too much time and energy on deciding on what/how to do it, saving energy for more important questions like &quot;why&quot;.&lt;/p&gt;
&lt;p&gt;Routine is mostly a good thing for data scientist, too. Here's my routine for starting a new data science project in R, large or small:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a github repo for the project with sensible name, all lowercase and dash, no underscore (~1min)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt; to my usual project directory (&lt;code&gt;~/projects/&lt;/code&gt;) (30sec)&lt;/li&gt;
&lt;li&gt;Write &lt;code&gt;README.md&lt;/code&gt; for what the project is about (~1min)&lt;/li&gt;
&lt;li&gt;Fire up Rstudio and create RStudio project (&lt;code&gt;.Rproj&lt;/code&gt;) in the directory (~1min)&lt;/li&gt;
&lt;li&gt;Write the first R script, typically named &lt;code&gt;initial-analysis.R&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;First few lines of the scripts are almost always the same, like:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;df &amp;lt;- read_csv(&quot;datafile&quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;glimpse(df)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;df %&amp;gt;% ggplot(aes(x, y)) + geom_....&lt;/code&gt; : yes... this is where things start to diverge...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, that's about 10min to hit the ground running and start producing useful stuff.&lt;/p&gt;
&lt;p&gt;Once things start rolling, daily routines are similar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bunch of data massaging, like:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;df %&amp;gt;% &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_by(x) %&amp;gt;% &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter(y %in% c(&quot;good&quot;, &quot;fine&quot;)) %&amp;gt;% &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;summarize(mz=median(z))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;... and visualization:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;df %&amp;gt;% &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ggplot(aes(x, y)) + &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_... +&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;facet_wrap(~w)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;... and reporting:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rmarkdown::render(&quot;that-special-markdown.Rmd&quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;... and &lt;code&gt;git commit&lt;/code&gt; / &lt;code&gt;git push&lt;/code&gt; frequently.&lt;/li&gt;
&lt;li&gt;Talk to the stakeholders for questions, news, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But, overall, fairly automatic, fast, and effective. Yes, routine is mostly a good thing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What's your routine&lt;/strong&gt; for starting a data science project in R?&lt;/p&gt;
&lt;p&gt;Very different from mine??&lt;/p&gt;
&lt;p&gt;Let me (and the world) know!&lt;/p&gt;</content><author><name></name></author><summary type="html">Routine is mostly a good thing. Morning routine, gym routine, bedtime routine, etc. Thanks to routine or good habit, one doesn't spend too much time and energy on deciding on what/how to do it, saving energy for more important questions like &quot;why&quot;. Routine is mostly a good thing for data scientist, too. Here's my routine for starting a new data science project in R, large or small: Create a github repo for the project with sensible name, all lowercase and dash, no underscore (~1min) git clone to my usual project directory (~/projects/) (30sec) Write README.md for what the project is about (~1min) Fire up Rstudio and create RStudio project (.Rproj) in the directory (~1min) Write the first R script, typically named initial-analysis.R First few lines of the scripts are almost always the same, like: library(tidyverse) df &amp;lt;- read_csv(&quot;datafile&quot;) glimpse(df) df %&amp;gt;% ggplot(aes(x, y)) + geom_.... : yes... this is where things start to diverge... So, that's about 10min to hit the ground running and start producing useful stuff. Once things start rolling, daily routines are similar: Bunch of data massaging, like: df %&amp;gt;% group_by(x) %&amp;gt;% filter(y %in% c(&quot;good&quot;, &quot;fine&quot;)) %&amp;gt;% summarize(mz=median(z)) ... and visualization: df %&amp;gt;% ggplot(aes(x, y)) + geom_... + facet_wrap(~w) ... and reporting: rmarkdown::render(&quot;that-special-markdown.Rmd&quot;) ... and git commit / git push frequently. Talk to the stakeholders for questions, news, etc. But, overall, fairly automatic, fast, and effective. Yes, routine is mostly a good thing. What's your routine for starting a data science project in R? Very different from mine?? Let me (and the world) know!</summary></entry><entry><title type="html">“따라 하며 배우는 데이터 과학” 출시</title><link href="http://dataninja.me/2017/08/09/%EB%94%B0%EB%9D%BC-%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%BC%ED%95%99-%EC%B6%9C%EC%8B%9C/" rel="alternate" type="text/html" title="&quot;따라 하며 배우는 데이터 과학&quot; 출시" /><published>2017-08-09T08:44:26+00:00</published><updated>2017-08-09T08:44:26+00:00</updated><id>http://dataninja.me/2017/08/09/%EB%94%B0%EB%9D%BC-%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%BC%ED%95%99-%EC%B6%9C%EC%8B%9C</id><content type="html" xml:base="http://dataninja.me/2017/08/09/%EB%94%B0%EB%9D%BC-%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%BC%ED%95%99-%EC%B6%9C%EC%8B%9C/">&lt;p&gt;무사히 출판 되어 배송 중입니다. 배송 받으신 분들도 있고요.&lt;/p&gt;
&lt;p&gt;교보문고 컴퓨터/IT 분야에서 12위라고 하니 관심에 감사드립니다! ( &lt;a href=&quot;http://mobile.kyobobook.co.kr/showcase/book/KOR/9791185890869&quot;&gt;교보문고 책 주문&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;정오표와 보충 내용을 계속 업뎃할 예정이니 책을 사신 분은 책의 &lt;a href=&quot;https://www.facebook.com/dataninja.me/&quot;&gt;페북 페이지&lt;/a&gt;를 팔로우해주세요.&lt;/p&gt;
&lt;p&gt;http://mobile.kyobobook.co.kr/showcase/bestseller/KOR?categoryCode=WEEK&amp;amp;linkClass=33&amp;amp;orderClick=Ols&lt;br /&gt;
&lt;img src=&quot;/assets/img_0270.jpg&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">무사히 출판 되어 배송 중입니다. 배송 받으신 분들도 있고요. 교보문고 컴퓨터/IT 분야에서 12위라고 하니 관심에 감사드립니다! ( 교보문고 책 주문 ) 정오표와 보충 내용을 계속 업뎃할 예정이니 책을 사신 분은 책의 페북 페이지를 팔로우해주세요. http://mobile.kyobobook.co.kr/showcase/bestseller/KOR?categoryCode=WEEK&amp;amp;linkClass=33&amp;amp;orderClick=Ols</summary></entry><entry><title type="html">Data Science DevOps and Docker</title><link href="http://dataninja.me/2017/08/05/data-science-devops-and-docker/" rel="alternate" type="text/html" title="Data Science DevOps and Docker" /><published>2017-08-06T05:58:36+00:00</published><updated>2017-08-06T05:58:36+00:00</updated><id>http://dataninja.me/2017/08/05/data-science-devops-and-docker</id><content type="html" xml:base="http://dataninja.me/2017/08/05/data-science-devops-and-docker/">&lt;p&gt;Data scientists sometimes have to (help) “productionize” their work, i.e. integrate data analysis, dashboard, and predictive modeling into a larger process or software pipeline. For example, imagine a system that (1) monitors for a data change, (2) triggers data analysis process whenever a change happens, and (3) takes the output of the analysis to show a webpage and/or store output parameters in a database for other systems to use.&lt;/p&gt;
&lt;p&gt;Data scientists typically work in part (2), prototyping bunch of R or python codes. But when it’s time to build and deploy the system, integrating such data science codes is not trivial. A big challenge is that Data scientists' work environment (e.g. Macbook laptop with R and many, many, many R packages) is typically very different from a “deployment” environment (e.g. linux box in AWS EC2 or corp VMs). Installing R and bunch of dependency R libraries on the machine is frowned upon by ops and software engineers, since it’s usually a painful, fragile process.&lt;/p&gt;
&lt;p&gt;In an ideal world, R / python codes data scientist developed on their laptop would “just work” when dropped on the deployment server(s). Too good to be true?? Well, that ideal world is here already thanks to the fantastic technology called “&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;”. Using Docker, data science analysis and prototype could become super close to something that could be deployed very fast and efficiently. Just like devops helped developers productionize and operationalize their work better. We can even call it “data science devops”.&lt;img class=&quot; size-full wp-image-509 alignright&quot; src=&quot;/assets/vertical_large.png&quot; alt=&quot;vertical_large&quot; width=&quot;286&quot; height=&quot;237&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Essentially, the first step to achieve data science devops consist of two practices:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Make the R codes into a command line script&lt;/strong&gt; that could be executed via &lt;a href=&quot;https://stat.ethz.ch/R-manual/R-devel/library/utils/html/Rscript.html&quot;&gt;Rscript&lt;/a&gt;, preferably with advanced option parsers like &lt;a href=&quot;https://cran.r-project.org/web/packages/argparse/index.html&quot;&gt;R argparse&lt;/a&gt;. This has the added benefit of forcing &lt;a href=&quot;https://en.wikipedia.org/wiki/Reproducibility&quot;&gt;reproducibility&lt;/a&gt;. Also data scientists are forced to think more in terms of API way and “&lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_philosophy&quot;&gt;do one thing well&lt;/a&gt;” (UNIX philosophy) mentality that lead to cleaner code structure.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Dockerize the R application&lt;/b&gt;. Start with, e.g. &lt;a href=&quot;https://hub.docker.com/r/rocker/verse/&quot;&gt;rocker/verse&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/&quot;&gt;add/modify&lt;/a&gt;&lt;a href=&quot;https://github.com/rocker-org/rocker-versioned&quot;&gt;Dockerfile&lt;/a&gt; as needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With the above two practices, on any machine with Docker installed, the app could be &quot;deployed&quot; like:&lt;/p&gt;
&lt;pre&gt;$ docker pull your-org/my-r-app&lt;/pre&gt;
&lt;p&gt;and could be run like:&lt;/p&gt;
&lt;pre&gt;$ docker run your-org/my-r-app ARG1, ARG2, ...&lt;/pre&gt;
&lt;p&gt;The beauty is that, it will run in ANY environment where Docker is installed: your Mac or Windows laptop, EC2 linux host, Your corp VM, and so on.&lt;/p&gt;
&lt;p&gt;Is it actually easy? NO. You actually need to spend good ~100 hours or so to be at home writing your own Dockerfile with confidence. Is learning how to dockerize R app helpful? YES, very much so. Once you make the habit of developing your R analysis pipeline in a Dockerized, reproducible setting, your codes will be cleaner, more reproducible, and super easy to deploy. Your dev / ops coworkers will thank you. You and your team’s productivity will improve (YMMV).&lt;/p&gt;
&lt;p&gt;So, dear fellow data scientists --- &lt;a href=&quot;https://docs.docker.com/engine/installation/&quot;&gt;install Docker&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/get-started/&quot;&gt;start learning how to use it;&lt;/a&gt; Welcome to data science devops.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</content><author><name></name></author><category term="devops" /><category term="docker" /><category term="R" /><summary type="html">Data scientists sometimes have to (help) “productionize” their work, i.e. integrate data analysis, dashboard, and predictive modeling into a larger process or software pipeline. For example, imagine a system that (1) monitors for a data change, (2) triggers data analysis process whenever a change happens, and (3) takes the output of the analysis to show a webpage and/or store output parameters in a database for other systems to use. Data scientists typically work in part (2), prototyping bunch of R or python codes. But when it’s time to build and deploy the system, integrating such data science codes is not trivial. A big challenge is that Data scientists' work environment (e.g. Macbook laptop with R and many, many, many R packages) is typically very different from a “deployment” environment (e.g. linux box in AWS EC2 or corp VMs). Installing R and bunch of dependency R libraries on the machine is frowned upon by ops and software engineers, since it’s usually a painful, fragile process. In an ideal world, R / python codes data scientist developed on their laptop would “just work” when dropped on the deployment server(s). Too good to be true?? Well, that ideal world is here already thanks to the fantastic technology called “Docker”. Using Docker, data science analysis and prototype could become super close to something that could be deployed very fast and efficiently. Just like devops helped developers productionize and operationalize their work better. We can even call it “data science devops”. Essentially, the first step to achieve data science devops consist of two practices: Make the R codes into a command line script that could be executed via Rscript, preferably with advanced option parsers like R argparse. This has the added benefit of forcing reproducibility. Also data scientists are forced to think more in terms of API way and “do one thing well” (UNIX philosophy) mentality that lead to cleaner code structure. Dockerize the R application. Start with, e.g. rocker/verse and add/modifyDockerfile as needed. With the above two practices, on any machine with Docker installed, the app could be &quot;deployed&quot; like: $ docker pull your-org/my-r-app and could be run like: $ docker run your-org/my-r-app ARG1, ARG2, ... The beauty is that, it will run in ANY environment where Docker is installed: your Mac or Windows laptop, EC2 linux host, Your corp VM, and so on. Is it actually easy? NO. You actually need to spend good ~100 hours or so to be at home writing your own Dockerfile with confidence. Is learning how to dockerize R app helpful? YES, very much so. Once you make the habit of developing your R analysis pipeline in a Dockerized, reproducible setting, your codes will be cleaner, more reproducible, and super easy to deploy. Your dev / ops coworkers will thank you. You and your team’s productivity will improve (YMMV). So, dear fellow data scientists --- install Docker and start learning how to use it; Welcome to data science devops. &amp;nbsp;</summary></entry><entry><title type="html">Lessons learned while Writing R Data Science Book</title><link href="http://dataninja.me/2017/04/21/lessons-learned-while-writing-r-data-science-book/" rel="alternate" type="text/html" title="Lessons learned while Writing R Data Science Book" /><published>2017-04-21T08:08:02+00:00</published><updated>2017-04-21T08:08:02+00:00</updated><id>http://dataninja.me/2017/04/21/lessons-learned-while-writing-r-data-science-book</id><content type="html" xml:base="http://dataninja.me/2017/04/21/lessons-learned-while-writing-r-data-science-book/">&lt;p&gt;The publisher told me that my R data science book (in Korean! Not English, yet) manuscript is currently undergoing a second proofreading and it will be published around June after the final review. The process took me almost two years since 2015 when I was first asked to write it. I would like to share a few tips that I learned during the writing process.&lt;/p&gt;

&lt;h2 id=&quot;1-writing-a-book-is-hard&quot;&gt;1. Writing a book is hard&lt;/h2&gt;
&lt;p&gt;Understand that it is hard to write a book before accepting an offer to write one. I have written dozens of ~10-page &lt;a href=&quot;https://scholar.google.com/citations?user=tVkKxokAAAAJ&quot;&gt;academic papers&lt;/a&gt; and am familiar with the paper writing process. That was why I accepted the challenge to write a long form book relatively easily, thinking “How different would writing a book be from writing a few papers?” The two turned out to be very different!&lt;/p&gt;

&lt;p&gt;Academic papers are aimed at professional audience (hence, paradoxically, easier to write!), short, and the draft is completed typically within a week or two. Writing an academic paper is like running a 1 km race (Of course, one or two weeks only include “writing”; research work itself takes a lot longer).&lt;/p&gt;

&lt;p&gt;On the other hand, books are typically aimed at general audience, long, and takes at least a few months to write. Writing a book is like running a marathon. It requires better planning, more disciplined pacing, and lots of patience and perseverance. It was a particularly challenging and humbling experience for me, who tend to work better in many small projects in bursts.&lt;/p&gt;

&lt;h2 id=&quot;2-get-feedback-early-on&quot;&gt;2. Get feedback early on&lt;/h2&gt;
&lt;p&gt;Seek feedback on your writing early and often. Feedback is essential for good writing in general. (See &lt;a href=&quot;http://stevenpinker.com/publications/sense-style-thinking-persons-guide-writing-21st-century&quot;&gt;“the Sense of Style”&lt;/a&gt; for a great general introduction that touches on feedback and other guidances on good writing in general.) When writing a book, getting feedback has additional benefit of adding a few small milestones (make the whole process more incremental and agile). Also, feedbacks make book writing a lot more social and less lonely endeavor.&lt;/p&gt;

&lt;h2 id=&quot;3-collaborate-with-google-doc&quot;&gt;3. Collaborate with Google doc&lt;/h2&gt;
&lt;p&gt;Use online collaborative tools such as &lt;a href=&quot;http://drive.google.com&quot;&gt;Google Doc&lt;/a&gt; for drafting. Google Docs lets you easily share your drafts with reviewers and receive feedback and comments in real time. Very efficient.&lt;/p&gt;

&lt;h2 id=&quot;4-version-control-your-codes&quot;&gt;4. Version control your codes&lt;/h2&gt;
&lt;p&gt;Version control computer codes for analysis and producing charts. &lt;a href=&quot;https://cran.r-project.org/web/views/ReproducibleResearch.html&quot;&gt;Reproducibility&lt;/a&gt; is one of the main themes of my upcoming book. Use GitHub to track R, python, or other source codes. You can provide the codes as an appendix to the book. (The source code for my book is tracked &lt;a href=&quot;https://github.com/Jaimyoung/ipds-kr&quot;&gt;here&lt;/a&gt;.) Some books are even available as a github repo, like &lt;a href=&quot;https://github.com/hadley/adv-r&quot;&gt;Advanced R&lt;/a&gt; from Hadley Wickham!&lt;/p&gt;

&lt;h2 id=&quot;5-get-the-references-right-early-on&quot;&gt;5. Get the references right early on&lt;/h2&gt;
&lt;p&gt;Maintain the list of high-quality reference materials that are OK to use for publication. Many reference materials such as articles, diagrams, and photos could be found on the web. Record the URL, date and time of access of those materials. Check the copyright information to make sure the material is good to reproduce in a book. Materials on Wikipedia is typically OK to reference in most cases, but one should specify the source.&lt;/p&gt;

&lt;p&gt;Here’s a challenging example: I was referencing “Aeron chair” in the book and sent a photo of one downloaded from Wikipedia to the publisher, but the picture quality was not good enough for publication. Publication in print needs resolution of 300 &lt;a href=&quot;https://en.wikipedia.org/wiki/Dots_per_inch&quot;&gt;dpi&lt;/a&gt; at the very least. I started searching the web for photos of an Aeron chair that are both high quality and copyright-free, but such photos turned out to be very difficult to find!  (If you have found such a picture, please let me know 🙂&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-203&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/e/ec/Aeron_chair_JN.jpg&quot; alt=&quot;aeron_chair_jn&quot; width=&quot;322&quot; height=&quot;345&quot; /&gt;&lt;br /&gt;
Photo: Aeron Chair. (Source: &lt;a href=&quot;https://en.wikipedia.org/wiki/Aeron_chair&quot;&gt;https://en.wikipedia.org/wiki/Aeron_chair&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;6-get-the-image-format-right&quot;&gt;6. Get the image format right&lt;/h2&gt;
&lt;p&gt;Consult with the publisher to determine the size, resolution, and font size for charts.** In my case, the publisher was fine with &lt;a href=&quot;https://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/png.html&quot;&gt;PNG file&lt;/a&gt;, but it took some trial and error and going back and forth to arrive at the following personal standards (See the R code snippet at the bottom):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Size is 5.5 in. X 4 in.,&lt;/li&gt;
  &lt;li&gt;Resolution 600 dpi, and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Point_(typography)&quot;&gt;Text Point Size&lt;/a&gt; = 9 (if you use &lt;a href=&quot;https://www.rdocumentation.org/packages/ggplot2/versions/2.2.1/topics/ggsave&quot;&gt;ggsave&lt;/a&gt; function in R, you typically don’t need to worry about this at all)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping up…&lt;/h2&gt;
&lt;p&gt;That’s it. I wish I knew these 2 years ago.&lt;/p&gt;

&lt;p&gt;Writing a book for the first time in my life was a lot harder than I had thought, but it was also a great experience. I &lt;em&gt;learned a lot&lt;/em&gt; (including above tips), there’s a &lt;em&gt;sense of achievement&lt;/em&gt; (like finishing a marathon&lt;em&gt;), and it’s *rewarding&lt;/em&gt; to think that my work when published in June would &lt;em&gt;benefit some readers&lt;/em&gt; getting better in the trade of data science. If you have the experience and knowledge to share with the world, you should definitely consider it!&lt;/p&gt;

&lt;h3 id=&quot;code-snippets&quot;&gt;Code Snippets:&lt;/h3&gt;
&lt;p&gt;a few R codes to export charts for publication quality. To use, specify the file names. Experiment different &lt;strong&gt;width, height, dpi&lt;/strong&gt; options (in that order!) until you get satisfactory PNG file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# A few useful lines to export plots&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 1. base R graph&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../../plots/.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Plot body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev.off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 2. single ggplot&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Produce ggplot first. Then...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggsave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../../plots/.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 3. plot matrix from library(gridExtra)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Produce p1, p2, p3, p4 individual ggplot object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arrangeGrob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggsave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../../plots/.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Well, I have never run marathon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;** This is English version of &lt;a href=&quot;/2017/04/15/r-데이터-과학-서적을-집필하면서-배운-몇가지&quot;&gt;this article&lt;/a&gt;, originally in Korean.&lt;/p&gt;</content><author><name></name></author><summary type="html">The publisher told me that my R data science book manuscript is currently undergoing a second proofreading and it will be published around June after the final review. The process took me almost two years since July 2015 when I was first asked to write it. I would like to share a few tips that I learned during the writing process.</summary></entry><entry><title type="html">R 데이터 과학 서적을 집필하면서 배운 몇가지</title><link href="http://dataninja.me/2017/04/15/r-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%BC%ED%95%99-%EC%84%9C%EC%A0%81%EC%9D%84-%EC%A7%91%ED%95%84%ED%95%98%EB%A9%B4%EC%84%9C-%EB%B0%B0%EC%9A%B4-%EB%AA%87%EA%B0%80%EC%A7%80/" rel="alternate" type="text/html" title="R 데이터 과학 서적을 집필하면서 배운 몇가지" /><published>2017-04-16T01:10:56+00:00</published><updated>2017-04-16T01:10:56+00:00</updated><id>http://dataninja.me/2017/04/15/r-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%BC%ED%95%99-%EC%84%9C%EC%A0%81%EC%9D%84-%EC%A7%91%ED%95%84%ED%95%98%EB%A9%B4%EC%84%9C-%EB%B0%B0%EC%9A%B4-%EB%AA%87%EA%B0%80%EC%A7%80</id><content type="html" xml:base="http://dataninja.me/2017/04/15/r-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B3%BC%ED%95%99-%EC%84%9C%EC%A0%81%EC%9D%84-%EC%A7%91%ED%95%84%ED%95%98%EB%A9%B4%EC%84%9C-%EB%B0%B0%EC%9A%B4-%EB%AA%87%EA%B0%80%EC%A7%80/">&lt;p&gt;출판사로부터, 올 초 마무리한 R 데이터 과학 서적의 원고가 현재 2차 교정/교열 작업 중이며 최종 리뷰 후인 6월 경에는 출판될 것이라는 연락을 받았다. 애초에 원고 의뢰를 받은 것이 2015년 7월이었던 것을 생각하면 거의 이년의 시간이 걸린 셈이다. 집필 과정중에 배우고 느낀 몇가지 팁을 나누고자 한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;서적 집필을 승낙하기 전에 서적 집필은 힘들다는 사실을 이해하고 깊이 고민해야 한다.&lt;/strong&gt; 나는 지금까지  10-15페이지 분량의 논문들은 여러 번 써 보았고, 그러한 작업에 많이 익숙하기 때문에 “책이라고 많이 다를까?” 하고 쉽게 집필을 승락했다. 논문은 전문 독자를 대상으로 하며 (역설적으로 쓰기 쉽다), 분량이 짧으며, 1-2주일 내로 골격과 초고가 완성된다. 달리기라면 중거리 달리기라고 할 수 있다. (물론 논문 “쓰기”만을 이야기하는 것이다. 논문을 쓸만한 내용을 만들기 위한 연구 작업 자체는 당연히 포함하지 않는다) 이에 반해 저서는 대중적인 독자를 대상으로 하기 때문에 눈높이를 맞춰야 하고, 분량이 많으며 (현재 300페이지가 넘는다!), 집필에 보통 몇 달 이상이 걸린다. 마라톤에 비유할 수 있다. 이번 첫 저서 집필이 논문 열편을 쓰는 것보다 더 힘들었다고 할 수는 없다. 하지만 멀리 보며 숨을 고르고, 참을성을 가지고, 꾸준히 해야 하는 작업임을 몸으로 느꼈다. 조급한 성격인 나에게는 특히나 쉽지 않은 훈련이었다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;집필 내용에 대한 피드백은 일찍, 자주 받도록 한다&lt;/strong&gt;. 수시로 피드백을 받는 것은 좋은  글쓰기의 기본 소양이다. 독자의 눈높이에 맞추고, 내용을 개선하기 때문이다. 피드백의 또다른 이로운 점은 마라톤처럼 외로운 자신과의 싸움이 되기 쉬운 긴 글쓰기 과정을 외롭지 않고, 흥미진진하게 만들어 준다는 것이다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;초고 작성에는 구글 닥 등의 협업 툴을 사용한다&lt;/strong&gt;. 온라인 협업에 최적화된 구글 닥 등을 사용하면 쉽게 초고를 리뷰어와 나누고, 피드백과 코멘트를 받아서 반영할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;분석과 도표 생성은 재현가능하게 코드로 저장한다&lt;/strong&gt;. 재현가능성, 즉 reproducibility 는 이번 책의 중요한 주제들 중 하나이다.  GitHub 을 사용해 분석과 도표 작성 R 코드를 버전관리하면 좋다. 코드를 책의 부록으로 제공할 때도 좋다. (참고로 이번 책의 소스코드는 https://github.com/Jaimyoung/data-science-book-korean 에 올려 두었다.)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;인용 그림이나 자료 정보와 저작권을 미리 관리해둔다&lt;/strong&gt;. 참고자료을  웹에서 가져 올 때는 URL 과 접속 일시를 기록해 두고, 저작권을 확인한다. 위키피디아 는 대부분의 경우 괜찮지만 출처를 명시하여야 한다. 참고로, 본서에서 “에어론 체어”(Aeron chair)를 인용하느라 위키피디아의 https://en.wikipedia.org/wiki/Aeron_chair 기사의 사진을 출판사에 보내었는데 사진의 해상도가 충분하지 않았다. 그런데 웹상에서 저작권이 걸려있지 않은 고해상도의 사진을 찾는 것이 참으로 힘들었다! (독자중 그러한 사진을 찾은 분은 연락주시기 바란다)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;도표는 출판사와 상의하여 크기, 해상도, 폰트 사이즈 등을 정해야 한다.&lt;/strong&gt; 참고로 이번 출판사에서는 PNG 화일을 사용해도 좋고 크기는 5.5 in. X 4 in., 해상도는 600 dpi, 글자 Text Point Size = 9 정도가 적당하다고 하여서, 도표 출력 코드의 파라메타를 결정할 수 있었다. 이 책 하단의 R 코드를 참조하자.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위의 팁들을 책 집필 초반에 알았더라면 작업이 좀 더 수월했을 것이다.&lt;/p&gt;

&lt;p&gt;어쨌건 평생 처음 해 본 책 집필은 생각보다 훨씬 힘든 작업이었지만 또한 많은 것을 배운 좋은 경험이었다. 사람들과 나눌만한 경험이나 지식이 있는 사람이라면 평생 한번은 도전해 볼것을 권한다.&lt;/p&gt;

&lt;p&gt;6월에 마침내 책이 출판되면 데이터 과학에 관심있는 한사람에게라도 도움이 되길 바란다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-r&quot; data-lang=&quot;r&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# A few useful lines to export plots&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 1. base R graph&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../../plots/.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pointsize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Plot body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev.off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 2. single ggplot&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Produce ggplot first. Then...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggsave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../../plots/.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 3. plot matrix from library(gridExtra)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Produce p1, p2, p3, p4 individual ggplot object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arrangeGrob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ncol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ggsave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../../plots/.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;units&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'in'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;** 후기 (4/22): 결국 에어론 의자 사진은 &lt;a href=&quot;https://goo.gl/photos/edTEBuqRDGxXVCz7A&quot;&gt;직접 찍었습니다&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">출판사로부터, 올 초 마무리한 R 데이터 과학 서적의 원고가 현재 2차 교정/교열 작업 중이며 최종 리뷰 후인 6월 경에는 출판될 것이라는 연락을 받았다. 애초에 원고 의뢰를 받은 것이 2015년 7월이었던 것을 생각하면 거의 이년의 시간이 걸린 셈이다. 집필 과정중에 배우고 느낀 몇가지 팁을 나누고자 한다.</summary></entry></feed>