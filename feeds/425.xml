<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Whiteship&#039;s Epril</title>
	<atom:link href="http://whiteship.me/?feed=rss2" rel="self" type="application/rss+xml" />
	<link>http://whiteship.me</link>
	<description>I feel good.</description>
	<lastBuildDate>
	Fri, 18 Jan 2019 01:22:21 +0000	</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.1</generator>
	<item>
		<title>스프링 프레임워크 입문</title>
		<link>http://whiteship.me/?p=14141</link>
				<comments>http://whiteship.me/?p=14141#respond</comments>
				<pubDate>Thu, 12 Jul 2018 16:54:38 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14141</guid>
				<description><![CDATA[인프런에도 같은 강좌를 올려두었습니다. 일부 유데미 사용하시는 분들께서 끊김 현상이 발생한다고 하셔서 인프런에도 동일한 강좌를 울려두었습니다. https://www.inflearn.com/course/spring/ Udemy라는 교육/강의 웹 사이트에 &#8220;스프링 프레임워크 입문&#8221;이라는 아주 짧은 강좌를 만들어 올렸습니다. 1시간 남짓의 강좌이며, 스프링 프레임워크 학습에 부담을 느끼고 계신 분들을 위해 아주 쉽게 핵심만 설명했습니다. https://www.udemy.com/zakmvzfj/?couponCode=KEESUN 또는 (저 위 링크는 이제 20개 밖에 안남았습니다. 혹시라도 위에 &#8230; <a href="http://whiteship.me/?p=14141" class="more-link">Continue reading<span class="screen-reader-text"> "스프링 프레임워크 입문"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14141</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>스프링 부트 2.0 레퍼런스 코딩 소회</title>
		<link>http://whiteship.me/?p=14027</link>
				<comments>http://whiteship.me/?p=14027#respond</comments>
				<pubDate>Wed, 07 Mar 2018 21:12:13 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14027</guid>
				<description><![CDATA[스프링 부트 2.0 정식 버전이 나왔다. 그리고 예전부터 하고 싶던 방송도 시작했다. 시작한 날부터 주말도 거르지 않고 매일 대략 1시간씩 방송을 했고 오늘은 아마도 15일차 레퍼런스 코딩 방송을 진행할 것 같다. 목표는 레퍼런스를 (거의) 다 보며 웬만큼 중요해 보이는 것들은 (거의) 전부 코딩해 보는 것이다. 일종의 갈증을 해소하는 방법 중 하나이고 어느 정도 효과가 있는 &#8230; <a href="http://whiteship.me/?p=14027" class="more-link">Continue reading<span class="screen-reader-text"> "스프링 부트 2.0 레퍼런스 코딩 소회"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14027</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Quiz A+</title>
		<link>http://whiteship.me/?p=14024</link>
				<comments>http://whiteship.me/?p=14024#respond</comments>
				<pubDate>Tue, 16 Jan 2018 23:53:54 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14024</guid>
				<description><![CDATA[앱스토어 계정비가 자동 결제 되는 바람에 아까워서 만들기 시작한 앱. 간단한 애들 학습용 앱입니다. https://itunes.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=1332574019&#38;mt=8 아쉽게도 인지도가 없어서 그런지 앱스토어에서 검색조차 안되네요. 링크 타고 가서 받으셔야 합니다. ㅋㅋ &#160;]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14024</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.2.1. HttpHandler</title>
		<link>http://whiteship.me/?p=14020</link>
				<comments>http://whiteship.me/?p=14020#respond</comments>
				<pubDate>Wed, 18 Oct 2017 06:59:48 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14020</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-httphandler 모든 HTTP 서버는 HTTP 요청을 처리하는데 필요한 API를 제공한다. HttpHandler는 요청과 응답을 처리하는데 사용하는 메서드 하나를 정의한 간단한 컨트랙이다. 의도저으로 최소화했다. 주요 목적은 각기 다른 서버에서 리액티브 스프림 기반 API에서 HTTP 요청을 처리할 때 사용할 공통 인터페이스를 제공하는 것이다. spring-web 모듈은 여러 서버를 지원하는 어댑터를 제공한다. 아래 테이블은 지원하는 서버와 어떤 리액티브 스트림을 사용하는지 보여준다. &#8230; <a href="http://whiteship.me/?p=14020" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.2.1. HttpHandler"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14020</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.2. 리액티브 스프링 웹</title>
		<link>http://whiteship.me/?p=14008</link>
				<comments>http://whiteship.me/?p=14008#respond</comments>
				<pubDate>Wed, 18 Oct 2017 06:52:23 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14008</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-reactive-spring-web spring-web 모듈은 저 수준 기반 시설과 HTTP 추상화를 제공한다. 리액티브 웹 애플리케이션을 개발하는데 필요한 클라이언트와 서버를 제공한다. 모든 공개 API는 리액티브 스트림으로 만들었고 리액터를 그것을 받쳐주는 구현체로 사용했다. 서버 기능은 두 계층으로 구성되어 있다. HttpHandler와 서버 어댑터 &#8211;  HTTP 요청을 리액티브 스트림 백 프레셔로 처리하는 가장 기본적이고 공통적인 API WebHandler API &#8211; 그보다 약간 높은 &#8230; <a href="http://whiteship.me/?p=14008" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.2. 리액티브 스프링 웹"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14008</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.1.7. 성능 VS 확장성</title>
		<link>http://whiteship.me/?p=14005</link>
				<comments>http://whiteship.me/?p=14005#respond</comments>
				<pubDate>Wed, 18 Oct 2017 06:51:29 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14005</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-performance 성능이란 다양한 특징과 의미가 있다. 보통, 리액티브와 논-블럭킹은 애플리케이션을 더 빠르게 만들어 주진 않는다. 몇몇 경우엔 그럴 수도 있다. 예를 들어, WebClient를 사용하여 병렬적으로 여러 리모트 콜을 실행할 수 있다. 하지만 전체적으로 볼 때 논-블럭킹 방식을 위해 더 많은 작업을 해야하기 때문에 필요한 처리 시간이 약간 증가할 수 있다. 리액티브와 논-블럭킹으로 기대할 수 있는 &#8230; <a href="http://whiteship.me/?p=14005" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.1.7. 성능 VS 확장성"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14005</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.1.6. 서버 선택하기</title>
		<link>http://whiteship.me/?p=14003</link>
				<comments>http://whiteship.me/?p=14003#respond</comments>
				<pubDate>Wed, 18 Oct 2017 06:50:37 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14003</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-server-choice 스프링 웹플럭스는 네티, 언더토우, 톰캣, 제티와 서블릿 3.1+ 컨테이너를 지원한다. 모두 리액티브 스트림 API를 채용했다. 스프링 웹플럭스 프로그래밍 모델은 그러한 공통 API에 기반하여 만들었다. 자주 받는 질문: 톰캣이랑 제티를 어떻게 두 가지 스택에서 다 쓸 수 있는거지? 톰캣과 제티의 코어 자체는 논-블러킹이다. 하지만 서블릿 API가 그 위에 블럭킹 퍼사드를 추가했다. 서블릿 3.1 API부터 논-블럭킹 &#8230; <a href="http://whiteship.me/?p=14003" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.1.6. 서버 선택하기"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14003</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.1.5. 웹 프레임워크 선택하기</title>
		<link>http://whiteship.me/?p=14015</link>
				<comments>http://whiteship.me/?p=14015#respond</comments>
				<pubDate>Wed, 18 Oct 2017 06:49:33 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14015</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-programming-models 스프링 MVC를 써야 하나 웹플럭스를 써야 하나? 차이점을 살펴보자. 이미 동작하는 스프링 MVC 애프리케이션이 있다면 그대로도 괜찮다. 바꿀 필요는 없다. 절차적인 프로그래밍은 가장 쉽게 작성하고, 이해하며 디버깅할 수 있는 코드다. 역사적으로 대부분이 블럭킹인 수많은 라이브러리를 선택해 사용할 수 있다. 논-블럭킹 웹 스택을 이미 살펴보고 있다면, 스프링 웹플럭스는 그 영역에서 다른 것들과 동일한 실행 모델을 &#8230; <a href="http://whiteship.me/?p=14015" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.1.5. 웹 프레임워크 선택하기"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14015</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.1.2. 리액티브란 무엇이며 왜?</title>
		<link>http://whiteship.me/?p=13998</link>
				<comments>http://whiteship.me/?p=13998#respond</comments>
				<pubDate>Wed, 18 Oct 2017 06:28:50 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=13998</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-why-reactive 논-블럭킹과 펑셔널에 대해 언급했는데 왜 리액티브를 해야 하며 그게 무슨 의미가 있을까? &#8220;리액티브&#8221;라는 단어는 I/O 이벤트에 반응하는 네트워크 컴포넌트, 마우스 이벤트에 반응하는 UI 컨트롤러 등 어떤 변화에 반응하는 것을 아우르는 프로그래밍 모델을 뜻한다. 그런 점에서 논-블럭킹은 반응형이다 왜냐면 블럭킹되지 않고 작업이 완료되거나 데이터가 전달되는 등의 알림에 반응하는 모델 속에 있기 떄문이다. 우리가 스프링 팀에서 &#8230; <a href="http://whiteship.me/?p=13998" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.1.2. 리액티브란 무엇이며 왜?"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=13998</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[스프링 웹플럭스] 1.1.4. 프로그래밍 모델</title>
		<link>http://whiteship.me/?p=14001</link>
				<comments>http://whiteship.me/?p=14001#respond</comments>
				<pubDate>Thu, 12 Oct 2017 06:50:51 +0000</pubDate>
		<dc:creator><![CDATA[기선]]></dc:creator>
				<category><![CDATA[Uncategorized]]></category>

		<guid isPermaLink="false">http://whiteship.me/?p=14001</guid>
				<description><![CDATA[https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html#webflux-programming-models spring-web  모듈은 스프링 웹플러스가 올라가는 리액티브 기반 시설을 포함하고 있다. HTTP 추상화, 리액티브 스트림 서버 어댑터, 리액티브 코덱과 핵심 웹 API가 있다. 웹 API는 서블릿 API와 비슷하자먼 논-블럭킹용이다. 그 기반 시설 위에서 스프링 웹플럭스는 두가지 프로그래밍 모델을 제공한다. 애노테이션 컨트롤러 &#8211; 스프링 MVC와 동일하며 spring-web 모듈에서 제공하는 것과 동일한 애노테이션에 기반하고 있다. 스프링 MVC와 &#8230; <a href="http://whiteship.me/?p=14001" class="more-link">Continue reading<span class="screen-reader-text"> "[스프링 웹플럭스] 1.1.4. 프로그래밍 모델"</span></a>]]></description>
						<wfw:commentRss>http://whiteship.me/?feed=rss2&#038;p=14001</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
	</channel>
</rss>
