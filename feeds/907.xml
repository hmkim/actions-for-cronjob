<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-207300328215333392</id><updated>2019-05-09T18:02:41.298+09:00</updated><category term="BOJ"/><category term="정리완료"/><category term="*"/><category term="다시풀예정"/><category term="dynamic programming"/><category term="풀이쓸예정"/><category term="greedy algorithm"/><category term="shortest path problem"/><category term="depth-first search"/><category term="number theory"/><category term="Combinatorics"/><category term="parametric search"/><category term="Sorting Algorithm"/><category term="prefix sum"/><category term="Breadth-First Search"/><category term="String"/><category term="fenwick tree"/><category term="brute-force search"/><category term="flood fill"/><category term="segment tree"/><category term="dijkstra&#39;s algorithm"/><category term="floyd-warshall algorithm"/><category term="Bit Mask"/><category term="priority queue"/><category term="Network Flow Problem"/><category term="Sweep Line Algorithm"/><category term="Tree"/><category term="self-balancing binary search tree"/><category term="convex hull"/><category term="disjoint-set data structure"/><category term="longest increasing subsequence"/><category term="directed acyclic graph"/><category term="divide and conquer algorithm"/><category term="knapsack problem"/><category term="monotonous stack"/><category term="Bipartite Graph"/><category term="Geometry"/><category term="Two Pointers"/><category term="minimum spanning tree"/><category term="Binary Search Algorithm"/><category term="link"/><category term="longest common subsequence"/><category term="lowest common ancestor"/><category term="topological game"/><category term="Knuth–Morris–Pratt algorithm"/><category term="diameter of a tree"/><category term="2-Satisfiability"/><category term="tree traversal"/><category term="특별한 문제"/><category term="Extended Euclidean Algorithm"/><category term="Suffix Array"/><category term="monotonous queue"/><category term="sparse table"/><category term="stack"/><category term="topological sorting"/><category term="Dinic&#39;s Algorithm"/><category term="Euclidean algorithm"/><category term="Hopcroft–Karp Algorithm"/><category term="Kőnig&#39;s Theorem"/><category term="graph coloring"/><category term="Bellman–Ford Algorithm"/><category term="Big Integer"/><category term="Bridge-Finding Algorithm"/><category term="Fast Fourier Transform"/><category term="Linked List"/><category term="Longest Common Prefix"/><category term="Maximum Bipartite Matching"/><category term="Rabin–Karp Algorithm"/><category term="Sliding Window"/><category term="deterministic finite automaton"/><category term="dynamic optimization"/><category term="eulerian circuit"/><category term="inclusion–exclusion principle"/><category term="linear transformation"/><category term="meet in the middle"/><category term="pigeonhole principle"/><category term="strongly connected component"/><category term="tournament tree"/><category term="travelling salesman problem"/><category term="메모"/><category term="Binary Heap"/><category term="Binary Search Tree"/><category term="Chinese Remainder Theorem"/><category term="Cycle Detection"/><category term="Faulhaber&#39;s formula"/><category term="Hashing"/><category term="Heavy-Light Decomposition"/><category term="Linear Algebra"/><category term="Parallel Binary Search"/><category term="Permutation Graph"/><category term="Pólya enumeration theorem"/><category term="Shortest Path Faster Algorithm"/><category term="Ternary Search"/><category term="deque"/><category term="generating function"/><category term="img"/><category term="interval graph"/><category term="lazy propagation"/><category term="minimum-cost maximum-flow"/><category term="rearrangement inequality"/><category term="selection algorithm"/><title type='text'>Coder&#39;s Brunch</title><subtitle type='html'>PS 블로그</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default?start-index=26&amp;max-results=25'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>1113</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-5314992064825315511</id><published>2017-11-05T14:12:00.000+09:00</published><updated>2017-11-05T14:12:58.505+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="greedy algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>1083번: 소트</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/1083&quot;&gt;https://www.acmicpc.net/problem/1083&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;가능한 한 큰 수가 앞에 오도록 만든다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 테스트케이스마다 $O(n^2)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;s,&amp;nbsp;a[50];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(~scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n))&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;a&amp;nbsp;+&amp;nbsp;i);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;s);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;p&amp;nbsp;=&amp;nbsp;max_element(a&amp;nbsp;+&amp;nbsp;i,&amp;nbsp;a&amp;nbsp;+&amp;nbsp;min(s&amp;nbsp;+&amp;nbsp;i&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;n))&amp;nbsp;-&amp;nbsp;a;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rotate(a&amp;nbsp;+&amp;nbsp;i,&amp;nbsp;a&amp;nbsp;+&amp;nbsp;p,&amp;nbsp;a&amp;nbsp;+&amp;nbsp;p&amp;nbsp;+&amp;nbsp;1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s&amp;nbsp;-=&amp;nbsp;p&amp;nbsp;-&amp;nbsp;i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&amp;nbsp;&quot;&lt;/span&gt;,&amp;nbsp;a[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;puts(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/5314992064825315511/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/11/1083.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/5314992064825315511'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/5314992064825315511'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/11/1083.html' title='1083번: 소트'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-8042311695239410799</id><published>2017-11-04T23:33:00.000+09:00</published><updated>2017-11-04T23:35:27.114+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="dynamic programming"/><category scheme="http://www.blogger.com/atom/ns#" term="Tree"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>11503번: Tree Edit</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11503&quot;&gt;https://www.acmicpc.net/problem/11503&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;T1, T2의 각 노드에 서로 다른 번호가 부여되어 있다고 하자.&lt;br /&gt;i번 노드의 자식들을 ci_1, ci_2, ...라고 하자.&lt;br /&gt;ed[i][j]: i번 노드가 루트인 T1의 서브트리를 j번 노드가 루트인 T2의 서브트리로 바꾸는데 필요한 최소 편집 연산 수&lt;br /&gt;ed[i][j]는 ed[ci_1..n][cj_1..m]들을 가지고 DP로 구할 수 있다.&lt;br /&gt;&lt;br /&gt;dp[u][v]: ci_1..u 를 cj_1..v로 바꾸는데 필요한 최소 편집 연산 수&lt;br /&gt;dp[u][v] = min(&lt;br /&gt;dp[u-1][v]&amp;nbsp;+ (ci_u가 루트인 서브트리의 사이즈),&lt;br /&gt;dp[u][v-1]&amp;nbsp;+ (cj_v가 루트인 서브트리의 사이즈),&lt;br /&gt;dp[u-1][v-1]&amp;nbsp;+ ed[ci_u][cj_v])&lt;br /&gt;그러면 ed[i][j]는 dp[n][m]이 된다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(n^2)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;tc,&amp;nbsp;ed[2000][2000],&amp;nbsp;sz[2000],&amp;nbsp;pos,&amp;nbsp;id;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;char&lt;/span&gt;&amp;nbsp;la[2000],&amp;nbsp;s[3001];&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;adj[2000];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;f(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;l,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;r)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(~ed[l][r])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ed[l][r];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n&amp;nbsp;=&amp;nbsp;adj[l].size(),&amp;nbsp;m&amp;nbsp;=&amp;nbsp;adj[r].size();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vector&amp;lt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;dp(n&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;(m&amp;nbsp;+&amp;nbsp;1));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;dp[i][0]&amp;nbsp;=&amp;nbsp;dp[i&amp;nbsp;-&amp;nbsp;1][0]&amp;nbsp;+&amp;nbsp;sz[adj[l][i&amp;nbsp;-&amp;nbsp;1]];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;m;&amp;nbsp;i++)&amp;nbsp;dp[0][i]&amp;nbsp;=&amp;nbsp;dp[0][i&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;+&amp;nbsp;sz[adj[r][i&amp;nbsp;-&amp;nbsp;1]];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;j&amp;nbsp;&amp;lt;=&amp;nbsp;m;&amp;nbsp;j++)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dp[i][j]&amp;nbsp;=&amp;nbsp;min({&amp;nbsp;dp[i][j&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;+&amp;nbsp;sz[adj[r][j&amp;nbsp;-&amp;nbsp;1]],&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dp[i&amp;nbsp;-&amp;nbsp;1][j]&amp;nbsp;+&amp;nbsp;sz[adj[l][i&amp;nbsp;-&amp;nbsp;1]],&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dp[i&amp;nbsp;-&amp;nbsp;1][j&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;+&amp;nbsp;f(adj[l][i&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;adj[r][j&amp;nbsp;-&amp;nbsp;1])&amp;nbsp;});&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ed[l][r]&amp;nbsp;=&amp;nbsp;dp[n][m]&amp;nbsp;+&amp;nbsp;(la[l]&amp;nbsp;!=&amp;nbsp;la[r]);&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;gen()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h&amp;nbsp;=&amp;nbsp;id++,&amp;nbsp;st&amp;nbsp;=&amp;nbsp;pos;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[h].clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;la[h]&amp;nbsp;=&amp;nbsp;s[++pos];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(s[++pos]&amp;nbsp;!=&amp;nbsp;&lt;span style=&quot;color: #a31515;&quot;&gt;&#39;)&#39;&lt;/span&gt;)&amp;nbsp;adj[h].push_back(id),&amp;nbsp;gen();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sz[h]&amp;nbsp;=&amp;nbsp;(pos&amp;nbsp;-&amp;nbsp;st)&amp;nbsp;/&amp;nbsp;3&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;solve()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fill(&amp;amp;ed[0][0],&amp;nbsp;&amp;amp;ed[1999][2000],&amp;nbsp;-1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%s&quot;&lt;/span&gt;,&amp;nbsp;s);&amp;nbsp;id&amp;nbsp;=&amp;nbsp;pos&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;gen();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;id;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%s&quot;&lt;/span&gt;,&amp;nbsp;s);&amp;nbsp;pos&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;gen();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;f(0,&amp;nbsp;t));&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;tc);&amp;nbsp;tc--;)&amp;nbsp;solve();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/8042311695239410799/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/11/11503-tree-edit.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8042311695239410799'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8042311695239410799'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/11/11503-tree-edit.html' title='11503번: Tree Edit'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-3690646512334243179</id><published>2017-10-25T19:57:00.000+09:00</published><updated>2017-10-25T19:57:05.397+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="다시풀예정"/><title type='text'>11498번: Odd Cycle</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11498&quot;&gt;https://www.acmicpc.net/problem/11498&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;tc,&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;ck[100001],&amp;nbsp;valid[100001],&amp;nbsp;cl[100001],&amp;nbsp;flag[100001];&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;adj[2][100001],&amp;nbsp;vis;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;dfs(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ty)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(ck[h]&amp;nbsp;^&amp;nbsp;ty)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ck[h]&amp;nbsp;=&amp;nbsp;!ty;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;&amp;amp;it&amp;nbsp;:&amp;nbsp;adj[ty][h])&amp;nbsp;dfs(it,&amp;nbsp;ty);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vis.push_back(h);&lt;br /&gt;}&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;via,&amp;nbsp;via2;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;bool&lt;/span&gt;&amp;nbsp;dfs3(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(flag[h])&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(via[i]&amp;nbsp;^&amp;nbsp;h)&amp;nbsp;i++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;1\n%d\n&quot;&lt;/span&gt;,&amp;nbsp;via2.size()&amp;nbsp;+&amp;nbsp;via.size()&amp;nbsp;-&amp;nbsp;i);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;&amp;amp;it&amp;nbsp;:&amp;nbsp;via2)&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;it);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;via.size();&amp;nbsp;i++)&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;via[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;tt&amp;nbsp;=&amp;nbsp;valid[h];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;valid[h]&amp;nbsp;=&amp;nbsp;-1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;via2.push_back(h);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;&amp;amp;it&amp;nbsp;:&amp;nbsp;adj[0][h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(valid[it]&amp;nbsp;==&amp;nbsp;tt&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;cl[it]&amp;nbsp;-&amp;nbsp;cl[h]&amp;nbsp;&amp;amp;&amp;nbsp;1)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(dfs3(it))&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;via2.pop_back();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;false&lt;/span&gt;;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;bool&lt;/span&gt;&amp;nbsp;dfs2(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;via.push_back(h);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flag[h]&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;&amp;amp;it&amp;nbsp;:&amp;nbsp;adj[0][h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(valid[it]&amp;nbsp;==&amp;nbsp;valid[h])&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!~cl[it])&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cl[it]&amp;nbsp;=&amp;nbsp;cl[h]&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(dfs2(it))&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;else&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(cl[h]&amp;nbsp;+&amp;nbsp;1&amp;nbsp;-&amp;nbsp;cl[it]&amp;nbsp;&amp;amp;&amp;nbsp;1)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;via2.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dfs3(it);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;via.pop_back();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flag[h]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;false&lt;/span&gt;;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;tc);&amp;nbsp;tc--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;m);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[0][i].clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[1][i].clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;valid[i]&amp;nbsp;=&amp;nbsp;cl[i]&amp;nbsp;=&amp;nbsp;-1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ck[i]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;x,&amp;nbsp;y;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;m;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x,&amp;nbsp;&amp;amp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[0][x].push_back(y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[1][y].push_back(x);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vis.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;dfs(i,&amp;nbsp;0);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;tvis&amp;nbsp;=&amp;nbsp;vis;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;rr&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;n;&amp;nbsp;i--;)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(ck[tvis[i]])&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vis.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dfs(tvis[i],&amp;nbsp;1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;&amp;amp;it&amp;nbsp;:&amp;nbsp;vis)&amp;nbsp;valid[it]&amp;nbsp;=&amp;nbsp;i,&amp;nbsp;flag[it]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cl[vis[0]]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;via.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(dfs2(vis[0]))&amp;nbsp;{&amp;nbsp;rr&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;break&lt;/span&gt;;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!rr)&amp;nbsp;puts(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/3690646512334243179/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/10/11498-odd-cycle.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3690646512334243179'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3690646512334243179'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/10/11498-odd-cycle.html' title='11498번: Odd Cycle'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-2643624161502181470</id><published>2017-10-01T01:27:00.000+09:00</published><updated>2017-10-01T01:27:25.319+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="greedy algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>14698번: 전생했더니 슬라임 연구자였던 건에 대하여 (Hard)</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/14698&quot;&gt;https://www.acmicpc.net/problem/14698&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;현재 남아 있는 가장 작은 에너지를 가진 두 슬라임의 합성을 반복한다.&lt;br /&gt;&lt;br /&gt;ei: i번 슬라임의 에너지&lt;br /&gt;c(i): i번 슬라임에 의해 최종적으로 비용에 ei가 곱해진 횟수&lt;br /&gt;어떤 시점에서 에너지가 작은 순으로 슬라임에 번호를 매겼다고 하자.&lt;br /&gt;그러면 c(i)는 단조 감소 함수가 된다.&lt;br /&gt;만약 어떤 x, y에 대해 c(x)&amp;lt;c(y) &amp;amp; x&amp;lt;y를 만족한다면 x, y번 슬라임을 바꿔 조합해서 더 작은 비용을 만들 수 있으므로 모순이 생기기 때문이다.&lt;br /&gt;&lt;br /&gt;이제 t(&amp;gt;2)번 슬라임이 2번 슬라임보다 빨리 1번 슬라임과 합성했다고 하자.&lt;br /&gt;그러면 c(t)=c(1)&lt;br /&gt;세 슬라임에 의해 비용에 곱해진 값은 e1^c(1) * e2^c(2) * et^c(1) ... (1)&lt;br /&gt;여기서 2번 슬라임과 t번 슬라임을 바꿔서 조합했다면 곱해진 값은&lt;br /&gt;e1^c(1) * e2^c(1) * et^c(2) ... (2) (* 여기서 c(x)는 처음 방법에 대한 값임)&lt;br /&gt;c(1) &amp;gt;= c(2), et &amp;gt;= e2 이므로&lt;br /&gt;(1) / (2) = (et / e2)^{c(1)-c(2)} &amp;gt;= 1&lt;br /&gt;따라서 (2)의 방법이 (1)의 방법보다 나쁘지 않다. 결과적으로 1, 2번 슬라임을 먼저 합성해도 최소 비용을 구할 수 있다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 테스트케이스마다 $O(n\lg n)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;mod&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;(1e9+7)&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t,&amp;nbsp;n;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;priority_queue&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;gt;&amp;nbsp;pq;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;c,&amp;nbsp;t;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(n--)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%lld&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;c),&amp;nbsp;pq.push(-c);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(pq.size()&amp;nbsp;&amp;gt;&amp;nbsp;1)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;pq.top();&amp;nbsp;pq.pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t&amp;nbsp;*=&amp;nbsp;pq.top();&amp;nbsp;pq.pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;t%mod*res%mod;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pq.push(-t);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;res);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/2643624161502181470/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/10/14698-hard.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2643624161502181470'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2643624161502181470'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/10/14698-hard.html' title='14698번: 전생했더니 슬라임 연구자였던 건에 대하여 (Hard)'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-8128522187555052793</id><published>2017-09-25T16:34:00.005+09:00</published><updated>2017-09-25T16:34:57.050+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="topological game"/><title type='text'>11695번: 표 게임</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11695&quot;&gt;https://www.acmicpc.net/problem/11695&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;i번째 행에 있는 돌의 합을 si라 놓자. 그러면 이들을 이용하는 님게임으로 생각할 수 있다.&lt;br /&gt;si를 모두 xor 시켰을 때 0이면 선수 승리, 1이면 후수 승리.&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;m;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;s,&amp;nbsp;r;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;m);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;x;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;m;&amp;nbsp;j++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x),&amp;nbsp;s&amp;nbsp;+=&amp;nbsp;x;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r&amp;nbsp;^=&amp;nbsp;s;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;puts(r&amp;nbsp;?&amp;nbsp;&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;august14&quot;&lt;/span&gt;&amp;nbsp;:&amp;nbsp;&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;ainta&quot;&lt;/span&gt;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/8128522187555052793/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/11695.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8128522187555052793'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8128522187555052793'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/11695.html' title='11695번: 표 게임'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-4622430237663281406</id><published>2017-09-23T23:01:00.002+09:00</published><updated>2017-09-25T15:55:19.980+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="topological game"/><category scheme="http://www.blogger.com/atom/ns#" term="풀이쓸예정"/><title type='text'>5386번: Doubloon Game</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/5386&quot;&gt;https://www.acmicpc.net/problem/5386&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;s,&amp;nbsp;k,&amp;nbsp;t;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;s,&amp;nbsp;&amp;amp;k);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(k&amp;nbsp;&amp;amp;&amp;nbsp;1)&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;s&amp;nbsp;&amp;amp;&amp;nbsp;1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;else&lt;/span&gt;&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s&amp;nbsp;%=&amp;nbsp;k&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;s&amp;nbsp;/&amp;nbsp;k*k&amp;nbsp;+&amp;nbsp;s&amp;nbsp;%&amp;nbsp;2);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/4622430237663281406/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/5386-doubloon-game.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4622430237663281406'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4622430237663281406'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/5386-doubloon-game.html' title='5386번: Doubloon Game'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-5266589066102354462</id><published>2017-09-16T21:06:00.000+09:00</published><updated>2017-09-16T21:06:34.177+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="number theory"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>13282번: Bamboo Blossoms</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/13282&quot;&gt;https://www.acmicpc.net/problem/13282&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;i 보다 작으면서 가장 큰 i의 약수를 pi라고 하자.&lt;br /&gt;그러면 i = m부터 보면서 pi&amp;lt;m인 i에 대해 i-year-bamboos를 심는게 최선이다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(L(t+\lg L))$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;pre style=&quot;background-attachment: initial; background-clip: initial; background-image: initial; background-origin: initial; background-position: initial; background-repeat: initial; background-size: initial; font-family: 돋움체;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;m,&amp;nbsp;n,&amp;nbsp;p[8000001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;8e6;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;i&amp;nbsp;*&amp;nbsp;2;&amp;nbsp;j&amp;nbsp;&amp;lt;=&amp;nbsp;8e6;&amp;nbsp;j&amp;nbsp;+=&amp;nbsp;i)&amp;nbsp;p[j]&amp;nbsp;=&amp;nbsp;i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;m,&amp;nbsp;&amp;amp;n),&amp;nbsp;m)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;m;;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!~(n&amp;nbsp;-=&amp;nbsp;p[i]&amp;nbsp;&amp;lt;&amp;nbsp;m))&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;i);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;break&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/5266589066102354462/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/13282-bamboo-blossoms.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/5266589066102354462'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/5266589066102354462'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/13282-bamboo-blossoms.html' title='13282번: Bamboo Blossoms'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-4150827440889803476</id><published>2017-09-13T00:17:00.000+09:00</published><updated>2017-09-13T13:05:01.196+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="Bipartite Graph"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Network Flow Problem"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>13503번: 최소 체인 커버</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/13503&quot;&gt;https://www.acmicpc.net/problem/13503&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;최대 이분 매칭을 구해서 풀 수 있다.&lt;br /&gt;&lt;br /&gt;모든 정점 i에 대해 source, sink와 각각 연결된 두 개의 정점 i, i&#39;를 만들고&lt;br /&gt;주어지는 간선 u -&amp;gt; v 마다 만들고 있는 이분 그래프에서 간선 u -&amp;gt; v&#39; 을 추가한다.&lt;br /&gt;이 그래프에서의 매칭을 원래 그래프에서 체인에 속한 간선들과 대응시킬 수 있다.&lt;br /&gt;(체인 수) = n - (체인에 속한 간선 수) 이므로 (최소 체인 수) = n - (최대 매칭 수) 이다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(nm)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;vis[10001],&amp;nbsp;rev[10001],&amp;nbsp;t,&amp;nbsp;res;&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;adj[10001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;f(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vis[h]&amp;nbsp;=&amp;nbsp;t;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;it&amp;nbsp;:&amp;nbsp;adj[h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!rev[it]&amp;nbsp;||&amp;nbsp;vis[rev[it]]&amp;nbsp;^&amp;nbsp;t&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;f(rev[it]))&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rev[it]&amp;nbsp;=&amp;nbsp;h;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;m);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;x,&amp;nbsp;y;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;m;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x,&amp;nbsp;&amp;amp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[x].push_back(y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;n;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(t&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;t&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;t++)&amp;nbsp;res&amp;nbsp;-=&amp;nbsp;f(t);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;res);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/4150827440889803476/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/13503.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4150827440889803476'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4150827440889803476'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/13503.html' title='13503번: 최소 체인 커버'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-3485886765470518977</id><published>2017-09-04T18:19:00.000+09:00</published><updated>2017-09-04T18:22:43.818+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="floyd-warshall algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="prefix sum"/><category scheme="http://www.blogger.com/atom/ns#" term="shortest path problem"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>7332번: Cashier Employment</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/7332&quot;&gt;https://www.acmicpc.net/problem/7332&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;각 시간대마다 필요한 알바 수와 8시간동안 연속적으로 고용할 수 있는 알바 정보가 주어졌을 때 필요한 알바 수의 최솟값을 구하는 문제이다.&lt;br /&gt;&lt;br /&gt;r[i]: i-1 ~ i시에 필요한 알바 수&lt;br /&gt;t[i]: i-1 ~ i+7시에 쓸 수 있는 알바 수&lt;br /&gt;* 굳이 i-1로 한 이유는 후에 prefix sum을 사용하는데 있어 -1번째 인덱스가 나오지 않게 하기 위함이다.&lt;br /&gt;&lt;br /&gt;그러면 문제는 0&amp;lt;= a[i] &amp;lt;= t[i]인 a[i]를 잘 골라&lt;br /&gt;i&amp;lt;8 일 때, a[17+i]&amp;nbsp;+ ... + a[24]&amp;nbsp;+ a[1]&amp;nbsp;+ ... +&amp;nbsp;a[i] &amp;gt;= r[i]&lt;br /&gt;i&amp;gt;=8 일 때, a[i-7]&amp;nbsp;+ a[i-6]&amp;nbsp;+ ...&amp;nbsp;+ a[i] &amp;gt;= r[i]&lt;br /&gt;를 만족하는 sum(a[i])의 최솟값을 구하는 문제라고 할 수 있다.&lt;br /&gt;&lt;br /&gt;s[i] = sum(a[j]: 1&amp;lt;=j&amp;lt;=i)로 놓고 모든 조건을 일차선형부등식 꼴로 만들어 보면&lt;br /&gt;0 &amp;lt;= s[i] - s[i-1] &amp;lt;= t[i]&lt;br /&gt;i&amp;lt;8 일 때, s[24] - s[16+i]&amp;nbsp;+ s[i] &amp;gt;= r[i]&lt;br /&gt;i&amp;gt;=8 일 때, s[i] - s[i-8] &amp;gt;= r[i]&lt;br /&gt;&lt;br /&gt;이제 상수 lmt &amp;lt;= s[24]로 놓으면&lt;br /&gt;&lt;div&gt;s[24] - lmt &amp;gt;= s[0]&lt;/div&gt;&lt;div&gt;s[i] &amp;gt;= s[i-1]&lt;/div&gt;&lt;div&gt;s[i-1]&amp;nbsp;+ t[i] &amp;gt;= s[i]&lt;br /&gt;&lt;div&gt;i&amp;lt;8 일 때, s[i] + lmt - r[i] &amp;gt;= s[16+i]&lt;br /&gt;i&amp;gt;=8 일 때, s[i] - r[i] &amp;gt;= s[i-8]&lt;br /&gt;&lt;br /&gt;모든 부등식이 x&amp;nbsp;+ w &amp;gt;= y 꼴의 형태이므로 각 조건에 대응되는 가중치가 w인 x -&amp;gt; y 간선들을 추가한 뒤, 최단거리 알고리즘을 이용해 주어진 부등식들이 가능한지 판단할 수 있다.&lt;br /&gt;부등식들이 모두 성립하는 최소 0 &amp;lt;= lmt &amp;lt;= n를 찾는다. 불가능하면 No Solution을 출력한다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 테스트 케이스마다 $O(n)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;tc,&amp;nbsp;n,&amp;nbsp;t[25],&amp;nbsp;r[25],&amp;nbsp;dp[25][25];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;bool&lt;/span&gt;&amp;nbsp;f(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;lmt)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fill(dp[0],&amp;nbsp;dp[25],&amp;nbsp;1e9);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;25;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dp[i][i]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(i)&amp;nbsp;dp[i&amp;nbsp;-&amp;nbsp;1][i]&amp;nbsp;=&amp;nbsp;t[i],&amp;nbsp;dp[i][i&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;8;&amp;nbsp;i++)&amp;nbsp;dp[i][i&amp;nbsp;+&amp;nbsp;16]&amp;nbsp;=&amp;nbsp;lmt&amp;nbsp;-&amp;nbsp;r[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;25;&amp;nbsp;i++)&amp;nbsp;dp[i][i&amp;nbsp;-&amp;nbsp;8]&amp;nbsp;=&amp;nbsp;-r[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dp[24][0]&amp;nbsp;=&amp;nbsp;-lmt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;25;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;25;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;k&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;k&amp;nbsp;&amp;lt;&amp;nbsp;25;&amp;nbsp;k++)&amp;nbsp;dp[j][k]&amp;nbsp;=&amp;nbsp;min(dp[j][k],&amp;nbsp;dp[j][i]&amp;nbsp;+&amp;nbsp;dp[i][k]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;25;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(dp[i][i]&amp;nbsp;&amp;lt;&amp;nbsp;0)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;false&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;task()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;24;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;r&amp;nbsp;+&amp;nbsp;i),&amp;nbsp;t[i]&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;x;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x),&amp;nbsp;t[x&amp;nbsp;+&amp;nbsp;1]++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(f(i))&amp;nbsp;{&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;i);&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;puts(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;No&amp;nbsp;Solution&quot;&lt;/span&gt;);&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;tc);&amp;nbsp;tc--;)&amp;nbsp;task();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/3485886765470518977/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/7332-cashier-employment.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3485886765470518977'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3485886765470518977'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/7332-cashier-employment.html' title='7332번: Cashier Employment'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-6504564184579682088</id><published>2017-09-02T16:15:00.001+09:00</published><updated>2017-09-04T14:04:59.358+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="convex hull"/><category scheme="http://www.blogger.com/atom/ns#" term="priority queue"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>12736번: Fireworks</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/12736&quot;&gt;https://www.acmicpc.net/problem/12736&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;i번 연결점에 이어진 폭약들을 시각 t에 동시에 떠뜨리기 위한 최소 비용을 f_i(t)라고 하자. 이 함수는 t에 관한 아래로 볼록인 함수이다.&lt;br /&gt;또한 이 함수는 i번 연결점 바로 다음에 이어진 a0, a1, ..., aj 번 연결점에 관한 최소 비용 함수로부터 구할 수 있다.&lt;br /&gt;(그리 어렵지 않으니 함수가 어떻게 구해지는지 한 번 생각보자.)&lt;br /&gt;&lt;br /&gt;이 과정에서 함수끼리의 덧셈 및 볼록껍질의 제약적인 수정이 요구된다.&lt;br /&gt;볼록 함수 끼리의 연산을 효율적으로 하기 위해 볼록 함수를 y절편, 기울기가 1씩 증가하는 t를 우선순위 큐에 저장해놓는다.&lt;br /&gt;- 두 함수를 더하기 위해서는 y절편끼리 더하고 사이즈가 큰 우선순위 큐에 작은 우선순위 큐의 원소들을 모두 빼서 넣어주면 된다. ... (*)&lt;br /&gt;- 볼록 껍질에서 기울기가 1보다 큰 부분을 없애야 하는 경우가 있다. 이 경우엔 간단히 우선순위 큐에서 pop 해주면 된다.&lt;br /&gt;- 볼록 껍질에서 기울기가 -1인 부분을 늘려야 하는 경우가 있다. 이 경우엔 y절편과 기울기가 0인 부분을 잘 수정해주면 된다.&lt;br /&gt;&lt;br /&gt;(*) 부분의 시간복잡도를 계산해보자.&lt;br /&gt;먼저, 각 f_i(t)를 이루는 점의 수(곧, 우선순위 큐의 원소 개수)는 i번 연결점에 연결된 폭약의 수에 비례한다. 우선순위 큐 내부의 폭약에 관한 원소들은 (*) 부분에서 이동이 발생하고 그 때마다 자신이 속한 우선순위 큐의 사이즈가 2배이상으로 증가한다. 따라서 각 원소마다 이동횟수가 $O(\lg n)$로 제한되고 이동시 $O(\lg n)$의 시간이 걸리므로 총 시간복잡도는 $O(n\lg^2 n)$.&lt;br /&gt;&lt;br /&gt;최종 시간복잡도는 $O(n\lg^2 n)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;p[300001],&amp;nbsp;c[300001],&amp;nbsp;sz[300001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;s[300001],&amp;nbsp;l,&amp;nbsp;r;&lt;br /&gt;priority_queue&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;gt;&amp;nbsp;*pq[300001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;m);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;2;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n&amp;nbsp;+&amp;nbsp;m;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;i,&amp;nbsp;c&amp;nbsp;+&amp;nbsp;i);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;n&amp;nbsp;+&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n&amp;nbsp;+&amp;nbsp;m;&amp;nbsp;i++)&amp;nbsp;pq[i]&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;new&lt;/span&gt;&amp;nbsp;priority_queue&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;gt;(2,&amp;nbsp;0);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;n&amp;nbsp;+&amp;nbsp;m;&amp;nbsp;i;&amp;nbsp;i--)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(sz[i]--)&amp;nbsp;pq[i]-&amp;gt;pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r&amp;nbsp;=&amp;nbsp;pq[i]-&amp;gt;top();&amp;nbsp;pq[i]-&amp;gt;pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l&amp;nbsp;=&amp;nbsp;pq[i]-&amp;gt;top();&amp;nbsp;pq[i]-&amp;gt;pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pq[i]-&amp;gt;push(l&amp;nbsp;+&amp;nbsp;c[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pq[i]-&amp;gt;push(r&amp;nbsp;+&amp;nbsp;c[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s[p[i]]&amp;nbsp;+=&amp;nbsp;s[i]&amp;nbsp;+&amp;nbsp;c[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!pq[p[i]])&amp;nbsp;{&amp;nbsp;pq[p[i]]&amp;nbsp;=&amp;nbsp;pq[i];&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;continue&lt;/span&gt;;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(pq[p[i]]-&amp;gt;size()&amp;nbsp;&amp;lt;&amp;nbsp;pq[i]-&amp;gt;size())&amp;nbsp;swap(pq[p[i]],&amp;nbsp;pq[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(!pq[i]-&amp;gt;empty())&amp;nbsp;pq[p[i]]-&amp;gt;push(pq[i]-&amp;gt;top()),&amp;nbsp;pq[i]-&amp;gt;pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sz[p[i]]++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pq[0]-&amp;gt;pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(!pq[0]-&amp;gt;empty())&amp;nbsp;s[0]&amp;nbsp;-=&amp;nbsp;pq[0]-&amp;gt;top(),&amp;nbsp;pq[0]-&amp;gt;pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%lld&quot;&lt;/span&gt;,&amp;nbsp;s[0]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/6504564184579682088/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/12736-fireworks.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/6504564184579682088'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/6504564184579682088'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/12736-fireworks.html' title='12736번: Fireworks'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-8546554079504622189</id><published>2017-09-01T22:29:00.005+09:00</published><updated>2017-09-01T22:29:52.951+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="다시풀예정"/><title type='text'>10257번: Stains</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/10257&quot;&gt;https://www.acmicpc.net/problem/10257&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t,&amp;nbsp;m,&amp;nbsp;n,&amp;nbsp;c,&amp;nbsp;st[1001][10],&amp;nbsp;dp[1001][60000];&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;cd;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;f(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;b)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(h&amp;nbsp;&amp;gt;&amp;nbsp;n)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;ret&amp;nbsp;=&amp;nbsp;dp[h][b];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(~ret)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ret;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ck[10]&amp;nbsp;=&amp;nbsp;{};&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;1e9;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;it&amp;nbsp;:&amp;nbsp;cd)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;cnt&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;nxt&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;b,&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;m;&amp;nbsp;i&amp;nbsp;/=&amp;nbsp;3,&amp;nbsp;j++)&amp;nbsp;ck[j]&amp;nbsp;=&amp;nbsp;i&amp;nbsp;%&amp;nbsp;3;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;m&amp;nbsp;-&amp;nbsp;2;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;i&amp;amp;it)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cnt++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;i;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;i&amp;nbsp;+&amp;nbsp;3;&amp;nbsp;j++)&amp;nbsp;ck[j]&amp;nbsp;=&amp;nbsp;3;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;m;&amp;nbsp;i--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(st[h][i]&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;!ck[i])&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(ck[i])&amp;nbsp;ck[i]--;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nxt&amp;nbsp;=&amp;nbsp;nxt&amp;nbsp;*&amp;nbsp;3&amp;nbsp;+&amp;nbsp;ck[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!flag)&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;min(ret,&amp;nbsp;cnt&amp;nbsp;+&amp;nbsp;f(h&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;nxt));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ret;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;m,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;c);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cd.clear();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(dp,&amp;nbsp;-1,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;sizeof&lt;/span&gt;(dp));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;memset(st,&amp;nbsp;0,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;sizeof&lt;/span&gt;(st));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;m&amp;nbsp;-&amp;nbsp;2;&amp;nbsp;i--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;m&amp;nbsp;-&amp;nbsp;3;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;j&amp;nbsp;&amp;amp;&amp;nbsp;i&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;j&amp;nbsp;-&amp;nbsp;1&amp;nbsp;&amp;amp;&amp;nbsp;i)&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;2;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;m&amp;nbsp;-&amp;nbsp;3;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;j&amp;nbsp;&amp;amp;&amp;nbsp;i&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;j&amp;nbsp;-&amp;nbsp;2&amp;nbsp;&amp;amp;&amp;nbsp;i)&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(flag)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;continue&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cd.push_back(i);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;x,&amp;nbsp;y;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;c;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x,&amp;nbsp;&amp;amp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st[y][x&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;f(1,&amp;nbsp;0));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/8546554079504622189/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/10257-stains.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8546554079504622189'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8546554079504622189'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/10257-stains.html' title='10257번: Stains'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-4156504824216043752</id><published>2017-09-01T17:26:00.002+09:00</published><updated>2017-09-01T17:27:11.286+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Extended Euclidean Algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="number theory"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>11069번: Particle</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11069&quot;&gt;https://www.acmicpc.net/problem/11069&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;d = gcd(a, b)&lt;br /&gt;(a&#39;, b&#39;) = (a / d, b / d)&lt;br /&gt;&lt;br /&gt;주어진 직사각형을 각 변에 대한 거울상과 무한히 연결하고 이 필드 상에서 입자가 직선 운동을 한다고 생각할 수 있다.&lt;br /&gt;문제의 규칙 하에 입자가 (x0, y0)에서 (x1, y1)로 속도(a&#39;, b&#39;)로 간다면 걸리는 최소 시간 tm은 다음 식을 만족하는 t(&amp;gt;0)중 최솟값이다.&lt;br /&gt;&lt;br /&gt;i) x0&amp;nbsp;+ a&#39;t = x1&amp;nbsp;+ 2w*u &amp;nbsp;and &amp;nbsp;y0&amp;nbsp;+ b&#39;t = y1&amp;nbsp;+ 2h*v&lt;br /&gt;ii) x0&amp;nbsp;+ a&#39;t = -x1&amp;nbsp;+ 2w*u &amp;nbsp;and &amp;nbsp;y0&amp;nbsp;+ b&#39;t = y1&amp;nbsp;+ 2h*v&lt;br /&gt;iii) x0&amp;nbsp;+ a&#39;t = x1&amp;nbsp;+ 2w*u &amp;nbsp;and &amp;nbsp;y0&amp;nbsp;+ b&#39;t = -y1&amp;nbsp;+ 2h*v&lt;br /&gt;iv) x0&amp;nbsp;+ a&#39;t = -x1&amp;nbsp;+ 2w*u and &amp;nbsp;y0&amp;nbsp;+ b&#39;t = -y1&amp;nbsp;+ 2h*v&lt;br /&gt;&lt;br /&gt;이 중 (i)에 대해서만 풀어보자.&lt;br /&gt;두 식은 모두 Extended Euclidean 알고리즘으로 일반해를 구할 수 있다.&lt;br /&gt;첫 번째 식의 t = p1 * x&amp;nbsp;+ q1,&lt;br /&gt;두 번째 식의 t = p2 * y + q2 라 하자.&lt;br /&gt;두 t는 같아야 하므로 p1 * x&amp;nbsp;+ q1 = p2 * y + q2&lt;br /&gt;이를 만족하는 x 역시 Extended Euclidean 알고리즘으로 일반해를 구할 수 있다.&lt;br /&gt;x = p3 * x&#39;&amp;nbsp;+ q3라 하면&lt;br /&gt;t = p1 * x&amp;nbsp;+ q1 = p1*p3*x&#39;&amp;nbsp;+ q1*p3&amp;nbsp;+ q3&lt;br /&gt;이제 위 식을 만족하면서 0보다 큰 최소 t를 구할 수 있다.&lt;br /&gt;&lt;br /&gt;마찬가지 방법으로 (i)~(iv)에 대해 구한 t 중 최솟값 tm을 구할 수 있다.&lt;br /&gt;(x2, y2)에 가는데 걸리는 최소 시간 또한 같은 방법으로 구해서 걸린 시간을 비교한다.&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t,&amp;nbsp;w,&amp;nbsp;h,&amp;nbsp;a0,&amp;nbsp;b0,&amp;nbsp;a1,&amp;nbsp;b1,&amp;nbsp;a2,&amp;nbsp;b2,&amp;nbsp;a,&amp;nbsp;b;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ee(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c1,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c2,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;r1,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;r2)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!c2)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r1&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;r2&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;c1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;ee(c2,&amp;nbsp;c1%c2,&amp;nbsp;r2,&amp;nbsp;r1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r2&amp;nbsp;-=&amp;nbsp;c1&amp;nbsp;/&amp;nbsp;c2*r1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ret;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;bool&lt;/span&gt;&amp;nbsp;eq(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c1,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c2,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c3,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;r1,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;r2)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;u,&amp;nbsp;v,&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;ee(c1,&amp;nbsp;c2,&amp;nbsp;u,&amp;nbsp;v);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(c3%ret)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;false&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r1&amp;nbsp;=&amp;nbsp;c2&amp;nbsp;/&amp;nbsp;ret;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r2&amp;nbsp;=&amp;nbsp;1LL&amp;nbsp;*&amp;nbsp;c3&amp;nbsp;/&amp;nbsp;ret&amp;nbsp;*&amp;nbsp;u%r1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;true&lt;/span&gt;;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;solve(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c1,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;c2)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;p1,&amp;nbsp;q1,&amp;nbsp;p2,&amp;nbsp;q2,&amp;nbsp;p3,&amp;nbsp;q3;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!eq(a,&amp;nbsp;-2&amp;nbsp;*&amp;nbsp;w,&amp;nbsp;c1&amp;nbsp;-&amp;nbsp;a0,&amp;nbsp;p1,&amp;nbsp;q1)&amp;nbsp;||&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!eq(b,&amp;nbsp;-2&amp;nbsp;*&amp;nbsp;h,&amp;nbsp;c2&amp;nbsp;-&amp;nbsp;b0,&amp;nbsp;p2,&amp;nbsp;q2)&amp;nbsp;||&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;!eq(p1,&amp;nbsp;-p2,&amp;nbsp;q2&amp;nbsp;-&amp;nbsp;q1,&amp;nbsp;p3,&amp;nbsp;q3))&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;1e15;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;p4&amp;nbsp;=&amp;nbsp;abs(1LL&amp;nbsp;*&amp;nbsp;p1*p3),&amp;nbsp;q4&amp;nbsp;=&amp;nbsp;1LL&amp;nbsp;*&amp;nbsp;p1*q3&amp;nbsp;+&amp;nbsp;q1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;(q4%p4&amp;nbsp;+&amp;nbsp;p4)&amp;nbsp;%&amp;nbsp;p4;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d%d%d%d%d%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;w,&amp;nbsp;&amp;amp;h,&amp;nbsp;&amp;amp;a0,&amp;nbsp;&amp;amp;b0,&amp;nbsp;&amp;amp;a1,&amp;nbsp;&amp;amp;b1,&amp;nbsp;&amp;amp;a2,&amp;nbsp;&amp;amp;b2,&amp;nbsp;&amp;amp;a,&amp;nbsp;&amp;amp;b);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;u,&amp;nbsp;v,&amp;nbsp;d&amp;nbsp;=&amp;nbsp;abs(ee(a,&amp;nbsp;b,&amp;nbsp;u,&amp;nbsp;v));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a&amp;nbsp;/=&amp;nbsp;d;&amp;nbsp;b&amp;nbsp;/=&amp;nbsp;d;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;ret1&amp;nbsp;=&amp;nbsp;min({&amp;nbsp;solve(a1,&amp;nbsp;b1),&amp;nbsp;solve(-a1,&amp;nbsp;b1),&amp;nbsp;solve(a1,&amp;nbsp;-b1),&amp;nbsp;solve(-a1,&amp;nbsp;-b1)&amp;nbsp;}),&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ret2&amp;nbsp;=&amp;nbsp;min({&amp;nbsp;solve(a2,&amp;nbsp;b2),&amp;nbsp;solve(-a2,&amp;nbsp;b2),&amp;nbsp;solve(a2,&amp;nbsp;-b2),&amp;nbsp;solve(-a2,&amp;nbsp;-b2)&amp;nbsp;});&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;puts(ret1^ret2&amp;nbsp;?&amp;nbsp;ret1&amp;nbsp;&amp;lt;&amp;nbsp;ret2&amp;nbsp;?&amp;nbsp;&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;A&quot;&lt;/span&gt;&amp;nbsp;:&amp;nbsp;&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;B&quot;&lt;/span&gt;&amp;nbsp;:&amp;nbsp;&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;O&quot;&lt;/span&gt;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/4156504824216043752/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/11069-particle.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4156504824216043752'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4156504824216043752'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/11069-particle.html' title='11069번: Particle'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-8546912829714446695</id><published>2017-09-01T12:21:00.001+09:00</published><updated>2017-09-01T12:22:50.088+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Geometry"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>13326번: Diameter</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/13326&quot;&gt;https://www.acmicpc.net/problem/13326&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;주어진 점들 중 가장 먼 두 점을 s, e라고 하자. 답이 이 두 점 사이 거리보다 작기 위해선 s와 e가 서로 다른 그룹에 있어야 한다. 각 두 점이 속한 그룹을 S, E라 하자.&lt;br /&gt;&lt;br /&gt;s와 e가 각각 중심이 되는 두 원(A, B)을 생각해보자. 이 두 원은 주어진 점들을 모두 포함하고, 각 원주에는 적어도 하나의 점이 존재한다.&lt;br /&gt;이제 각 점들은 두 원과의 포함관계에 따라 다음과 같이 두 그룹으로 나눠질 수 있다.&lt;br /&gt;&lt;br /&gt;i) A 안에 존재하고 B 안에 존재하지 않는 경우&lt;br /&gt;S에 포함&lt;br /&gt;ii) B 안에 존재하고 A 안에 존재하지 않는 경우&lt;br /&gt;E에 포함&lt;br /&gt;iii) A, B 안에 존재하는 경우&lt;br /&gt;S 혹은 E 둘 중 아무 그룹에 포함&lt;br /&gt;&lt;br /&gt;그런데 A, B가 만나는 경우 답은 A, B 반지름 합 이상이 되며, 이 값은 s와 e 사이 거리 이상이다. 따라서 두 원은 무조건 분리되도록 그려야 한다.&lt;br /&gt;&lt;br /&gt;p[i]를 s로 부터 i번째 가까운 점이라고 하자. p[0...j], p[j+1...n-1] 두 그룹으로 나누어 원을 그려보면 j를 조절함에 따라 가능한 분리된 두 원을 모두 그려볼 수 있다.&lt;br /&gt;답은 min( (p[0...j]에서 가장 먼 두 점 거리)&amp;nbsp;+ (p[j+1...n-1]에서 가장 먼 두 점 거리) )이 된다.&lt;br /&gt;&lt;br /&gt;최종 시간복잡도는 $O(n^2)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;dis(u,v)&amp;nbsp;((x[u]-x[v])*(x[u]-x[v])+(y[u]-y[v])*(y[u]-y[v]))&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;pfx,&amp;nbsp;sfx[5000],&amp;nbsp;a[5000],&amp;nbsp;s,&amp;nbsp;e,&amp;nbsp;x[5000],&amp;nbsp;y[5000];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;double&lt;/span&gt;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;1e9;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x[i],&amp;nbsp;&amp;amp;y[i]),&amp;nbsp;a[i]&amp;nbsp;=&amp;nbsp;i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(dis(s,&amp;nbsp;e)&amp;nbsp;&amp;lt;&amp;nbsp;dis(i,&amp;nbsp;j))&amp;nbsp;s&amp;nbsp;=&amp;nbsp;i,&amp;nbsp;e&amp;nbsp;=&amp;nbsp;j;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sort(a,&amp;nbsp;a&amp;nbsp;+&amp;nbsp;n,&amp;nbsp;[](&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;u,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;v)&amp;nbsp;{&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;dis(s,&amp;nbsp;u)&amp;nbsp;&amp;lt;&amp;nbsp;dis(s,&amp;nbsp;v);&amp;nbsp;});&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;n&amp;nbsp;-&amp;nbsp;1;&amp;nbsp;i--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sfx[i]&amp;nbsp;=&amp;nbsp;sfx[i&amp;nbsp;+&amp;nbsp;1];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;n;&amp;nbsp;--j&amp;nbsp;&amp;gt;&amp;nbsp;i;)&amp;nbsp;sfx[i]&amp;nbsp;=&amp;nbsp;max(sfx[i],&amp;nbsp;dis(a[i],&amp;nbsp;a[j]));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;i;&amp;nbsp;j++)&amp;nbsp;pfx&amp;nbsp;=&amp;nbsp;max(pfx,&amp;nbsp;dis(a[i&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;a[j]));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;res&amp;nbsp;=&amp;nbsp;min(res,&amp;nbsp;sqrt(pfx)&amp;nbsp;+&amp;nbsp;sqrt(sfx[i]));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%lf&quot;&lt;/span&gt;,&amp;nbsp;res);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/8546912829714446695/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/13326-diameter.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8546912829714446695'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8546912829714446695'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/09/13326-diameter.html' title='13326번: Diameter'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-2273237291632900930</id><published>2017-08-30T20:57:00.004+09:00</published><updated>2017-08-30T20:57:56.069+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="dynamic programming"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>13330번: Palindromic</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/13330&quot;&gt;https://www.acmicpc.net/problem/13330&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;동적계획법을 이용해 해결할 수 있다.&lt;br /&gt;&lt;br /&gt;s[i]: i번째 문자&lt;br /&gt;lp[i][j]: s[j-i+1 ... j-i+1+k]와 s[j ... j-k]가 같은 최대 k&lt;br /&gt;dp[i]: s[1...i]을 &lt;span style=&quot;background-color: white; color: #555555; font-family: &amp;quot;Open Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Apple SD Gothic Neo&amp;quot;, &amp;quot;Noto Sans CJK KR&amp;quot;, &amp;quot;Noto Sans KR&amp;quot;, 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, &amp;quot;Malgun Gothic&amp;quot;, &amp;quot;Nanum Gothic&amp;quot;, sans-serif;&quot;&gt;θ-팰린드롬 문자열들을 연결하여 만들 때 필요한 최소 문자열 수&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #555555; font-family: Open Sans, Helvetica Neue, Helvetica, Arial, Apple SD Gothic Neo, Noto Sans CJK KR, Noto Sans KR, 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, Malgun Gothic, Nanum Gothic, sans-serif;&quot;&gt;&lt;span style=&quot;background-color: white;&quot;&gt;자세한 구현은 다음 소스를 참고하자.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #555555; font-family: Open Sans, Helvetica Neue, Helvetica, Arial, Apple SD Gothic Neo, Noto Sans CJK KR, Noto Sans KR, 나눔바른고딕, 나눔고딕, NanumGothic, 맑은고딕, Malgun Gothic, Nanum Gothic, sans-serif;&quot;&gt;&lt;span style=&quot;background-color: white;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(n^2)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;lp[10001][10001],&amp;nbsp;n,&amp;nbsp;k,&amp;nbsp;l,&amp;nbsp;dp[10001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;char&lt;/span&gt;&amp;nbsp;s[10002];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d%s&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;k,&amp;nbsp;&amp;amp;l,&amp;nbsp;s&amp;nbsp;+&amp;nbsp;1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;2;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;i;&amp;nbsp;j&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(s[j&amp;nbsp;-&amp;nbsp;i&amp;nbsp;+&amp;nbsp;1]&amp;nbsp;==&amp;nbsp;s[j])&amp;nbsp;lp[i][j]&amp;nbsp;=&amp;nbsp;lp[i&amp;nbsp;-&amp;nbsp;2][j&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dp[i]&amp;nbsp;=&amp;nbsp;n;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;2;&amp;nbsp;j&amp;nbsp;&amp;lt;=&amp;nbsp;i;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(2&amp;nbsp;*&amp;nbsp;lp[j][i]&amp;nbsp;*&amp;nbsp;l&amp;nbsp;&amp;gt;=&amp;nbsp;j*k)&amp;nbsp;dp[i]&amp;nbsp;=&amp;nbsp;min(dp[i],&amp;nbsp;dp[i&amp;nbsp;-&amp;nbsp;j]&amp;nbsp;+&amp;nbsp;1);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;dp[n]&amp;nbsp;&amp;lt;&amp;nbsp;n&amp;nbsp;?&amp;nbsp;dp[n]&amp;nbsp;:&amp;nbsp;0);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/2273237291632900930/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/13330-palindromic.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2273237291632900930'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2273237291632900930'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/13330-palindromic.html' title='13330번: Palindromic'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-2627976362479854738</id><published>2017-08-30T20:07:00.000+09:00</published><updated>2017-08-30T20:07:37.719+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="dynamic programming"/><category scheme="http://www.blogger.com/atom/ns#" term="Linear Algebra"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>13328번: Message Passing</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/13328&quot;&gt;https://www.acmicpc.net/problem/13328&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;dp[i]: 시각이 i일 때 전화 수&lt;br /&gt;i) i &amp;lt; 0&lt;br /&gt;dp[i] = 0&lt;br /&gt;ii) i = 0&lt;br /&gt;dp[i] = 1&lt;br /&gt;iii) i &amp;gt; 0&lt;br /&gt;dp[i] = dp[i-1]&amp;nbsp;+ dp[i-2]&amp;nbsp;+ ...&amp;nbsp;+ dp[i-d]&lt;br /&gt;&lt;br /&gt;답은 dp[t]이다. 행렬을 이용하면 $O(\lg t)$ 횟수의 행렬 곱으로 답을 구할 수 있다.&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;mod&amp;nbsp;31991&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;d,&amp;nbsp;t;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;struct&lt;/span&gt;&amp;nbsp;st&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;m[50][50]&amp;nbsp;=&amp;nbsp;{};&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;operator&lt;/span&gt;*(st&amp;nbsp;a)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;const&lt;/span&gt;&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;st&amp;nbsp;ret;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;d;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;d;&amp;nbsp;j++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;k&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;k&amp;nbsp;&amp;lt;&amp;nbsp;d;&amp;nbsp;k++)&amp;nbsp;ret.m[i][j]&amp;nbsp;=&amp;nbsp;(ret.m[i][j]&amp;nbsp;+&amp;nbsp;m[i][k]&amp;nbsp;*&amp;nbsp;a.m[k][j])&amp;nbsp;%&amp;nbsp;mod;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ret;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;}u,&amp;nbsp;r;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;d,&amp;nbsp;&amp;amp;t);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;d;&amp;nbsp;i++)&amp;nbsp;r.m[i][i]&amp;nbsp;=&amp;nbsp;u.m[0][i]&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;d;&amp;nbsp;i++)&amp;nbsp;u.m[i][i&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(;&amp;nbsp;t;&amp;nbsp;t&amp;nbsp;&amp;gt;&amp;gt;=&amp;nbsp;1,&amp;nbsp;u&amp;nbsp;=&amp;nbsp;u*u)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(t&amp;nbsp;&amp;amp;&amp;nbsp;1)&amp;nbsp;r&amp;nbsp;=&amp;nbsp;r*u;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;r.m[0][0]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/2627976362479854738/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/13328-message-passing.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2627976362479854738'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2627976362479854738'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/13328-message-passing.html' title='13328번: Message Passing'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-1246286037911064311</id><published>2017-08-30T14:29:00.001+09:00</published><updated>2017-08-30T14:29:13.133+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>11070번: Pythagorean Expectation</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11070&quot;&gt;https://www.acmicpc.net/problem/11070&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;구현문제&lt;br /&gt;&lt;br /&gt;시간복잡도는 테스트 케이스마다 $O(n+m)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;u,&amp;nbsp;v,&amp;nbsp;p,&amp;nbsp;q,&amp;nbsp;t;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;s[1001]&amp;nbsp;=&amp;nbsp;{},&amp;nbsp;a[1001]&amp;nbsp;=&amp;nbsp;{},&amp;nbsp;maxi&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;mini&amp;nbsp;=&amp;nbsp;1e3;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;m);&amp;nbsp;m--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;u,&amp;nbsp;&amp;amp;v,&amp;nbsp;&amp;amp;p,&amp;nbsp;&amp;amp;q);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s[u]&amp;nbsp;+=&amp;nbsp;p;&amp;nbsp;a[u]&amp;nbsp;+=&amp;nbsp;q;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s[v]&amp;nbsp;+=&amp;nbsp;q;&amp;nbsp;a[v]&amp;nbsp;+=&amp;nbsp;p;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;w&amp;nbsp;=&amp;nbsp;s[i]&amp;nbsp;?&amp;nbsp;s[i]&amp;nbsp;*&amp;nbsp;s[i]&amp;nbsp;*&amp;nbsp;1000LL&amp;nbsp;/&amp;nbsp;(s[i]&amp;nbsp;*&amp;nbsp;s[i]&amp;nbsp;+&amp;nbsp;a[i]&amp;nbsp;*&amp;nbsp;a[i])&amp;nbsp;:&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(w&amp;nbsp;&amp;gt;&amp;nbsp;maxi)&amp;nbsp;maxi&amp;nbsp;=&amp;nbsp;w;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(w&amp;nbsp;&amp;lt;&amp;nbsp;mini)&amp;nbsp;mini&amp;nbsp;=&amp;nbsp;w;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n%d\n&quot;&lt;/span&gt;,&amp;nbsp;maxi,&amp;nbsp;mini);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/1246286037911064311/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11070-pythagorean-expectation.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/1246286037911064311'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/1246286037911064311'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11070-pythagorean-expectation.html' title='11070번: Pythagorean Expectation'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-8840537119666157322</id><published>2017-08-29T23:45:00.001+09:00</published><updated>2017-08-29T23:45:26.038+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Sorting Algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>11067번: Monotone Walkway</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11067&quot;&gt;https://www.acmicpc.net/problem/11067&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;x값이 다른 두 점에 대해서는 x값이 작은 점들의 번호가 작아야 한다. x가 같은 점들의 번호 순서는, 해당 x값보다 작으면서 가장 큰 번호의 점을 찾고 이 번호의 y값을 시작으로 오름차순 혹은 내림차순 정렬해서 매기면 된다.&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t,&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;x;&lt;br /&gt;pair&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;p[100001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;p[i].first,&amp;nbsp;&amp;amp;p[i].second);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sort(p&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1,&amp;nbsp;e;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;e)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e&amp;nbsp;=&amp;nbsp;upper_bound(p&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;1&amp;nbsp;+&amp;nbsp;n,&amp;nbsp;make_pair(p[i].first,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;(1e9)))&amp;nbsp;-&amp;nbsp;p;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(p[i].second^p[i&amp;nbsp;-&amp;nbsp;1].second)&amp;nbsp;reverse(p&amp;nbsp;+&amp;nbsp;i,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;e);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;m);&amp;nbsp;m--;)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x),&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&amp;nbsp;%d\n&quot;&lt;/span&gt;,&amp;nbsp;p[x].first,&amp;nbsp;p[x].second);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/8840537119666157322/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11067-monotone-walkway.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8840537119666157322'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/8840537119666157322'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11067-monotone-walkway.html' title='11067번: Monotone Walkway'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-4781053734718156138</id><published>2017-08-29T22:48:00.003+09:00</published><updated>2017-08-29T22:48:46.539+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="diameter of a tree"/><category scheme="http://www.blogger.com/atom/ns#" term="다시풀예정"/><title type='text'>11064번: Diameter</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11064&quot;&gt;https://www.acmicpc.net/problem/11064&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t,&amp;nbsp;n,&amp;nbsp;d;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vector&amp;lt;pair&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;adj[40001];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;priority_queue&amp;lt;pair&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;&amp;gt;&amp;nbsp;pq;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;r&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;t&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;cnt&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;ind[40001]&amp;nbsp;=&amp;nbsp;{};&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;d);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1,&amp;nbsp;x,&amp;nbsp;y,&amp;nbsp;z;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x,&amp;nbsp;&amp;amp;y,&amp;nbsp;&amp;amp;z);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[x].push_back({&amp;nbsp;y,z&amp;nbsp;});&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[y].push_back({&amp;nbsp;x,z&amp;nbsp;});&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r&amp;nbsp;+=&amp;nbsp;z;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ind[x]++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ind[y]++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(ind[i]&amp;nbsp;==&amp;nbsp;1)&amp;nbsp;pq.push({&amp;nbsp;-adj[i][0].second,i&amp;nbsp;}),&amp;nbsp;cnt++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(;;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h&amp;nbsp;=&amp;nbsp;pq.top().second,&amp;nbsp;dis&amp;nbsp;=&amp;nbsp;-pq.top().first;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pq.pop();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(2&amp;nbsp;*&amp;nbsp;dis&amp;nbsp;&amp;gt;=&amp;nbsp;d)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%.1lf\n&quot;&lt;/span&gt;,&amp;nbsp;r&amp;nbsp;-&amp;nbsp;(d&amp;nbsp;/&amp;nbsp;2.0&amp;nbsp;-&amp;nbsp;t)&amp;nbsp;*&amp;nbsp;cnt);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;break&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;r&amp;nbsp;-=&amp;nbsp;(dis&amp;nbsp;-&amp;nbsp;t)*cnt--;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(cnt&amp;nbsp;==&amp;nbsp;1)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;puts(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;0.0&quot;&lt;/span&gt;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;break&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ind[h]--;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;u&amp;nbsp;:&amp;nbsp;adj[h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(--ind[u.first]&amp;nbsp;==&amp;nbsp;1)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;auto&lt;/span&gt;&amp;nbsp;v&amp;nbsp;:&amp;nbsp;adj[u.first])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(ind[v.first])&amp;nbsp;pq.push({&amp;nbsp;-dis&amp;nbsp;-&amp;nbsp;v.second,u.first&amp;nbsp;}),&amp;nbsp;cnt++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;dis;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/4781053734718156138/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11064-diameter.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4781053734718156138'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4781053734718156138'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11064-diameter.html' title='11064번: Diameter'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-5613656636037156124</id><published>2017-08-28T16:27:00.000+09:00</published><updated>2017-08-28T16:27:13.351+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="dynamic programming"/><category scheme="http://www.blogger.com/atom/ns#" term="topological game"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>11062번: Card Game</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11062&quot;&gt;https://www.acmicpc.net/problem/11062&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;c[i]: i번째 카드에 쓰인 수&lt;br /&gt;dp[i][j]: j-i+1, j-i+2, ..., j번째 카드가 남았을 때 선수 플레이어가 만들 수 있는 최대 합&lt;br /&gt;dp[i][j] = sum(c[k]:&amp;nbsp;j-i&amp;lt;k&amp;lt;=j) - min(dp[i-1][j-1],dp[i-1][j])&lt;br /&gt;&lt;br /&gt;시간복잡도는 테스트 케이스마다 $O(n^2)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;s[1001],&amp;nbsp;n,&amp;nbsp;t;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;dp[1001]&amp;nbsp;=&amp;nbsp;{};&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;s&amp;nbsp;+&amp;nbsp;i),&amp;nbsp;s[i]&amp;nbsp;+=&amp;nbsp;s[i&amp;nbsp;-&amp;nbsp;1];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;n;&amp;nbsp;j&amp;nbsp;&amp;gt;=&amp;nbsp;i;&amp;nbsp;j--)&amp;nbsp;dp[j]&amp;nbsp;=&amp;nbsp;s[j]&amp;nbsp;-&amp;nbsp;s[j&amp;nbsp;-&amp;nbsp;i]&amp;nbsp;-&amp;nbsp;min(dp[j&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;dp[j]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;dp[n]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/5613656636037156124/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11062-card-game.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/5613656636037156124'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/5613656636037156124'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11062-card-game.html' title='11062번: Card Game'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-6767344806681503641</id><published>2017-08-28T14:53:00.001+09:00</published><updated>2017-08-28T14:53:16.192+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Extended Euclidean Algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="number theory"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>6064번: Cain Calendar</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/6064&quot;&gt;https://www.acmicpc.net/problem/6064&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;d = GCD(m,n)&lt;br /&gt;확장 유클리드 알고리즘을 이용해 mu - nv = y-x (n/d &amp;gt; u &amp;gt;= 0, m/d &amp;gt; v &amp;gt;= 0)인 u, v를 찾는다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 테스트 케이스마다 $O(\lg(min(m,n)))$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;x,&amp;nbsp;y,&amp;nbsp;t;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ee(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;a,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;b,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;u,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&amp;amp;v)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!b)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u&amp;nbsp;=&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;a;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;ee(b,&amp;nbsp;a%b,&amp;nbsp;v,&amp;nbsp;u);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;v&amp;nbsp;-=&amp;nbsp;a&amp;nbsp;/&amp;nbsp;b*u;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;ret;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;t);&amp;nbsp;t--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;m,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;x,&amp;nbsp;&amp;amp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;u,&amp;nbsp;v,&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;ee(m,&amp;nbsp;-n,&amp;nbsp;u,&amp;nbsp;v);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;((y&amp;nbsp;-&amp;nbsp;x)&amp;nbsp;%&amp;nbsp;ret)&amp;nbsp;{&amp;nbsp;puts(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;-1&quot;&lt;/span&gt;);&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;continue&lt;/span&gt;;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;p&amp;nbsp;=&amp;nbsp;abs(n&amp;nbsp;/&amp;nbsp;ret);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;(u*(y&amp;nbsp;-&amp;nbsp;x)&amp;nbsp;/&amp;nbsp;ret%p&amp;nbsp;+&amp;nbsp;p)&amp;nbsp;%&amp;nbsp;p*m&amp;nbsp;+&amp;nbsp;x);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/6767344806681503641/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/6064-cain-calendar.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/6767344806681503641'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/6767344806681503641'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/6064-cain-calendar.html' title='6064번: Cain Calendar'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-961205416279227160</id><published>2017-08-27T13:16:00.001+09:00</published><updated>2017-08-27T13:16:31.673+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Heavy-Light Decomposition"/><category scheme="http://www.blogger.com/atom/ns#" term="lowest common ancestor"/><category scheme="http://www.blogger.com/atom/ns#" term="segment tree"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>13510번: 트리와 쿼리 1</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/13510&quot;&gt;https://www.acmicpc.net/problem/13510&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;HLD를 구현한다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O((n+m)\lg n)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;last[100001],&amp;nbsp;idx[100001],&amp;nbsp;cnt[100001],&amp;nbsp;par[100001],&amp;nbsp;tree[400000],&amp;nbsp;c;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;u[100000],&amp;nbsp;v[100000],&amp;nbsp;w[100000];&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;adj[100001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;count(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;p)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;it&amp;nbsp;:&amp;nbsp;adj[h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(it^p)&amp;nbsp;count(it,&amp;nbsp;h),&amp;nbsp;cnt[h]&amp;nbsp;+=&amp;nbsp;cnt[it];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cnt[h]++;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;build(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;p)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;it&amp;nbsp;:&amp;nbsp;adj[h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(it^p&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;cnt[t]&amp;nbsp;&amp;lt;&amp;nbsp;cnt[it])&amp;nbsp;t&amp;nbsp;=&amp;nbsp;it;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;it&amp;nbsp;:&amp;nbsp;adj[h])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(it^p&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;it^t)&amp;nbsp;build(it,&amp;nbsp;h);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!last[h])&amp;nbsp;last[h]&amp;nbsp;=&amp;nbsp;h;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(t)&amp;nbsp;last[t]&amp;nbsp;=&amp;nbsp;last[h],&amp;nbsp;build(t,&amp;nbsp;h);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;par[h]&amp;nbsp;=&amp;nbsp;p;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;idx[h]&amp;nbsp;=&amp;nbsp;++c;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;void&lt;/span&gt;&amp;nbsp;update(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;l,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;r,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;g,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;x)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(r&amp;nbsp;&amp;lt;&amp;nbsp;g&amp;nbsp;||&amp;nbsp;g&amp;nbsp;&amp;lt;&amp;nbsp;l)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(l&amp;nbsp;==&amp;nbsp;r)&amp;nbsp;tree[h]&amp;nbsp;=&amp;nbsp;x;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;else&lt;/span&gt;&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;update(h&amp;nbsp;*&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;l,&amp;nbsp;(l&amp;nbsp;+&amp;nbsp;r)&amp;nbsp;/&amp;nbsp;2,&amp;nbsp;g,&amp;nbsp;x);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;update(h&amp;nbsp;*&amp;nbsp;2&amp;nbsp;+&amp;nbsp;2,&amp;nbsp;(l&amp;nbsp;+&amp;nbsp;r)&amp;nbsp;/&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;r,&amp;nbsp;g,&amp;nbsp;x);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tree[h]&amp;nbsp;=&amp;nbsp;max(tree[h&amp;nbsp;*&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1],&amp;nbsp;tree[h&amp;nbsp;*&amp;nbsp;2&amp;nbsp;+&amp;nbsp;2]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;query(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;h,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;l,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;r,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;gl,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;gr)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(gr&amp;nbsp;&amp;lt;&amp;nbsp;l&amp;nbsp;||&amp;nbsp;r&amp;nbsp;&amp;lt;&amp;nbsp;gl)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(gl&amp;nbsp;&amp;lt;=&amp;nbsp;l&amp;amp;&amp;amp;r&amp;nbsp;&amp;lt;=&amp;nbsp;gr)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;tree[h];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;max(query(h&amp;nbsp;*&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;l,&amp;nbsp;(l&amp;nbsp;+&amp;nbsp;r)&amp;nbsp;/&amp;nbsp;2,&amp;nbsp;gl,&amp;nbsp;gr),&amp;nbsp;query(h&amp;nbsp;*&amp;nbsp;2&amp;nbsp;+&amp;nbsp;2,&amp;nbsp;(l&amp;nbsp;+&amp;nbsp;r)&amp;nbsp;/&amp;nbsp;2&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;r,&amp;nbsp;gl,&amp;nbsp;gr));&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;lca(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;x,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;y)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(last[x]&amp;nbsp;^&amp;nbsp;last[y])&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(cnt[last[x]]&amp;nbsp;&amp;gt;&amp;nbsp;cnt[last[y]])&amp;nbsp;swap(x,&amp;nbsp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ret&amp;nbsp;=&amp;nbsp;max(ret,&amp;nbsp;query(0,&amp;nbsp;1,&amp;nbsp;n,&amp;nbsp;idx[x],&amp;nbsp;idx[last[x]]));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&amp;nbsp;=&amp;nbsp;par[last[x]];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(cnt[x]&amp;nbsp;&amp;gt;&amp;nbsp;cnt[y])&amp;nbsp;swap(x,&amp;nbsp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;max(ret,&amp;nbsp;query(0,&amp;nbsp;1,&amp;nbsp;n,&amp;nbsp;idx[x],&amp;nbsp;idx[y]&amp;nbsp;-&amp;nbsp;1));&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;u&amp;nbsp;+&amp;nbsp;i,&amp;nbsp;v&amp;nbsp;+&amp;nbsp;i,&amp;nbsp;w&amp;nbsp;+&amp;nbsp;i);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[u[i]].push_back(v[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[v[i]].push_back(u[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count(1,&amp;nbsp;0);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;build(1,&amp;nbsp;0);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(par[v[i]]&amp;nbsp;==&amp;nbsp;u[i])&amp;nbsp;swap(u[i],&amp;nbsp;v[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;update(0,&amp;nbsp;1,&amp;nbsp;n,&amp;nbsp;idx[u[i]],&amp;nbsp;w[i]);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;m);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;q,&amp;nbsp;x,&amp;nbsp;y;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;m;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;q,&amp;nbsp;&amp;amp;x,&amp;nbsp;&amp;amp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(q&amp;nbsp;==&amp;nbsp;1)&amp;nbsp;update(0,&amp;nbsp;1,&amp;nbsp;n,&amp;nbsp;idx[u[x]],&amp;nbsp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;else&lt;/span&gt;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;lca(x,&amp;nbsp;y));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/961205416279227160/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/13510-1.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/961205416279227160'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/961205416279227160'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/13510-1.html' title='13510번: 트리와 쿼리 1'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-3253700466340458992</id><published>2017-08-26T20:28:00.000+09:00</published><updated>2017-08-26T20:28:02.419+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="Bipartite Graph"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Network Flow Problem"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>11378번: 열혈강호 4</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/11378&quot;&gt;https://www.acmicpc.net/problem/11378&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;이분 매칭 문제로 만들어 풀 수 있다.&lt;br /&gt;먼저, 직원과 일을 일대일 매칭시킨다. 그리고 나서 벌점을 배분하는데, 매칭이 되지 않은 일 중 해당 일을 할 수 있는 직원(처음에 매칭되었던 직원이라도 상관없다.)이 있다면 그러한 직원 아무에게나 1점의 벌점을 매기고 해당 일을 하도록 할 수 있다.&lt;br /&gt;고로 답은 min( (일대일 매칭 수)&amp;nbsp;+ k, (직원 누군가 할 수 있는 일의 개수) )&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(V^3)$ // V = n+m&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;vis[1001],&amp;nbsp;rev[1001],&amp;nbsp;n,&amp;nbsp;m,&amp;nbsp;k,&amp;nbsp;ck[1001],&amp;nbsp;cnt,&amp;nbsp;c;&lt;br /&gt;&lt;span style=&quot;color: #2b91af;&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;adj[1001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;dfs(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: grey;&quot;&gt;h&lt;/span&gt;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;vis[&lt;span style=&quot;color: grey;&quot;&gt;h&lt;/span&gt;]&amp;nbsp;=&amp;nbsp;c;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;it&amp;nbsp;:&amp;nbsp;adj[&lt;span style=&quot;color: grey;&quot;&gt;h&lt;/span&gt;])&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!rev[it]&amp;nbsp;||&amp;nbsp;vis[rev[it]]&amp;nbsp;^&amp;nbsp;c&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;dfs(rev[it]))&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rev[it]&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color: grey;&quot;&gt;h&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;m,&amp;nbsp;&amp;amp;k);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1,&amp;nbsp;x,&amp;nbsp;y;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;x);&amp;nbsp;x--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;adj[i].push_back(y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cnt&amp;nbsp;+=&amp;nbsp;!ck[y]++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(c&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;c&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;c++)&amp;nbsp;k&amp;nbsp;+=&amp;nbsp;dfs(c);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;min(k,&amp;nbsp;cnt));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/3253700466340458992/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11378-4.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3253700466340458992'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3253700466340458992'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/11378-4.html' title='11378번: 열혈강호 4'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-2918908359295911478</id><published>2017-08-26T16:02:00.003+09:00</published><updated>2017-08-26T16:11:12.785+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="Knuth–Morris–Pratt algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>1786번: 찾기</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/1786&quot;&gt;https://www.acmicpc.net/problem/1786&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;kmp 알고리즘을 구현한다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(n+m)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;pre style=&quot;background-attachment: initial; background-clip: initial; background-image: initial; background-origin: initial; background-position: initial; background-repeat: initial; background-size: initial; font-family: 돋움체;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;char&lt;/span&gt;&amp;nbsp;t[1000001],&amp;nbsp;p[1000001];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;pi[1000001]&amp;nbsp;=&amp;nbsp;{&amp;nbsp;-1&amp;nbsp;};&lt;br /&gt;vector&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;res;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%[^\n]%*c%[^\n]&quot;&lt;/span&gt;,&amp;nbsp;t,&amp;nbsp;p);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;j&amp;nbsp;=&amp;nbsp;-1;&amp;nbsp;p[i];&amp;nbsp;pi[++i]&amp;nbsp;=&amp;nbsp;++j)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(~j&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;p[i]&amp;nbsp;^&amp;nbsp;p[j])&amp;nbsp;j&amp;nbsp;=&amp;nbsp;pi[j];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;t[i];&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(~j&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;t[i]&amp;nbsp;^&amp;nbsp;p[j])&amp;nbsp;j&amp;nbsp;=&amp;nbsp;pi[j];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(!p[++j])&amp;nbsp;res.push_back(i&amp;nbsp;+&amp;nbsp;2&amp;nbsp;-&amp;nbsp;j);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;,&amp;nbsp;res.size());&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;it&amp;nbsp;:&amp;nbsp;res)&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&amp;nbsp;&quot;&lt;/span&gt;,&amp;nbsp;it);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/2918908359295911478/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/1786.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2918908359295911478'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/2918908359295911478'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/1786.html' title='1786번: 찾기'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-3703228425157759327</id><published>2017-08-26T03:05:00.000+09:00</published><updated>2017-08-26T12:44:01.254+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="*"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="convex hull"/><category scheme="http://www.blogger.com/atom/ns#" term="Geometry"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>1708번: 볼록 껍질</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/1708&quot;&gt;https://www.acmicpc.net/problem/1708&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;graham scan을 이용한다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(n\lg n)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;x&amp;nbsp;first&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;y&amp;nbsp;second&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;pair&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;point;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;ccw(point&amp;nbsp;i,&amp;nbsp;point&amp;nbsp;j,&amp;nbsp;point&amp;nbsp;k)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;1LL&amp;nbsp;*&amp;nbsp;(j.x&amp;nbsp;-&amp;nbsp;i.x)*(k.y&amp;nbsp;-&amp;nbsp;i.y)&amp;nbsp;-&amp;nbsp;1LL&amp;nbsp;*&amp;nbsp;(k.x&amp;nbsp;-&amp;nbsp;i.x)*(j.y&amp;nbsp;-&amp;nbsp;i.y);&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;sz;&lt;br /&gt;point&amp;nbsp;p[100000],&amp;nbsp;stk[100000];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;p[i].x,&amp;nbsp;&amp;amp;p[i].y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;swap(p[0],&amp;nbsp;*min_element(p,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;n));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sort(p&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;n,&amp;nbsp;[](point&amp;nbsp;i,&amp;nbsp;point&amp;nbsp;j)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;ccw(p[0],&amp;nbsp;i,&amp;nbsp;j);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;t&amp;nbsp;&amp;gt;&amp;nbsp;0&amp;nbsp;||&amp;nbsp;!t&amp;amp;&amp;amp;i&amp;nbsp;&amp;lt;&amp;nbsp;j;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(sz&amp;nbsp;&amp;gt;&amp;nbsp;1&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;ccw(stk[sz&amp;nbsp;-&amp;nbsp;2],&amp;nbsp;stk[sz&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;p[i])&amp;nbsp;&amp;lt;=&amp;nbsp;0)&amp;nbsp;sz--;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stk[sz++]&amp;nbsp;=&amp;nbsp;p[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;sz);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;위, 아래 껍질을 나눠서 구할 수도 있다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(n\lg n)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;x&amp;nbsp;first&lt;br /&gt;&lt;span style=&quot;color: grey;&quot;&gt;#define&lt;/span&gt;&amp;nbsp;y&amp;nbsp;second&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;using&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;namespace&lt;/span&gt;&amp;nbsp;std;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;pair&amp;lt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;nbsp;point;&lt;br /&gt;point&amp;nbsp;p[100000],&amp;nbsp;low[100000],&amp;nbsp;up[100000];&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;sl,&amp;nbsp;su;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;long&lt;/span&gt;&amp;nbsp;ccw(point&amp;nbsp;i,&amp;nbsp;point&amp;nbsp;j,&amp;nbsp;point&amp;nbsp;k)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;1LL&amp;nbsp;*&amp;nbsp;(j.x&amp;nbsp;-&amp;nbsp;i.x)*(k.y&amp;nbsp;-&amp;nbsp;i.y)&amp;nbsp;-&amp;nbsp;1LL&amp;nbsp;*&amp;nbsp;(k.x&amp;nbsp;-&amp;nbsp;i.x)*(j.y&amp;nbsp;-&amp;nbsp;i.y);&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;p[i].x,&amp;nbsp;&amp;amp;p[i].y);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sort(p,&amp;nbsp;p&amp;nbsp;+&amp;nbsp;n);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(sl&amp;nbsp;&amp;gt;&amp;nbsp;1&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;ccw(low[sl&amp;nbsp;-&amp;nbsp;2],&amp;nbsp;low[sl&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;p[i])&amp;nbsp;&amp;gt;=&amp;nbsp;0)&amp;nbsp;sl--;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(su&amp;nbsp;&amp;gt;&amp;nbsp;1&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;ccw(up[su&amp;nbsp;-&amp;nbsp;2],&amp;nbsp;up[su&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;p[i])&amp;nbsp;&amp;lt;=&amp;nbsp;0)&amp;nbsp;su--;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;low[sl++]&amp;nbsp;=&amp;nbsp;up[su++]&amp;nbsp;=&amp;nbsp;p[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;sl&amp;nbsp;+&amp;nbsp;su&amp;nbsp;-&amp;nbsp;2);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/3703228425157759327/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/1708.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3703228425157759327'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/3703228425157759327'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/1708.html' title='1708번: 볼록 껍질'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-207300328215333392.post-4967419231616891329</id><published>2017-08-26T01:49:00.000+09:00</published><updated>2017-08-26T01:49:33.721+09:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Bit Mask"/><category scheme="http://www.blogger.com/atom/ns#" term="BOJ"/><category scheme="http://www.blogger.com/atom/ns#" term="greedy algorithm"/><category scheme="http://www.blogger.com/atom/ns#" term="parametric search"/><category scheme="http://www.blogger.com/atom/ns#" term="정리완료"/><title type='text'>5842번: Partitioning the Farm</title><content type='html'>&lt;a href=&quot;https://www.acmicpc.net/problem/5842&quot;&gt;https://www.acmicpc.net/problem/5842&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;먼저 가로 방향 울타리의 위치를 정한다. 여기서 가능한 모양의 경우의 수는 $2^{n-1}$일 것이다.&lt;br /&gt;그 다음, 남은 울타리를 세로 방향으로 설치하되 그룹 안 소의 최대 수가 최소가 되도록 설치하는 법을 찾아야 한다.&lt;br /&gt;그룹 안 소의 최대 수를 x라고 하고 이 값에 대해 파라메트릭 서치를 한다. 농장의 왼쪽 열부터 보면서 그룹 안 소의 최대 수가 x이하가 되도록 세로로 울타리를 세웠을 때 모든 울타리 수가 k개 이하인지 판단하는 문제로 바꿔 풀 수 있다.&lt;br /&gt;&lt;br /&gt;시간복잡도는 $O(2^{n/2}*n^2*\lg L)$&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background: white; font-family: 돋움체; font-size: 13px;&quot;&gt;&lt;span style=&quot;color: grey;&quot;&gt;#include&lt;/span&gt;&lt;span style=&quot;color: #a31515;&quot;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;n,&amp;nbsp;k,&amp;nbsp;s[16][16],&amp;nbsp;a[16],&amp;nbsp;sz,&amp;nbsp;mid,&amp;nbsp;res&amp;nbsp;=&amp;nbsp;1e9;&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;bool&lt;/span&gt;&amp;nbsp;f()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;cnt&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;j&amp;nbsp;&amp;lt;=&amp;nbsp;sz;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(s[a[j]][i]&amp;nbsp;-&amp;nbsp;s[a[j]][t]&amp;nbsp;-&amp;nbsp;s[a[j&amp;nbsp;-&amp;nbsp;1]][i]&amp;nbsp;+&amp;nbsp;s[a[j&amp;nbsp;-&amp;nbsp;1]][t]&amp;nbsp;&amp;gt;&amp;nbsp;mid)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(t&amp;nbsp;==&amp;nbsp;i&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;false&lt;/span&gt;;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t&amp;nbsp;=&amp;nbsp;i&amp;nbsp;-&amp;nbsp;1,&amp;nbsp;cnt++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;cnt&amp;nbsp;&amp;lt;=&amp;nbsp;k&amp;nbsp;-&amp;nbsp;sz&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;}&lt;br /&gt;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;main()&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d%d&quot;&lt;/span&gt;,&amp;nbsp;&amp;amp;n,&amp;nbsp;&amp;amp;k);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;i&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;i++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;1;&amp;nbsp;j&amp;nbsp;&amp;lt;=&amp;nbsp;n;&amp;nbsp;j++)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;scanf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;s[i]&amp;nbsp;+&amp;nbsp;j);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s[i][j]&amp;nbsp;+=&amp;nbsp;s[i&amp;nbsp;-&amp;nbsp;1][j]&amp;nbsp;+&amp;nbsp;s[i][j&amp;nbsp;-&amp;nbsp;1]&amp;nbsp;-&amp;nbsp;s[i&amp;nbsp;-&amp;nbsp;1][j&amp;nbsp;-&amp;nbsp;1];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;n&amp;nbsp;-&amp;nbsp;1;&amp;nbsp;i--;)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sz&amp;nbsp;=&amp;nbsp;0;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;for&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;j&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;j&amp;nbsp;&amp;lt;&amp;nbsp;n&amp;nbsp;-&amp;nbsp;1;&amp;nbsp;j++)&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(1&amp;nbsp;&amp;lt;&amp;lt;&amp;nbsp;j&amp;amp;i)&amp;nbsp;a[++sz]&amp;nbsp;=&amp;nbsp;j&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;a[++sz]&amp;nbsp;=&amp;nbsp;n;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;int&lt;/span&gt;&amp;nbsp;low&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;up&amp;nbsp;=&amp;nbsp;1e6;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;while&lt;/span&gt;&amp;nbsp;(low&amp;nbsp;&amp;lt;=&amp;nbsp;up)&amp;nbsp;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mid&amp;nbsp;=&amp;nbsp;low&amp;nbsp;+&amp;nbsp;up&amp;nbsp;&amp;gt;&amp;gt;&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f()&amp;nbsp;?&amp;nbsp;up&amp;nbsp;=&amp;nbsp;mid&amp;nbsp;-&amp;nbsp;1&amp;nbsp;:&amp;nbsp;low&amp;nbsp;=&amp;nbsp;mid&amp;nbsp;+&amp;nbsp;1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;if&lt;/span&gt;&amp;nbsp;(res&amp;nbsp;&amp;gt;&amp;nbsp;up)&amp;nbsp;res&amp;nbsp;=&amp;nbsp;low;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;printf(&lt;span style=&quot;color: #a31515;&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;nbsp;res);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: blue;&quot;&gt;return&lt;/span&gt;&amp;nbsp;0;&lt;br /&gt;}&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://codersbrunch.blogspot.com/feeds/4967419231616891329/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/5842-partitioning-farm.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4967419231616891329'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/207300328215333392/posts/default/4967419231616891329'/><link rel='alternate' type='text/html' href='http://codersbrunch.blogspot.com/2017/08/5842-partitioning-farm.html' title='5842번: Partitioning the Farm'/><author><name>Unknown</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry></feed>