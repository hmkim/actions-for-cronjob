<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Junggil Lee on Medium]]></title>
        <description><![CDATA[Stories by Junggil Lee on Medium]]></description>
        <link>https://medium.com/@junggil?source=rss-18658771949------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*xuP_XF0DjflvOGTFfxwTqA.png</url>
            <title>Stories by Junggil Lee on Medium</title>
            <link>https://medium.com/@junggil?source=rss-18658771949------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 13 May 2019 19:03:02 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@junggil" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Limitation of 65536 open TCP connections]]></title>
            <link>https://medium.com/@junggil/limitation-of-65536-open-tcp-connections-35dd57c980e8?source=rss-18658771949------2</link>
            <guid isPermaLink="false">https://medium.com/p/35dd57c980e8</guid>
            <category><![CDATA[tcp-header]]></category>
            <category><![CDATA[linux-port-limit]]></category>
            <dc:creator><![CDATA[Junggil Lee]]></dc:creator>
            <pubDate>Thu, 19 Oct 2017 04:57:39 GMT</pubDate>
            <atom:updated>2017-10-19T04:57:39.997Z</atom:updated>
            <content:encoded><![CDATA[<p>리눅스 환경에서 큰 규모의 네트워크 요청을 처리하다 보면, 65536개의 connection 제한에 걸리는 경우를 경험할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/562/1*hMnD3mothbsFR6CdcOrBOA.png" /><figcaption>출처 : <a href="https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xml">https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xml</a></figcaption></figure><p>IANA에서 정리한 Ports 번호를 살펴봐도 65536개 이내에서, 영역을 나눠서 사용을 하도록 되어있음을 알 수 있습니다.</p><p>이 포스팅은 “왜 65536개로 제한이 되었는지”와, 만약 “65536보다 더 큰 값이 필요하면 어떻게 해야 할까?”에 대한 답에 대한 글입니다.</p><h4>관련 질문</h4><ol><li><a href="https://superuser.com/questions/251596/is-there-a-hard-limit-of-65536-open-tcp-connections-per-ip-address-on-linux"><em>Is there a hard limit of 65536 open TCP connections per IP address on linux</em></a><em>?</em></li><li><a href="https://unix.stackexchange.com/questions/130797/can-tcp-provide-more-than-65535-ports">Can TCP provide more than 65535 ports?</a></li></ol><h4>왜 65536개 일까?</h4><p>65536은 친숙한 숫자입니다. 2의 16승인 이 값은 어디서 온 것 일까요? 답은 TCP Header 규격에 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*GASx5XaDRhN4AKnTV1AOLA.png" /><figcaption>출처 : <a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">https://en.wikipedia.org/wiki/Transmission_Control_Protocol</a></figcaption></figure><p>Source와 Destination에 대한 <strong>port를 표현하는 field의 크기가 16bit</strong>로 구성이 되어있기 때문에 65536개로 제한이 되는 것이죠. 그런데 위에 그림은 IPv4에 해당하는 TCP Header 규격입니다. IPv6로 가면 문제가 해결이 될 수 있을까요?</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/711/1*QZK0l6UwDqtc4CT-vOCx-A.png" /><figcaption>출처 : <a href="https://en.wikipedia.org/wiki/Transmission_Control_Protocol">https://en.wikipedia.org/wiki/Transmission_Control_Protocol</a></figcaption></figure><p>답은 <strong>“아니오”</strong> 입니다. Source / Destination을 위한 공간은 4배로 커졌지만, port에 대한 field는 동일하게 16bit를 유지하기 때문에 65536 보다 큰 값을 표현할 수 없습니다.</p><h4>65536보다 더 많이는 쓸 수 없을까?</h4><p>물론 가능합니다. TCP 규격을 눈여겨 보았으면, Address + Port로 요청에 대한 Source와 Destination을 구분하는 것을 파악하셨을 것입니다. 그렇다고 하면 가능한 방법은 다음과 같을 것입니다.</p><ol><li>Address를 바꾸거나</li><li>동일 Address에서 Port 범위를 바꾸거나</li></ol><p>2번은 TCP 규격을 바꿔야 하는 많은 노력과 시간이 필요한 현실적으로 불가능한 접근이지만, 1번은 NIC (Network Interface Card)을 추가만으로 IP Address를 추가로 할당 받을 수 있기 때문에 상대적으로 쉬운 방법이죠.</p><p>결과적으로 “NIC 갯수 * 65536” 만큼의 Port, 즉 TCP Connection을 사용할 수 있다고 정리할 수 있겠습니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=35dd57c980e8" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[실패한 리더쉽의 2가지 사례]]></title>
            <link>https://medium.com/@junggil/%EC%8B%A4%ED%8C%A8%ED%95%9C-%EB%A6%AC%EB%8D%94%EC%89%BD%EC%9D%98-2%EA%B0%80%EC%A7%80-%EC%82%AC%EB%A1%80-cb47e07883af?source=rss-18658771949------2</link>
            <guid isPermaLink="false">https://medium.com/p/cb47e07883af</guid>
            <category><![CDATA[organizational-culture]]></category>
            <category><![CDATA[leadership]]></category>
            <category><![CDATA[failure]]></category>
            <dc:creator><![CDATA[Junggil Lee]]></dc:creator>
            <pubDate>Thu, 19 Oct 2017 01:06:46 GMT</pubDate>
            <atom:updated>2017-10-19T01:06:46.878Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/649/1*NJ3pOPKgIwxGMG20Cto85Q.png" /><figcaption>그림 출처 : <a href="https://goo.gl/ujsm9s">https://goo.gl/ujsm9s</a></figcaption></figure><p>개인적으로 관심이 많은 분야가 “조직문화”와 “리더쉽”에 대한 영역입니다.</p><p>오늘은 그 중에서 <strong><em>실패한 리더쉽 </em></strong>에 대한 연결고리가 있는 두 개의 글을 묶어서 소개하려고 합니다.</p><ol><li>경영자와 직원이 서로를 바보로 만드는 조직: 발단은 리더가 심은 두려움<a href="https://m.blog.naver.com/ecokis/221114039023">https://m.blog.naver.com/ecokis/221114039023</a></li><li>리더가 책임을 진다는 것<br><a href="https://brunch.co.kr/@younghakjang/39">https://brunch.co.kr/@younghakjang/39</a></li></ol><h4>경영자와 직원이 서로를 바보로 만드는 조직: 발단은 리더가 심은 두려움</h4><blockquote>CEO는 자기 기준에 미치지 못한다 싶은 직원은 가차 없이 모욕하고 수치심을 주었다. 그의 뜻에 어긋난다 싶은 직원은 어김없이 승진과 보상에서 밀려났다.</blockquote><blockquote>인간의 두뇌는 두려움을 느끼면 항상 일신의 안위에 집중하기 마련이다. 무엇보다 우선 CEO 앞에서는 그의 심기를 거스를 만한 이야기는 절대 하지 않게 된다. 불편한 진실, 다시 말해 회사에 어떤 문제가 있는지, 어떤 위기의 징조가 보이는지는 절대 말하지 않는다. 오로지 듣기 좋은 말만 하게 된다.</blockquote><blockquote>… 중략 …</blockquote><blockquote>리더는 `<strong>진실의 수호자</strong>’ 여야 한다. 최고경영자는 ‘진실의 최고 수호자’ 역할을 자임해야 한다.</blockquote><blockquote>픽사 사장 에드 캣멀이 쓴 책 `창의성을 지휘하라’(윤태경 옮김)의 말미에는 `진실의 수호자’가 되려는 리더가 경청할만한 경구가 여럿 적혀 있다. 이를 소개하면 다음과 같다.</blockquote><blockquote>“조직에 공포가 존재한다면, 공포가 존재하는 이유가 있을 것이다. 경영자의 임무는 공포를 유발하는 원인을 찾아내고, 이해하고, 근절하는 것이다.”</blockquote><blockquote>“기업에는 직원들이 서로 솔직하게 말하지 못하는 여러 이유가 존재한다. 이런 이유들을 찾아 해소하는 것이 경영자의 임무다.”</blockquote><blockquote>“어느 직원이 당신의 견해에 동의하지 않는다면, 동의하지 않는 이유가 있을 것이다. 경영자의 첫 번째 임무는 직원들이 동의하지 않는 이유를 이해하는 것이다.”</blockquote><p>많은 회사들에서 꼭 오너가 아니더라도, 구성원에 대한 평가권과 상/벌을 기반으로 직원들을 제왕적으로 관리하는 경우가 많이 있습니다. 이 글은 <strong><em>“훌륭한 리더쉽이란 무엇인가?”</em></strong>라는 질문에 대해서 뛰어난 모범 답안을 제시하고 있다고 생각합니다.</p><h4>리더가 책임을 진다는 것</h4><blockquote>시장 상황이 나빠졌고, 실적이 꺾이기 시작했다. 성장이 둔화되면 그동안 그냥 넘어갈 수 있었던 많은 문제들이 진짜 문제가 된다. 그러면서 과거의 잘못된 의사결정이 하나씩 표면 위로 드러난다. 진출하면 안 되는데 진출한 사업, 잘못 잡은 기존 사업의 전략방향, 사면 안되는데 산 회사나 부동산, 적합하지 않은 자리에 세워진 리더 등.</blockquote><blockquote>그리고 잘못된 의사결정에 대해 직원들은 책임을 따지기 시작한다. 결정을 잘못한 사람들은 징계를 받는다. 그런데 결정을 내린 사람이 직원이 아니라 회장님(=오너)이라면 어떻게 책임을 져야 하는가?</blockquote><blockquote>오너는 어차피 월급이 문제가 아니니 감봉도 의미가 없다. 정직이든, 강등이든 마찬가지이다. 오너가 자신을 해고하는 것도 말이 안 된다. 경영에서 물러난다고 해도 본인이 오너이기 때문에 언제나 물릴 수 있는 이야기이고, 공식적인 직책이 없어도 어차피 주요 경영진들이 다 자기가 세운 사람들이므로 회사 경영에 영향을 미칠 수 있는 방법은 얼마든지 있다. 오히려 공식적으로 책임질 일만 없어질 뿐이다.</blockquote><blockquote>…중략 …</blockquote><blockquote>이제 와서 생각해보면, 사람들이 결국 듣고 싶었던 것은 ‘<strong>내가 잘못했다&#39; 는 고백</strong>이 아니었을까 싶다.</blockquote><blockquote>아마 그때 경영진들이 자신의 잘못을 고백했으면 회사 분위기가 그 지경까지 가진 않았으리라 생각한다. 위계적인 우리나라의 문화에서는 리더가 자신의 약점이나 잘못을 인정하면 권위가 무너진다고 생각한다. 그래서 자기의 잘못을 절대로 인정하지 않는다. 당시 우리 회사도 리더들은 절대로 자기의 잘못을 인정하지 않았다. 자기는 제대로 지시했는데 실행한 사람들이 제대로 못했다고 탓하거나, 불가능한 목표를 제시하고 목표를 달성 못한 사람들을 탓하거나, 심지어 자기가 결정을 제대로 내릴 수 없도록 잘못 보고한 실무자들을 탓했다. 수많은 대책 회의를 열고, 실무자들에게 윽박질렀다.</blockquote><p>저 역시 불행하게 인정하고 사과하는 오너를 본 경험이 없던 것 같습니다. 회사에서 발표하는 상황이 어려운 이유는 환율 문제이거나, 적절한 상품 대응이 늦어서, R&amp;D 기술 개발이 성공적이지 않았기 때문이었지, 경영자의 잘못된 판단이나 결정이 원인으로는 지적 되지 않았지요.</p><p>저는 조직에서의 상/벌은 같은 기준에서 적용이 되어야 한다고 생각합니다. 다시 말해서 성과에 대한 포상, 이득은 조직 책임자가 암묵적으로 포함되지만, 벌에 대해서는 조직 책임자를 제외하고 구체적인 실무자를 찾아서만 이루어지면 안 된다고 보는 거죠.</p><p>실패와 실수에 대해서 조직 책임자가 수용하고 인정할 수 있어야, 조직 내부에서 창의적이고 다양한 시도가 일어날 수 있지 않을까 싶습니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cb47e07883af" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Deview 2017에서 꼭 챙겨야 하는 4가지 굳즈]]></title>
            <link>https://medium.com/@junggil/deview-2017%EC%97%90%EC%84%9C-%EA%BC%AD-%EC%B1%99%EA%B2%A8%EC%95%BC-%ED%95%98%EB%8A%94-4%EA%B0%80%EC%A7%80-%EA%B5%B3%EC%A6%88-dd67aa92f943?source=rss-18658771949------2</link>
            <guid isPermaLink="false">https://medium.com/p/dd67aa92f943</guid>
            <category><![CDATA[goods]]></category>
            <category><![CDATA[deview2017]]></category>
            <category><![CDATA[coex]]></category>
            <dc:creator><![CDATA[Junggil Lee]]></dc:creator>
            <pubDate>Mon, 16 Oct 2017 23:05:06 GMT</pubDate>
            <atom:updated>2017-10-16T23:28:58.062Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/382/1*W4fFwDQRRCRo51msYjaQUQ.png" /><figcaption>DEVSISTERS 노트 표지의 재질</figcaption></figure><p>Day1 기준으로 추천하는 굳즈는 다음과 같습니다.<br>표기하는 순서는 “부스(회사)이름&quot; — 굳즈, 추천하는 이유 입니다.</p><ol><li>DEVSISTERS — 노트2권 + 쿠키런 펜<br>노트 표지의 재질이 뛰어나고 마감이 좋습니다. B4 정도의 사이즈로, 어느 목적이든 무난하게 쓸 수 있을만한 노트라서 활용성이 뛰어날 것 같네요.</li><li>네이버 (네이버.아이디로.로그인) — 샤오미 외장배터리 5000mAh<br>가격비교 사이트에서 9,000원 정도에 판매 되는 외장배터리 입니다. 장시간 컨퍼런스 참석을 위해서는 외장 배터리가 넉넉한 편이 좋겠죠.</li><li>웨일 브라우저 — T Shirt <br>LINE을 포함해서 T Shirt를 제공하는 부스가 여러곳이 있는데, 그 중에 가장 재질이 좋고 디자인이 무난하면서 귀엽습니다. 굳이 잠옷으로 쓰지 않아도 될 것 같은데, 주의할 점은 <strong>사이즈가 작게 나와서 실제 치수+1로 수령하는 것을 추천</strong>합니다. 국내 개발자 컨퍼런스 특성상 XL이 조기에 품절 됩니다.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/586/1*XyxxIDHOdNk_ulpixdKu0A.png" /><figcaption>출처: <a href="https://www.instagram.com/p/BaRX4FogqdQ">https://www.instagram.com/p/BaRX4FogqdQ</a></figcaption></figure><p>4. NAVER LABS — iRing <br>일반적으로 많이 사용하는 휴대폰 홀더 겸 차량용 거치대 입니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/471/1*WvDcArDUFQsaUl1fIJKzwA.png" /></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=dd67aa92f943" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Stackoverflow의 salary calculator로 IT trend 살펴 보기]]></title>
            <link>https://medium.com/@junggil/stackoverflow%EC%9D%98-salary-calculator%EB%A1%9C-it-trend-%EC%82%B4%ED%8E%B4-%EB%B3%B4%EA%B8%B0-7b47ee314096?source=rss-18658771949------2</link>
            <guid isPermaLink="false">https://medium.com/p/7b47ee314096</guid>
            <category><![CDATA[data-scientist]]></category>
            <category><![CDATA[stackoverflow]]></category>
            <category><![CDATA[salary-calculator]]></category>
            <dc:creator><![CDATA[Junggil Lee]]></dc:creator>
            <pubDate>Mon, 16 Oct 2017 14:07:22 GMT</pubDate>
            <atom:updated>2017-10-16T14:07:22.281Z</atom:updated>
            <content:encoded><![CDATA[<h3>Salary calculator</h3><p>최근 Stackoverflow에서 salary calculator를 선보였습니다. <a href="http://stackoverflow.com/jobs/salary">https://stackoverflow.com/jobs/salary</a></p><p>우리나라 말로 하면 ‘<em>연봉 계산기</em>&#39; 쯤 일까요? 대략적인 화면은 다음과 같습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*pluW8GcnOp_5qs4KL05DCw.png" /></figure><p>간단한 Bio 정보를 입력하면 예상되는 Salary를 보여주는데, 아쉽게도 한국은 포함되지 않고 북미와 캐나다 기준으로 결과를 예측해 줍니다. 이걸 사용해서 IT 업계의 Trend를 살펴보고, 앞으로 어떤 분야가 유망하고 자기계발은 어떤 기술에 집중해야 할지를 생각해 보도록 하죠.</p><h3>3줄 요약</h3><ol><li>지금 업계의 대세는 Data Scientist 이며,</li><li>이를 위해서 학위를 요구하기 보다는 실무 능력을 중요하게 생각하기 때문에,</li><li>관련한 Skillset을 익힐 수 있도록 자기계발의 방향을 잡고, 꾸준히 실무 경험을 쌓는 것이 중요하다.</li></ol><h4>1) Role에 따른 Salary 차이 — Data Scientist is mainstream</h4><p>아래 그림은 순서대로 10년 연차의 Palo Alto 지역의 석사 학위 (ms)를 가정한 결과입니다. frontend = backend &lt; <strong>data scientist</strong> 결과를 볼 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*nObyypcg3ccKg4PAep7M0g.png" /><figcaption>frontend developer salary</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*UR_CSJ9Bipnalsgd23R8pw.png" /><figcaption>backend developer salary</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ZLV7s4IzB2jCw8EFl_701A.png" /><figcaption>data scientist salary</figcaption></figure><h4>2) 학위/연차에 따른 Salary 차이 — 학위 &lt;&lt; 연차</h4><p>동일 조건에서 학위만 석사에서 박사로 변경 했을 경우, Salary는 $135,000 → $139,000으로 $4,000만이 증가하는 것을 볼 수 있다. 박사 학위를 위한 시간과 노력을 생각하면 정말 미미한 수준이라고 할 수 있다. 반면에 석사학위를 유지하면서, 박사 기간만큼을 학위 대신 업계에서 실무를 쌓았다면 연봉은 $160,000이 된다. 단순 학위 보다는 실무 경험이 더 강조되는 현상이 아닐까 싶다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*qw-4GoCkwRv5W6tidZL4AA.png" /><figcaption>data scientist salary with ph. d</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*M4QrfOQvDdiY4yNHzgX1Jg.png" /><figcaption>data scientist salary with 15 years experience</figcaption></figure><h4>3) Skillset에 따른 Salary의 영향 — Skillset is the Most Effective Way</h4><p>기존의 조건 (10년 연차 석사학위, data scientist)에, 관련한 Skillset을 추가해 보았습니다. 예상 연봉이 $135,000 에서 $165,000으로 $30,000이나 뛰었군요. 2)에서의 결과와 같은 맥락으로, 실무 능력에 대해서 높게 평가하는 Trend라고 생각 됩니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*5QODelQSdqAXvPtiFObtVw.png" /><figcaption>data scientist with skillset</figcaption></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7b47ee314096" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[DynamoDB를 선택하는 잘못된 이유]]></title>
            <link>https://medium.com/@junggil/dynamodb%EB%A5%BC-%EC%84%A0%ED%83%9D%ED%95%98%EB%8A%94-%EC%9E%98%EB%AA%BB%EB%90%9C-%EC%9D%B4%EC%9C%A0-fade0d0984d0?source=rss-18658771949------2</link>
            <guid isPermaLink="false">https://medium.com/p/fade0d0984d0</guid>
            <category><![CDATA[migration]]></category>
            <category><![CDATA[rds]]></category>
            <category><![CDATA[dynamodb]]></category>
            <category><![CDATA[trade-off]]></category>
            <dc:creator><![CDATA[Junggil Lee]]></dc:creator>
            <pubDate>Fri, 06 Oct 2017 00:20:22 GMT</pubDate>
            <atom:updated>2017-10-06T00:20:22.072Z</atom:updated>
            <content:encoded><![CDATA[<p>이 글은 <a href="https://blog.codebarrel.io/why-we-switched-from-dynamodb-back-to-rds-before-we-even-released-3c2ee092120c">https://blog.codebarrel.io/why-we-switched-from-dynamodb-back-to-rds-before-we-even-released-3c2ee092120c</a> 에 대한 생각을 정리한 내용입니다.</p><p>링크의 내용에서 지적한 AWS DynamoDB의 Limitation은 다움과 같습니다.</p><ul><li>pagination의 자유도가 떨어지고</li><li>index 추가에 따른 비용의 부담이 있으며</li><li>sorting 기준이 table 생성 시점에 결정되어야 하며</li><li>bursty read/write에 대한 대응이 가격 효율적이지 못하다 <br>(최근 autoscale이 적용되면서 더이상 유효하지 않습니다)</li></ul><p>AWS DynamoDB의 API가 주는 불편함에는 동의하지만, 글쓴이가 DynamoDB를 선택한 이유에 대해서는 동의하기 어렵다고 생각합니다.</p><blockquote>We’re a small startup and as such keeping costs low and development speed high are incredibly important for us.</blockquote><p>DynamoDB를 선택한 이유로 ‘개발 생산성’과 ‘비용’을 뽑았기 때문입니다. 물론 해당 부분도 장점이될 수 있지만, DynamoDB의 핵심적인 장점은 <strong><em>infinite한 확장성과 최소 성능에 대한 보장</em></strong>에 있다고 봐야 하지 않을까 싶습니다.</p><p>따라서 ‘개발 생산성’과 ‘비용’을 이유로 DynamoDB를 선택했다면 적절한 선택이 아니었을 수 있으며, 결론처럼 EC2에 RDS를 설치해서 사용하는 것이 더 효율적인 선택이라고 봅니다.</p><p>해당 회사는 현재는 DynamoDB에서 RDS로 이전을 했지만, 이후에 서비스가 성공적으로 확장되고 Traffic이 빠르게 늘어나는 경우에는 반대로 RDS에서 DynamoDB등으로 재이전이 필요한 상황도 발생할 수도 있지 않을까요?</p><p>결국 어떤 이유로 기술을 선택한 것이냐에 따른 <strong><em>Trade off</em></strong>가 아닐까 싶습니다.</p><p>빠르게 rolling하는 startup들이 겪는 공통적인 상황이겠지만, 기술을 선택할 때 충분히 선택이 가져오는 implication들을 파악하지 못하고 진행된다는 문제점이 있을 수 있습니다.</p><p>DynamoDB와 같은 NoSQL 경우에는 Table구조를 어떻게 잡느냐에 따라서 이후 사용에 비용적인 차이와 데이터를 사용(예: join, pagination, bulk delete)하기 위한 노력에 큰 영향이 있습니다. (현 시점에는 이러한 결정을 도와줄 Best Practice들이 많이 공개되어 있습니다. 예 — Hot/Cold Data분리, daily rolling table … ) 개발팀이 ‘빠른 개발’을 위해서 이러한 고민을 충분히 하지 못한채로 개발이 진행되는 상황이 많이 있을 것이라고 생각됩니다. 그렇지만 흔히 그렇듯이 이런 사소한 지나침은 향후 기술 부채의 형태로 다시 돌아오곤 하죠. :)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=fade0d0984d0" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Autonomous Drone Navigation with Deep Learning]]></title>
            <link>https://medium.com/@junggil/autonomous-drone-navigation-with-deep-learning-e7f1711cc93?source=rss-18658771949------2</link>
            <guid isPermaLink="false">https://medium.com/p/e7f1711cc93</guid>
            <category><![CDATA[autonomouse-drone]]></category>
            <category><![CDATA[deep-learning]]></category>
            <dc:creator><![CDATA[Junggil Lee]]></dc:creator>
            <pubDate>Sat, 30 Sep 2017 04:25:26 GMT</pubDate>
            <atom:updated>2017-09-30T04:25:26.289Z</atom:updated>
            <content:encoded><![CDATA[<p>자율 주행 자동차는 많이 들어보셨을 텐데,<br>요즘 Hot한 연구 영역 중에 자율 주행 드론 관련해서 소개합니다.</p><p>간략하게 두 영상을 통해서 연구의 의미를 이야기 하는 것이 좋을 것 같습니다.</p><ol><li>기존 연구 (Previous Work)</li></ol><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FumRdt3zGgpU%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DumRdt3zGgpU&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FumRdt3zGgpU%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/5fd75430aa4299d211077f4920931dea/href">https://medium.com/media/5fd75430aa4299d211077f4920931dea/href</a></iframe><p>사람의 머리에 왼쪽, 정면, 오른쪽에 Go-Pro 카메라를 장착하고, 숲의 사진을 20K 장을 수집했습니다. 사람이 수집했기 때문에 길을 따라서 이동하면서 사진이 수집이 되었겠죠? 이렇게 수집된 사진으로 모델을 만듭니다.</p><p>그리고 모델을 통해서 드론에서 촬영된 이미지를 분석해서</p><ul><li>왼쪽에 가까운 이미지라고 하면 우회전</li><li>정면에 가까운 이미지면 그대로 전진</li><li>오른쪽에 가까운 이미지면 좌회전</li></ul><p>위와 같이 제어를 하도록 해서 가능한 드론이 정면 (보행로)으로 주행할 수 있도록 한 연구 입니다.</p><p>동영상의 설명이 차근차근 직관적으로 설명해서 굳이 논문을 안봐도 될정도로 친절합니다.</p><p>2. 이번 연구 (Announced Work)</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FH7Ym3DMSGms%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DH7Ym3DMSGms&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FH7Ym3DMSGms%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/f3990940c4870e3f20140e82a3329893/href">https://medium.com/media/f3990940c4870e3f20140e82a3329893/href</a></iframe><p>동일하게 숲의 사진을 Training Data로 사용했지만, 이번에는 숲의 형태에 대해서 학습 했다는 것이 근본적으로 다릅니다.</p><p>이것이 가져오는 중요한 의미의 차이는 기존 연구는 학습한 숲에서만 자율주행이 가능하지만, 이번 연구 결과는 학습한 환경과 큰 차이가 없다면 <strong>대부분의 숲에서 자율 주행이 가능</strong>하다는 뜻입니다.</p><p>Deep Learning이 다양한 분야와 만나서 가져오는 변화의 결과들이 무척 흥미롭고 재미있습니다. 더욱이 최근 CS 분야는 연구 결과를 영상으로 제공하는 경우가 많아서 많은 사람들이 그 성과를 직관적으로 이해하기 좋은 것 같습니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e7f1711cc93" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>