<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Brant Hwang on Medium]]></title>
        <description><![CDATA[Stories by Brant Hwang on Medium]]></description>
        <link>https://medium.com/@chequer?source=rss-54ad73b6c57e------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*u-vAB5HTg1pJ10JjHc-B8g.png</url>
            <title>Stories by Brant Hwang on Medium</title>
            <link>https://medium.com/@chequer?source=rss-54ad73b6c57e------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 13 May 2019 14:03:05 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@chequer" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Introducing QueryPie’s first MVP]]></title>
            <link>https://medium.com/querypie/introducing-querypies-first-mvp-bc6a26429247?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/bc6a26429247</guid>
            <category><![CDATA[querypie]]></category>
            <category><![CDATA[english]]></category>
            <category><![CDATA[mvp]]></category>
            <category><![CDATA[closed-beta]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Fri, 19 Apr 2019 09:16:28 GMT</pubDate>
            <atom:updated>2019-04-22T02:56:21.365Z</atom:updated>
            <content:encoded><![CDATA[<h4>QueryPie Development #10: Ready for the Closed Beta!</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*BZxGbDsXNeyUpohrWDQb5Q.png" /></figure><p>📑한국어(Korean Version)- <a href="https://medium.com/p/866129da92a7/">https://medium.com/p/866129da92a7/</a></p><p>Over the past 6 years, I’ve used Sequel Pro as a database tool for MySQL when using my Mac. Sequel Pro is an open source MySQL database tool that provides fast execution speed, intuitive UI/UX and key capabilities for developers compared to commercial solutions such as DataGrip, Navicat, and DBVisualizer.</p><p>However, the recent Sequel Pro upgrade for macOS Mojave has proved inconvenient because of the fatal bugs that lead to crashes, as well as the slow and troublesome SQL auto-complete function. But I continued using it because there were no better alternatives available for macOS.</p><p>Thankfully there is no reason to suffer through Sequel Pro anymore. The first version of QueryPie has been developed diligently over the past 4 months with all the passion and effort of the QueryPie Team. Yay!🙌</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NNz9twcKtquNM2VRejl84g.png" /><figcaption>“Wow! I don’t need to use Sequel Pro anymore!”</figcaption></figure><p>The first version of QueryPie works on Windows and Mac. It’s a Database IDE that supports MySQL, MariaDB, and AWS Aurora MySQL, which includes much more powerful features than Sequel Pro.</p><p>It’s my pleasure to introduce the beta version of QueryPie.</p><h4>1. Easy-to-share Database Connection information</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*bYFlGBS70VRROzYpikT31g.png" /><figcaption>QueryPie WebApp DB Connection Profile</figcaption></figure><blockquote>“What’s the database access information for the test, again?”</blockquote><blockquote>“Hey guys! I want to see the data myself. Can you give me the database access information?”</blockquote><p>If you’ve ever worked with a database with a team, you’ve probably heard these kinds of questions countless times. How did you managed all the database access information in your company? Did you worry that after sharing the access information, another user would accidentally or purposely delete tables and data?</p><p>QueryPie allows users to easily and securely share database access information with team members through the QueryPie WebApp. It also proactively prevents deletion and manipulation of data by offering a hierarchy of privileges that limits database access per user.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*6uZZdj6Y5ovNkcnGWNfcKw.png" /><figcaption>QueryPie WebApp Authority and Privilege Control</figcaption></figure><p>The privileged database connection information from QueryPie WebApp is displayed in the QueryPie Shared Connection list without exposing account information, which makes it easier and safer to share database access.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*vmABeyVmACe4uTLrVRFY_w.png" /><figcaption>QueryPie Shared Connection List</figcaption></figure><h4>2. Convenient, Powerful Multi-SQL Execution and Auto-Complete Features</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*9w7EStI3QYcn1Wjn_D1VMQ.png" /><figcaption>QueryPie Auto-Complete and Multi-SQL Execution</figcaption></figure><p>The two most inconvenient factors about using Sequel Pro, for me, were that I couldn’t run multiple SQLs at the same time. And the SQL auto-complete was incredibly slow.</p><p>In my opinion, these two factors were key feature of using a Database IDE. The whole point of auto-complete was to save time, so for it to be so slow was crippling. And it was just unproductive to write SQLs separately, run them one by one, then check the results one by one. It was <em>not</em> easy to memorize all those tables and columns.</p><p>QueryPie can run dozens of SQLs simultaneously and place them side by side to compare the results at a glance. In addition, the direct implementation of the ANTLR-based SQL Parser provides automatic table/column information completion one step faster than the user, further enhancing database productivity.</p><h4>3. Multi-Object Information Panels for at-a-glance table information</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*jXpIwXrewiQMp9aoNGyGpQ.png" /><figcaption>QueryPie Multi-Object Information Panel</figcaption></figure><p>When writing SQL, common habits include checking columns, indexes, relationships and data in the table. QueryPie places an object information panel on the right to view two tables at once. Users can also use the space efficiently by implementing it to fold and open as needed.</p><p>QueryPie can also export SQL Query results to CSV, Excel and JSON. It offers a choice to selectively export tables and table data, or import large SQL files in a streaming fashion.</p><h4>4. Auto Commit Enable / Disable Support</h4><p>Sequel Pro has no Auto Commit Enable/Disable feature, so I had to be very careful when operating large amounts of data. There is no way to rollback if it is run incorrectly. QueryPie provides the Auto-Commit Enable / Disable feature for safer database operations and provides an uncommitted transaction list when Auto-Commit is disabled to intuitively view non-Committed DMLs.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*gjfl5Y_QZUpDmR_qa34rFQ.png" /><figcaption>QueryPie UnCommitted Transaction List</figcaption></figure><p>Although QueryPie’s first MVP (Minimum Viable Product) is a Database IDE for developers. In the near future, we aim to offer blockchain-security auditing to drive a secure database platform in an integrated environment. The following step will be to incorporate analytics and visualization capabilities to grow into an integrated data solution that can be used by every member of all enterprises.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*m04Unga5uRCJQMbr12p_Sw.png" /></figure><p>By the end of 2019, we plan to offer a Standard plan for free of charge so all functions are available. So sign up for the QueryPie Closed Beta version now!</p><p>📌 <a href="http://bit.ly/querypie_pre_application_eng"><strong>QueryPie Closed Beta Application (Click Here)</strong></a></p><p>📌 <strong>Want updates on QueryPie?</strong></p><ol><li><strong>Producthunt:</strong> <a href="https://www.producthunt.com/upcoming/querypie-2">https://www.producthunt.com/upcoming/querypie-2</a></li><li><strong>IndieHacker:</strong> <a href="https://www.indiehackers.com/product/querypie">https://www.indiehackers.com/product/querypie</a></li></ol><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bc6a26429247" width="1" height="1"><hr><p><a href="https://medium.com/querypie/introducing-querypies-first-mvp-bc6a26429247">Introducing QueryPie’s first MVP</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[QueryPie의 첫 MVP를 소개합니다.]]></title>
            <link>https://medium.com/querypie/querypie%EC%9D%98-%EC%B2%AB-mvp%EB%A5%BC-%EC%86%8C%EA%B0%9C%ED%95%A9%EB%8B%88%EB%8B%A4-866129da92a7?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/866129da92a7</guid>
            <category><![CDATA[mvp]]></category>
            <category><![CDATA[korean]]></category>
            <category><![CDATA[querypie]]></category>
            <category><![CDATA[closed-beta]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Fri, 19 Apr 2019 09:15:13 GMT</pubDate>
            <atom:updated>2019-04-22T02:54:03.422Z</atom:updated>
            <content:encoded><![CDATA[<h4>QueryPie 개발기 #10: Ready for the Closed Beta!</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*BZxGbDsXNeyUpohrWDQb5Q.png" /></figure><p>📑영어(English Version)- <a href="https://medium.com/p/bc6a26429247/">https://medium.com/p/bc6a26429247/</a></p><p>지난 6년 간, Mac을 사용하면서 Sequel Pro를 MySQL 데이터베이스 도구로 사용했습니다. Sequel Pro는 오픈소스 MySQL 데이터베이스 도구로 DataGrip, Navicat, DBVisualizer 등의 상용 솔루션에 비해 더 빠른 실행속도와 직관적인 UI/UX, 개발자가 필요로 하는 핵심기능을 제공해주고 있습니다.</p><p>하지만 최근 모하비로 OS를 업그레이드한 후 비정상적으로 종료되는 치명적인 버그와 느리고 불편한 SQL 자동완성 등 때문에 자주 불편함을 겪었지만, Mac에서 사용할 수 있는 특별한 대안이 없어 계속 사용해왔습니다. 그렇지만 이제는 Sequel Pro를 더 이상 쓸 이유가 없어졌습니다.</p><p>4개월간 QueryPie 팀의 열정과 노력으로 QueryPie의 첫번째 버전이 완성되었기 때문입니다! 야호! 🙌</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NNz9twcKtquNM2VRejl84g.png" /><figcaption>“와! Sequel Pro를 더 이상 쓰지 않아도 되겠다”</figcaption></figure><p>QueryPie의 첫번째 버전은 Windows / Mac에서 동작하고, MySQL / MariaDB / AWS Aurora MySQL를 지원하는 Database IDE로 Sequel Pro에 비해 훨씬 강력한 기능들이 포함되어 있습니다! 그럼 지금부터 QueryPie의 첫번째 버전 기능을 소개하겠습니다.</p><h4>1. 쉽게 공유할 수 있는 데이터베이스 접속 정보</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*bYFlGBS70VRROzYpikT31g.png" /><figcaption>QueryPie WebApp 데이터베이스 접속 정보 관리</figcaption></figure><blockquote>“테스트용 데이터베이스 접속 정보가 뭐더라?”</blockquote><blockquote>“팀장님! 저도 데이터 직접 보고싶어요. 데이터베이스 접속 정보 알려주시면 안돼요?”</blockquote><p>데이터베이스를 다루는 쪽에서 일하신다면, 위와 같은 상황을 겪어본 경험들이 있으실텐데요. 그동안 회사 내에 수많은 데이터베이스 접속정보를 어떻게 관리하고 계셨나요? 누군가가 데이터베이스 접속 정보 공유를 요청할 때 가르쳐줘도 되는지, 혹은 가르쳐줬다가 테이블이나 데이터를 삭제하지는 않을까 걱정해보신적 있으신가요?</p><p>QueryPie는 QueryPie WebApp을 통해 조직 구성원들과 데이터베이스 접속 정보를 쉽고 안전하게 공유할 수 있도록 하며, 사용자 별 데이터베이스 접근 권한을 설정하여 데이터 삭제나 조작을 하지 못하도록 사전에 예방합니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*6uZZdj6Y5ovNkcnGWNfcKw.png" /><figcaption>데이터베이스별 권한 제어</figcaption></figure><p>이렇게 QueryPie WebApp에서 권한을 부여한 데이터베이스 접속 정보는 계정정보 노출없이 QueryPie Shared Connection 목록에 표시되기 때문에 더욱 쉽고 안전하게 데이터베이스 접속정보를 공유할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*k4Y0SKJmbJjraztQQvysaQ.png" /><figcaption>QueryPie Shared Connection List</figcaption></figure><h4><strong>2. 편리하고 강력한 다중 SQL 실행과 자동완성 기능</strong></h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*9w7EStI3QYcn1Wjn_D1VMQ.png" /><figcaption>다중 SQL 실행 및 자동완성</figcaption></figure><p>Sequel Pro를 쓰면서 가장 불편했던 것 2가지를 꼽자면, 동시에 여러 개의 SQL을 실행할 수 없고 SQL 자동완성이 너무 느리다는 것이었습니다.</p><p>여러 SQL을 동시에 실행하고, 결과를 비교해보는 일이 잦다보니 하나씩 실행하고, 하나씩 결과를 비교하는 일은 너무 비생산적이었고, 수많은 테이블과 컬럼정보를 다 외우기란 쉽지 않기때문에 SQL 자동완성 또한 Database IDE가 갖춰야할 핵심적인 기능이라 생각했습니다.</p><p>이에, QueryPie는 수십개의 SQL을 동시에 실행하고, 좌/우로 배치하여 결과를 한 눈에 비교해볼 수 있습니다. 또한 ANTLR 기반의 SQL Parser를 직접 구현하여 사용자보다 한 발짝 더 빨리 테이블/컬럼 정보를 자동완성 해주기 때문에 데이터베이스 업무생산성을 더욱 높여줍니다.</p><h4><strong>3. 한 눈에 테이블 정보를 파악할 수 있는 </strong>다중 개체정보 패널</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*jXpIwXrewiQMp9aoNGyGpQ.png" /><figcaption>QueryPie 개체 패널</figcaption></figure><p>SQL을 작성하다보면 테이블의 컬럼, 인덱스, 관계를 확인하거나 테이블의 정보를 보는 일이 많죠. QueryPie는 우측에 개체정보패널을 배치하여 동시에 2개의 테이블을 한 눈에 확인할 수 있습니다. 필요에 따라 접었다 폈다 할 수 있도록 구현하여 공간을 효율적으로 사용할 수도 있습니다.</p><p>또한 QueryPie는 SQL 조회 결과를 CSV, Excel, JSON 으로 내보낼 수 있고, 테이블 및 테이블 데이터를 선택적으로 Export하거나, 대용량 SQL 파일을 스트리밍 방식으로 Import하는 기능 또한 준비되어 있습니다.</p><h4>4. Auto Commit Enable / Disable 지원</h4><p>사실 Sequel Pro는 Auto Commit Enable / Disable 기능이 없어서 대량의 데이터 조작시에 상당히 주의를 기울여야 했습니다. 잘못 실행할 경우 Rollback할 방법이 없기 때문이죠. QueryPie는 더 안전한 데이터베이스 작업을 할 수 있도록 Auto Commit Enable / Disable 기능을 제공하고 있으며 Auto Commit Disable 상태일 경우 커밋되지 않은 트랜잭션 목록 (UnCommitted Transaction List)을 제공하여 Commit 되지 않은 DML을 직관적으로 확인할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*gjfl5Y_QZUpDmR_qa34rFQ.png" /><figcaption>QueryPie UnCommitted Transaction 목록</figcaption></figure><p>곧 선보일 QueryPie의 첫 MVP(Minimum Viable Product)는 개발자를 위한 Database IDE이지만, 추후<strong> Phase 2</strong>에서는 블록체인 기반의 보안 감사 기능을 제공하여 통합된 환경에서 보안이 강화된 데이터베이스 플랫폼을 지향할 예정이며, <strong>Phase 3</strong>에서는 분석/시각화 기능을 통합하여 기업 내 데이터 업무를 하는 모든 구성원이 사용할 수 있는 통합 데이터 솔루션으로 성장시킬 계획입니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*IVhe_gqTCOxGwaTZz65etg.png" /></figure><p>또한 2019년 말까지, 모든 기능을 무료로 사용할 수 있도록 유료 Standard 플랜을 무료로 제공할 계획이니 Closed Beta 신청을 통해 더 빨리 QueryPie를 만나보세요!</p><p>📌 <a href="http://bit.ly/querypie_pre_application"><strong>QueryPie Closed Beta 사전 신청하러가기 (클릭)</strong></a></p><p>📌 <strong>QueryPie 업데이트 소식 받아보기</strong></p><ol><li><strong>Producthunt:</strong> <a href="https://www.producthunt.com/upcoming/querypie-2">https://www.producthunt.com/upcoming/querypie-2</a></li><li><strong>IndieHacker:</strong> <a href="https://www.indiehackers.com/product/querypie">https://www.indiehackers.com/product/querypie</a></li></ol><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=866129da92a7" width="1" height="1"><hr><p><a href="https://medium.com/querypie/querypie%EC%9D%98-%EC%B2%AB-mvp%EB%A5%BC-%EC%86%8C%EA%B0%9C%ED%95%A9%EB%8B%88%EB%8B%A4-866129da92a7">QueryPie의 첫 MVP를 소개합니다.</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[체커가 크라우드펀딩을 준비합니다.]]></title>
            <link>https://medium.com/chequer/%EC%B2%B4%EC%BB%A4%EA%B0%80-%ED%81%AC%EB%9D%BC%EC%9A%B0%EB%93%9C%ED%8E%80%EB%94%A9%EC%9D%84-%EC%A4%80%EB%B9%84%ED%95%A9%EB%8B%88%EB%8B%A4-33ed235c3ebf?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/33ed235c3ebf</guid>
            <category><![CDATA[chequer]]></category>
            <category><![CDATA[crowdfunding]]></category>
            <category><![CDATA[querypie]]></category>
            <category><![CDATA[sqlgate]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Mon, 04 Mar 2019 10:06:46 GMT</pubDate>
            <atom:updated>2019-03-21T02:44:43.994Z</atom:updated>
            <content:encoded><![CDATA[<h4>카카오인베스트먼트가 투자한 글로벌 데이터 스타트업, CHEQUER</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*oWf1imEDUHh0sOkeF2bZ5g.png" /></figure><h3>CHEQUER</h3><p>체커는 2016년 12월에 설립된 데이터 솔루션을 개발하는 소프트웨어 스타트업으로 국내 1위 관계형 데이터베이스 관리 솔루션인 <a href="http://www.sqlgate.com">SQLGate</a>의 개발사입니다.</p><p>2018년 4월, 기술력과 시장성을 인정받아 카카오 인베스트먼트로부터 첫 투자를 유치했고, 뛰어난 기술 스타트업에 투자하는 중소기업벤처부의 R&amp;D 프로그램, <a href="http://www.jointips.or.kr/bbs/board.php?bo_table=team&amp;wr_id=508&amp;sfl=wr_subject&amp;stx=체커">TIPS</a>에 선정되었습니다. 또한 SQLGate의 글로벌 진출 성과를 인정받아 TIPS 글로벌 마케팅 지원까지 받으며 지난 2년간 빠르게 성장했습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*lYboKhbB4hGmNX0vEM509g.png" /><figcaption>카카오 인베스트먼트 투자 유치</figcaption></figure><h3>지난 2년 간의 성과</h3><p>카카오 인베스트먼트 투자, TIPS R&amp;D 선정 이후 임직원이 5명이던 체커는 2018년 14명을 신규 채용하며 현재 19명으로 성장했습니다. 제품 개발, 기획, 디자인, 마케팅, 법무 등 업계 최고 수준의 실력과 경험을 겸비한 멤버가 체커에 합류했으며 글로벌 시장 진출에 필요한 결제 및 구독 시스템, 서비스 약관 및 고객 지원 프로세스를 2018년에 성공적으로 안착시켰습니다.</p><h4>1. 어디서도 경험할 수 없는 온라인 소프트웨어 구매 시스템</h4><p>패키지 소프트웨어를 한번쯤 구매해보신 경험이 있다면, 그 과정이 얼마나 복잡하고 힘든지 잘 아실텐데요. 체커는 제품 구매 단계에 필요한 모든 기능을 <a href="http://www.sqlgate.com/store">SQLGate.com</a>에서 직접 제공하여 대한민국에서 소프트웨어를 가장 쉽게 구매할 수 있는 프로세스를 만들었습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*z-Gf450qIiRxIliRml6few.png" /><figcaption><a href="https://www.sqlgate.com/pricing/perpetual?language=ko">영구라이선스 제품 구매</a></figcaption></figure><p>제품과 수량을 필요한만큼 고른 후 견적서를 직접 받고 구매를 결정할 수 있으며, 법인카드를 많이 사용하는 고객을 감안하여 카드 번호를 직접 입력해서 결제할 수 있는 비인증 방식의 신용카드 결제와 해외 고객을 위한 Paypal 결제, 국내 법인 고객을 위한 세금계산서 구매를 지원합니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1012/1*xcxob-lKVwVdPWzFWhWbtg.png" /></figure><p>대한민국 패키지 소프트웨어 업계 최초로 차별화된 구매 경험을 제공하여 기존 대비 1.5~2배 가량 매출을 향상시켰고 전 세계 어디서든 편리하게 온라인으로 제품을 판매할 수 있는 기반을 마련했습니다.</p><h4>2. 글로벌 솔루션 업계 최초 자체 구독 플랫폼 출시</h4><p>최근 Adobe, Microsoft, AutoDesk 등 글로벌 패키지 소프트웨어 회사들은 <strong>소유권을 제공하는 영구라이선스 </strong>대신, <strong>필요한 기간만큼만 사용할 수 있는 구독 라이선스</strong>로 전환하기 시작했습니다. Adobe는 2013년 부터 영구라이선스를 완전히 폐지하고 Creative Cloud를 통해 구독 방식으로만 라이선스를 제공하고 있고, Microsoft 또한 Office 365 사이트를 통해 월 9,900원의 구독 라이선스를 출시했습니다.</p><p>이처럼 소프트웨어 업계는 구독 모델로 점점 바뀌는 추세로, 가트너에 따르면 <a href="https://www.gartner.com/smarterwithgartner/moving-to-a-software-subscription-model/">2020년까지 80% 소프트웨어가 구독 모델로 바뀔것</a>이라 예상했지만 몇몇 글로벌 회사를 제외하고는 여전히 구독 방식으로 판매하는 회사를 쉽게 찾아보기 어렵습니다. 기존의 패키지 소프트웨어 회사는 제품을 만드는데 모든 역량과 리소스가 집중되어 있기 때문에, 웹 기반의 커머스 플랫폼인 구독 시스템을 잘 만드는 일은 새로운 제품을 만드는 일보다 더 어려울 수 있기 때문입니다.</p><p>저는 카카오에서 커머스 플랫폼을 개발했던 경험을 토대로 글로벌 시장 진출에 필요한 핵심 역량은 <strong>구독 모델</strong>이라 판단하여 <strong>글로벌 데이터베이스 관리 솔루션 업계 최초</strong>로 자체 <a href="https://www.sqlgate.com/pricing/subscription">구독 플랫폼</a>을 개발을 시작했습니다. SaaS 형태로 제공하는 다양한 구독 솔루션이 이미 있었지만 사용자 트래킹, 쿠폰 및 프로모션 제공, 구매 행동 등을 상세하게 수집하고 통합적으로 관리하기에는 많은 제약사항이 있었습니다.</p><p>저와 함께 카카오에서 커머스 플랫폼을 만들었던 기획자, 개발자는 3개월만에 첫 번째 구독 플랫폼을 개발했고, 2018년 5월 오픈 이후 9개월 동안 6,000명의 글로벌 구독자를 확보했습니다. 또한 전체 구독자 중 2% 가량이 유료 구독으로 전환하면서 글로벌 진출 첫 해에 $18,000의 유의미한 매출을 만들었습니다</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*VMRPjXw69PCJZ_Jt" /><figcaption>SQLGate 누적 구독자 증가추이</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*xo3A9paCMicclxiP" /><figcaption>SQLGate 유료 구독자 성장 추이</figcaption></figure><h4>3. 업계 최고 수준의 고객지원 시스템 운영</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*sZxxCWqRAq-IB61Y4J62hw.png" /><figcaption><a href="http://support.sqlgate.com/hc/ko">SQLGate 기술 지원 센터</a></figcaption></figure><p>SQLGate와 같이 매일 사용하는 개발도구의 경우 버그나 문제점이 빠르게 개선되지 않으면 사용자의 생산성에 치명적인 영향을 미칩니다. 고객의 문제를 빠르게 인지하고 개선하기 위해 자체 기술 지원 센터를 운영하고 있으며, 다른 어떤 경쟁사보다 빠르게 문제를 해결할 수 있는 제품 품질 보증 프로세스를 수립했습니다.</p><p>이런 기술 지원 시스템은 SQLGate가 다른 경젱제품과의 큰 차별점 중 하나입니다. 소프트웨어를 사용하다가 버그를 만나는 일은 흔한 일이지만 ‘어디에 이야기 해야할지’, ‘또 언제쯤 고쳐줄지’, ‘내가 리포팅한 버그가 수정은 되고 있는지’ 알기 쉽지 않은 것이 현실입니다. 따라서 저희는 고객의 소중한 목소리에 대해 빠르고 명확한 피드백을 드리기 위해 노력합니다.</p><h3>SQLGate.next() = QueryPie</h3><p>SQLGate는 이런 뛰어난 기술력과 구독 모델을 중심으로 글로벌에서 빠르게 성장하고 있습니다. 하지만 빠르게 변화하는 시장에서 더욱 확고한 자리를 잡기위해서는 새로운 전략이 필요하다고 생각했습니다.</p><p>데이터 시장은 이미 레드오션이고, 수 많은 데이터베이스 IDE, 보안 솔루션, 데이터 시각화 솔루션이 있다고 생각할 수 있지만, 빠르게 변화하고 있는 시장에서 스타트업/중소기업이 사용할 수 있는 합리적 가격의 제품은 부재하고, 데이터 전반에 필요한 프로세스를 효과적으로 통합한 제품이 시장에는 부족한 상태입니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*t-osFSoQNfZMU1fiKUxsJA.png" /><figcaption>현재 데이터 시장의 문제점</figcaption></figure><p>또한 최근 RDBMS를 비롯해 OS 시장에 새로운 변화가 시작되고 있는데 (1) AWS, Azure 등의 클라우드 DBMS의 성장세가 두드러지고, (2) Windows의 시장 비중이 점점 줄어들고 있으며, (3) 전 세계 모든 기업이 데이터 중심 비즈니스를 하고 있습니다.</p><p>이런 시장의 변화에 발맞춰 CHEQUER에서는 새로운 형태의 통합적인 데이터 솔루션이 필요하다고 판단했고, 지난 15년간 SQLGate를 개발하며 축척된 데이터베이스 기술력과 경험을 기반으로 새로운 제품 개발을 준비하고 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*zbqqYquf57hdVnJPzEvUGQ.png" /><figcaption>QueryPie Roadmap</figcaption></figure><p>QueryPie라 명명한 새로운 제품은 데이터 구축/관리/분석/시각화에 필요한 핵심적인 기능을 통합적으로 제공하고, 이 과정에서 벌어지는 다양한 보안 이슈를 블록체인 기술을 통해 높은 수준으로 제공하는 데이터 통합 솔루션입니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*roC1FHUlxxVOp8J2H8m43g.png" /><figcaption>QueryPie 목표</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*zZ9TtGam_DWRgHur1Hi59A.png" /><figcaption>SQLGate + QueryPie Two Track 전략</figcaption></figure><p>QueryPie는 위와 같은 전략을 기반으로 지속적인 연구개발을 통해 2025년까지 글로벌 60만 사용자를 확보하고, 2021년 BEP 달성, 2025년 기업가치 3,000억을 목표로 데이터 분야의 새로운 유니콘을 꿈꾸며 달려가고 있습니다.</p><blockquote>QueryPie에 개발에 대한 흥미진진한 스토리를 <a href="http://medium.com/querypie">QueryPie 블로그</a>에서 만나보세요!</blockquote><h3>SQLGate와 QueryPie를 만드는 CHEQUER팀</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*w3fQ2hnexReHF01J" /><figcaption>CHEQUER의 Founder</figcaption></figure><p>체커의 공동창업자는 모두 소프트웨어 엔지니어이며 기술 개발에 핵심적인 역량을 보유하고 있습니다. 또한 체커 설립 직후 참여한 홍상훈 이사는 기계공학을 전공하고 대한항공에서 항공설계 업무를 했던 엔지니어 출신의 변호사이자 변리사로 체커의 법무, 지적재산권, 해외 사업에 필요한 다양한 업무를 진행하고 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*nNby0Xmk0XheP72n" /><figcaption>Team Leader</figcaption></figure><p>공동창업자외에도 각 팀에는 출중한 역량을 보유한 팀 리더가 있으며 현재 개발자, 기획자, 마케터, 디자이너로 구성된 19명의 체커 구성원이 있습니다. 2019년까지 추가로 11명의 인재를 더 채용하여 QueryPie 개발 및 글로벌 확장을 더욱 더 가속화할 계획입니다.</p><h3>크라우드펀딩을 진행하게 된 배경</h3><p>업계에서는 보통 투자를 결혼에 비유하곤 합니다. 스타트업에 있어 투자자가 그만큼 중요하다는 의미인데요. 체커 또한 어떤 투자자로부터 2차 투자를 유치해야할지 많은 고민이 있었습니다.</p><p><strong>‘어떤 사람이 우리 회사의 비전과 시장의 문제점, 그리고 제품에 대해 잘 알 수 있을까?’ </strong>에 대한 질문을 끊임없이 하다보니 결국 우리 제품을 사용하는 사용자를 비롯해 QueryPie의 잠재적 고객들이 우리 회사와 제품을 누구보다 잘 이해할 수 있는 사람이라는 생각이 문득 들었습니다.</p><p>이 분들을 회사의 주주로 모실수 있다면, 시장의 문제점을 더 깊이있게 들여다 볼 수 있고, 주주가 원하는 제품은 곧 시장이 원하는 제품이 될테니 체커가 제품을 만들고 글로벌에 진출함에 있어 이보다 더 좋은 투자자는 없다는 확신이 생겼습니다.</p><p>하지만 크라우드펀딩을 진행을 결심한 후, 주위 사람들로부터 부정적인 피드백을 많이 받았습니다. 기업 공개를 하지도 않은 작은 스타트업이 수 백명의 소액 주주와 커뮤니케이션 할 수 있을까? 또한 후속 투자자가 크라우드펀딩을 통해 참여한 주주에 대해 반감을 가지진 않을까? 하는 여러 크라우드펀딩의 단점들을 제게 이야기 했습니다.</p><p>물론 그 분들의 말씀도 일리가 있습니다. 하지만 앞서 말씀드린 ‘결혼’만큼의 중요한 의미를 가지는 것이 투자라고 한다면, 나에게 아주 잘 맞는 파트너를 신중하게 찾을 필요가 있습니다. 그래서 전문 투자자나 기관으로부터 단순히 재무적 투자를 받는 것 보다는, 우리의 비전과 나아가는 방향에 대해 공감하면서 회사가 성장하는 모습을 지켜봐주실 분들을 모시는 것이 더 중요하다고 생각했습니다.</p><p>저희는 이번 크라우드펀딩을 통해서, 데이터 분야에 대한 높은 전문성과 이 분야의 미래에 대한 확신을 가진 분들을 주주로 모시고자 합니다. 체커가 데이터 분야를 얼마나 혁신시킬 수 있는지 증명하고, 글로벌에서 가장 뛰어난 기술 기반 투자자로부터 다음 라운드 투자를 유치하겠다는 계획을 가지고 있습니다.</p><h4>* CHEQUER에 대한 더 자세한 정보는 아래 링크를 참고하세요</h4><ul><li><strong>최신 IR 자료 (사업계획서) </strong>: <a href="http://bit.ly/2NHo5KA">http://bit.ly/2NHo5KA</a></li><li><strong>체커의 모든 기업문화와 일하는 방식에 대한 소개를 담고 있는 핸드북 </strong>: <a href="http://handbook.chequer.io">http://handbook.chequer.io</a></li><li><strong>데이터 분야의 산업 동향과 관련된 내용<br></strong>- <a href="http://www.ciokorea.com/news/38230">클라우드 DBMS의 성장 (1)</a><br>- <a href="http://www.ciokorea.com/news/40014">클라우드 DBMS의 성장 (2)</a><br>- <a href="http://www.datanet.co.kr/news/articleView.html?idxno=115123">내부자에 의한 데이터 유출의 심각성</a><br>- <a href="https://insights.stackoverflow.com/survey/2018/">OS의 시장 변화</a></li><li><strong>체커가 만드는 제품과 관련된 링크</strong><br>- <a href="http://www.sqlgate.com">SQLGate 홈페이지</a><br>- <a href="https://www.youtube.com/user/sqlgate">SQLGate Youtube</a><br>- <a href="http://blog.chequer.io">CHEQUER 기술 블로그 </a><br>- <a href="http://medium.com/querypie">QueryPie 개발 블로그</a><br>- <a href="https://www.producthunt.com/posts/sqlgate">SQLGate Product Hunt</a></li><li><strong>언론 보도 자료</strong><br>- <a href="https://publy.co/content/2930">퍼블리에 소개된 체커의 기업문화</a><br>- <a href="http://it.chosun.com/site/data/html_dir/2018/07/27/2018072702866.html">체커의 개발 기술 소개</a><br>- <a href="http://www.newsway.co.kr/news/view?tp=1&amp;ud=2018052515020844009">카카오 인베스트먼트 투자 유치</a> (케이벤처그룹은 카카오 인베스트먼트의 이전 사명이며, 벤처 투자 및 TIPS 운영등을 위한 카카오의 100% 자회사입니다.)</li></ul><h3>크라우드펀딩 진행 방법과 일정</h3><ul><li>크라우드펀딩 플랫폼인 <a href="http://www.wadiz.com"><strong>Wadiz</strong></a><strong> </strong>에서 진행됩니다.</li><li>체커의 크라우드펀딩에 관심이 있으시면 <strong>온라인 기업 설명회</strong>에 참여해주세요!</li></ul><figure><a href="https://www.sqlgate.com/r/chequer-ir"><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*uDKQfe1iaq7P3vq8y7maCg.png" /></a><figcaption>실시간 온라인 기업설명회는 위에 기재된 일시에 오픈됩니다.</figcaption></figure><p>- 내용 : IR 진행 후 실시간 질의응답 (체커 소개, 비전 및 목표 등)<br>- 일시 : 2019년 3월 22일 금요일, 오후 2시<br>- 참여방법 : 체커 YouTube 채널 (<a href="https://www.sqlgate.com/r/chequer-ir">바로가기</a>)</p><h3>마치며</h3><p>카카오를 퇴사하고 스타트업을 시작하게 되면서 ‘법인’이라는 단어에 대해 많은 생각을 해왔습니다. 카카오라는 좋은 기관 투자자에서 투자를 받고, 국가가 인정하는 가장 좋은 기술 지원 프로그램인 TIPS에 선정되고, 이후 글로벌에서 빠르게 성장세를 만들어가면서 혹독한 스타트업 시장에서 살아남게 된 배경에는 체커만의 남다른 기업 철학이 있었기 때문에 가능했다고 생각합니다.</p><p>과거 대한민국의 많은 회사는 소위 <strong>사장님</strong>이라 불리는 사람이 모든 권력을 가지고 원하는 방향으로 수직적 커뮤니케이션을 하며 오로지 사장님의 역량에 의해 회사의 성공이 좌지우지되는 모습이었습니다.</p><p>저와, 양용성, 장기영 세 사람은 회사를 세울때 과거의 틀을 완전히 버리고 싶었습니다. 누구나 즐겁게 일할 수 있는 회사. 구성원 개개인의 비전이 회사의 비전과 최대한 일치될 수 있는 회사. 회사의 모든 의사결정 과정에서 수평적으로 커뮤니케이션 하고, 모두가 알 권리를 가지는 회사면서도 글로벌에서 누구나 알 수 있는 대한민국 소프트웨어 회사를 만들고 싶었습니다.</p><p>매출이 많고, 영업이익이 많아져도 주식을 소유하고 있는 소규모 집단만 이익을 보는 회사가 아니라 지금의 회사를 있게 한 구성원들을 비롯해 우리와 협력한 많은 사람들이 함께 성장하고 보상받을 수 있는 회사.</p><p>이런 철학 때문에 크라우드펀딩은 우리가 새로운 방식으로 회사를 만들어 가는데 있어 너무나 좋은 방법이라는 확신이 들었고, 체커를 만들어가는데 있어 정말 소중하고 중요한 한 분 한 분을 모실 수 있는 최선의 방법이라 생각했습니다.</p><p>글로벌에서 성공할 수 있다는 믿음, 글로벌에서 경쟁할 수 있는 인재를 확보할 수 있는 기업 문화, 뛰어난 데이터 기반의 소프트웨어 기술력과 데이터 산업에 대한 본질을 이해하고 포기하지 않는 끈기와 열정으로 회사를 이끌어 가겠습니다.</p><p>감사합니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=33ed235c3ebf" width="1" height="1"><hr><p><a href="https://medium.com/chequer/%EC%B2%B4%EC%BB%A4%EA%B0%80-%ED%81%AC%EB%9D%BC%EC%9A%B0%EB%93%9C%ED%8E%80%EB%94%A9%EC%9D%84-%EC%A4%80%EB%B9%84%ED%95%A9%EB%8B%88%EB%8B%A4-33ed235c3ebf">체커가 크라우드펀딩을 준비합니다.</a> was originally published in <a href="https://medium.com/chequer">CHEQUER</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cross Platform Application design with Electron, React, gRPC]]></title>
            <link>https://medium.com/querypie/the-art-of-maintaining-querypie-c13a429b5346?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/c13a429b5346</guid>
            <category><![CDATA[electron]]></category>
            <category><![CDATA[english]]></category>
            <category><![CDATA[application-architecture]]></category>
            <category><![CDATA[grpc]]></category>
            <category><![CDATA[java]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Sun, 17 Feb 2019 08:26:59 GMT</pubDate>
            <atom:updated>2019-02-20T03:04:53.666Z</atom:updated>
            <content:encoded><![CDATA[<h3><strong>Cross-Platform Application Design with Electron, React, and gRPC</strong></h3><h4>QueryPie Development #6: <strong>QueryPie Architecture Configuration</strong></h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*5ug-T07-Hm8w3DATuZz5PA.png" /></figure><p>📑한국어(Korean Version)- <a href="https://medium.com/p/184601de5057/">https://medium.com/p/184601de5057/</a></p><p>Creating a single visible product requires a lot of invisible touches. When it comes to software development, the <strong>product </strong>is important but in many ways <strong><em>how </em></strong>the product is implemented is more important.</p><p>As mentioned in the two previous posts (<a href="https://medium.com/querypie/e05f11b9ae58">Searching for my own Database IDE</a>, <a href="https://medium.com/querypie/4a3e4ce2f136">QueryPie: a fresh design for SQL IDE</a>), <a href="https://www.querypie.com/">QueryPie</a> is a database IDE that operates on three operating systems: Mac, Windows and Linux. In addition to supporting database security solutions with QueryPie Protocol, we are planning an integrated data platform that will enable us to analyze and visualize data like Business Intelligence (B.I) on the web in the future.</p><p>Because we planned to support all these functions as a single solution, the <strong>configuration and design of the software</strong> was important to establish prior to the development.</p><p>For applications installed and used on a PC/Laptop, <strong>programming languages</strong> that support multi-operating system compilation and run-time were essential. <strong>UI Framework</strong> was also a very important factor to provide convenient and excellent UI/UX.</p><p>So all of the development team members, including myself, have taken into account the technical capabilities and experiences that the company has and our mid-to-long term product road map. This article covers the story of what Technology QueryPie is being developed on.</p><h3>1. QueryPie UI (Front-end) : Electron, TypeScript, React</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ruFVafAhU1vD40H6AkLhxA.png" /><figcaption><a href="https://electronjs.org/">Electron</a></figcaption></figure><p>Electron is a framework that enables desktop applications to be developed on Mac, Windows, and Linux. It is open source, developing business logic as JavaScript (or Type Script) and UI/UX areas are HTML/CSS with high extensibility and excellent visual implementation. In addition, since NodeJS and NPM ecosystems can be used as they are, it is possible to secure development scalability through a variety of libraries.</p><p>Products with a high amount of established users such as VSCode, Skype, Slack, and Atom, guarantee the completeness and stability of Electron.</p><h3>2. QueryPie Engine (Back-end) : OpenJDK &amp; Java &amp; JDBC</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/520/1*VPK_WAWDf230ziZ4rqFenQ.png" /><figcaption>OpenJDK-based Java and JDBC Library</figcaption></figure><p>Because we decided to use Electron for our front-end, we considered NodeJS for the back-end development. But we changed our plan because of these factors:</p><ol><li>The Database Connectivity Library in NodeJS is not as mature as JDBC</li><li>The Java Eco System is appropriate for stable implement of key functions such as simultaneous SQL Execution, Data Export/Import, and more</li></ol><p>So we decided to use OpenJDK-based Java and JDBC libraries for our back-end development.</p><h3>3. Communication between Processors : gRPC</h3><p>Front-end and back-end are run as separate processors, so stable communication between the two processors is required. While general web applications communicate via HTTP/Web Locket, QueryPie has chosen gRPC (a TCP/IP-based RPC framework) because it operates on a user’s local machine and application characteristics require fast response and reliable communication.</p><figure><img alt="grpcì ëí ì´ë¯¸ì§ ê²ìê²°ê³¼" src="https://cdn-images-1.medium.com/proxy/1*HEjo57-k42AkyEVPhDw9Uw.jpeg" /><figcaption>gRPC Workflow (<a href="https://www.slideshare.net/shijucv/building-high-performance-apis-in-go-using-grpc-and-protocol-buffers"><em>https://www.slideshare.net/shijucv/building-high-performance-apis-in-go-using-grpc-and-protocol-buffers</em></a><em>)</em></figcaption></figure><p>gRPC is an open source RPC Framework that is available from Google and delivers data through Google Protocol Buffer-based Binary Protocol. Protocol Buffer is one of the ways to serialize structured data, and by defining the Interface Description Language (IDL) Proto, it automatically generates serialized models in various languages. This way users can easily understand what data is sent and received without any separate documentation.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/660/0*Z86SV9F4oksZid8p" /><figcaption><em>Google Protocol Buffer (</em><a href="https://blog.grijjy.com/2017/04/25/binary-serialization-with-google-protocol-buffers/"><em>https://blog.grijjy.com/2017/04/25/binary-serialization-with-google-protocol-buffers/</em></a><em>)</em></figcaption></figure><h3>4. Overall Architecture</h3><p>Using Electron, Java, JDBC and gRPC, we’ve configured QueryPie’s overall architecture as follows:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/906/1*lZb7k-TdkL0rC_nRvkyBSQ.png" /><figcaption>QueryPie Overall Architecture</figcaption></figure><h3>5. Engine Exception Handler: Error Tracking</h3><p>No matter how high test coverage and meticulous Q/A were done in the product development phase, it is difficult to fully test all environments. This includes hardware, OS, and OS patches for customers using the product. So it is important to quickly detect and reproduce the errors that occur.</p><p>One of the most important aspects of engine development is the accurate and detailed recording of errors throughout the engine so that if an error occurs in the product, it can reproduced 100% or quickly within the company’s internal environment.</p><p>We used gRPC Interceptor, SLF4J MDC, and Logback Custom Appender to track in detail what user behavior instigated the error and what the situation was like at the time.</p><p>As previously described in the architecture, QueryPie Middleware requests the engine for the required data via gRPC to handle user behavior or requests. In order to track which gRPC Endpoint was called by Middleware, the gRPC Interceptor always has API Request Information on MDC, which is to be retrieved from the Logback Appender when an error occurs.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/987/1*_TiuzKzTffrcn6P7UhS9SQ.png" /><figcaption>Tracking the Engine Error Occurrence Process</figcaption></figure><p>To track all error logs, we added a QueryPieLogAppender to the ROOT Appender so we could record all log.error (which is taken via SLFJ4). This error log information is sent to the server with the user’s consent, and the server quickly detects and reproduces errors based on the log data to resolve the problem.</p><h3>6. Application Performance Monitoring: Skywalking</h3><p>Finally, the performance measurement of the application remains. This should be a preconceived idea because it’s much easier to start measuring the performance of an application from the development process than to track it at once after the development is complete.</p><p>Consideration is required for APM behavior from the beginning of the development process because some of the features in QueryPie have some aspects that might be slow or take much longer than expected once tested, which might not be foreseen during development.</p><p>If all developers flew an APM-linked engine locally, they wouldn’t be able to identify the exact metric. So we decided to activate the Engine on the Remote Server and configured it to run with the APM.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/731/1*6CBZ6EZO5jzipfLEYt9aCQ.png" /><figcaption><em>QueryPie Remote Engine</em></figcaption></figure><p>If Git Push occurs, Jenkins automatically builds the engine and distributes it to the remote server and restarts it. So front-end and middleware developers can access the Remote Engine without having to run an engine locally. All testing and execution records during development are recorded in the APM database. Among the many APMs out there, we chose the Apache Incubation Project called <a href="https://github.com/apache/incubator-skywalking">Sky Walking</a>, which has simple installation and clean UI, topology maps, as well as gRPC support and run-time tracking.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/802/1*7Qvuk6Mf4F2oyJMaEla5iw.png" /><figcaption>Function to inform the endPoint-specific Reponse Time in Skywalking</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/802/1*2sXnJlLuyl7RdyGK1ySavQ.png" /><figcaption>Topology maps allow analysis of where requests are being delivered</figcaption></figure><p>We are constantly finding effective ways to quickly find and improve bottlenecks by analyzing them at the development stage with APM application. And we hope that these processes will enable us to operate with high quality and superior performance when the product is delivered to the users.</p><h3>In Conclusion:</h3><p>QueryPie is gaining momentum every day. We are constantly working with our best engineers to build a cornerstone with the right technology, to improve usability, and solve problems that traditional users find uncomfortable. Quite a few key features have been established and we’ve successfully been able to run the product in-house. We can’t wait to see how our users will use and enjoy these features!</p><p>To become the world’s leading database tool, QueryPie is being actively developed even as you read this development log. Please just wait a bit more for this great experience!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YXU8zrFAHm806bUUJrENBw.png" /></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=c13a429b5346" width="1" height="1"><hr><p><a href="https://medium.com/querypie/the-art-of-maintaining-querypie-c13a429b5346">Cross Platform Application design with Electron, React, gRPC</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Electron, React, gRPC로 Cross Platform Application 설계하기]]></title>
            <link>https://medium.com/querypie/querypie%EB%A5%BC-%EC%A7%80%ED%83%B1%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0-184601de5057?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/184601de5057</guid>
            <category><![CDATA[korean]]></category>
            <category><![CDATA[electron]]></category>
            <category><![CDATA[java]]></category>
            <category><![CDATA[application-architecture]]></category>
            <category><![CDATA[grpc]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Sun, 17 Feb 2019 08:23:27 GMT</pubDate>
            <atom:updated>2019-02-19T01:52:25.323Z</atom:updated>
            <content:encoded><![CDATA[<h4>QueryPie 개발기 #6: QueryPie 아키텍처 구성</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*5ug-T07-Hm8w3DATuZz5PA.png" /></figure><p>눈에 보이는 하나의 제품을 만들기 위해서는 수 많은 부분에서 보이지 않는 손길이 필요합니다. 특히 소프트웨어를 개발하는 데 있어서는 무엇을 만들 것인지도 중요하지만 어떻게 구현할지가 더 중요한 요소가 되곤 합니다.</p><p>앞선 두 개의 포스팅(<a href="https://medium.com/querypie/%EB%A7%98%EC%97%90-%EC%8F%99-%EB%93%9C%EB%8A%94-database-ide%EB%A5%BC-%EC%B0%BE%EC%95%84%EC%84%9C-b38ee2d09103">#1 맘에 쏙 드는 Database IDE를 찾아서</a>,<a href="https://medium.com/querypie/querypie-%EC%83%88%EB%A1%AD%EA%B2%8C-%EC%A0%9C%EC%95%88%ED%95%98%EB%8A%94-sql-ide-6757cf2ec18"> #2 QueryPie 새롭게 제안하는 SQL IDE</a>)에서 언급한 것처럼 <a href="https://www.querypie.com/">QueryPie</a>는 Mac, Windows, Linux의 3가지 운영체제에서 동작하는 데이터베이스 IDE입니다. 그리고 QueryPie Protocol로 데이터베이스 보안 솔루션을 지원할 뿐 아니라 추후에는 웹에서 누구나 데이터를 분석하고 시각화 할 수 있는 B.I(Business Intelligence)까지 가능한 통합 데이터 플랫폼을 계획하고 있습니다.</p><p>이렇게 다양한 기능을 하나의 솔루션으로 지원할 계획이었기 때문에 개발을 시작하기에 앞서 <strong>소프트웨어의 구성과 설계</strong>가 매우 중요했습니다.</p><p>사용자 PC/Laptop에 설치하여 사용하는 애플리케이션의 경우 다중 운영체제 컴파일과 런타임을 지원하는 <strong>프로그래밍 언어</strong>가 필수적이었고, 더해서 편리하면서 뛰어난 UI/UX를 제공하기 위해<em> </em><strong>UI Framework </strong>또한 매우 중요한 요소였습니다.</p><p>그래서 저를 포함한 개발팀 모두는 회사 내 보유하고 있는 기술역량 및 경험 그리고 위에서 언급한 중장기 제품 로드맵등을 종합적으로 고려했고, 이 글은 QueryPie가 어떤 기술을 기반으로 개발되고 있는지에 대한 이야기를 다루고 있습니다.</p><h3>1. QueryPie UI (Front-end) : Electron, TypeScript, React</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ruFVafAhU1vD40H6AkLhxA.png" /><figcaption><a href="https://electronjs.org/">Electron</a></figcaption></figure><p>Electron은 Mac, Windows, Linux 에서 동작하는 데스크탑 애플리케이션 개발이 가능한 프레임워크 입니다. 오픈소스이며 비즈니스 로직을 JavaScript(또는 TypeScript)로 개발하며 UI/UX영역은 높은 확장성과 뛰어난 시각적 구현이 가능한 HTML/CSS로 개발합니다. 게다가 NodeJS와 NPM 생태계를 그대로 쓸 수 있기 때문에 다양한 라이브러리를 통해 개발 확장성을 확보할 수 있다는 장점이 있습니다.</p><p>또한 이미 많은 사용자를 보유하고 있는 VSCode, Skype, Slack, Atom 등의 제품은 Electron의 완성도와 안정성을 담보해주기도 합니다.</p><h3>2. QueryPie Engine (Back-end) : OpenJDK &amp; Java &amp; JDBC</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/520/1*VPK_WAWDf230ziZ4rqFenQ.png" /><figcaption>OpenJDK 기반의 Java와 JDBC 라이브러리</figcaption></figure><p>Front-end를 Electron으로 결정했기 때문에 NodeJS를 기반으로 한 Back-end도 고려했지만 (1) Node의 Database Connectivity Library가 JDBC만큼 성숙되지 않았다는 점과 (2) 동시 SQL 실행, Data Export/Import등의 핵심적인 기능을 안정적으로 구현하기 위해서는 Java Eco System이 적합하다는 점을 고려하여 애플리케이션 Back-end 영역은 OpenJDK 기반의 Java와 JDBC 라이브러리를 활용하기로 했습니다.</p><h3>3. Communication between Processors : gRPC</h3><p>다음으로 Front-end와 Back-end는 별도의 프로세서로 분리 실행되기 때문에 두 프로세서 간의 안정적인 통신이 필요합니다. 일반적인 웹 애플리케이션에서는 HTTP/Web Socket을 통해 통신을 하지만, QueryPie는 사용자 로컬 머신에서 동작하고 애플리케이션 특성 상 빠른 응답과 안정적인 통신이 필수적이기 때문에 TCP/IP기반의 RPC Framework인 gRPC를 선택했습니다.</p><figure><img alt="grpcì ëí ì´ë¯¸ì§ ê²ìê²°ê³¼" src="https://cdn-images-1.medium.com/proxy/1*HEjo57-k42AkyEVPhDw9Uw.jpeg" /><figcaption>gRPC Workflow (<a href="https://www.slideshare.net/shijucv/building-high-performance-apis-in-go-using-grpc-and-protocol-buffers"><em>https://www.slideshare.net/shijucv/building-high-performance-apis-in-go-using-grpc-and-protocol-buffers</em></a><em>)</em></figcaption></figure><p>gRPC는 구글에서 오픈소스로 공개한 RPC Framework로 구글 Protocol Buffer기반 Binary Protocol을 통해 데이터를 전달합니다. Protocol Buffer는 구조화된 데이터를 직렬화하는 방식 중 하나로, Proto라는 IDL(Interface Description Language)을 정의하면 다양한 언어로 직렬화 가능한 모델을 자동 생성해주기 때문에 상호 간에 어떤 데이터를 주고 받을지에 대해서 별도의 문서 없이도 쉽게 이해할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/660/0*Z86SV9F4oksZid8p" /><figcaption><em>Google Protocol Buffer (</em><a href="https://blog.grijjy.com/2017/04/25/binary-serialization-with-google-protocol-buffers/"><em>https://blog.grijjy.com/2017/04/25/binary-serialization-with-google-protocol-buffers/</em></a><em>)</em></figcaption></figure><h3>4. Overall Architecture</h3><p>Electron, Java, JDBC, gRPC를 통해 QueryPie의 전체적인 아키텍처를 다음과 같이 구성했습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/906/1*lZb7k-TdkL0rC_nRvkyBSQ.png" /><figcaption>QueryPie Overall Architecture</figcaption></figure><h3>5. Engine Exception Handler: Error Tracking</h3><p>제품 개발단계에서 아무리 높은 테스트 커버리지와 꼼꼼한 Q/A를 했다하더라도 제품을 사용하는 고객의 하드웨어,OS,OS Patch 등 모든 환경을 완벽하게 테스트하는데는 현실적인 어려움이 따릅니다. 따라서 발생하는 에러를 빠르게 감지하고 재현하여 해결하는게 무엇보다 중요합니다.</p><p>Engine 개발에 있어 가장 신경 쓴 부분 중 하나는 제품에서 에러가 발생하면 회사 내부 환경에서 100% 재현하거나 빠르게 파악할 수 있도록 Engine 전역에서 발생하는 에러를 정확하고 상세하게 기록하는 부분입니다.</p><p>Engine에서 발생하는 모든 에러에 대해 사용자의 어떤 행동이 영향을 미쳤는지, 당시 상황은 어땠는지를 상세하게 추적하기 위해 gRPC Interceptor, SLF4J MDC, Logback Custom Appender를 이용했습니다.</p><p>앞서 아키텍처에서 설명한 것처럼 사용자의 행동이나 요청을 처리하기 위해 QueryPie Middleware는 gRPC를 통해 필요한 데이터를 Engine에 요청합니다. 이 때 Middleware가 어떤 gRPC Endpoint를 호출했는지를 추적하기 위해 gRPC Interceptor에서 API Request 정보를 항상 MDC에 기록하도록 해두었고, 이 정보는 에러가 발생하면 Logback Appender에서 로그를 기록할 때 꺼내오도록 되어 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/987/1*_TiuzKzTffrcn6P7UhS9SQ.png" /><figcaption>Engine 에러 발생 과정 추적</figcaption></figure><p>또한 모든 에러 로그를 빠짐없이 추적하기 위해 ROOT Appender에 QueryPieLogAppender를 추가하여 SLFJ4를 통해 찍히는 모든 log.error()에 대해 기록하도록 되어 있습니다. 이 에러 로그 정보는 사용자의 동의를 통해 서버로 전송되고, 서버에서는 해당 로그 데이터를 기반으로 빠르게 에러를 발견 및 재현하여 문제점을 해결하게 됩니다.</p><h3>6. Application Performance Monitoring: Skywalking</h3><p>마지막으로 애플리케이션의 성능 측정이 남았습니다. 이 부분은 개발 과정에서부터 애플리케이션의 성능 측정을 시작하면 개발이 완료된 후에 한번에 추적하는 것보다 훨씬 수월하기 때문에 미리 구상해두었습니다. 또한 QueryPie에 있는 기능 중에 개발할 때는 잘 느끼지 못했지만 실제 테스트를 해보면 응답이 느리거나 혹은 기대했던 것보다 훨씬 긴 작업이 될 수 있는 가능성이 있는 것들이 있어서 개발 과정에서부터 APM 동작을 고려하는 것이 필요했습니다.</p><p>우선 모든 개발자가 로컬에서 APM이 연동된 Engine을 띄우면 정확한 메트릭을 파악할 수 없을것 같아, Remote 서버에 Engine을 구동시키고 해당 Engine은 APM과 함께 실행되도록 구성했습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/731/1*6CBZ6EZO5jzipfLEYt9aCQ.png" /><figcaption><em>QueryPie Remote Engine</em></figcaption></figure><p>위의 그림과 같이 Git Push가 발생하면 Jenkins는 자동으로 Engine을 빌드한 후 리모트 서버에 배포하고 재시작 합니다. 따라서 Front-end와 Middleware 개발자는 로컬에 Engine을 실행할 필요 없이 Remote Engine에 접속해서 개발을 진행할 수 있으며, 개발되는 과정에서 테스트 및 실행했던 기록이 모두 APM 데이터베이스에 기록됩니다. 여기에서는 여러 APM 중 간단한 설치와 깔끔한 UI, 토폴로지 맵, gRPC 지원 및 실행시간 추적이 가능한 <a href="https://github.com/apache/incubator-skywalking">Sky Walking</a>이라는 Apache Incubation Project를 사용했습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/802/1*7Qvuk6Mf4F2oyJMaEla5iw.png" /><figcaption>Sky Walking 내 EndPoint 별 Response Time을 알려주는 기능</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/802/1*2sXnJlLuyl7RdyGK1ySavQ.png" /><figcaption>토폴로지 맵을 통해 어떤 곳으로 요청이 많이 전달되는지 분석 가능</figcaption></figure><p>이렇게 APM 적용을 통해 병목구간을 개발단계에서 분석해서 빠르게 찾고 이를 개선할 수 있는 효과적인 방법들을 지속적으로 고민하고 있습니다. 그리고 이런 과정들을 통해 제품이 사용자에게 전달되었을 때 높은 품질과 뛰어난 성능으로 동작할 수 있기를 기대하고 있습니다.</p><h3>마치며</h3><p>QueryPie는 뛰어난 여러 엔지니어들이 적합한 기술로 주춧돌을 세우고 어떻게 사용성을 높일지, 또 기존 사용자가 불편해하던 문제점을 어떻게 해결할 수 있을지를 매일 매일 고민하며 살을 붙여가고 있습니다. 어느덧 꽤 많은 핵심 기능들이 자리를 잡았고, 사내에서는 쓸 수 있을만큼의 제품 기능이 완성되었습니다. 세계 최고의 데이터베이스 도구가 되기위해 QueryPie는 오늘도 개발되고 또 개발되고 있습니다. 조금만 기다리세요!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YXU8zrFAHm806bUUJrENBw.png" /></figure><p>📑영어(English Version)- <a href="https://medium.com/p/c13a429b5346/">https://medium.com/p/c13a429b5346/</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=184601de5057" width="1" height="1"><hr><p><a href="https://medium.com/querypie/querypie%EB%A5%BC-%EC%A7%80%ED%83%B1%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0-184601de5057">Electron, React, gRPC로 Cross Platform Application 설계하기</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[QueryPie: a fresh design for SQL IDE]]></title>
            <link>https://medium.com/querypie/querypie-a-fresh-design-for-sql-ide-4a3e4ce2f136?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/4a3e4ce2f136</guid>
            <category><![CDATA[english]]></category>
            <category><![CDATA[sql]]></category>
            <category><![CDATA[querypie]]></category>
            <category><![CDATA[database]]></category>
            <category><![CDATA[ide]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Wed, 16 Jan 2019 08:37:54 GMT</pubDate>
            <atom:updated>2019-04-03T06:31:30.970Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*_PdZr-zzxlInAd0rJOpLHA.png" /></figure><h4>QueryPie Development #2: Target and Core Requirements</h4><p>한국어-<a href="https://medium.com/p/6757cf2ec18/">https://medium.com/p/6757cf2ec18/</a></p><p>In my <a href="https://medium.com/p/e05f11b9ae58/">last post</a>, I compared various Integrated Development Environments (IDE) available for Mac OS. I also introduced the background of <a href="https://www.querypie.com/">QueryPie</a>, a new cross-platform database IDE capable of improving the experience of all developers.</p><p>Today, I would like to introduce how we defined our <strong>target customers</strong> and constructed our <strong>core technical requirements</strong> before even beginning the development of <a href="https://www.querypie.com/">QueryPie</a>.</p><h3>The origin of the QueryPie name:</h3><p>Before we dive into the deep end, I’d like to tell you how we settled on the name <strong>QueryPie</strong>. The name of a service or product being developed is often determined after some development unfolds. But as Confucius said, “The beginning of wisdom is to call things by their proper name.” I like to name a project before it starts. It helps me grow a deeper attachment to the project from the very beginning.</p><p>Since working with the usual database already has many difficulties, I wanted to create this new product that would make data work plain and easy. I knew there were many people out there that we could help. So with the help of the design team we decided that the expressions <strong>Piece of Cake</strong> and <strong>Easy As Pie</strong>, both referring to tasks that are very easy to do, go well with the philosophy behind what we were trying to accomplish.</p><p>We had countless name candidates for our new product, ranging from <em>CakeDB </em>and <em>Cakery </em>to <em>Querify </em>and <em>QueryPy</em>. Among the hundreds of names we went through, <strong>QueryPie </strong>really stood out to me. I liked keeping the word ‘query’ in the title, because with it the message was clear that our product focused on SQL IDE. By also adding the ‘pie’ element, we could create some fun designs for branding by utilizing this familiar and delicious food.</p><p>So it was decided. We would name this new service <strong>QueryPie</strong>.</p><h3>QueryPie’s Target Customers:</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*l994QET7IX-k7IG6V3ZjRw.png" /><figcaption>Data is becoming more important and data-based collaboration is increasing (source: pixabay)</figcaption></figure><p>Database users all have very different backgrounds: from DBAs, developers, and SQL Engineers to Planners connected directly to the databases, Marketers, and Data Scientists. But they are <strong>all </strong>accessing a database and directly dealing with data.</p><p>Our team defined the target customer for QueryPie, reflecting new trends in the database industry and the user population using the following:</p><h4>(1) Common Factors</h4><ul><li>Multiple members use a variety of Operating Systems (Mac, Linux, Windows, etc)</li><li>Collaborate dynamically on data and and make critical decisions together</li><li>Members in different departments extract, edit, and analyze data with direct database access information</li><li>Cloud-based Databases</li></ul><h4>(2) Development Organization</h4><ul><li>Developers creating and managing database objects (table, view, functions, etc)</li><li>Web/Application developers who write and execute SQL syntax for data extraction and the majority of database tasks</li></ul><h4>(3) Non-development Organization (planning, marketing, data science)</h4><ul><li>Non-development organizations that access and utilize data across multiple databases within the organization</li><li>Members extracting and analyzing required data using SQL, without the help of development department</li></ul><blockquote>※ Article on trends requiring marketers to utilize data: <a href="http://bitly.kr/4mUHP"><em>The Rise Of The Data-Driven Marketer: Why It’s Beneficial And How To Hire One</em></a></blockquote><h3>QueryPie‘s Core Requirement Configuration:</h3><p>Based on the above target customers, the core requirements of QueryPie are organized into two main categories:</p><h4>(1) Core capabilities as Database IDE</h4><p>In addition to the built-in capabilities of many IDEs, we want to have extensions that make it easier for users to work with their data and increase their productivity.</p><ul><li>Powerful SQL Auto-Complete Function</li><li>Multi-line SQL Execution</li><li>Simple Export/Import of Data (multi-format support)</li><li>Simple and intuitive UI</li><li>Fast application execution and stability</li></ul><h4>(2) Security and Management for Database Collaboration</h4><p>The number of non-development organizations and members who utilize data directly is constantly increasing. In turn, the number of people who own database access information and permissions is also increasing. So in addition to the features of Database IDE, we want to add new capabilities for <strong>database security and account management</strong> to help ensure data collaboration between multiple users.</p><ul><li>Manage database access information on QueryPie.com account</li><li>Database access control levels set by user/object (Read-Only access, allow access to only certain tables, etc)</li><li>Track Database access and SQL Execution history</li><li>Share cloud-based SQL and SQL Execution results</li></ul><p>The last three bullet points are services that are not provided by a typical Database IDE. But it was a prominent problem that I struggled with when using database tools, and I was sure to include it as a core service for <a href="http://www.querypie.com/"><strong>QueryPie</strong></a>.</p><p>Typically startups or small-to-medium sized businesses have two to three database servers, while large companies usually have hundreds to thousands of database servers. To use these servers, a user must enter the Host, Port number, ID and Password <em>every time</em> they connect. Even if the information is saved, it will not be maintained if computers are changed or formatted.</p><p>In the case of startup companies, it is important for marketers or planners to access the database and view the data directly. In general, this process not only exposes all database access information but it can also cause service-wide failures through incorrect SQL execution or unskilled table manipulation.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*cdYVpwp4rbFRNaqLIrM2aQ.png" /><figcaption>QueryPie &amp; QueryPie Protocol</figcaption></figure><p>To tackle this problem, QueryPie is designed to work with a product called <strong>QueryPie Protocol</strong>, which allows users to encrypt database access information for their organization, control permissions (Read-Only access, etc) and track when, where, and which SQL they have run.</p><p>Thus the database administrator can access the database via the QueryPie account securely. As long as the database information is entered by the database administrator at QueryPie.com, the rest of the members can access the database securely without requirements for access information.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NoUbc5oVT5nWlWv7EXqN-g.jpeg" /><figcaption>Example of registering database access information in QueryPie Protocol</figcaption></figure><h3>Future Roadmap of QueryPie Development:</h3><p>My goal is to promote <strong>QueryPie </strong>as essential software for all startups and small businesses that work with databases. Development organizations can configure and manage databases and run SQL faster than any other tool using QueryPie. Non-development organizations can securely access databases, analyze and visualize data they want, and organize as well as share dashboards with <strong>QueryPie</strong>.</p><p>Additionally, all actions (connections, executed queries, etc) passed to the database through QueryPie are transparently recorded in a blockchain. This enables high level database security audits, and also provides a database Fraud Detection System (FDS) that lets users learn usual database access patterns. Users can also track SQL execution patterns and send alerts to the administrator in advance if abnormal activity is detected. With this method, companies can easily meet the legal regulations for various required privacy measures.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*v1zf_yNzoXB_3a6dPku1Xw.png" /><figcaption>Facebook caused a lot of controversy in the last year due to a large number of personal information leaks.</figcaption></figure><p>QueryPie is created by leading software engineers and is being designed to become a top global product. Along with my development team, we will continue to document the many technologies used to develop <strong>QueryPie </strong>in upcoming development logs.</p><p>So stay tuned!</p><p>- Brant Hwang, CEO of CHEQUER</p><blockquote>In the second quarter of 2019, you’ll be able to experience <strong>QueryPie</strong>: a new, lightweight, fast database tool that delivers the same experience on Mac, Windows, and Linux.</blockquote><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4a3e4ce2f136" width="1" height="1"><hr><p><a href="https://medium.com/querypie/querypie-a-fresh-design-for-sql-ide-4a3e4ce2f136">QueryPie: a fresh design for SQL IDE</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[QueryPie, 새롭게 제안하는 SQL IDE]]></title>
            <link>https://medium.com/querypie/querypie-%EC%83%88%EB%A1%AD%EA%B2%8C-%EC%A0%9C%EC%95%88%ED%95%98%EB%8A%94-sql-ide-6757cf2ec18?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/6757cf2ec18</guid>
            <category><![CDATA[korean]]></category>
            <category><![CDATA[sql]]></category>
            <category><![CDATA[querypie]]></category>
            <category><![CDATA[database]]></category>
            <category><![CDATA[ide]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Wed, 16 Jan 2019 08:37:18 GMT</pubDate>
            <atom:updated>2019-02-28T06:49:03.229Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*_PdZr-zzxlInAd0rJOpLHA.png" /></figure><h4>QueryPie 개발기 #2: QueryPie의 타겟과 핵심 요구 사항</h4><p><a href="https://medium.com/p/b38ee2d09103/">지난 글</a>에서 여러 IDE들을 비교하며, 기존 IDE에서 경험한 아쉬움을 개선한 새로운 Cross-Platform Database IDE인 QueryPie 를 개발하게 된 배경을 소개했습니다.</p><p>오늘의 글에서는 개인적인 문제제기에서 시작된 <a href="https://www.querypie.com/">QueryPie </a>개발 프로젝트의 애플리케이션 개발에 앞서, 어떻게 목표 고객을 정의했고 그에 따라 기술적인 요구사항을 구성하였는지 소개하겠습니다.</p><h4>QueryPie라는 이름을 정하게 된 배경</h4><p>본격적인 내용을 풀어놓기 전에, 이 프로젝트가 왜 QueryPie라는 이름을 갖게 되었는지 말씀드리고자 합니다. 개발하는 서비스 또는 제품의 이름을 중간과정이나 개발 후에 정하는 경우도 많습니다. 그러나 <em>“내가 그의 이름을 불러주었을 때, 그는 나에게로 와서 꽃이 되었다.”</em>는 유명한 시의 구절처럼 저는 프로젝트를 시작하기 앞서 이름을 정하는 것을 좋아합니다. 뭔가 처음부터 프로젝트에 더 큰 애정을 갖게 되는 것 같달까요.</p><p>평소 Database를 다루는 것을 어려워하는 모습들을 보며, 많은 사람들이 데이터베이스를 쉽고 빠르게 다룰 수 있게 돕고 싶다는 생각이 컸습니다. 그리하여 ‘누워서 떡먹기’와 같은 의미인 ‘Piece of Cake’, ‘Easy As Pie’ 라는 표현이 이러한 철학과 어울린다는 디자인 팀의 의견을 받아들였습니다.</p><p>CakeDB, Cakery, QueryPy, Querify 등의 수많은 후보가 있었습니다. 그 가운데 SQL IDE라는 제품 특성을 연상하기 좋고, Pie라는 친숙한 사물을 활용하여 디자인 및 브랜딩의 이슈를 수월하게 해결할 수 있을 것이라는 기대 하에 “QueryPie”를 애플리케이션의 이름으로 정했습니다.</p><h4>QueryPie의 목표 고객</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*l994QET7IX-k7IG6V3ZjRw.png" /><figcaption>데이터의 중요성이 커지며 데이터 기반 협업이 활발해졌다(이미지 출처: pixabay)</figcaption></figure><p>데이터베이스를 사용하는 사람들은 매우 다양한 배경을 가지고 있습니다. DBA, 개발자, SQL 튜너와 같은 엔지니어부터, 데이터의 중요성이 부각되는 최근에는 기획자, 마케터, 데이터사이언티스트까지 많은 인력들이 데이터베이스에 직접 접속하여 데이터를 다루고 있습니다.</p><p>QueryPie팀은 데이터베이스 산업과 사용자 층의 새로운 트렌드를 반영하여 아래와 같이 QueryPie의 목표 고객을 정의하였습니다.</p><p><strong>(1) 공통 사항</strong></p><ul><li>조직 내 구성원들이 Mac, Linux, Windows 등 여러 OS를 활용</li><li>데이터를 기반으로 활발하게 협업하고 중요 의사 결정을 진행</li><li>특정 부서가 아닌 다양한 부서의 구성원들이 직접 데이터베이스 접속 정보를 가지고 데이터를 추출, 편집 및 분석함</li><li>클라우드 기반의 데이터베이스 주로 사용</li></ul><p><strong>(2) 개발 조직</strong></p><ul><li>데이터베이스 개체(테이블, 뷰, 함수 등)를 생성 / 관리하는 개발자</li><li>데이터 추출을 위한 SQL 구문 작성 및 실행이 데이터베이스 업무의 대부분인 웹/응용 프로그램 개발자</li></ul><p><strong>(3) 비 개발 조직 (기획, 마케팅, 데이터사이언스)</strong></p><ul><li>개발 조직의 도움 없이 SQL을 활용해 필요한 데이터를 추출 및 분석</li><li>데이터베이스에 저장된 데이터를 활용하여 담당 업무 및 협업 진행</li></ul><blockquote>마케터에게 데이터 활용이 요구되는 트렌드를 다룬 기사: <a href="http://bitly.kr/4mUHP">The Rise Of The Data-Driven Marketer: Why It’s Beneficial And How To Hire One</a></blockquote><h4>QueryPie의 핵심 요구 사항 구성</h4><p>위의 목표 고객을 기반으로 QueryPie의 핵심 요구 사항을 크게 두 가지 분류로 정리하였습니다.</p><p><strong>(1) 데이터베이스 IDE로서의 확장 기능 제공</strong></p><p>많은 IDE들이 기본적으로 제공하는 기능에 더하여, 사용자가 데이터 작업을 더욱 편리하게 수행하여 <strong>업무 생산성을 높일 수 있는</strong> 확장 기능을 탑재하고자 합니다.</p><ul><li>강력한 SQL 자동 완성 기능</li><li>멀티 라인 SQL 실행</li><li>간단한 데이터 내보내기/가져오기 (멀티 포맷 지원)</li><li>간결하고 직관적인 UI</li><li>빠른 애플리케이션 실행속도와 안정성</li></ul><p><strong>(2) 데이터베이스 협업을 위한 보안 및 관리 기능</strong></p><p>데이터를 직접 활용하는 비 개발 조직 및 구성원의 숫자가 늘고, 이로 인해 데이터베이스 접속 정보 및 권한을 소유한 인원이 늘어나고 있습니다. 데이터 협업을 안전하게 지원하고자 Database IDE의 기능에 더하여 <strong>데이터베이스 보안 및 계정관리의 기능</strong>을 새롭게 추가하려 합니다.</p><ul><li>QueryPie.com 계정 기반의 데이터베이스 접속 정보 관리</li><li>사용자 별 / 개체 별 데이터베이스 접근제어 (Read-Only, 특정 테이블만 접근 허용 등)</li><li>데이터베이스 접근 / SQL 실행 기록 추적</li><li>클라우드 기반 SQL 및 SQL 실행 결과 공유</li></ul><p>위의 요구사항 중 마지막 3가지는 일반적인 Database IDE에서는 제공하지 않는 서비스 입니다. 그러나 저 스스로가 데이터베이스 도구를 사용하면서 고민해왔던 문제였기에 <a href="https://www.querypie.com/"><strong>QueryPie</strong></a>의 핵심 서비스로 포함시켰습니다.</p><p>보통 스타트업이나 중소기업은 데이터베이스 서버가 둘 셋에서 수 십개 정도 되고, 큰 회사의 경우는 수 백, 수 천대가 넘는 경우가 있습니다. 접속할 때마다 매 번 Host, Port, ID, Password를 입력해야 하고, 저장해 놓았다 할 지라도 컴퓨터를 바꾸거나 포맷할 경우에는 유지가 되지 않습니다.</p><p>또한 스타트업의 경우에는 마케터나 기획자가 데이터베이스에 접근해서 직접 데이터를 보는게 일반적인데 이 과정에서 데이터베이스 접속정보가 모두 노출될 뿐 만 아니라 잘못된 SQL을 실행하거나 미숙한 테이블 조작으로 서비스 전체에 장애를 야기할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*-w08JwHOImrIILDdhHy-4w.png" /><figcaption>QueryPie와 QueryPie Protocol</figcaption></figure><p>이 문제를 해결하기 위해 QueryPie는 이메일 계정 기반으로 로그인만 하면 사용자가 포함된 조직의 데이터베이스 접속 정보를 암호화하여 QueryPie에 전달하고, ReadOnly 같은 권한을 제어할 수 있으며, 사용자가 언제, 어디서, 어떤 SQL을 실행했는지 모두 추적할 수 있는 QueryPie Protocol 이라는 제품과 함께 동작하도록 설계되었습니다.</p><p>따라서 데이터베이스 관리자가 QueryPie.com에 접속하여 데이터베이스 정보만 입력하면 나머지 구성원은 접속정보 없이도 QueryPie 계정을 통해 허가된 데이터베이스에 안전하게 접근할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*dkwTh6l6ecCMNhkT1h0wqA.png" /><figcaption>개발중인 QueryPie Protocol에서 데이터베이스 접속 정보를 등록하는 모습</figcaption></figure><h4>QueryPie 개발의 향후 Roadmap</h4><p>QueryPie를 데이터베이스를 다루는 모든 스타트업과 중소기업에 필수적인 소프트웨어로 발돋움시키는 것이 목표입니다. QueryPie를 활용하여 개발 조직은 어떤 도구보다도 빠르게 애플리케이션에 필요한 데이터베이스를 구성 및 관리하고 SQL을 실행하며, 비 개발 조직은 안전하게 데이터베이스에 접속하여 원하는 데이터를 분석하고 시각화해 이를 통해 대시보드를 구성하고 공유할 수 있습니다.</p><p>게다가 QueryPie를 통해 데이터베이스에 전달되는 모든 행동(접속 기록, 실행 쿼리 등)은 블록체인 상에 투명하게 기록되기 때문에 높은 수준의 데이터베이스 보안 감사가 가능합니다. 또한 사용자의 평소 데이터베이스 접근 패턴과 SQL 실행 패턴을 학습하여 이상징후가 감지되면 관리자에게 경고를 사전에 보낼 수 있는 데이터베이스 FDS(Fraud Detection System)까지 제공됩니다. 따라서 기업이 준수해야 하는 다양한 개인정보보호 조치에 대한 법적 규제사항을 충족시킬 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*v1zf_yNzoXB_3a6dPku1Xw.png" /><figcaption>지난 해 페이스북은 대량의 개인 정보 유출 사고로 큰 논란을 야기했다</figcaption></figure><p>QueryPie는 업계 최고의 소프트웨어 엔지니어들이 만들고 있고, 세계 최고 수준의 제품으로 기획/개발되고 있습니다. QueryPie 개발팀과 QueryPie 개발에 사용된 수 많은 기술을 지속적으로 소개할 계획입니다.</p><blockquote>2019년 2분기에는 Mac, Windows, Linux에서 동일한 경험을 제공하면서 가볍고 빠르게 동작하는 새로운 데이터베이스 도구인 QueryPie를 만나보실 수 있습니다.</blockquote><p>영어-<a href="https://medium.com/p/4a3e4ce2f136/">https://medium.com/p/4a3e4ce2f136/</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6757cf2ec18" width="1" height="1"><hr><p><a href="https://medium.com/querypie/querypie-%EC%83%88%EB%A1%AD%EA%B2%8C-%EC%A0%9C%EC%95%88%ED%95%98%EB%8A%94-sql-ide-6757cf2ec18">QueryPie, 새롭게 제안하는 SQL IDE</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[맘에 쏙 드는 Database IDE를 찾아서]]></title>
            <link>https://medium.com/querypie/%EB%A7%98%EC%97%90-%EC%8F%99-%EB%93%9C%EB%8A%94-database-ide%EB%A5%BC-%EC%B0%BE%EC%95%84%EC%84%9C-b38ee2d09103?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/b38ee2d09103</guid>
            <category><![CDATA[mac]]></category>
            <category><![CDATA[database]]></category>
            <category><![CDATA[korean]]></category>
            <category><![CDATA[developer]]></category>
            <category><![CDATA[querypie]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Mon, 07 Jan 2019 08:30:00 GMT</pubDate>
            <atom:updated>2019-02-11T01:04:47.593Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NKZqo21WM-MP266hVCXUfA.png" /></figure><h4>QueryPie 개발기 #1: 난 왜 Database 도구를 만들게 되었나</h4><p>장인은 도구를 탓하지 않는다고 합니다만, 개발자 세계의 장인은 종종 다른 행태를 보여 줍니다. 불편한 도구를 탓하지 않고 ‘답답해서 내가 직접 만들고’ 마는 것이죠.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/216/1*BFEqiIs5urJebvU_YSQTdQ.png" /><figcaption><em>Linus Torvalds, 답답해서 2주 만에 뚝딱 ‘Git’을 만든 전설적인 개발 장인 </em><a href="https://commons.wikimedia.org/wiki/File:Linus_Torvalds.jpeg">https://commons.wikimedia.org/wiki/File:Linus_Torvalds.jpeg</a></figcaption></figure><p>개발자로서 장인의 경지에 이르지 못했기에, 손에 쥔 도구를 탓하며 장인들이 만들어 낸 편리한 도구를 찾곤 했습니다. 잘 만든 도구를 찾는 것이 코딩작업을 ‘더 안락하고 즐겁게’ 만들기 위한 가장 효율적인 방법이라 믿습니다. 그래서 이 과정에 아낌없이 시간과 노력을 투자하곤 합니다.</p><p>데이터베이스 및 SQL 코딩 작업을 할 때도 자주 ‘도구 탓’을 했습니다. 그래서 마음에 쏙 드는 데이터베이스 IDE를 찾기 위해서 많은 시간을 썼습니다. 결론을 먼저 말하자면, 지난 6년간 10여가지 이상의 무료/유료 데이터베이스 도구를 사용해봤지만 아직 제 마음에 쏙 드는 기특한 툴을 찾지 못했습니다.</p><p>그래서 제 맘에 드는 Mac용 데이터베이스 도구를 찾기 위한 여정과 그 결과로 알게 된 꽤 체계적(?)이고 지극히 주관적인(!) 데이터베이스 툴들에 대한 평가들을 공유하고자 합니다.</p><h4>왜 Mac에서 돌아가는 똘똘한 Database IDE는 없을까?</h4><p>2011년, iOS 애플리케이션 개발이 한참 유행하던 시절 앱 개발을 위해 맥북을 구입하였고 그 후로 쭉 맥북과 맥 OS를 사용하고 있습니다. Mac의 가장 큰 장점 중 하나는 유닉스 기반으로 설계된 맥 OS 덕분에 터미널 환경이 기본적으로 제공되고 이 터미널에 iTerm, Zshell 추가하면 편리한 터미널 환경을 만들 수 있다는 것입니다. 또한 Android와 Web를 개발 할 때 자주 쓰는 IDE인 <a href="https://developer.android.com/studio/">Android Studio</a>, <a href="https://www.jetbrains.com/webstorm/">WebStorm</a>, <a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a> 등이 윈도우 보다 맥OS에서 더욱 안정적이고 강력한 성능을 발휘하기 때문이었습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/888/1*Qv1DP0iNGuPFyHN5k5FBmQ.png" /><figcaption>Stackoverflow의 개발자들이 사용하는 OS (출처:<a href="https://insights.stackoverflow.com/survey/2018/">https://insights.stackoverflow.com/survey/2018/</a>)</figcaption></figure><p><a href="https://stackoverflow.com/">StackOverflow</a> 사용자를 대상으로 한 조사에 따르면 25%가 넘는 개발자가 맥을 사용하고 있고 50%가 넘는 개발자가 윈도우가 아닌 운영체제를 사용합니다. 이렇듯 전 세계적으로 매년 Mac을 사용하는 개발자의 비중 역시 점점 증가하고 있으며 이 트렌드에 따라 네이버, 카카오, 배달의 민족을 비롯해 개발 중심의 많은 스타트업 역시 Mac을 개발 도구로 제공합니다.</p><p>하지만, Mac을 사용하면서 가장 불편한것 중 하나는 윈도우에서 사용하던 <a href="https://www.sqlgate.com/">SQLGate</a>, <a href="https://www.quest.com/toad/">Toad</a> 수준의 기능과 편리함을 제공하던 데이터베이스 도구가 부재하다는 것이었습니다. 10여가지 중 현재는 그나마 간결하고 직관적인 UI가 제공되는 <a href="https://www.sequelpro.com/">Sequel Pro</a>를 사용하고 있는데 Auto Commit, 다중 SQL 실행, 자동완성, Import/Export의 아쉬움 때문에 여전히 데이터베이스 작업을 할때마다 불편함을 느끼고 있습니다.</p><h4>내 맘대로 정하는 SQL 개발 도구 평가 기준</h4><p>나름 까다로운 입맛을 가진 개발자로서 아래와 같은 기준으로 데이터베이스 도구를 평가해보기로 했습니다. 제가 데이터베이스에 특화된 개발자는 아닌지라 데이터베이스 관리에 필요한 고급 기능이나 애플리케이션의 높은 기술적 완성도보다는 일상 개발 업무에 필요한 SQL을 작성하고 실행하는데 편리한 것을 우선적으로 고려했음을 미리 말씀 드립니다.</p><p><strong>평가 기준</strong></p><ul><li><em>사용자에게 </em><strong><em>직관적인 UI/UX</em></strong><em>를 제공하는가?</em></li><li><em>애플리케이션의 </em><strong><em>실행속도</em></strong><em>가 빠른가?</em></li><li><em>SQL 코드 작성 시 </em><strong><em>자동완성</em></strong><em> 기능의 수준이 높은가?</em></li><li><em>애플리케이션의 </em><strong><em>안정성</em></strong><em>이 높은가?</em></li><li><strong><em>다중 SQL 실행</em></strong><em>이 가능한가?</em></li><li><strong><em>Auto Commit</em></strong><em> 기능을 지원하는가?</em></li><li><strong><em>다양한 (특히 Excel) 포맷</em></strong><em>의</em><strong><em> Import / Expor</em></strong><em>t가 가능한가?</em></li></ul><h4>지극히 주관적이고 개인적인 Mac용 쿼리 툴 평가</h4><p>툴에 대한 사용 경험은 사용자가 처한 상황과 성향에 따라 천차만별입니다. 따라서 이 글의 평가는 아래의 상황에 속한 개발자 분들이 참고하시면 더욱 도움이 될 것이라 생각합니다.</p><p><strong>여러분은 몇 가지 경우에 해당하는 개발자이신가요?</strong></p><ul><li><strong><em>Mac OS, Linux </em></strong><em>등 윈도우가 아닌 OS를 사용하는 개발자</em></li><li><a href="https://www.jetbrains.com/idea/"><em>IntelliJ IDEA</em></a><em>, </em><a href="https://www.jetbrains.com/pycharm/"><em>PyCharm</em></a><em> 등의 </em><strong><em>개발 IDE를 즐겨 사용</em></strong><em>하고, 개발 </em><strong><em>생산성을 매우 중요</em></strong><em>하게 생각하는 개발자</em></li><li><em>개발 도구의 </em><strong><em>UI/UX를 중요</em></strong><em>하게 생각하고, </em><strong><em>시각적으로 높은 퀄리티</em></strong><em>를 가진 개발 환경을 선호하는 개발자</em></li><li><em>AWS 환경에서 MySQL, MariaDB와 같은 </em><strong><em>클라우드 기반 데이터베이스</em></strong><em>를 사용하는 개발자</em></li><li><strong><em>테이블 생성/수정/삭제, SQL 작성/실행이 주된 업무</em></strong><em>인 </em><strong><em>스타트업</em></strong><em> 및 중소기업 개발자</em></li><li><em>DBA가 없고, </em><strong><em>개발자가 Database를 직접 관리</em></strong><em>하는 회사</em></li></ul><p>지난 6년간 사용했보았던 <a href="https://www.mysql.com/products/workbench/">MySQL Workbench</a>, <a href="https://dbeaver.com/">DBeaver</a>, <a href="https://www.sequelpro.com/">Sequel Pro</a> 등 무료/ 오픈소스 제품부터 <a href="https://www.jetbrains.com/datagrip/">DataGrip</a>, <a href="https://www.sqlprostudio.com/">SQLPro Studio</a>, <a href="https://tableplus.io/">TablePlus</a>,<a href="https://www.dbvis.com/"> DbVisualizer</a> 등의 상용제품 가운데 구글 트렌드에서 확인한 결과를 바탕으로 전세계의 Mac을 사용하는 개발자들이 많이 이용하고 있다고 생각되는 7가지 제품:<a href="https://www.mysql.com/products/workbench/">MySQL Workbench</a>, <a href="https://www.jetbrains.com/datagrip/">DataGrip</a>, <a href="https://dbeaver.com/">DBeaver</a>(Free ver.), <a href="https://www.sequelpro.com/">Sequel Pro</a>, <a href="https://www.dbvis.com/">DbVisualizer</a>, <a href="https://tableplus.io/">TablePlus</a>, <a href="https://teamsql.io/">TeamSQL</a>에 대한 리뷰를 공유합니다. (저는 MySQL/MariaDB를 주로 사용하고 있어 해당 DBMS 지원 제품위주로 비교 분석 했습니다.)</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*S7k5yXapS8A8Md-s_U4FUQ.png" /><figcaption>Mac에서 사용 가능한 주요 SQL Tool들의 구글 검색 트렌드 비교 (출처: Google Trends)</figcaption></figure><p><strong>(1) </strong><a href="https://www.jetbrains.com/datagrip/"><strong>DataGrip</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/952/1*xxKsaAuHvHHF3KUz0dMNbw.png" /><figcaption>(출처: <a href="https://www.g2crowd.com/products/datagrip/reviews#reviews">https://www.g2crowd.com/products/datagrip/reviews#reviews</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★★</li><li>실행 속도: ★★</li><li>자동 완성 기능: ★★★★★</li><li>애플리케이션 안정성: ★★★★</li><li>다중 SQL 실행 기능: <strong>Yes</strong></li><li>Auto Commit 지원: <strong>Yes</strong></li><li>Import/Export 기능: Import- CSV, TSV / Export- CSV, TSV, HTML, XML, JSON</li><li>가격: 사업자 및 단체- <strong>$199/</strong>1st year, 개인 유저- <strong>$89</strong> / 1st year</li><li>지원 DBMS: PostgreSQL, MySQL, Oracle, MS SQL Server, Azure, Amazon Redshift, SQLite, IBM DB2, H2, SYBASE, Exasol, Apache Derby, MariaDB, HyperSQL, ClickHouse, cassandra</li></ul><p><strong>(2) </strong><a href="https://dbeaver.com/"><strong>DBeaver</strong></a><strong> (Free version)</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/949/1*bhUVGwMiseQD8vQmTDj_KQ.png" /><figcaption>(출처: <a href="https://www.g2crowd.com/products/dbeaver/reviews#reviews">https://www.g2crowd.com/products/dbeaver/reviews#reviews</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★★</li><li>실행 속도: ★★</li><li>자동 완성 기능: ★★★★</li><li>애플리케이션 안정성: ★★★</li><li>다중 SQL 실행 기능: <strong>No</strong></li><li>Auto Commit 지원: <strong>Yes</strong></li><li>Import/Export 기능: Import- CSV / Export- CSV, HTML, XML,<strong> </strong>JSON, SQL</li><li>가격: <strong>Free</strong> (향상된 기능의 Enterprise 버전 구매 시 — $149)</li><li>지원 DBMS: MySQL, MariaDB, PostgreSQL, MS SQL Server, Oracle, IBM DB2, SAP MaxDB, Informix, SYBASE, Mimer SQL, InterSystem Cache, Firebird, Ingres, Yellowbrick, Linter, Virtuoso, CUBRID</li></ul><p><strong>(3) </strong><a href="https://www.dbvis.com/"><strong>DbVisualizer</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/958/1*bTJX9B7NEO2kWHgFG_4nWg.png" /><figcaption>(출처: <a href="https://www.g2crowd.com/products/dbvisualizer/reviews">https://www.g2crowd.com/products/dbvisualizer/reviews</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★</li><li>실행 속도: ★★</li><li>자동 완성 기능: ★</li><li>애플리케이션 안정성: ★★★</li><li>다중 SQL 실행 기능: <strong>Yes</strong></li><li>Auto Commit 지원: <strong>Yes</strong></li><li>Import/Export 기능: Import- CSV, <strong>XLS, XLSX </strong>/ Export- CSV, HTML, SQL, XML, <strong>XLS</strong>,<strong> XLSX</strong>, JSON</li><li>가격: 신규 License $197 / User, 기존 License Renewal $69 / User</li><li>지원 DBMS: IBM DB2, Exasol, Apache Derby, H2, INFORMIX, Mimer SQL, MySQL, NETEZZA, NUODB, ORACLE, PostgreSQL, Amazon Redshift, SQLite, MS SQL Server, SYBASE, VERTICA</li></ul><p><strong>(4) </strong><a href="https://tableplus.io/"><strong>TablePlus</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/949/1*Rx95GEpqePRZZE3ezYoARg.png" /><figcaption>(출처: <a href="https://www.g2crowd.com/products/tableplus/reviews">https://www.g2crowd.com/products/tableplus/reviews</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★★★</li><li>실행 속도: ★★★★★</li><li>자동 완성 기능: ★★★</li><li>애플리케이션 안정성: ★★★★</li><li>다중 SQL 실행 기능: <strong>Yes</strong></li><li>Auto Commit 지원: <strong>No</strong></li><li>Import/Export 기능: Import- CSV / Export- CSV, JSON, SQL</li><li>가격: $49 / User</li><li>지원 DBMS: PostgreSQL, MySQL, MariaDB, MS SQL Server, SQLite, Amazon Redshift, Oracle, Redis, cassandra, cockroach, VERTICA</li></ul><p><strong>(5) </strong><a href="https://teamsql.io/"><strong>TeamSQL</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/950/1*3eH4T_YfNJ3vP4BCw-pKEQ.png" /><figcaption>(출처: <a href="https://www.g2crowd.com/products/teamsql/reviews">https://www.g2crowd.com/products/teamsql/reviews</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★★</li><li>실행 속도: ★★★★</li><li>자동 완성 기능: ★★</li><li>애플리케이션 안정성: ★★★</li><li>다중 SQL 실행 기능: <strong>No</strong></li><li>Auto Commit 지원: <strong>No</strong></li><li>Import/Export 기능: Import- SQL / Export- CSV, JSON, Markdown</li><li>가격: <strong>Free</strong></li><li>지원 DBMS: MySQL, PostgreSQL, MS SQL Server, Amazon Redshift, Redis, Oracle, Google BigQuery</li></ul><p><strong>(6) </strong><a href="https://www.sequelpro.com/"><strong>Sequel Pro</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/946/1*-Z_c_doRXTbtoGn9NCbexg.png" /><figcaption>(출처: <a href="https://www.g2crowd.com/products/sequel-pro/reviews">https://www.g2crowd.com/products/sequel-pro/reviews</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★★★</li><li>실행 속도: ★★★★★</li><li>자동 완성 기능: ★</li><li>애플리케이션 안정성: ★★★</li><li>다중 SQL 실행 기능: <strong>No</strong></li><li>Auto Commit 지원: <strong>No</strong></li><li>Import/Export 기능: Import-CSV / Export- CSV, JSON</li><li>가격: <strong>Free</strong></li><li>지원 DBMS: MySQL, MariaDB</li></ul><p><strong>(7)</strong><a href="https://www.mysql.com/products/workbench/"><strong>MySQL Workbench</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/995/1*Ydmmm-3kPdwxO41t13QKrQ.png" /><figcaption>(출처: <a href="https://alternativeto.net/software/mysql-workbench/reviews/">https://alternativeto.net/software/mysql-workbench/reviews/</a>)</figcaption></figure><ul><li>직관적인 UI/UX: ★★★</li><li>실행 속도: ★★</li><li>자동 완성 기능: ★★</li><li>애플리케이션 안정성: ★★★</li><li>다중 SQL 실행 기능: <strong>Yes</strong></li><li>Auto Commit 지원: Yes</li><li>Import/Export 기능: Import-CSV, JSON / Export- CSV, JSON</li><li>가격: <strong>Free</strong></li><li>지원 DBMS: MySQL, MariaDB</li></ul><h4>한 눈에 보기 &amp; 글을 마치며</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*JJ_QwkV9R_MqzJTkjX75aQ.png" /></figure><p>지극히 개인적인 기준과 평가이므로, IDE 선택 시에 각자의 니즈와 사용환경에 맞추어서 고려하시기를 부탁드립니다. (만약 위 정보가 부정확하거나 추가되어야 할 내용이 있다면 꼭 알려주세요!)</p><p>Mac에서 돌아가는 데이터베이스 IDE에 대한 불만과 의문으로 시작하여 여러가지 DB 도구를 찾고 배우는 과정을 거쳤습니다. 실컷 ‘도구 탓’하면서 카카오의 개발자로 일하다가 정신을 차려보니, 오늘의 저는 CHEQUER라는 스타트업의 창업자 겸 CEO가 되어 16년 역사의 DB IDE 도구인 <a href="https://www.sqlgate.com/">SQLGate</a>를 서비스하고 있습니다. <em>(</em><a href="https://medium.com/chequer"><em>CHEQUER와 SQLGate에 대한 다른글 보러가기</em></a><em>)</em></p><p>그리고 작년 연말 부터는 SQLGate의 축적된 노하우와 기술력을 바탕으로 새롭게 합류한 유능한 개발진과 함께 Mac OS와 Window, Linux에서 작동하는 Cross-Platform Database IDE인 ‘<strong>QueryPie</strong>(가칭)’를 개발하고 있습니다.</p><p>QueryPie는 기존의 IDE에서 경험했던 불편한 UI/UX를 사용자 친화적으로 개선하고, 핵심 편의 기능을 기본적으로 탑재하여 2019년 1Q내 출시할 예정입니다. 향후 국내 최고의 데이터베이스 기술력을 바탕으로 모든 개발자가 더 빠르고 편리하게 데이터베이스 업무를 할 수 있게 만드는 것이 목표입니다.</p><p>Cross-Platform 애플리케이션을 만드는 것이 소프트웨어 업계에서는 흔치 않고, 많은 기술적 고민과 노력이 필요하기에 개발 여정을 ‘<strong>QueryPie 개발기</strong>’라는 이름으로 남기고자 합니다. 먼저 겪은 시행착오를 공유하여 새로운 애플리케이션 개발을 준비하는 분들께 도움이 되었으면 하고, 개발 과정에서의 배움과 고민들을 오래 간직하고 싶기 때문입니다.</p><p>다음에는 QueryPie의 타겟 고객 분석을 통해 핵심적인 기능과 요구사항을 정의하고, 이를 토대로 어떤 기술을 통해 QueryPie를 설계했는지를 소개하겠습니다.</p><p>영어: <a href="https://medium.com/p/e05f11b9ae58/">https://medium.com/p/e05f11b9ae58/</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b38ee2d09103" width="1" height="1"><hr><p><a href="https://medium.com/querypie/%EB%A7%98%EC%97%90-%EC%8F%99-%EB%93%9C%EB%8A%94-database-ide%EB%A5%BC-%EC%B0%BE%EC%95%84%EC%84%9C-b38ee2d09103">맘에 쏙 드는 Database IDE를 찾아서</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Searching for my own Database IDE]]></title>
            <link>https://medium.com/querypie/searching-for-my-own-database-ide-e05f11b9ae58?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/e05f11b9ae58</guid>
            <category><![CDATA[developer]]></category>
            <category><![CDATA[english]]></category>
            <category><![CDATA[querypie]]></category>
            <category><![CDATA[database]]></category>
            <category><![CDATA[mac]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Mon, 07 Jan 2019 08:24:56 GMT</pubDate>
            <atom:updated>2019-01-28T06:07:51.624Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*NKZqo21WM-MP266hVCXUfA.png" /></figure><h4>QueryPie Development #1: Why I decided to create a DB tool</h4><p><a href="https://medium.com/p/b38ee2d09103/">한국어</a> : <a href="https://medium.com/p/b38ee2d09103/">https://medium.com/p/b38ee2d09103/</a></p><p>They say a good craftsman never blames his tools. In the developer world, this adage also applies. And if developers are frustrated with the performance of their tools, instead of blaming the tool they just make a new one.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/216/1*BFEqiIs5urJebvU_YSQTdQ.png" /><figcaption><em>Linus Torvalds made Git in 2 weeks because he was sick of other tools not working </em><a href="https://commons.wikimedia.org/wiki/File:Linus_Torvalds.jpeg">https://commons.wikimedia.org/wiki/File:Linus_Torvalds.jpeg</a></figcaption></figure><p>In my years of developing, I have always striven to reach a higher level of craftsmanship. But when I couldn’t reach it, I began to realize the tools available to me did not have the features to do everything I wanted. I couldn’t make my own, so I searched instead for other tools created by established craftsmen. I learned during my search that having good tools is the most efficient way to make coding more comfortable and enjoyable.</p><p>When coding for databases and SQL, I also often blamed my tools. So I spent a lot of time trying to find my favorite database IDE. To begin with, I’ve been using more than 10 different free and paid database tools over the past six years. But I never found a unique tool that met all my needs.</p><p>So I’d like to share my journey to find my favorite database tool for Mac, and share my fairly systematic and highly subjective evaluation of the database tools that I found.</p><h4>Why isn’t there an intelligent database IDE for Mac?</h4><p>In 2011, when iOS application development was very popular, I bought a Macbook to begin dabbling in app development. I’ve been a loyal Mac OS user since then, and I can comfortably say that one of the biggest advantages of using a Mac is that the Unix-based operating system provides a built-in terminal environment and allows users to add iTunes and Zhell to the terminal to create a convenient environment. Another advantage is how IDE software commonly used to develop on Android and on the web like <a href="https://developer.android.com/studio/">Android Studio</a>, <a href="https://www.jetbrains.com/webstorm/">WebStorm</a>, and <a href="https://www.jetbrains.com/idea/">IntelliJ IDEA</a>, are more stable and powerful in MacOS than Windows.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/888/1*Qv1DP0iNGuPFyHN5k5FBmQ.png" /><figcaption>result of preferred Operating System by developers at Stack Overflow (source: <a href="https://insights.stackoverflow.com/survey/2018/">https://insights.stackoverflow.com/survey/2018/</a>)</figcaption></figure><p>According to a survey conducted by Stack Overflow for their users, more than 25% of developers use Mac and more than 50% use operating systems other than Windows. As a result, the number of developers who use Mac every year around the world is increasing. Because of this trend, many development-oriented startups including Naver (Korean equivalent of Google), Kakao (Popular Korean Messenger app), and <a href="http://baemin.com/">Woowa Bros</a> (most used food delivery service in Korea) also use Mac for a development tool.</p><p>However, for me one of the most inconvenient things about using a Mac was the lack of database tools that provided the functionality and convenience of software like <a href="https://www.sqlgate.com/">SQLGate</a> and <a href="https://www.quest.com/toad/">Toad</a>, which are only supported by Windows. Of the 10 most common IDE tools available on Mac OS, I prefer using <a href="https://www.sequelpro.com/">Sequel Pro</a> because of its simple and intuitive UI. But even Sequel Pro doesn’t feel like the best tool to work on databases with due to the lack of Auto Commit, multiple SQL executions, auto-completion, and Import/Export options.</p><h4>My personal SQL development tool evaluation method:</h4><p>Since I can be rather persnickety, I decided to evaluate some database tools using my own criteria. I’m not a database-specific developer, so I’d like to tell you in advance that I’ve given priority to creating and running SQL for <em>everyday development</em> rather than the advanced capabilities or the high technical maturity of applications required to manage the database.</p><p><strong>Evaluation Criteria</strong></p><ul><li><em>Does it provide </em><strong><em>intuitive UI/UX</em></strong><em> to its users?</em></li><li><em>Is the </em><strong><em>execution speed</em></strong><em> of the software </em><strong><em>fast</em></strong><em>?</em></li><li><em>Is there a high level of </em><strong><em>auto-complete</em></strong><em> functionality when writing SQL code?</em></li><li><em>Is the software </em><strong><em>stable</em></strong><em>?</em></li><li><em>Is it possible to run </em><strong><em>multiple SQL executions</em></strong><em>?</em></li><li>Is the <strong>Auto Commit</strong> feature supported?</li><li><em>Is it possible to </em><strong><em>Import/Export</em></strong><em> in </em><strong><em>various formats (especially Excel)</em></strong><em>?</em></li></ul><h4>Highly subjective and personal Query Tool Assessment for Mac:</h4><p>The experience of using a tool varies widely, and the situation as well as the nature of the user should be factored in. So I think the assessment in this article will be most helpful for developers who are in the following situations.</p><p><strong>How many of these cases apply to you?</strong></p><ul><li><em>Developer using non-Windows Operating System, such as </em><strong><em>Mac/Linux</em></strong></li><li><em>Developer who </em><strong><em>enjoys</em></strong><em> using an </em><strong><em>IDE</em></strong><em> like </em><a href="https://www.jetbrains.com/idea/"><em>IntelliJ IDEA</em></a><em> and </em><a href="https://www.jetbrains.com/pycharm/"><em>PyCharm</em></a><em>, and believes these software are very</em><strong><em> important for development productivity</em></strong></li><li><em>Developer who believes</em><strong><em> UI/UX</em></strong><em> in development tools is </em><strong><em>important</em></strong><em> and prefers </em><strong><em>high-quality visuals</em></strong></li><li><em>Developer using </em><strong><em>cloud databases</em></strong><em> such as the AWS(Amazon Web Service) MySQL and MariaDB</em></li><li><em>Startups and small/medium business developers whose main tasks include </em><strong><em>creating/modifying/ deleting tables </em></strong><em>and </em><strong><em>writing/executing SQL.</em></strong></li><li><em>Company with no DBA, where </em><strong><em>developers directly manage databases</em></strong></li></ul><p>From free/open source products such as <a href="https://www.mysql.com/products/workbench/">MySQL Workbench</a>, <a href="https://dbeaver.com/">DBeaver</a>, and <a href="https://www.sequelpro.com/">Sequel Pro</a> to commercial products such as <a href="https://www.jetbrains.com/datagrip/">DataGrip</a>, <a href="https://www.sqlprostudio.com/">SQLPro Studio</a>, <a href="https://tableplus.io/">TablePlus</a>, and <a href="https://www.dbvis.com/">DbVisualizer</a> that have been used over the past six years, 7 products that are believed to be used <strong>most</strong> by Mac developers around the world based on findings from Google Trends: below are my reviews of these 7 products. Since I mainly use MySQL/MariaDB, I used those databases to review these products.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*i98Bd7i5MBNViJ-UY99hIg.jpeg" /><figcaption>Google trend result: Mac OS SQL tools (source: Google Trends)</figcaption></figure><p><strong>(1) </strong><a href="https://www.jetbrains.com/datagrip/"><strong>DataGrip</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/952/1*xxKsaAuHvHHF3KUz0dMNbw.png" /><figcaption>(source: <a href="https://www.g2crowd.com/products/datagrip/reviews#reviews">https://www.g2crowd.com/products/datagrip/reviews#reviews</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★★</li><li>Processing Speed: ★★</li><li>Auto-Complete Function: ★★★★★</li><li>Software Stability: ★★★★</li><li>Multiple SQL Execution: <strong>Yes</strong></li><li>Auto Commit: <strong>Yes</strong></li><li>Import/Export: <em>Import</em>- CSV, TSV / <em>Export</em>- CSV, TSV, HTML, XML, JSON</li><li>Price: Business &amp; Organization- <strong>$199/</strong>1st<strong> </strong>year, Personal Use- <strong>$89</strong>/1st year</li><li>Supported DBMS: PostgreSQL, MySQL, Oracle, MS SQL Server, Azure, Amazon Redshift, SQLite, IBM DB2, H2, SYBASE, Exasol, Apache Derby, MariaDB, HyperSQL, ClickHouse, cassandra</li></ul><p><strong>(2) </strong><a href="https://dbeaver.com/"><strong>DBeaver</strong></a><strong> (Free version)</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/949/1*bhUVGwMiseQD8vQmTDj_KQ.png" /><figcaption>(source: <a href="https://www.g2crowd.com/products/dbeaver/reviews#reviews">https://www.g2crowd.com/products/dbeaver/reviews#reviews</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★★</li><li>Processing Speed: ★★</li><li>Auto-Complete Function: ★★★★</li><li>Software Stability: ★★★</li><li>Multiple SQL Execution: <strong>No</strong></li><li>Auto Commit: <strong>Yes</strong></li><li>Import/Export: <em>Import</em>- CSV / <em>Export</em>- CSV, HTML, XML,<strong> </strong>JSON, SQL</li><li>Price: <strong>Free</strong> (Enterprise Version with improved functions — $149)</li><li>Supported DBMS: MySQL, MariaDB, PostgreSQL, MS SQL Server, Oracle, IBM DB2, SAP MaxDB, Informix, SYBASE, Mimer SQL, InterSystem Cache, Firebird, Ingres, Yellowbrick, Linter, Virtuoso, CUBRID</li></ul><p><strong>(3) </strong><a href="https://www.dbvis.com/"><strong>DbVisualizer</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/958/1*bTJX9B7NEO2kWHgFG_4nWg.png" /><figcaption>(source: <a href="https://www.g2crowd.com/products/dbvisualizer/reviews">https://www.g2crowd.com/products/dbvisualizer/reviews</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★</li><li>Processing Speed: ★★</li><li>Auto-Complete Function: ★</li><li>Software Stability: ★★★</li><li>Multiple SQL Execution: <strong>Yes</strong></li><li>Auto Commit: <strong>Yes</strong></li><li>Import/Export: <em>Import</em>- CSV, <strong>XLS, XLSX </strong>/ <em>Export</em>- CSV, HTML, SQL, XML, <strong>XLS</strong>,<strong> XLSX</strong>, JSON</li><li>Price: New License $197 / User, Existing License Renewal $69 / User</li><li>Supported DBMS: IBM DB2, Exasol, Apache Derby, H2, INFORMIX, Mimer SQL, MySQL, NETEZZA, NUODB, ORACLE, PostgreSQL, Amazon Redshift, SQLite, MS SQL Server, SYBASE, VERTICA</li></ul><p><strong>(4) </strong><a href="https://tableplus.io/"><strong>TablePlus</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/949/1*Rx95GEpqePRZZE3ezYoARg.png" /><figcaption>(source: <a href="https://www.g2crowd.com/products/tableplus/reviews">https://www.g2crowd.com/products/tableplus/reviews</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★★★</li><li>Processing Speed: ★★★★★</li><li>Auto-Complete Function: ★★★</li><li>Software Stability: ★★★★</li><li>Multiple SQL Execution: <strong>Yes</strong></li><li>Auto Commit: <strong>No</strong></li><li>Import/Export: <em>Import</em>- CSV / <em>Export</em>- CSV, JSON, SQL</li><li>Price: $49 / User</li><li>Supported DBMS: PostgreSQL, MySQL, MariaDB, MS SQL Server, SQLite, Amazon Redshift, Oracle, Redis, cassandra, cockroach, VERTICA</li></ul><p><strong>(5) </strong><a href="https://teamsql.io/"><strong>TeamSQL</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/950/1*3eH4T_YfNJ3vP4BCw-pKEQ.png" /><figcaption>(source: <a href="https://www.g2crowd.com/products/teamsql/reviews">https://www.g2crowd.com/products/teamsql/reviews</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★★</li><li>Processing Speed: ★★★★</li><li>Auto-Complete Function: ★★</li><li>Software Stability: ★★★</li><li>Multiple SQL Execution: <strong>No</strong></li><li>Auto Commit: <strong>No</strong></li><li>Import/Export: <em>Import</em>- SQL / <em>Export</em>- CSV, JSON, Markdown</li><li>Price: <strong>Free</strong></li><li>Supported DBMS: MySQL, PostgreSQL, MS SQL Server, Amazon Redshift, Redis, Oracle, Google BigQuery</li></ul><p><strong>(6) </strong><a href="https://www.sequelpro.com/"><strong>Sequel Pro</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/946/1*-Z_c_doRXTbtoGn9NCbexg.png" /><figcaption>(source: <a href="https://www.g2crowd.com/products/sequel-pro/reviews">https://www.g2crowd.com/products/sequel-pro/reviews</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★★★</li><li>Processing Speed: ★★★★★</li><li>Auto-Complete Function: ★</li><li>Software Stability: ★★★</li><li>Multiple SQL Execution: <strong>No</strong></li><li>Auto Commit: <strong>No</strong></li><li>Import/Export: <em>Import</em>-CSV / <em>Export</em>- CSV, JSON</li><li>Price: <strong>Free</strong></li><li>Supported DBMS: MySQL, MariaDB</li></ul><p><strong>(7)</strong><a href="https://www.mysql.com/products/workbench/"><strong>MySQL Workbench</strong></a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/995/1*Ydmmm-3kPdwxO41t13QKrQ.png" /><figcaption>(source: <a href="https://alternativeto.net/software/mysql-workbench/reviews/">https://alternativeto.net/software/mysql-workbench/reviews/</a>)</figcaption></figure><ul><li>Intuitive UI/UX: ★★★</li><li>Processing Speed: ★★</li><li>Auto-Complete Function: ★★</li><li>Software Stability: ★★★</li><li>Multiple SQL Execution: <strong>Yes</strong></li><li>Auto Commit: Yes</li><li>Import/Export: <em>Import</em>-CSV, JSON / <em>Export</em>- CSV, JSON</li><li>Price: <strong>Free</strong></li><li>Supported DBMS: MySQL, MariaDB</li></ul><h4>To wrap things up:</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*S8e8ND0RZU7ip98sI7g1-A.jpeg" /></figure><p>Since this is a very personal standard and assessment, please take into account that these reviews are just my opinion when choosing the perfect IDE for your needs. (If the above information is inaccurate or should be added to, please let me know!)</p><p>This review started with my complaints and questions about database IDE on Macs, and went through the process of exploring various DB Tools.</p><p>When I worked as a developer for Kakao, I always blamed my tools for not doing what I wanted them to do. Then one day, I made up my mind to develop my own tool. That’s how I became the founder and CEO of a startup company called <strong>CHEQUER</strong>. Now my company is upgrading, expanding, and bettering <strong>SQLGate</strong>, a 16-year-old IDE database tool. (If you’re curious, head over to <a href="http://www.chequer.io/"><em>CHEQUER</em></a><em> and </em><a href="https://www.sqlgate.com/"><em>SQLGate</em></a><em> </em>to find out more.)</p><p>And at the end of last year, the team of talented software engineers at CHEQUER began developing QueryPie using the accumulated know-how and technology acquired during the years of developing SQLGate.</p><p>QueryPie is a cross-platform database IDE which works on Mac OS, Windows, and Linux. We plan to better the experience of database tools in Mac OS with QueryPie using built-in core functionality and intuitive UI/UX. Our goal is to enable all developers to work faster and more conveniently with the best database technology in the world.</p><p>QueryPie is scheduled to launch within the first quarter of 2019.</p><p>Creating a Cross-Platform application is rare in the software industry and requires a lot of technical consideration and effort, so I want to document this development journey under the title of ‘<strong>QueryPie Development</strong>’. I want to help those who are preparing to develop new applications by sharing what I learned through trial and error, and I want to keep learning and growing.</p><p>In my next post, you will learn about the key features and requirements defined by QueryPie’s target customer analysis, and what technologies have been used to design the software.</p><p>See you soon!</p><p>- Brant Hwang, CEO of CHEQUER</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e05f11b9ae58" width="1" height="1"><hr><p><a href="https://medium.com/querypie/searching-for-my-own-database-ide-e05f11b9ae58">Searching for my own Database IDE</a> was originally published in <a href="https://medium.com/querypie">QueryPie</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[스타트업 CEO와 경영진]]></title>
            <link>https://medium.com/chequer/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85-ceo%EC%99%80-%EA%B2%BD%EC%98%81%EC%A7%84-f91d78c83f4f?source=rss-54ad73b6c57e------2</link>
            <guid isPermaLink="false">https://medium.com/p/f91d78c83f4f</guid>
            <category><![CDATA[startup-ceo]]></category>
            <category><![CDATA[startup]]></category>
            <category><![CDATA[chequer]]></category>
            <dc:creator><![CDATA[Brant Hwang]]></dc:creator>
            <pubDate>Sun, 23 Dec 2018 17:10:39 GMT</pubDate>
            <atom:updated>2018-12-26T17:42:06.607Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/520/0*FW5YxO9u9B6YCACG.jpg" /><figcaption>P&amp;G A.G 래플리 CEO 겸 회장</figcaption></figure><p>P&amp;G의 전성시대를 이끈 래플리 CEO 겸 회장의</p><blockquote><a href="http://m.hbrkorea.com/magazine/article/view/7_1/page/50/article_no/24/mv/last?fbclid=IwAR0GD1Dx7mtUHmYMx0a33Hfzv-kHUnzo2fHLTghJkpbNhL5MpnJKjplEhpk">오직 CEO만이 할 수 있는 일</a></blockquote><p>을 읽고 스타트업의 CEO, 경영진에 대한 생각을 정리해 본다.</p><h3>1. Startup CEO</h3><p>대부분의 초기 스타트업 CEO는 소위 “잡부”로 오만가지 일을 처리해야 한다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/896/1*orDF60GiYopl5n2dK4csKg.png" /><figcaption>&lt;초기 스타트업의 CEO 역할&gt;</figcaption></figure><p>모든 분야를 다 잘할 수는 없다. 하지만 평균이상으로 이뤄내지 못하면 그저 그런 회사로 전락할 거라 생각한다. 어느 하나 Trade-Off 하기가 쉽지 않은 것이 대부분이고 우리가 기억하는 위대한 기업과 성공한 스타트업은 6가지 이외에도 수만 가지의 일을 Well-done 하므로 존재하며 기억된다.</p><p>그렇다고 하더라도, CEO도 사람이고 수년~수십 년간 자신의 전문분야에서 일한 ‘회사원’ 이었거나 막 창업에 뛰어든 ‘학생’ 이었을 텐데, 우선순위를 어떻게 매기면 좋을까?</p><p>우선순위 이야기 전에, 사실 더 중요한 이야기를 빠트리고 왔다. 일반적으로 스타트업은 말 그대로 ‘막’ 생겨난 회사를 이야기하고, 어떤 문제를 새로운 시각으로 바라보고 해결하면서 빠르게 성장하는 회사를 지칭한다. 결국 스타트업 또한 ‘<strong>회사</strong>’이고 ‘<strong>법인</strong>’이다.</p><p>내가 생각하는 법인의 핵심 3가지는 ‘<strong>사람</strong>’, ‘<strong>자본</strong>’, ‘<strong>비전</strong>’ 이다. 이 세 가지 중 ‘자본’은 투자나 대출을 통해서 만들수 있고, ‘비전’ 또한 해결하고자 하는 문제에 따라 다양하게 바뀔 수 있지만 ‘사람’은 법인 설립 초기에 구성이 잘 안 되면 이후에도 지속적으로 문제가 생긴다. 수많은 스타트업 관련 뉴스나 인터뷰 기사에 괜히 ‘<strong>팀</strong>’이 중요하다고 하는게 아니다.</p><p>하지만, 어떻게 팀을 구성하면 좋을지에 대한 구체적인 방법이나 경험담은 찾기 쉽지 않아 내 나름대로 정리해봤다.</p><ol><li>차가 날아다니는 상상이 현실로 다가오는 현대사회에 스타트업을 하겠다는 건 IT 기술력 없이는 불가능하다고 판단한다. 결국, 어떤 산업영역에서 어떤 문제를 풀고자 하더라도 IT 인력은 모든 회사에 핵심적이다. 자신 스스로 기술력을 보유하고 있던지, 혹은 충분히 검증된 CTO를 공동창업자로 영입해라.</li><li>될 수 있으면 오랜 신뢰관계가 있고, 함께 일해본 경험이 많은 사람과 하는 것이 좋다. 스타트업은 매일이 불안전하고 불투명하다. 스트레스를 잘 이겨낼 수 있고 충분한 역량을 가지고 있는 사람이 중요하다.</li><li>회사를 만들기 전에 에 R&amp;R과 지분율 합의를 명확하게 해라. 가까운 사람과 함께 창업할 경우 가장 큰 문제가 되는 부분이 바로 ‘지분’이 아닐까 싶다. “좋은 게 좋은 거지”하면서 대충 넘어가고, 나이가 젤 많으니까, 나이가 젤 어리니까 CEO를 한다는 식은 출발부터 스타트업 전체 영혼을 50%쯤 갉아먹고 시작하는 방법이다. 우리 회사는 공동창업자 셋이서 3장 분량의 워드 파일을 서로 적으며 각자의 역량, 역할, 경험을 이야기하고 자신의 지분율을 써내는 방식으로 지분율을 정했다. 이 과정에서 치열하게 싸우고, 의견을 나누며 이야기해라. 이 과정에서 무너지면 함께 스타트업을 할 수 없는 사람이다.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/493/1*JjDu3rowMvRjvtUZUiq17Q.png" /><figcaption>체커의 창업자들이 작성한 주식배당 요청서</figcaption></figure><p>결국, 스타트업은 ‘팀’ , 즉 사람이 없이는 존재할 수 없고, 이 사람들이 결국 창업자들이며 초기의 CEO와 경영진이 될 사람이다.</p><p>다시 본론으로 돌아와서, 초기 스타트업에서 CEO가 해야 할 가장 중요한 역할은 무엇일까? 아마도 스타트업 대표마다 대답이 가지각색이라 생각되지만 난 회사의 정체성과 문화를 만드는 일이 가장 중요하다고 생각한다.</p><p>회사는 개인이 아니다. 법에 따라 생성된 새로운 인격체인 ‘법인’이다. 따라서 이 인격체에 대한 정체성과 구체적인 것들에 대해 정의해야 한다. 인간은 자라면서 인격을 형성하고 정체성을 찾아가지만, 법인은 그럴만한 능력이 있는 사람이 아니다. 따라서 초기 창업자, 특히 <strong>CEO가 법인에 대한 정체성과 문화에 대해 구체적으로 정립하는게 중요</strong>하다고 생각했다. 그래서 나는 체커를 만들기 전에 ‘<a href="https://medium.com/chequer/how-chequer-works-2-company-guide-48bb5bb64cab">Company Guide Book</a>’ 이라는 20장의 초안을 만들었다. 이 문서에는 ‘체커를 왜 설립했는지’, ‘우리가 하고자 하는 일은 무엇인지’, 그리고 ‘우리는 어떻게 일하고 보상받을 것’인지에 대한 대략적인 내용을 작성했고, 이를 토대로 체커에 대한 모든 정보를 담은 <a href="http://handbook.chequer.io">CHEQUER Handbook</a>을 완성했다. Handbook은 지금도 업데이트되고 있는 체커의 살아있는 인격이자 정체성이며 구성원 모두가 함께 만들어나가는 체커의 핵심 가치이다.</p><p>두 번째는 채용이 아닐까 싶다. 개발/기획/마케팅/디자인 등 회사에 필요한 핵심인력을 외부로부터 영입할 수 있는 능력과 네트워크, 그리고 공개채용을 진행할 때는 진정성 있는 채용 공고와 채용 프로세스를 만들고 영입 이후에는 성과/보상 기준과 연봉테이블 관리, 스톡옵션 확보 등을 잘 해내야 한다. 채용에 대해서는 할 말이 참 많은데, 기회가 되면 스타트업의 채용에 대해 한 번쯤 정리해봐야겠다.</p><p>마지막으로는 구성원들에게 비전을 잘 전달하여 방향을 제시하고, 투자자에게 비전을 셀링해서 회사가 필요한 충분한 자금을 만들어오는 역량이라 생각된다.</p><p>이렇게 1~2년을 잘 견뎠다면 혼자서 어설프게 하던 일을 더 전문적으로 잘 할 수 있는 사람들에게 주고 스스로 변화해야 한다. 한번 해봤다고, 어설픈 경험과 지식으로 전문분야가 아닌 “잡무”를 계속 가지고 있으면 CEO의 핵심 역량을 더는 키울 수 없다. 어느 정도 조직과 자원이 구성되었다면 래플리가 이야기하는 4가지에 조금 더 집중해야 될 때라 생각된다.</p><p>래플리는 <strong>“CEO는 외부 세계에 대한 자신만의 생각을 실제 업무에 접목할 수 있는 사람” </strong>이고, <strong>외부 세계와 내부 조직을 잇는 연결고리 역할</strong>을 하며, <strong>핵심적인 4가지 임무</strong>가 있다고 했다.</p><ol><li><strong>의미있는 외부 세계를 정의하라</strong>. 모든 외부 이해관게자 중 누가 가장 중요한 존재인가? 어떤 결과가 가장 의미 있나?</li><li><strong>어떤 비즈니스를 할지 결정해라.</strong> 승리를 원한다면 어떤 사업을 해야 하는가? 어떤 사업에 뛰어들어서는 안 될까? 이 질문에 답하기 위해서는 철저한 평가와 토론이 필요하다. 하지만 이 질문과 관련된 어려운 선택을 할 수 있는 사람은 회사 전체를 아우르는 넓은 시각을 가진 CEO밖에 없다.</li><li><strong>현재와 미래의 균형을 맞춰라.</strong> 단기 목표와 장기 목표 사이에 적절히 균형을 잡는 법을 배우려면 단순히 지식만으로는 충분치 않고 다양한 경험과 판단력이 필요하다. 제대로 균형을 맞추려면 먼저 현실적인 성장 목표를 세워야 한다.</li><li><strong>가치관과 기준을 정하라.</strong> 기업이 갖고 있는 가치관은 그 기업의 정체성을 나타내는 것으로, 행동 지침이 되기도 한다. 시장에서 승리하고 싶다면 의미있는 외부 세계와 밀접한 관련이 있고 현자와 미래에 모두 도움이 되는 가치관을 갖고 있어야 한다. 가치관과 기준을 정립하고 싶다면 ‘가장 중요한 고객들의 마음을 사로잡고 있는가?’, ‘가장 막강한 경쟁상대와의 대결에서 승리하고 있는가?’에 대해 답해야 한다.</li></ol><p>래플리가 이야기한 CEO의 역할과 임무를 읽으며 CEO는 카멜레온 같은 사람이 잘 해낼 수 있다고 생각했다. 내부에서는 전체적인 업무 진행 상황을 챙기고, 외부에서는 우리 회사와 가장 중요하다고 생각되는 사람, 일을 찾아다니며 내/외부를 끊임없이 연결하기 위해서는 여러 가지 모습이 필요하기 때문이다.</p><p>세상에 완벽한 CEO는 없다고 생각한다. 하지만 3명의 초기 스타트업 CEO와 30명, 300명 스타트업의 CEO는 해야할일과 역량의 차이가 너무 크다. 끊임없이 공부하고 변화가 필요한 직업이다.</p><h3>2. 경영진</h3><p>스타트업 초기에는 공동창업자들이 모두 주주이자 경영진이다. 그들이 회사를 세웠고, 문제를 가장 잘 알고 있으며 초기에 필요한 대부분의 일을 함께 진행해나가기 때문이다. 하지만 조직이 커지고 성장함에 따라 ‘창업자 = 경영진’ 이라는 공식은 유효하지 않다고 생각한다. 주주로서는 여전히 유효할 수 있지만 성장한 회사에 맞는 경영진의 자격을 갖추지 못한다면 스스로 자신의 자리를 찾아서 돌아가야 한다.</p><p>경영진은 법인 경영에 핵심적인 의사결정자이며 CEO와 함께 비전, 미션을 제시하고 법인의 성장을 책임지는 사람이다. 또한, 투자, 채용, 입금협상 등의 의사결정을 함께 진행하는 핵심적인 사람이다. 공동창업자 중 이러한 일을 잘 하는 사람이라면 상관없다. 하지만 주어진 자기 일이 더 즐겁고 회사 성장에 기여하는 방법이 다르다면 의견을 존중해주고 주주로서의 대우와 존중을 해주는 것 또한 CEO의 중요한 역할 중 하나라 생각한다.</p><p>회사가 성장함에 따라 다양한 사람이 합류하게 된다. 이 과정에서 스타트업은 다양한 성장통을 겪게되는데 그 중에서 가장 큰 문제점 중 하나는 ‘나는 뼈를 깎는 고통과 노력을 하는데 새롭게 합류한 사람은 왜 그렇지 않지?’ 라는 착각과 오해다. 스타트업 초기, 창업자들은 주당 7~80시간 이상을 일하며 지금의 회사를 일궜다. 하지만 회사가 지속적으로 기존 방식처럼 유지될 수 없으며 성장하는 과정에 따라 변화가 필요하다. 그 과정에서 가장 큰 문제가 되는 사람은 ‘새로운 사람’이 아니라 CEO와 경영진이다. 조직이 작을때는 비전, 미션, KPI 등이 긴밀하게 공유되고 서로가 모든 생각을 공유하기 쉬웠지만 조직이 커짐에 따라 구체적이고 명확한 방향성과 더불어 조직의 모든 구성원들이 지속적으로 성장하고 회사의 목표를 맞출수 있도록 경영진의 전략과 행동이 매우 중요해진다. 난 이 과정에서 대부분의 스타트업이 무너진다고 생각한다. 조직이 커짐에 따라 CEO와 경영진도 성장해야하고, 그에 맞는 비전과 목표를 제시할 수 있어야 한다. 따라서 지속적 성장을 위해서는 조직의 성장 속도보다 더 빠르게 CEO와 경영진이 성장하는것이 매우 중요하다.</p><p>또한 내가 봤던 몇몇 스타트업은 성장은 지속해서 이뤄졌지만, 공동창업자 = 경영진이라는 공식을 적절한 시점에 정리하지 못해서 여러 가지 인사문제를 낳고 기업가치가 하락하는 경우가 있었다. 따라서 성장하는 회사에 맞는 경영진 구성과 경영진의 행동지침을 잘 규정할 필요가 있다고 생각한다. 그래서 생각나는대로 체커의 경영진 행동 지침을 정리해봤다.</p><h4>- 체커 경영진 행동 지침 -</h4><ol><li>회사와 개인이 분리되지 못한 말은 절대 하지 않는다. ( 회사의 물건을 집에 가져가거나, 내가 곧 회사라는 의미의 발언 )</li><li>경영진이고 나이가 더 많다는 이유로 상대방의 동의 없이 반말하는 행동은 치명적이다.</li><li>특정 크루가 진행 중인 일에 대해 팀장을 거치지 않고 직접적으로 관여하거나 이야기 하는 행동은 팀 전체의 퍼포먼스를 떨어뜨리고 일의 방향성을 모호하게 만들수 있다.</li><li>임원, 직원이라는 단어를 쓰지 않는다. 체커의 모든 구성원은 ‘크루’로 동등하다. 경영진은 더 많은 책임과 의사결정 권한을 가진 사람일 뿐이다.</li><li>외모를 평가하거나 성적인 수치발언을 하지 않는다. ( 이쁜데? 이뻐졌는데? 치마 입었네? 등 )</li><li>경영진 간의 친분 과시를 통해 다른 크루에게 이질감을 느끼게 하는 발언을 하지 않는다.</li><li>사내에서 경영진 간의 가급적 존칭 사용한다. ( 사석에서도 다른 동료가 있을 경우에는 반말 하지 않는다 )</li><li>경영진 회의에서 언급된 모든 내용은 기본적으로 기밀사항이며, 외부에 절대 발설하지 않는다. ( 팀장, 가족, 가장 가까운 지인도 예외 없음 )</li><li>정확하지 않은 사실이나, 의사 결정되지 않은 내용에 대해서 이야기하지 않는다.</li><li>경영진은 회사의 얼굴이자 대변인이다. 스스로는 느끼지 못하지만 경영진의 표정과 말투가 구성원에게 엄청난 영향을 끼친다. 긍정적이든, 부정적이든 모두.</li></ol><p>많은 회사에서 빈번하게 발생하는 문제와, 체커에서 절대 벌어지지 말아야 할 일을 행동 지침을 경영진 행동 지침으로 삼았고, 이 또한 회사가 성장함에 따라 지속해서 업데이트 되어야 할 필요가 있을 것 같다.</p><p>래플리의 글을 읽으며 기업의 모든 경쟁력과 방향은 CEO로부터 출발하고, 경영진을 통해 완성된다고 생각한다. 결국, 스타트업의 CEO와 경영진은 회사 규모가 작을 뿐 삼성전자, LG 전자 같은 회사가 갖추고 있는 모든 시스템을 작게나마 구성할 수 있어야 하고 이 시스템을 얼마나 빠르고 차별화 시킬 수 있는지가 스타트업의 존립 여부가 아닐까?</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=f91d78c83f4f" width="1" height="1"><hr><p><a href="https://medium.com/chequer/%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85-ceo%EC%99%80-%EA%B2%BD%EC%98%81%EC%A7%84-f91d78c83f4f">스타트업 CEO와 경영진</a> was originally published in <a href="https://medium.com/chequer">CHEQUER</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
    </channel>
</rss>