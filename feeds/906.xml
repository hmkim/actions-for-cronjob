<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>조영규의 블로그</title>
<link>http://dev.youngkyu.kr/</link>
<description>늘 덕분에 삽니다.</description>
<language>ko</language>
<pubDate>Mon, 13 May 2019 05:18:04 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>youngkyu.cho</managingEditor>
<image>
<title>조영규의 블로그</title>
<url>http://cfile27.uf.tistory.com/image/270F5B485310D311269BD9</url>
<link>http://dev.youngkyu.kr</link>
<description>늘 덕분에 삽니다.</description>
</image>
<item>
<title>Android Support Library란?</title>
<link>http://dev.youngkyu.kr/39</link>
<description>&lt;en-note lang=&quot;v2&quot; style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;&lt;del style=&quot;position:relative;display:block;z-index:10;&quot;&gt;&lt;a style=&quot;position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;&quot; href=&quot;http://marxi.co/#/?provider=evernote_int&amp;amp;guid=50e200f9-db08-4fde-824d-0e472384f87d&amp;amp;notebook=youngkyu.cho&quot;&gt;Edit&lt;/a&gt;&lt;/del&gt;&lt;div style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;
                        &lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
                    &lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; color: rgba(0,0,0,0.8); line-height: 1.6;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;티스토리&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;android&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;안드로이드&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;support library&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;서포트 라이브러리&lt;/code&gt; &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;Android Support Library란?&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 Support 라이브러리는 프레임워크가 제공하지 않는 기능들을 제공한다. 본 라이브러리는 새 기능의 하휘 호환을 제공하며, 유용한 UI 엘리먼트들과 앱을 위한 다양한 유틸리티를 제공한다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;개괄&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;한 기능은 많은 경우 다른 많은 앱 개발자들에게도 중요한 경우가 많은데, 안드로이드 프레임워크는 이런 것들을 제대로 포함하고 있지 않다. 예를들어 자연스러운 안드로이드 버전별 대응 같은 것들이 바로 그것이다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이를 위해 안드로이드 SDK는 다양한 라이브러리들을 포함하고 있다. 그것이 바로 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Android Support Library&lt;/code&gt;다. 앱 개발자들은 해당 기능들이 필요할 때 이런 라이브러리를 추가할 수 있다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Support 라이브러리&lt;/code&gt;가 제공하는 특징적인 기능이다.&lt;/p&gt;

&lt;ul style=&quot;margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;하위호환성&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;UI 엘리먼트의 구현에서 안드로이드가 추천하는 레이아웃 패턴 사용&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;다른 form factor들에 대한 지원&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;다양한 유틸리티 함수&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;하위 호환성이란?&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Support 라이브러리는 옛날 버전의 안드로이드 플랫폼을 최신 버전처럼 잘 지원할 수 있게 한다. 예를들어 앱이 5.0 버전(API level 21)보다 낮은 API 레벨에서 돌 때, 원래는 material 디자인이 아니지만 만약 앱이 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt; 라이브러리의 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;appcompat library&lt;/code&gt;를 쓴다면, 앱은 API 레벨 21이 제공하는 많은 기능들을 쓸 수 있을 뿐만 아니라, material 디자인으로 표현될 수 있다. 그 결과 앱은 좀 더 일관적인 경험을 플랫폼 버전을 뛰어넘으며 제공할 수 있다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt;라이브러리는 최대한 프레임워크에 의존해 동작하려 노력한다. 그러나 상황이 여의치않은 낮은 API 레벨에서는 스스로 동작하여 해당 동작을 수행한다. 일반적으로 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;...Compat&lt;/code&gt;으로 끝나는 친구들이 이런 역할을 하는 친구들이다. 예를들어 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;ActivityCompat&lt;/code&gt;같은.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;어떤 경우에는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt;라이브러리가 어떠한 프레임워크 API 도움 없이 스스로 동작하는 경우도 있다. 이런 메소드는 모든 지원하는 플렛폼에서 일관되게 작동한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;어떤 경우든, 앱은 런타임 때 시스템의 버전을 체크할 필요가 없다. 앱은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt;라이브러리에 의존하면 되며, 알아서 시스템 상태를 체크해 동작해 줄 것이다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;아래 그림을 보면, 안드로이드 4.4에서 동작하는 화면이다. 원래 안드로이드 4.4는 material 디자인을 지원하지 않지만, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt; library UI 엘리먼트가 만들어 준다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/25396843574F1B2D06&quot; filemime=&quot;image/png&quot; filename=&quot;./1464798952063.png&quot; height=&quot;521&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;일반적인 레이아웃 패턴의 지원&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt; 라이브러리는 안드로이드 프레임워크가 지원하지 않는 사용자 인터페이스를 지원한다. 예를들면 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;DrawerLayout&lt;/code&gt;같은 것이 그것이다. 이러한 클레스들은 안드로이드 디자인 practice들에서 권장되는 것을 따른다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이러한 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt;라이브러리가 지원하는 것들의 사용으로 인해 바퀴를 또 발명하는 일 따위를 안해도 된다! 까다로운 UI가 필요하다면, 당신은 이미 있는, 사용자가 친숙한 UI 인터페이스를 제공하는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt; 라이브러리의 코드를 사용해 제작하면 된다. 예를 들어 많은 앱들이 엄청난 리스트를 빠르고 효과적으로 엘리먼트를 재사용하며 보여주길 원하는데, 이를 위해 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt;라이브러리는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;RecyclerView&lt;/code&gt;를 제공한다!&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;다른 Form Factor들에 대한 지원&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 SDK는 TV나 웨어러블 같은 다른 form factor도 지원한다. 앱은 컨텐츠를 외부 스크린에 제공한다거나, 혹은 스피커에 제공한다거나, 혹은 다른 디바이스에 전송하는 등의 기능등을 적절한 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt; 라이브러리를 이용해 넓은 범위의 안드로이드 시스템을 커버할 수 있다. &lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;유용한 유틸리티의 제공&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt;라이브러리는 하위 호환성을 가진 유틸리티들을 제공한다. 앱들은 적절한 사용자 경험을 제공하는 이러한 유틸리티를 모든 안드로이드 시스템에서 사용할 수 있다. 예를들어 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;support&lt;/code&gt; 라이브러리는 퍼미션 메소드들은 어떤 플랫폼 버전인지에 맞춰 적절하게 동작한다. 만약 플랫폼이 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Runtime Permission Model&lt;/code&gt;을 지원한다면, 이러한 메소드들은 적절한 퍼미션을 유저에게 요청할 것이며, 그게 아닌 경우, 메소드는 적절한 퍼미션을 install time에 체크해 grant할 것이다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;center style=&quot;display:none&quot;&gt;@%5B%uD2F0%uC2A4%uD1A0%uB9AC%2Candroid%2C%uC548%uB4DC%uB85C%uC774%uB4DC%2Csupport%20library%2C%uC11C%uD3EC%uD2B8%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%5D%0A%0A%23%20Android%20Support%20Library%uB780%3F%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20Support%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uD504%uB808%uC784%uC6CC%uD06C%uAC00%20%uC81C%uACF5%uD558%uC9C0%20%uC54A%uB294%20%uAE30%uB2A5%uB4E4%uC744%20%uC81C%uACF5%uD55C%uB2E4.%20%uBCF8%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uC0C8%20%uAE30%uB2A5%uC758%20%uD558%uD718%20%uD638%uD658%uC744%20%uC81C%uACF5%uD558%uBA70%2C%20%uC720%uC6A9%uD55C%20UI%20%uC5D8%uB9AC%uBA3C%uD2B8%uB4E4%uACFC%20%uC571%uC744%20%uC704%uD55C%20%uB2E4%uC591%uD55C%20%uC720%uD2F8%uB9AC%uD2F0%uB97C%20%uC81C%uACF5%uD55C%uB2E4.%0A%0A%23%20%uAC1C%uAD04%0A%0A%uD55C%20%uAE30%uB2A5%uC740%20%uB9CE%uC740%20%uACBD%uC6B0%20%uB2E4%uB978%20%uB9CE%uC740%20%uC571%20%uAC1C%uBC1C%uC790%uB4E4%uC5D0%uAC8C%uB3C4%20%uC911%uC694%uD55C%20%uACBD%uC6B0%uAC00%20%uB9CE%uC740%uB370%2C%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD504%uB808%uC784%uC6CC%uD06C%uB294%20%uC774%uB7F0%20%uAC83%uB4E4%uC744%20%uC81C%uB300%uB85C%20%uD3EC%uD568%uD558%uACE0%20%uC788%uC9C0%20%uC54A%uB2E4.%20%uC608%uB97C%uB4E4%uC5B4%20%uC790%uC5F0%uC2A4%uB7EC%uC6B4%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uBC84%uC804%uBCC4%20%uB300%uC751%20%uAC19%uC740%20%uAC83%uB4E4%uC774%20%uBC14%uB85C%20%uADF8%uAC83%uC774%uB2E4.%0A%0A%uC774%uB97C%20%uC704%uD574%20%uC548%uB4DC%uB85C%uC774%uB4DC%20SDK%uB294%20%uB2E4%uC591%uD55C%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB4E4%uC744%20%uD3EC%uD568%uD558%uACE0%20%uC788%uB2E4.%20%uADF8%uAC83%uC774%20%uBC14%uB85C%20%60Android%20Support%20Library%60%uB2E4.%20%uC571%20%uAC1C%uBC1C%uC790%uB4E4%uC740%20%uD574%uB2F9%20%uAE30%uB2A5%uB4E4%uC774%20%uD544%uC694%uD560%20%uB54C%20%uC774%uB7F0%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB97C%20%uCD94%uAC00%uD560%20%uC218%20%uC788%uB2E4.%0A%0A%60Support%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%60%uAC00%20%uC81C%uACF5%uD558%uB294%20%uD2B9%uC9D5%uC801%uC778%20%uAE30%uB2A5%uC774%uB2E4.%0A%0A-%20%uD558%uC704%uD638%uD658%uC131%0A-%20UI%20%uC5D8%uB9AC%uBA3C%uD2B8%uC758%20%uAD6C%uD604%uC5D0%uC11C%20%uC548%uB4DC%uB85C%uC774%uB4DC%uAC00%20%uCD94%uCC9C%uD558%uB294%20%uB808%uC774%uC544%uC6C3%20%uD328%uD134%20%uC0AC%uC6A9%0A-%20%uB2E4%uB978%20form%20factor%uB4E4%uC5D0%20%uB300%uD55C%20%uC9C0%uC6D0%0A-%20%uB2E4%uC591%uD55C%20%uC720%uD2F8%uB9AC%uD2F0%20%uD568%uC218%0A%0A%23%20%uD558%uC704%20%uD638%uD658%uC131%uC774%uB780%3F%0A%0ASupport%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uC61B%uB0A0%20%uBC84%uC804%uC758%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD50C%uB7AB%uD3FC%uC744%20%uCD5C%uC2E0%20%uBC84%uC804%uCC98%uB7FC%20%uC798%20%uC9C0%uC6D0%uD560%20%uC218%20%uC788%uAC8C%20%uD55C%uB2E4.%20%uC608%uB97C%uB4E4%uC5B4%20%uC571%uC774%205.0%20%uBC84%uC804%28API%20level%2021%29%uBCF4%uB2E4%20%uB0AE%uC740%20API%20%uB808%uBCA8%uC5D0%uC11C%20%uB3CC%20%uB54C%2C%20%uC6D0%uB798%uB294%20material%20%uB514%uC790%uC778%uC774%20%uC544%uB2C8%uC9C0%uB9CC%20%uB9CC%uC57D%20%uC571%uC774%20%60support%60%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uC758%20%60appcompat%20library%60%uB97C%20%uC4F4%uB2E4%uBA74%2C%20%uC571%uC740%20API%20%uB808%uBCA8%2021%uC774%20%uC81C%uACF5%uD558%uB294%20%uB9CE%uC740%20%uAE30%uB2A5%uB4E4%uC744%20%uC4F8%20%uC218%20%uC788%uC744%20%uBFD0%uB9CC%20%uC544%uB2C8%uB77C%2C%20material%20%uB514%uC790%uC778%uC73C%uB85C%20%uD45C%uD604%uB420%20%uC218%20%uC788%uB2E4.%20%uADF8%20%uACB0%uACFC%20%uC571%uC740%20%uC880%20%uB354%20%uC77C%uAD00%uC801%uC778%20%uACBD%uD5D8%uC744%20%uD50C%uB7AB%uD3FC%20%uBC84%uC804%uC744%20%uB6F0%uC5B4%uB118%uC73C%uBA70%20%uC81C%uACF5%uD560%20%uC218%20%uC788%uB2E4.%0A%0A%60support%60%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uCD5C%uB300%uD55C%20%uD504%uB808%uC784%uC6CC%uD06C%uC5D0%20%uC758%uC874%uD574%20%uB3D9%uC791%uD558%uB824%20%uB178%uB825%uD55C%uB2E4.%20%uADF8%uB7EC%uB098%20%uC0C1%uD669%uC774%20%uC5EC%uC758%uCE58%uC54A%uC740%20%uB0AE%uC740%20API%20%uB808%uBCA8%uC5D0%uC11C%uB294%20%uC2A4%uC2A4%uB85C%20%uB3D9%uC791%uD558%uC5EC%20%uD574%uB2F9%20%uB3D9%uC791%uC744%20%uC218%uD589%uD55C%uB2E4.%20%uC77C%uBC18%uC801%uC73C%uB85C%20%60...Compat%60%uC73C%uB85C%20%uB05D%uB098%uB294%20%uCE5C%uAD6C%uB4E4%uC774%20%uC774%uB7F0%20%uC5ED%uD560%uC744%20%uD558%uB294%20%uCE5C%uAD6C%uB4E4%uC774%uB2E4.%20%uC608%uB97C%uB4E4%uC5B4%20%60ActivityCompat%60%uAC19%uC740.%0A%0A%uC5B4%uB5A4%20%uACBD%uC6B0%uC5D0%uB294%20%60support%60%uB77C%uC774%uBE0C%uB7EC%uB9AC%uAC00%20%uC5B4%uB5A0%uD55C%20%uD504%uB808%uC784%uC6CC%uD06C%20API%20%uB3C4%uC6C0%20%uC5C6%uC774%20%uC2A4%uC2A4%uB85C%20%uB3D9%uC791%uD558%uB294%20%uACBD%uC6B0%uB3C4%20%uC788%uB2E4.%20%uC774%uB7F0%20%uBA54%uC18C%uB4DC%uB294%20%uBAA8%uB4E0%20%uC9C0%uC6D0%uD558%uB294%20%uD50C%uB81B%uD3FC%uC5D0%uC11C%20%uC77C%uAD00%uB418%uAC8C%20%uC791%uB3D9%uD55C%uB2E4.%0A%0A%uC5B4%uB5A4%20%uACBD%uC6B0%uB4E0%2C%20%uC571%uC740%20%uB7F0%uD0C0%uC784%20%uB54C%20%uC2DC%uC2A4%uD15C%uC758%20%uBC84%uC804%uC744%20%uCCB4%uD06C%uD560%20%uD544%uC694%uAC00%20%uC5C6%uB2E4.%20%uC571%uC740%20%60support%60%uB77C%uC774%uBE0C%uB7EC%uB9AC%uC5D0%20%uC758%uC874%uD558%uBA74%20%uB418%uBA70%2C%20%uC54C%uC544%uC11C%20%uC2DC%uC2A4%uD15C%20%uC0C1%uD0DC%uB97C%20%uCCB4%uD06C%uD574%20%uB3D9%uC791%uD574%20%uC904%20%uAC83%uC774%uB2E4.%0A%0A%uC544%uB798%20%uADF8%uB9BC%uC744%20%uBCF4%uBA74%2C%20%uC548%uB4DC%uB85C%uC774%uB4DC%204.4%uC5D0%uC11C%20%uB3D9%uC791%uD558%uB294%20%uD654%uBA74%uC774%uB2E4.%20%uC6D0%uB798%20%uC548%uB4DC%uB85C%uC774%uB4DC%204.4%uB294%20material%20%uB514%uC790%uC778%uC744%20%uC9C0%uC6D0%uD558%uC9C0%20%uC54A%uC9C0%uB9CC%2C%20%60support%20%60%20library%20UI%20%uC5D8%uB9AC%uBA3C%uD2B8%uAC00%20%uB9CC%uB4E4%uC5B4%20%uC900%uB2E4.%0A%0A%21%5BAlt%20text%5D%28./1464798952063.png%29%0A%0A%0A%23%20%uC77C%uBC18%uC801%uC778%20%uB808%uC774%uC544%uC6C3%20%uD328%uD134%uC758%20%uC9C0%uC6D0%0A%0A%60support%60%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD504%uB808%uC784%uC6CC%uD06C%uAC00%20%uC9C0%uC6D0%uD558%uC9C0%20%uC54A%uB294%20%uC0AC%uC6A9%uC790%20%uC778%uD130%uD398%uC774%uC2A4%uB97C%20%uC9C0%uC6D0%uD55C%uB2E4.%20%uC608%uB97C%uB4E4%uBA74%20%60DrawerLayout%60%uAC19%uC740%20%uAC83%uC774%20%uADF8%uAC83%uC774%uB2E4.%20%uC774%uB7EC%uD55C%20%uD074%uB808%uC2A4%uB4E4%uC740%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uB514%uC790%uC778%20practice%uB4E4%uC5D0%uC11C%20%uAD8C%uC7A5%uB418%uB294%20%uAC83%uC744%20%uB530%uB978%uB2E4.%0A%0A%uC774%uB7EC%uD55C%20%60support%60%uB77C%uC774%uBE0C%uB7EC%uB9AC%uAC00%20%uC9C0%uC6D0%uD558%uB294%20%uAC83%uB4E4%uC758%20%uC0AC%uC6A9%uC73C%uB85C%20%uC778%uD574%20%uBC14%uD034%uB97C%20%uB610%20%uBC1C%uBA85%uD558%uB294%20%uC77C%20%uB530%uC704%uB97C%20%uC548%uD574%uB3C4%20%uB41C%uB2E4%21%20%uAE4C%uB2E4%uB85C%uC6B4%20UI%uAC00%20%uD544%uC694%uD558%uB2E4%uBA74%2C%20%uB2F9%uC2E0%uC740%20%uC774%uBBF8%20%uC788%uB294%2C%20%uC0AC%uC6A9%uC790%uAC00%20%uCE5C%uC219%uD55C%20UI%20%uC778%uD130%uD398%uC774%uC2A4%uB97C%20%uC81C%uACF5%uD558%uB294%20%60support%60%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uC758%20%uCF54%uB4DC%uB97C%20%uC0AC%uC6A9%uD574%20%uC81C%uC791%uD558%uBA74%20%uB41C%uB2E4.%20%uC608%uB97C%20%uB4E4%uC5B4%20%uB9CE%uC740%20%uC571%uB4E4%uC774%20%uC5C4%uCCAD%uB09C%20%uB9AC%uC2A4%uD2B8%uB97C%20%uBE60%uB974%uACE0%20%uD6A8%uACFC%uC801%uC73C%uB85C%20%uC5D8%uB9AC%uBA3C%uD2B8%uB97C%20%uC7AC%uC0AC%uC6A9%uD558%uBA70%20%uBCF4%uC5EC%uC8FC%uAE38%20%uC6D0%uD558%uB294%uB370%2C%20%uC774%uB97C%20%uC704%uD574%20%60support%60%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%60RecyclerView%60%uB97C%20%uC81C%uACF5%uD55C%uB2E4%21%0A%0A%23%20%uB2E4%uB978%20Form%20Factor%uB4E4%uC5D0%20%uB300%uD55C%20%uC9C0%uC6D0%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20SDK%uB294%20TV%uB098%20%uC6E8%uC5B4%uB7EC%uBE14%20%uAC19%uC740%20%uB2E4%uB978%20form%20factor%uB3C4%20%uC9C0%uC6D0%uD55C%uB2E4.%20%uC571%uC740%20%uCEE8%uD150%uCE20%uB97C%20%uC678%uBD80%20%uC2A4%uD06C%uB9B0%uC5D0%20%uC81C%uACF5%uD55C%uB2E4%uAC70%uB098%2C%20%uD639%uC740%20%uC2A4%uD53C%uCEE4%uC5D0%20%uC81C%uACF5%uD55C%uB2E4%uAC70%uB098%2C%20%uD639%uC740%20%uB2E4%uB978%20%uB514%uBC14%uC774%uC2A4%uC5D0%20%uC804%uC1A1%uD558%uB294%20%uB4F1%uC758%20%uAE30%uB2A5%uB4F1%uC744%20%uC801%uC808%uD55C%20%60support%60%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB97C%20%uC774%uC6A9%uD574%20%uB113%uC740%20%uBC94%uC704%uC758%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uC2DC%uC2A4%uD15C%uC744%20%uCEE4%uBC84%uD560%20%uC218%20%uC788%uB2E4.%20%0A%0A%23%20%uC720%uC6A9%uD55C%20%uC720%uD2F8%uB9AC%uD2F0%uC758%20%uC81C%uACF5%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20%60support%60%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uD558%uC704%20%uD638%uD658%uC131%uC744%20%uAC00%uC9C4%20%uC720%uD2F8%uB9AC%uD2F0%uB4E4%uC744%20%uC81C%uACF5%uD55C%uB2E4.%20%uC571%uB4E4%uC740%20%uC801%uC808%uD55C%20%uC0AC%uC6A9%uC790%20%uACBD%uD5D8%uC744%20%uC81C%uACF5%uD558%uB294%20%uC774%uB7EC%uD55C%20%uC720%uD2F8%uB9AC%uD2F0%uB97C%20%uBAA8%uB4E0%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uC2DC%uC2A4%uD15C%uC5D0%uC11C%20%uC0AC%uC6A9%uD560%20%uC218%20%uC788%uB2E4.%20%uC608%uB97C%uB4E4%uC5B4%20%60support%60%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uB294%20%uD37C%uBBF8%uC158%20%uBA54%uC18C%uB4DC%uB4E4%uC740%20%uC5B4%uB5A4%20%uD50C%uB7AB%uD3FC%20%uBC84%uC804%uC778%uC9C0%uC5D0%20%uB9DE%uCDB0%20%uC801%uC808%uD558%uAC8C%20%uB3D9%uC791%uD55C%uB2E4.%20%uB9CC%uC57D%20%uD50C%uB7AB%uD3FC%uC774%20%60Runtime%20Permission%20Model%60%uC744%20%uC9C0%uC6D0%uD55C%uB2E4%uBA74%2C%20%uC774%uB7EC%uD55C%20%uBA54%uC18C%uB4DC%uB4E4%uC740%20%uC801%uC808%uD55C%20%uD37C%uBBF8%uC158%uC744%20%uC720%uC800%uC5D0%uAC8C%20%uC694%uCCAD%uD560%20%uAC83%uC774%uBA70%2C%20%uADF8%uAC8C%20%uC544%uB2CC%20%uACBD%uC6B0%2C%20%uBA54%uC18C%uB4DC%uB294%20%uC801%uC808%uD55C%20%uD37C%uBBF8%uC158%uC744%20install%20time%uC5D0%20%uCCB4%uD06C%uD574%20grant%uD560%20%uAC83%uC774%uB2E4.%0A&lt;/center&gt;
&lt;br /&gt;&lt;/en-note&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Develop</category>
<category>Android</category>
<category>library</category>
<category>support</category>
<category>안드로이드</category>
<author>youngkyu.cho</author>
<guid>http://dev.youngkyu.kr/39</guid>
<comments>http://dev.youngkyu.kr/39#entry39comment</comments>
<pubDate>Thu, 02 Jun 2016 02:28:31 +0900</pubDate>
</item>
<item>
<title>[번역] FLUX 페이스북 클라이언트 사이드 웹 애플리케이션 아키텍처</title>
<link>http://dev.youngkyu.kr/38</link>
<description>&lt;en-note lang=&quot;v2&quot; style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;&lt;del style=&quot;position:relative;display:block;z-index:10;&quot;&gt;&lt;a style=&quot;position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;&quot; href=&quot;http://marxi.co/#/?provider=evernote_int&amp;amp;guid=3f7fc6f2-13de-4443-ac3b-c1f03a88cb36&amp;amp;notebook=youngkyu.cho&quot;&gt;Edit&lt;/a&gt;&lt;/del&gt;&lt;div style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;
                        &lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
                    &lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; color: rgba(0,0,0,0.8); line-height: 1.6;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;티스토리&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;FLUX&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;javascript&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;js&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;facebook&lt;/code&gt; &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;Flux&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Flux는 페이스북의 클라이언트 사이드 웹 애플리케이션 구축을 위한 아키텍쳐다. 이것은 한 방향으로의 데이터 흐름을 이용하여 React의 composable view 컴포넌트를 보완한다. 이것은 좀 더 큰 컨셉의 패턴이지, 공식적은 프레임워크는 아니다. 그리고 당신은 Flux를 새로운 코드 없이 바로 시작할 수 있다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;개괄&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Flux 애플리케이션들은 3가지 주요한 파트로 구성된다. Dispatcher, Store, 그리고 View들(React 컴포넌트)이 그것이다. 이것들과 Model-View-Controller를 헷갈리지 말아야 한다. Controller는 Flux애플리케이션에도 존재하지만, Controller-View의 형태로만 존재한다. View들은 데이터를 Store에서 받거나, 그들의 자식 Store에게 데이터를 패스하기 위해 최상위 계급에 자주 위치한다. 게다가 Action Creator - Dispatcher의 헬퍼 메소드들 - 는 애플리케이션에서 가능한 모든 변화들을 묘사하기 위해 시멘틱한 API를 지원한다. Flux의 업데이트 사이클의 4가지 파트로서 이것들을 이해하면 상당히 편하다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Flux는 MVC에서 양방햔 바인딩을 피한다. 유저가 React뷰와 인터렉션할 때, 뷰는 중심의 디스패처를 통하여 애플리케이션의 데이터와 비즈니스 로직 - 영향을 받은 모든 뷰들을 업데이트 하는 - 을 수행하는 다양한 스토어들에 로 Action을 전파한다. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이러한 작업들은 State 사이에서 어떻게 뷰들이 변할지 구체적으로 특정하지 않아도 스토어에게 업데이트들을 보낼 수 있도록 하는 특히 React의 Declarative 프로그래밍 스타일에서 유용하다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;우리는 파생된 데이터를 정확히 다루기 위해서 원래 시작했다. 예를들어 우리는 톡방들에서 아직 읽지 않은 것들의 숫자들을 읽지 않은 톡방이 하이라이트 되면서 톡방의 리스트와 함께 보여주길 바랐다. 한 톡방을 읽었다고 업데이트하면서, 동시에 읽지 않았다는 숫자를 동시에 업데이트 하는 것같은, 이런 일들은 MVC모델로는 다루기가 매우 힘들다. 의존적이고 폭포수처럼 전파되는 업데이트들은 MVC 아키텍쳐를 이용하는 큰 애플리케이션에서 자주 발생한다. 그리고 복잡한 데이터 흐름으로 예상치 못한 결과들을 초래한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;제어권은 Store에게 역전된다. 스토어들은 업데이트를 받아들이고, 그들의 일관적인 방법으로 데이터를 업데이트 하게되는 외부적인 무언가에 의존하기보다, 그들을 적절하게 조정한다. 어떠한 외부 스토어들도 그 도메인을 위한 데이터들이 어떻게 관리되는지에 대해 전혀 이해하고 있지 않다. 이는 쓸데없는 걱정거리를 만들지 않는다. 스토어들은 어떤 다이렉트 Setter 메소드도 들고있지 않다. 예를 들어 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setAsRead()&lt;/code&gt;같은. 그러나 대신 새로운 데이터를 그들 속의 세계로 가져오는 한가지 방법만이 존재한다.  - 바로 callback이다. Dispatcher로 그들이 등록한.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;스트럭쳐와 데이터 흐름&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Flux의 데이터들은 한 방향으로만 흐른다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:700px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2365E139574DC9C907&quot; filemime=&quot;image/png&quot; filename=&quot;./1451462507641.png&quot; height=&quot;154&quot; width=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;단방향 데이터 흐름은 Flux 패턴의 중심이다. 그리고 위 다이어그램은 Flux 프로그래머에게 주요 맨탈 모델이어야 한다. 디스패처, 스토어, 뷰들은 명확한 인풋과 아웃풋이 있는 서로 독립적인 노드들이다. Action들은 간단한 오브젝트로, 새로운 데이터를 가지고 있고 어떤 타입의 프로퍼티인지에 대한 정보를 제공한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;뷰들은 유저의 인터렉션들에 대한 반응과 관련된 새로운 Action을 생성할 것이다. 그리고 이러한 액션들은 시스템에 의해 전파된다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:700px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/25194741574DC9CA33&quot; filemime=&quot;image/png&quot; filename=&quot;./1451462712969.png&quot; height=&quot;211&quot; width=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;모든 데이터는 중심 허브로서 Dispatcher를 통해 흐른다. Action은 Action creator 메소드 안에서 디스패처에게 제공된다. 그리고 더 자주는 뷰에서의 유저 인터렉션을 통해 대부분 생성될 것이다. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;디스패처는 스토어들이 이미 dispatcher에게 등록했던, 모든 스토어들의 액션들을 스토어들에 전달하고 callback을 호출한다. 스토어 그들이 유지하는 스테이트들과 관련된 어떤 액션이든 등록된 컬벡 내에서 스토어들은 응답하게 된다. 스토어들은 그 후, 데이터 레이어의 변화를 Controller-Views들에게 알리기 위해 change 이벤트를 방출(emit)한다. Controller-View는 이러한 이벤트들을 리스닝하고 있다가 방출이 되면 이벤트 핸들러를 통해 스토어에서 데이터를 가져온다. 컨트롤 뷰는 그들 자신의 setState() 메소드를 스스로를 리렌더하고, 또 컴포넌트 트리의 후손들을 리렌더 하기위해 호출한다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:700px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/263AF636574DC9CC20&quot; filemime=&quot;image/png&quot; filename=&quot;./1451463358648.png&quot; height=&quot;381&quot; width=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이 구조는 우리에게 한가지 방법으로 쉽게 애플리케이션을 추론할 수 있도록 한다.  &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;functional reactive programming&lt;/code&gt;, 혹은 더 구체적으로 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;data-flow programming&lt;/code&gt; 혹은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;flow-based programming&lt;/code&gt;을 을 연상시키는 방법을 이용해서.  이 방법들에서는 애플리케이션의 데이터 플로우들은 한 뱡향으로 흐른다. 두 방향 바인딩은 없다. &lt;br /&gt;
애플리케이션 내의 특정 파트는 하나의 스토어에 의해 매우 decoupled된 채로 상태(state)가 유지된다. 동기적으로 업데이트가 디스패처에 의해 관리되면서, 스토어들의 의존성이 있는 곳에서는 엄격한 계급 체계을 유지한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;우리는 두 방향의 데이터 바인딩이 한가지 오브젝트의 변화가 다른 오브젝트의 변화를 일으키는 캐스케이딩 업데이트를 발생시킨다는 것을 알았다. 그 뿐만 아니라 그 변화 또한 더 많은 업데이트들을 트리거 할 수 있다. 애플리케이션이 커지면서 이런 케스케이딩 업데이트들은 유저 인터렉션의 결과로서 무엇이 바뀌어 져야 하는지에 대한 결과물에 대한 예측하기 힘들게 한다. 업데이트가 하나의 라운드안에서 데이터를 변경할 때, 시스템은 전체로서 예측가능해진다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;다양한 Flux의 파트를 자세히 보자. 디스패처는 시작으로서 가장 적절한 선택이다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;하나의 Dispatcher&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Flux 애플리케이션에서 모든 데이터 플로우를 관리하는 디스패처는 중앙 허브다. 기본적으로 디스패처는 스토어들의 안속의 callback들의 저장소(레지스트리)로 그 스스로는 어떠한 실질적 지능도 없다. 그것은 액션을 스토어로 분배하는 간단한 기계장치다. 각 스토어들은 dispatcher에 그들 스스로 뿐만 아니라 callback도 등록한다. Action creator가 디스패처에게 새로운 액션을 제공할 때, 애플리케이션 내 모든 스토어들은 저장소(레지스트리)안에있는 callbakc들을 통해 액션을 받는다. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;애플리케이션의 성장에 따라, 디스패처는 좀 더 활성화된다. 이때 스토어들 사이에서 특정한 순서대로 등록된 callback을 호출해 주어 의존성을 관리하는데 사용될 수도 있다. 스토어는 선언적으로 기다릴 수 있다. 다른 스토어들이 업데이트를 완료하기까지. 그리고 나서 그들 스스로를 그에맞춰 업데이트한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;페이스북이 프로덕션에서 사용하는 디스패처는 npm, Bower, or GitHub에서 이용할 수 있다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;스토어(Stores)&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;스토어는 애플리케이션의 스테이트와 로직을 가지고 있다. 그들의 역활은 뭔가 비슷한데, MVC에서의 모델이 그것이다. 그러나 그들은 다양한 오브젝트의 상태(state)를 관리한다. 그들은 ORM 모델이 하듯 하나의 단순한 레코드로 표현될 수 없다. Backbone의 콜렉션과도 마찬가지로 다르다. 간단히 ORM 스타일의 오브젝트를 관리하는 것 그 이상이다. 스토어는 특별한 도메인(책임영역)을 위한 애플리케이션의 상태(state)를 관리한다. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;예를 들어보자. 페이스북의 Lookback Video Editor는 계속 재생시간의 위치와 재생 상태를 트래킹하는 TimeStore를 사용한다.  한편, 같은 애플리케이션의 ImageStore는 계속 이미지들의 컬렉션을 트래킹한다. 우리 TodoMVC Example에 있는 TodoStore도 비슷한데 todo 아이템의 컬렉션을 다룬다. 스토어는 2가지 특성을 보인다. 하나는 모델들의 컬렉션이고 또 다른 하나는 논리적인 도메인의 싱글톤 모델이다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;위에도 이야기했듯, 스토어는 그들 스스로를 디스패처에게 callback과 함께 직접 등록한다. 이 callback은 액션을 파래머터로 받는다. 스토어가 등록한 콜벡 안에서, 액션타입에 기반한 switch문은 액션을 번역하는데 사용될 뿐만 아니라 스토어 내부의 메소드들에게 적절한 훅(hook)을 제공하는데 사용된다. 이것은 액션이 디스패처를 통해 스토어의 상태 업데이트를 가능하도록 한다. 스토어가 업데이트 된 후, 그들은 스테이트가 바뀌었다는 이벤트를 내뿜는데, 이를 통해 뷰들은 새로운 상태를 질의할 수 있고, 그들 스스로를 업데이트 한다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;뷰(Views)와 Controller-Views&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;우리가 뷰레이어에서 필요로 하는 구성 가능한 종류의, 그리고 자유롭게 미리 랜더할 수 있는 뷰들을 React는 제공한다. 얽혀있는 뷰 계급의 최상단을 가까이에서 보면, 어떤 뷰가 의존하는 스토어가 브로드캐스트하는 이벤트들을 리스닝하는 특별한 뷰들이 존재한다. 우리는 이걸 컨트롤 뷰라고 부른다. 그들은 데이터를 스토어에서 가져오거나 혹은 그들의 후손들에게 데이터를 내려주는일을 위한 접착 코드를 제공한다. 우리는 이런 컨트롤 뷰들에게 중요한 섹션 하나를 할당해 주어야 할 것 같다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이벤트를 스토어에서 받았을 때, 스토어의 public getter 메소드들로 필요한 새 데이터를 먼저 요청한다. 이후 자신의 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setState()&lt;/code&gt;혹은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;forceUpdate()&lt;/code&gt;메소드(그것의 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;render()&lt;/code&gt;메소드와 하부 자손들의 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;render()&lt;/code&gt; 메소드들을 실행하는)들을 호출한다.  &lt;br /&gt;
우리는 자주 스토어의 전체 상태(state)를 뷰들의 체인이 있는 하부로 전달한다. 이것은 다른 후손들이 그들이 필요로 하는 것을 사용할 수 있도록 허락한다. 게다가 가장 최상위에서도 컨트롤러 비슷한 행동을 유지하기, 또 이렇게 우리의 자손 뷰들을 유지하기 위해, 가능한한 기능적으로 퓨어하게 모든 스토어의 상태를 싱글 오브젝트로 하부에 전달하는 것은 우리가 관리해야할 프로퍼티들의 수를 줄여주는 효과가 있다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;가끔, 우리는 안쪽(최상위가 아닌) 컨트롤 뷰를 컴포넌트를 간단히 유지하기 위해 가끔 추가할 필요를 느낀다. 이것은 특정 도메인의 섹션의 계층을 더 낫게 캡슐화 할 수 있게 해주기도 한다. 그러나 안쪽의 컨트롤러뷰는 하나의 데이터 흐름을 깰 수도 있다는 점을 알아야한다. 이런 컨트롤 뷰는 새로운 데이터 흐름을 위한 엔트리 포인트를 만들 수 있으며, 이는 잠재적인 충돌 가능성을 가지고 있다. 안쪽의 컨트롤 뷰를 만들 때는 간단한 컴포넌트의 이점과 복잡한 다수의 업데이트 사이에서 조율을 해야한다. 이러한 다수의 데이터 업데이트는 의도치 않은 영향을 만들 수 있는데, 다른 컨트롤뷰에 의해 계속적으로 호출되는 React의 렌더링 메소드의 getting에서 그렇다. 그리고 이건 잠재적으로 디버깅의 어려움을 증가시킬 수 있다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;액션(Actions)&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;우리가 스토어에게 분배(dispatch)를 트리거할 수 있도록, 그리고 데이터 페이로드 - 이것이 우리가 부르는 액션 - 를 포함 할 수 있게 디스패처는 한 메소드를 노출시킨다. 시멘틱한 헬퍼 메소드 안에, 엑션의 생성은 아마 래핑되어있을 것이다. 그것은 액션을 디스패처에게 보낸다. 예를들어, 우리는 To-do 아이템의 글자를 To-do List 애플리케이션에서 바꾸길 원할 수 있다. 우리는 TodoActions 모듈 안에 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;updateText(todoId, newText)&lt;/code&gt;같은 함수로 액션을 생성한다. 이 메소드들은 아마 우리의 뷰 이벤트 핸들러에 의해 호출될 것이다. 우리는 이것을 유저 인터렉션의 결과라 부를 수 있다. 이 액션 생성 메소드는 또한 액션에게 타입을 추가한다. 그래서 액션이 스토어에서 해셕될 때, 적절하게 응답할 수 있도록 한다. 우리의 예시에서는 이런 타입은 아마 TODO_UPDATE_TEXT같이 이름 붙여질 것이다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;액션은 아마 다른 장소들에서 올때도 있다, 서버같은 곳에서. 예를들어, 데이터를 초기화하는 동안 이런일이 일어난다. 또 마찬가지로 서버가 에러코드를 반환할때나 혹은 애플리케이션을 업데이트할때 같을때도 일어난다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;디스패처를 좀 더 보면,&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;아까 얘기했지만, 디스패처는 스토어들 사이의 디펜던시도 관리가 가능하다. 이런 기능은 디스패처 클래스의 waitFor() 메소드를 통해 가능하다. 우리는 지금 이런 메소드를 쓸 필요가 없다. 왜냐면 TodoMVC 애플리케이션이 굉장히 단순하니까. 그러나 이것은 크고 복잡한 애플리케이션에선 활성화될 것이다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;TodoStore의 등록된 콜벡 안에서 우리는 명시적으로 진행전에 다른 디펜던시들이 먼저 업데이트 되도록 기다릴 수 있다. &lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'TODO_CREATE'&lt;/span&gt;:&lt;br /&gt;  Dispatcher.waitFor([&lt;br /&gt;    PrependedTextStore.dispatchToken,&lt;br /&gt;    YetAnotherStore.dispatchToken&lt;br /&gt;  ]);&lt;br /&gt;&lt;br /&gt;  TodoStore.create(PrependedTextStore.&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;getText&lt;/span&gt;() + &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;' '&lt;/span&gt; + action.text);&lt;br /&gt;  &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;break&lt;/span&gt;;&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;waitFor()&lt;/code&gt;은 한가지 argument만 받는다. 그 argument는 디스패처의 콜백 저장소(레지스트리) 인덱스다. 이것을 우리는 dispatch tokens이라 부른다. 이와같이 waitFor()를 호출하는 스토어는 그것이 그 자신의 스테이트를 어떻게 업데이트 해야하는지 알려주기 위한 다른 스토어의 상태에 의존할 수 있다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;디스패처 토큰은 디스패처에 콜벡을 등록할 때 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;register()&lt;/code&gt;의 반환값이다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;PrependedTextStore.dispatchToken = Dispatcher.register(&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;(payload)&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// ...&lt;/span&gt;&lt;br /&gt;});&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;waitFor()&lt;/code&gt;이나 actions, action creators 그리고 디스패처에 대해 더 자세한걸 원하면  &lt;a href=&quot;http://facebook.github.io/react/blog/2014/07/30/flux-actions-and-the-dispatcher.html&quot; target=&quot;_blank&quot; style=&quot;background: transparent; color: #1980e6; text-decoration: none;&quot;&gt;Flux: Actions and the Dispatcher&lt;/a&gt; 를 보자.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;center style=&quot;display:none&quot;&gt;@%5B%uD2F0%uC2A4%uD1A0%uB9AC%2CFLUX%2Cjavascript%2Cjs%2Cfacebook%5D%0A%0A%23Flux%0A%0AFlux%uB294%20%uD398%uC774%uC2A4%uBD81%uC758%20%uD074%uB77C%uC774%uC5B8%uD2B8%20%uC0AC%uC774%uB4DC%20%uC6F9%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%20%uAD6C%uCD95%uC744%20%uC704%uD55C%20%uC544%uD0A4%uD14D%uCCD0%uB2E4.%20%uC774%uAC83%uC740%20%uD55C%20%uBC29%uD5A5%uC73C%uB85C%uC758%20%uB370%uC774%uD130%20%uD750%uB984%uC744%20%uC774%uC6A9%uD558%uC5EC%20React%uC758%20composable%20view%20%uCEF4%uD3EC%uB10C%uD2B8%uB97C%20%uBCF4%uC644%uD55C%uB2E4.%20%uC774%uAC83%uC740%20%uC880%20%uB354%20%uD070%20%uCEE8%uC149%uC758%20%uD328%uD134%uC774%uC9C0%2C%20%uACF5%uC2DD%uC801%uC740%20%uD504%uB808%uC784%uC6CC%uD06C%uB294%20%uC544%uB2C8%uB2E4.%20%uADF8%uB9AC%uACE0%20%uB2F9%uC2E0%uC740%20Flux%uB97C%20%uC0C8%uB85C%uC6B4%20%uCF54%uB4DC%20%uC5C6%uC774%20%uBC14%uB85C%20%uC2DC%uC791%uD560%20%uC218%20%uC788%uB2E4.%0A%0A%23%uAC1C%uAD04%0A%0AFlux%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uB4E4%uC740%203%uAC00%uC9C0%20%uC8FC%uC694%uD55C%20%uD30C%uD2B8%uB85C%20%uAD6C%uC131%uB41C%uB2E4.%20Dispatcher%2C%20Store%2C%20%uADF8%uB9AC%uACE0%20View%uB4E4%28React%20%uCEF4%uD3EC%uB10C%uD2B8%29%uC774%20%uADF8%uAC83%uC774%uB2E4.%20%uC774%uAC83%uB4E4%uACFC%20Model-View-Controller%uB97C%20%uD5F7%uAC08%uB9AC%uC9C0%20%uB9D0%uC544%uC57C%20%uD55C%uB2E4.%20Controller%uB294%20Flux%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC5D0%uB3C4%20%uC874%uC7AC%uD558%uC9C0%uB9CC%2C%20Controller-View%uC758%20%uD615%uD0DC%uB85C%uB9CC%20%uC874%uC7AC%uD55C%uB2E4.%20View%uB4E4%uC740%20%uB370%uC774%uD130%uB97C%20Store%uC5D0%uC11C%20%uBC1B%uAC70%uB098%2C%20%uADF8%uB4E4%uC758%20%uC790%uC2DD%20Store%uC5D0%uAC8C%20%uB370%uC774%uD130%uB97C%20%uD328%uC2A4%uD558%uAE30%20%uC704%uD574%20%uCD5C%uC0C1%uC704%20%uACC4%uAE09%uC5D0%20%uC790%uC8FC%20%uC704%uCE58%uD55C%uB2E4.%20%uAC8C%uB2E4%uAC00%20Action%20Creator%20-%20Dispatcher%uC758%20%uD5EC%uD37C%20%uBA54%uC18C%uB4DC%uB4E4%20-%20%uB294%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC5D0%uC11C%20%uAC00%uB2A5%uD55C%20%uBAA8%uB4E0%20%uBCC0%uD654%uB4E4%uC744%20%uBB18%uC0AC%uD558%uAE30%20%uC704%uD574%20%uC2DC%uBA58%uD2F1%uD55C%20API%uB97C%20%uC9C0%uC6D0%uD55C%uB2E4.%20Flux%uC758%20%uC5C5%uB370%uC774%uD2B8%20%uC0AC%uC774%uD074%uC758%204%uAC00%uC9C0%20%uD30C%uD2B8%uB85C%uC11C%20%uC774%uAC83%uB4E4%uC744%20%uC774%uD574%uD558%uBA74%20%uC0C1%uB2F9%uD788%20%uD3B8%uD558%uB2E4.%0A%0AFlux%uB294%20MVC%uC5D0%uC11C%20%uC591%uBC29%uD594%20%uBC14%uC778%uB529%uC744%20%uD53C%uD55C%uB2E4.%20%uC720%uC800%uAC00%20React%uBDF0%uC640%20%uC778%uD130%uB809%uC158%uD560%20%uB54C%2C%20%uBDF0%uB294%20%uC911%uC2EC%uC758%20%uB514%uC2A4%uD328%uCC98%uB97C%20%uD1B5%uD558%uC5EC%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20%uB370%uC774%uD130%uC640%20%uBE44%uC988%uB2C8%uC2A4%20%uB85C%uC9C1%20-%20%uC601%uD5A5%uC744%20%uBC1B%uC740%20%uBAA8%uB4E0%20%uBDF0%uB4E4%uC744%20%uC5C5%uB370%uC774%uD2B8%20%uD558%uB294%20-%20%uC744%20%uC218%uD589%uD558%uB294%20%uB2E4%uC591%uD55C%20%uC2A4%uD1A0%uC5B4%uB4E4%uC5D0%20%uB85C%20Action%uC744%20%uC804%uD30C%uD55C%uB2E4.%20%0A%0A%uC774%uB7EC%uD55C%20%uC791%uC5C5%uB4E4%uC740%20State%20%uC0AC%uC774%uC5D0%uC11C%20%uC5B4%uB5BB%uAC8C%20%uBDF0%uB4E4%uC774%20%uBCC0%uD560%uC9C0%20%uAD6C%uCCB4%uC801%uC73C%uB85C%20%uD2B9%uC815%uD558%uC9C0%20%uC54A%uC544%uB3C4%20%uC2A4%uD1A0%uC5B4%uC5D0%uAC8C%20%uC5C5%uB370%uC774%uD2B8%uB4E4%uC744%20%uBCF4%uB0BC%20%uC218%20%uC788%uB3C4%uB85D%20%uD558%uB294%20%uD2B9%uD788%20React%uC758%20Declarative%20%uD504%uB85C%uADF8%uB798%uBC0D%20%uC2A4%uD0C0%uC77C%uC5D0%uC11C%20%uC720%uC6A9%uD558%uB2E4.%0A%0A%uC6B0%uB9AC%uB294%20%uD30C%uC0DD%uB41C%20%uB370%uC774%uD130%uB97C%20%uC815%uD655%uD788%20%uB2E4%uB8E8%uAE30%20%uC704%uD574%uC11C%20%uC6D0%uB798%20%uC2DC%uC791%uD588%uB2E4.%20%uC608%uB97C%uB4E4%uC5B4%20%uC6B0%uB9AC%uB294%20%uD1A1%uBC29%uB4E4%uC5D0%uC11C%20%uC544%uC9C1%20%uC77D%uC9C0%20%uC54A%uC740%20%uAC83%uB4E4%uC758%20%uC22B%uC790%uB4E4%uC744%20%uC77D%uC9C0%20%uC54A%uC740%20%uD1A1%uBC29%uC774%20%uD558%uC774%uB77C%uC774%uD2B8%20%uB418%uBA74%uC11C%20%uD1A1%uBC29%uC758%20%uB9AC%uC2A4%uD2B8%uC640%20%uD568%uAED8%20%uBCF4%uC5EC%uC8FC%uAE38%20%uBC14%uB790%uB2E4.%20%uD55C%20%uD1A1%uBC29%uC744%20%uC77D%uC5C8%uB2E4%uACE0%20%uC5C5%uB370%uC774%uD2B8%uD558%uBA74%uC11C%2C%20%uB3D9%uC2DC%uC5D0%20%uC77D%uC9C0%20%uC54A%uC558%uB2E4%uB294%20%uC22B%uC790%uB97C%20%uB3D9%uC2DC%uC5D0%20%uC5C5%uB370%uC774%uD2B8%20%uD558%uB294%20%uAC83%uAC19%uC740%2C%20%uC774%uB7F0%20%uC77C%uB4E4%uC740%20MVC%uBAA8%uB378%uB85C%uB294%20%uB2E4%uB8E8%uAE30%uAC00%20%uB9E4%uC6B0%20%uD798%uB4E4%uB2E4.%20%uC758%uC874%uC801%uC774%uACE0%20%uD3ED%uD3EC%uC218%uCC98%uB7FC%20%uC804%uD30C%uB418%uB294%20%uC5C5%uB370%uC774%uD2B8%uB4E4%uC740%20MVC%20%uC544%uD0A4%uD14D%uCCD0%uB97C%20%uC774%uC6A9%uD558%uB294%20%uD070%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC5D0%uC11C%20%uC790%uC8FC%20%uBC1C%uC0DD%uD55C%uB2E4.%20%uADF8%uB9AC%uACE0%20%uBCF5%uC7A1%uD55C%20%uB370%uC774%uD130%20%uD750%uB984%uC73C%uB85C%20%uC608%uC0C1%uCE58%20%uBABB%uD55C%20%uACB0%uACFC%uB4E4%uC744%20%uCD08%uB798%uD55C%uB2E4.%0A%0A%uC81C%uC5B4%uAD8C%uC740%20Store%uC5D0%uAC8C%20%uC5ED%uC804%uB41C%uB2E4.%20%uC2A4%uD1A0%uC5B4%uB4E4%uC740%20%uC5C5%uB370%uC774%uD2B8%uB97C%20%uBC1B%uC544%uB4E4%uC774%uACE0%2C%20%uADF8%uB4E4%uC758%20%uC77C%uAD00%uC801%uC778%20%uBC29%uBC95%uC73C%uB85C%20%uB370%uC774%uD130%uB97C%20%uC5C5%uB370%uC774%uD2B8%20%uD558%uAC8C%uB418%uB294%20%uC678%uBD80%uC801%uC778%20%uBB34%uC5B8%uAC00%uC5D0%20%uC758%uC874%uD558%uAE30%uBCF4%uB2E4%2C%20%uADF8%uB4E4%uC744%20%uC801%uC808%uD558%uAC8C%20%uC870%uC815%uD55C%uB2E4.%20%uC5B4%uB5A0%uD55C%20%uC678%uBD80%20%uC2A4%uD1A0%uC5B4%uB4E4%uB3C4%20%uADF8%20%uB3C4%uBA54%uC778%uC744%20%uC704%uD55C%20%uB370%uC774%uD130%uB4E4%uC774%20%uC5B4%uB5BB%uAC8C%20%uAD00%uB9AC%uB418%uB294%uC9C0%uC5D0%20%uB300%uD574%20%uC804%uD600%20%uC774%uD574%uD558%uACE0%20%uC788%uC9C0%20%uC54A%uB2E4.%20%uC774%uB294%20%uC4F8%uB370%uC5C6%uB294%20%uAC71%uC815%uAC70%uB9AC%uB97C%20%uB9CC%uB4E4%uC9C0%20%uC54A%uB294%uB2E4.%20%uC2A4%uD1A0%uC5B4%uB4E4%uC740%20%uC5B4%uB5A4%20%uB2E4%uC774%uB809%uD2B8%20Setter%20%uBA54%uC18C%uB4DC%uB3C4%20%uB4E4%uACE0%uC788%uC9C0%20%uC54A%uB2E4.%20%uC608%uB97C%20%uB4E4%uC5B4%20%60setAsRead%28%29%60%uAC19%uC740.%20%uADF8%uB7EC%uB098%20%uB300%uC2E0%20%uC0C8%uB85C%uC6B4%20%uB370%uC774%uD130%uB97C%20%uADF8%uB4E4%20%uC18D%uC758%20%uC138%uACC4%uB85C%20%uAC00%uC838%uC624%uB294%20%uD55C%uAC00%uC9C0%20%uBC29%uBC95%uB9CC%uC774%20%uC874%uC7AC%uD55C%uB2E4.%20%20-%20%uBC14%uB85C%20callback%uC774%uB2E4.%20Dispatcher%uB85C%20%uADF8%uB4E4%uC774%20%uB4F1%uB85D%uD55C.%0A%0A%23%uC2A4%uD2B8%uB7ED%uCCD0%uC640%20%uB370%uC774%uD130%20%uD750%uB984%0A%0AFlux%uC758%20%uB370%uC774%uD130%uB4E4%uC740%20%uD55C%20%uBC29%uD5A5%uC73C%uB85C%uB9CC%20%uD750%uB978%uB2E4.%0A%0A%21%5BAlt%20text%5D%28./1451462507641.png%29%0A%0A%uB2E8%uBC29%uD5A5%20%uB370%uC774%uD130%20%uD750%uB984%uC740%20Flux%20%uD328%uD134%uC758%20%uC911%uC2EC%uC774%uB2E4.%20%uADF8%uB9AC%uACE0%20%uC704%20%uB2E4%uC774%uC5B4%uADF8%uB7A8%uC740%20Flux%20%uD504%uB85C%uADF8%uB798%uBA38%uC5D0%uAC8C%20%uC8FC%uC694%20%uB9E8%uD0C8%20%uBAA8%uB378%uC774%uC5B4%uC57C%20%uD55C%uB2E4.%20%uB514%uC2A4%uD328%uCC98%2C%20%uC2A4%uD1A0%uC5B4%2C%20%uBDF0%uB4E4%uC740%20%uBA85%uD655%uD55C%20%uC778%uD48B%uACFC%20%uC544%uC6C3%uD48B%uC774%20%uC788%uB294%20%uC11C%uB85C%20%uB3C5%uB9BD%uC801%uC778%20%uB178%uB4DC%uB4E4%uC774%uB2E4.%20Action%uB4E4%uC740%20%uAC04%uB2E8%uD55C%20%uC624%uBE0C%uC81D%uD2B8%uB85C%2C%20%uC0C8%uB85C%uC6B4%20%uB370%uC774%uD130%uB97C%20%uAC00%uC9C0%uACE0%20%uC788%uACE0%20%uC5B4%uB5A4%20%uD0C0%uC785%uC758%20%uD504%uB85C%uD37C%uD2F0%uC778%uC9C0%uC5D0%20%uB300%uD55C%20%uC815%uBCF4%uB97C%20%uC81C%uACF5%uD55C%uB2E4.%0A%0A%uBDF0%uB4E4%uC740%20%uC720%uC800%uC758%20%uC778%uD130%uB809%uC158%uB4E4%uC5D0%20%uB300%uD55C%20%uBC18%uC751%uACFC%20%uAD00%uB828%uB41C%20%uC0C8%uB85C%uC6B4%20Action%uC744%20%uC0DD%uC131%uD560%20%uAC83%uC774%uB2E4.%20%uADF8%uB9AC%uACE0%20%uC774%uB7EC%uD55C%20%uC561%uC158%uB4E4%uC740%20%uC2DC%uC2A4%uD15C%uC5D0%20%uC758%uD574%20%uC804%uD30C%uB41C%uB2E4.%0A%21%5BAlt%20text%5D%28./1451462712969.png%29%0A%0A%uBAA8%uB4E0%20%uB370%uC774%uD130%uB294%20%uC911%uC2EC%20%uD5C8%uBE0C%uB85C%uC11C%20Dispatcher%uB97C%20%uD1B5%uD574%20%uD750%uB978%uB2E4.%20Action%uC740%20Action%20creator%20%uBA54%uC18C%uB4DC%20%uC548%uC5D0%uC11C%20%uB514%uC2A4%uD328%uCC98%uC5D0%uAC8C%20%uC81C%uACF5%uB41C%uB2E4.%20%uADF8%uB9AC%uACE0%20%uB354%20%uC790%uC8FC%uB294%20%uBDF0%uC5D0%uC11C%uC758%20%uC720%uC800%20%uC778%uD130%uB809%uC158%uC744%20%uD1B5%uD574%20%uB300%uBD80%uBD84%20%uC0DD%uC131%uB420%20%uAC83%uC774%uB2E4.%20%0A%0A%uB514%uC2A4%uD328%uCC98%uB294%20%uC2A4%uD1A0%uC5B4%uB4E4%uC774%20%uC774%uBBF8%20dispatcher%uC5D0%uAC8C%20%uB4F1%uB85D%uD588%uB358%2C%20%uBAA8%uB4E0%20%uC2A4%uD1A0%uC5B4%uB4E4%uC758%20%uC561%uC158%uB4E4%uC744%20%uC2A4%uD1A0%uC5B4%uB4E4%uC5D0%20%uC804%uB2EC%uD558%uACE0%20callback%uC744%20%uD638%uCD9C%uD55C%uB2E4.%20%uC2A4%uD1A0%uC5B4%20%uADF8%uB4E4%uC774%20%uC720%uC9C0%uD558%uB294%20%uC2A4%uD14C%uC774%uD2B8%uB4E4%uACFC%20%uAD00%uB828%uB41C%20%uC5B4%uB5A4%20%uC561%uC158%uC774%uB4E0%20%uB4F1%uB85D%uB41C%20%uCEEC%uBCA1%20%uB0B4%uC5D0%uC11C%20%uC2A4%uD1A0%uC5B4%uB4E4%uC740%20%uC751%uB2F5%uD558%uAC8C%20%uB41C%uB2E4.%20%uC2A4%uD1A0%uC5B4%uB4E4%uC740%20%uADF8%20%uD6C4%2C%20%uB370%uC774%uD130%20%uB808%uC774%uC5B4%uC758%20%uBCC0%uD654%uB97C%20Controller-Views%uB4E4%uC5D0%uAC8C%20%uC54C%uB9AC%uAE30%20%uC704%uD574%20change%20%uC774%uBCA4%uD2B8%uB97C%20%uBC29%uCD9C%28emit%29%uD55C%uB2E4.%20Controller-View%uB294%20%uC774%uB7EC%uD55C%20%uC774%uBCA4%uD2B8%uB4E4%uC744%20%uB9AC%uC2A4%uB2DD%uD558%uACE0%20%uC788%uB2E4%uAC00%20%uBC29%uCD9C%uC774%20%uB418%uBA74%20%uC774%uBCA4%uD2B8%20%uD578%uB4E4%uB7EC%uB97C%20%uD1B5%uD574%20%uC2A4%uD1A0%uC5B4%uC5D0%uC11C%20%uB370%uC774%uD130%uB97C%20%uAC00%uC838%uC628%uB2E4.%20%uCEE8%uD2B8%uB864%20%uBDF0%uB294%20%uADF8%uB4E4%20%uC790%uC2E0%uC758%20setState%28%29%20%uBA54%uC18C%uB4DC%uB97C%20%uC2A4%uC2A4%uB85C%uB97C%20%uB9AC%uB80C%uB354%uD558%uACE0%2C%20%uB610%20%uCEF4%uD3EC%uB10C%uD2B8%20%uD2B8%uB9AC%uC758%20%uD6C4%uC190%uB4E4%uC744%20%uB9AC%uB80C%uB354%20%uD558%uAE30%uC704%uD574%20%uD638%uCD9C%uD55C%uB2E4.%0A%0A%21%5BAlt%20text%5D%28./1451463358648.png%29%0A%0A%uC774%20%uAD6C%uC870%uB294%20%uC6B0%uB9AC%uC5D0%uAC8C%20%uD55C%uAC00%uC9C0%20%uBC29%uBC95%uC73C%uB85C%20%uC27D%uAC8C%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC744%20%uCD94%uB860%uD560%20%uC218%20%uC788%uB3C4%uB85D%20%uD55C%uB2E4.%20%20%60functional%20reactive%20programming%60%2C%20%uD639%uC740%20%uB354%20%uAD6C%uCCB4%uC801%uC73C%uB85C%20%60data-flow%20programming%60%20%uD639%uC740%20%60flow-based%20programming%60%uC744%20%uC744%20%uC5F0%uC0C1%uC2DC%uD0A4%uB294%20%uBC29%uBC95%uC744%20%uC774%uC6A9%uD574%uC11C.%20%20%uC774%20%uBC29%uBC95%uB4E4%uC5D0%uC11C%uB294%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20%uB370%uC774%uD130%20%uD50C%uB85C%uC6B0%uB4E4%uC740%20%uD55C%20%uBC61%uD5A5%uC73C%uB85C%20%uD750%uB978%uB2E4.%20%uB450%20%uBC29%uD5A5%20%uBC14%uC778%uB529%uC740%20%uC5C6%uB2E4.%0A%uC560%uD50C%uB9AC%uCF00%uC774%uC158%20%uB0B4%uC758%20%uD2B9%uC815%20%uD30C%uD2B8%uB294%20%uD558%uB098%uC758%20%uC2A4%uD1A0%uC5B4%uC5D0%20%uC758%uD574%20%uB9E4%uC6B0%20decoupled%uB41C%20%uCC44%uB85C%20%uC0C1%uD0DC%28state%29%uAC00%20%uC720%uC9C0%uB41C%uB2E4.%20%uB3D9%uAE30%uC801%uC73C%uB85C%20%uC5C5%uB370%uC774%uD2B8%uAC00%20%uB514%uC2A4%uD328%uCC98%uC5D0%20%uC758%uD574%20%uAD00%uB9AC%uB418%uBA74%uC11C%2C%20%uC2A4%uD1A0%uC5B4%uB4E4%uC758%20%uC758%uC874%uC131%uC774%20%uC788%uB294%20%uACF3%uC5D0%uC11C%uB294%20%uC5C4%uACA9%uD55C%20%uACC4%uAE09%20%uCCB4%uACC4%uC744%20%uC720%uC9C0%uD55C%uB2E4.%0A%0A%uC6B0%uB9AC%uB294%20%uB450%20%uBC29%uD5A5%uC758%20%uB370%uC774%uD130%20%uBC14%uC778%uB529%uC774%20%uD55C%uAC00%uC9C0%20%uC624%uBE0C%uC81D%uD2B8%uC758%20%uBCC0%uD654%uAC00%20%uB2E4%uB978%20%uC624%uBE0C%uC81D%uD2B8%uC758%20%uBCC0%uD654%uB97C%20%uC77C%uC73C%uD0A4%uB294%20%uCE90%uC2A4%uCF00%uC774%uB529%20%uC5C5%uB370%uC774%uD2B8%uB97C%20%uBC1C%uC0DD%uC2DC%uD0A8%uB2E4%uB294%20%uAC83%uC744%20%uC54C%uC558%uB2E4.%20%uADF8%20%uBFD0%uB9CC%20%uC544%uB2C8%uB77C%20%uADF8%20%uBCC0%uD654%20%uB610%uD55C%20%uB354%20%uB9CE%uC740%20%uC5C5%uB370%uC774%uD2B8%uB4E4%uC744%20%uD2B8%uB9AC%uAC70%20%uD560%20%uC218%20%uC788%uB2E4.%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC774%20%uCEE4%uC9C0%uBA74%uC11C%20%uC774%uB7F0%20%uCF00%uC2A4%uCF00%uC774%uB529%20%uC5C5%uB370%uC774%uD2B8%uB4E4%uC740%20%uC720%uC800%20%uC778%uD130%uB809%uC158%uC758%20%uACB0%uACFC%uB85C%uC11C%20%uBB34%uC5C7%uC774%20%uBC14%uB00C%uC5B4%20%uC838%uC57C%20%uD558%uB294%uC9C0%uC5D0%20%uB300%uD55C%20%uACB0%uACFC%uBB3C%uC5D0%20%uB300%uD55C%20%uC608%uCE21%uD558%uAE30%20%uD798%uB4E4%uAC8C%20%uD55C%uB2E4.%20%uC5C5%uB370%uC774%uD2B8%uAC00%20%uD558%uB098%uC758%20%uB77C%uC6B4%uB4DC%uC548%uC5D0%uC11C%20%uB370%uC774%uD130%uB97C%20%uBCC0%uACBD%uD560%20%uB54C%2C%20%uC2DC%uC2A4%uD15C%uC740%20%uC804%uCCB4%uB85C%uC11C%20%uC608%uCE21%uAC00%uB2A5%uD574%uC9C4%uB2E4.%0A%0A%uB2E4%uC591%uD55C%20Flux%uC758%20%uD30C%uD2B8%uB97C%20%uC790%uC138%uD788%20%uBCF4%uC790.%20%uB514%uC2A4%uD328%uCC98%uB294%20%uC2DC%uC791%uC73C%uB85C%uC11C%20%uAC00%uC7A5%20%uC801%uC808%uD55C%20%uC120%uD0DD%uC774%uB2E4.%0A%0A%23%uD558%uB098%uC758%20Dispatcher%0A%0AFlux%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC5D0%uC11C%20%uBAA8%uB4E0%20%uB370%uC774%uD130%20%uD50C%uB85C%uC6B0%uB97C%20%uAD00%uB9AC%uD558%uB294%20%uB514%uC2A4%uD328%uCC98%uB294%20%uC911%uC559%20%uD5C8%uBE0C%uB2E4.%20%uAE30%uBCF8%uC801%uC73C%uB85C%20%uB514%uC2A4%uD328%uCC98%uB294%20%uC2A4%uD1A0%uC5B4%uB4E4%uC758%20%uC548%uC18D%uC758%20callback%uB4E4%uC758%20%uC800%uC7A5%uC18C%28%uB808%uC9C0%uC2A4%uD2B8%uB9AC%29%uB85C%20%uADF8%20%uC2A4%uC2A4%uB85C%uB294%20%uC5B4%uB5A0%uD55C%20%uC2E4%uC9C8%uC801%20%uC9C0%uB2A5%uB3C4%20%uC5C6%uB2E4.%20%uADF8%uAC83%uC740%20%uC561%uC158%uC744%20%uC2A4%uD1A0%uC5B4%uB85C%20%uBD84%uBC30%uD558%uB294%20%uAC04%uB2E8%uD55C%20%uAE30%uACC4%uC7A5%uCE58%uB2E4.%20%uAC01%20%uC2A4%uD1A0%uC5B4%uB4E4%uC740%20dispatcher%uC5D0%20%uADF8%uB4E4%20%uC2A4%uC2A4%uB85C%20%uBFD0%uB9CC%20%uC544%uB2C8%uB77C%20callback%uB3C4%20%uB4F1%uB85D%uD55C%uB2E4.%20Action%20creator%uAC00%20%uB514%uC2A4%uD328%uCC98%uC5D0%uAC8C%20%uC0C8%uB85C%uC6B4%20%uC561%uC158%uC744%20%uC81C%uACF5%uD560%20%uB54C%2C%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%20%uB0B4%20%uBAA8%uB4E0%20%uC2A4%uD1A0%uC5B4%uB4E4%uC740%20%uC800%uC7A5%uC18C%28%uB808%uC9C0%uC2A4%uD2B8%uB9AC%29%uC548%uC5D0%uC788%uB294%20callbakc%uB4E4%uC744%20%uD1B5%uD574%20%uC561%uC158%uC744%20%uBC1B%uB294%uB2E4.%20%0A%0A%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20%uC131%uC7A5%uC5D0%20%uB530%uB77C%2C%20%uB514%uC2A4%uD328%uCC98%uB294%20%uC880%20%uB354%20%uD65C%uC131%uD654%uB41C%uB2E4.%20%uC774%uB54C%20%uC2A4%uD1A0%uC5B4%uB4E4%20%uC0AC%uC774%uC5D0%uC11C%20%uD2B9%uC815%uD55C%20%uC21C%uC11C%uB300%uB85C%20%uB4F1%uB85D%uB41C%20callback%uC744%20%uD638%uCD9C%uD574%20%uC8FC%uC5B4%20%uC758%uC874%uC131%uC744%20%uAD00%uB9AC%uD558%uB294%uB370%20%uC0AC%uC6A9%uB420%20%uC218%uB3C4%20%uC788%uB2E4.%20%uC2A4%uD1A0%uC5B4%uB294%20%uC120%uC5B8%uC801%uC73C%uB85C%20%uAE30%uB2E4%uB9B4%20%uC218%20%uC788%uB2E4.%20%uB2E4%uB978%20%uC2A4%uD1A0%uC5B4%uB4E4%uC774%20%uC5C5%uB370%uC774%uD2B8%uB97C%20%uC644%uB8CC%uD558%uAE30%uAE4C%uC9C0.%20%uADF8%uB9AC%uACE0%20%uB098%uC11C%20%uADF8%uB4E4%20%uC2A4%uC2A4%uB85C%uB97C%20%uADF8%uC5D0%uB9DE%uCDB0%20%uC5C5%uB370%uC774%uD2B8%uD55C%uB2E4.%0A%0A%uD398%uC774%uC2A4%uBD81%uC774%20%uD504%uB85C%uB355%uC158%uC5D0%uC11C%20%uC0AC%uC6A9%uD558%uB294%20%uB514%uC2A4%uD328%uCC98%uB294%20npm%2C%20Bower%2C%20or%20GitHub%uC5D0%uC11C%20%uC774%uC6A9%uD560%20%uC218%20%uC788%uB2E4.%0A%0A%23%uC2A4%uD1A0%uC5B4%28Stores%29%0A%0A%uC2A4%uD1A0%uC5B4%uB294%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20%uC2A4%uD14C%uC774%uD2B8%uC640%20%uB85C%uC9C1%uC744%20%uAC00%uC9C0%uACE0%20%uC788%uB2E4.%20%uADF8%uB4E4%uC758%20%uC5ED%uD65C%uC740%20%uBB54%uAC00%20%uBE44%uC2B7%uD55C%uB370%2C%20MVC%uC5D0%uC11C%uC758%20%uBAA8%uB378%uC774%20%uADF8%uAC83%uC774%uB2E4.%20%uADF8%uB7EC%uB098%20%uADF8%uB4E4%uC740%20%uB2E4%uC591%uD55C%20%uC624%uBE0C%uC81D%uD2B8%uC758%20%uC0C1%uD0DC%28state%29%uB97C%20%uAD00%uB9AC%uD55C%uB2E4.%20%uADF8%uB4E4%uC740%20ORM%20%uBAA8%uB378%uC774%20%uD558%uB4EF%20%uD558%uB098%uC758%20%uB2E8%uC21C%uD55C%20%uB808%uCF54%uB4DC%uB85C%20%uD45C%uD604%uB420%20%uC218%20%uC5C6%uB2E4.%20Backbone%uC758%20%uCF5C%uB809%uC158%uACFC%uB3C4%20%uB9C8%uCC2C%uAC00%uC9C0%uB85C%20%uB2E4%uB974%uB2E4.%20%uAC04%uB2E8%uD788%20ORM%20%uC2A4%uD0C0%uC77C%uC758%20%uC624%uBE0C%uC81D%uD2B8%uB97C%20%uAD00%uB9AC%uD558%uB294%20%uAC83%20%uADF8%20%uC774%uC0C1%uC774%uB2E4.%20%uC2A4%uD1A0%uC5B4%uB294%20%uD2B9%uBCC4%uD55C%20%uB3C4%uBA54%uC778%28%uCC45%uC784%uC601%uC5ED%29%uC744%20%uC704%uD55C%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20%uC0C1%uD0DC%28state%29%uB97C%20%uAD00%uB9AC%uD55C%uB2E4.%20%0A%0A%uC608%uB97C%20%uB4E4%uC5B4%uBCF4%uC790.%20%uD398%uC774%uC2A4%uBD81%uC758%20Lookback%20Video%20Editor%uB294%20%uACC4%uC18D%20%uC7AC%uC0DD%uC2DC%uAC04%uC758%20%uC704%uCE58%uC640%20%uC7AC%uC0DD%20%uC0C1%uD0DC%uB97C%20%uD2B8%uB798%uD0B9%uD558%uB294%20TimeStore%uB97C%20%uC0AC%uC6A9%uD55C%uB2E4.%20%20%uD55C%uD3B8%2C%20%uAC19%uC740%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20ImageStore%uB294%20%uACC4%uC18D%20%uC774%uBBF8%uC9C0%uB4E4%uC758%20%uCEEC%uB809%uC158%uC744%20%uD2B8%uB798%uD0B9%uD55C%uB2E4.%20%uC6B0%uB9AC%20TodoMVC%20Example%uC5D0%20%uC788%uB294%20TodoStore%uB3C4%20%uBE44%uC2B7%uD55C%uB370%20todo%20%uC544%uC774%uD15C%uC758%20%uCEEC%uB809%uC158%uC744%20%uB2E4%uB8EC%uB2E4.%20%uC2A4%uD1A0%uC5B4%uB294%202%uAC00%uC9C0%20%uD2B9%uC131%uC744%20%uBCF4%uC778%uB2E4.%20%uD558%uB098%uB294%20%uBAA8%uB378%uB4E4%uC758%20%uCEEC%uB809%uC158%uC774%uACE0%20%uB610%20%uB2E4%uB978%20%uD558%uB098%uB294%20%uB17C%uB9AC%uC801%uC778%20%uB3C4%uBA54%uC778%uC758%20%uC2F1%uAE00%uD1A4%20%uBAA8%uB378%uC774%uB2E4.%0A%0A%uC704%uC5D0%uB3C4%20%uC774%uC57C%uAE30%uD588%uB4EF%2C%20%uC2A4%uD1A0%uC5B4%uB294%20%uADF8%uB4E4%20%uC2A4%uC2A4%uB85C%uB97C%20%uB514%uC2A4%uD328%uCC98%uC5D0%uAC8C%20callback%uACFC%20%uD568%uAED8%20%uC9C1%uC811%20%uB4F1%uB85D%uD55C%uB2E4.%20%uC774%20callback%uC740%20%uC561%uC158%uC744%20%uD30C%uB798%uBA38%uD130%uB85C%20%uBC1B%uB294%uB2E4.%20%uC2A4%uD1A0%uC5B4%uAC00%20%uB4F1%uB85D%uD55C%20%uCF5C%uBCA1%20%uC548%uC5D0%uC11C%2C%20%uC561%uC158%uD0C0%uC785%uC5D0%20%uAE30%uBC18%uD55C%20switch%uBB38%uC740%20%uC561%uC158%uC744%20%uBC88%uC5ED%uD558%uB294%uB370%20%uC0AC%uC6A9%uB420%20%uBFD0%uB9CC%20%uC544%uB2C8%uB77C%20%uC2A4%uD1A0%uC5B4%20%uB0B4%uBD80%uC758%20%uBA54%uC18C%uB4DC%uB4E4%uC5D0%uAC8C%20%uC801%uC808%uD55C%20%uD6C5%28hook%29%uC744%20%uC81C%uACF5%uD558%uB294%uB370%20%uC0AC%uC6A9%uB41C%uB2E4.%20%uC774%uAC83%uC740%20%uC561%uC158%uC774%20%uB514%uC2A4%uD328%uCC98%uB97C%20%uD1B5%uD574%20%uC2A4%uD1A0%uC5B4%uC758%20%uC0C1%uD0DC%20%uC5C5%uB370%uC774%uD2B8%uB97C%20%uAC00%uB2A5%uD558%uB3C4%uB85D%20%uD55C%uB2E4.%20%uC2A4%uD1A0%uC5B4%uAC00%20%uC5C5%uB370%uC774%uD2B8%20%uB41C%20%uD6C4%2C%20%uADF8%uB4E4%uC740%20%uC2A4%uD14C%uC774%uD2B8%uAC00%20%uBC14%uB00C%uC5C8%uB2E4%uB294%20%uC774%uBCA4%uD2B8%uB97C%20%uB0B4%uBFDC%uB294%uB370%2C%20%uC774%uB97C%20%uD1B5%uD574%20%uBDF0%uB4E4%uC740%20%uC0C8%uB85C%uC6B4%20%uC0C1%uD0DC%uB97C%20%uC9C8%uC758%uD560%20%uC218%20%uC788%uACE0%2C%20%uADF8%uB4E4%20%uC2A4%uC2A4%uB85C%uB97C%20%uC5C5%uB370%uC774%uD2B8%20%uD55C%uB2E4.%0A%0A%23%uBDF0%28Views%29%uC640%20Controller-Views%0A%0A%uC6B0%uB9AC%uAC00%20%uBDF0%uB808%uC774%uC5B4%uC5D0%uC11C%20%uD544%uC694%uB85C%20%uD558%uB294%20%uAD6C%uC131%20%uAC00%uB2A5%uD55C%20%uC885%uB958%uC758%2C%20%uADF8%uB9AC%uACE0%20%uC790%uC720%uB86D%uAC8C%20%uBBF8%uB9AC%20%uB79C%uB354%uD560%20%uC218%20%uC788%uB294%20%uBDF0%uB4E4%uC744%20React%uB294%20%uC81C%uACF5%uD55C%uB2E4.%20%uC5BD%uD600%uC788%uB294%20%uBDF0%20%uACC4%uAE09%uC758%20%uCD5C%uC0C1%uB2E8%uC744%20%uAC00%uAE4C%uC774%uC5D0%uC11C%20%uBCF4%uBA74%2C%20%uC5B4%uB5A4%20%uBDF0%uAC00%20%uC758%uC874%uD558%uB294%20%uC2A4%uD1A0%uC5B4%uAC00%20%uBE0C%uB85C%uB4DC%uCE90%uC2A4%uD2B8%uD558%uB294%20%uC774%uBCA4%uD2B8%uB4E4%uC744%20%uB9AC%uC2A4%uB2DD%uD558%uB294%20%uD2B9%uBCC4%uD55C%20%uBDF0%uB4E4%uC774%20%uC874%uC7AC%uD55C%uB2E4.%20%uC6B0%uB9AC%uB294%20%uC774%uAC78%20%uCEE8%uD2B8%uB864%20%uBDF0%uB77C%uACE0%20%uBD80%uB978%uB2E4.%20%uADF8%uB4E4%uC740%20%uB370%uC774%uD130%uB97C%20%uC2A4%uD1A0%uC5B4%uC5D0%uC11C%20%uAC00%uC838%uC624%uAC70%uB098%20%uD639%uC740%20%uADF8%uB4E4%uC758%20%uD6C4%uC190%uB4E4%uC5D0%uAC8C%20%uB370%uC774%uD130%uB97C%20%uB0B4%uB824%uC8FC%uB294%uC77C%uC744%20%uC704%uD55C%20%uC811%uCC29%20%uCF54%uB4DC%uB97C%20%uC81C%uACF5%uD55C%uB2E4.%20%uC6B0%uB9AC%uB294%20%uC774%uB7F0%20%uCEE8%uD2B8%uB864%20%uBDF0%uB4E4%uC5D0%uAC8C%20%uC911%uC694%uD55C%20%uC139%uC158%20%uD558%uB098%uB97C%20%uD560%uB2F9%uD574%20%uC8FC%uC5B4%uC57C%20%uD560%20%uAC83%20%uAC19%uB2E4.%0A%0A%uC774%uBCA4%uD2B8%uB97C%20%uC2A4%uD1A0%uC5B4%uC5D0%uC11C%20%uBC1B%uC558%uC744%20%uB54C%2C%20%uC2A4%uD1A0%uC5B4%uC758%20public%20getter%20%uBA54%uC18C%uB4DC%uB4E4%uB85C%20%uD544%uC694%uD55C%20%uC0C8%20%uB370%uC774%uD130%uB97C%20%uBA3C%uC800%20%uC694%uCCAD%uD55C%uB2E4.%20%uC774%uD6C4%20%uC790%uC2E0%uC758%20%60setState%28%29%60%uD639%uC740%20%60forceUpdate%28%29%60%uBA54%uC18C%uB4DC%28%uADF8%uAC83%uC758%20%60render%28%29%60%uBA54%uC18C%uB4DC%uC640%20%uD558%uBD80%20%uC790%uC190%uB4E4%uC758%20%60render%28%29%60%20%uBA54%uC18C%uB4DC%uB4E4%uC744%20%uC2E4%uD589%uD558%uB294%29%uB4E4%uC744%20%uD638%uCD9C%uD55C%uB2E4.%20%0A%uC6B0%uB9AC%uB294%20%uC790%uC8FC%20%uC2A4%uD1A0%uC5B4%uC758%20%uC804%uCCB4%20%uC0C1%uD0DC%28state%29%uB97C%20%uBDF0%uB4E4%uC758%20%uCCB4%uC778%uC774%20%uC788%uB294%20%uD558%uBD80%uB85C%20%uC804%uB2EC%uD55C%uB2E4.%20%uC774%uAC83%uC740%20%uB2E4%uB978%20%uD6C4%uC190%uB4E4%uC774%20%uADF8%uB4E4%uC774%20%uD544%uC694%uB85C%20%uD558%uB294%20%uAC83%uC744%20%uC0AC%uC6A9%uD560%20%uC218%20%uC788%uB3C4%uB85D%20%uD5C8%uB77D%uD55C%uB2E4.%20%uAC8C%uB2E4%uAC00%20%uAC00%uC7A5%20%uCD5C%uC0C1%uC704%uC5D0%uC11C%uB3C4%20%uCEE8%uD2B8%uB864%uB7EC%20%uBE44%uC2B7%uD55C%20%uD589%uB3D9%uC744%20%uC720%uC9C0%uD558%uAE30%2C%20%uB610%20%uC774%uB807%uAC8C%20%uC6B0%uB9AC%uC758%20%uC790%uC190%20%uBDF0%uB4E4%uC744%20%uC720%uC9C0%uD558%uAE30%20%uC704%uD574%2C%20%uAC00%uB2A5%uD55C%uD55C%20%uAE30%uB2A5%uC801%uC73C%uB85C%20%uD4E8%uC5B4%uD558%uAC8C%20%uBAA8%uB4E0%20%uC2A4%uD1A0%uC5B4%uC758%20%uC0C1%uD0DC%uB97C%20%uC2F1%uAE00%20%uC624%uBE0C%uC81D%uD2B8%uB85C%20%uD558%uBD80%uC5D0%20%uC804%uB2EC%uD558%uB294%20%uAC83%uC740%20%uC6B0%uB9AC%uAC00%20%uAD00%uB9AC%uD574%uC57C%uD560%20%uD504%uB85C%uD37C%uD2F0%uB4E4%uC758%20%uC218%uB97C%20%uC904%uC5EC%uC8FC%uB294%20%uD6A8%uACFC%uAC00%20%uC788%uB2E4.%0A%0A%uAC00%uB054%2C%20%uC6B0%uB9AC%uB294%20%uC548%uCABD%28%uCD5C%uC0C1%uC704%uAC00%20%uC544%uB2CC%29%20%uCEE8%uD2B8%uB864%20%uBDF0%uB97C%20%uCEF4%uD3EC%uB10C%uD2B8%uB97C%20%uAC04%uB2E8%uD788%20%uC720%uC9C0%uD558%uAE30%20%uC704%uD574%20%uAC00%uB054%20%uCD94%uAC00%uD560%20%uD544%uC694%uB97C%20%uB290%uB080%uB2E4.%20%uC774%uAC83%uC740%20%uD2B9%uC815%20%uB3C4%uBA54%uC778%uC758%20%uC139%uC158%uC758%20%uACC4%uCE35%uC744%20%uB354%20%uB0AB%uAC8C%20%uCEA1%uC290%uD654%20%uD560%20%uC218%20%uC788%uAC8C%20%uD574%uC8FC%uAE30%uB3C4%20%uD55C%uB2E4.%20%uADF8%uB7EC%uB098%20%uC548%uCABD%uC758%20%uCEE8%uD2B8%uB864%uB7EC%uBDF0%uB294%20%uD558%uB098%uC758%20%uB370%uC774%uD130%20%uD750%uB984%uC744%20%uAE70%20%uC218%uB3C4%20%uC788%uB2E4%uB294%20%uC810%uC744%20%uC54C%uC544%uC57C%uD55C%uB2E4.%20%uC774%uB7F0%20%uCEE8%uD2B8%uB864%20%uBDF0%uB294%20%uC0C8%uB85C%uC6B4%20%uB370%uC774%uD130%20%uD750%uB984%uC744%20%uC704%uD55C%20%uC5D4%uD2B8%uB9AC%20%uD3EC%uC778%uD2B8%uB97C%20%uB9CC%uB4E4%20%uC218%20%uC788%uC73C%uBA70%2C%20%uC774%uB294%20%uC7A0%uC7AC%uC801%uC778%20%uCDA9%uB3CC%20%uAC00%uB2A5%uC131%uC744%20%uAC00%uC9C0%uACE0%20%uC788%uB2E4.%20%uC548%uCABD%uC758%20%uCEE8%uD2B8%uB864%20%uBDF0%uB97C%20%uB9CC%uB4E4%20%uB54C%uB294%20%uAC04%uB2E8%uD55C%20%uCEF4%uD3EC%uB10C%uD2B8%uC758%20%uC774%uC810%uACFC%20%uBCF5%uC7A1%uD55C%20%uB2E4%uC218%uC758%20%uC5C5%uB370%uC774%uD2B8%20%uC0AC%uC774%uC5D0%uC11C%20%uC870%uC728%uC744%20%uD574%uC57C%uD55C%uB2E4.%20%uC774%uB7EC%uD55C%20%uB2E4%uC218%uC758%20%uB370%uC774%uD130%20%uC5C5%uB370%uC774%uD2B8%uB294%20%uC758%uB3C4%uCE58%20%uC54A%uC740%20%uC601%uD5A5%uC744%20%uB9CC%uB4E4%20%uC218%20%uC788%uB294%uB370%2C%20%uB2E4%uB978%20%uCEE8%uD2B8%uB864%uBDF0%uC5D0%20%uC758%uD574%20%uACC4%uC18D%uC801%uC73C%uB85C%20%uD638%uCD9C%uB418%uB294%20React%uC758%20%uB80C%uB354%uB9C1%20%uBA54%uC18C%uB4DC%uC758%20getting%uC5D0%uC11C%20%uADF8%uB807%uB2E4.%20%uADF8%uB9AC%uACE0%20%uC774%uAC74%20%uC7A0%uC7AC%uC801%uC73C%uB85C%20%uB514%uBC84%uAE45%uC758%20%uC5B4%uB824%uC6C0%uC744%20%uC99D%uAC00%uC2DC%uD0AC%20%uC218%20%uC788%uB2E4.%0A%0A%23%20%uC561%uC158%28Actions%29%0A%0A%uC6B0%uB9AC%uAC00%20%uC2A4%uD1A0%uC5B4%uC5D0%uAC8C%20%uBD84%uBC30%28dispatch%29%uB97C%20%uD2B8%uB9AC%uAC70%uD560%20%uC218%20%uC788%uB3C4%uB85D%2C%20%uADF8%uB9AC%uACE0%20%uB370%uC774%uD130%20%uD398%uC774%uB85C%uB4DC%20-%20%uC774%uAC83%uC774%20%uC6B0%uB9AC%uAC00%20%uBD80%uB974%uB294%20%uC561%uC158%20-%20%uB97C%20%uD3EC%uD568%20%uD560%20%uC218%20%uC788%uAC8C%20%uB514%uC2A4%uD328%uCC98%uB294%20%uD55C%20%uBA54%uC18C%uB4DC%uB97C%20%uB178%uCD9C%uC2DC%uD0A8%uB2E4.%20%uC2DC%uBA58%uD2F1%uD55C%20%uD5EC%uD37C%20%uBA54%uC18C%uB4DC%20%uC548%uC5D0%2C%20%uC5D1%uC158%uC758%20%uC0DD%uC131%uC740%20%uC544%uB9C8%20%uB798%uD551%uB418%uC5B4%uC788%uC744%20%uAC83%uC774%uB2E4.%20%uADF8%uAC83%uC740%20%uC561%uC158%uC744%20%uB514%uC2A4%uD328%uCC98%uC5D0%uAC8C%20%uBCF4%uB0B8%uB2E4.%20%uC608%uB97C%uB4E4%uC5B4%2C%20%uC6B0%uB9AC%uB294%20To-do%20%uC544%uC774%uD15C%uC758%20%uAE00%uC790%uB97C%20To-do%20List%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC5D0%uC11C%20%uBC14%uAFB8%uAE38%20%uC6D0%uD560%20%uC218%20%uC788%uB2E4.%20%uC6B0%uB9AC%uB294%20TodoActions%20%uBAA8%uB4C8%20%uC548%uC5D0%20%60updateText%28todoId%2C%20newText%29%60%uAC19%uC740%20%uD568%uC218%uB85C%20%uC561%uC158%uC744%20%uC0DD%uC131%uD55C%uB2E4.%20%uC774%20%uBA54%uC18C%uB4DC%uB4E4%uC740%20%uC544%uB9C8%20%uC6B0%uB9AC%uC758%20%uBDF0%20%uC774%uBCA4%uD2B8%20%uD578%uB4E4%uB7EC%uC5D0%20%uC758%uD574%20%uD638%uCD9C%uB420%20%uAC83%uC774%uB2E4.%20%uC6B0%uB9AC%uB294%20%uC774%uAC83%uC744%20%uC720%uC800%20%uC778%uD130%uB809%uC158%uC758%20%uACB0%uACFC%uB77C%20%uBD80%uB97C%20%uC218%20%uC788%uB2E4.%20%uC774%20%uC561%uC158%20%uC0DD%uC131%20%uBA54%uC18C%uB4DC%uB294%20%uB610%uD55C%20%uC561%uC158%uC5D0%uAC8C%20%uD0C0%uC785%uC744%20%uCD94%uAC00%uD55C%uB2E4.%20%uADF8%uB798%uC11C%20%uC561%uC158%uC774%20%uC2A4%uD1A0%uC5B4%uC5D0%uC11C%20%uD574%uC155%uB420%20%uB54C%2C%20%uC801%uC808%uD558%uAC8C%20%uC751%uB2F5%uD560%20%uC218%20%uC788%uB3C4%uB85D%20%uD55C%uB2E4.%20%uC6B0%uB9AC%uC758%20%uC608%uC2DC%uC5D0%uC11C%uB294%20%uC774%uB7F0%20%uD0C0%uC785%uC740%20%uC544%uB9C8%20TODO_UPDATE_TEXT%uAC19%uC774%20%uC774%uB984%20%uBD99%uC5EC%uC9C8%20%uAC83%uC774%uB2E4.%0A%0A%uC561%uC158%uC740%20%uC544%uB9C8%20%uB2E4%uB978%20%uC7A5%uC18C%uB4E4%uC5D0%uC11C%20%uC62C%uB54C%uB3C4%20%uC788%uB2E4%2C%20%uC11C%uBC84%uAC19%uC740%20%uACF3%uC5D0%uC11C.%20%uC608%uB97C%uB4E4%uC5B4%2C%20%uB370%uC774%uD130%uB97C%20%uCD08%uAE30%uD654%uD558%uB294%20%uB3D9%uC548%20%uC774%uB7F0%uC77C%uC774%20%uC77C%uC5B4%uB09C%uB2E4.%20%uB610%20%uB9C8%uCC2C%uAC00%uC9C0%uB85C%20%uC11C%uBC84%uAC00%20%uC5D0%uB7EC%uCF54%uB4DC%uB97C%20%uBC18%uD658%uD560%uB54C%uB098%20%uD639%uC740%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC744%20%uC5C5%uB370%uC774%uD2B8%uD560%uB54C%20%uAC19%uC744%uB54C%uB3C4%20%uC77C%uC5B4%uB09C%uB2E4.%0A%0A%23%20%uB514%uC2A4%uD328%uCC98%uB97C%20%uC880%20%uB354%20%uBCF4%uBA74%2C%0A%0A%uC544%uAE4C%20%uC598%uAE30%uD588%uC9C0%uB9CC%2C%20%uB514%uC2A4%uD328%uCC98%uB294%20%uC2A4%uD1A0%uC5B4%uB4E4%20%uC0AC%uC774%uC758%20%uB514%uD39C%uB358%uC2DC%uB3C4%20%uAD00%uB9AC%uAC00%20%uAC00%uB2A5%uD558%uB2E4.%20%uC774%uB7F0%20%uAE30%uB2A5%uC740%20%uB514%uC2A4%uD328%uCC98%20%uD074%uB798%uC2A4%uC758%20waitFor%28%29%20%uBA54%uC18C%uB4DC%uB97C%20%uD1B5%uD574%20%uAC00%uB2A5%uD558%uB2E4.%20%uC6B0%uB9AC%uB294%20%uC9C0%uAE08%20%uC774%uB7F0%20%uBA54%uC18C%uB4DC%uB97C%20%uC4F8%20%uD544%uC694%uAC00%20%uC5C6%uB2E4.%20%uC65C%uB0D0%uBA74%20TodoMVC%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC774%20%uAD49%uC7A5%uD788%20%uB2E8%uC21C%uD558%uB2C8%uAE4C.%20%uADF8%uB7EC%uB098%20%uC774%uAC83%uC740%20%uD06C%uACE0%20%uBCF5%uC7A1%uD55C%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC5D0%uC120%20%uD65C%uC131%uD654%uB420%20%uAC83%uC774%uB2E4.%0A%0ATodoStore%uC758%20%uB4F1%uB85D%uB41C%20%uCF5C%uBCA1%20%uC548%uC5D0%uC11C%20%uC6B0%uB9AC%uB294%20%uBA85%uC2DC%uC801%uC73C%uB85C%20%uC9C4%uD589%uC804%uC5D0%20%uB2E4%uB978%20%uB514%uD39C%uB358%uC2DC%uB4E4%uC774%20%uBA3C%uC800%20%uC5C5%uB370%uC774%uD2B8%20%uB418%uB3C4%uB85D%20%uAE30%uB2E4%uB9B4%20%uC218%20%uC788%uB2E4.%20%0A%0A%60%60%60%0Acase%20%27TODO_CREATE%27%3A%0A%20%20Dispatcher.waitFor%28%5B%0A%20%20%20%20PrependedTextStore.dispatchToken%2C%0A%20%20%20%20YetAnotherStore.dispatchToken%0A%20%20%5D%29%3B%0A%0A%20%20TodoStore.create%28PrependedTextStore.getText%28%29%20+%20%27%20%27%20+%20action.text%29%3B%0A%20%20break%3B%0A%0A%60%60%60%0A%0A%60waitFor%28%29%60%uC740%20%uD55C%uAC00%uC9C0%20argument%uB9CC%20%uBC1B%uB294%uB2E4.%20%uADF8%20argument%uB294%20%uB514%uC2A4%uD328%uCC98%uC758%20%uCF5C%uBC31%20%uC800%uC7A5%uC18C%28%uB808%uC9C0%uC2A4%uD2B8%uB9AC%29%20%uC778%uB371%uC2A4%uB2E4.%20%uC774%uAC83%uC744%20%uC6B0%uB9AC%uB294%20dispatch%20tokens%uC774%uB77C%20%uBD80%uB978%uB2E4.%20%uC774%uC640%uAC19%uC774%20waitFor%28%29%uB97C%20%uD638%uCD9C%uD558%uB294%20%uC2A4%uD1A0%uC5B4%uB294%20%uADF8%uAC83%uC774%20%uADF8%20%uC790%uC2E0%uC758%20%uC2A4%uD14C%uC774%uD2B8%uB97C%20%uC5B4%uB5BB%uAC8C%20%uC5C5%uB370%uC774%uD2B8%20%uD574%uC57C%uD558%uB294%uC9C0%20%uC54C%uB824%uC8FC%uAE30%20%uC704%uD55C%20%uB2E4%uB978%20%uC2A4%uD1A0%uC5B4%uC758%20%uC0C1%uD0DC%uC5D0%20%uC758%uC874%uD560%20%uC218%20%uC788%uB2E4.%0A%0A%uB514%uC2A4%uD328%uCC98%20%uD1A0%uD070%uC740%20%uB514%uC2A4%uD328%uCC98%uC5D0%20%uCF5C%uBCA1%uC744%20%uB4F1%uB85D%uD560%20%uB54C%20%60register%28%29%60%uC758%20%uBC18%uD658%uAC12%uC774%uB2E4.%0A%0A%60%60%60%0APrependedTextStore.dispatchToken%20%3D%20Dispatcher.register%28function%20%28payload%29%20%7B%0A%20%20//%20...%0A%7D%29%3B%0A%0A%60%60%60%0A%60waitFor%28%29%60%uC774%uB098%20actions%2C%20action%20creators%20%uADF8%uB9AC%uACE0%20%uB514%uC2A4%uD328%uCC98%uC5D0%20%uB300%uD574%20%uB354%20%uC790%uC138%uD55C%uAC78%20%uC6D0%uD558%uBA74%20%20%5BFlux%3A%20Actions%20and%20the%20Dispatcher%5D%28http%3A//facebook.github.io/react/blog/2014/07/30/flux-actions-and-the-dispatcher.html%29%20%uB97C%20%uBCF4%uC790.&lt;/center&gt;
&lt;br /&gt;&lt;/en-note&gt;</description>
<category>Develop</category>
<category>facebook</category>
<category>Flux</category>
<category>frontend</category>
<category>JavaScript</category>
<category>react</category>
<category>Web</category>
<category>페이스북</category>
<author>youngkyu.cho</author>
<guid>http://dev.youngkyu.kr/38</guid>
<comments>http://dev.youngkyu.kr/38#entry38comment</comments>
<pubDate>Wed, 01 Jun 2016 02:28:48 +0900</pubDate>
</item>
<item>
<title>안드로이드 엑티비티란?</title>
<link>http://dev.youngkyu.kr/37</link>
<description>&lt;en-note lang=&quot;v2&quot; style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;&lt;del style=&quot;position:relative;display:block;z-index:10;&quot;&gt;&lt;a style=&quot;position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;&quot; href=&quot;http://marxi.co/#/?provider=evernote_int&amp;amp;guid=c6197b0c-4c8f-4ff3-b7fa-33bd68af0928&amp;amp;notebook=youngkyu.cho&quot;&gt;Edit&lt;/a&gt;&lt;/del&gt;&lt;div style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;
                        &lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
                    &lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; color: rgba(0,0,0,0.8); line-height: 1.6;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;티스토리&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;안드로이드&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;android&lt;/code&gt; &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 엑티비티란?&lt;/h1&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;들어가기 전에.&lt;/p&gt;
  
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;모든 내용은 개인적인 안드로이드 학습을 위해 정리 것이다. 공식 홈페이지인 &lt;a href=&quot;https://developer.android.com/training/basics/activity-lifecycle/starting.html&quot; target=&quot;_blank&quot; style=&quot;background: transparent; color: #1980e6; text-decoration: none;&quot;&gt;이곳&lt;/a&gt; 안드로이드 디벨로퍼 페이지를 참고했으며, 개인적으로 약간의 번역과 의역을 붙여 이해한 내용을 풀어적었다. 혹시 처음 시작하는 누군가에게 도움이 될지 몰라 올린다. 잘못된 것이 있다면 알려주기 바란다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;액티비티란?&lt;/h1&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Activities&lt;/code&gt; &lt;br /&gt;
  An activity is one of the distinguishing features of the Android framework. Activities provide the user with access to your app, and there may be many activities. An application will usually have a main activity for when the user launches the application, another activity for when she selects some content to view, for example, and other activities for when she performs other tasks within the app. See Activities for more information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 프레임워크가 제공하는 엑티비티는 사용자가 앱에 접근할 수 있도록 하며, 다양한 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;활동(작업)&lt;/code&gt;을 할 수 있도록 하는 일종의 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;페이지&lt;/code&gt;입니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;액티비티 시작하기&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;main()&lt;/code&gt;으로 시작하는 다른 프로그래밍 패러다임과는 다르게 안드로이드는 안드로이드 프레임워크를가&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Avtivity&lt;/code&gt; 인스턴스들(안드로이드의 )의 라이프사이클을 관리합니다. 각 라이프사이클 stage가 바뀌는 매 순간마다, 해당 시점에 대응되는 Callback 메소드를 실행합니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:662px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2151A936574DC8CD0D&quot; filemime=&quot;image/png&quot; filename=&quot;./1464711552621.png&quot; height=&quot;295&quot; width=&quot;662&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티는 라이프 타임 동안에 각 스테이지가 순차적으로 진행됩니다. 즉 각 메소드(콜백)을 순차적으로 실행하게 됩니다. 각각의 콜백 메소드가 끝난 후 액티비티의 상태는 한단계 올라갑니다. 마치 피라미드처럼. 피라미드의 최상층은 엑티비티가 전면에서 실행중이며 사용자가 상호작용할 수 있는 상태를 뜻합니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;액티비티를 사용자가 종료하게 되면 액티비티는 하향이동하는 다른 메소드를 호출합니다. 사용자가 앱을 전환하는 경우 완전히 하향하지않고 기다리기도 합니다. 이런 경우 다시 최상층으로 올라갈 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티의 복잡한 정도에 따라 모든 라이프사이클 메소드를 구현할 필요가 없을 수도 있습니다. 각각의 라이프사이클을 이해하는 것은 사용자가 예상한대로 앱이 동작함을 보장하기 위해 중요합니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onCreate()&lt;/code&gt;가 호출된 후 바로 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStart()&lt;/code&gt;가, 그리고 즉시 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onResume()&lt;/code&gt;이 호출됩니다.  &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onCreate()&lt;/code&gt;메소드에서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;finish()&lt;/code&gt;를 호출하는 경우를 제외하고 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;을 먼저 호출한 후에 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onDestroy()&lt;/code&gt;를 호출합니다. 경우에 따라 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onCreate()&lt;/code&gt;에서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;finish()&lt;/code&gt;를 호출해야하는 경우가 있는데, 에깉비티가 다른 엑티비티를 실행하기 위한 용도일 경우가 바로 그것입니다. 이 경우 시스템은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onDestory()&lt;/code&gt;만을 호출합니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티의 일시정지와 재개&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티가 일시 중지되는 경우가 있습니다. 엑티비티가 부분적으로 보이지만, 현재 포커스 되어있지 않다면 일시정지 상태입니다. 그러나 엑티비티가 완전히 사려지면, 정지상태가 됩니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티가 일시정지 상태가 되면 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;가 호출됩니다. 이런 엑티비티는 언제나 다시 포커스가 돌아올 수 있습니다. 그러나 이는 엑티비티를 떠날 것임을 이야기하는 첫번째 신호입니다. 만약 사용자가 다시 돌아온다면 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onResume()&lt;/code&gt;이 호출되겠지요.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;뒤 곧 정지 상태로 전환될 확률이 높습니다. 따라서 CPU 소비를 하는 작업, 저장되지 않은 변경 내용의 커밋, 브로드 캐스트 리시버와 같은 시스템 리소스, 각종 센서, 배터리 수명에 영향을 미치는 혹은 사용자가 필요로 하지 않는 리소스에 대한 해지를 여기서 해주어야 합니다. 카메라를 사용하는 엑티비티라면, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;는 이를 해제할 수 있는 좋은 위치죠.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;작업은 다음 엑티비티로 자연스럽게 넘어가기 위해 가볍게 유지합니다. 나머지 로드가 많은 셧다운 작업은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;에서 수행합니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onResume()&lt;/code&gt;은 사용자가 일시정지된 엑티비티를 재개할 때 호출됩니다. 엑티비티가 전면에 표시될 때 마다 이 메소드는 호출됩니다. 따라서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onResume()&lt;/code&gt;때는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt; 타이밍에 릴리즈한 모든 리소스를 초기화하는 작업이 포함되어야 합니다. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;참고로, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onResume()&lt;/code&gt;과 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;는 보통 서로 짝을 이뤄 작동시킵니다. 한쪽은 리소스 얻기, 한쪽은 놓아주기.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티 정지 및 재시작&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티를 제대로 정지하고 재시작하는 것은 중요한 프로세스입니다. 이런 프로세스가 완벽히 동작해야 앱이 항상 작동 상태를 유지하고 진행 상태를 잃지 않는다는 신뢰를 사용자에게 줄 수 있습니다. 다음과 같은 시나리오는 엑티비티가 정지되었다가 재시작되는 상황입니다.&lt;/p&gt;

&lt;ul style=&quot;margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;사용자가 최근 앱 창을 열고 다른 엑티비티로 전환하면, 현재 전면에 있는 엑티비티는 정지됩니다. 사용자가 다시 앱창으로 돌아오면, 엑티비티는 재시작됩니다.&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;사용자가 앱에서 새 엑티비티를 시작합니다. 두번째 엑티비티가 생성되면, 현 엑티비티는 정지되고, 뒤로가기를 누르면 다시 재시작됩니다.&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;사용자가 앱을 이용하는 도중 전화가 걸려 옵니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;과 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestrat()&lt;/code&gt;는 정지와 재시작의 처리를 명확히 할 수 있는 메소드입니다. 부분적인 UI 차단은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;가 호출되고, UI가 화면에 보이지 않으면 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;이 호출됨으로서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;때 사용자의 포커스가 별도의 엑티비티(혹은 다른 앱)에 있음을 보장합니다. 이때 사용자가 사용하지 않는 거의 모든 리소스를 해제해야합니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티가 정지되고 나면, 시스템이 메모리를 회수 해야하는 경우, 해당 인스턴스를 소멸시킵니다. (원래는 소멸시키지 않습니다. 메모리에 보관해 둡니다.) 급한 경우 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onDestroy()&lt;/code&gt;를 호출하지 않고 프로세스를 Kill할 수 있습니다. 따라서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;타이밍에 메모리 누수를 야기할 수 있는 리소스는 반드시 해제해야합니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onPause()&lt;/code&gt;때 다 하지 못한 데이터베이스에 기록하는 작업, CPU 많이 사용하는 작업등은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;타이밍에 합니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티가 정지되면, Activity 객체는 메모리에 계속 유지되고 있다가 재개때 다시 호출됩니다. 따라서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onResume()&lt;/code&gt;타이밍에 생성한 구성요소는 다시 초기화 할 필요가 없습니다. 뿐만 아니라 레이아웃에 있는 모든 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;View&lt;/code&gt;의 상태도 함께 메모리에 유지됩니다. 따라서 저장, 복원을 따로 해줄 필요가 없습니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티가 정지된 상태에서 다시 시작될 때 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestart()&lt;/code&gt;가 호출됩니다. 이때 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStart()&lt;/code&gt;도 연달아 호출됩니다. 따라서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestart()&lt;/code&gt;때는 특수한 복원 작업을 수행하면 좋습니다. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;때 리소스가 릴리즈 되었으나, 앱을 처음 킬 때 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStart()&lt;/code&gt;가 호출되며 초기화 했듯,  &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestart()&lt;/code&gt;호출 때도 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStart()&lt;/code&gt;가 호출되며 다시 리소스를 가져 올 것입니다.따라서 따로 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestart()&lt;/code&gt;때 따로 코드를 넣어주지 않아도 정상 작동합니다. 여기서 중요한 것은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStop()&lt;/code&gt;과 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStart()&lt;/code&gt;가 서로 짝을 이뤄 사용되어야 한다는 것입니다. &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onStart()&lt;/code&gt;는 필요한 시스템 리소스, 기능이 제대로 구비되었는지 확인하는 가장 좋은 장소입니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티 재생성&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;정상적인 앱 동작으로도 엑티비티가 소멸되는 시나리오가 있습니다. 사용자가 뒤로를 누르거나, 엑티비티가 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;finish()&lt;/code&gt;를 호출하여 자체적으로 소멸 신호를 보내는 경우입니다.  이 경우, Activity는 완벽히 사라집니다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;엑티비티가 정지된 상태로 장시간 사용되지 않거나, 전면에 있는 엑티비티가 리소스가 더 필요해 시스템이 백그라운드 프로세스를 종료해 메모리를 회수하려는 경우에도 시스템이 엑티비티를 소멸시킬 수 있습니다. 이렇게 정상적인 앱 동작이 아닌, 시스템이 소멸시키는 경우 시스템은 Avtivity 인스턴스는 없애지만, 그것이 존재했었음은 기억합니다. 시스템이 이전 상태를 복원하기 위해 사용하는, 저장된 데이터를 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;인스턴스 상태(instance state)&lt;/code&gt;라 하며,  이는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Bundle&lt;/code&gt;객체에 저장된 키-값 쌍의 컬렉션 입니다.&lt;/p&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;참고로, 사용자가 화면을 회전할 때 마다 엑티비티는 소멸 후 재생성됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;기본적으로 자동으로 시스템은 Bundle 인스턴스에 레이아웃 view들의 상태를 저장합니다. 따라서 별도 코드 없이도 자동으로 복원이 됩니다. ()단 이때 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;android:id&lt;/code&gt; 애트리뷰트 값은 반드시 있어야 합니다.) 그러나 추가적으로 코드로 데이터를 직접 저장하고 핸들링 하고 싶다면 아래의 두개의 메소드를 이용합니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:469px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/24331C35574DC8CE01&quot; filemime=&quot;image/png&quot; filename=&quot;./1464714818812.png&quot; height=&quot;223&quot; width=&quot;469&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;final&lt;/span&gt; String STATE_SCORE = &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;playerScore&quot;&lt;/span&gt;;&lt;br /&gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;final&lt;/span&gt; String STATE_LEVEL = &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;playerLevel&quot;&lt;/span&gt;;&lt;br /&gt;...&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;line-height: 1.6;&quot;&gt;@Override&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;onSaveInstanceState&lt;/span&gt;&lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Save the user's current game state&lt;/span&gt;&lt;br /&gt;    savedInstanceState.putInt(STATE_SCORE, mCurrentScore);&lt;br /&gt;    savedInstanceState.putInt(STATE_LEVEL, mCurrentLevel);&lt;br /&gt;&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Always call the superclass so it can save the view hierarchy state&lt;/span&gt;&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;super&lt;/span&gt;.onSaveInstanceState(savedInstanceState);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onSaveInstanceState()&lt;/code&gt;를 이용해 엑티비티의 상태를 저장해 둘 수 있습니다. 이는 이후 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onCreate()&lt;/code&gt; 타이밍, 혹은 그 바로 다음인 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestoreInstanceState()&lt;/code&gt; 타이밍에 핸들링 할 수 있습니다. 단 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestoreInstanceState()&lt;/code&gt;는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Bundle&lt;/code&gt; 객체가 있을 경우(복원할 저장 데이터가 있을 경우)에 만 실행됩니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;line-height: 1.6;&quot;&gt;@Override&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;onCreate&lt;/span&gt;&lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Always call the superclass first&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Check whether we're recreating a previously destroyed instance&lt;/span&gt;&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (savedInstanceState != &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;null&lt;/span&gt;) {&lt;br /&gt;        &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Restore value of members from saved state&lt;/span&gt;&lt;br /&gt;        mCurrentScore = savedInstanceState.getInt(STATE_SCORE);&lt;br /&gt;        mCurrentLevel = savedInstanceState.getInt(STATE_LEVEL);&lt;br /&gt;    } &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;else&lt;/span&gt; {&lt;br /&gt;        &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Probably initialize members with default values for a new instance&lt;/span&gt;&lt;br /&gt;    }&lt;br /&gt;    ...&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onCreate()&lt;/code&gt;때 핸들링 하기 위해서는 반드시 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Bundle&lt;/code&gt;객체가 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;null&lt;/code&gt;인지 확인하여야 합니다. 그러나 이후 실행되는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onRestoreInstanceState()&lt;/code&gt;는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Bundle&lt;/code&gt;객체가 없으면 실행되지 않기에 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;null&lt;/code&gt;값에 대한 처리를 해주지 않아도 됩니다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #66d9ef;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;onRestoreInstanceState&lt;/span&gt;&lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Always call the superclass so it can restore the view hierarchy&lt;/span&gt;&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;super&lt;/span&gt;.onRestoreInstanceState(savedInstanceState);&lt;br /&gt;&lt;br /&gt;    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// Restore state members from saved instance&lt;/span&gt;&lt;br /&gt;    mCurrentScore = savedInstanceState.getInt(STATE_SCORE);&lt;br /&gt;    mCurrentLevel = savedInstanceState.getInt(STATE_LEVEL);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;center style=&quot;display:none&quot;&gt;@%5B%uD2F0%uC2A4%uD1A0%uB9AC%2C%uC548%uB4DC%uB85C%uC774%uB4DC%2Candroid%5D%0A%0A%23%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uC5D1%uD2F0%uBE44%uD2F0%uB780%3F%0A%0A%3E%20%uB4E4%uC5B4%uAC00%uAE30%20%uC804%uC5D0.%0A%3E%0A%3E%uBAA8%uB4E0%20%uB0B4%uC6A9%uC740%20%uAC1C%uC778%uC801%uC778%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD559%uC2B5%uC744%20%uC704%uD574%20%uC815%uB9AC%20%uAC83%uC774%uB2E4.%20%uACF5%uC2DD%20%uD648%uD398%uC774%uC9C0%uC778%20%5B%uC774%uACF3%5D%28https%3A//developer.android.com/training/basics/activity-lifecycle/starting.html%29%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uB514%uBCA8%uB85C%uD37C%20%uD398%uC774%uC9C0%uB97C%20%uCC38%uACE0%uD588%uC73C%uBA70%2C%20%uAC1C%uC778%uC801%uC73C%uB85C%20%uC57D%uAC04%uC758%20%uBC88%uC5ED%uACFC%20%uC758%uC5ED%uC744%20%uBD99%uC5EC%20%uC774%uD574%uD55C%20%uB0B4%uC6A9%uC744%20%uD480%uC5B4%uC801%uC5C8%uB2E4.%20%uD639%uC2DC%20%uCC98%uC74C%20%uC2DC%uC791%uD558%uB294%20%uB204%uAD70%uAC00%uC5D0%uAC8C%20%uB3C4%uC6C0%uC774%20%uB420%uC9C0%20%uBAB0%uB77C%20%uC62C%uB9B0%uB2E4.%20%uC798%uBABB%uB41C%20%uAC83%uC774%20%uC788%uB2E4%uBA74%20%uC54C%uB824%uC8FC%uAE30%20%uBC14%uB780%uB2E4.%0A%0A%0A%23%20%uC561%uD2F0%uBE44%uD2F0%3F%0A%0A%3E%20%60Activities%60%0AAn%20activity%20is%20one%20of%20the%20distinguishing%20features%20of%20the%20Android%20framework.%20Activities%20provide%20the%20user%20with%20access%20to%20your%20app%2C%20and%20there%20may%20be%20many%20activities.%20An%20application%20will%20usually%20have%20a%20main%20activity%20for%20when%20the%20user%20launches%20the%20application%2C%20another%20activity%20for%20when%20she%20selects%20some%20content%20to%20view%2C%20for%20example%2C%20and%20other%20activities%20for%20when%20she%20performs%20other%20tasks%20within%20the%20app.%20See%20Activities%20for%20more%20information.%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD504%uB808%uC784%uC6CC%uD06C%uAC00%20%uC81C%uACF5%uD558%uB294%20%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uC0AC%uC6A9%uC790%uAC00%20%uC571%uC5D0%20%uC811%uADFC%uD560%20%uC218%20%uC788%uB3C4%uB85D%20%uD558%uBA70%2C%20%uB2E4%uC591%uD55C%20%60%uD65C%uB3D9%28%uC791%uC5C5%29%60%uC744%20%uD560%20%uC218%20%uC788%uB3C4%uB85D%20%uD558%uB294%20%uC77C%uC885%uC758%20%60%uD398%uC774%uC9C0%60%uC785%uB2C8%uB2E4.%0A%0A%23%20%uC561%uD2F0%uBE44%uD2F0%20%uC2DC%uC791%uD558%uAE30%0A%0A%60main%28%29%60%uC73C%uB85C%20%uC2DC%uC791%uD558%uB294%20%uB2E4%uB978%20%uD504%uB85C%uADF8%uB798%uBC0D%20%uD328%uB7EC%uB2E4%uC784%uACFC%uB294%20%uB2E4%uB974%uAC8C%20%uC548%uB4DC%uB85C%uC774%uB4DC%uB294%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD504%uB808%uC784%uC6CC%uD06C%uB97C%uAC00%60Avtivity%60%20%uC778%uC2A4%uD134%uC2A4%uB4E4%28%uC548%uB4DC%uB85C%uC774%uB4DC%uC758%20%29%uC758%20%uB77C%uC774%uD504%uC0AC%uC774%uD074%uC744%20%uAD00%uB9AC%uD569%uB2C8%uB2E4.%20%uAC01%20%uB77C%uC774%uD504%uC0AC%uC774%uD074%20stage%uAC00%20%uBC14%uB00C%uB294%20%uB9E4%20%uC21C%uAC04%uB9C8%uB2E4%2C%20%uD574%uB2F9%20%uC2DC%uC810%uC5D0%20%uB300%uC751%uB418%uB294%20Callback%20%uBA54%uC18C%uB4DC%uB97C%20%uC2E4%uD589%uD569%uB2C8%uB2E4.%0A%0A%21%5BAlt%20text%5D%28./1464711552621.png%29%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uB77C%uC774%uD504%20%uD0C0%uC784%20%uB3D9%uC548%uC5D0%20%uAC01%20%uC2A4%uD14C%uC774%uC9C0%uAC00%20%uC21C%uCC28%uC801%uC73C%uB85C%20%uC9C4%uD589%uB429%uB2C8%uB2E4.%20%uC989%20%uAC01%20%uBA54%uC18C%uB4DC%28%uCF5C%uBC31%29%uC744%20%uC21C%uCC28%uC801%uC73C%uB85C%20%uC2E4%uD589%uD558%uAC8C%20%uB429%uB2C8%uB2E4.%20%uAC01%uAC01%uC758%20%uCF5C%uBC31%20%uBA54%uC18C%uB4DC%uAC00%20%uB05D%uB09C%20%uD6C4%20%uC561%uD2F0%uBE44%uD2F0%uC758%20%uC0C1%uD0DC%uB294%20%uD55C%uB2E8%uACC4%20%uC62C%uB77C%uAC11%uB2C8%uB2E4.%20%uB9C8%uCE58%20%uD53C%uB77C%uBBF8%uB4DC%uCC98%uB7FC.%20%uD53C%uB77C%uBBF8%uB4DC%uC758%20%uCD5C%uC0C1%uCE35%uC740%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC804%uBA74%uC5D0%uC11C%20%uC2E4%uD589%uC911%uC774%uBA70%20%uC0AC%uC6A9%uC790%uAC00%20%uC0C1%uD638%uC791%uC6A9%uD560%20%uC218%20%uC788%uB294%20%uC0C1%uD0DC%uB97C%20%uB73B%uD569%uB2C8%uB2E4.%0A%0A%uC561%uD2F0%uBE44%uD2F0%uB97C%20%uC0AC%uC6A9%uC790%uAC00%20%uC885%uB8CC%uD558%uAC8C%20%uB418%uBA74%20%uC561%uD2F0%uBE44%uD2F0%uB294%20%uD558%uD5A5%uC774%uB3D9%uD558%uB294%20%uB2E4%uB978%20%uBA54%uC18C%uB4DC%uB97C%20%uD638%uCD9C%uD569%uB2C8%uB2E4.%20%uC0AC%uC6A9%uC790%uAC00%20%uC571%uC744%20%uC804%uD658%uD558%uB294%20%uACBD%uC6B0%20%uC644%uC804%uD788%20%uD558%uD5A5%uD558%uC9C0%uC54A%uACE0%20%uAE30%uB2E4%uB9AC%uAE30%uB3C4%20%uD569%uB2C8%uB2E4.%20%uC774%uB7F0%20%uACBD%uC6B0%20%uB2E4%uC2DC%20%uCD5C%uC0C1%uCE35%uC73C%uB85C%20%uC62C%uB77C%uAC08%20%uC218%uB3C4%20%uC788%uC2B5%uB2C8%uB2E4.%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uC758%20%uBCF5%uC7A1%uD55C%20%uC815%uB3C4%uC5D0%20%uB530%uB77C%20%uBAA8%uB4E0%20%uB77C%uC774%uD504%uC0AC%uC774%uD074%20%uBA54%uC18C%uB4DC%uB97C%20%uAD6C%uD604%uD560%20%uD544%uC694%uAC00%20%uC5C6%uC744%20%uC218%uB3C4%20%uC788%uC2B5%uB2C8%uB2E4.%20%uAC01%uAC01%uC758%20%uB77C%uC774%uD504%uC0AC%uC774%uD074%uC744%20%uC774%uD574%uD558%uB294%20%uAC83%uC740%20%uC0AC%uC6A9%uC790%uAC00%20%uC608%uC0C1%uD55C%uB300%uB85C%20%uC571%uC774%20%uB3D9%uC791%uD568%uC744%20%uBCF4%uC7A5%uD558%uAE30%20%uC704%uD574%20%uC911%uC694%uD569%uB2C8%uB2E4.%0A%0A%60onCreate%28%29%60%uAC00%20%uD638%uCD9C%uB41C%20%uD6C4%20%uBC14%uB85C%20%60onStart%28%29%60%uAC00%2C%20%uADF8%uB9AC%uACE0%20%uC989%uC2DC%20%60onResume%28%29%60%uC774%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%20%0A%0A%60onCreate%28%29%60%uBA54%uC18C%uB4DC%uC5D0%uC11C%20%60finish%28%29%60%uB97C%20%uD638%uCD9C%uD558%uB294%20%uACBD%uC6B0%uB97C%20%uC81C%uC678%uD558%uACE0%20%60onPause%28%29%60%2C%20%60onStop%28%29%60%uC744%20%uBA3C%uC800%20%uD638%uCD9C%uD55C%20%uD6C4%uC5D0%20%60onDestroy%28%29%60%uB97C%20%uD638%uCD9C%uD569%uB2C8%uB2E4.%20%uACBD%uC6B0%uC5D0%20%uB530%uB77C%20%60onCreate%28%29%60%uC5D0%uC11C%20%60finish%28%29%60%uB97C%20%uD638%uCD9C%uD574%uC57C%uD558%uB294%20%uACBD%uC6B0%uAC00%20%uC788%uB294%uB370%2C%20%uC5D0%uAE49%uBE44%uD2F0%uAC00%20%uB2E4%uB978%20%uC5D1%uD2F0%uBE44%uD2F0%uB97C%20%uC2E4%uD589%uD558%uAE30%20%uC704%uD55C%20%uC6A9%uB3C4%uC77C%20%uACBD%uC6B0%uAC00%20%uBC14%uB85C%20%uADF8%uAC83%uC785%uB2C8%uB2E4.%20%uC774%20%uACBD%uC6B0%20%uC2DC%uC2A4%uD15C%uC740%20%60onDestory%28%29%60%uB9CC%uC744%20%uD638%uCD9C%uD569%uB2C8%uB2E4.%0A%0A%23%20%uC5D1%uD2F0%uBE44%uD2F0%uC758%20%uC77C%uC2DC%uC815%uC9C0%uC640%20%uC7AC%uAC1C%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC77C%uC2DC%20%uC911%uC9C0%uB418%uB294%20%uACBD%uC6B0%uAC00%20%uC788%uC2B5%uB2C8%uB2E4.%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uBD80%uBD84%uC801%uC73C%uB85C%20%uBCF4%uC774%uC9C0%uB9CC%2C%20%uD604%uC7AC%20%uD3EC%uCEE4%uC2A4%20%uB418%uC5B4%uC788%uC9C0%20%uC54A%uB2E4%uBA74%20%uC77C%uC2DC%uC815%uC9C0%20%uC0C1%uD0DC%uC785%uB2C8%uB2E4.%20%uADF8%uB7EC%uB098%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC644%uC804%uD788%20%uC0AC%uB824%uC9C0%uBA74%2C%20%uC815%uC9C0%uC0C1%uD0DC%uAC00%20%uB429%uB2C8%uB2E4.%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC77C%uC2DC%uC815%uC9C0%20%uC0C1%uD0DC%uAC00%20%uB418%uBA74%20%60onPause%28%29%60%uAC00%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%uC774%uB7F0%20%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uC5B8%uC81C%uB098%20%uB2E4%uC2DC%20%uD3EC%uCEE4%uC2A4%uAC00%20%uB3CC%uC544%uC62C%20%uC218%20%uC788%uC2B5%uB2C8%uB2E4.%20%uADF8%uB7EC%uB098%20%uC774%uB294%20%uC5D1%uD2F0%uBE44%uD2F0%uB97C%20%uB5A0%uB0A0%20%uAC83%uC784%uC744%20%uC774%uC57C%uAE30%uD558%uB294%20%uCCAB%uBC88%uC9F8%20%uC2E0%uD638%uC785%uB2C8%uB2E4.%20%uB9CC%uC57D%20%uC0AC%uC6A9%uC790%uAC00%20%uB2E4%uC2DC%20%uB3CC%uC544%uC628%uB2E4%uBA74%20%60onResume%28%29%60%uC774%20%uD638%uCD9C%uB418%uACA0%uC9C0%uC694.%0A%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%60onPause%28%29%60%uB4A4%20%uACE7%20%uC815%uC9C0%20%uC0C1%uD0DC%uB85C%20%uC804%uD658%uB420%20%uD655%uB960%uC774%20%uB192%uC2B5%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20CPU%20%uC18C%uBE44%uB97C%20%uD558%uB294%20%uC791%uC5C5%2C%20%uC800%uC7A5%uB418%uC9C0%20%uC54A%uC740%20%uBCC0%uACBD%20%uB0B4%uC6A9%uC758%20%uCEE4%uBC0B%2C%20%uBE0C%uB85C%uB4DC%20%uCE90%uC2A4%uD2B8%20%uB9AC%uC2DC%uBC84%uC640%20%uAC19%uC740%20%uC2DC%uC2A4%uD15C%20%uB9AC%uC18C%uC2A4%2C%20%uAC01%uC885%20%uC13C%uC11C%2C%20%uBC30%uD130%uB9AC%20%uC218%uBA85%uC5D0%20%uC601%uD5A5%uC744%20%uBBF8%uCE58%uB294%20%uD639%uC740%20%uC0AC%uC6A9%uC790%uAC00%20%uD544%uC694%uB85C%20%uD558%uC9C0%20%uC54A%uB294%20%uB9AC%uC18C%uC2A4%uC5D0%20%uB300%uD55C%20%uD574%uC9C0%uB97C%20%uC5EC%uAE30%uC11C%20%uD574%uC8FC%uC5B4%uC57C%20%uD569%uB2C8%uB2E4.%20%uCE74%uBA54%uB77C%uB97C%20%uC0AC%uC6A9%uD558%uB294%20%uC5D1%uD2F0%uBE44%uD2F0%uB77C%uBA74%2C%20%60onPause%28%29%60%uB294%20%uC774%uB97C%20%uD574%uC81C%uD560%20%uC218%20%uC788%uB294%20%uC88B%uC740%20%uC704%uCE58%uC8E0.%0A%0A%60onPause%28%29%60%uC791%uC5C5%uC740%20%uB2E4%uC74C%20%uC5D1%uD2F0%uBE44%uD2F0%uB85C%20%uC790%uC5F0%uC2A4%uB7FD%uAC8C%20%uB118%uC5B4%uAC00%uAE30%20%uC704%uD574%20%uAC00%uBCCD%uAC8C%20%uC720%uC9C0%uD569%uB2C8%uB2E4.%20%uB098%uBA38%uC9C0%20%uB85C%uB4DC%uAC00%20%uB9CE%uC740%20%uC167%uB2E4%uC6B4%20%uC791%uC5C5%uC740%20%60onStop%28%29%60%uC5D0%uC11C%20%uC218%uD589%uD569%uB2C8%uB2E4.%0A%0A%60onResume%28%29%60%uC740%20%uC0AC%uC6A9%uC790%uAC00%20%uC77C%uC2DC%uC815%uC9C0%uB41C%20%uC5D1%uD2F0%uBE44%uD2F0%uB97C%20%uC7AC%uAC1C%uD560%20%uB54C%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC804%uBA74%uC5D0%20%uD45C%uC2DC%uB420%20%uB54C%20%uB9C8%uB2E4%20%uC774%20%uBA54%uC18C%uB4DC%uB294%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20%60onResume%28%29%60%uB54C%uB294%20%60onPause%28%29%60%20%uD0C0%uC774%uBC0D%uC5D0%20%uB9B4%uB9AC%uC988%uD55C%20%uBAA8%uB4E0%20%uB9AC%uC18C%uC2A4%uB97C%20%uCD08%uAE30%uD654%uD558%uB294%20%uC791%uC5C5%uC774%20%uD3EC%uD568%uB418%uC5B4%uC57C%20%uD569%uB2C8%uB2E4.%20%0A%0A%uCC38%uACE0%uB85C%2C%20%60onResume%28%29%60%uACFC%20%60onPause%28%29%60%uB294%20%uBCF4%uD1B5%20%uC11C%uB85C%20%uC9DD%uC744%20%uC774%uB904%20%uC791%uB3D9%uC2DC%uD0B5%uB2C8%uB2E4.%20%uD55C%uCABD%uC740%20%uB9AC%uC18C%uC2A4%20%uC5BB%uAE30%2C%20%uD55C%uCABD%uC740%20%uB193%uC544%uC8FC%uAE30.%0A%0A%23%20%uC5D1%uD2F0%uBE44%uD2F0%20%uC815%uC9C0%20%uBC0F%20%uC7AC%uC2DC%uC791%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uB97C%20%uC81C%uB300%uB85C%20%uC815%uC9C0%uD558%uACE0%20%uC7AC%uC2DC%uC791%uD558%uB294%20%uAC83%uC740%20%uC911%uC694%uD55C%20%uD504%uB85C%uC138%uC2A4%uC785%uB2C8%uB2E4.%20%uC774%uB7F0%20%uD504%uB85C%uC138%uC2A4%uAC00%20%uC644%uBCBD%uD788%20%uB3D9%uC791%uD574%uC57C%20%uC571%uC774%20%uD56D%uC0C1%20%uC791%uB3D9%20%uC0C1%uD0DC%uB97C%20%uC720%uC9C0%uD558%uACE0%20%uC9C4%uD589%20%uC0C1%uD0DC%uB97C%20%uC783%uC9C0%20%uC54A%uB294%uB2E4%uB294%20%uC2E0%uB8B0%uB97C%20%uC0AC%uC6A9%uC790%uC5D0%uAC8C%20%uC904%20%uC218%20%uC788%uC2B5%uB2C8%uB2E4.%20%uB2E4%uC74C%uACFC%20%uAC19%uC740%20%uC2DC%uB098%uB9AC%uC624%uB294%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC815%uC9C0%uB418%uC5C8%uB2E4%uAC00%20%uC7AC%uC2DC%uC791%uB418%uB294%20%uC0C1%uD669%uC785%uB2C8%uB2E4.%0A%0A-%20%uC0AC%uC6A9%uC790%uAC00%20%uCD5C%uADFC%20%uC571%20%uCC3D%uC744%20%uC5F4%uACE0%20%uB2E4%uB978%20%uC5D1%uD2F0%uBE44%uD2F0%uB85C%20%uC804%uD658%uD558%uBA74%2C%20%uD604%uC7AC%20%uC804%uBA74%uC5D0%20%uC788%uB294%20%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uC815%uC9C0%uB429%uB2C8%uB2E4.%20%uC0AC%uC6A9%uC790%uAC00%20%uB2E4%uC2DC%20%uC571%uCC3D%uC73C%uB85C%20%uB3CC%uC544%uC624%uBA74%2C%20%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uC7AC%uC2DC%uC791%uB429%uB2C8%uB2E4.%0A-%20%uC0AC%uC6A9%uC790%uAC00%20%uC571%uC5D0%uC11C%20%uC0C8%20%uC5D1%uD2F0%uBE44%uD2F0%uB97C%20%uC2DC%uC791%uD569%uB2C8%uB2E4.%20%uB450%uBC88%uC9F8%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC0DD%uC131%uB418%uBA74%2C%20%uD604%20%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uC815%uC9C0%uB418%uACE0%2C%20%uB4A4%uB85C%uAC00%uAE30%uB97C%20%uB204%uB974%uBA74%20%uB2E4%uC2DC%20%uC7AC%uC2DC%uC791%uB429%uB2C8%uB2E4.%0A-%20%uC0AC%uC6A9%uC790%uAC00%20%uC571%uC744%20%uC774%uC6A9%uD558%uB294%20%uB3C4%uC911%20%uC804%uD654%uAC00%20%uAC78%uB824%20%uC635%uB2C8%uB2E4.%0A%0A%60onStop%28%29%60%uACFC%20%60onRestrat%28%29%60%uB294%20%uC815%uC9C0%uC640%20%uC7AC%uC2DC%uC791%uC758%20%uCC98%uB9AC%uB97C%20%uBA85%uD655%uD788%20%uD560%20%uC218%20%uC788%uB294%20%uBA54%uC18C%uB4DC%uC785%uB2C8%uB2E4.%20%uBD80%uBD84%uC801%uC778%20UI%20%uCC28%uB2E8%uC740%20%60onPause%28%29%60%uAC00%20%uD638%uCD9C%uB418%uACE0%2C%20UI%uAC00%20%uD654%uBA74%uC5D0%20%uBCF4%uC774%uC9C0%20%uC54A%uC73C%uBA74%20%60onStop%28%29%60%uC774%20%uD638%uCD9C%uB428%uC73C%uB85C%uC11C%20%60onStop%28%29%60%uB54C%20%uC0AC%uC6A9%uC790%uC758%20%uD3EC%uCEE4%uC2A4%uAC00%20%uBCC4%uB3C4%uC758%20%uC5D1%uD2F0%uBE44%uD2F0%28%uD639%uC740%20%uB2E4%uB978%20%uC571%29%uC5D0%20%uC788%uC74C%uC744%20%uBCF4%uC7A5%uD569%uB2C8%uB2E4.%20%uC774%uB54C%20%uC0AC%uC6A9%uC790%uAC00%20%uC0AC%uC6A9%uD558%uC9C0%20%uC54A%uB294%20%uAC70%uC758%20%uBAA8%uB4E0%20%uB9AC%uC18C%uC2A4%uB97C%20%uD574%uC81C%uD574%uC57C%uD569%uB2C8%uB2E4.%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC815%uC9C0%uB418%uACE0%20%uB098%uBA74%2C%20%uC2DC%uC2A4%uD15C%uC774%20%uBA54%uBAA8%uB9AC%uB97C%20%uD68C%uC218%20%uD574%uC57C%uD558%uB294%20%uACBD%uC6B0%2C%20%uD574%uB2F9%20%uC778%uC2A4%uD134%uC2A4%uB97C%20%uC18C%uBA78%uC2DC%uD0B5%uB2C8%uB2E4.%20%28%uC6D0%uB798%uB294%20%uC18C%uBA78%uC2DC%uD0A4%uC9C0%20%uC54A%uC2B5%uB2C8%uB2E4.%20%uBA54%uBAA8%uB9AC%uC5D0%20%uBCF4%uAD00%uD574%20%uB461%uB2C8%uB2E4.%29%20%uAE09%uD55C%20%uACBD%uC6B0%20%60onDestroy%28%29%60%uB97C%20%uD638%uCD9C%uD558%uC9C0%20%uC54A%uACE0%20%uD504%uB85C%uC138%uC2A4%uB97C%20Kill%uD560%20%uC218%20%uC788%uC2B5%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20%60onStop%28%29%60%uD0C0%uC774%uBC0D%uC5D0%20%uBA54%uBAA8%uB9AC%20%uB204%uC218%uB97C%20%uC57C%uAE30%uD560%20%uC218%20%uC788%uB294%20%uB9AC%uC18C%uC2A4%uB294%20%uBC18%uB4DC%uC2DC%20%uD574%uC81C%uD574%uC57C%uD569%uB2C8%uB2E4.%0A%0A%60onPause%28%29%60%uB54C%20%uB2E4%20%uD558%uC9C0%20%uBABB%uD55C%20%uB370%uC774%uD130%uBCA0%uC774%uC2A4%uC5D0%20%uAE30%uB85D%uD558%uB294%20%uC791%uC5C5%2C%20CPU%20%uB9CE%uC774%20%uC0AC%uC6A9%uD558%uB294%20%uC791%uC5C5%uB4F1%uC740%20%60onStop%28%29%60%uD0C0%uC774%uBC0D%uC5D0%20%uD569%uB2C8%uB2E4.%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC815%uC9C0%uB418%uBA74%2C%20Activity%20%uAC1D%uCCB4%uB294%20%uBA54%uBAA8%uB9AC%uC5D0%20%uACC4%uC18D%20%uC720%uC9C0%uB418%uACE0%20%uC788%uB2E4%uAC00%20%uC7AC%uAC1C%uB54C%20%uB2E4%uC2DC%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20%60onResume%28%29%60%uD0C0%uC774%uBC0D%uC5D0%20%uC0DD%uC131%uD55C%20%uAD6C%uC131%uC694%uC18C%uB294%20%uB2E4%uC2DC%20%uCD08%uAE30%uD654%20%uD560%20%uD544%uC694%uAC00%20%uC5C6%uC2B5%uB2C8%uB2E4.%20%uBFD0%uB9CC%20%uC544%uB2C8%uB77C%20%uB808%uC774%uC544%uC6C3%uC5D0%20%uC788%uB294%20%uBAA8%uB4E0%20%60View%60%uC758%20%uC0C1%uD0DC%uB3C4%20%uD568%uAED8%20%uBA54%uBAA8%uB9AC%uC5D0%20%uC720%uC9C0%uB429%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20%uC800%uC7A5%2C%20%uBCF5%uC6D0%uC744%20%uB530%uB85C%20%uD574%uC904%20%uD544%uC694%uAC00%20%uC5C6%uC2B5%uB2C8%uB2E4.%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC815%uC9C0%uB41C%20%uC0C1%uD0DC%uC5D0%uC11C%20%uB2E4%uC2DC%20%uC2DC%uC791%uB420%20%uB54C%20%60onRestart%28%29%60%uAC00%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%uC774%uB54C%20%60onStart%28%29%60%uB3C4%20%uC5F0%uB2EC%uC544%20%uD638%uCD9C%uB429%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20%60onRestart%28%29%60%uB54C%uB294%20%uD2B9%uC218%uD55C%20%uBCF5%uC6D0%20%uC791%uC5C5%uC744%20%uC218%uD589%uD558%uBA74%20%uC88B%uC2B5%uB2C8%uB2E4.%20%0A%0A%60onStop%28%29%60%uB54C%20%uB9AC%uC18C%uC2A4%uAC00%20%uB9B4%uB9AC%uC988%20%uB418%uC5C8%uC73C%uB098%2C%20%uC571%uC744%20%uCC98%uC74C%20%uD0AC%20%uB54C%20%60onStart%28%29%60%uAC00%20%uD638%uCD9C%uB418%uBA70%20%uCD08%uAE30%uD654%20%uD588%uB4EF%2C%20%20%60onRestart%28%29%60%uD638%uCD9C%20%uB54C%uB3C4%20%60onStart%28%29%60%uAC00%20%uD638%uCD9C%uB418%uBA70%20%uB2E4%uC2DC%20%uB9AC%uC18C%uC2A4%uB97C%20%uAC00%uC838%20%uC62C%20%uAC83%uC785%uB2C8%uB2E4.%uB530%uB77C%uC11C%20%uB530%uB85C%20%60onRestart%28%29%60%uB54C%20%uB530%uB85C%20%uCF54%uB4DC%uB97C%20%uB123%uC5B4%uC8FC%uC9C0%20%uC54A%uC544%uB3C4%20%uC815%uC0C1%20%uC791%uB3D9%uD569%uB2C8%uB2E4.%20%uC5EC%uAE30%uC11C%20%uC911%uC694%uD55C%20%uAC83%uC740%20%60onStop%28%29%60%uACFC%20%60onStart%28%29%60%uAC00%20%uC11C%uB85C%20%uC9DD%uC744%20%uC774%uB904%20%uC0AC%uC6A9%uB418%uC5B4%uC57C%20%uD55C%uB2E4%uB294%20%uAC83%uC785%uB2C8%uB2E4.%20%60onStart%28%29%60%uB294%20%uD544%uC694%uD55C%20%uC2DC%uC2A4%uD15C%20%uB9AC%uC18C%uC2A4%2C%20%uAE30%uB2A5%uC774%20%uC81C%uB300%uB85C%20%uAD6C%uBE44%uB418%uC5C8%uB294%uC9C0%20%uD655%uC778%uD558%uB294%20%uAC00%uC7A5%20%uC88B%uC740%20%uC7A5%uC18C%uC785%uB2C8%uB2E4.%0A%0A%23%20%uC5D1%uD2F0%uBE44%uD2F0%20%uC7AC%uC0DD%uC131%0A%0A%uC815%uC0C1%uC801%uC778%20%uC571%20%uB3D9%uC791%uC73C%uB85C%uB3C4%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC18C%uBA78%uB418%uB294%20%uC2DC%uB098%uB9AC%uC624%uAC00%20%uC788%uC2B5%uB2C8%uB2E4.%20%uC0AC%uC6A9%uC790%uAC00%20%uB4A4%uB85C%uB97C%20%uB204%uB974%uAC70%uB098%2C%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%60finish%28%29%60%uB97C%20%uD638%uCD9C%uD558%uC5EC%20%uC790%uCCB4%uC801%uC73C%uB85C%20%uC18C%uBA78%20%uC2E0%uD638%uB97C%20%uBCF4%uB0B4%uB294%20%uACBD%uC6B0%uC785%uB2C8%uB2E4.%20%20%uC774%20%uACBD%uC6B0%2C%20Activity%uB294%20%uC644%uBCBD%uD788%20%uC0AC%uB77C%uC9D1%uB2C8%uB2E4.%0A%0A%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uC815%uC9C0%uB41C%20%uC0C1%uD0DC%uB85C%20%uC7A5%uC2DC%uAC04%20%uC0AC%uC6A9%uB418%uC9C0%20%uC54A%uAC70%uB098%2C%20%uC804%uBA74%uC5D0%20%uC788%uB294%20%uC5D1%uD2F0%uBE44%uD2F0%uAC00%20%uB9AC%uC18C%uC2A4%uAC00%20%uB354%20%uD544%uC694%uD574%20%uC2DC%uC2A4%uD15C%uC774%20%uBC31%uADF8%uB77C%uC6B4%uB4DC%20%uD504%uB85C%uC138%uC2A4%uB97C%20%uC885%uB8CC%uD574%20%uBA54%uBAA8%uB9AC%uB97C%20%uD68C%uC218%uD558%uB824%uB294%20%uACBD%uC6B0%uC5D0%uB3C4%20%uC2DC%uC2A4%uD15C%uC774%20%uC5D1%uD2F0%uBE44%uD2F0%uB97C%20%uC18C%uBA78%uC2DC%uD0AC%20%uC218%20%uC788%uC2B5%uB2C8%uB2E4.%20%uC774%uB807%uAC8C%20%uC815%uC0C1%uC801%uC778%20%uC571%20%uB3D9%uC791%uC774%20%uC544%uB2CC%2C%20%uC2DC%uC2A4%uD15C%uC774%20%uC18C%uBA78%uC2DC%uD0A4%uB294%20%uACBD%uC6B0%20%uC2DC%uC2A4%uD15C%uC740%20Avtivity%20%uC778%uC2A4%uD134%uC2A4%uB294%20%uC5C6%uC560%uC9C0%uB9CC%2C%20%uADF8%uAC83%uC774%20%uC874%uC7AC%uD588%uC5C8%uC74C%uC740%20%uAE30%uC5B5%uD569%uB2C8%uB2E4.%20%uC2DC%uC2A4%uD15C%uC774%20%uC774%uC804%20%uC0C1%uD0DC%uB97C%20%uBCF5%uC6D0%uD558%uAE30%20%uC704%uD574%20%uC0AC%uC6A9%uD558%uB294%2C%20%uC800%uC7A5%uB41C%20%uB370%uC774%uD130%uB97C%20%60%uC778%uC2A4%uD134%uC2A4%20%uC0C1%uD0DC%28instance%20state%29%60%uB77C%20%uD558%uBA70%2C%20%20%uC774%uB294%20%60Bundle%60%uAC1D%uCCB4%uC5D0%20%uC800%uC7A5%uB41C%20%uD0A4-%uAC12%20%uC30D%uC758%20%uCEEC%uB809%uC158%20%uC785%uB2C8%uB2E4.%0A%0A%3E%20%uCC38%uACE0%uB85C%2C%20%uC0AC%uC6A9%uC790%uAC00%20%uD654%uBA74%uC744%20%uD68C%uC804%uD560%20%uB54C%20%uB9C8%uB2E4%20%uC5D1%uD2F0%uBE44%uD2F0%uB294%20%uC18C%uBA78%20%uD6C4%20%uC7AC%uC0DD%uC131%uB429%uB2C8%uB2E4.%0A%0A%uAE30%uBCF8%uC801%uC73C%uB85C%20%uC790%uB3D9%uC73C%uB85C%20%uC2DC%uC2A4%uD15C%uC740%20Bundle%20%uC778%uC2A4%uD134%uC2A4%uC5D0%20%uB808%uC774%uC544%uC6C3%20view%uB4E4%uC758%20%uC0C1%uD0DC%uB97C%20%uC800%uC7A5%uD569%uB2C8%uB2E4.%20%uB530%uB77C%uC11C%20%uBCC4%uB3C4%20%uCF54%uB4DC%20%uC5C6%uC774%uB3C4%20%uC790%uB3D9%uC73C%uB85C%20%uBCF5%uC6D0%uC774%20%uB429%uB2C8%uB2E4.%20%28%29%uB2E8%20%uC774%uB54C%20%60android%3Aid%60%20%uC560%uD2B8%uB9AC%uBDF0%uD2B8%20%uAC12%uC740%20%uBC18%uB4DC%uC2DC%20%uC788%uC5B4%uC57C%20%uD569%uB2C8%uB2E4.%29%20%uADF8%uB7EC%uB098%20%uCD94%uAC00%uC801%uC73C%uB85C%20%uCF54%uB4DC%uB85C%20%uB370%uC774%uD130%uB97C%20%uC9C1%uC811%20%uC800%uC7A5%uD558%uACE0%20%uD578%uB4E4%uB9C1%20%uD558%uACE0%20%uC2F6%uB2E4%uBA74%20%uC544%uB798%uC758%20%uB450%uAC1C%uC758%20%uBA54%uC18C%uB4DC%uB97C%20%uC774%uC6A9%uD569%uB2C8%uB2E4.%0A%0A%21%5BAlt%20text%5D%28./1464714818812.png%29%0A%0A%0A%60%60%60java%0A%0Astatic%20final%20String%20STATE_SCORE%20%3D%20%22playerScore%22%3B%0Astatic%20final%20String%20STATE_LEVEL%20%3D%20%22playerLevel%22%3B%0A...%0A%0A@Override%0Apublic%20void%20onSaveInstanceState%28Bundle%20savedInstanceState%29%20%7B%0A%20%20%20%20//%20Save%20the%20user%27s%20current%20game%20state%0A%20%20%20%20savedInstanceState.putInt%28STATE_SCORE%2C%20mCurrentScore%29%3B%0A%20%20%20%20savedInstanceState.putInt%28STATE_LEVEL%2C%20mCurrentLevel%29%3B%0A%20%20%20%20%0A%20%20%20%20//%20Always%20call%20the%20superclass%20so%20it%20can%20save%20the%20view%20hierarchy%20state%0A%20%20%20%20super.onSaveInstanceState%28savedInstanceState%29%3B%0A%7D%0A%0A%60%60%60%0A%0A%60onSaveInstanceState%28%29%60%uB97C%20%uC774%uC6A9%uD574%20%uC5D1%uD2F0%uBE44%uD2F0%uC758%20%uC0C1%uD0DC%uB97C%20%uC800%uC7A5%uD574%20%uB458%20%uC218%20%uC788%uC2B5%uB2C8%uB2E4.%20%uC774%uB294%20%uC774%uD6C4%20%60onCreate%28%29%60%20%uD0C0%uC774%uBC0D%2C%20%uD639%uC740%20%uADF8%20%uBC14%uB85C%20%uB2E4%uC74C%uC778%20%60onRestoreInstanceState%28%29%60%20%uD0C0%uC774%uBC0D%uC5D0%20%uD578%uB4E4%uB9C1%20%uD560%20%uC218%20%uC788%uC2B5%uB2C8%uB2E4.%20%uB2E8%20%60onRestoreInstanceState%28%29%60%uB294%20%60Bundle%60%20%uAC1D%uCCB4%uAC00%20%uC788%uC744%20%uACBD%uC6B0%28%uBCF5%uC6D0%uD560%20%uC800%uC7A5%20%uB370%uC774%uD130%uAC00%20%uC788%uC744%20%uACBD%uC6B0%29%uC5D0%20%uB9CC%20%uC2E4%uD589%uB429%uB2C8%uB2E4.%0A%0A%60%60%60java%0A%0A@Override%0Aprotected%20void%20onCreate%28Bundle%20savedInstanceState%29%20%7B%0A%20%20%20%20super.onCreate%28savedInstanceState%29%3B%20//%20Always%20call%20the%20superclass%20first%0A%20%20%20%0A%20%20%20%20//%20Check%20whether%20we%27re%20recreating%20a%20previously%20destroyed%20instance%0A%20%20%20%20if%20%28savedInstanceState%20%21%3D%20null%29%20%7B%0A%20%20%20%20%20%20%20%20//%20Restore%20value%20of%20members%20from%20saved%20state%0A%20%20%20%20%20%20%20%20mCurrentScore%20%3D%20savedInstanceState.getInt%28STATE_SCORE%29%3B%0A%20%20%20%20%20%20%20%20mCurrentLevel%20%3D%20savedInstanceState.getInt%28STATE_LEVEL%29%3B%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20//%20Probably%20initialize%20members%20with%20default%20values%20for%20a%20new%20instance%0A%20%20%20%20%7D%0A%20%20%20%20...%0A%7D%0A%0A%60%60%60%0A%0A%60onCreate%28%29%60%uB54C%20%uD578%uB4E4%uB9C1%20%uD558%uAE30%20%uC704%uD574%uC11C%uB294%20%uBC18%uB4DC%uC2DC%20%60Bundle%60%uAC1D%uCCB4%uAC00%20%60null%60%uC778%uC9C0%20%uD655%uC778%uD558%uC5EC%uC57C%20%uD569%uB2C8%uB2E4.%20%uADF8%uB7EC%uB098%20%uC774%uD6C4%20%uC2E4%uD589%uB418%uB294%20%60onRestoreInstanceState%28%29%60%uB294%20%60Bundle%60%uAC1D%uCCB4%uAC00%20%uC5C6%uC73C%uBA74%20%uC2E4%uD589%uB418%uC9C0%20%uC54A%uAE30%uC5D0%20%60null%60%uAC12%uC5D0%20%uB300%uD55C%20%uCC98%uB9AC%uB97C%20%uD574%uC8FC%uC9C0%20%uC54A%uC544%uB3C4%20%uB429%uB2C8%uB2E4.%0A%0A%60%60%60java%0Apublic%20void%20onRestoreInstanceState%28Bundle%20savedInstanceState%29%20%7B%0A%20%20%20%20//%20Always%20call%20the%20superclass%20so%20it%20can%20restore%20the%20view%20hierarchy%0A%20%20%20%20super.onRestoreInstanceState%28savedInstanceState%29%3B%0A%20%20%20%0A%20%20%20%20//%20Restore%20state%20members%20from%20saved%20instance%0A%20%20%20%20mCurrentScore%20%3D%20savedInstanceState.getInt%28STATE_SCORE%29%3B%0A%20%20%20%20mCurrentLevel%20%3D%20savedInstanceState.getInt%28STATE_LEVEL%29%3B%0A%7D%0A%0A%60%60%60%0A&lt;/center&gt;
&lt;br /&gt;&lt;/en-note&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Develop</category>
<category>Activity</category>
<category>Android</category>
<category>안드로이드</category>
<category>액티비티</category>
<category>엑티비티</category>
<author>youngkyu.cho</author>
<guid>http://dev.youngkyu.kr/37</guid>
<comments>http://dev.youngkyu.kr/37#entry37comment</comments>
<pubDate>Wed, 01 Jun 2016 02:25:03 +0900</pubDate>
</item>
<item>
<title>안드로이드 Context 개념 익히기</title>
<link>http://dev.youngkyu.kr/36</link>
<description>&lt;en-note lang=&quot;v2&quot; style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;&lt;del style=&quot;position:relative;display:block;z-index:10;&quot;&gt;&lt;a style=&quot;position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;&quot; href=&quot;http://marxi.co/#/?provider=evernote_int&amp;amp;guid=aa4a06cc-5a47-4017-bfac-c9db1ba7cd65&amp;amp;notebook=youngkyu.cho&quot;&gt;Edit&lt;/a&gt;&lt;/del&gt;&lt;div style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;
                        &lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
                    &lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; color: rgba(0,0,0,0.8); line-height: 1.6;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;티스토리&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;android&lt;/code&gt; &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; background-color: #f9f2f4; white-space: normal; padding: 2px 5px; color: rgba(44,63,81,0.5); border-radius: 0; background: rgba(102,128,153,0.075);&quot;&gt;안드로이드&lt;/code&gt; &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 Context 개념 익히기&lt;/h1&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Context is the Interface to global information about an application environment. &lt;br /&gt;
  컨텍스트는 애플리케이션의 environment에 대한 전역 정보를 위한 인터페이스다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 개발이 꽤나 쉽지 않다는 걸 알았다. 그래서 해보고 싶었다. 아니 해야한다 생각했다. 온갖 버그가 안드로이드 SDK안부터 서드파티 라이브러리까지 존재할 뿐만 아니라 파편화 또한 아이폰과 비교도 안될만큼 심하다는 게 시제품을 만드는 안드로이드 개발자 옆을 지키며 내가 안드로이드 공부를 시작하게 된 이유다. 내가 조금이라도 일을 더 도와준다면, 조금 더 빨리 완성되지 않을까 해서. 조금이라도 도움이 되지 않을까 하는 마음에 공부하기로 했다. 예전 Servlet/JSP, Spring등을 다룰 때 JAVA를 했던 기억을 더듬어 가며(놀랍게도 벌써 그개 3년이나 됐다는 걸 알았다), 안드로이드 공부를 시작하려 한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 개발자 뒤에서 항상 보던 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getApplicationContext()&lt;/code&gt;라는 함수가 기억났다. 왜 안드로이드는 맨날 저걸 던져줘야 하는건가 라는 생각이 항상 들었지만 한번도 그 이유가 제대로 궁금한 적은 없었다. 그냥 귀찮은 처리가 많은 개발 플랫폼이구만 이라고 생각했을 뿐. &lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드의 Context 개념은 안드로이드 디벨로퍼에 따르면, 위와 같다. 현재 사용되고있는 앱에 대한 전역 환경 정보를 가진 친구라고 한다. 이게 무슨 뜬구름 잡는 소린가.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10347184/difference-and-when-to-use-getapplication-getapplicationcontext-getbasecon&quot; target=&quot;_blank&quot; style=&quot;background: transparent; color: #1980e6; text-decoration: none;&quot;&gt;여기&lt;/a&gt; 스텍오버플로우 글에서 많은 인사이트를 얻었다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getApplication()&lt;/code&gt;, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getApplicationContext()&lt;/code&gt;, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getBaseContext()&lt;/code&gt;, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getContext()&lt;/code&gt;, 그리고 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;SomeClass.this&lt;/code&gt; 까지 이게 뭐가 다른지에 대한 질문이었다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;즉,&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;Toast.makeText(LoginActivity.&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;this&lt;/span&gt;, &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;LogIn successful&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;br /&gt;Toast.makeText(getApplication(), &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;LogIn successful&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;br /&gt;Toast.makeText(getApplicationContext(), &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;LogIn successful&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;br /&gt;Toast.makeText(getBaseContext(), &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;LogIn successful&quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이 친구들과&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 0; border: 0; border-radius: 5px; text-align: start; word-break: break-all;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 1.3em 2em;&quot;&gt;&lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt; &lt;span style=&quot;line-height: 1.6;&quot;&gt;intent&lt;/span&gt; = new &lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt;(getApplicationContext(), LoginActivity.&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;class&lt;/span&gt;);&lt;br /&gt;&lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt; &lt;span style=&quot;line-height: 1.6;&quot;&gt;intent&lt;/span&gt; = new &lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt;(MenuPagina., LoginActivity.&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;class&lt;/span&gt;);&lt;br /&gt;&lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt; &lt;span style=&quot;line-height: 1.6;&quot;&gt;intent&lt;/span&gt; = new &lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt;(getBaseContext(), LoginActivity.&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;class&lt;/span&gt;);&lt;br /&gt;&lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt; &lt;span style=&quot;line-height: 1.6;&quot;&gt;intent&lt;/span&gt; = new &lt;span style=&quot;line-height: 1.6;&quot;&gt;Intent&lt;/span&gt;(getApplication(), LoginActivity.&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;class&lt;/span&gt;);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이 친구들 각각이 뭐가 다른지에 대한 것을 궁금해 하는 듯 했다. 나 또한 안드로이드 생초보지만, 어깨 넘어로 본 게 있어서 뭐가 다른지 궁금했다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;안드로이드 프레임워크에서 Context는 2가지 종류로 나뉜다.&lt;/p&gt;

&lt;ul style=&quot;margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;애플리케이션 Context&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;액티비티 Context&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;애플리케이션 Context는 애플리케이션 자체의 생명주기(라이프사이클)에 영향을 받는다. 따라서 항상 애플리케이션의 생명 주기와 함께 한다.  &lt;br /&gt;
그러나 엑티비티 Context는 액티비티의 라이프사이클과 함께 작동해, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;onDestory()&lt;/code&gt;와 함께 사라진다. 즉 액티비티에 대한 환경 정보들이 Context에 있고, 이 Context(엑티비티의)에 Intent를 통해 다른 액티비티를 띄우면, 엑티비티 스택이 쌓이게 되는 것이다. &lt;/p&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;LoginActivity.this&lt;/code&gt; though its referring to your own class which extends Activity class but the base class (Activity) also extends Context class, so it can be used to offer activity context. &lt;br /&gt;
  &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getApplication()&lt;/code&gt; though its referring to Application object but the Application class extends Context class, so it can be used to offer application context. &lt;br /&gt;
   &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getApplicationContext()&lt;/code&gt; offers application context. &lt;br /&gt;
   &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getBaseContext()&lt;/code&gt; offers activity context.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;세부적인 설명인데, 여기서 중요한 것은 안드로이드의 Avtivity와 Apllication class들이 모두 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Context&lt;/code&gt;클래스를 상속받아 만들어졌다는 것이다. 그래서 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;LoginActivity.this&lt;/code&gt;라고 하는 순간, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;this&lt;/code&gt;에 해당하는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;LoginActivity&lt;/code&gt;인스턴스가 파라매터로 전달되고, 이것은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Context&lt;/code&gt;를 상속받았기에 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Context&lt;/code&gt;이며, 따라서 아무런 문제 없이 작동하게 되는 것이다. &lt;/p&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;Tips: 뷰를 수정하거나 할때는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Activity Context&lt;/code&gt;를 나머지 경우에는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Application Context&lt;/code&gt;를 사용하라.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;다음은 액티비티의 생명주기에 대해서 공부를 해보아야 겠다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;center style=&quot;display:none&quot;&gt;@%5B%uD2F0%uC2A4%uD1A0%uB9AC%2Candroid%2C%uC548%uB4DC%uB85C%uC774%uB4DC%5D%0A%0A%23%20%uC548%uB4DC%uB85C%uC774%uB4DC%20Context%20%uAC1C%uB150%20%uC775%uD788%uAE30%0A%0A%3E%20Context%20is%20the%20Interface%20to%20global%20information%20about%20an%20application%20environment.%0A%3E%20%uCEE8%uD14D%uC2A4%uD2B8%uB294%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20environment%uC5D0%20%uB300%uD55C%20%uC804%uC5ED%20%uC815%uBCF4%uB97C%20%uC704%uD55C%20%uC778%uD130%uD398%uC774%uC2A4%uB2E4.%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20%uAC1C%uBC1C%uC774%20%uAF64%uB098%20%uC27D%uC9C0%20%uC54A%uB2E4%uB294%20%uAC78%20%uC54C%uC558%uB2E4.%20%uADF8%uB798%uC11C%20%uD574%uBCF4%uACE0%20%uC2F6%uC5C8%uB2E4.%20%uC544%uB2C8%20%uD574%uC57C%uD55C%uB2E4%20%uC0DD%uAC01%uD588%uB2E4.%20%uC628%uAC16%20%uBC84%uADF8%uAC00%20%uC548%uB4DC%uB85C%uC774%uB4DC%20SDK%uC548%uBD80%uD130%20%uC11C%uB4DC%uD30C%uD2F0%20%uB77C%uC774%uBE0C%uB7EC%uB9AC%uAE4C%uC9C0%20%uC874%uC7AC%uD560%20%uBFD0%uB9CC%20%uC544%uB2C8%uB77C%20%uD30C%uD3B8%uD654%20%uB610%uD55C%20%uC544%uC774%uD3F0%uACFC%20%uBE44%uAD50%uB3C4%20%uC548%uB420%uB9CC%uD07C%20%uC2EC%uD558%uB2E4%uB294%20%uAC8C%20%uC2DC%uC81C%uD488%uC744%20%uB9CC%uB4DC%uB294%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uAC1C%uBC1C%uC790%20%uC606%uC744%20%uC9C0%uD0A4%uBA70%20%uB0B4%uAC00%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uACF5%uBD80%uB97C%20%uC2DC%uC791%uD558%uAC8C%20%uB41C%20%uC774%uC720%uB2E4.%20%uB0B4%uAC00%20%uC870%uAE08%uC774%uB77C%uB3C4%20%uC77C%uC744%20%uB354%20%uB3C4%uC640%uC900%uB2E4%uBA74%2C%20%uC870%uAE08%20%uB354%20%uBE68%uB9AC%20%uC644%uC131%uB418%uC9C0%20%uC54A%uC744%uAE4C%20%uD574%uC11C.%20%uC870%uAE08%uC774%uB77C%uB3C4%20%uB3C4%uC6C0%uC774%20%uB418%uC9C0%20%uC54A%uC744%uAE4C%20%uD558%uB294%20%uB9C8%uC74C%uC5D0%20%uACF5%uBD80%uD558%uAE30%uB85C%20%uD588%uB2E4.%20%uC608%uC804%20Servlet/JSP%2C%20Spring%uB4F1%uC744%20%uB2E4%uB8F0%20%uB54C%20JAVA%uB97C%20%uD588%uB358%20%uAE30%uC5B5%uC744%20%uB354%uB4EC%uC5B4%20%uAC00%uBA70%28%uB180%uB78D%uAC8C%uB3C4%20%uBC8C%uC368%20%uADF8%uAC1C%203%uB144%uC774%uB098%20%uB410%uB2E4%uB294%20%uAC78%20%uC54C%uC558%uB2E4%29%2C%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uACF5%uBD80%uB97C%20%uC2DC%uC791%uD558%uB824%20%uD55C%uB2E4.%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20%uAC1C%uBC1C%uC790%20%uB4A4%uC5D0%uC11C%20%uD56D%uC0C1%20%uBCF4%uB358%20%60getApplicationContext%28%29%60%uB77C%uB294%20%uD568%uC218%uAC00%20%uAE30%uC5B5%uB0AC%uB2E4.%20%uC65C%20%uC548%uB4DC%uB85C%uC774%uB4DC%uB294%20%uB9E8%uB0A0%20%uC800%uAC78%20%uB358%uC838%uC918%uC57C%20%uD558%uB294%uAC74%uAC00%20%uB77C%uB294%20%uC0DD%uAC01%uC774%20%uD56D%uC0C1%20%uB4E4%uC5C8%uC9C0%uB9CC%20%uD55C%uBC88%uB3C4%20%uADF8%20%uC774%uC720%uAC00%20%uC81C%uB300%uB85C%20%uAD81%uAE08%uD55C%20%uC801%uC740%20%uC5C6%uC5C8%uB2E4.%20%uADF8%uB0E5%20%uADC0%uCC2E%uC740%20%uCC98%uB9AC%uAC00%20%uB9CE%uC740%20%uAC1C%uBC1C%20%uD50C%uB7AB%uD3FC%uC774%uAD6C%uB9CC%20%uC774%uB77C%uACE0%20%uC0DD%uAC01%uD588%uC744%20%uBFD0.%20%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%uC758%20Context%20%uAC1C%uB150%uC740%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uB514%uBCA8%uB85C%uD37C%uC5D0%20%uB530%uB974%uBA74%2C%20%uC704%uC640%20%uAC19%uB2E4.%20%uD604%uC7AC%20%uC0AC%uC6A9%uB418%uACE0%uC788%uB294%20%uC571%uC5D0%20%uB300%uD55C%20%uC804%uC5ED%20%uD658%uACBD%20%uC815%uBCF4%uB97C%20%uAC00%uC9C4%20%uCE5C%uAD6C%uB77C%uACE0%20%uD55C%uB2E4.%20%uC774%uAC8C%20%uBB34%uC2A8%20%uB72C%uAD6C%uB984%20%uC7A1%uB294%20%uC18C%uB9B0%uAC00.%0A%0A%5B%uC5EC%uAE30%5D%28http%3A//stackoverflow.com/questions/10347184/difference-and-when-to-use-getapplication-getapplicationcontext-getbasecon%29%20%uC2A4%uD14D%uC624%uBC84%uD50C%uB85C%uC6B0%20%uAE00%uC5D0%uC11C%20%uB9CE%uC740%20%uC778%uC0AC%uC774%uD2B8%uB97C%20%uC5BB%uC5C8%uB2E4.%0A%0A%60getApplication%28%29%60%2C%20%60getApplicationContext%28%29%60%2C%20%60getBaseContext%28%29%60%2C%20%60getContext%28%29%60%2C%20%uADF8%uB9AC%uACE0%20%60SomeClass.this%60%20%uAE4C%uC9C0%20%uC774%uAC8C%20%uBB50%uAC00%20%uB2E4%uB978%uC9C0%uC5D0%20%uB300%uD55C%20%uC9C8%uBB38%uC774%uC5C8%uB2E4.%0A%0A%uC989%2C%0A%60%60%60%20java%0AToast.makeText%28LoginActivity.this%2C%20%22LogIn%20successful%22%2C%20Toast.LENGTH_SHORT%29.show%28%29%3B%0AToast.makeText%28getApplication%28%29%2C%20%22LogIn%20successful%22%2C%20Toast.LENGTH_SHORT%29.show%28%29%3B%0AToast.makeText%28getApplicationContext%28%29%2C%20%22LogIn%20successful%22%2C%20Toast.LENGTH_SHORT%29.show%28%29%3B%0AToast.makeText%28getBaseContext%28%29%2C%20%22LogIn%20successful%22%2C%20Toast.LENGTH_SHORT%29.show%28%29%3B%0A%60%60%60%0A%uC774%20%uCE5C%uAD6C%uB4E4%uACFC%0A%0A%60%60%60%0AIntent%20intent%20%3D%20new%20Intent%28getApplicationContext%28%29%2C%20LoginActivity.class%29%3B%0AIntent%20intent%20%3D%20new%20Intent%28MenuPagina.%2C%20LoginActivity.class%29%3B%0AIntent%20intent%20%3D%20new%20Intent%28getBaseContext%28%29%2C%20LoginActivity.class%29%3B%0AIntent%20intent%20%3D%20new%20Intent%28getApplication%28%29%2C%20LoginActivity.class%29%3B%0A%60%60%60%0A%0A%uC774%20%uCE5C%uAD6C%uB4E4%20%uAC01%uAC01%uC774%20%uBB50%uAC00%20%uB2E4%uB978%uC9C0%uC5D0%20%uB300%uD55C%20%uAC83%uC744%20%uAD81%uAE08%uD574%20%uD558%uB294%20%uB4EF%20%uD588%uB2E4.%20%uB098%20%uB610%uD55C%20%uC548%uB4DC%uB85C%uC774%uB4DC%20%uC0DD%uCD08%uBCF4%uC9C0%uB9CC%2C%20%uC5B4%uAE68%20%uB118%uC5B4%uB85C%20%uBCF8%20%uAC8C%20%uC788%uC5B4%uC11C%20%uBB50%uAC00%20%uB2E4%uB978%uC9C0%20%uAD81%uAE08%uD588%uB2E4.%0A%0A%uC548%uB4DC%uB85C%uC774%uB4DC%20%uD504%uB808%uC784%uC6CC%uD06C%uC5D0%uC11C%20Context%uB294%202%uAC00%uC9C0%20%uC885%uB958%uB85C%20%uB098%uB25C%uB2E4.%0A%0A-%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%20Context%0A-%20%uC561%uD2F0%uBE44%uD2F0%20Context%0A%0A%uC560%uD50C%uB9AC%uCF00%uC774%uC158%20Context%uB294%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%20%uC790%uCCB4%uC758%20%uC0DD%uBA85%uC8FC%uAE30%28%uB77C%uC774%uD504%uC0AC%uC774%uD074%29%uC5D0%20%uC601%uD5A5%uC744%20%uBC1B%uB294%uB2E4.%20%uB530%uB77C%uC11C%20%uD56D%uC0C1%20%uC560%uD50C%uB9AC%uCF00%uC774%uC158%uC758%20%uC0DD%uBA85%20%uC8FC%uAE30%uC640%20%uD568%uAED8%20%uD55C%uB2E4.%20%0A%uADF8%uB7EC%uB098%20%uC5D1%uD2F0%uBE44%uD2F0%20Context%uB294%20%uC561%uD2F0%uBE44%uD2F0%uC758%20%uB77C%uC774%uD504%uC0AC%uC774%uD074%uACFC%20%uD568%uAED8%20%uC791%uB3D9%uD574%2C%20%60onDestory%28%29%60%uC640%20%uD568%uAED8%20%uC0AC%uB77C%uC9C4%uB2E4.%20%uC989%20%uC561%uD2F0%uBE44%uD2F0%uC5D0%20%uB300%uD55C%20%uD658%uACBD%20%uC815%uBCF4%uB4E4%uC774%20Context%uC5D0%20%uC788%uACE0%2C%20%uC774%20Context%28%uC5D1%uD2F0%uBE44%uD2F0%uC758%29%uC5D0%20Intent%uB97C%20%uD1B5%uD574%20%uB2E4%uB978%20%uC561%uD2F0%uBE44%uD2F0%uB97C%20%uB744%uC6B0%uBA74%2C%20%uC5D1%uD2F0%uBE44%uD2F0%20%uC2A4%uD0DD%uC774%20%uC313%uC774%uAC8C%20%uB418%uB294%20%uAC83%uC774%uB2E4.%20%0A%0A%3E%20%60LoginActivity.this%60%20though%20its%20referring%20to%20your%20own%20class%20which%20extends%20Activity%20class%20but%20the%20base%20class%20%28Activity%29%20also%20extends%20Context%20class%2C%20so%20it%20can%20be%20used%20to%20offer%20activity%20context.%0A%3E%20%60getApplication%28%29%60%20though%20its%20referring%20to%20Application%20object%20but%20the%20Application%20class%20extends%20Context%20class%2C%20so%20it%20can%20be%20used%20to%20offer%20application%20context.%0A%3E%20%20%60getApplicationContext%28%29%60%20offers%20application%20context.%0A%3E%20%20%60getBaseContext%28%29%60%20offers%20activity%20context.%0A%0A%uC138%uBD80%uC801%uC778%20%uC124%uBA85%uC778%uB370%2C%20%uC5EC%uAE30%uC11C%20%uC911%uC694%uD55C%20%uAC83%uC740%20%uC548%uB4DC%uB85C%uC774%uB4DC%uC758%20Avtivity%uC640%20Apllication%20class%uB4E4%uC774%20%uBAA8%uB450%20%60Context%60%uD074%uB798%uC2A4%uB97C%20%uC0C1%uC18D%uBC1B%uC544%20%uB9CC%uB4E4%uC5B4%uC84C%uB2E4%uB294%20%uAC83%uC774%uB2E4.%20%uADF8%uB798%uC11C%20%60LoginActivity.this%60%uB77C%uACE0%20%uD558%uB294%20%uC21C%uAC04%2C%20%60this%60%uC5D0%20%uD574%uB2F9%uD558%uB294%20%60LoginActivity%60%uC778%uC2A4%uD134%uC2A4%uAC00%20%uD30C%uB77C%uB9E4%uD130%uB85C%20%uC804%uB2EC%uB418%uACE0%2C%20%uC774%uAC83%uC740%20%60Context%60%uB97C%20%uC0C1%uC18D%uBC1B%uC558%uAE30%uC5D0%20%60Context%60%uC774%uBA70%2C%20%uB530%uB77C%uC11C%20%uC544%uBB34%uB7F0%20%uBB38%uC81C%20%uC5C6%uC774%20%uC791%uB3D9%uD558%uAC8C%20%uB418%uB294%20%uAC83%uC774%uB2E4.%20%0A%0A%3E%20Tips%3A%20%uBDF0%uB97C%20%uC218%uC815%uD558%uAC70%uB098%20%uD560%uB54C%uB294%20%60Activity%20Context%60%uB97C%20%uB098%uBA38%uC9C0%20%uACBD%uC6B0%uC5D0%uB294%20%60Application%20Context%60%uB97C%20%uC0AC%uC6A9%uD558%uB77C.%0A%0A%uB2E4%uC74C%uC740%20%uC561%uD2F0%uBE44%uD2F0%uC758%20%uC0DD%uBA85%uC8FC%uAE30%uC5D0%20%uB300%uD574%uC11C%20%uACF5%uBD80%uB97C%20%uD574%uBCF4%uC544%uC57C%20%uACA0%uB2E4.&lt;/center&gt;
&lt;br /&gt;&lt;/en-note&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Develop</category>
<category>Android</category>
<category>conTeXt</category>
<category>안드로이드</category>
<category>컨텍스트</category>
<author>youngkyu.cho</author>
<guid>http://dev.youngkyu.kr/36</guid>
<comments>http://dev.youngkyu.kr/36#entry36comment</comments>
<pubDate>Wed, 01 Jun 2016 02:23:53 +0900</pubDate>
</item>
<item>
<title>Redis(레디스)의 구현과 내부 구조, 작동 원리 - 1</title>
<link>http://dev.youngkyu.kr/35</link>
<description>&lt;en-note lang=&quot;v2&quot; style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;&lt;del style=&quot;position:relative;display:block&quot;&gt;&lt;a style=&quot;position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;&quot; href=&quot;http://marxi.co/#/?provider=evernote_int&amp;amp;guid=7543148c-8223-4afa-bcc2-34ecb3fb7d55&amp;amp;notebook=youngkyu.cho&quot;&gt;Edit&lt;/a&gt;&lt;/del&gt;&lt;div style=&quot;color: #2c3f51; font-family: 'Helvetica Neue', Arial, 'Hiragino Sans GB', STHeiti, 'Microsoft YaHei', 'WenQuanYi Micro Hei', SimSun, Song, sans-serif; line-height: 1.6;&quot;&gt;
                        &lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
                    &lt;div style=&quot;line-height: 1.6;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h1 style=&quot;font-size: 2.6em; margin: 1.2em 0 .6em 0; font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;Redis(레디스)의 구현과 내부 구조, 작동 원리 - 1&lt;/h1&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;새로운 프로젝트인 Haffle에서 레디스를 메인 데이터베이스로 사용하기로 결정했다. 꽤 도전적인 선택이고 내 기준에서는 약간의 기술적 도전이기도 하다. 어떻게 해야 레디스로 인스타그램처럼 잘 만들 수 있을까 고민하다가 코드를 한번 씹어먹어보기로 했다. 레디스의 여러 명령어를 사용하면서도 레디스의 구현에 대해서는 무지했는데, 이제부터 레디스에 대한 내부 구조와 세부 구현에 대해 소스 코드를 분석해 보고자 한다. 잘못된 내용이 있을시 알려주길 바란다!&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;em style=&quot;line-height: 1.6;&quot;&gt;레디스 3.XX 기준 소스코드이다.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;레디스 객체&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// redis.h&lt;/span&gt;

&lt;span style=&quot;line-height: 1.6;&quot;&gt;#&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;define&lt;/span&gt; REDIS_LRU_BITS 24&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6;&quot;&gt;#&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;define&lt;/span&gt; REDIS_LRU_CLOCK_MAX ((1&amp;lt;&amp;lt;REDIS_LRU_BITS)-1) /* Max value of obj-&amp;gt;lru */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6;&quot;&gt;#&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;define&lt;/span&gt; REDIS_LRU_CLOCK_RESOLUTION 1000 /* LRU clock resolution in ms */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;struct&lt;/span&gt; redisObject {
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;unsigned&lt;/span&gt; type:&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;4&lt;/span&gt;;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;unsigned&lt;/span&gt; encoding:&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;4&lt;/span&gt;;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;unsigned&lt;/span&gt; lru:REDIS_LRU_BITS; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* lru time (relative to server.lruclock) */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; refcount;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;void&lt;/span&gt; *ptr;
} robj;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;redis.h 에서 레디스가 저장된 데이터를 관리하기위해 사용하는 redisObject의 구조체 형식을 확인할 수 있다. 아니 사실 모든 레디스 운영을 위한 모든 변수도 이걸로 관리된다. redis.h에서 처음으로 나오는 구조체기도 하다. 레디스는 비트필드를 사용하여, type 구별(4비트)과 인코딩 타입 구별(4비트)을 위해, 그리고 LRU를 위한 시간 저장공간(24비트)을 사용하는데, 정말 아끼고 아껴 고작 저걸 다 합쳐서 32비트밖에 안사용한다. 레디스는 메모리에서 동작하고 메모리는 시스템 자원 중 매우 비싼편에 속한다. 이를 알고 최소한으로 사용하려는 노력이 돋보인다. (반성해야한다 나는.) 과거(2.6대)에는 2비트를 notUsed 필드로 남겨뒀는데 3.XX 버전대로 오면서 lru를 위해 할당한 듯 하다. refcount는 해당 객체가 참조당하는 횟수로 파악되고, ptr이 실제 데이터를 가리키는 용도로 사용되는 포인터로 보인다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;여기서 encoding은 무엇인가? type은 또 무엇인가?&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;레디스의 자료 구조(타입)과 인코딩&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// redis.h&lt;/span&gt;

&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Object types */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_STRING &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;//스트링&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_LIST &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;//리스트&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_SET &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;//집합(셋)&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ZSET &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;3&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;//정렬된 리스트&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_HASH &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;4&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;//해시테이블&lt;/span&gt;

&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_RAW &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;     &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Raw representation */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_INT &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;     &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as integer */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_HT &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;      &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as hash table */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_ZIPMAP &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;3&lt;/span&gt;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as zipmap */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_LINKEDLIST &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;4&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as regular linked list */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_ZIPLIST &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;5&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as ziplist */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_INTSET &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;6&lt;/span&gt;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as intset */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_SKIPLIST &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;7&lt;/span&gt;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Encoded as skiplist */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;#def&lt;/span&gt;ine REDIS_ENCODING_EMBSTR &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;8&lt;/span&gt;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Embedded sds string encoding */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;redis.h의 179번째 줄 부터 시작하는 상수를 보자. redis는 4개의 비트로 아마 최대 16개의 자료구조 타입을 표현할 수 있을 것이다. 그리고 현재는 위의 5가지를 지원하는 듯 하다. 곧 위치 관련 구조도 지원한다는데, 이곳에 5번으로 추가되지 않을까.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;레디스는 인코딩타입으로 현재 9가지를 지원한다.&lt;/p&gt;

&lt;ul style=&quot;margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;RAW&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;INT&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;해시테이블&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;집맵(압축된 해시테이블)&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;연결리스트&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;집리스트(압축된 리스트)&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;INT형 변수만 있는 집합(셋)일 경우 사용되는  INTSET&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;SKIPLIST&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;EMBSTR&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;각각의 인코딩이 무엇인지는 정확히 모르겠지만, 어쨋든 이런 인코딩 타입을 지원하나보다. 데이터를 군더더기 없이 최소한의 공간만 사용해 저장하려는 노력의 일환인 듯 하다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;문자열 데이터 인코딩 따라가기&lt;/h2&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;레디스는 문자열을 저장하기 위해 아래 2가지의 인코딩을 지원한다. &lt;/p&gt;

&lt;ul style=&quot;margin-top: 0; margin-bottom: 1.1em; line-height: 1.6;&quot;&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;RAW&lt;/li&gt;
&lt;li style=&quot;line-height: 1.6;&quot;&gt;INT&lt;/li&gt;
&lt;/ul&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;어떻게 동작하는지 살펴보자.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;// redis.c

struct redisCommand redisCommandTable[] = {
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;get&quot;&lt;/span&gt;,getCommand,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;rF&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;set&quot;&lt;/span&gt;,setCommand,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;3&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;wm&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    // &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;...&lt;/span&gt; 중략 &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;...&lt;/span&gt; 
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;pfselftest&quot;&lt;/span&gt;,pfselftestCommand,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;r&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;pfadd&quot;&lt;/span&gt;,pfaddCommand,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;wmF&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;pfcount&quot;&lt;/span&gt;,pfcountCommand,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;r&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;pfmerge&quot;&lt;/span&gt;,pfmergeCommand,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;wm&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;pfdebug&quot;&lt;/span&gt;,pfdebugCommand,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;3&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;w&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;},
    {&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;latency&quot;&lt;/span&gt;,latencyCommand,-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;arslt&quot;&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;redis.c에서 문자열 데이터를 저장하는 명령어인 get과 set이 호출됐을때 실행되는 함수를 확인할 수 있다. &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;getCommand&lt;/code&gt;과 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setCommand&lt;/code&gt;이 그것인데, 이 소스를 찾아보자. 먼저 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setCommand&lt;/code&gt;가 궁금하다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// t_string.c&lt;/span&gt;

&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; checkStringLength(redisClient *c, &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;size&lt;/span&gt;) {
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;size&lt;/span&gt; &amp;gt; &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;512&lt;/span&gt;*&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1024&lt;/span&gt;*&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1024&lt;/span&gt;) {
        addReplyError(c,&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;&quot;string exceeds maximum allowed size (512MB)&quot;&lt;/span&gt;);
        &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; REDIS_ERR;
    }
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; REDIS_OK;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setCommand&lt;/code&gt;를 찾아 뜯어보니, 첫줄에 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;checkStringLength&lt;/code&gt;함수가 보인다. 512메가를 넘는 스트링인가를 검사하는데, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;redisClient&lt;/code&gt;포인터 까지 인자로 받는다.  레디스의 Command와 관련된 모든 함수는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;redisClient&lt;/code&gt;를 참조한다. 이게 뭘까?&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// redis.h&lt;/span&gt;

&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* With multiplexing we need to take per-client state.
 * Clients are taken in a linked list. */&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;typedef&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;struct&lt;/span&gt; redisClient {
    uint64_t id;            &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Client incremental unique ID. */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; fd;
    redisDb *db;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; dictid;
    robj *name;             &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* As set by CLIENT SETNAME */&lt;/span&gt;
    sds querybuf;
    size_t querybuf_peak;   &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Recent (100ms or more) peak of querybuf size */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; argc;
    robj **argv;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;struct&lt;/span&gt; redisCommand *cmd, *lastcmd;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; reqtype;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; multibulklen;       &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* number of multi bulk arguments left to read */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; bulklen;           &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* length of bulk argument in multi bulk request */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;list&lt;/span&gt; *reply;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;unsigned&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; reply_bytes; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Tot bytes of objects in reply list */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; sentlen;            &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Amount of bytes already sent in the current
                               buffer or object being sent. */&lt;/span&gt;
    time_t ctime;           &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Client creation time */&lt;/span&gt;
    time_t lastinteraction; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* time of the last interaction, used for timeout */&lt;/span&gt;
    time_t obuf_soft_limit_reached_time;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; flags;              &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* REDIS_SLAVE | REDIS_MONITOR | REDIS_MULTI ... */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; authenticated;      &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* when requirepass is non-NULL */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; replstate;          &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication state if this is a slave */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; repl_put_online_on_ack; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Install slave write handler on ACK. */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; repldbfd;           &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication DB file descriptor */&lt;/span&gt;
    off_t repldboff;        &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication DB file offset */&lt;/span&gt;
    off_t repldbsize;       &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication DB file size */&lt;/span&gt;
    sds replpreamble;       &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication DB preamble. */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; reploff;      &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication offset if this is our master */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; repl_ack_off; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication ack offset, if this is a slave */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; repl_ack_time;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* replication ack time, if this is a slave */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;char&lt;/span&gt; replrunid[REDIS_RUN_ID_SIZE+&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;]; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* master run id if this is a master */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; slave_listening_port; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* As configured with: SLAVECONF listening-port */&lt;/span&gt;
    multiState mstate;      &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* MULTI/EXEC state */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; btype;              &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Type of blocking op if REDIS_BLOCKED. */&lt;/span&gt;
    blockingState bpop;     &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* blocking state */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;long&lt;/span&gt; woff;         &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Last write global replication offset. */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;list&lt;/span&gt; *watched_keys;     &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Keys WATCHED for MULTI/EXEC CAS */&lt;/span&gt;
    dict *pubsub_channels;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* channels a client is interested in (SUBSCRIBE) */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;list&lt;/span&gt; *pubsub_patterns;  &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* patterns a client is interested in (SUBSCRIBE) */&lt;/span&gt;
    sds peerid;             &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Cached peer ID. */&lt;/span&gt;

    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* Response buffer */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;int&lt;/span&gt; bufpos;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;char&lt;/span&gt; buf[REDIS_REPLY_CHUNK_BYTES];
} redisClient;
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;레디스 클라이언트는 각각의 접속한 클라이언트의 상태를 저장하기 위해 사용하는 구조체였다. 이를 이용하여 명령들이나 블록상태, 혹은 pub/sub까지 관리하는 것으로 보인다. 주석을 보니 클라이언트들은 링크드리스트로 관리된다고 한다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;다시 본론으로 돌아와서, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setCommand&lt;/code&gt;를 찾아보자. &lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;// t_string.c

&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;#define REDIS_SET_NO_FLAGS 0&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;#define REDIS_SET_NX (1&amp;lt;&amp;lt;0)     /* Set if key not exists. */    // 비트 : 01&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;#define REDIS_SET_XX (1&amp;lt;&amp;lt;1)     /* Set if key exists. */        // 비트 : 10&lt;/span&gt;

void setGenericCommand(redisClient *c, int flags, robj *key, robj *val, robj *expire, int unit, robj *ok_reply, robj *abort_reply) {
    // &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;...&lt;/span&gt; 중략 &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;...&lt;/span&gt;
}

/* SET key value [NX] [XX] [EX &amp;lt;seconds&amp;gt;] [PX &amp;lt;milliseconds&amp;gt;] */
void setCommand(redisClient *c) {
    int j;
    robj *expire = &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;;
    int unit = UNIT_SECONDS;
    int flags = REDIS_SET_NO_FLAGS;

    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;for&lt;/span&gt; (j = &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;3&lt;/span&gt;; j &amp;lt; c-&amp;gt;argc; j++) {
        char *a = c-&amp;gt;argv[j]-&amp;gt;ptr;
        robj *&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;next&lt;/span&gt; = (j == c-&amp;gt;argc-&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;) ? &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt; : c-&amp;gt;argv[j+&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;];

        &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; ((a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'n'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'N'&lt;/span&gt;) &amp;amp;&amp;amp;
            (a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'x'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'X'&lt;/span&gt;) &amp;amp;&amp;amp; a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'\0'&lt;/span&gt;) {
            flags |= REDIS_SET_NX;
        } &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; ((a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'x'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'X'&lt;/span&gt;) &amp;amp;&amp;amp;
                   (a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'x'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'X'&lt;/span&gt;) &amp;amp;&amp;amp; a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'\0'&lt;/span&gt;) {
            flags |= REDIS_SET_XX;
        } &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; ((a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'e'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'E'&lt;/span&gt;) &amp;amp;&amp;amp;
                   (a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'x'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'X'&lt;/span&gt;) &amp;amp;&amp;amp; a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'\0'&lt;/span&gt; &amp;amp;&amp;amp; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;next&lt;/span&gt;) {
            unit = UNIT_SECONDS;
            expire = &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;next&lt;/span&gt;;
            j++;
        } &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;else&lt;/span&gt; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; ((a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'p'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'P'&lt;/span&gt;) &amp;amp;&amp;amp;
                   (a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'x'&lt;/span&gt; || a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'X'&lt;/span&gt;) &amp;amp;&amp;amp; a[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;] == &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;'\0'&lt;/span&gt; &amp;amp;&amp;amp; &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;next&lt;/span&gt;) {
            unit = UNIT_MILLISECONDS;
            expire = &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;next&lt;/span&gt;;
            j++;
        } &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;else&lt;/span&gt; {
            addReply(c,shared.syntaxerr);
            &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt;;
        }
    }

    c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;] = tryObjectEncoding(c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;]); // 얘는 뭔가?
    setGenericCommand(c,flags,c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;],c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;],expire,unit,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setCommand&lt;/code&gt;를 알기 위해서는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setGenericCommand&lt;/code&gt;함수도 알아야 한다. 왜냐하면, 아래와 같은 이유다!&lt;/p&gt;

&lt;blockquote style=&quot;padding: 15px 20px; margin: 0 0 1.1em; border-left: 5px solid rgba(102,128,153,0.075); border-left-width: 10px; background-color: rgba(102,128,153,0.05); border-top-right-radius: 5px; border-bottom-right-radius: 5px;&quot;&gt;
  &lt;p style=&quot;margin: 0 0 1.1em; font-size: 1em; font-weight: 300; margin-bottom: 0; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;setGenericCommand() 함수는 SET 연산을 구현합니다. 이때, 각기다른 옵션과 약간의 변형된 형태도 처리합니다. 이 함수는 SET, SETEX, PSETEX, SETNX를 처리하기 위해 call됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;쟤가 진짜 처리하는 애니까! 그래도 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setCommand&lt;/code&gt;를 보기로 했으니 먼저 보자. 조금 있다가 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setGenericCommand&lt;/code&gt;도 함께 보자.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;char *a&lt;/code&gt;는 명령어 문자열이라 생각하자. NX인지 XX인지, EX인지, PX인지 확인하는 제어문인거 같다. 그냥 넘어가자. 그리고 나면 나오는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;tryObjectEncoding&lt;/code&gt;이 함수가 무엇을 하는지 찾아야하는데,  찾아가보자.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;tryObjectEncoding 함수에 대하여&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// obejct.c&lt;/span&gt;

robj *tryObjectEncoding(robj *o) {
    long value;
    sds s = o-&amp;gt;ptr;
    size_t len;

    redisAssertWithInfo(NULL,o,o-&amp;gt;&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;type&lt;/span&gt; == REDIS_STRING); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// string 맞는지 확인.&lt;/span&gt;

    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (!sdsEncodedObject(o)) &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; o; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// RAW나 EMBSTR 인코딩 된 애들이 아니면, 그냥 반환.&lt;/span&gt;

    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (o-&amp;gt;refcount &amp;gt; &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;) &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; o; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 혹시 이 string을 참조하는 애가 있는지 확인. 있으면 그냥 반환.&lt;/span&gt;

    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* 21자리가 넘는지 확인. 넘으면 INT일 수 없으니까.
     * 그리고 long으로 처리될 수 있는지, string2l 유틸 함수로 시도해봄.
     * 그리고 long으로 처리된 값을 value에 집어넣음. 처리 실패시 0(false)반환. */&lt;/span&gt;
    len = sdslen(s);
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (len &amp;lt;= &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;21&lt;/span&gt; &amp;amp;&amp;amp; string2l(s,len,&amp;amp;value)) {
        &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; ((server.maxmemory == &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt; ||
             (server.maxmemory_policy != REDIS_MAXMEMORY_VOLATILE_LRU &amp;amp;&amp;amp;
              server.maxmemory_policy != REDIS_MAXMEMORY_ALLKEYS_LRU)) &amp;amp;&amp;amp;
            value &amp;gt;= &lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;
            value &amp;lt; REDIS_SHARED_INTEGERS) &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 공유된 INTEGER 값으로 처리 가능한지 확인.&lt;/span&gt;
        { &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 공유된 INTEGER값으로 처리 가능!&lt;/span&gt;
            decrRefCount(o); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 참조를 지우고, 메모리 할당 해제.&lt;/span&gt;
            incrRefCount(shared.integers[value]); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 공유된 INTEGER 값 ref count 증가.&lt;/span&gt;
            &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; shared.integers[value]; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 공유된 INTEGER 반환.&lt;/span&gt;
        } &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;else&lt;/span&gt; { &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 공유된 INTEGER론 불가능하지만 long으로 가능하다면,&lt;/span&gt;
            &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == REDIS_ENCODING_RAW) sdsfree(o-&amp;gt;ptr); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 메모리 해제&lt;/span&gt;
            o-&amp;gt;encoding = REDIS_ENCODING_INT; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// INT로 인코딩 타입 변경&lt;/span&gt;
            o-&amp;gt;ptr = (void*) value; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 위에서 string2l로 만든 value 할당.&lt;/span&gt;
            &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; o;
        }
    }

    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (len &amp;lt;= REDIS_ENCODING_EMBSTR_SIZE_LIMIT) { &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 위에꺼 실패하고 EMBSTR 제한 사이즈의 최댓값보다 작으면,&lt;/span&gt;
        robj *emb;

        &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == REDIS_ENCODING_EMBSTR) &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; o; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 이미 EMBSTR이면 그냥 반환.&lt;/span&gt;
        emb = createEmbeddedStringObject(s,sdslen(s)); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 아니면, EMBSTR로 다시 인코딩 해 생성.&lt;/span&gt;
        decrRefCount(o); &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// 원래 애 메모리 해제&lt;/span&gt;
        &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; emb; &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// EMBSTR 반환.&lt;/span&gt;
    }

    &lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;/* 어떤 인코딩도 해낼 수 없었다면, 마지막으로 최대한 공간을 적게 쓰기위해 SDS string을 컴팩션한다. */&lt;/span&gt;
    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == REDIS_ENCODING_RAW &amp;amp;&amp;amp;
        sdsavail(s) &amp;gt; len/&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;10&lt;/span&gt;)
    {
        o-&amp;gt;ptr = sdsRemoveFreeSpace(o-&amp;gt;ptr);
    }

    &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;return&lt;/span&gt; o;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;공간을 최대한 절약하기 위해 인코딩을 시도하는 함수다. 뭔저 저 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;SDS&lt;/code&gt;혹은 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sds&lt;/code&gt;란 단어(함수앞에 엄청 많지 않은가.)에 대해 알아야겠는데, SDS가 뭔지 궁금해서 찾아보니, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;simple danamic string&lt;/code&gt;이라는 라이브러리였다. 이 라이브러리는 C언어를 위한 스트링 라이브러린데, 바이너리 세이프하고, 더 쉽게 C언어에서 스트링을 사용할 수 있게 해준다고 한다. &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Redis&lt;/code&gt;는 이 라이브러릴 사용해 스트링을 표현한다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;+--------+&lt;/span&gt;-------------------------------&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;+-----------+&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;| Header | Binary safe C alike string... | Null term |
+--------+-------------------------------+-----------+&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;         |&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;         `-&amp;gt; Pointer returned to the user.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sds&lt;/code&gt;는 이런 개념을 사용하여, 헤더에 메타 데이터를 저장할 수 있게 한다. 기존 C언어의 스트링이 사용하다보면 불편한게 한두가지가 아니다보니 쓰는 듯 하다. 아무튼 얘는 이렇게 생겨먹어서, 사용하다보면 공간이 남는 경우가 있는데, redis는 최대한의 메모리 활용을 위해 이 여유분이 10%를 넘으면, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;Shrinking string&lt;/code&gt;(메모리를 컴팩션 하는.) 작업을 통해 최대한 메모리를 아낀다. 이때 호출하는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sds&lt;/code&gt;라이브러리의 함수가 바로 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sds sdsRemoveFreeSpace(sds s);&lt;/code&gt;다. 과거(2.6버전)에는 이 작업이 없었던 것 같은데, 생겼다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;과거에는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;EMBSTR&lt;/code&gt; 인코딩 타입이 없었으나 새로 생겼다. 이 새로생긴 이상한 이름의 인코딩 타입은, 정말 신박한 아이디어인데, redisObject와 연속적으로 이 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sds string&lt;/code&gt;을 위치 시키는 방법의 인코딩이다. 즉 연속적인 메모리에 함께 위치한다. 그리고 이 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sds string&lt;/code&gt;는 수정이 불가능하다. 아래 그림으로 어떤 말인지 살펴보자.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;+--------------+&lt;/span&gt;-----------&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;+------------+&lt;/span&gt;--------&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;+----+&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;| robj data... | robj-&amp;gt;ptr | sds header | string | \0 |
+--------------+-----+-----+------------+--------+----+&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;                     |                       ^&lt;/span&gt;
&lt;span style=&quot;line-height: 1.6; color: #a6e22e;&quot;&gt;                     +-----------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이런식이다. 이 경우, 원래 스트링 처리 기법은 그대로 사용할 수 있으면서도,  &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;cache locality&lt;/code&gt;를 극대화 할 수 있어 유리하다고 한다. 이게 무슨말이냐면, 메모리 주소에 접근할 때, 보통 해당 주소 뿐만 아니라 주변까지 포함한 블록 전부를 캐시에 가져오게 되는데, 이렇게 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;redisObject&lt;/code&gt;와 붙여놓으면 당연히 함께 캐시되니 퍼포먼스상 이득일 수 밖에 없다는 것이다. 또 시스템 콜(매우 느린)에서도 이득인데, 원래 할당을 을 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;robj&lt;/code&gt;위해 한번, &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;robj-&amp;gt;ptr&lt;/code&gt;을 위해 한번 더, 총2번했어야하는데 이제 한방에 할 수 있다는 퍼포먼스상 이점이 있다.  당연히 초기화나 조회, 메모리 카피시도 매번 유리해진다. 이런 세심함! 레디스의 성능은 여기서 나오나보다.&lt;/p&gt;&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;뿐만 아니라, 코드에서도 이런 세심함은 느껴진다. (물론 다들 이렇게 하긴 할건데… 내가 안하던거라..)&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;&lt;span style=&quot;line-height: 1.6; color: #75715e;&quot;&gt;// redis.h&lt;/span&gt;

&lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;#define&lt;/span&gt; redisAssertWithInfo(_c,_o,_e) ((_e)&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;?&lt;/span&gt;(&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;void&lt;/span&gt;)&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;0&lt;/span&gt; : (_redisAssertWithInfo(_c,_o,&lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;#_e&lt;/span&gt;,__FILE__,__LINE__),_exit(&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;)))

&lt;span style=&quot;line-height: 1.6; color: #f8f8f2;&quot;&gt;#define&lt;/span&gt; sdsEncodedObject(objptr) (objptr&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;-&amp;gt;&lt;/span&gt;encoding &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;==&lt;/span&gt; REDIS_ENCODING_RAW &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;||&lt;/span&gt; objptr&lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;-&amp;gt;&lt;/span&gt;encoding &lt;span style=&quot;line-height: 1.6; color: #e6db74;&quot;&gt;==&lt;/span&gt; REDIS_ENCODING_EMBSTR)
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;redisAssertWithInfo&lt;/code&gt;나 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;sdsEncodedObject&lt;/code&gt;같은 애들을 보면 레디스는 왠만한 애들은 함수를 안쓰고 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;#define&lt;/code&gt;을 이용해 정의했다. 나라면 함수로 만들었을 것 같은데, 어떻게해서든 운영 자원을 아끼려는 노력의 일환으로 보였다.&lt;/p&gt;

&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;h2 style=&quot;font-family: inherit; font-weight: bold; line-height: 1.1; margin-top: 21px; margin-bottom: 10.5px; font-size: 2.15em; margin: 1.2em 0 .6em 0; text-align: start; color: rgba(0,0,0,0.8);&quot;&gt;다시 돌아오자. setCommand로.&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: inherit; background-color: transparent; white-space: pre-wrap; border-radius: 0; color: #f8f8f2; display: block; background: #23241f; padding: 18px 28px;&quot;&gt;// t_string.c

void setCommand(redisClient *c) {

    // &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;...&lt;/span&gt; 중략 &lt;span style=&quot;line-height: 1.6; color: #f92672;&quot;&gt;...&lt;/span&gt;

    c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;] = tryObjectEncoding(c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;]); // 얘는 뭔가?
    setGenericCommand(c,flags,c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;1&lt;/span&gt;],c-&amp;gt;argv[&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;2&lt;/span&gt;],expire,unit,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;,&lt;span style=&quot;line-height: 1.6; color: #ae81ff;&quot;&gt;NULL&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p style=&quot;margin: 0 0 1.1em; line-height: 1.6; color: rgba(0,0,0,0.8);&quot;&gt;이제 그 인코딩 된 내용을 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;c-&amp;gt;argv[2]&lt;/code&gt;에 집어넣는다는 것을 알게 됐다. 저기에는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;robj&lt;/code&gt;의 포인터가 저장된다. 아마, 그게 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;set&lt;/code&gt;명령어의 인자로 쓰이는 것 같다. 이제 실제 일을 처리하는 &lt;code style=&quot;font-family: 'Source Code Pro',monospace; font-size: .9em; padding: 2px 4px; color: #c7254e; background-color: #f9f2f4; white-space: normal; border-radius: 4px;&quot;&gt;setGenericCommand&lt;/code&gt;을 살펴볼 차례다.&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;line-height: 1.6;&quot;&gt;

&lt;pre style=&quot;word-break: break-word; font-family: 'Source Code Pro',monospace; white-space: pre-wrap; display: block; background-color: rgba(102,128,153,0.05); color: #333; word-wrap: break-word; font-size: .9em; background: #f6f6f6; line-height: 1.6; margin: 0 0 1.1em; padding: 2px; border: 0; border-radius: 5px; text-align: start;&quot;&gt;&lt;c