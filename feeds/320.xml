<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
>

<channel>
	<title>Lael&#039;s World</title>
	<atom:link href="https://blog.lael.be/feed" rel="self" type="application/rss+xml" />
	<link>https://blog.lael.be</link>
	<description>천재는 노력하는 사람을 이길 수 없고, 노력하는 사람은 즐기는 자를 이길 수 없다.</description>
	<lastBuildDate>
	Thu, 09 May 2019 09:01:10 +0000	</lastBuildDate>
	<language>ko-KR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.1.1</generator>
	<item>
		<title>windows 계정 로그온 기록하기</title>
		<link>https://blog.lael.be/post/8749</link>
				<comments>https://blog.lael.be/post/8749#respond</comments>
				<pubDate>Fri, 03 May 2019 05:23:29 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8749</guid>
				<description><![CDATA[개발용으로 쓰는 Windows 머신이 있는데, 오늘 갑자기 RDP 연결이 안되더라. &#160; 디버그를 위해 콘솔로 접속 후 이벤트 뷰어를 보았다. 이벤트 뷰어에 표시된 에러 메세지는 아래와 같았음. RD 세션 호스트 서버가 불완전한 연결을 많이 받았습니다. 시스템이 공격을 받을 수 있습니다. Event ID 는 1006 번. &#160; 그런데 이 머신은 방화벽 설정이 잘 되어있고, 나 이외에는 접속하는 사람이 없다. 네트워크 통신을 확인해 보았는데, 이상한 연결도 없었다. &#160; 아무튼 내가 취한 조치사항은 아래와 같음. 1) 운영체제 업데이트 2) 윈도우 로그인 기록 남기기. (성공, 실패 모두) &#160; &#160; Windows 계정 로그온 기록하는 방법 시작 -&#62; 실행 -&#62; gpedit.msc 로컬 그룹 정책 편집기가 켜진다. (이 Group Policy 를 수정해서 윈도우의 많은 부분을 튜닝할 수 있다. 웹서버나 미디어 서버 운영할 때, 통신 속도제한 거는 기능을 설정하면&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8749/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>jmeter requirement</title>
		<link>https://blog.lael.be/post/8737</link>
				<comments>https://blog.lael.be/post/8737#respond</comments>
				<pubDate>Thu, 25 Apr 2019 03:42:21 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8737</guid>
				<description><![CDATA[웹서비스의 스트레스 테스트 및 동접 부하 테스트를 진행중임. &#160; 테스트 도구는 순간 동시요청 숫자와 비례하게 CPU 를 사용한다. 너무 저렴한 머신을 사용하지 말것. 머신은 일반적인 i7 급 성능은 나와주어야 한다. &#160; 테스트는 Windows OS 머신에서 진행했음. &#160; 네트워크 튜닝이 필요했음. 관련 가이드 문서를 읽고 수정을 진행함. &#160; &#160; 1. 사용가능한 포트 범위 확장 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters MaxUserPort 라는 DWORD 타입의 값을 추가하고 65534 를 입력. 기본값은 5000 이다. (일부 운영체제는 기본값이 16384) &#160; &#160; MaxUserPort Key: Tcpip\Parameters Value Type: REG_DWORD—maximum port number ValidRange: 5000–65534 (decimal) Default: 0x1388 (5000 decimal) Description: This parameter controls the maximum port number used when an application requests any available user port from the system. Normally, short-lived ports are allocated in the range from 1024 through 5000. Setting this parameter to a value&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8737/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>소멸위험지수와 재정자립도</title>
		<link>https://blog.lael.be/post/8720</link>
				<comments>https://blog.lael.be/post/8720#comments</comments>
				<pubDate>Thu, 11 Apr 2019 11:42:33 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[kosis]]></category>
		<category><![CDATA[국가통계포털]]></category>
		<category><![CDATA[소멸위험지수]]></category>
		<category><![CDATA[재정자립도]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8720</guid>
				<description><![CDATA[시사 상식 글입니다. 2018년 한국의 합계출산율은 0.98명 입니다. 즉, 남자와 여자가 만나서 출산이 이루어지므로, 합계출산율이 2명이면 인구수가 그대로 유지됩니다. (자연 사망율이 0일 경우) 합계출산율이 1 이 되면 인구가 반으로 줄어들겠죠. 그런데 1보다 낮아지면 인구가 빠르게 줄어듭니다. 출생아 수가 낮고, 의학기술 발달에 의한 기대수명이 높아져 고령자가 많아지기 때문에, 초고령화 사회가 됩니다. &#160; 그건 그렇다고 치고, 그렇다면 &#8220;어느지역이 고령화 되었나&#8221; 라는 수치도 필요하게 됩니다. 따라서 이 소멸위험지수라는 개념이 등장하게 되었습니다. 이 지수를 사용하여 늙은 지역와 젊은 지역을 알 수 있습니다. 너무 늙은 지역은 인구가 소멸하게 됩니다. (빠르게 줄어듬) &#160; 소멸위험지수 (만 20세 ~ 만 39세 여성인구) / 만 65세 이상 고령인구수 - 여성 1명이 있고, 고령 1명이 있으면 소멸 위험지수는 1이 된다. - 여성 2명이 있고, 고령 1명이 있으면 소멸 위험지수는 2가&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8720/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>git 에서 특정 파일만 추적하고 싶지 않을때 untrack production file</title>
		<link>https://blog.lael.be/post/8706</link>
				<comments>https://blog.lael.be/post/8706#comments</comments>
				<pubDate>Fri, 05 Apr 2019 04:53:35 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8706</guid>
				<description><![CDATA[프로젝트의 환경설정 파일을 추척하지 않는 방법에 대해 설명한다. &#160; 이런 방법에는 2가지가 있음 assume-unchanged 와 skip-worktree 가 있음. &#160; 사용법 FILENAME 을 (또는 폴더를) 변경되지 않는다고 가정함. git update-index --assume-unchanged FILENAME 프레임워크나 sdk 등의 폴더에 설정한다. 이 폴더는 &#8220;변화하지 않았다고 가정&#8221; 하는 것이다. php 의 vendor(composer), nodejs 의 node_modules 폴더에 적용하면 된다. assume-unchanged 가 설정되면 해당 파일폴더를 변경검사하지 않는다. 이것은 git 비교의 성능향상의 목적이 있다. 만약 assume-unchaged 파일폴더가 변경되었고, 커밋되었다면 (새로운 파일이 추가되었거나 변경되면), 자동으로 assume-unchanged 플레그가 해제되고 변경을 확인하게 된다. &#160; 다시 추적하기 git update-index --no-assume-unchanged FIL_NAME &#160; 사용법 &#160; 절대로 변경을 추적하지 않는 것이다. 변경이 생기면 flag 가 자동으로 풀리는 assume-unchanged 와 달리, skip-worktree 는 해당폴더의 파일(폴더가) 변경이 생겼더라도 flag 가 유지된다. git update-index --skip-worktree FILENAME &#160; 다시&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8706/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>docker 사용법</title>
		<link>https://blog.lael.be/post/8617</link>
				<comments>https://blog.lael.be/post/8617#respond</comments>
				<pubDate>Tue, 19 Mar 2019 04:03:43 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8617</guid>
				<description><![CDATA[글을 써보고는 있지만 완성을 못한다고 판단할 경우, 비공개로 바뀔 수 있음. 이 글은 초고입니다. 지속적으로 수정됩니다. 글 작성은 보통 한달이 걸립니다. 다음달 말쯤 완성되려나.. &#160; Docker https://www.docker.com/ &#160; &#60;&#60; HERE : docker 의 개념 설명을 쓸것 &#62;&#62; &#60;&#60; HERE : docker 의 활용예시를 쓸것 &#62;&#62; &#160; 명령어 기본 형식 docker [명령어 옵션] 항상 root 권한으로 실행할 것. -이미지 검색 docker search [키워드] docker search ubuntu 이 이미지 저장소는 https://hub.docker.com/search?q=ubuntu&#38;type=image 와 연결되어 있음. docker 는 서비스로 항상 실행중. 기본 tag 는 latest 이다. - 이미지 다운로드 docker pull ubuntu:latest 또는 docker image pull ubuntu:latest &#160; - 다운받은 docker image 보기 docker images 또는 docker image list &#160; Commands: attach Attach local standard input, output, and error streams to a running container&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8617/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[잡담] javascript async 코딩</title>
		<link>https://blog.lael.be/post/8614</link>
				<comments>https://blog.lael.be/post/8614#comments</comments>
				<pubDate>Sun, 17 Mar 2019 03:21:31 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8614</guid>
				<description><![CDATA[저는 현재 2년째 웹앱에 대해서 자가학습(self study)을 하고 있습니다. 2년쯤 하고 나니까 HTML로 앱을 만드는 것에 대해 개념이 잡히고 있습니다. (즉 웹앱을 금방 만들 수 있음) &#160; 웹앱과 더불어 javascript async 에 대해서 시행착오(trial and error)를 하고 있습니다. 많은 함수들이 async 로 실행되네요. 특히 웹을 넘어선 기능들(특히 DB, application native 함수 호출)은 async 로만 동작합니다. 2년쯤 삽질하고 나니, 이제.. 겨우.. &#8220;왜 이 구문이 지금 실행되는거지?&#8221;를 이해하는 수준이 되었습니다. 어쩔 수 없이 배우고 있긴 하지만, 이건 정말 너무 어렵네요. 가끔 async 구문을 잘 처리하지 못하면 여러개의 함수가 동시에 실행되어서 (해당 자원에 대해) hang 이나 crash 나는 경우도 있더군요. &#160; 아무튼 너무 어려운 것을 계속하고 있는, 저의 현재 근황이었습니다. &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8614/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>요즘의 사이버 전사에 대한 생각</title>
		<link>https://blog.lael.be/post/8536</link>
				<comments>https://blog.lael.be/post/8536#comments</comments>
				<pubDate>Mon, 18 Feb 2019 02:15:16 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[사이버전사]]></category>
		<category><![CDATA[스노비즘]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8536</guid>
				<description><![CDATA[요즘 신조어로 &#8220;사이버 전사&#8221;, &#8220;키보드 워리어&#8221; 라는게 있다. (뜻은 알아서 추측하길 바란다.) 또 신조어인지는 모르겠는데 스노비즘(https://namu.wiki/w/스노비즘) 이라는 단어도 있다. &#160; 나는 개인적으로 여러 커뮤니티글을 모아보는 소프트웨어를 만들어서 사용하고 있다. 어느 커뮤니티에 어느 이슈가 있는지 살펴보는 용도이다. &#160; 1. 패턴 뉴스가 나옴 키보드 타자 빠른 사람들이 관련정보를 먼저 검색함(그러나 깊게 이해하지는 않음) 2번의 사람들이 갑자기 전문가가 됨. (유튜브나 블로그에서 양념을 더 쳐서 조회수를 높이기도 함) 사람들 분노 -&#62; 일부는 투쟁! 하루 이틀씩 지나면서 분노가 20%씩 감소 7 ~ 10일쯤 지나면 인터넷신문에서 새로운 뉴스를 내보냄. 2번과 같이 키보드 빠른 사람들이 먼저검색 이전 상황과 같이 분노! 분노조절 장애가 됨 이렇게 되면 괜히 화가 나고, 분노 조절장애가 되고, 막 차가 신호등 걸렸는데 정부탓인것 같고, 짜장면 500원 올랐는데 정부탓인것 같고 당장 화낼게 필요하고, 동조는 하지만,&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8536/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>https 의 일부사이트는 차단되는게 맞습니다.</title>
		<link>https://blog.lael.be/post/8518</link>
				<comments>https://blog.lael.be/post/8518#comments</comments>
				<pubDate>Mon, 18 Feb 2019 01:37:36 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Deep Packet Inspection]]></category>
		<category><![CDATA[dpi]]></category>
		<category><![CDATA[https 차단 우회]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8518</guid>
				<description><![CDATA[몇몇 커뮤니티에 아래의 글을 이미 작성했었음. 피드백도 받았음. 너무 반정부 프레임으로 가길래, 토론을 이끌기 위해 작성함. 이 글의 목적은 &#8220;토론의 불씨를 켜는것&#8221; 이었고, 목적을 달성했다고 판단됨. 어제 (2019년 2월 12일)부터 방통위 지시로 인해 국내 주요통신사에서의 895개의 사이트 접속이 차단되었습니다. 관련 기사 : http://m.minplus.or.kr/news/articleView.html?idxno=6890 차단방식은 DPI(Deep Packet Inspection)이며, SSL 연결시 시도하는 SNI 호스트이름을 살펴서 특정 조건에 해당하면, 연결종료 패킷을 발생합니다. 인증서 위조나 데이터 자체를 살펴보는것은 안되기 때문에, SSL(https) 보안연결을 방해하는 방식으로 막는겁니다. HTTPS 통신은 현재, 전구간 암호화되는데 &#8220;접속할 사이트 도메인&#8221; 부분만 암호화가 되어있지 않습니다. 예를들어 이 글 주소(https://blog.lael.be/post/8518)를 브라우저로 접속하면 아래와 같은 연결이 진행됩니다. 상세주소(/post/8518)나 입력값 및 내용은 암호화되어 보이지 않습니다. &#160; 어느 분이 최근의 접속차단을, 편지지로 비유해서 &#8220;정부가 편지지 내용을 열어보고 차단한다!&#8221; 라고 설명했던데, 이것은 잘못된 설명입니다. 전송데이터 자체를 살펴보는 기술은&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8518/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>StarLog.GG 개발기</title>
		<link>https://blog.lael.be/post/8476</link>
				<comments>https://blog.lael.be/post/8476#comments</comments>
				<pubDate>Thu, 07 Feb 2019 09:13:42 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[starlog]]></category>
		<category><![CDATA[starlog.gg]]></category>
		<category><![CDATA[스타로그]]></category>
		<category><![CDATA[제작후기]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8476</guid>
				<description><![CDATA[지금은 사라진 사이트 &#8220;StarLog.GG&#8221; 의 개발 후기를 적고자 한다. &#160; StarCraft는 Blizzard 에서 개발한 게임 이름이자, 상표이다. 1998년에 출시된 게임이며, 스토리와 그래픽도 좋았고, 당시에 경쟁 게임이 없었기 때문에 그 시절 컴퓨터를 접한 사람은 모를 수가 없는 필수적인 게임이었다. 놀랍게도 20여년이 지난 지금까지도 즐기는 사람이 많다. 게임에 접속해보면, 아직도 초보방이 많다.(하지만 모두 굇수들..) 간혹, &#8220;OO맵 고수만 오세요&#8221; 라는 방이 있다면 이건 &#8220;프로게이머 들어오세요&#8221; 라는 뜻이다. 개발사(Blizzard)에서는 이렇게 지속적으로 이용하는 사용자들을 위해 그래픽 + 음성이 개선된 버전을 만들었다. 이것이 &#8220;스타크래프트 리마스터&#8221;이다. 공식 담당 부서는 Blizzard classic game team 이다. &#160; 1. 선행사례 조사 및 예상 이용자 파악 이런 종류의 게임은 실력을 나타내는 지표가 중요하다. 승무패, 승률, 랭킹 같은 통계가 나와주어야 한다. 이런 종류의 사이트는 대부분 .gg 도메인을 사용하고 있었고, 게임 이름의 일부를 서비스&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8476/feed</wfw:commentRss>
		<slash:comments>7</slash:comments>
							</item>
		<item>
		<title>블로그 서버 정전이 발생하다. (UPS 자랑글)</title>
		<link>https://blog.lael.be/post/8465</link>
				<comments>https://blog.lael.be/post/8465#comments</comments>
				<pubDate>Sun, 03 Feb 2019 06:00:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8465</guid>
				<description><![CDATA[저는 이 블로그를 통해 여러분께 &#8220;여러분 클라우드 서버가 최고입니다! 모두 클라우드 서버를 쓰세요!&#8221; 라는 글을 작성합니다. 하지만, 아이러니하게도 서버를 직접 구축하여 운영하고 있습니다. &#160; 직접 서버 구축의 장점 리소스 제한이 없다. (트래픽이나 I/O 제한 없음) 자유로운 설치 구성 가능 고성능 (저는 SSD 2TB, RAM 32GB 사용중) 고성능 GPU 사용가능. (데스크탑 서버라 GTX가 달려있습니다. ffmpeg이나 gd 관련 처리가 더 빠름. 클라우드 서버는 이런것 없음.) 낮은 운영비용 클라우드 서버는 몇몇의 악성 사용자로부터 서버를 보호하고자 여러 종류의 자원제한이 걸려있다. 높은 성능을 사용하려면 높은 비용의 상품을 선택해야 한다. &#160; 직접 구축 적절한 서버 + UPS = 90 만원  정도 비용으로 구축하였습니다. (중고나라를 잘 살펴보면 새 것같은 중고를 살수 있습니다.) &#160; UPS 도 샀었는데, 이 UPS가 오늘의 4초간의 정전을 막아주었네요. 즉, 이 글은 제 UPS 를&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8465/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>Ubuntu 에서 FTP 서버 설정하기</title>
		<link>https://blog.lael.be/post/8404</link>
				<comments>https://blog.lael.be/post/8404#respond</comments>
				<pubDate>Mon, 28 Jan 2019 04:40:54 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[ftp]]></category>
		<category><![CDATA[ftp서버]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[vsftpd]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8404</guid>
				<description><![CDATA[저는 리눅스에 기본 내장된 ssh 의 subsystem 인 sftp 사용을 권장합니다. (즉, 이 글을 읽을 필요없이 기본적으로 존재하는 sftp 사용을 권장합니다!) 굳이 FTP 사용을 원하시는 분들이 계셔서 설치방법을 설명해봅니다. Ubuntu Linux 기준으로 작성되었지만, 다른 운영체제에서도 적절히 응용해서 적용할 수 있습니다. &#160; vsftpd란? vsftpd는 Very Secure FTP Server Daemon 를 뜻합니다. (소스코드의 README 에 쓰여있음) GPLv2 라이센스를 따르며, 전세계에서 가장 많이 쓰이는 ftp 서버 프로그램입니다. vsftpd 공식사이드(https://security.appspot.com/vsftpd.html) 에 따르면 다음의 유명한 저장소가 vsftpd 를 사용중이라고 합니다. ftp.redhat.com ftp.suse.com ftp.debian.org ftp.freebsd.org ftp.gnu.org ftp.gnome.org ftp.kde.org ftp.kernel.org rpmfind.net ftp.linux.org.uk ftp.gimp.org ftp-stud.fht-esslingen.de gd.tuwien.ac.at ftp.sunet.se ftp.ximian.com ftp.engardelinux.org ftp.sunsite.org.uk ftp.isc.org 따라서 우리는, 라이센스 문제가 없으며, 매우 많은 사람이 사용 중인 검증된 vsftpd 소프트웨어를 사용하여 FTP 서버를 구축하도록 하겠습니다. &#160; 설치 방법 APT 파일목록 갱신 # apt update&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8404/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu 18.04 LTS 에서 웹서버(NGINX + PHP-FPM + MariaDB) 구성하기</title>
		<link>https://blog.lael.be/post/8319</link>
				<comments>https://blog.lael.be/post/8319#comments</comments>
				<pubDate>Tue, 22 Jan 2019 02:35:54 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8319</guid>
				<description><![CDATA[이 글은 현재 작성중이며 완성되지 않았습니다. 지속적인 수정이 일어납니다. 한달정도 수정해야합니다. 과거에 1회라도 nginx 구축해본 사람만 따라하세요. use at your own risk. &#160; &#160; &#160; Ubuntu 18.04 LTS 에서 웹서버(Apache + PHP + MySQL) 구성하는 방법을 알아보려면 https://blog.lael.be/post/7264 로 이동. 이 글은 Ubuntu 18.04 LTS 운영체제에서 NGINX + PHP-FPM + MariaDB 소프트웨어를 설치하고 구성하는 방법에 대해 설명합니다. Ubuntu 9.04 버전부터 10년 넘게 구축 방법을 작성/유지보수 하고 있는데, 그동안 별 문제가 없었습니다. 또한, 설치 성공 후기 글이 많으니 올바르게 설명하고 있는 것 같습니다. 혹시라도, 구축 중 문의사항이 생기면 댓글이나 Contact 로 알려주세요. 일반 사업체 및 실무 서비스에서 사용할 수 있는 안정적인 구축 방법을 설명 하겠습니다. 이 글에서는 Ubuntu 18.04 LTS 운영체제를 사용합니다. * LTS 버전이란? Long Term Support 의 약자입니다. 개발사에서 10년간의 유지보수, 업데이트를 제공합니다. 현재&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8319/feed</wfw:commentRss>
		<slash:comments>12</slash:comments>
							</item>
		<item>
		<title>올한해도 수고 많으셨습니다.</title>
		<link>https://blog.lael.be/post/8208</link>
				<comments>https://blog.lael.be/post/8208#comments</comments>
				<pubDate>Mon, 24 Dec 2018 01:39:11 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8208</guid>
				<description><![CDATA[올한해 수고 많으셨습니다. 이제 2018년이 일주일 정도 남았군요. 재미있는 기술들을 실습하며 배우는 바쁜 한해였던 것 같습니다. &#160; 새해에는 더 유익한 주제의 글을 작성하려고 노력 중입니다. &#160; 앞으로 작성할 블로그 글 주제는 다음과 같습니다. - 어플리케이션 제작을 위한 API 설계하는 방법, API 서버 구성방법. - HTML 을 사용해서 IOS, Android, Windows, Mac 어플리케이션 제작하는 방법. - 스마트폰이나 카메라를 활용해 영상을 실시간으로 녹화하고 방송하는 방법. - ElasticSearch 검색서버를 구축하고, 기존 솔루션과 연동하는 방법. 구문 문석기 활용법. 한글분석기 적용하는 방법. &#160; 매우 좋은 기술들이긴 한데, 글로 설명하기에 양이 방대합니다. 따라서 글 작성을 시작할 수 있을지 모르겠네요. &#160; 아무튼 즐겁고 행복한 연휴 되세요~]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8208/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>워드프레스 클래식 에디터로 변경하기</title>
		<link>https://blog.lael.be/post/8167</link>
				<comments>https://blog.lael.be/post/8167#respond</comments>
				<pubDate>Sat, 08 Dec 2018 20:03:15 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[classic]]></category>
		<category><![CDATA[editor]]></category>
		<category><![CDATA[gutenberg]]></category>
		<category><![CDATA[wordpress]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8167</guid>
				<description><![CDATA[워드프레스가 5.0버전으로 업데이트 되면서 글작성 에디터가 &#8220;gutenberg&#8221; 라는 에디터로 변경되었다. 별도의 선택 옵션 없이 강제로 에디터가 변경되었다. 나는 새로운 에디터 방식보다, 기존의 워드프로세서처럼 글을 작성하는게 더 나은 것 같더라. &#160; 아무튼 기존의 클래식 에디터로 바꾸는 방법을 설명하겠다. &#160; 1. 플러그인 메뉴로 이동 &#160; 2. classic editor 검색 후 설치 Classic Editor 공식 사이트 : https://github.com/WordPress/classic-editor/ 설명 : Classic Editor is an official plugin maintained by the WordPress team. &#160; 3. 활성화! 및 설정 관리자 메뉴 &#62; 설정 &#62; 쓰기 &#160; &#160; 새로운 에디터 완전 불편하던데, 큰 불편을 겪을뻔 했다. &#160; &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8167/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>KT 화재로 인해 블로그 접속불가</title>
		<link>https://blog.lael.be/post/8095</link>
				<comments>https://blog.lael.be/post/8095#comments</comments>
				<pubDate>Sun, 25 Nov 2018 10:55:31 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8095</guid>
				<description><![CDATA[이 블로그는 기업용 광기가라인, 고정 IP, 괜찮은 사양의 서버, 2중 IP, UPS 환경에서 구동중이다. 여러 장애 시나리오에 대해 적절한 대응 조치를 준비해 두었지만, KT 통신사에 화재가 발생하여 인터넷이 안되는건, 예측 시나리오에 없었다. 이 화재로 인해 서대문구, 마포구, 용산구, 은평구, 고양시 모든 통신이 중단되었다. &#60; 어느 카페의 안내문. 인터넷이 안되므로, 카드결제가 안됨. &#62; &#160; 상용서비스였다면, 물리적으로 서버에 접근해서 백업 받은 후, 클라우드로 재구축해서 오픈했겠지만, 이 블로그는 상용서비스가 아니므로, 가만히 두었다. &#160; 자체 파악한 KT 통신 장애 시간 (서울 마포구 기준) : 2018/11/24 11:47 ~ 2018/11/25 19:27  (약 32시간) &#160; 이 기간동안 접속을 시도하셨던 분들께 양해를 구한다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8095/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>아마존 웹서비스 내부 DNS 서버 장애</title>
		<link>https://blog.lael.be/post/8064</link>
				<comments>https://blog.lael.be/post/8064#respond</comments>
				<pubDate>Thu, 22 Nov 2018 06:30:06 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8064</guid>
				<description><![CDATA[오늘 2018년 11월 22일 오전에 아마존 내부 DNS 서버 장애가 발생했다. 아마존웹서비스의 경우 대부분의 상품이 floating ip 를 사용하고 있으며, 개발 가이드 문서에도 서비스를 &#8220;IP 주소 대신 도메인으로 연결해서 작업하여라&#8221; 라고 쓰여 있다. 따라서 아마존웹서비스를 사용하는 곳들은, 비록 자신이 사용하는 서비스의 IP 를 알고 있더라도 Domain 주소를 입력하는게 일반적이다. &#160; 이렇게 도메인 주소를 사용해서 서비스를 구성하는게 일반적인데, 갑자기 amazon 내부의 domain name resolving 서버가 먹통이 된 것이다! 서버들은 통신 대상을 찾지 못하여 통신 장애를 일으켰다. 여러 장애 시나리오에 대해 대응 정책을 세우지만, (아마존에서 자체 관리하는) 내부 DNS 서버가 다운될 것이라고 가정한 곳은 없었던 것 같다. 따라서 이러한 예측하지 못한 장애에 대해서 대비가 되어있지 않았고, 서비스가 다운된 것이다. &#160; 나도 감히 이런 장애가 발생할 것이라고는 생각하지 못했다. &#160; 내가 자체적으로 파악한 바로는, 오늘(2018-11-22)의 Amazon WebService&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8064/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>오픈소스 시장의 규모 키우는 방법</title>
		<link>https://blog.lael.be/post/8057</link>
				<comments>https://blog.lael.be/post/8057#comments</comments>
				<pubDate>Tue, 20 Nov 2018 11:27:40 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=8057</guid>
				<description><![CDATA[다른 블로거들 보니까 가끔씩, 사는 이야기나 사설을 적더라. 그동안 쓰고 싶었던 잡담, 생각들이 많이 있었는데 오늘부터 하나씩 적어볼까 한다. 오늘의 주제는 &#8220;오픈소스 시장의 규모 키우는 방법&#8221; 이다. &#160; 왜 국내 서비스는 크게 발전하지 않을까? 이것은 놀랍게도 지리적 요인이 작용한다. 우리나라는 3면이 바다로, 나머지 1면은 휴전선으로 막혀있다. 갈라파고스 섬이다. 선점과 독점이 일어난다. 현대 기아차, 삼성전자 가전제품을 예로 들 수 있는데, 수출을 해서 해외로 운송된 후의 가격이 국내 가격보다 저렴하다(!). 기름값 또한 너무 비싸다. 독점이 일어나니까 도매 유통업으로만 엄청난 수익을 올린다. 통신 요금도 너무 비싸다. 저렴한 제도가 많이 있지만 산업 전반적으로 가격을 내려야 한다. &#160; 즉 경쟁이 없으니까(섬이라서) 발전하지 않는다. 하지만 IT 의 경우 초국가적인 상태이며, 이 또한 경쟁이 일어나는데, 사람의 인식은 그대로라서 share 하는게 없다. 이러면 에코시스템이 돌지 않아서 고인물이 된다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/8057/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>iptables 를 사용해서 리눅스 방화벽 설정하기 (접근 제어)</title>
		<link>https://blog.lael.be/post/7982</link>
				<comments>https://blog.lael.be/post/7982#respond</comments>
				<pubDate>Tue, 13 Nov 2018 07:04:00 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7982</guid>
				<description><![CDATA[옵션) 방화벽 적용하기. * 접속자의 IP 가 고정되어 있으면 아래와 같이 방화벽 세팅을, 웹호스팅 서비스와 같이 접속자의 IP를 특정할 수 없으면 fail2ban 을 (https://blog.lael.be/post/858#fail2ban) 사용하세요. 클라우드 방화벽을 사용할 수 있다면(Amazon Security Group, KSCLOUD 방화벽등) 클라우드 방화벽을 이용하세요. 저의 경우 몇대의 단독 VPN 서버가 있으며(즉 어느 위치에 있든지 고정IP 로 활동할 수 있음) 해당 IP 를 방화벽 예외로 설정해 두곤 합니다. 당연한 이야기지만 Ubuntu 에도 방화벽이 있습니다. 무척 당연한 이야기지만 방화벽을 사용하면 서버 보안이 매우 많이 향상됩니다. 현재 방화벽 설정 보기. (List) #iptables -nL INPUT (서버로 들어오는 것 관리), FORWARD (서버에서 내부망으로 연결관리;잘 안씀), OUTPUT (서버에서 나가는 것 관리) 로 이루어져 있다. 보통 FORWARD와 OUTPUT은 건들이지 않고 INPUT 만 수정한다. policy ACCEPT 라는 뜻은 아무 조건도 해당하지 않았을 때 ACCEPT 하라는&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7982/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>무료 업무용 협업 도구 사내메신저 잔디 (jandi)</title>
		<link>https://blog.lael.be/post/7895</link>
				<comments>https://blog.lael.be/post/7895#comments</comments>
				<pubDate>Wed, 07 Nov 2018 04:46:26 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[jandi]]></category>
		<category><![CDATA[tosslab]]></category>
		<category><![CDATA[그룹웨어]]></category>
		<category><![CDATA[메신저]]></category>
		<category><![CDATA[무료]]></category>
		<category><![CDATA[잔디]]></category>
		<category><![CDATA[토스랩]]></category>
		<category><![CDATA[협업도구]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7895</guid>
				<description><![CDATA[&#160; 이 글은 커피우유를 주는 동영상 공유 이벤트에 응모하기 위한 글입니다. 커피우유 당첨 안됐음 ㅜㅜ. 100명에게 준다고 했는데, 그 인원안에도 들지 못한건가 ㅜㅜ &#60; 영상 : 협업툴 잔디 &#62; &#160; JANDI (잔디) JANDI 는 업무용 그룹 메신저 이다. 공식사이트는 https://www.jandi.com/landing/kr/pricing 여기. (주)토스랩에서 개발/운영한다. 무료 요금제로도 별다른 제한없이 이용할 수 있다. Win, Mac, IOS, Android 앱이 존재한다. &#160; JANDI와 비슷한 역할의 제품들 (경쟁 제품) 슬랙(Slack) - https://slack.com/ 디스코드(Discord) - https://discordapp.com/ 야머(Yammer) - https://products.office.com/yammer KT비즈메카 - https://www.bizmeka.com/ 가비아 하이웍스 - https://hiworks.com/ 라인웍스 - https://line.worksmobile.com/ 다음 스마트워크 - http://mail2.daum.net/ Zoho - https://www.zoho.com/ Slack 을 제외하고 모두 한글을 지원합니다. Zoho 의 경우 사이트는 영문인데, client product 는 한글을 지원합니다. &#160; JANDI 개발 프레임워크 Electron (https://electronjs.org/) 유명한 데스크톱 앱 개발 프레임워크이다. Slack, Atom에디터가 이 기반으로 제작된 앱이다. &#160; JANDI 인프라 AWS Tokyo 적어도 track 이나&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7895/feed</wfw:commentRss>
		<slash:comments>5</slash:comments>
							</item>
		<item>
		<title>리눅스 시스템에서 디스크 용량 확장하기</title>
		<link>https://blog.lael.be/post/7735</link>
				<comments>https://blog.lael.be/post/7735#comments</comments>
				<pubDate>Mon, 29 Oct 2018 02:47:12 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7735</guid>
				<description><![CDATA[이 글은 리눅스 시스템에서 디스크 용량을 확장(Expand, Enlarge)하는 방법에 대해 설명하는 글입니다. 디스크 용량 확장은 클라우드 서버 환경에서만 가능한 상황입니다. (아래 그림 참고) 이 작업은 환경에 따라서 서버의 재부팅을 하지 않고 적용할 수도 있습니다. (재부팅 필요 유무는 글 내용에 표시) &#160; 디스크 확장 디스크 확장이란 말 그대로 디스크의 크기를 늘리는 것입니다. &#60; 그림 : 디스크 용량 확장 &#62; 도식화 하자면 위의 그림과 같다. 하드디스크의 용량이 늘어난 것이다. 하지만 운영 중인 시스템에는 영향이 없다. 그저 상관없는 공간이 늘어났을 뿐. 디스크 파티션이 이미 정해져있기 때문에(파티션 테이블은 변경되지 않았기 때문에) 물리 디스크의 크기를 확장했어도, 리눅스 시스템상의 사용 가능 용량은 변함없이 그대로이다. &#160; 디스크 확장 적용 따라서 디스크 확장을 적용하기 위해 해야할 일은 다음과 같다. 파티션 크기 조정 변경사항 시스템에 적용 &#160; 사용 중인 서버의 용량&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7735/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>리눅스 서버 ssh 원격접속 설정하기 (root 로그인 허용)</title>
		<link>https://blog.lael.be/post/7678</link>
				<comments>https://blog.lael.be/post/7678#respond</comments>
				<pubDate>Thu, 18 Oct 2018 13:28:02 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7678</guid>
				<description><![CDATA[&#160; 이 글은 리눅스 서버에서 클라이언트가 ssh 접속을 할 수 있게 허용하는 설정방법에 대해 설명합니다. * 당신이 리눅스 서버에 ssh 로 연결하는 방법을 알고 싶다면 다음의 글을 참고하세요. 리눅스 명령어 환경으로 원격 접속하는 방법 : https://blog.lael.be/post/7574 &#160; 기본적으로 리눅스 운영체제가 설치될 때 root 비밀번호를 설정하지 않습니다. 이 경우 root 계정의 비밀번호는 무작위의 충분히 긴 문자열로 설정됩니다. 여러분이 만약 root 비밀번호를 설정할 수 있었다면, 누군가는 비밀번호를 helloworld 나 123456 을 설정했을 것이고 이것은 심각한 문제를 일으킬 것입니다. 아무튼 이런 귀찮은 정책으로 인해서 리눅스의 보안이 더 좋아진 것입니다. 하지만 root 로그인을 못하는 경우, 서버 다루기가 매우 번거롭기 때문에, 다음과 같은 작업이 필요합니다. &#160; root 계정 비밀번호 설정 및 원격접속 허용 (Set root account password) 클라우드서버 호스팅 업체마다 기본 제공되는 계정이 다릅니다. 만약 클라우드&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7678/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>이미지 캐시 서버 구축하기 (나만의 CloudFlare 구축하기)</title>
		<link>https://blog.lael.be/post/7605</link>
				<comments>https://blog.lael.be/post/7605#comments</comments>
				<pubDate>Sun, 14 Oct 2018 13:41:16 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[apache]]></category>
		<category><![CDATA[cloud flare]]></category>
		<category><![CDATA[image cache]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[proxy]]></category>
		<category><![CDATA[이미지]]></category>
		<category><![CDATA[캐시]]></category>
		<category><![CDATA[프록시]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7605</guid>
				<description><![CDATA[이 글의 방법대로 구축하여 런칭한 &#8220;짤그램&#8221; zzalgram 움짤 어플리케이션을 홍보해봅니다! 완전빠른 속도! 대용량 트래픽 움짤 서비스! (제가 만든 앱은 아닙니다.) 앱 다운로드(무료) : https://zzalgram.com/ &#160; 이 글에서는 나만의 이미지 캐시 서버를 구축하여, 사이트 속도를 높이고 부하를 줄이는 방법에 대해 설명합니다. 당신의 사이트가 해외 서버를 이용 중이라면 이 방법을 통해 아주 높은 속도 향상효과를 얻을 수 있습니다. &#160; CDN 캐시 서비스 업체인 CloudFlare 를 목표로 삼고, 비슷하게 동작하도록 만들어 보겠습니다. &#160; 구축 방법 해외망이 좋은 서버 고르기. 2018년 현재 한국에서 해외망이 가장 좋은 서버는 AWS 입니다. AWS 의 상품 중에서 저가형인 Lightsail 을 이용하도록 하겠습니다. 공식사이트 : https://lightsail.aws.amazon.com 운영체제는 Ubuntu 16.04 LTS 또는 Ubuntu 18.04 LTS 를 선택하세요. 이미지 캐시 서버는 CPU와 Memory를 거의 사용하지 않습니다. 오직 스토리지 용량만 고려하여 선택하세요. 5달러 상품 또는&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7605/feed</wfw:commentRss>
		<slash:comments>33</slash:comments>
							</item>
		<item>
		<title>리눅스 명령어 환경으로 원격 접속하는 방법 (Linux console client)</title>
		<link>https://blog.lael.be/post/7574</link>
				<comments>https://blog.lael.be/post/7574#comments</comments>
				<pubDate>Sat, 13 Oct 2018 12:50:42 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[cli]]></category>
		<category><![CDATA[gui]]></category>
		<category><![CDATA[ssh client]]></category>
		<category><![CDATA[무료]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7574</guid>
				<description><![CDATA[요즘 너무 기초 단계라고 생략하고 넘어간 것들에 대해 설명하는 글을 작성하고 있다. 이 글에서는 당신의 운영체제 환경에서 원격 리눅스 시스템에 접속하여 명령어를 사용하는 방법에 대해 설명하도록 하겠다. &#160; GUI 와 CLI 인터페이스란 사물 간 또는 사물과 인간 간의 의사소통이 가능하도록 만들어진 매개체를 의미한다. 인터페이스의 종류는 매우 많다. 하지만, 사람과 - 인간 사이의 인터페이스는 Graphic User Interface 와 Command Line Interface , 이 두가지를 주로 사용한다. (먼 훗날에는 텔레파시 인터페이스나, 뇌파 인터페이스를 쓸지도 모른다.) &#160; GUI 는 매개체가 그래픽이다. 터치스크린이나, 마우스, 키보드 입력으로 화면(그래픽)이 변하고 작업을 실행한다. CLI 는 매개체가 커맨드라인이다. 키보드 입력으로 명령어(command)를 입력하여 작업을 실행한다. &#160; 현대의 대부분의 대중적인 운영체제는 GUI 와  CLI 를 모두 지원한다. &#60; Windows Server 2012 R2 - GUI &#62; &#160; &#60; Ubuntu 18.04 LTS -&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7574/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>Ubuntu 18.04 LTS 운영체제 설치하는 방법</title>
		<link>https://blog.lael.be/post/7541</link>
				<comments>https://blog.lael.be/post/7541#respond</comments>
				<pubDate>Wed, 10 Oct 2018 15:50:02 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[install]]></category>
		<category><![CDATA[ubuntu]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7541</guid>
				<description><![CDATA[리눅스 배포판 중 하나인 Ubuntu 운영체제의 설치 방법에 대해 설명하는 글입니다. &#160; 리눅스 배포판이란? 리눅스 자체는 오픈소스 소프트웨어 입니다. 요즘 유명한 오픈소스 소프트웨어로 안드로이드 가 있습니다. 코어 자체는 공통적이고 핵심적인 것을 정의합니다. 이 코어를 바탕으로, 특색에 맞추어 만들어 지는 것이 배포판 입니다. 리눅스의 배포판은 Ubuntu, CentOS 등이 있습니다. 안드로이드의 배포판은 MIUI, 삼성 안드로이드, LG 안드로이드 등이 있습니다. 배포판들 끼리 작은 차이가 있지만, 코어가 같기 때문에 대체적인 구조와 기능은 비슷합니다. &#160; Ubuntu 커뮤니티가 가장 활발하고(구글 검색이 잘된다는 뜻), 업데이트가 빠른 운영체제인 Ubuntu의 설치 방법은 다음과 같습니다. 현재 배포된 Ubuntu 버전은 아래와 같습니다. 운영체제의 수명이 긴 LTS 버전을 설치하도록 합시다. (버전숫자가 높다고 더 좋다는 뜻은 아님) 지금의 권장하는 운영체제 버전은 Ubuntu 18.04 또는 Ubuntu 16.04 입니다. (위의 표를 보면 아시겠죠?) Ubuntu 운영체제에 관해서는 http://en.wikipedia.org/wiki/Ubuntu_(operating_system) 를 참조하세요.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7541/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>이번주 클라우드 호스팅 소식</title>
		<link>https://blog.lael.be/post/7377</link>
				<comments>https://blog.lael.be/post/7377#comments</comments>
				<pubDate>Sat, 29 Sep 2018 15:01:18 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7377</guid>
				<description><![CDATA[이번주 추석 연휴에 일부 서비스 업체에 장애가 있었습니다. &#160; 1. virtly cloud ddos (https://virtly.cloud/) virtly 는 클라우드 호스팅 정식오픈을 준비하고 있는 업체입니다. 추석 연휴 첫날(9월 23일) 저녁에 15G 크기의 ddos 를 맞았습니다. 경과 : 일주일 정도 다운되었고 현재 진행중입니다. 현재 오픈 베타 상태라 크게 문제는 없을 것이라 파악됩니다. &#160; 2. ruatic hosting ddos (https://luatic.co.kr/) ruatic 은 cpanel 호스팅 및 클라우드 호스팅을 서비스하고 있는 업체입니다. 24일(추석 당일) ~ 27일 까지 4대의 서버에 대해 ddos 공격이 있었으며 3대는 해외망 차단, 1대 서버는 idc 로부터 직권해지 통보를 받은 상태입니다. 경과 : 해지 통보를 받은 서버는 접근이 불가능 하며, 다음주 월요일(10월 1일)에 반출 후 복구할 예정이라고 합니다. &#160; 3. 아이웹 호스팅 랜섬웨어 (http://www.i-web.kr/) 아이웹은 템플릿형 웹호스팅을 하는 업체입니다. 22일(추석 연휴 전날 토요일)에 랜섬웨어에 감염이&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7377/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>vi 에디터 사용법 (vim editor)</title>
		<link>https://blog.lael.be/post/7321</link>
				<comments>https://blog.lael.be/post/7321#comments</comments>
				<pubDate>Wed, 26 Sep 2018 09:55:52 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[vi editor]]></category>
		<category><![CDATA[vi 에디터]]></category>
		<category><![CDATA[리눅스 편집]]></category>
		<category><![CDATA[브이아이]]></category>
		<category><![CDATA[에디터]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7321</guid>
				<description><![CDATA[이 글에서는 거의 대부분의 리눅스 배포판에 포함되어 있는 vi 호환 에디터인 vim 에디터의 사용법에 대해 설명합니다. 당신이 최근 5년 이내에 배포된 리눅스를 설치하였다면 vim 에디터는 이미 설치되어 있을 것입니다. (또한 기본값입니다) 만약 당신의 시스템이 오래되어 vim 에디터가 설치되어 있지 않다면 다음의 명령어를 통해 vim 을 설치하세요. vim 은 VI iMproved 의 약자입니다. (향상된 vi) Ubuntu 의 경우 # apt-get install vim CentOS 의 경우 # yum install vim &#160; vi 에디터는 모든 Linux/ Unix 시스템에서 사용할 수 있습니다. vi 에디터를 사용하기 위해서 마우스 입력 장치가 필요 없으며, 키보드 입력으로 모든 기능을 사용할 수 있기 때문에 터미널 환경에서 주로 사용되는 프로그램 입니다. vi editor 는 vi(sual) editor 의 약자이며 &#8220;브이-아이 에디터&#8221; 라고 부릅니다. &#60; vi 에디터 개발자 Bill Joy &#62; &#160; 현재는&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7321/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>Ubuntu 18.04 LTS 에서 웹서버(Apache + PHP + MySQL) 구성하기</title>
		<link>https://blog.lael.be/post/7264</link>
				<comments>https://blog.lael.be/post/7264#comments</comments>
				<pubDate>Mon, 10 Sep 2018 01:20:34 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[apache]]></category>
		<category><![CDATA[apm]]></category>
		<category><![CDATA[mysql]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[setup]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[구축]]></category>
		<category><![CDATA[설정]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7264</guid>
				<description><![CDATA[이 글은 Ubuntu 18.04 LTS 운영체제에서 Apache + PHP + MySQL 소프트웨어를 설치하고 구성하는 방법에 대해 설명합니다. Ubuntu 9.04 버전부터 10년 넘게 구축 방법을 작성/유지보수 하고 있는데, 그동안 별 문제가 없었습니다. 또한, 설치 성공 후기 글이 많으니 올바르게 설명하고 있는 것 같습니다. 혹시라도, 구축 중 문의사항이 생기면 댓글이나 Contact 로 알려주세요. 일반 사업체 및 실무 서비스에서 사용할 수 있는 안정적인 구축 방법을 설명 하겠습니다. 이 글에서는 Ubuntu 18.04 LTS 운영체제를 사용합니다. * LTS 버전이란? Long Term Support 의 약자입니다. 개발사에서 10년간의 유지보수, 업데이트를 제공합니다. 현재 무료 리눅스 배포판 중에서 10년 업데이트를 지원하는 운영체제는 Ubuntu 뿐입니다. * 왜 10년 업데이트? Kiosk나 기타 Embeded 기기에서 제품설계 및 구축 운용까지 몇년(1~4년)이 걸립니다. 제품 출시 후 얼마지나지 않아 운영체제의 업데이트가 중단된다면 문제가 생기겠죠. 요즘에는 응용소프트웨어 분야에서도 이와 같이 LTS&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7264/feed</wfw:commentRss>
		<slash:comments>80</slash:comments>
							</item>
		<item>
		<title>Ubuntu Linux 에서 디스크 용량 추가하기</title>
		<link>https://blog.lael.be/post/7184</link>
				<comments>https://blog.lael.be/post/7184#respond</comments>
				<pubDate>Thu, 02 Aug 2018 08:16:38 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[parted]]></category>
		<category><![CDATA[resize2fs]]></category>
		<category><![CDATA[resizepart]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[vgdisplay]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7184</guid>
				<description><![CDATA[이 글을 통해 Ubuntu Linux 에서 디스크 용량을 추가하는 방법에 대해 알아보도록 하겠다. &#160; 가상 서버 환경에서, 디스크 용량을 늘려주더라도 서버에 반영이 되지 않는다. 서버의 디스크 공간은 그대로 유지되며, 미사용 디스크 공간이 추가되는 것이다. &#160; 이런 작업 없이 하지 않고 웹상에서 클릭만으로 디스크 크기를 바꾸려면 Linode 클라우드서버 를 이용하기를 바란다. 웹 관리자 화면에서 서버의 디스크 용량을 조정할 수 있는 전세계에서 유일한 클라우드 업체이다. 서버의 디스크 용량을 늘리거나 줄일 수 있으며, 파티션을 나눌 수도 있다. (https://www.linode.com/) - 20달러 충전 쿠폰코드 (atp2018) &#160; 서버 디스크 공간 조작은 중요한 작업이므로, root 사용자로 작업한다. &#160; 1. 현재 가상 서버의 상태 분석 리눅스에서 다음의 명령을 입력해보자. # fdisk -l &#160; 현재 120GB 디스크에서 10GB 를 늘리고, 서버에 사용가능 영역으로 적용하는 방법을 설명하겠다. &#160; 2. 디스크&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7184/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>https (SSL) 기본사이트 설정하기</title>
		<link>https://blog.lael.be/post/7147</link>
				<comments>https://blog.lael.be/post/7147#comments</comments>
				<pubDate>Mon, 02 Jul 2018 17:22:07 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[https default site]]></category>
		<category><![CDATA[ssl default site]]></category>
		<category><![CDATA[ubuntu]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7147</guid>
				<description><![CDATA[이 글을 통해 https (SSL)의 기본사이트 설정 방법을 설명할 것이다. 기본 사이트 기본사이트란 서버에서 지정되지 않는 웹주소(호스트)에 대해 연결될 사이트를 말한다. 모든 웹서버 소프트웨어(Apache, NGINX, IIS) 모두 기본사이트를 지원한다. &#160; 1. 사이트 설정 파일이 하나도 없는 경우 사이트 설정 파일이 하나도 없는 경우 웹서버 프로그램이 실행될 이유가 없으므로, 에러메세지가 출력되고 켜지지 않는다. &#160; 2. 사이트가 하나 설정되어 있는 경우 별도로 지정하지 않아도 그 사이트는 기본사이트가 된다. &#160; 3. 두개 이상의 사이트가 설정되어 있는 경우 별도로 기본사이트를 지정하지 않았다면, 첫번째로 로드되는 사이트가 기본사이트가 된다. 알파벳 순서로 로딩하며 숫자가 문자보다 우선적으로 로딩된다. &#160; 4. 두개 이상의 사이트가 설정되어 있고, 하나에 기본 사이트 설정이 되어 있는 경우 명시적으로 기본사이트 지정을 하면 그 사이트가 기본사이트가 된다. &#160; Ubuntu Apache 웹서버의 경우 자동으로 자가서명인증서(Self-Signed SSL)를&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7147/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>나만의 클라우드 가상화 환경 구축하기 (Cloud host)</title>
		<link>https://blog.lael.be/post/7076</link>
				<comments>https://blog.lael.be/post/7076#comments</comments>
				<pubDate>Thu, 21 Jun 2018 16:21:47 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[cloudhost]]></category>
		<category><![CDATA[hypervisor]]></category>
		<category><![CDATA[virtualbox]]></category>
		<category><![CDATA[가상화]]></category>
		<category><![CDATA[클라우드 호스트]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=7076</guid>
				<description><![CDATA[지속적인 컴퓨터 하드웨어 기술 발전으로 인해, 높은 사양의 컴퓨터를 사용하는 사람들이 많아졌다. 이러한 높은 사양의 컴퓨터에서 동시에 여러 운영체제를 구동할 수 있다. 이것을 가상화라고 한다. 이 글을 통해 나만의 클라우드 서버를 구축하는 방법에 대해 설명하도록 하겠다. 간단히 말해서 Virtual Machine Host (가상 머신 호스트) 구축 방법에 대해서 설명할 것이다. &#160; 1. 호스트 컴퓨터 준비 RAM : 16GB 또는 그 이상 CPU : intel vt-x 또는 amd-v 를 지원하는 CPU. (현존하는 대부분의 CPU 가 지원한다.) 자세한 사항은 제조사 홈페이지를 참조하여라. (예시 : https://ark.intel.com/KO/products/80806/Intel-Core-i7-4790-Processor-8M-Cache-up-to-4_00-GHz) DISK : 무조건 SSD 를 사용하여야 한다. 파일서버의 경우 일반 HDD 를 사용해도 된다. &#160; &#160; 2. Virtual Machine Host Software (가상머신 호스트 소프트웨어 고르기) 가상화 환경 구축 소프트웨어를 하이퍼바이저(Hypervisor)라고 부른다. 소프트웨어 종류에는 OpenStack, Hyper-V, VirtualBox, VMWare 등이 있다. &#160; 1)&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/7076/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>Ubuntu Linux 에서 MRTG 설치 구성하기</title>
		<link>https://blog.lael.be/post/6983</link>
				<comments>https://blog.lael.be/post/6983#comments</comments>
				<pubDate>Wed, 23 May 2018 18:16:12 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[install]]></category>
		<category><![CDATA[mrtg]]></category>
		<category><![CDATA[setting]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[모니터링]]></category>
		<category><![CDATA[설치]]></category>
		<category><![CDATA[트래픽]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6983</guid>
				<description><![CDATA[Ubuntu Linux 16.04 및 Ubuntu Linux 18.04 에서 테스트 되었습니다. 물리 서버, 가상 서버, 클라우드 서버 모두 설치 이용 가능합니다. &#160; MRTG 는 전세계에서 가장 널리 사용되는 트래픽 그래프 프로그램입니다. Multi Router Traffic Grapher 의 약자입니다. PC(서버)에 장착된 랜카드 단위로 트래픽 그래프를 표시해 줍니다. MRTG 공식 사이트 : https://oss.oetiker.ch/mrtg/ 프로그램 라이센스 : GPL (공개/무료) &#160; 트래픽 그래프를 봐야하는 이유 - 내 서버의 트래픽 패턴 및 트래픽 사용량을 확인할 수 있다. - 서버의 장애 유무를 알 수 있다. - 서버의 이상을 파악할 수 있다. 작은 디도스나 기타 악성 트래픽 확인. 요약하자면 &#8220;지금 내 서버가 멀쩡한 상태이군&#8221; 을 판단하는데 도움이 되기 때문에 MRTG 를 이용해야 합니다. 서버호스팅 업체에서 별도로 MRTG 를 제공해 준다면 굳이 이것을 설치할 필요는 없습니다. &#160; MRTG 동작의 원리 서버에&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6983/feed</wfw:commentRss>
		<slash:comments>7</slash:comments>
							</item>
		<item>
		<title>GDPR 이 이번주 금요일 (18/05/25) 부터 실행됩니다.</title>
		<link>https://blog.lael.be/post/6951</link>
				<comments>https://blog.lael.be/post/6951#respond</comments>
				<pubDate>Wed, 23 May 2018 06:51:55 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[GDPR]]></category>
		<category><![CDATA[General Data Protection Regulation]]></category>
		<category><![CDATA[유럽 연합 일반 데이터 보호 규칙]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6951</guid>
				<description><![CDATA[최근 여러 대형사이트에 명시적으로 &#8220;우리는 쿠키를 이러한 목적으로 사용하고 있습니다. 당신의 동의가 필요합니다.&#8221; 라는 팝업창의 메세지를 보셨을 겁니다. &#160; 이것은 General Data Protection Regulation 때문입니다. 유럽연합에서 유럽 사람의 개인정보 수집을 엄격하게 규제하자는 이 조약은 2014년 4월 14일에 공표되었고 적용기간을 두고 2018년 5월 15일 부터 발효됩니다. https://en.wikipedia.org/wiki/General_Data_Protection_Regulation &#160; 개인정보 보호를 위한 여러 가이드라인이 있는데, 최근에 도메인 WHOIS 정보에서 서비스 데이터를 제외한 개인정보를 삭제한다는 이야기를 들은 것 같아서 살펴보고 있네요. &#160; ** 예를들어서 제 도메인 lael.be 의 whois 현재 정보입니다. &#160; 소유자 이름, 주소, 이메일주소 등이 노출되지 않습니다. 링크를 눌러보면 https://www.dnsbelgium.be/en/faq/why-are-contact-details-domain-name-sometimes-shielded &#160; 왜 소유자 정보가 표시되지 않나요? 2018년 5월 25일부터, 개인의 프라이버시를 보호하기 위해 등록자를 표시하지 않습니다. 만약 도메인 등록자가 개인이면 더 이상 등록자 개인정보가 표시되지 않습니다. 이것은 시민의 프라이버시를 보호하기 위한 General Data Protection Regulation 가이드라인을 따릅니다. 회사나 기관/단체의 경우&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6951/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>RPC 포트 (TCP 135) 포트를 닫아서 시스템 보안을 향상시키기</title>
		<link>https://blog.lael.be/post/6943</link>
				<comments>https://blog.lael.be/post/6943#comments</comments>
				<pubDate>Tue, 22 May 2018 17:35:51 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[close 135]]></category>
		<category><![CDATA[disable 135]]></category>
		<category><![CDATA[firewall]]></category>
		<category><![CDATA[rpc]]></category>
		<category><![CDATA[리모트 프로시져]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6943</guid>
				<description><![CDATA[TCP 135 : Remote Procedure Call Step 1. 현재 TCP 135 포트가 오픈 중인지 확인하기 1. 명령 프롬프트를 실행합니다. (단축키 : [Win키] + [R]   후  &#8220;cmd&#8221; 엔터) 2. netstat –na 를 입력합니다. 3. 엔터(Enter) &#160; 위의 그림과 같이 135 포트가 열려있으며 LISTENING 상태인 것을 확인할 수 있습니다. 그런데 135 포트를 닫아도 계속 LISTENING 이더군요. 따라서 이것은 넘어가겠습니다. &#160; Step 2. TCP 포트 점검하기 TCP 포트에 ping 을 보내는 프로그램을 실행하겠습니다. 이 프로그램은 Windows 운영체제 전용입니다. https://www.elifulkerson.com/projects/tcping.php 파일을 첨부하고 싶은데 어떻게 첨부하는지 모르겠네요. 명령방법은 tcping.exe host이름 port번호 이다. No response 가 떠야 막혀있는 겁니다. &#160; Step 3. TCP 135 포트 닫기 1. Win키 + R 을 입력하여 Run 을 실행합니다. 2. dcomcnfg 를 입력합니다. 3. 엔터(Enter) &#160; 4. 왼쪽 트리에서 구성 요소 서비스 를 펼칩니다. 5. 펼쳐서 나타난 하위 메뉴의 컴퓨터 를 클릭합니다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6943/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>나만의 독립적인 워드프레스 사이트 구축하기</title>
		<link>https://blog.lael.be/post/6901</link>
				<comments>https://blog.lael.be/post/6901#comments</comments>
				<pubDate>Mon, 14 May 2018 11:36:04 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[구축방법]]></category>
		<category><![CDATA[설치]]></category>
		<category><![CDATA[설치방법]]></category>
		<category><![CDATA[워드프레스]]></category>
		<category><![CDATA[임대]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6901</guid>
				<description><![CDATA[워드프레스 (WordPress) 오픈소스 컨텐츠 제작 소프트웨어 입니다. 사이트를 쉽게 만들 수 있습니다. WordPress is a free and open-source content management system (CMS) based on PHP and MySQL. 자세한 내용은 여기에서 : https://en.wikipedia.org/wiki/WordPress 공신력 있는 통계 : https://w3techs.com/technologies/history_overview/content_management 이처럼 전세계에서 가장 많은 점유율(약 60%)을 차지하는 워드프레스를 선택하는 것은 매우 현명한 것입니다. 이 소프트웨어는 업데이트도 편하고, 확장도 쉽고, 보안도 뛰어납니다. &#160; 사이트 주제 정하기 인기있는 주제는 &#8220;팬션&#8221;, &#8220;인테리어&#8221;, &#8220;강아지&#8221;, &#8220;회사소개&#8221;, &#8220;음식점&#8221; 입니다. &#160; 직접 구축 (wordpress.org)  VS  서비스 임대 (wordpress.com) 워드프레스 사이트를 운영하는 방법은 두가지가 있는데, 소스를 다운로드 하여 직접 구축해서 운영하는 것과, 소프트웨어 서비스(SaaS)로 이용하는 방법입니다. wordpress.org 과 wordpress.com 의 차이점은 다음과 같습니다. 공식 가이드 페이지 (https://en.support.wordpress.com/com-vs-org/) 를 참조하였습니다. &#160; wordpress.org (직접 구축) 장점 - 소프트웨어 이용료가 무료이며, 쉽게 설치 사용 가능. - 모든&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6901/feed</wfw:commentRss>
		<slash:comments>9</slash:comments>
							</item>
		<item>
		<title>블로그 11주년 기념!</title>
		<link>https://blog.lael.be/post/6886</link>
				<comments>https://blog.lael.be/post/6886#comments</comments>
				<pubDate>Tue, 01 May 2018 07:15:05 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6886</guid>
				<description><![CDATA[안녕하세요? 블로그 주인장 라엘입니다. 어느덧 블로그를 운영한지 11주년이 되었습니다. 이 블로그는 IT 정보통신, 컴퓨터 소프트웨어 및 컴퓨터 관련 일반 지식에 관해 다루고 있습니다. 글을 많이 쓴 것은 아니지만 꾸준히 쓰고 있네요. 저는 현재 서울 홍대쪽에 위치한 어느 회사에 다니고 있습니다. 업무를 하면서, 여전히 신기술, 새로운 기계, 새 패러다임을 배우고 있습니다. &#60; 서울 홍대에 위치한 카카오프랜즈샵 &#62; &#160; 일상 생활에서, 전문가 처럼 보이고 싶다면 전문 용어나 어려운 용어를 사용하면 됩니다. 간단한 예시로 &#8220;그 구조가 복잡해서 처리할 수 없었어&#8221; 를  -&#62; &#8220;그 Structure 가 Complicate 해서 Process 할 수 없었어&#8221; 라고 말하면 됩니다. 저는 이러한 방식의, 괜히 어렵게 표현하는 것을 싫어하므로, 최대한 많은 사람이 이해할 수 있도록 쉬운 글을 쓰려고 노력하고 있습니다. &#160; 앞으로도 꾸준히 실무에 도움이 되는 글로 찾아뵙도록 하겠습니다! 오늘도&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6886/feed</wfw:commentRss>
		<slash:comments>13</slash:comments>
							</item>
		<item>
		<title>https 저작권 위반 사이트(밤토끼) 차단하는 방법</title>
		<link>https://blog.lael.be/post/6876</link>
				<comments>https://blog.lael.be/post/6876#comments</comments>
				<pubDate>Wed, 18 Apr 2018 14:29:15 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[밤토끼]]></category>
		<category><![CDATA[사이트 차단방법]]></category>
		<category><![CDATA[저작권]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6876</guid>
				<description><![CDATA[먼저 뉴스기사 내용 http://m.dt.co.kr/contents.html?article_no=2018040902100251102001#08PR 정부가 해외에 서버를 두고 웹툰 등 콘텐츠를 유통하는 &#8216;밤토끼&#8217; 같은 불법복제 유통 사이트를 차단하는 기술 개발에 착수한다. 이를 통해 연간 1조원에 달하는 디지털콘텐츠 저작권 피해를 획기적으로 줄인다는 계획이다. 8일 정부 관계자에 따르면 문화체육관광부와 과학기술정보통신부, 방송통신위원회는 이달 중순 이런 내용을 담은 &#8216;해외사이트 불법 복제물 유통 관련 관계부처 합동 대책(가제)&#8217;을 발표한다. 해외 불법사이트 차단기술은 5월부터 개발에 착수한다. 정부는 해외에 서버를 두고 웹툰이나 영화 등 저작권을 침해한 불법 콘텐츠를 서비스하는 사이트에 대한 차단 작업을 꾸준히 해왔지만, 좀체 근절되지 않고 있다. 현재 정부의 방식이 단순 URL 차단이어서 다른 URL로 접속 경로를 변경하거나 우회 기술을 적용할 경우 차단이 쉽지 않았다. 최근에는 불법사이트들이 웹 표준 프로토콜(HTTP)에 암호화 기술 등을 적용한 보안 프로토콜(HTTPS)을 적용해 사이트 차단이 안 되는 경우도 많다는 것이 전문가들의 분석이다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6876/feed</wfw:commentRss>
		<slash:comments>7</slash:comments>
							</item>
		<item>
		<title>Amazon RDS Cross region read replica 사용하기</title>
		<link>https://blog.lael.be/post/6853</link>
				<comments>https://blog.lael.be/post/6853#respond</comments>
				<pubDate>Mon, 09 Apr 2018 01:48:02 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[aws]]></category>
		<category><![CDATA[cross region]]></category>
		<category><![CDATA[rds]]></category>
		<category><![CDATA[replica]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6853</guid>
				<description><![CDATA[세상에, DB 의 read replica 가 국가(리전)단위로 가능하다. &#160; 일본에 있는 DB서버(RDS)를 한국에 Read-replica 를 만들어 몇달간 운영해보았다. 장점 : replica 가 잘된다. 단점 : 실은 이 단점을 적으려고 이 글을 적는다. &#160; JP 에 원본 RDS 가 있고, KR에 복제 Read RDS 가 있는데, (아마존 콘솔을 사용해서 만들었음) JP RDS 속성에 Replica 항목에 KR RDS 가 안보였고, KR RDS 속성에 write role 으로 동작하고, 실제로 디비에 insert 를 해보니 insert 가 되더라! &#160; &#160; 1. 디비 생성  (CREATE TABLE) &#160; 2. 데이터 입력 (INSERT) &#160; 3. 입력값 변경 (UPDATE) &#160; 4. replica 에 데이터 입력 (INSERT on Read replica) &#160; 5. 쿼리 실행이 실패할만하게 수정. 원본에 중복열 삽입 &#160; 6. 컬럼명 변경 (ALTER) &#160; 7. 원본에 데이터 입력 (INSERT)&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6853/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>ssh 키 인증에서 private key 로 public key 생성하는 방법</title>
		<link>https://blog.lael.be/post/6835</link>
				<comments>https://blog.lael.be/post/6835#comments</comments>
				<pubDate>Wed, 04 Apr 2018 04:40:35 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[private key]]></category>
		<category><![CDATA[public key]]></category>
		<category><![CDATA[rsa]]></category>
		<category><![CDATA[ssh]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6835</guid>
				<description><![CDATA[RSA 암호 방식의 동작 원리는 이곳에 : https://blog.lael.be/post/5107 &#160; ssh-rsa public key 의 규칙 ssh-rsa [인증키 내용] [인증키 주석] &#160; 보통 이런 형식이다. ssh-rsa AAAAB3NzaC1yc2EAANlyt3erpJLpwzAlxky5 root@ip-172-31-30-55 &#160; ssh-rsa private key 의 규칙 -----BEGIN RSA PRIVATE KEY----- [암호해독키 내용] -----END RSA PRIVATE KEY----- &#160; 보통 이런 형식이다. -----BEGIN RSA PRIVATE KEY----- MIIEpQIBAAKCAQEAuw3Xbtfmf3L47Cep1UonizjSe1nP3aMYerIlAUIclihXPuv3 vw0aYHX+P3rHiSIs/Sbhu68O5USGVfM9eMc9suPWT97jDNkPWGG6mHuXg8XEMxrJ RxR6TwSFhc92f5e9O5fBZgFq0r1F4gQxn3dGWqNX2CaFchdlIPHE8QU= -----END RSA PRIVATE KEY----- &#160; public key 로 private key 를 만들 수는 없지만, private key 로 public key 는 만들 수 있더라. 다음의 명령어를 실행하면 된다. ssh-keygen -f id_rsa -y ssh-keygen -f id_rsa -y &#62; mynew_key.pub (옵션) 생성된 mynew_key.pub 파일을 열어서 형식에 맞게 주석을 넣으면 된다. &#160; &#160; &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6835/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>Linux Swap file 만들기</title>
		<link>https://blog.lael.be/post/6810</link>
				<comments>https://blog.lael.be/post/6810#comments</comments>
				<pubDate>Sat, 17 Mar 2018 11:45:01 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[memory]]></category>
		<category><![CDATA[swap]]></category>
		<category><![CDATA[가상메모리]]></category>
		<category><![CDATA[리눅스]]></category>
		<category><![CDATA[스왑]]></category>
		<category><![CDATA[스왑파일]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6810</guid>
				<description><![CDATA[하드디스크 일부 영역을 메모리로 사용하는 것을 스왑(Swap) 이라고 한다. 과거, 메모리가 비싸던 시절에 흔하게 사용하던 방법이다. (요즘엔 사무용 PC도 고용량램을 사용하는 시대라서 스왑을 거의 사용 안함.) 대부분의 경우에 스왑을 설정할 필요는 없지만, 메모리가 낮은 시스템에서는 설정해 주는 것이 좋다. 메모리가 많은 시스템에서는 스왑을 설정해도 메모리가 많이 남기 때문에 스왑 영역을 사용하지 않는다. HDD 환경에서 SWAP은 느리기 때문에 추천하지 않지만, SSD 환경에서 SWAP은 나름 쓸만하다. &#160; 1. 빈 디스크 만들기 블럭사이즈가 1MB, 블럭 갯수가 2000K 인 빈파일을 만든다. (즉 2GB) 보라색 부분을 변경하여 용량을 변경할 수 있음. (2000000 = 2GB, 4000000 = 4GB, 8000000 = 8GB) # dd if=/dev/zero of=/root/swapfile bs=1024 count=2000000 권한 설정 (예를들어 시스템 내의 다른 사용자가 스왑파일을 지운다면 문제가 발생할 것이다.) # chmod 600 /root/swapfile &#160; 2. 스왑파일로 설정하기&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6810/feed</wfw:commentRss>
		<slash:comments>6</slash:comments>
							</item>
		<item>
		<title>마인크래프트 닉네임 기록 및 스킨 3D 확인하는 사이트</title>
		<link>https://blog.lael.be/post/6745</link>
				<comments>https://blog.lael.be/post/6745#comments</comments>
				<pubDate>Tue, 27 Feb 2018 09:19:59 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[minecraft]]></category>
		<category><![CDATA[nickname]]></category>
		<category><![CDATA[닉네임]]></category>
		<category><![CDATA[마인크래프트]]></category>
		<category><![CDATA[스킨확인]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6745</guid>
				<description><![CDATA[이번에는 mcname  이라는 마인크래프트 닉네임 및 스킨 확인기를 소개해보려는데요! 우선 사이트입니다 https://mcname.info/ko/ 마인크래프트 닉네임 및 스킨 확인기 &#160; 우선 사이트에 접속하시면 이런화면이 나올겁니다. 저기 검색창에 자신이 보고 싶은 스킨의 닉네임을 입력해줍니다! 저는 제 마인크래프트 닉네임인 EnderDragon_Girl을 입력해보겠습니다! 검색을 하시면 제 프로필이 나오는데요! 그 외에도 EnderDragon_Girl이라는 닉네임을 가지셧던분들도 같이 나오네요! (날짜도..) 우와 제 프로필이 다 나오네용! (참고로 소셜미디어는 로그인을 하고 저 닉네임이 제꺼라는것을 인증한뒤에 올릴수 있습니다!) 이 사이트를 보니까 제가 사용하였던 스킨, 저의 옜날 닉네임들(바꾼 날짜까지 아주 정확하네..)등 다양하네요! 여기서 스킨 다운로드까지 있군요.. 또한 저기 위에 망토를 클릭하시면 다양한 망토 스킨들이 나오네요! 그리고 이번엔 서버를 클릭해보았는데요! 이렇게 다양한 서버들이 나오네요! 서버 인원에 좋아요까지! 순위도.. 그리고 닉네임을 입력하는칸에 서버주소를 적으면! 서버 인원과 서버 국가와 접속할수있는 버전이 나오네요! 자 이번엔 이 닉네임(스킨)이 자신의&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6745/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>2018년도의 마음가짐</title>
		<link>https://blog.lael.be/post/6741</link>
				<comments>https://blog.lael.be/post/6741#comments</comments>
				<pubDate>Wed, 21 Feb 2018 17:07:27 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6741</guid>
				<description><![CDATA[2018년도의 마음가짐. 최초가 되거나 최고가 되거나. Be first or be best.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6741/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>Ubuntu PHP session lifetime 증가시키기</title>
		<link>https://blog.lael.be/post/6712</link>
				<comments>https://blog.lael.be/post/6712#respond</comments>
				<pubDate>Tue, 06 Feb 2018 06:21:32 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6712</guid>
				<description><![CDATA[우분투 OS 환경에서는 독특한 퍼미션관리 때문에 시스템 garbage collector 가 동작한다. php_value[session.save_path] = /home/myuser1/.php-session 0 6 * * * /usr/bin/find /home/myuser1/.php-session/ -atime +14 -type f &#124; xargs rm &#160; &#160; &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6712/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>ECMAScript2015(ES2015)와 var, let, const 구분하기</title>
		<link>https://blog.lael.be/post/6707</link>
				<comments>https://blog.lael.be/post/6707#respond</comments>
				<pubDate>Wed, 31 Jan 2018 10:32:36 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[const]]></category>
		<category><![CDATA[es2015]]></category>
		<category><![CDATA[es6]]></category>
		<category><![CDATA[javascript]]></category>
		<category><![CDATA[let]]></category>
		<category><![CDATA[var]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6707</guid>
				<description><![CDATA[프로그래밍 언어는 다음의 4가지 속성을 가지고 있습니다. - Syntax(구문 구조) : 문법적으로 올바른 프로그램에 대해 정확하게 설명. - Names(이름) : 프로그램에서의 다양한 개체에 대해 이름을 명명함. (변수명, 타입명, 함수명, 클래스명 등등) - Types(타입) : 타입이란 값의 그룹과 값이 할 수 있는 연산에 대해서 정의합니다. 이로인해서 올바른 연산을 파악하고 타입에러를 검출할 수 있습니다. - Semantics(의미) : 프로그램의 의미를 나타냅니다. 각 줄의 의미를 알 수 있으며 프로그램이 실행되면 변수의 변화등을 정의합니다. 언어 디자이너(Language designer)는 이 속성을 반드시 정의하여야 하며 프로그래머(Programmer)는 반드시 정해진 규칙을 따라야 합니다. 프로그래밍 언어 속성을 따르면서, 프로그래밍 언어의 상세정보(Specification)가 변경된다. Javascript 의 경우, ECMA(European Computer Manufacturers Association) 에서 논의되고 Specification 이 결정된다. 다른 프로그래밍 언어와 동일하게 javascript 도 버전이 계속 올라가고 있으며, 브라우저에 반영되고 있다. ES2015 는 2015년 06월에&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6707/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>HSTS 삭제하는 방법 (서버 및 크롬브라우저)</title>
		<link>https://blog.lael.be/post/6670</link>
				<comments>https://blog.lael.be/post/6670#comments</comments>
				<pubDate>Sat, 30 Dec 2017 17:45:37 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[chrome]]></category>
		<category><![CDATA[hsts]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[삭제]]></category>
		<category><![CDATA[적용하기]]></category>
		<category><![CDATA[크롬]]></category>
		<category><![CDATA[해제하기]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6670</guid>
				<description><![CDATA[HSTS 는 HTTP Strict Transport Security 의 약자입니다. 브라우저에게 HTTPS를 강요하면서 통신의 보안을 향상시키는 방법입니다. 서버에서 HSTS 관련 헤더를 보내면 브라우저는 해당 기간동안 무조건 HTTPS 를 사용합니다. &#160; HSTS 를 적용하는 방법. (서버에서) 이 구문을 nginx 설정파일에 적용하면 접속자의 브라우저에 hsts 가 자동 적용됩니다. HSTS 를 적용 해제하는 방법. (서버에서) 적용시간을 0으로 설정하면 됩니다. HSTS 를 적용 해제하는 방법. (브라우저에서) 1. 크롬브라우저 크롬 주소창에 chrome://net-internals/#hsts 입력.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6670/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>한번에 끝내는 AWS Amazon Linux 웹서버세팅 (아마존리눅스 서버세팅)</title>
		<link>https://blog.lael.be/post/6586</link>
				<comments>https://blog.lael.be/post/6586#comments</comments>
				<pubDate>Sun, 17 Dec 2017 09:19:38 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[amazon linux]]></category>
		<category><![CDATA[ami]]></category>
		<category><![CDATA[mysql]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[설치]]></category>
		<category><![CDATA[세팅]]></category>
		<category><![CDATA[웹서버]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6586</guid>
				<description><![CDATA[리눅스라는 컴퓨터 운영체제가 있습니다. GPLv2 를 따르며 오픈소스이며, 매우 오래된 역사를 가지고 있습니다. 오랜 시간을 통해 검증이 된 운영체제이죠. 리눅스의 파생 운영체제로는 Ubuntu, Debian, CentOS, Fedora, Amazon Linux, Android, AIX, Redhat 등이 있습니다. Ubuntu, Debian 는 데비안 계열의 운영체제이며 최신기술의 빠른 적용과 자동화가 특징인 운영체제입니다. CentOS, Fedora, Amazon Linux, Android, AIX, Redhat 은 CentOS 계열이라고 하는데, 이 운영체제들 끼리는 명령어 및 폴더의 구조가 비슷합니다. CentOS 및 Fedora 는 무료 오픈소스인데, 최신기술 적용이 심각하게 느립니다. Redhat 은 유료 운영체제입니다. 1년에 120만원쯤 사용료가 있습니다. Android 는 모바일 운영체제입니다. AIX 는 IBM 서버에서만 쓸 수 있는 운영체제입니다. Amazon Linux 는 Amazon Web Service 에서만 쓸 수 있는 운영체제입니다. &#160; 패키지 업데이트가 엄청나게 느린 CentOS 와는 다르게, Amazon Linux 가  최신 소프트웨어 설치를 제공하므로,&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6586/feed</wfw:commentRss>
		<slash:comments>18</slash:comments>
							</item>
		<item>
		<title>NGINX Gzip 설정하기</title>
		<link>https://blog.lael.be/post/6553</link>
				<comments>https://blog.lael.be/post/6553#comments</comments>
				<pubDate>Sat, 16 Dec 2017 02:55:05 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[tuning]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6553</guid>
				<description><![CDATA[* GZIP 이란? Gzip 은 GNU zip 의 줄임말이며 리눅스/유닉스 시스템에서 널리쓰이는 압축 소프트웨어 이다. 웹서버 통신을 할 떄 데이터를 gzip 압축하여 전송하면 속도가 더 빨라진다. * gzip 사용 안할 경우 : [서버에서 HTML 데이터 전송] -&#62; [클라이언트 브라우저가 표시] * gzip 을 사용할 경우 : [서버에서 HTML 데이터를 압축 후 전송] -&#62; [클라이언트 브라우저가 압축을 풀고 표시] gzip 을 사용할 경우, 웹서버와 클라이언트(브라우저)의 CPU 사용량이 약간 늘어난다. 요즘 서버나 PC의 경우 충분히 고사양이기 때문에 gzip cpu 사용량은 무시해도 된다.(0.1% 미만) 압축 전송이기 때문에 전송속도가 빨라지고 , 트래픽량이 줄어든다. 특히, 국가간 트래픽이나 느린 인터넷 환경에서, 속도가 빨라진 것을 크게 느낄 수 있다. 너무 작은 파일은 그냥 전송하는게 더 빠르고, 이미 충분히 압축된 파일은 gzip 을 해도 용량이 별로 안줄어들기 때문에&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6553/feed</wfw:commentRss>
		<slash:comments>6</slash:comments>
							</item>
		<item>
		<title>S3 버저닝(S3 Versioning) 설명</title>
		<link>https://blog.lael.be/post/6543</link>
				<comments>https://blog.lael.be/post/6543#respond</comments>
				<pubDate>Mon, 11 Dec 2017 07:04:18 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[amazon]]></category>
		<category><![CDATA[S3]]></category>
		<category><![CDATA[versioning]]></category>
		<category><![CDATA[버저닝]]></category>
		<category><![CDATA[버전관리]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6543</guid>
				<description><![CDATA[회사 내에서 회의 전에 준비한 내용인데 블로그에 공유해도 될 것 같아서 작성해 본다. 이 글이 도움될 사람이 분명히 있으리라 생각한다. &#160; 이 프로젝트에서 라엘이의 역할은 결정권은 없으며, 이렇기 때문에 이렇게 하는 것이 좋겠다 라는 Advisor 의 일을 하고 있다. &#160; * 배경 설명 &#160; 회사에서 S3 를 사용하고 있으며, 일부 데이터가 삭제되는 문제가 발생했다. 이미지 몇장 지워진 거라서 큰 문제는 없었지만 대비책을 마련해야 하는 상황. &#160; 1. 테스트 파일 준비 &#160; 2. Properties 에서 Versioning 을 Enable 하면 아래와 같은 버튼이 생긴다. &#160; 3. 파일 변경! &#160; 4. Version 보기 모든 버전에 대해서 변경시간 및 다운로드 할 수 있다. &#160; 5. 저장 용량 설명 6. 현재 사용중인 용량 확인 S3 &#62; Management &#62; Metrics 에서 확인 할 수 있다. 현재&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6543/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>나만의 고정 IP 생성하기! &#8211; VPN 생성방법</title>
		<link>https://blog.lael.be/post/6462</link>
				<comments>https://blog.lael.be/post/6462#comments</comments>
				<pubDate>Mon, 27 Nov 2017 16:58:07 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[private network]]></category>
		<category><![CDATA[SoftEther]]></category>
		<category><![CDATA[vpn]]></category>
		<category><![CDATA[VPN SERVER]]></category>
		<category><![CDATA[고정 아이피]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6462</guid>
				<description><![CDATA[웹서비스를 사용하다보면 나만의 고정 아이피가 필요할 때가 있다. 예를 들어, 방화벽 설정할 때 나만의 고정 아이피가 있다면 더 수월하게 작업 할 수 있다. 이 글에서는 VPN 서버를 설정하여 나만의 고정 IP 를 만드는 법에 대해 설명할 것이다. &#160; - VPN 사용시 장점 1. 빠른 인터넷 속도 사용가능 - 간혹 통신사에서 인터넷 속도를 제한을 거는 경우가 있는데 이것을 피할 수 있습니다. 2. 방화벽 및 보안설정에 좋음 - 이 IP 만 허용하게 할 수 있다. 3. 공개 장소에서도 안전한 통신 사용가능 - VPN 서버와의 연결은 암호화 통신이기 때문에 통신이 상대적으로 안전해 진다. (VPN 로그인 및 연결 이후 통신 모두 암호화) 4. 데이터 검열, 방화벽 제한 회피가능 - 자신의 네트워크 요청은 암호화되어 VPN 서버에 전송되며 그 곳에서 처리가 시작된다. 즉 네트워크의 시작 지점이&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6462/feed</wfw:commentRss>
		<slash:comments>10</slash:comments>
							</item>
		<item>
		<title>정확한 서버시간 확인하기 &#8211; 퓨어타임</title>
		<link>https://blog.lael.be/post/6445</link>
				<comments>https://blog.lael.be/post/6445#respond</comments>
				<pubDate>Mon, 20 Nov 2017 16:09:28 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[서버시간]]></category>
		<category><![CDATA[서버시간확인]]></category>
		<category><![CDATA[퓨어타임]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6445</guid>
				<description><![CDATA[커뮤니티의 출석부, 코레일 기차예매, 인터파크 티케팅을 할 때 해당 서버의 시간을 확인하곤 한다. 부하량이 많은 서버는 시간이 조금씩 느리게 간다. 일반적으로 ms 이내이지만 누적되면 표준시간과 수십초이상 차이날 수 있다. 다만 시간 순서가 중요한 시스템에서, 갑작스런 서버시간 교정은 서버에 &#8216;시간공백&#8217;이나 &#8216;시간역행&#8217; 현상을 일으키므로 별도의 점검 기간을 정하고 서버의 시간과 표준시간을 일치시키는 작업을 하길 권장한다. (클라우드 서버는 서버 시간 교정을 할 필요가 없다. 자동으로 메인서버와 시간동기화가 되기 때문이다.) &#160; 빠르고 정확한 서버시간 확인사이트 - 퓨어타임 https://puretime.me/ &#160; 서버시간 확인코드 인터넷 통신규약 표준 RFC 2616에 의해 통신하는 서버는 접속자에게 자신의 시간 정보를 제공해야 한다. https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.18 원래 이 규약은 웹 통신의 caching 을 위해서 구현된 규약이며, 시간차를 계산해서 클라이언트 - 서버간 올바른 시간 단위 계산을 도와준다. The Date general-header field represents the date and time at&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6445/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>국내 도메인 등록업체 가격비교 (cheap domain)</title>
		<link>https://blog.lael.be/post/6357</link>
				<comments>https://blog.lael.be/post/6357#comments</comments>
				<pubDate>Sat, 18 Nov 2017 04:12:59 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[buy]]></category>
		<category><![CDATA[domain]]></category>
		<category><![CDATA[ICANN]]></category>
		<category><![CDATA[도메인 구입]]></category>
		<category><![CDATA[도메인 목록]]></category>
		<category><![CDATA[저렴한 도메인]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6357</guid>
				<description><![CDATA[이 글은 다음의 글과 연관되어 있습니다. 무료 도메인 등록업체 Freenom - https://blog.lael.be/post/6070 무료 네임서버 목록 - https://blog.lael.be/post/1475 아파치 웹서버 세팅방법 - https://blog.lael.be/post/73 엔진엑스 웹서버 세팅방법 - https://blog.lael.be/post/2600 너무 비싼 가격으로 도메인을 구매(연장)하시는 분들이 계셔서 이 글을 작성해 봅니다. 이 글을 통해 당신은 저렴하고 싼 도메인을 구입할 수 있을 것입니다. 1. 도메인 주소란? 다른 사람이 당신의 사이트를 찾아가기 위해서, 도메인이라는 &#8220;인터넷 주소&#8220;가 필요합니다. 도메인 주소를 당신의 서버IP 와 연결 할 수 있습니다. 도메인 주소는 방문자에게 사이트 이름이나 사이트 주제를 간접적으로 알려주는 역할을 하기도 합니다. &#160; 2. 도메인 주소 구성 도메인 주소는 TLD(Top Level Domain) 와 Subdomain 으로 나뉩니다. 이것은 도메인 주소를 거꾸로 읽으면 알 수 있습니다. 예를들어 blog.lael.be 도메인의 경우 be 는 belgium(벨기에) 에서 관리하는 TLD 입니다. lael 는 .be domain 의 Subdomain 입니다. blog 는 .lael.be domain 의&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6357/feed</wfw:commentRss>
		<slash:comments>8</slash:comments>
							</item>
		<item>
		<title>우분투 네임서버 구축하기 (Install Ubuntu bind9 nameserver)</title>
		<link>https://blog.lael.be/post/6308</link>
				<comments>https://blog.lael.be/post/6308#comments</comments>
				<pubDate>Wed, 25 Oct 2017 04:28:44 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[bind]]></category>
		<category><![CDATA[bind9]]></category>
		<category><![CDATA[install]]></category>
		<category><![CDATA[nameserver]]></category>
		<category><![CDATA[ubuntu]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6308</guid>
				<description><![CDATA[반드시 네임서버를 구축해야 할 경우가 아니라면, 직접 구축하지 말고 다음의 글로 이동하여 무료 서비스를 이용해 보세요. 무료 DNS 서비스 모음 도메인 네임서버란? Domain Name Server 는 &#8220;네임서버&#8221; 또는 &#8220;DNS&#8221; 라고 부릅니다. 도메인 네임서버는 사람이 읽을 수 있는 도메인 이름을 기계가 읽을 수 있는 IP 주소로 변환하는 일을 합니다. 도메인 네임서버는 보통 계층형으로 이루어지고 결과를 캐쉬합니다. &#60;그림 : 계층형 DNS. 속도 개선 효과가 있다.&#62; 구축 방법 Ubuntu Linux 에서 zone 파일을 구성하여 네임서버를 구축하는 예제를 설명합니다. &#160; 1. 운영체제의 apt 패키지 목록 갱신 # apt-get update &#160; 2. 네임서버 소프트웨어 Bind9 설치 # apt-get install bind9 &#160; 3. 네임서버 서비스 상태 보기 # service bind9 status 서비스가 실행되고 있지 않다.(inactive) &#160; 4. 네임서버 서비스 켜기 # service bind9 start # service&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6308/feed</wfw:commentRss>
		<slash:comments>5</slash:comments>
							</item>
		<item>
		<title>스타크래프트 리마스터 랭킹, 전적조회 스타로그</title>
		<link>https://blog.lael.be/post/6177</link>
				<comments>https://blog.lael.be/post/6177#comments</comments>
				<pubDate>Wed, 30 Aug 2017 08:17:23 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[starlog]]></category>
		<category><![CDATA[starlog.gg]]></category>
		<category><![CDATA[래더]]></category>
		<category><![CDATA[리마스터]]></category>
		<category><![CDATA[스타로그]]></category>
		<category><![CDATA[전적검색]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6177</guid>
				<description><![CDATA[스타크래프트 리마스터의 계정 랭킹을 검색하는 방법을 알아보겠습니다! &#160; 스타크래프트 랭킹 전적 조회하는 사이트는 https://starlog.gg/ko/ 입니다. &#160; &#160; Starcraft Remastered 는 Blizzard Entertainment 에서 출시한 게임입니다. &#160; 이 게임에는 Battle.net 이라는 온라인 대전 시스템이 있으며 대전 승부를 통해 랭킹이 기록됩니다. &#160; 스타크래프트 랭킹 전적 조회하는 사이트는 https://starlog.gg/ko/ 입니다. &#160; &#160; &#160; 사이트에 방문 후 &#8220;블리자드 아이디로 로그인&#8220;을 사용하면 내 전적조회 메뉴를 사용할 수 있고, 로그인 하지 않아도 래더 랭킹 메뉴를 사용할 수 있습니다. &#160; &#160; 랭킹 검색을 하려면 사이트 상단의 &#8220;래더 랭킹&#8221; 을 클릭한 다음에, 페이지 중간의 Account 에 자신의 아이디를 입력합니다. &#160; 검색된 아이디를 클릭하면 전적 검색이 이렇게 나타납니다! &#160; 이상 스타크래프트의 경쟁전 전적검색 하는 방법에 대해 알아보았습니다! &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6177/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>스타크래프트 리마스터 치트키</title>
		<link>https://blog.lael.be/post/6128</link>
				<comments>https://blog.lael.be/post/6128#respond</comments>
				<pubDate>Tue, 15 Aug 2017 04:59:40 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[cheat key]]></category>
		<category><![CDATA[리마스터 치트키]]></category>
		<category><![CDATA[스타크래프트]]></category>
		<category><![CDATA[스타크래프트 리마스터]]></category>
		<category><![CDATA[치트키]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6128</guid>
				<description><![CDATA[스타크래프트 리마스터가 2017년 8월 15일에 발매되었습니다! 코프룰루 구역으로 복귀 50개가 넘는 미션을 통해 지구를 떠난 인류 테란, 사이오닉 전사 집단 프로토스, 마주치는 모든 세계를 집어삼키는 저그가 처음으로 조우하고 은하계 전체를 전쟁으로 몰아넣는 과정을 직접 체험하십시오. &#160; &#160; 구매 및 소개 링크는 다음과 같습니다. : https://starcraft.com/ko-kr/ &#160; &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6128/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>나만의 인터넷 주소 도메인을 만들어보자! 무료 도메인 생성하기.</title>
		<link>https://blog.lael.be/post/6070</link>
				<comments>https://blog.lael.be/post/6070#comments</comments>
				<pubDate>Thu, 03 Aug 2017 02:20:58 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[domain]]></category>
		<category><![CDATA[free domain]]></category>
		<category><![CDATA[regist]]></category>
		<category><![CDATA[도메인등록]]></category>
		<category><![CDATA[무료도메인]]></category>
		<category><![CDATA[싼도메인]]></category>
		<category><![CDATA[저렴한도메인]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=6070</guid>
				<description><![CDATA[이 글을 작성한 이유 이 글은 서버를 세팅할 때 도메인을 소유하고 있지 않는 사용자를 위해 작성되었습니다. 이 글을 통해 무료로, 즉시 발급되는, 나만의 도메인을 생성해 보세요! &#160; 유료 도메인 구매를 원하시면 다음의 글을 읽고 저렴하게 도메인을 구매해 보세요! 무료 도메인은 소유권 주장이 힘들기 때문에, 공부나 연습용이 아니라면 유료도메인 구매를 추천합니다. 국내 도메인 등록업체 가격비교 (cheap domain) 도메인 이론 먼저 도메인이란 어떤 것이며 왜 필요한지에 대해 알아보도록 하자. &#160; 1. 도메인이란? domain 은 사이트를 구분하는 글자입니다. 다른 사람이 당신의 사이트를 찾아가기 위해서, 도메인이라는 &#8220;인터넷 주소&#8220;가 필요합니다. 인터넷 웹 브라우저는 도메인을 해석할 수 있으며, 사이트가 어느 서버에 위치해 있는지 알 수 있습니다. &#160; 2. 도메인 기록의 동작원리 &#160; 도메인 기록은 국제 인터넷 주소 관리기관인 ICANN 에서 관리합니다. 모든 도메인 기록은 이곳에 기록됩니다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/6070/feed</wfw:commentRss>
		<slash:comments>8</slash:comments>
							</item>
		<item>
		<title>Linux 원격 백업 구현하기 (Dropbox 에 백업하기)</title>
		<link>https://blog.lael.be/post/5952</link>
				<comments>https://blog.lael.be/post/5952#comments</comments>
				<pubDate>Sat, 15 Jul 2017 07:58:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[backup]]></category>
		<category><![CDATA[centos]]></category>
		<category><![CDATA[dropbox]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[ssh]]></category>
		<category><![CDATA[ubuntu]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5952</guid>
				<description><![CDATA[최근 나야나(nayana) 서버 해킹 사건으로 인해 서버 백업의 중요성 매우 커졌습니다. 실제로 백업은 매우매우 중요합니다. &#160; 이 글은 기존에 제가 작성한 https://blog.lael.be/post/1449 글에 이어서 작성하는 글입니다. 즉 이 글의 내용을 구현하려면 먼저 위의 글로 이동하여 로컬 백업을 구현해 두어야 합니다. &#160; 1. 믿을 수 있는 원격 저장소 찾기 이 글에서는 백업/동기화 부문에서 전세계 1위 업체인 Dropbox 를 원격 저장소로 사용할 것입니다. &#160; https://www.dropbox.com 로 이동하여 무료 회원가입을 실시합니다. 무료 회원은 2GB 의 저장공간을 받습니다. 기타 다양한 기능을 사용할 수 있습니다. &#160; 추가 저장공간을 원한다면 1TB 저장공간 1년 사용 할 수 있는 Plus 가입을 해보세요! (권장) &#160; 2. Linux 서버에 Dropbox Uploader  설치 Dropbox Uploader 는 https://github.com/andreafabrizi/Dropbox-Uploader 에서 다운 받을 수 있습니다. CURL을 사용한 단순한 쉘 스크립트이며 따라서 서버에 추가적으로 설치할 프로그램은 없습니다. &#160; 본문은 Linux root&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5952/feed</wfw:commentRss>
		<slash:comments>11</slash:comments>
							</item>
		<item>
		<title>nginx 서버에서 gzip 을 사용하여 전송속도를 향상시키기</title>
		<link>https://blog.lael.be/post/5917</link>
				<comments>https://blog.lael.be/post/5917#comments</comments>
				<pubDate>Fri, 14 Jul 2017 18:48:58 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[gzip]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[ubuntu]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5917</guid>
				<description><![CDATA[이 글을 통해 nginx 웹서버에서 gzip 이라는 압축전송을 통해 전송속도 향상시키는 방법에 대해 알아보도록 하겠습니다. &#160; 일반적으로 웹 페이지는 다음과 같은 과정으로 표시됩니다. (서버에서) 코드 생성 -&#62; 전송 -&#62; (웹브라우저가) 코드 표시 &#160; 블로그의 이 글을 Chrome 브라우저에서 -&#62; 오른쪽 클릭 -&#62; 검사 -&#62; Network 탭 -&#62; Doc 필터 -&#62; 본문 선택 -&#62; Timing 선택 하시면 다음과 같은 화면을 볼 수 있습니다. 웹브라우저 코드 표시는 편의상 0초가 걸린다고 하겠습니다. 대부분의 정상적인 상황이라면 전송 받자마자 표시되는게 맞습니다. &#160; &#160; 이 때 gzip 이라는 압축 후 전송을 사용하면 (서버에서) 코드 생성 -&#62; 코드 압축 -&#62; 전송 -&#62; (웹브라우저가) 코드 압축해제 -&#62; (웹브라우저가) 코드 표시 웹 브라우저가 하는 쪽은 0초가 걸린다고 가정합니다. 만약 문제가 있다면 HTML 문서를 최적화 하도록 합시다. &#160; &#160; 실제&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5917/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>시간은 왜 흐르는가? 시간이 흐르는 방향은?</title>
		<link>https://blog.lael.be/post/5811</link>
				<comments>https://blog.lael.be/post/5811#comments</comments>
				<pubDate>Mon, 22 May 2017 08:08:50 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[entropy]]></category>
		<category><![CDATA[시간이 흐르는 이유]]></category>
		<category><![CDATA[엔트로피]]></category>
		<category><![CDATA[열역학 제2법칙]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5811</guid>
				<description><![CDATA[오늘은 IT와 전혀 관계가 없는 글을 작성해 본다. 검색해 봤는데 딱히 자세히 설명하고 있는 글이 없는 것 같아서 작성한다. 시간은 왜 흐르는가? 시간이 흐르는 방향은 어디인가? 대학 과목 중 공학소양특강때 배운 내용이다. &#160; 어떤 과학적 현상을 설명하기 위해서 우선, 법칙을 몇개 세워야 한다. (명제 A 가 있어야 그것으로부터 설명할 수 있음) * 열역학 제2법칙 열적으로 고립된 계에서는 총 엔트로피가 감소하지 않는다. (즉 엔트로피는 같거나 증가한다.) &#160; 얼음이 녹고, 뜨거운 물이 식는다. &#160; 풀어쓰자면 엔트로피의 변화(increment in the entropy, ΔS)는 단위 시간(T)당 열에너지의 변화(transfer of heat)를 의미한다. &#160; 그러나 위의 식은 가역적인 상태가 이루어지는 이상적인 상태를 의미한다. 실제로는 열역학 2법칙으로 인해 ΔS현재 &#62;= ΔS과거 이며, 어떤 상태변화에서 ΔS 가 ΔQ/T 보다 커지게 된다. &#160; 따라서 열에너지의 변화는 엔트로피를 증가를 일으킨다. &#160; 상태 변화할때마다 생성되는 엔트로피&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5811/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>우리나라 소프트웨어의 문제점</title>
		<link>https://blog.lael.be/post/5677</link>
				<comments>https://blog.lael.be/post/5677#comments</comments>
				<pubDate>Sat, 25 Feb 2017 12:01:59 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[소프트웨어 문제점]]></category>
		<category><![CDATA[잡담]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5677</guid>
				<description><![CDATA[잡담입니다. 컴퓨터공학 3학년 교과목에 &#8220;소프트웨어 공학론&#8220;, &#8220;소프트웨어 설계&#8220;, &#8220;소프트웨어 공학 프로젝트&#8221; 교과목이 있습니다. 많은 개발 이론과 배경을 배우고, 다양한 방법으로 실습을 해봅니다. 하지만!! 제 경험상 이 때 배운 지식과 실제 현업의 차이가 상당히 있었습니다. 소프트웨어는 이론적으로 순차적 개발인 폭포수 모델 (https://en.wikipedia.org/wiki/Waterfall_model) 로 많이 개발하며, 순서는 요구사항 분석 -&#62; 설계 -&#62; 구현 -&#62; 테스트 -&#62; 유지보수 입니다. 정보처리 기사 시험 단골문제로 &#8220;다음의 소프트웨어 개발 단계에서 가장 많은 비용을 차지하는 단계는?&#8221; 이 있는데 정답은 &#8220;유지보수&#8221; 입니다.  이론상으로는 개발 프로세스에서 50% 이상의 비용을 차지하게 되어 있습니다. 하지만 실제는 다릅니다. 예를 들어 1억의 발주가 나오면 기계값 2천만원 + 개발비 7천만원 + 유지보수비 1천만원 이런식으로 많이들 입찰합니다. (또는 개발비 8천만원, 1년 무상 유지보수) 제가 SI 다닐때 4억7천짜리 사이트 제작에 참여한 적이 있는데, 별반 다를게 없더라구요. 유지보수는 클라이언트의 민원처리(팝업 같은것)이며 기능강화 패치를 하지 않습니다. 유지보수&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5677/feed</wfw:commentRss>
		<slash:comments>8</slash:comments>
							</item>
		<item>
		<title>Today&#8217;s Developer Requirements (현대 개발자의 필수덕목)</title>
		<link>https://blog.lael.be/post/5674</link>
				<comments>https://blog.lael.be/post/5674#comments</comments>
				<pubDate>Sat, 25 Feb 2017 04:24:03 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5674</guid>
				<description><![CDATA[적당히 돈벌며 회사다니고 있는데, &#8220;배움을 멈추면 늙는다&#8221; 라는 어느 커뮤니티에 본 글을 떠올리며 뭔가 새로운걸 보고 있다. 새롭다는 것은 NEW 뿐만 아니라 기존 지식의 ENHANCE 도 포함한다. &#160; 아무튼 최근에 본 인강(=인터넷강의/Webinar/Video lecture)에서 다음의 슬라이드를 보았다. &#160; Today&#8217;s Developer Requirements(현대 개발자의 필수 덕목) - Horizontal Scale : 서비스의 성능 향상을 위해서 CPU 업그레이드나, RAM 더 꼽는것 말고 서비스를 2개 또는 그 이상으로 분리할 수 있는 능력이다. 요즘은 클라우드가 잘되어 있어서 성능 변경은 정말 쉽지만, 서버를 분리하여 늘리는 - Scale Out 은 능력이 필요하다. - Realtime Availability : 이건 개발자가 24시간 폰 켜놓고 대기하라는 뜻이 아니라, 데이터가 입력되면 바로 사용할 수 있게 하라는 것이다. - Flexible Data Model : 고객의 다양한 형태(숫자, 문자, 파일, 이미지)의 입력을 반영하여 변경할 수 있어야 한다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5674/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>웹호스팅 환경에서 서브도메인 연결하기</title>
		<link>https://blog.lael.be/post/5665</link>
				<comments>https://blog.lael.be/post/5665#respond</comments>
				<pubDate>Sun, 19 Feb 2017 02:53:52 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[.htaccess]]></category>
		<category><![CDATA[다중도메인]]></category>
		<category><![CDATA[멀티도메인]]></category>
		<category><![CDATA[서브도메인]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5665</guid>
				<description><![CDATA[웹호스팅 환경에서 .htaccess 를 수정해서 서브도메인을 만드는 방법이다. 이 코드가 동작하려면 해당 도메인이 같은 웹루트로 연결되어 있어야 한다. 같은 웹루트로 연결된 페이지가 있다면, 서브도메인을 만들수 있고, 아예 다른 새로운 도메인도 연결할 수 있다. &#160; 동일한 웹루트에서 여러 도메인을 처리하여 연결시키는 방법이다. 여러 사이트를 운영하고 싶은, 웹호스팅 사용자에게 유용한 정보이다. &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5665/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>대공황기의 49가지 생존전략</title>
		<link>https://blog.lael.be/post/5604</link>
				<comments>https://blog.lael.be/post/5604#respond</comments>
				<pubDate>Fri, 03 Feb 2017 04:20:07 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5604</guid>
				<description><![CDATA[대공황기의 49가지 생존전략     1. 불황이 몇 년이면 끝날 것으로 기대하지 말고 생활수준을 낮추고 오래 견딜 궁리를 하라.   경제가 디플레이션 기조로 돌아섰다는 것을 알아야 한다. 조금 있으면 경제가 회복될 것이라는 막연한 기대로 어떤 결정을 해서는 안 된다는 것이다.     2. 가족의 유대를 강화하고, 배우자, 형제자매, 부모와 서로 협력하라. 한국에서는 아무래도 가족이 최후의 보루다.   낮은 생활수준을 유지하려면 가족의 협조가 필요하며 배우자가 함께 벌도록 하라.     3. 경제만이 아니라 모든 면에서 지식정보를 획득하기 위해 노력하라.   지식이나 정보는 생활비를 줄이거나 기회를 잡기 위해서도 중요하다. 사회의 여러 분야를 앎으로써 돈을 들이지 않아도 되고, 알기 때문에 돈을 벌 수 있는 것들이 많아진다.     4. 너무나 당연하지만 되도록 많이 현금화하라. 당신이 가지고 있는 것 중 대부분을 현금화하라.   그리고&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5604/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>나만의 GIT 서버를 구축하고 프로젝트에 적용하는 방법 (gitlab 설치 구축)</title>
		<link>https://blog.lael.be/post/5476</link>
				<comments>https://blog.lael.be/post/5476#comments</comments>
				<pubDate>Wed, 11 Jan 2017 04:10:17 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[backup]]></category>
		<category><![CDATA[git]]></category>
		<category><![CDATA[git 구축]]></category>
		<category><![CDATA[gitlab]]></category>
		<category><![CDATA[gitlab 구축]]></category>
		<category><![CDATA[gitlab 백업]]></category>
		<category><![CDATA[gitlab 설치]]></category>
		<category><![CDATA[Let's Encrypt]]></category>
		<category><![CDATA[SSL]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[깃]]></category>
		<category><![CDATA[복원]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5476</guid>
				<description><![CDATA[이 글에서는 GIT 버전관리 시스템을 구축하고 프로젝트에 도입하는 방법에 대해 설명한다. &#160; 먼저 GIT 이란 [깃-] 이라고 읽으며, 버전관리 시스템 중 하나이다. 몇년전부터 기존의 버전관리 시스템 표준(레거시 표준)인 SVN 을 대체하고 대세로 자리매김 하고 있다. 따라서 최신의 개발자/기획자/디자이너/퍼블리셔 라면 이 GIT의 역할과 사용법에 대해 반드시 익혀두어야 할 것이다. &#160; GIT 의 자세한 정의는 (https://en.wikipedia.org/wiki/Git) 다음과 같고, 요약하자면 &#8220;소스 버전 관리 시스템&#8221; 이라고 말할 수 있다. 소스 버전 관리 시스템을 통해, 모든 시점에 대해 저장을 하고, 코드의 병합(merge)이나 변경취소, 시점 복원등의 기능을 이용할 수 있다. 문제의 원인을 파악하기 쉬우며, 예상치 못한 소스 망실에 대해서 안전해 진다.(모든 시점에 대해 백업을 한다고 생각하면 된다.) GIT = 수동 백업 + 백업 시점 설명 이라고 말할 수 있다. &#160; GIT 에 대해 간략한 소개는 이만 마치도록&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5476/feed</wfw:commentRss>
		<slash:comments>11</slash:comments>
							</item>
		<item>
		<title>맥 내부에 apache/nginx 개발서버 세팅하기</title>
		<link>https://blog.lael.be/post/5350</link>
				<comments>https://blog.lael.be/post/5350#comments</comments>
				<pubDate>Mon, 19 Dec 2016 01:11:57 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[apache]]></category>
		<category><![CDATA[dev server]]></category>
		<category><![CDATA[lamp]]></category>
		<category><![CDATA[mac]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[개발서버]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5350</guid>
				<description><![CDATA[&#160; 지인 요청으로 글을 작성합니다. 본문의 설명은 Mac OS X 기준으로 작성하였지만 Windows OS 환경에서도 적용할 수 있습니다. &#160; 개발하는데 맥을 사용하면 매우 편리합니다. 대부분의 서버는 리눅스로 구동되며, 맥 또한 리눅스 기반이기 때문에 명령어도 유사하고, 서버 작업 관련 호환성 또한 매우 좋습니다. 이 글에서는 일반사업체/개발회사/에이전시/팀프로젝트 에서 적용할 수 있는 &#8220;맥 내부에 apache/nginx 개발서버 세팅하는 방법&#8221;에 대해서 설명하도록 하겠습니다. &#160; 1. 대부분의 실무에서 사용하는 작업 방식 실제 운영하는 서버 (라이브서버) 한대를 두고 직접 그곳에서 작업한다. (mysite.com 을 바로바로 작업) 작업 중에는 서버 오류가 발생할 수 있으며, 고객이 이용중 장애를 겪을 수 있다. &#160; 2. 더 나은 실무 작업방식 서버는 같은데 분리된 도메인의 (dev.mysite.com) 사이트를 만들고 복제된 사이트에서 개발&#38;테스트 한 후 실제 사이트에 반영하는 방법. 실제 작업 서버에 도메인만 분리후 작업한다. 공유 리소스가 있을&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5350/feed</wfw:commentRss>
		<slash:comments>5</slash:comments>
							</item>
		<item>
		<title>[Ubuntu] Let&#8217;s Encrypt 를 사용하여 무료로 SSL 사이트를 구축하는 방법</title>
		<link>https://blog.lael.be/post/5107</link>
				<comments>https://blog.lael.be/post/5107#comments</comments>
				<pubDate>Sat, 01 Oct 2016 18:08:16 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[apache]]></category>
		<category><![CDATA[Let's Encrypt]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[SSL]]></category>
		<category><![CDATA[StartCom]]></category>
		<category><![CDATA[TCP/IP]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[무료인증서]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5107</guid>
				<description><![CDATA[웹은 계속 발전하고 있으며, 여러 새로운 기술이 끊임 없이 등장하고 있다. 이 글에서는 웹 기술 중 하나인 SSL (Secure Socket Layer) 에 대해서 이야기 해 보고자 한다. &#60; 그림 : OSI Model 에서 SSL 의 위치 &#62; &#160; 정확히 말해서 SSL 은 전송계층과 (Transport Layer) 응용계층 (Application Layer) 사이에서 동작한다. Transport 에서 패킷을 받으면 -&#62; SSL 에서 패킷의 암호를 해독하고 -&#62; Application 에게 전달하는 것이다. SSL 을 세션계층(Layer 5), 표현계층(Layer 6)으로 분류하는 사람도 있고, 응용계층(Layer 7)으로 분류하는 사람도 있다. 나름대로 주장에 대한 근거가 일리 있으니 여기서는 따로 정확히 분류하지는 않겠다. 확실한건 Transport(Layer 4) 와 Application(Layer 7) 의 사이라는 것. &#160; I) 어떻게 SSL 은 암호화 통신을 하는가? - 쉽게 말하자면 SSL 은 &#8220;보안인증서&#8221; 라고 말할 수 있다. - 사람으로 비유하자면 보안인증서는 암호화코드가 내장된 주민등록증이라고&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5107/feed</wfw:commentRss>
		<slash:comments>114</slash:comments>
							</item>
		<item>
		<title>[PHP] Access-Control-Allow-Origin Multiple Origin Domains</title>
		<link>https://blog.lael.be/post/5076</link>
				<comments>https://blog.lael.be/post/5076#respond</comments>
				<pubDate>Fri, 30 Sep 2016 02:04:24 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Access-Control-Allow-Origin]]></category>
		<category><![CDATA[CORS]]></category>
		<category><![CDATA[Multiple]]></category>
		<category><![CDATA[php]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=5076</guid>
				<description><![CDATA[Code snippet 용도의 글이다. &#160; 이 코드를 사용하여 허용된 곳에서의 xhr 요청을 제어할 수 있다. 기본적으로 브라우저 보안정책 중 하나인 CORS(Cross-Origin Resource Sharing) 설정 상황에서 사용한다. 요청 응답할 부분에서 허용된 Origin 을 설정해주어야 한다. &#160; Access-Control-Allow-Origin 값이 멀티도메인을 허용하지 않기 때문에, 이렇게 프로그램적으로 작성해 주어야 한다. &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/5076/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>HTML5 Fullscreen API 응용 및 Video 네이티브 컨트롤 제어하기 (hide control css)</title>
		<link>https://blog.lael.be/post/4950</link>
				<comments>https://blog.lael.be/post/4950#respond</comments>
				<pubDate>Thu, 18 Aug 2016 06:16:32 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Fullscreen]]></category>
		<category><![CDATA[hide controlbar]]></category>
		<category><![CDATA[HTML5]]></category>
		<category><![CDATA[Override video]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=4950</guid>
				<description><![CDATA[명확하게 정리된 해설이 없길래, 내가 직접 이곳에 요약 정리해 본다. &#160; 나에게 &#8220;기존 사용하고 있는 HTML5 플레이어를 유튜브 플레이어 같이 작업해달라&#8221; 라는 요청사항이 왔다. 이에 맞추어 기술조사를 하였고 처리하였다. &#160; 1. UserAgent StyleSheet 의 이해 웹브라우저를 컴퓨터 용어로 UserAgent 라고 부른다. 웹브라우저는 HTML 태그를 해석하고 화면에 그리기(나타내기) 위해서 자체적인 StyleSheet 를 내장하고 있다. 이것을 웹브라우저-스타일시트 라고 부르며 UserAgent StyleSheet 라고 쓴다. 이 웹브라우저-스타일시트는 브라우저 화면 표시 규칙으로써 거의 비슷하나, 브라우저별로 조금씩 다르다. (95%쯤 동일) &#160; 2. FullScreen 사용 먼저 FullScreen 을 사용할 객체를 선택해야합니다. 이 객체가 video 라면 특별히 브라우저의 자체의 비디오 플레이어가 실행된다. &#160; video 객체의 fullscreen 의 경우 다음의 css 핵을 사용하여 비디오UI 디자인을 변경할 수 있습니다. &#160; &#160; 브라우저마다 네이티브 컨트롤의 클래스명이 다르기 때문에 작업 후 확인해 주어야 합니다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/4950/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>보호된 글: Ubuntu 14.04 LTS 웹서버 세팅방법 (Nginx + PHP7-FPM + MariaDB) [비밀번호 : ubuntu]</title>
		<link>https://blog.lael.be/post/4886</link>
				<comments>https://blog.lael.be/post/4886#comments</comments>
				<pubDate>Mon, 08 Aug 2016 12:18:48 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=4886</guid>
				<description><![CDATA[잠긴 글에는 요약문이 없습니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/4886/feed</wfw:commentRss>
		<slash:comments>9</slash:comments>
							</item>
		<item>
		<title>항상 최상의 속도로 국제데이터를 이용하는방법(리눅스 데이터 포워딩)</title>
		<link>https://blog.lael.be/post/4634</link>
				<comments>https://blog.lael.be/post/4634#comments</comments>
				<pubDate>Sat, 11 Jun 2016 17:44:38 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[rinted]]></category>
		<category><![CDATA[TCP]]></category>
		<category><![CDATA[국제트래픽]]></category>
		<category><![CDATA[데이터 포워딩]]></category>
		<category><![CDATA[망중립성]]></category>
		<category><![CDATA[해외 트래픽 속도]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=4634</guid>
				<description><![CDATA[알면 쉽고 모르면 어려운 것이다. 엄청 대단한건 아니지만 알아두면 유용한 지식을 공유하고자 한다. [노하우] + [상황에 맞는 적절한 프로그램 사용] 으로 문제를 해결할 것이다. 먼저 몇가지 이론을 알고 가도록 하자. &#160; 몇가지 이론 1. TCP 와 UDP 장황한 컴퓨터공학 이론 말고 대강의 뜻만 이해하도록 하자. 그림 및 내용 참조 : https://www.pluralsight.com/blog/it-ops/networking-basics-tcp-udp-tcpip-osi-models TCP 는 신뢰된 데이터 전송을 위한 프로토콜이다. 100개의 데이터를 올바르게 순서대로 모두 전송할 때 쓰는 것이다. UDP 는 신뢰되지 않은 데이터 전송을 위한 프로토콜이다. 100개의 데이터를 보내지만 도착여부등을 전혀 신경쓰지 않는다. TCP 는 웹문서(예를들어 HTML) 등을 읽을때 사용한다. UDP 는 인터넷 동영상 재생시에 사용한다. (손실을 허용하는 통신) 라고 배웠으나, 인터넷 동영상도 TCP 통신하더라. (99.99% 이상) DNS 서비스는 UDP 를 사용한다. (0.01% 이하) 아무튼 &#8220;통신한다&#8221; 라는 말을 듣게되면 모두 TCP 라고 추정하면 된다. 참고로&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/4634/feed</wfw:commentRss>
		<slash:comments>24</slash:comments>
							</item>
		<item>
		<title>보호된 글: [글비밀번호 : ubuntu] Ubuntu 14.04 LTS 웹서버 세팅 방법</title>
		<link>https://blog.lael.be/post/4518</link>
				<comments>https://blog.lael.be/post/4518#comments</comments>
				<pubDate>Thu, 12 May 2016 18:31:22 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=4518</guid>
				<description><![CDATA[잠긴 글에는 요약문이 없습니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/4518/feed</wfw:commentRss>
		<slash:comments>14</slash:comments>
							</item>
		<item>
		<title>서버 성능측정 (벤치마크 방법)</title>
		<link>https://blog.lael.be/post/4279</link>
				<comments>https://blog.lael.be/post/4279#comments</comments>
				<pubDate>Mon, 28 Mar 2016 04:34:04 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[benchmark]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[sysbench]]></category>
		<category><![CDATA[서버 성능측정]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=4279</guid>
				<description><![CDATA[다음은 https://blog.lael.be/post/44 에서 각 상품군의 성능 벤치마크시 사용했던 지표입니다. ** 2018/08/06 : Ubuntu 18.04 에서의 명령어를 추가함. Ubuntu 기준. Windows 는 Novabench(https://novabench.com/) 를 사용하도록 하자. 벤치마크 점수에 너무 신경쓰지 말아야 한다. 점수는 점수일 뿐 당신의 체감 속도가 가장 중요하다. 아래 스크린샷은 라엘이가 개인용도로 사용하고 있는 직접 구축한 클라우드 서버에서 Sysbench 를 실행한 것이다. 가상 서버는 Hyper-V 기반이며, 6코어 5GB RAM, 100GB SSD 사양이다. # 제 서버를 기준 지표로 설정하지 마시고, https://blog.lael.be/post/44 의 업체를 기준 지표로 삼으세요. 0. 대조군 설정 당신이 이미 서버를 운영하고 있는 상태에서 이 글을 읽는다고 가정한다. 빠른 서버에 대한 느낌은 직접 사용해야 알 수 있다. 당신의 서버와 비교할 대조군을 설정한다. VULTR 클라우드서비스 (https://www.vultr.com/)에 가입후 도쿄 또는 싱가포르 지역에 자신의 서버와 동일사양인 서버를 추가해보자. 그 후 아래 명령어로 비교해&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/4279/feed</wfw:commentRss>
		<slash:comments>7</slash:comments>
							</item>
		<item>
		<title>Windows RDP 보안 인증서 설정하기 (install Certificate)</title>
		<link>https://blog.lael.be/post/4074</link>
				<comments>https://blog.lael.be/post/4074#respond</comments>
				<pubDate>Wed, 02 Mar 2016 18:19:28 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=4074</guid>
				<description><![CDATA[RDP는 Remote Desktop Protocol 의 약어로 마이크로소프트사 제품 컴퓨터에 원격제어시 사용하는 프로토콜이다. 윈도우 서버 (또는 데스크탑)에 원격 연결을 사용할 때 보안인증서를 사용하는 방법에 대해 알아보자. 물론 이 작업(보안인증서 설정)을 하지 않아도 원격연결은 보안통신을 한다. 가장 편한 방법은 보안경고를 무시하는 것이다. &#160; 1. pk12 인증서 생성 Windows 에서 인증서를 사용하려면 .p12(.pfx) 확장자의 파일이 필요하다. openssl 툴을 사용해서 인증서와 개인키를 조합하여 .p12(.pfx) 파일을 만들도록 하자. 나의 경우 인증서 발급 회사에서 제공하는 온라인 p12 생성기를 사용한다. &#160; 2. mmc 에서 인증서 설정 후 개인용 &#62; 인증서 &#62; 컴퓨터계정 &#62; 로컬컴퓨터 &#62; import. 원격데스크톱 &#62; 인증서 &#62; 는 할 필요 없음. &#160; &#160; 3. cmd 에서 명령입력. 인증서 경로 검사를 하기 때문에 인증서가 없거나 인증서 지문(thumb)을 잘못쓰면 invalid parameter error 가 나온다. 레지스트리를 통해 강제로&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/4074/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>리눅스 부팅시 프로그램/명령어 실행하기 (Linux Init script)</title>
		<link>https://blog.lael.be/post/3932</link>
				<comments>https://blog.lael.be/post/3932#comments</comments>
				<pubDate>Fri, 19 Feb 2016 09:15:31 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Boot script]]></category>
		<category><![CDATA[Linux Init Script]]></category>
		<category><![CDATA[부팅 스크립트]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=3932</guid>
				<description><![CDATA[서버가 완전히 부팅된 후에 무언가 자신만의 특별한 작업을 하고 싶을 때가 있다. Windows 서버의 경우 [관리 도구]의 [작업 스케줄러]를 이용하면 된다. (자세한 설정 방법은 구글 검색을 이용해 보도록 하자.) 리눅스의 경우 다음과 같은 방법으로 설정 할 수 있다. &#160; &#160; 리눅스는 매우 다양한 설정지점(hooking point)이 있다. 부팅 시작시, 서비스 시작 (전, 중, 후), 네트워크 연결 (전, 후), 부팅 후 등이 대표적인 설정지점이다. &#160; 이 중에서 가장 많이 쓰이는 &#8220;서버가 완전히 부팅된 후&#8221; 특정 작업을 실행하는 것을 실습해 보도록 하겠다. Run init-script when server fully startup. &#160; 예제는 root 계정에서 실행한다. Ubuntu 14.04 LTS 기준으로 작성되었으며, CentOS나 Fedora 등에서는 명령어가 다를 수 있다. (대략적인 방법은 동일) &#160; 1. 예제 실행을 위해 몇가지 프로그램 확인 a) 시간 동기화 프로그램 확인 # ntpdate 만약&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/3932/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>MariaDB 10.0 의 이유 (MariaDB 유래)</title>
		<link>https://blog.lael.be/post/3926</link>
				<comments>https://blog.lael.be/post/3926#respond</comments>
				<pubDate>Wed, 17 Feb 2016 06:28:54 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[mariadb]]></category>
		<category><![CDATA[유래]]></category>

		<guid isPermaLink="false">https://blog.lael.be/?p=3926</guid>
				<description><![CDATA[잡담입니다. &#160; MySQL-Company 가 Oracle-Company에 인수되면서 기대치만큼 발전하지 않자, MySQL 창업자인 마이클 와이드니어스는 Oracle(에 팔린 MySQL 회사)를 나와서, 동료 개발자들과 함께 MariaDB-Company를 설립합니다. &#160; 마이클 와이드니어스의 첫째딸 이름이 My, 막내딸이름이 Maria, 첫째아들 이름이 Max 입니다. 실제로 이 때문에 MySQL, MariaDB, MaxDB가 있습니다. (네이밍 참 쉽죠?) 참조 : https://en.wikipedia.org/wiki/Michael_Widenius &#160; 그는 MariaDB 초기에는 API 인터페이스만 호환되도록 하고 내부엔진을 바꾸었으며, 이후에는 공격적인 기능 도입을 위해 버전을 많이 건너뜁니다. 그래서 MySQL 5.5 다음 버전은 -&#62; MySQL 5.6 이지만, MariaDB 5.5 다음 버전은 -&#62; MariaDB 10.0 입니다. &#160; MariaDB 10.0 과 MySQL 5.6 은 완전히 다른 것이 아니고 호환 안되는 기능이 있음을 의미합니다.(MariaDB가 훨씬 빠르고, 기능도 더 많습니다.) 일부는 MariaDB 10.0 이 MySQL 5.6 보다 꽤 많이 (버전 번호상 두배쯤?) 좋을 것이라고 하는데, 그렇지는 않습니다. 그냥 버전 번호를 다르게 가는 것일뿐. MariaDB&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/3926/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>대용량 검색 처리를 위한 inverted index (역색인) 설명</title>
		<link>https://blog.lael.be/post/3056</link>
				<comments>https://blog.lael.be/post/3056#comments</comments>
				<pubDate>Mon, 11 Jan 2016 02:24:19 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Big Data]]></category>
		<category><![CDATA[Inverted Index]]></category>
		<category><![CDATA[million documents]]></category>
		<category><![CDATA[solr]]></category>
		<category><![CDATA[검색기법]]></category>
		<category><![CDATA[역색인]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=3056</guid>
				<description><![CDATA[#최종 수정 : 2017-03-22 - 내용과 예제를 보강하였습니다. 이 개념은 ElasticSearch 나 Apache Solr 를 다루기 위해 필수적으로 알아야 할 개념입니다. 라엘이의 한마디 : 역방향 인덱스(inverted index)는 원래 대용량 텍스트 검색을 위해서 고안된 방법입니다. 요즘의 SNS에서 주로 사용되는 #태그 검색 기능을 당신의 시스템에 넣고 싶다면 반드시 역방향 인덱스 방법을 사용해야 할 것입니다. (물론 본문을 Full-scan 해서 LIKE 검색을 해도 되지만 매우 비효율적인 방법입니다.) 나름 쉽게 설명한다고 적었는데, 비전공자에게는 어려울 수도 있다. - 빅데이터 먼저 &#8220;빅데이터&#8220;란 무엇일까? http://en.wikipedia.org/wiki/Big_data 위키피디아에서는 &#8220;매우 양이 많고 복잡해서 기존에 사용하던 분석방식으로는 처리하기 힘든 데이터들(Data-Set)&#8221; 이라고 정의되어 있다. 과거에 비해서 인터넷이 비약적인 성장을 하였고, 언제 어디서나 인터넷에 접속할 수 있는 &#8220;유비쿼터스&#8221;의 시대 도래로 인해 우리는 항상 인터넷에 연결되어 있다.그러다 보면 많은 종류, 많은 수의 document 를 생성하게 된다.&#8220;빅&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/3056/feed</wfw:commentRss>
		<slash:comments>18</slash:comments>
							</item>
		<item>
		<title>Ubuntu 16.04 LTS 웹서버 세팅방법 (Nginx + PHP7-FPM + MariaDB)</title>
		<link>https://blog.lael.be/post/2600</link>
				<comments>https://blog.lael.be/post/2600#comments</comments>
				<pubDate>Fri, 27 Nov 2015 18:09:32 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[benchmark]]></category>
		<category><![CDATA[centos]]></category>
		<category><![CDATA[cloud-init-nonet error]]></category>
		<category><![CDATA[fpm]]></category>
		<category><![CDATA[install]]></category>
		<category><![CDATA[mariadb]]></category>
		<category><![CDATA[nginx]]></category>
		<category><![CDATA[php7-fpm]]></category>
		<category><![CDATA[setup]]></category>
		<category><![CDATA[ubuntu]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=2600</guid>
				<description><![CDATA[Last updated : 2017-06-12 [주의] 기존의 Ubuntu 14.04 세팅방법 글은 : https://blog.lael.be/post/4886 로 이전되었습니다. 글 비밀번호는 ubuntu 입니다. [주의] 이 글은 Ubuntu 16.04 LTS 에 맞추어 작성되었습니다. [정보] 회사 내에 전문 담당자가 없거나 리눅스에 서투르신 경우, 작업의뢰를 신청하세요. 프리랜서 이전/세팅 대행 : https://www.xetown.com/freelancer/3456 . 당신의 요청이 합당하다면 저분이 의뢰를 받아주실 겁니다. #16.10.04 무료 보안인증서(SSL) 적용방법이 추가됨 무료 보안인증서 설치방법이 추가되었습니다. HTTPS 사용을 원하신다면, 본문을 다 읽으신 후 다음의 글로 이동해주세요. https://blog.lael.be/post/5107 * Nginx 가 아닌 Apache 로 PHP 웹서버를 구축하시려면 https://blog.lael.be/post/73 글로 이동하세요. (쉽고 편함) * Ubuntu 에서 JSP 웹서버 세팅을 원하시면 https://blog.lael.be/post/858 글로 이동하세요. * Ubuntu 에서 PHP와 JSP를 동시 구동하고 싶으시면 https://blog.lael.be/post/1023 글로 이동하세요. * Ubuntu 가상서버호스팅을 찾는 중이라면 https://blog.lael.be/post/44 글로 이동하세요. Nginx 공식사이트는 http://nginx.org/ 이다. 엔진엑스 라고 부른다. Igor Sysoev (이고르 시소에브) 라는 러시아 개발자가 개발했으며, 이 소프트웨어의 주요 개발 목표는 &#8220;동시접속&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/2600/feed</wfw:commentRss>
		<slash:comments>250</slash:comments>
							</item>
		<item>
		<title>Laravel 이해 시작단계. Static 호출로 객체 사용하기.</title>
		<link>https://blog.lael.be/post/2535</link>
				<comments>https://blog.lael.be/post/2535#comments</comments>
				<pubDate>Tue, 17 Nov 2015 14:05:36 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[__callStatic]]></category>
		<category><![CDATA[Facade]]></category>
		<category><![CDATA[Laravel]]></category>
		<category><![CDATA[Magic Method]]></category>
		<category><![CDATA[static call]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=2535</guid>
				<description><![CDATA[Laravel(라라벨) 이라는 프레임웍을 뜯어보고 있다. 대세 트랜드 코드를 보면 &#8220;이런 것도 되는구나&#8221; 라는 것을 느낀다. &#160; 프로그래밍 언어에 따라서 규칙이 약간씩 다른데, 불변의 진리라고 알고 있었던 것들이 바뀌는 것을 보면 혼란이 일어나곤 하더라. PHP의 경우 선언 안한 메소드를 호출할 수 있고 (정적호출, 객체호출 등의 분기도 가능하다), 선언되지 않은 프로퍼티(속성값)에 값을 할당할 수 있는 등 신기한 것들이 되더라. 나중에 다룰 것인데 먼저 이론을 보고 싶은 사람은 PHP Magic Method 를 살펴보아라. (http://php.net/manual/en/language.oop5.magic.php) &#160; Laravel 의 주요 사용 방법인 Facade(파사드)에 대해 이해하려면 몇가지를 알아야 한다. 먼저 Facade 의 의미를 알아보도록 하자. 길고 장황하고 정확한 설명이 있겠지만 내가 의역하고 요약해서 Facade 를 설명하자면 static 함수 호출을 객체의 클래스(=서비스 라고 부르더라)와 연결시켜 주는 것 이다. &#160; &#160; &#160; 아무튼 Facade 이해의 첫번째 단계인 &#8220;static 호출로&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/2535/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>XECon 2015에 참여합니다.</title>
		<link>https://blog.lael.be/post/2467</link>
				<comments>https://blog.lael.be/post/2467#respond</comments>
				<pubDate>Tue, 03 Nov 2015 13:42:07 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[2015]]></category>
		<category><![CDATA[xecon]]></category>
		<category><![CDATA[xpressengine]]></category>
		<category><![CDATA[네이버]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=2467</guid>
				<description><![CDATA[XpressEngine(이하 XE) 은 네이버 주식회사에서 유지/개발 하는 오픈소스 컨텐츠 관리 소프트웨어 입니다. 이 소프트웨어의 개발팀에서 XECON2015를 개최합니다! 당연히 이것은 개발자 대상의 행사입니다. 일단 지인과 함께 참가 신청은 했습니다. &#160; 참가 신청 및 프로그램 소개 페이지 : https://xecon2015.xpressengine.com/ 날짜 : 2015년 11월 14일 토요일 오후 1시 장소 : 서울시 마포구 상암동 누리꿈스퀘어 3층 인원 제한 : 선착순 600명 &#160; &#160; 얼마나 멋진 분들이 오실지 벌써부터 기대가 되네요. &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/2467/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu 서버에서 PHP7 설치 적용하기</title>
		<link>https://blog.lael.be/post/2407</link>
				<comments>https://blog.lael.be/post/2407#comments</comments>
				<pubDate>Wed, 21 Oct 2015 15:06:03 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[install]]></category>
		<category><![CDATA[php7]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[설치]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=2407</guid>
				<description><![CDATA[이 문서는 Ubuntu 16.04 LTS 가 출시됨에 따라 폐기되었습니다. PHP 7.0 을 설치하시려면 운영체제 Ubuntu 16.04 LTS 를 사용해주세요. 다음으로 이동 : https://blog.lael.be/post/73 &#160; 이 글은 한번에 끝내는 Ubuntu 웹서버세팅 (우분투 서버세팅) 9번 항목의 PHP 5.5.9 설치 대신에 PHP 7.0 을 설치하는 방법을 설명합니다. &#160; PHP7 공식 위키 참조 (https://wiki.php.net/todo/php70#timetable) &#160; PHP7 은 2015년 6월 11일에 최초 개발 버전이 공개되었으며 최종 공식 정식버전 발표일은 2015년 12월 3일 입니다. &#160; 현재 PHP 언어로 개발된 자체 솔루션을 운영중이라면 업그레이드를 하지 마시기 바랍니다. 속도는 빨라지는데&#8230; 구동되지 않을 것입니다. (하얀 공백 화면을 보게 될 것입니다.) &#160; 현재 WordPress, Drupal, XpressEngine, 그누보드(영카트) 가 PHP7 환경에서 동작하는 것을 확인하였습니다. 다만 일부 WordPress 플러그인, Drupal 플러그인, XpressEngine 모듈, 그누보드 플러그인(빌더등) 가 PHP7 환경에서 동작하지 않는 것을 확인했으며 결과적으로 이 플러그인/모듈/빌더 를&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/2407/feed</wfw:commentRss>
		<slash:comments>17</slash:comments>
							</item>
		<item>
		<title>Ubuntu Varnish Cache 를 구축하여 웹서비스를 가속화시키기 (바니쉬 캐시)</title>
		<link>https://blog.lael.be/post/2363</link>
				<comments>https://blog.lael.be/post/2363#comments</comments>
				<pubDate>Sun, 18 Oct 2015 15:01:26 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[accelerator]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[varnish]]></category>
		<category><![CDATA[가속화]]></category>
		<category><![CDATA[바니쉬]]></category>
		<category><![CDATA[캐시]]></category>
		<category><![CDATA[튜닝]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=2363</guid>
				<description><![CDATA[웹 사이트를 잘 운영하면 방문자 수가 늘어나고, 어느 순간 사이트가 급격히 느려지게 된다. 어느 순간 답답함이 느껴지고 그 답답함이 점점 커지며, 급기야 방문자의 항의 글을 보게되면 혼란에 빠지게 된다. &#160; 당신의 웹서비스를 가속화(튜닝) 하는 방법에는 다음의 3가지 단계가 있다. &#160; 1. 서버 사양 올리기. 1코어 1기가 서버를 4코어 4기가 서버로 올리는 것이다. 매우 간단하고 빠르고 쉽다. 자동차로 비유하자면 엔진을 하나 더 다는 것이다. 그런데 엔진이 무한정 달리는 것도 아니고, 엔진이 2개가 된다고 속도가 2배가 되지도 않는다. 엔진 사는데 돈이 든다. &#160; 2. 서버 구동 소프트웨어 최적화하기. 서버 구동 소프트웨어 설정 값을 조정하여 더 효율적으로 동작할 수 있게 한다. 자동차로 비유하자면 엔진 연비를 향상시키는 것이다. 급출발, 급정거 하지 않고 브레이크를 적게 밟으며 권장속도로 운전한다. 돈이 들지는 않지만 연비향상 방법을 알고 있어야&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/2363/feed</wfw:commentRss>
		<slash:comments>13</slash:comments>
							</item>
		<item>
		<title>Ubuntu 추가 랜카드 설정 및 사설네트워크 구축하기</title>
		<link>https://blog.lael.be/post/2161</link>
				<comments>https://blog.lael.be/post/2161#comments</comments>
				<pubDate>Sun, 13 Sep 2015 05:10:08 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[ifconfig]]></category>
		<category><![CDATA[private network]]></category>
		<category><![CDATA[리눅스랜카드]]></category>
		<category><![CDATA[사설아이피]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=2161</guid>
				<description><![CDATA[&#160; # 용어 설명 # 랜카드 = Network Interface Card = NIC = Interface Card = Interface 네트워크 하는 사람이 &#8220;두번째 인터페이스 아이피가 뭐야?&#8221; 라고 물어보면 &#8220;두번째 슬롯에 꼽혀진 랜카드에 할당된 아이피를 물어보는 것이다.&#8221; &#160; 1. 추가 랜카드를 장착할 수 있는 업체 조사 * 편의상 1달러는 1000원, 100엔은 1000원 으로 계산하여 표시하겠다. (2015년 9월 10일 기준 실제 환율은 1달러 = 1180원, 100엔 = 980원 이다.) * 모든 클라우드 서버 호스팅 업체의 내부아이피 트래픽은 과금되지 않는다. 아예 측정하지 않거나(unmetered), 측정한 후에 0원을 곱해서 청구(zero cost)한다. 공인아이피 통신 트래픽은 과금된다. 같은 호스팅 회사라고 하더라도  과금되지 않기위해서 되도록 서버간에는 내부아이피로 통신하도록 하자. &#160; 클라우드 업체 목록은 이곳에서 찾을 수 있다. (https://blog.lael.be/post/44) Vultr (공인아이피 : 2000원, 사설아이피 : 무료) ConoHa (공인아이피 : 3500원, 사설아이피&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/2161/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>PHP의 자료형(Data Type)과 자동형변환(Type Juggling) 알아보기</title>
		<link>https://blog.lael.be/post/1993</link>
				<comments>https://blog.lael.be/post/1993#respond</comments>
				<pubDate>Mon, 31 Aug 2015 14:31:03 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Data Type]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[Type Juggling]]></category>
		<category><![CDATA[자동형변환]]></category>
		<category><![CDATA[자료형]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1993</guid>
				<description><![CDATA[This tutorial is good! PHP Basics like Introduction, Installation Guide, Data Types, Variables, and Operators. It also introduces Control structures, Functions, Strings, Regular expression, Error Handling, Cookies &#38; Sessions. This site also touch on advanced topics like PHP mail, MySQL Functions, Security, XML Parser, and Create PHP Application. &#160; PHP Data Types, Variables, Constant, Operators Tutorial https://www.guru99.com/data-types-variables-and-operators.html &#160; 프로그래밍 언어의 조건 컴퓨터공학전공 4학년 교과과정 중에 Programming Language 라는 수업이 있다. 이 수업에서는 그동안 무심코 배워왔던 프로그래밍 언어의 역사와, 언어의 발명일, 영향을 받은 언어, 영향을 끼친 언어, 기본 정신, 주 응용분야 등을 배운다. 프로그래밍 언어의 조건과 Language Designer 의 역할에 대해서 배우고 직접 자신만의 언어 규칙을 정하고 어휘분석기(Lexer)와 구문분석기(Parser) 자료형검사기(Type Checker)를 만들어본다. &#160; 코드가 실행되기 까지 꽤나 다양한 단계가 있는데 각&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1993/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>실제 운영 중인 서비스에 실시간 패치를 하는 방법</title>
		<link>https://blog.lael.be/post/1886</link>
				<comments>https://blog.lael.be/post/1886#respond</comments>
				<pubDate>Fri, 14 Aug 2015 09:44:54 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Atomic Operation]]></category>
		<category><![CDATA[Multi-AZ]]></category>
		<category><![CDATA[실서버작업]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1886</guid>
				<description><![CDATA[먼저 컴퓨터공학 용어인 Atomic operation 에 대해 알아보자. &#160; Atomic operation(원자적 연산)은 다음 두가지 조건을 반드시 만족해야 한다. 1. 모든 조작이 완료할 때까지 어떤 프로세스도 변경을 알지 못하도록 비가시적이어야 한다. 2. 조작 중에 어느 하나라도 실패한다면 조작 전체도 실패하고 시스템의 상태를 조작 이전 상태로 복구해야 한다. 외부에서는 조작의 집합이 단번에 성공하거나 실패하는 것으로 보인다. 쉽게 말해서 중간 상태가 없는 것이다. &#160; 자세한 설명 및 예시는 여기를 참조 : http://vaert.tistory.com/39 리눅스 tar 프로그램을 사용해서 압축해 본 적이 있는가? 압축 중에 Control - C 를 입력하면 압축이 중지된다. 이것을 다시 이해해 보자면 tar 압축 프로세싱 중에 다른 명령(Abort)이 들어온 것이다. 압축 중인 파일을 다른 프로그램이 다운로드(Read) 한다면 현재 압축된 파일만큼 다운로드 될 것이다. (즉 압축 중인 파일을 다운받게됨.) &#160; tar 명령은 Atomic operation 이&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1886/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>언제 웹서버와 DB서버를 분리해야 하는가?</title>
		<link>https://blog.lael.be/post/1866</link>
				<comments>https://blog.lael.be/post/1866#comments</comments>
				<pubDate>Wed, 12 Aug 2015 17:18:53 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[ELB]]></category>
		<category><![CDATA[디비서버]]></category>
		<category><![CDATA[로드밸런싱]]></category>
		<category><![CDATA[분리]]></category>
		<category><![CDATA[웹서버]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1866</guid>
				<description><![CDATA[보통 서비스를 처음 세팅할 때 웹서버와 디비서버를 같은공간에 설치하곤 한다. &#160; 서버의 능력치를 1이라고 가정하자. 초기 서비스 운영시에는 웹 0.1, 디비 0.1 의 능력이 필요하기 때문에 한 서버 공간을 사용해도 서비스 운영에 지장이 없다. 최상의 성능을 발휘할 수 있는 것이다. &#160; 하지만 서비스의 사용자가 늘어나게 되면 이야기가 달라진다. 서비스의 부하량이 증가해서 예를들어 웹 0.7, 디비 0.7 의 능력을 사용하는 상황이 된다면, 서버의 능력치인 1이 넘어갔기 때문에(0.7 + 0.7 = 1.4) 과로(over work)를 하게 된다. &#60;그림 : uptime 명령어로 현재 서버의 총 CPU부하량을 볼 수 있다&#62; #cat /proc/cpuinfo &#124; grep CPU &#124; wc -l 이 명령어를 통해 CPU 부하량 제한을 알 수 있다. (정확히 말하자면 CPU코어 수를 알 수 있다.) 위의 스크린샷을 찍은 서버의 경우, 2코어 서버라서 CPU부하량이 2 까지는 정상동작됨을&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1866/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>한번에 끝내는 CentOS 웹서버세팅 (센토스 서버세팅)</title>
		<link>https://blog.lael.be/post/1721</link>
				<comments>https://blog.lael.be/post/1721#comments</comments>
				<pubDate>Sun, 02 Aug 2015 15:35:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[centos]]></category>
		<category><![CDATA[lamp]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[설치]]></category>
		<category><![CDATA[세팅]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1721</guid>
				<description><![CDATA[Last updated : 2016-11-08 CentOS 에서의 웹서버 구축 방법을 요청하셔서 작성해 봅니다. Ubuntu, CentOS, Fedora, ArchLinux 등에서 어떤 것이 가장 좋은 운영체제 일까요? 본인에게 편한 운영체제가 가장 좋습니다. (일방적으로 하나의 좋은 것이 있다면 다들 그것만 쓰고 나머지는 도태되겠죠.) 참고로 저에겐 Ubuntu 가 편합니다. &#160; 현재 배포된 CentOS 버전은 아래와 같습니다. 참조 : https://ko.wikipedia.org/wiki/CentOS &#160; 이 글에서는 CentOS 7.0 또는 그 이상 버전에서 사용가능한 설정 방법을 설명하도록 하겠습니다. &#160; 참고로 운영체제 이미지는 다음의 위치에서 다운로드 가능합니다. https://www.centos.org/download/ Everything ISO : 운영체제 파일 + 패키지 파일 이 모두 담겨있음. 인터넷이 안되는 환경에서 사용할 수 있음. Minimal ISO : 운영체제 파일. 패키지는 인터넷 연결을 통해 설치해야 함. 일반적으로 이 이미지를 CD 장치 또는 DVD 에 기록 후 사용합니다. &#160; &#160; 1) 리눅스 버전체크 #uname -a&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1721/feed</wfw:commentRss>
		<slash:comments>42</slash:comments>
							</item>
		<item>
		<title>PHP7.0 은 얼마나 빠를까?</title>
		<link>https://blog.lael.be/post/1657</link>
				<comments>https://blog.lael.be/post/1657#comments</comments>
				<pubDate>Tue, 28 Jul 2015 07:30:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[benchmark]]></category>
		<category><![CDATA[php7]]></category>
		<category><![CDATA[향상]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1657</guid>
				<description><![CDATA[* PHP7 을 설치하시려면 다음의 글 (https://blog.lael.be/post/2407)을 참조하세요. (Apache with Mod-PHP7) * PHP를 최신버전으로 구축하고 싶다면 https://blog.lael.be/post/2600 글로 이동하세요. (Nginx + PHP7-FPM + MariaDB) &#160; 최근 궁금한 것이 두가지 생겨서 테스트해보았습니다. &#160; 1. PHP 업로드 중에 읽기 요청이 들어오면 어떻게 되나? Read lock 이 걸리나? 물론 파일 변경이 0.005초 이내로 이루어지지만 그 사이에 read 가 일어날 경우 어떻게 되는지 궁금하여 실험해 보았습니다. 테스트 결과 : php 업로드 중에 읽기 요청이 들어오면 업로드 된만큼 해석해서 처리 -&#62; 100% 에러발생 따라서 변경중에 엑세스가 일어나지 않게 maintenance mode 를 만들거나 linux rename 같은 atomic 함수를 이용하라고 하는군요. &#160; 참조 : http://stackoverflow.com/questions/15478298/what-happens-when-php-file-is-replaced-while-being-executed-on-linux-apache-serv 참조 : http://stackoverflow.com/questions/9021849/does-apache-read-lock-files-before-serving-them 참조 : http://superuser.com/questions/101676/is-there-some-difference-between-mv-and-cp-rm-the-old-file-on-unix &#160; 2. PHP 7.0 이 공식 문서에 따르면 이전버전보다 2배 빠르다고 한다. 정말일까? &#160; 공식 문서 : http://php.net/index.php &#160; &#160; 기존&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1657/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>IDC 서버를 Amazon 클라우드로 마이그레이션 하고 난 후기</title>
		<link>https://blog.lael.be/post/1591</link>
				<comments>https://blog.lael.be/post/1591#comments</comments>
				<pubDate>Mon, 13 Jul 2015 16:07:08 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[amazon]]></category>
		<category><![CDATA[EC2]]></category>
		<category><![CDATA[ELB]]></category>
		<category><![CDATA[마이그레이션]]></category>
		<category><![CDATA[서버 구축]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1591</guid>
				<description><![CDATA[글 작성 이후에 서버의 구성을 조금 바꾸었습니다. 예를 들어 현재 제가 관리하는 시스템은 사용자의 관여 없이 자동으로 장애처리 및 오토스케일링(UP&#38;Down)이 작동합니다. 해당 내용은 추후 글 수정시 추가하도록 하겠습니다. &#60; 그림 : 장애가 발생하여 자동으로 서버가 증설되었고, 장애 상태가 종료되어 증설된 서버가 자동으로 제거되었다 &#62; 서버 관리자의 개입 없이 전자동으로 이루어지는 프로세스이며, 최종 고객이나 담당자 그리고 서버관리자까지도 장애를 느끼지 못한다. #글 본문시작. 최근 회사의 서비스 인프라를 아마존 클라우드로 이전하였다. 물리서버(Metal Server)를 오래사용되다 보니까 원인을 알 수 없는 하드웨어 장애가 발생하더라. &#160; 서버 운영의 유연성과 하드웨어 장애로 부터 벗어나기 위해서 Cloud 환경으로 바꾸어보았다. &#160; - 클라우드 인프라의 장점 &#160; - 빠른 설치 및 운영 대기 시간 감소 : IDC 에서 신규 장비 입고 후 구축하면 최소 이틀 걸린다. 클라우드 환경에서 신규 서버&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1591/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>웹 프로젝트 진행의 올바른 방법</title>
		<link>https://blog.lael.be/post/1581</link>
				<comments>https://blog.lael.be/post/1581#comments</comments>
				<pubDate>Mon, 13 Jul 2015 14:10:22 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Agile]]></category>
		<category><![CDATA[git]]></category>
		<category><![CDATA[Scrum]]></category>
		<category><![CDATA[vagrant]]></category>
		<category><![CDATA[Web Project]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1581</guid>
				<description><![CDATA[글쓰고자 하는 내용이 몇가지 있는데,  글을 쓸 수 있는지 날마다 나의 컨디션을 살펴보다가 오늘은 써도 되겠다 싶어서 쓰도록 한다. &#160; 제목이 딱딱한 표현인 &#8220;올바른 방법(Right way)&#8221; 이라는 단어를 사용했는데 &#8220;라엘이가 제안하는 방법(Suggested way)&#8221; 이라고 풀어서 해석하도록 하여라. 가장 좋은 프로그래밍 언어는 &#8220;본인에게 쉬운 언어&#8221; 이며, 가장 좋은 프로젝트 진행 방법 역시 &#8220;팀원들에게 쉬운 방법&#8221; 이다. - 참고 : 더 좋은 방법을 사용하면 더 쉬워진다. &#160; 라엘이는 초등학교 고학년때 html 과 frameset 등을 다루었고, 중학교 시절 js, css, ls 같은 리눅스 명령어를 다루었다. 벌써 10년도 더 된 일인데, 일찍 접했다는 것이 중요한 것이 아니라 꾸준히 하고 있다는 것이 중요한 것이다. &#160; 여러가지 프로젝트를 지켜보고, 스스로 진행해 보면서 2015년 현재 트랜드에 맞는 진행방법을 설명하고자 한다. &#160; - 조건 : 프로젝트 구성원이 둘&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1581/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>php 세션 저장소를 redis 로 바꾸어 본 후기.</title>
		<link>https://blog.lael.be/post/1494</link>
				<comments>https://blog.lael.be/post/1494#comments</comments>
				<pubDate>Tue, 16 Jun 2015 14:29:34 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[redis]]></category>
		<category><![CDATA[session_handler]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1494</guid>
				<description><![CDATA[어떤 웹 프로그램의 속도가 느려서 디버깅을 했었는데, 느린 부분이 session_start() 구문이었다. &#160; 저 한 줄 실행하는데, 1.2초~ 2.5초가 걸리더라. 하나의 PHP 파일에 대하여, 동시에 20개의 POST 요청을 하는 프로그램이었다. &#160; - 세션 구문이 느리니까 개선을 위하여 redis 를 설치해 보았다. 공식사이트는 이곳 (http://redis.io/download) 이다. PHP 연동 파일은 http://redis.io/clients#php 에서 찾아볼 수 있다. 라엘이는 phpredis 를 선택해서 설치하였다. 설치방법은 사이트에 잘 나와있으니 따라하면 된다. &#160; 적용 직후 반응 속도가 대폭 개선되었다. 세션의 속도가 개선된 후에, 2번째로 시간을 오래 소비하는 요인을 찾았고 그것은 어떤 SQL 구문이었다. 해당 SQL 구문을 개선한 후에 만족할 만한 반응속도를 얻었다. &#160; 이상한 점은 그 후에 file session hander 로 바꾸어도 빠른 속도가 나오더라는 것이다. &#160; 최종적으로 redis session 과 file session 의 속도차이는 거의 나지 않았다. - 반응속도가 만족스러워져서&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1494/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>무료 DNS 서비스 모음 (Free DNS List)</title>
		<link>https://blog.lael.be/post/1475</link>
				<comments>https://blog.lael.be/post/1475#respond</comments>
				<pubDate>Sun, 14 Jun 2015 14:51:32 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[dns서버]]></category>
		<category><![CDATA[free dns]]></category>
		<category><![CDATA[네임서버]]></category>
		<category><![CDATA[무료 dns]]></category>
		<category><![CDATA[무료 네임서버]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1475</guid>
				<description><![CDATA[최종 확인 : 2017.09.28 DNS 는 도메인주소를 IP 주소로 변환해주는 서비스 입니다. Domain Name Service 라고 합니다. 네임서버 라고도 부릅니다. 아래 목록은 모두 안정적인 곳이니 적절히 마음에 드는 업체를 선택하시면 됩니다. DNS 는 계층형 알고리즘에 의해 캐쉬됩니다. 따라서 DNS 서버의 위치가 멀더라도 실사용에 거의 차이가 나지 않습니다. 무료 DNS 서비스를 소개합니다. 대부분의 도메인 등록업체에서 무료 도메인네임서버 서비스를 지원합니다. 1개 또는 소수의 도메인을 보유한다면 도메인등록업체에서 무료로 제공해주는 네임서버 사용을 고려해보세요. 그 외의 경우에는 아래의 네임서버 서비스를 사용하는 것이 좋습니다. &#160; 1. Vultr DNS (링크 : http://www.vultr.com/) 가입 &#62; My Server &#62; DNS &#160; 2. ConoHa DNS (링크 : https://www.conoha.jp/) 가입 &#62; Console &#62; DNS 주의 : GeoDNS 를 활성화하면 1일에 120원이 부과됩니다. 항상 비활성화 하세요. &#160; 3. Digital Ocean DNS (링크 : https://www.digitalocean.com/)&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1475/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu 백업 스크립트 작성하기</title>
		<link>https://blog.lael.be/post/1449</link>
				<comments>https://blog.lael.be/post/1449#comments</comments>
				<pubDate>Sun, 14 Jun 2015 08:55:33 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[backup]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[script]]></category>
		<category><![CDATA[백업]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1449</guid>
				<description><![CDATA[아래 설명글은 Ubuntu 뿐만 아니라 모든 Linux 배포판에 대해서 공통적으로 실행가능합니다. 서버를 운영하면서, 백업과 보안은 항상 염두해 두어야 하는 사항이다. &#160; 리눅스 시스템에서 주기적으로 파일과 데이터베이스 백업을 하는 방법에 대하여 설명하겠다. &#160; * Dropbox 에 원격 자동 백업하는 방법은 여기에 : https://blog.lael.be/post/5952 &#160; 1. 정책 세우기 언제마다 백업을 할 것인가? 백업 방식은 어떤것인가? 백업 유지 기간은? 백업 저장소는 어떤 것인가? &#160; 1) 백업 주기 정책 대부분의 서버에서 접속자가 가장 낮을때는 4:00 AM ~ 4:30 AM 입니다. 그래서 많은 서버 관리자들이 새벽 4:00 에 백업이 이루어지게 설정합니다. &#160; 하루에 2번 백업하고 싶으면 오전/오후 4:00 에 백업을 하도록 합시다. &#160; 2) 백업 방식 정책 백업이라는 것이 데이터를 복사해 두는 것이기 때문에 하드디스크의 여유공간이 많아야 합니다. # df -h 명령어를 통해서 저장할 디스크의 여유공간이 충분한지&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1449/feed</wfw:commentRss>
		<slash:comments>39</slash:comments>
							</item>
		<item>
		<title>sshfs를 사용하여 Linux 서버간 공유폴더 설정하기</title>
		<link>https://blog.lael.be/post/1387</link>
				<comments>https://blog.lael.be/post/1387#comments</comments>
				<pubDate>Tue, 02 Jun 2015 12:20:12 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[ami]]></category>
		<category><![CDATA[centos]]></category>
		<category><![CDATA[fuse]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[mount]]></category>
		<category><![CDATA[shared folder]]></category>
		<category><![CDATA[sshfs]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[공유폴더]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1387</guid>
				<description><![CDATA[리눅스 서버(Linux Server)를 운영하다보면 서버간에 폴더를 공유(Shared folder)해야 할 때가 있다. 공유폴더를 설정한다거나, 백업폴더를 설정한다거나 여러 이유가 있을 수 있다. &#160; 그 때 사용할 수 있는 서버간에 공유폴더를 설정할 수 있는 방법을 설명하고자 한다. &#160; 이 방법은 Ubuntu, Debian 및 CentOS, Redhat, Amazon Linux 에서 사용할 수 있다. &#160; 1. Ubuntu , Debian 설치 방법 # apt-get install sshfs 아주 간단하다. &#160; 2. CentOS, Redhat 리눅스 확장 저장소 추가. # yum install epel-release -y &#160; 설치 # yum install fuse sshfs &#160; 3. Amazon Linux AMI #yum install fuse &#160; Amazon Linux 저장소에는 sshfs 패키지가 없다. 컴파일 환경을 만들고, 소스를 다운받아서 컴파일 하여야 한다. # yum install glib2-devel # wget http://downloads.sourceforge.net/project/fuse/sshfs-fuse/2.5/sshfs-fuse-2.5.tar.gz # tar -xzvf sshfs-fuse-2.5.tar.gz # cd sshfs-fuse-2.5/ # ./configure # make # make install &#160; &#160;&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1387/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>Amazon AMI Apache Mod cband install process.</title>
		<link>https://blog.lael.be/post/1370</link>
				<comments>https://blog.lael.be/post/1370#respond</comments>
				<pubDate>Tue, 02 Jun 2015 04:25:46 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[amazon]]></category>
		<category><![CDATA[ami]]></category>
		<category><![CDATA[apache]]></category>
		<category><![CDATA[cband]]></category>
		<category><![CDATA[install]]></category>
		<category><![CDATA[mod-cband]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1370</guid>
				<description><![CDATA[Apache Mod Cband install Process. (Amazon AMI, CentOS, Redhat) - 2015.06.01. tested on &#8220;Amazon Linux AMI release 2015.03&#8221;.  Mod Cband is Apache2 custom module. &#160; Functionality - work within each virtual host. 1) Bandwidth Limit  (ex. 1.5Mbps) 2) Concurrent Visitor Limit (ex. concurrent 20 session) 3) Transfer Limit (ex. 5GB / Day) &#160; 현재 공식사이트가 닫혀있어서 대체할 만한 다운로드 경로를 적는다. 1) mod cband 공식사이트 : http://cband.linux.pl/  (closed) 2) mod cband 메인 개발자 블로그 : http://dembol.org/blog/mod_cband/ (다운로드 링크가 동작안함) 3) source forge 링크 : http://sourceforge.net/projects/cband/files/ (최신버전이 아님) 4) 현존하는 것 중에서 가장 최선의 선택 : https://fossies.org/linux/www/apache_httpd_modules/mod-cband-0.9.7.5.tgz/ 5) 라엘이 블로그 백업용 파일 (4번과 완전히 동일한 파일) mod-cband-0.9.7.5.zip &#160; 1] install apxs - apache devel library. # yum install httpd24-devel OR # yum install httpd-devel &#160; 2] apache cband module 다운로드 #wget https://fossies.org/linux/www/apache_httpd_modules/mod-cband-0.9.7.5.tgz &#160;&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1370/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>DeadLock 발생 조건 4가지 및 해결 방법</title>
		<link>https://blog.lael.be/post/1304</link>
				<comments>https://blog.lael.be/post/1304#comments</comments>
				<pubDate>Tue, 26 May 2015 12:17:23 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[deadlock]]></category>
		<category><![CDATA[교착상태]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1304</guid>
				<description><![CDATA[DeadLock 발생 조건 4가지 및 해결 방법. &#160; 이것은 학부 3학년 교과목인 Operating System(운영체제)의 Process Scheduling 파트에서 다뤄지는 핵심적인 내용이다. 이 이론은 하나 이상의 시스템이 협력을 할 때 반드시 고려되야 하는 내용을 포함하고 있다. &#160; 교착 상태의 조건 1971년에 E. G. 코프만 교수는 교착상태가 일어나려면 다음과 같은 네 가지 필요 조건을 충족시켜야 함을 보였다. 상호배제(Mutual exclusion) : 프로세스들이 필요로 하는 자원에 대해 배타적인 통제권을 요구한다. 점유대기(Hold and wait) : 프로세스가 할당된 자원을 가진 상태에서 다른 자원을 기다린다. 비선점(No preemption) : 프로세스가 어떤 자원의 사용을 끝낼 때까지 그 자원을 뺏을 수 없다. 순환대기(Circular wait) : 각 프로세스는 순환적으로 다음 프로세스가 요구하는 자원을 가지고 있다. 이 조건 중에서 한 가지라도 만족하지 않으면 교착 상태는 발생하지 않는다. 이 중 순환대기 조건은 점유대기 조건과 비선점 조건을 만족해야 성립하는&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1304/feed</wfw:commentRss>
		<slash:comments>3</slash:comments>
							</item>
		<item>
		<title>PHP Magic Hash Vulnerability 취약점</title>
		<link>https://blog.lael.be/post/1238</link>
				<comments>https://blog.lael.be/post/1238#respond</comments>
				<pubDate>Thu, 14 May 2015 14:03:48 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[exponential]]></category>
		<category><![CDATA[magic hash]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[vulnerability]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1238</guid>
				<description><![CDATA[PHP 의 Magic Hash 취약점에 대해서 알아보았다. &#160; &#160; 실제로 Magic Hash 는 취약점이 아니라 특수동작입니다. &#160; 이론 우리가 다루는 대부분의 자료형은 &#8220;문자형(String)&#8221; 입니다. 일부 프로그래밍 언어(Some programming language)에서는 String 과 그 외 다른 자료형과 쉽게 쓸 수 있도록, Auto casting(=Type Juggling) 을 지원합니다. &#160; &#60;이게 바로 Juggling 입니다&#62; &#160; 아래는 실제로 동작하는 Type Juggling 의 예제입니다. 영어 단어 뜻, int = 숫자자료형, string = 문자자료형, concatenation = 결합 . &#160; int 값 10 이 string 과 concatenation 하기 위해서 string 으로 타입 변환됩니다. &#160; int 값 10 이 string 과 concatenation 하기 위해서 string 으로 타입 변환됩니다. &#160; string 값 28이 int 필드타입의 쿼리를 날리기 위해서 int 로 타입 변환 됩니다. &#160; 이중에 몇가지 주의해서 사용해야 하는 것이 있는데,&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1238/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu 에 fail2ban 을 설치하여 보안을 강화하기.</title>
		<link>https://blog.lael.be/post/1209</link>
				<comments>https://blog.lael.be/post/1209#comments</comments>
				<pubDate>Sat, 09 May 2015 02:32:28 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[fail2ban]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[security]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[방화벽]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1209</guid>
				<description><![CDATA[#이 글은 Ubuntu 운영체제 기준으로 작성되었습니다. CentOS 사용자는 다음의 글을 참조하세요 : http://crybit.com/steps-to-install-fail2ban/ &#160; 이 곳에서는 fail2ban 이라는 프로그램을 사용하여 서버를 보호하는 방법을 적도록 하겠다. fail2ban 이란 지정한 시간내에 지정한 횟수만큼 실패 하면 ban 시간만큼 접속을 차단하는 것이다. 여러명이서 같이 쓰는 서버에 좋다. 주로 웹호스팅 서버. 방화벽을 세팅하기 귀찮을때에도 이것을 사용한다. fail2ban 은 로그기반 프로그램이기 때문에 로그가 쌓이는 시점으로 계산됩니다. 이것 때문에 발생하는 fail2ban maxretry별 최대 로그인 시도가능 횟수. 1 =&#62; 1번 2 =&#62; 7번 3=&#62; 13번 4=&#62; 19번 5=&#62; 25번 6=&#62;31번 n=&#62; 6*(n-1) + 1 번 SSH의 경우 로그인이 실패(fail)하면 재시도(retry) 5회 하도록 해 줍니다.  재시도는 카운트 되지 않습니다. SFTP의 경우 로그인이 실패(fail)하면 retry 안하고 바로 연결을 끊기 때문에 로그인 최대 시도횟수가 의도한대로 동작합니다. 방화벽 확인 #iptables -L 아마 이렇게 되어&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1209/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>클리앙 랜섬웨어 감염경로 및 대처방법.</title>
		<link>https://blog.lael.be/post/1179</link>
				<comments>https://blog.lael.be/post/1179#comments</comments>
				<pubDate>Sat, 25 Apr 2015 13:07:04 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Active-x]]></category>
		<category><![CDATA[CVE-2014-6332]]></category>
		<category><![CDATA[Flash]]></category>
		<category><![CDATA[IE]]></category>
		<category><![CDATA[Windows]]></category>
		<category><![CDATA[Zeroday]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1179</guid>
				<description><![CDATA[해커들이 똑똑해지고 있다. 2017년 5월 15일 현재 유행하는 랜섬웨어는 윈도우 공유폴더(SMB) 취약점을 이용합니다. - 내가 공유폴더를 설정하지 않았어도 해당 기능이 켜져 있다면, 자동으로 취약하게 됩니다.  - 이번 취약점의 패치는 2017년 3월 14일에 배포되었습니다. 이 날짜 이후에 윈도우 업데이트를 한번이라도 진행한 PC는 취약하지 않습니다. 과거의 악성 광고 띄우기, 은행 사칭 피싱, 디도스 좀비피씨 만들기를 넘어서서 가장 효과적으로 안전하게 돈을 벌 수 있는 &#8220;파일 잠그기&#8220;를 하기 시도하는 것이다. &#160; 파일 삭제의 경우 표면 읽기, 흔적 스캔 등의 기법을 통해서 쉽게 복구할 수 있다. 복구 업체들도 위의 방법으로 복구한다. &#160; 하지만 파일을 암호화해서 수정 저장해버리면 복구 업체로써는 아무것도 할 수 없게 된다. 파일에 암호가 걸렸는데 풀 수 없는 것이다. (복구업체는 해커가 아니다!) &#160; 2016 년 현재 랜섬웨어 푸는 법이 많이 나온 상태입니다. 카스퍼스키나 안랩&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1179/feed</wfw:commentRss>
		<slash:comments>7</slash:comments>
							</item>
		<item>
		<title>Apache .htaccess 도메인 컨트롤하기 (www , https)</title>
		<link>https://blog.lael.be/post/1130</link>
				<comments>https://blog.lael.be/post/1130#comments</comments>
				<pubDate>Sat, 11 Apr 2015 04:38:53 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[.htaccess]]></category>
		<category><![CDATA[http]]></category>
		<category><![CDATA[https]]></category>
		<category><![CDATA[https 강제이동]]></category>
		<category><![CDATA[SSL]]></category>
		<category><![CDATA[www]]></category>
		<category><![CDATA[www 붙이기]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1130</guid>
				<description><![CDATA[# 원하는 동작의 주석을 제거하면 동작한다. .htaccess 파일에 아래의 내용을 넣으면 된다. 이미 .htaccess 파일이 있고 무엇인가 쓰여져 있다면, 그 파일의 맨 밑에 추가해 넣으면 된다. &#160; &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1130/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>Ubuntu 캐쉬 메모리를 주기적으로 지워서 메모리 확보하기</title>
		<link>https://blog.lael.be/post/1090</link>
				<comments>https://blog.lael.be/post/1090#comments</comments>
				<pubDate>Wed, 01 Apr 2015 16:37:31 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[drop_caches]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[캐시메모리]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1090</guid>
				<description><![CDATA[라엘이는 게임서버를 하나 운영하고 있다. &#160; 게임서버는 웹이나 DB서버보다 자원을 많이 필요로 하기에 모니터링과 튜닝을 잘해야 한다. 1. CPU 사용량 게임서버는 일반적으로 사람의 활동 시간과 일치하는 경향이 있다. 또한 주말마다(불금 ~ 일요일) 접속자가 늘어나므로 CPU 상태를 잘 보아야한다. CPU 사용량이 150%를 넘어서면 간헐적인 렉 현상이 일어난다. &#62; 해결책 : 게임의 속성을 잘 조절해서 부하량을 낮추어야 한다. 또는 코어를 왕창 할당하면 됨. &#160; 2. 메모리 사용량 CPU 만큼 중요한게 메모리이다. 물론 메모리가 부족하면 새로운 프로세스가 생성이 안되는 문제가 발생하기도 하지만, 작은 여유 공간에 데이터를 넣었다가 뺏다가 intensive(강렬) 한 작업을 해야하기 때문에 CPU 또한 과부하가 걸려서 문제가 발생한다. (연쇄반응) 접속자가 없을 때 게임서버가 자동 재부팅되도록 설정해 두었지만.. 메모리 사용량이 순 증가 하는 현상이 발생하더라. tar 압축 같은 Disk I/O 할 때 캐쉬메모리가 대폭 증가하는 것을 알&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1090/feed</wfw:commentRss>
		<slash:comments>18</slash:comments>
							</item>
		<item>
		<title>Ubuntu 한 서버에서 PHP, JSP 동시에 사용하기</title>
		<link>https://blog.lael.be/post/1023</link>
				<comments>https://blog.lael.be/post/1023#comments</comments>
				<pubDate>Sat, 28 Mar 2015 12:51:06 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[jsp]]></category>
		<category><![CDATA[Mod_proxy]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[reverse proxy]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[동시실행]]></category>
		<category><![CDATA[부하분산]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=1023</guid>
				<description><![CDATA[요청에 의해서 한 서버에서 PHP와 JSP를 동시에 구동하는 방법을 설명하고자 한다. &#160; 이 글은 동시구동 방법에 대해서 설명하고 있습니다. 아래의 단계를 진행하시려면 먼저 서버에 Ubuntu-Apache-PHP 및 Ubuntu-Tomcat-JSP 가 설치되어 있어야 합니다. 설치되어 있지 않으면 기존 글 Ubuntu-Apache-PHP, Ubuntu-Tomcat-JSP 을 참조하여 먼저 설치해주세요. &#160; 먼저 간단한 이론 2가지를 이해하고 가도록 하자. &#160; 1) 포트 바인딩 우리가 사용하는 TCP/IP 네트워크에서 서버간 통신은 IP 주소 + PORT 번호로 이루어진다. 당연한 이야기겠지만 네트워크 프로그램도 IP 주소 + PORT 번호로 연결을 설정한다. &#160; 당신이 웹서버 프로그램에 IP 주소를 지정하지 않으면 (나를 포함 대부분 지정하지 않는다), 기본값으로 0.0.0.0 (=모든 IP 라는 뜻) 이 지정된다. 즉 아무런 설정을 하지 않았다면 Apache 는 0.0.0.0:80 을 사용하고 Tomcat 은 0.0.0.0:8080 을 사용한다. &#160; Apache 와 Tomcat 을 설치한 상태에서 Tomcat&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/1023/feed</wfw:commentRss>
		<slash:comments>27</slash:comments>
							</item>
		<item>
		<title>Restful API 모델링 언어 &#8211; RAML 이론 및 예제 실습</title>
		<link>https://blog.lael.be/post/992</link>
				<pubDate>Wed, 18 Mar 2015 15:10:42 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[api]]></category>
		<category><![CDATA[raml]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=992</guid>
				<description><![CDATA[프로그래밍 언어도, 프레임워크도 어마어마하게 많다. &#160; 프로그래밍 언어도 주식과 같아서 미래에 유망할 언어를 일찍 배워두면 &#8220;선구자&#8221;가 되고 우러러 보이게 되지만 반대로 해당언어가 대세가 되지 못하고 망하면 노력이 물거품이 된다. 또는 다들 안쓰는데 혼자만 해당언어의 우수성을 논하면서 쓰면 이상한 사람 취급받는다. &#160; 라엘이가 최근에(지금도 역시) 서비스를 하나 만들고 있는데, 부분 기술이 확립이 되고, 서버 구성도가 나오고 나니, 중간에 시스템을 제어할 프로그램이 필요하게 되었고 이것을 위해서 API 를 만들어야했다. &#160; API를 모델링 하기 위해서 나온 언어가 있나 확인해 보았는데, 역시나 있었다. &#160; 2015년 3월 현재 API Modeling Language 로는 3개 정도 있는데, 라엘이의 경우 RAML 을 선택하기로 했다. 라엘이가 3년넘게 마인크래프트라는 게임서버를 운영하고 있는데(이하 버킷서버), 버킷 서버 및 버킷 플러그인의 설정파일이 YAML로 짜여져 있어서 자주 손을 대었다. &#160; 따라서 YAML 을 확장해서&#8230;]]></description>
									</item>
		<item>
		<title>[MySQL/MariaDB] utf8mb4 언어셋 소개 및 표현범위.</title>
		<link>https://blog.lael.be/post/917</link>
				<comments>https://blog.lael.be/post/917#comments</comments>
				<pubDate>Mon, 02 Mar 2015 08:46:35 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[charset]]></category>
		<category><![CDATA[collation]]></category>
		<category><![CDATA[maria db]]></category>
		<category><![CDATA[mysql]]></category>
		<category><![CDATA[utf-8]]></category>
		<category><![CDATA[utf8]]></category>
		<category><![CDATA[utf8_general_ci]]></category>
		<category><![CDATA[utf8mb4]]></category>
		<category><![CDATA[utf8mb4_unicode_ci]]></category>
		<category><![CDATA[유니코드]]></category>
		<category><![CDATA[정렬]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=917</guid>
				<description><![CDATA[기술이 매우 빠르게 발전한다. 배워도 배워도 계속 배워야 한다. &#160; 최근에 라엘이가 앞으로 100년동안은 나타나지 않을 것이라고 예상했던, 4 Byte UTF-8 문자열을 보고 여러 깨닳은 바가 있었고 여러분에게 도움이 될만한 정보가 있어 공유하려고 한다. &#160; 데이터베이스를 구축하다보면 텍스트 데이터(Text Data)를 취급해야 할 때가 있다. 이때 반드시 고민해야 하는 것이 있는데, 바로 문자셋(character set)을 선택하는 것이다. &#160; 핵심 단어의 뜻 먼저 중요한 두 단어 Charset 과 Collation 의 뜻에 대해서 알고 가자. 구글 번역기를 이용하여 단어 자체의 뜻을 알아보자. &#160; &#160; charset 은 문자 집합, collation 은 정렬을 뜻한다. &#160; 자료형이 왜 필요하나? 먼저 자료형이 왜 필요할지부터 생각해보자. &#160; 컴퓨터 프로그램은 프로그래머가 의도한 대로 동작한다. 이 때 같은 목적의 프로그램이라고 할지라도 효율적으로 동작하는 것이 더 좋은 프로그램이 된다. &#8220;컴퓨터 알고리즘(Computer Algorithm)&#8221; 학문에서는 이를&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/917/feed</wfw:commentRss>
		<slash:comments>20</slash:comments>
							</item>
		<item>
		<title>지적 허영심이 만들어낸 단어 &#8220;스노비즘&#8221;</title>
		<link>https://blog.lael.be/post/863</link>
				<comments>https://blog.lael.be/post/863#respond</comments>
				<pubDate>Fri, 27 Feb 2015 16:40:50 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[snob]]></category>
		<category><![CDATA[스노브]]></category>
		<category><![CDATA[스노비즘]]></category>
		<category><![CDATA[전문가]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=863</guid>
				<description><![CDATA[바야흐로 유비쿼터스(뜻 : 언제 어디서나 존재하는) 시대이다. 대부분의 사람들은 스마트폰을 가지고 있으며 이것으로 인터넷을 이용한다. &#160; 지금은 스마트폰을 사용하고, 컴퓨터를 오래(웹서핑을 하든, 게임을 하든)한다는 이유만으로 모두가 &#8220;컴퓨터 잘하는 사람&#8220;이 되는 시대이다. &#160; 스노브 snob, 스노브, 스놉. 지적 허세를 부리는 눈꼴사나운 사람들을 한 단어로 일컫는 영어 단어다. 스노브들이 난립하는 이유는 지식 자체를 배우는 것보다 전문가처럼 보이게 노력하는데 드는 수고와 비용이 훨씬 싸게 먹히고, 잘 통하기 때문이다. 이들은 얕은 지식과 빠삭한 어휘의 조합으로 놀라운 지적 곡예를 펼쳐, 문외한이 보기에는 전문가와 구별하기가 힘들다. 스노브들 중에서는 자신의 지식이 얕다는 것을 모르고, 스스로를 굉장히 지적이라고 착각하는 경우도 있다. 각종 사회적 차별과 부패에 비판적인 포지션을 취하나, 자신이 약자거나 제3자일 때 받는 차별과 부패에만 비판적일 뿐, 자신이 강자 포지션에 있을 때 타인에게 행하는 차별과 부패에는 아무 문제의식을&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/863/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[JAVA] 한번에 끝내는 Ubuntu JSP서버세팅</title>
		<link>https://blog.lael.be/post/858</link>
				<comments>https://blog.lael.be/post/858#comments</comments>
				<pubDate>Fri, 27 Feb 2015 15:56:11 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[connector]]></category>
		<category><![CDATA[fail2ban]]></category>
		<category><![CDATA[jsp]]></category>
		<category><![CDATA[mysql]]></category>
		<category><![CDATA[tomcat]]></category>
		<category><![CDATA[ubuntu]]></category>
		<category><![CDATA[가상서버]]></category>
		<category><![CDATA[호스팅]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=858</guid>
				<description><![CDATA[요청에 의해서 &#8220;Ubuntu 에서 JSP 서버를 세팅하는 방법&#8220;을 적도록 하겠다. 최종 수정 : 2017-06-29 &#160; Ubuntu 16.04 LTS 기준입니다. &#160; * 이 글은 Ubuntu 에 JSP 웹서버 세팅을 소개하고 있습니다. * Ubuntu 에서 PHP 웹서버 세팅을 원하시면 https://blog.lael.be/post/73 글로 이동하세요. * Ubuntu 에서 PHP와 JSP를 동시 구동하고 싶으시면 https://blog.lael.be/post/1023 글로 이동하세요. &#160; *JSP는 SI프로젝트에서 주로 사용되는 언어이다. *국내의 금융, 공공기관 프로젝트에서 주로 사용되기 때문에 개발자의 몸값이 높다. 이것은 순전히 JAVA언어의 우수성 때문이라기 보다는, 수요와 공급의 법칙으로 인한 것이다. &#160; &#160; - 시장경제는 대개 수요과 공급의 법칙으로 정해진다. &#160; 국내의 경우 2012년 부터 SI가 저물고 있다. 여러 &#8216;고도화 프로젝트&#8217;가 종료되고, 경제가 장기 불황(성장을 안하거나, 실질 성장률이 떨어짐)에 접어듬에 따라서, SI 프로젝트의 단가 및 갯수가 확 줄었다. * 따라서 JSP 개발자의 몸값도 낮아졌다. (공급과잉) * 2013년도 부터 &#8216;오픈소스&#8217;&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/858/feed</wfw:commentRss>
		<slash:comments>71</slash:comments>
							</item>
		<item>
		<title>Ubuntu Linux / Mac OS X 에서 ssh 터널링 사용하기</title>
		<link>https://blog.lael.be/post/845</link>
				<comments>https://blog.lael.be/post/845#respond</comments>
				<pubDate>Mon, 23 Feb 2015 14:07:22 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[mac]]></category>
		<category><![CDATA[ssh]]></category>
		<category><![CDATA[tunneling]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=845</guid>
				<description><![CDATA[터널링이란 A와 B사이에 가상의 네트워크를 생성하고 A가 B의 내부망을 이용할 수 있게 하는 것이다. 자세한 설명은 구글에서 VPN 을 검색한 후에 알아보아라. &#160; 라엘이가 예전에 윈도우를 사용할 때에는 putty 라는 프로그램을 사용해서 터널링을 자주 사용했었는데, 지금은 작업환경을 MAC OS 위주로 바꾸어서 putty를 이용할 수 없어서 새로운 터널링 방법을 찾아야 했다. &#160; 여러 프로그램도 설치해 보고 이것저것 해본 결과 가장 안전하고 쉬운 방법이다. 모든 Linux 기반 운영체제 (Ubuntu, CentOS, MacOS 등등) 에서 가능한 명령어이다. 윈도우에서 안됨. (윈도우에서는 putty쓰세요) 기본 내장된 ssh 프로그램을 사용한다. &#160; &#160; 사용할 옵션 : -p [number]  : number 포트번호로 접속한다. -N : 원격 쉘을 실행시키지 않고 접속만 유지한다. -L [로컬포트번호:호스트:호스트포트번호] : 로컬 포트번호로 listen 소켓을 열고 들어오는 패킷을 원격지에서 호스트:호스트포트번호로 전송한다. &#160; 예시 : ssh root@test.com -p 30022  -N&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/845/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu에서 X_FORWARDED_FOR 와 REMOTE_ADDR 일치시키기</title>
		<link>https://blog.lael.be/post/834</link>
				<comments>https://blog.lael.be/post/834#comments</comments>
				<pubDate>Mon, 16 Feb 2015 02:31:20 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=834</guid>
				<description><![CDATA[가장 앞단에 proxy 서버가 있고, 이 proxy 서버의 80포트에 데몬(해석 프로그램)이 구동되고 있고, 이 데몬은 http host 를 해석에서 알맞은 내부서버로 포워딩하는 역할을 한다. &#160; 외부에서 보기에는 하나의 서버가 다 처리하는 것처럼 보이는데, 실제로는 내부의 전용 서버가 요청을 받아서 처리하는 것이다. &#160; 이때 내부서버의 apache 에서는 REMOTE_ADDR 에는 proxy server 의 아이피가 찍히고, X_FORWARDED_FOR 에 실제 요청을 하는 고객 아이피가 찍힌다. 이것은 많은 웹프로그램에게 혼란을 준다. 예를 들어 스팸글이 등록되었는데 proxy server 의 아이피로 기록이 되고, 관리자가 proxy server를 차단하면 서버가 모두 먹통이 되는 현상이 발생한다. &#160; 내부 서버에서 proxy 서버 정보를 설정해서 고객의 아이피가 REMOTE_ADDR에 기록되게 하자. &#160; 자세한 이론. 전문용어를 풀어쓰지 않고 그냥 쓰겠다. &#160; 패킷을 전달하는 routing 방식에는 pre-routing과 post-routing이 있다. 우리가 사용하는 인터넷은 OSI 7 네트워크 구성중&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/834/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>Software Test (소프트웨어 테스트) 종류와 방법</title>
		<link>https://blog.lael.be/post/807</link>
				<comments>https://blog.lael.be/post/807#respond</comments>
				<pubDate>Thu, 05 Feb 2015 12:59:07 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Software Test]]></category>
		<category><![CDATA[Software Testing]]></category>
		<category><![CDATA[TDD]]></category>
		<category><![CDATA[결함]]></category>
		<category><![CDATA[블랙박스테스트]]></category>
		<category><![CDATA[테스팅]]></category>
		<category><![CDATA[화이트박스테스트]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=807</guid>
				<description><![CDATA[소프트웨어 테스트. (소프트웨어 테스팅). 간단하게 말하자면 “소프트웨어의 결함이 존재함을 보이는 과정”. &#160; 소프트웨어가 문제가 없다를 보이는 것이 아니라 문제가 있다를 밝히는 과정이다. SWLC(소프트웨어 생명주기)의 프로세스 [요구사항 분석 - 설계 - 구현 - 테스트 - 유지보수] 에서 거의 마지막 단계이다. 소프트웨어 테스터들은 &#8220;이 소프트웨어가 완벽하군요!&#8221; 라고 하는 것이 아니라, &#8220;이 소프트웨어는 결함이 없군요!&#8221; 라고 말해야 한다. &#160; 요구사항 설계와 다르게 동작하는 것은 모두 &#8220;결함&#8221;이며 이미 제작된 소프트웨어에 대해서 테스트 케이스를 만들고 테스팅하는 것은 매우 노력이 많이 들어가므로 요즘엔 개발 초기부터 테스트케이스를 만들고 이것으로 개발하는 방식이 각광받고 있다. (이것이 TDD) &#160; 2015년 현재 여러 프로젝트 방법론에서 TDD(Test Driven Development) 가 뜨고 있으니 이에 대해서도 알아두면 좋다. http://youtu.be/dWayn0QsJr8?t=1m17s &#160; 소프트웨어 테스트는, IEEE의 거창한 정의를 보자면 ” 시스템이 정해진 요구를 만족하는지, 예상과 실제 결과가 어떤&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/807/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>내일로 커뮤니티 &#8220;바이트레인&#8221; 2015-1월 모임후기</title>
		<link>https://blog.lael.be/post/805</link>
				<comments>https://blog.lael.be/post/805#respond</comments>
				<pubDate>Thu, 05 Feb 2015 10:00:37 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[강원도]]></category>
		<category><![CDATA[내일로]]></category>
		<category><![CDATA[내일로 티켓]]></category>
		<category><![CDATA[내일로 티켓구매]]></category>
		<category><![CDATA[바이트레인]]></category>
		<category><![CDATA[정동진]]></category>
		<category><![CDATA[해돋이]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=805</guid>
				<description><![CDATA[유럽에 유레일패스(유럽내 열차 무제한 이용권. TGV제외)가 있다면 한국에는 내일로(한국내 열차 무제한 이용권. KTX제외)가 있다. 내일로는 2007년 여름에 생긴 제도이다. &#160; 일정한 금액을 지불하고 5일(또는 7일) 동안 일부 열차의 자유석/입석칸을 무제한 이용할 수 있는 것이다. 입석은 바닥에 앉아서 가는 것이고(또는 서서 창밖을 보며..), 자유석은 좌석 주인이 나타나기 전까지 이용할 수 있는 것이다. &#160; 입석칸이란? (바닥에서 간다는 것은?) 대략 이런 느낌이다. 다음의 블로그 글을 참고하여라 : 내일로의 문제점 내일로 여행중 앉아가기 스킬정리 내일로 여행 중 대부분의 시간을 기차에서 보내는 그대에게 드리는 TIP!  . &#160; &#160; &#160; 2015년 1월 현재 금액과 기준은 아래와 같다.  2015년 기준으로, 만 19세(95년생)~25세(생일이 지나지 않은 89년생) 가 이용가능하다. 열차를 3번이상 타거나, 게스트하우스에 묵을 예정(내일로 티켓만 보여주면 숙박료 할인)이면 내일로가 필수이다.   티켓을 구매하기 위해서는 철도공사 공식 홈페이지를 이용하자. http://www.letskorail.com/ebizprd/EbizPrdPassRailroIntroW_hc11901.do 내일로&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/805/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>(꿀위키 펌) 비개발자 출신 사장이있는 IT회사의 유형</title>
		<link>https://blog.lael.be/post/796</link>
				<comments>https://blog.lael.be/post/796#comments</comments>
				<pubDate>Wed, 04 Feb 2015 02:57:22 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=796</guid>
				<description><![CDATA[. 이 문서를 작성한 이유 비 개발자 대표는 자격이 없다는 말을 하고싶은것이 아니다. 기본적으로 회사는 같이 일하는 개발자, 디자이너, 기획자 등을 어떻게, 혹은 누구를 사용하냐에 따라 프로젝트 일정이 달라진다. 이 부분은 현장에서 제 목소리를 내지않고있는 개발자들을 위해 만들어졌으며, 아마 대부분은 공감을 하고 있으리라 믿는다(공감이 안되거나 추가적인 의견이 있는경우 항목에 추가해주세요) 개발자를 이해하지 못하는 회사는 개발자의 업무만족도나 능력에 관계없이 개인적인 성과, 의욕을 떨어뜨려서 생산력을 저하시킨다. 성공한 IT계열 스타트업들의 회사대표의 대부분이 개발자(NHN, 다음, 카카오, 구글, 애플, 트위터, 페이스북 기타 등등)인것만 봐도 어느정도 관계성이 없다고 할 수 없다 이 페이지는 궁극적으로 업무현장에서 개발자와의 커뮤니케이션이 원활하게 되었으면 하는 마음에서 작성되었다 Context Switching 이란? 일을 하다보면 새로운 일을 해야한다며 별 중요하지도 않은 이야기를 들고오거나, 회의를 해야한다고 일하고 있는 사람을 방해하는 경우가 있다. 이 때 원래하던일(A)에서&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/796/feed</wfw:commentRss>
		<slash:comments>17</slash:comments>
							</item>
		<item>
		<title>Drupal 네이버 로그인 모듈</title>
		<link>https://blog.lael.be/post/787</link>
				<comments>https://blog.lael.be/post/787#respond</comments>
				<pubDate>Fri, 30 Jan 2015 14:04:23 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Drupal]]></category>
		<category><![CDATA[login]]></category>
		<category><![CDATA[naver]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=787</guid>
				<description><![CDATA[Drupal에 네이버 계정을 연동해서 로그인 할 수 있는 모듈입니다. 주의 : 저는 이제 드루팔을 하지 않습니다. 이 모듈은 유지보수 되지 않습니다. This module has been abandoned. 현재 프로젝트 리뷰 중이며 완료되면 full project 로 등록될 예정입니다. Installation Install naver_login Module. Login at https://developer.naver.com/ Go to [Key issue/manage] menu. Click [Add Application] aside Naver Login. Go to drupal /admin/config/people/naver_login Get Callback URL. Copy Callback URL and Paste into Add Application page. Write detail information and submit. Get ClientID and ClientSecret. Paste that value /admin/config/people/naver_login . Go to /naver_login/auth/request or use &#8220;Drupal block - Naver Login Block&#8221;. &#160; &#160; 다운로드 : https://github.com/LaelMoon/Drupal-Naver-Login/releases 피드백은 댓글을 다시거나 github issue 로 등록해주세요.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/787/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>우분투 glibc 취약점 패치방법 (Fix GHOST Vulnerability)</title>
		<link>https://blog.lael.be/post/769</link>
				<comments>https://blog.lael.be/post/769#respond</comments>
				<pubDate>Thu, 29 Jan 2015 04:09:03 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[CVE-2015-0235]]></category>
		<category><![CDATA[GHOST Vulnerability]]></category>
		<category><![CDATA[glibc 패치]]></category>
		<category><![CDATA[Ubuntu Security]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=769</guid>
				<description><![CDATA[우분투 glibc 취약점 패치방법 (Fix GHOST Vulnerability) &#160; 2015년 1월 27일 CVE-2015-0235 이라는 취약점이 공개되었다. &#160; https://wiki.ubuntu.com/SecurityTeam/KnowledgeBase/GHOST Ubuntu Security Team wiki 에 따르면 해당 취약점은 1월 18일에 보고 되었고 1월 27일 대중에게 공개되었을 때 패치업데이트를 제공했다고 한다. gethostbyname() 에서 사용하는 __nss_hostname_digits_dots() 함수에서 버퍼오버플로우가 일어난다고 한다. &#160; 뉴스에서 엄청난 취약점인것 처럼 보도하는데, gethostbyname()이 잘 안쓰는 함수이며, 악의적 사용자가 이 함수를 사용할 권한을 얻기도 매우 힘들다. 만약 이 취약점이 성공하였으면 해당 프로그램이 crash 된다. 예를 들어 ssh 같은 것이 crash 되서 서비스 불능이 됨. &#160; 1) 취약점 적용 범위 해당 취약점은 glibc-2.18 에서 패치되었음. 그러나 Ubuntu를 포함한 대부분의 운영체제 팀에서 보안 위험 사항을 알지 못해서 운영체제 패치로 적용하지 않음. &#160; 취약한 버전 : glibc-2.2 ~ glibc-2.17  (2 ~ 17까지 취약) 취약한 운영체제 : Ubuntu 10.04&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/769/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>샌프란시스코 실리콘밸리 방문후기(Stanford, HP, Google)</title>
		<link>https://blog.lael.be/post/500</link>
				<comments>https://blog.lael.be/post/500#comments</comments>
				<pubDate>Thu, 04 Dec 2014 16:01:50 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Google]]></category>
		<category><![CDATA[HP]]></category>
		<category><![CDATA[Mountain View]]></category>
		<category><![CDATA[Silicon Valley]]></category>
		<category><![CDATA[Stanford]]></category>
		<category><![CDATA[TOPCIT]]></category>
		<category><![CDATA[실리콘밸리]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=500</guid>
				<description><![CDATA[라엘이는 스스로가 행운아(Lucky guy)라고 생각한다. 보통 사람들에게 주어지지 않는 희박한 기회가 생기기도 하고, 위기가 있을 때 해결책이 제시되며, 불가능이라고 생각되는 일도 곧잘 이루어 진다. 하나의 행운은 곧 또 다른 행운을 만든다. &#160; 이 글에서는 올해 있었던 행운 중에 하나를 소개하려고 한다. 컴퓨터 공학을 전공하는 사람이라면 한번쯤 가고 싶은 실리콘밸리를 다녀온 것이다. &#160; 라엘이는 지난 2014년 1월경 미국 California 주의 Sanfrancisco 에 방문했었다. &#160; &#160; 이번 연수는 미래창조과학부와 한국정보산업연합회, 정보통신산업진흥원 등 국내 IT 공공기관에서 지원해 주는 사업이었다. &#160; - 라엘이는 TOPCIT 이라는 IT 역량 평가대회에서 수석을 하여서(미래창조과학부 장관님께 상받았음) 참가하게 되었고 (대회 1등이라서 라엘이의 그룹은 한명이었다.), - 가운데 여자 3명은 IT 여성기업인협회에서 이브와멘토링(http://www.kibwa.org/sub0303.html?pageNum=3&#38;subNum=3) 프로젝트 최우수상 팀 (음악의 파형을 분석해서 목소리를 제거한 MR을 생성해 주는 프로그램을 만들었다고 한다.), - 가장 왼쪽 한명과,&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/500/feed</wfw:commentRss>
		<slash:comments>18</slash:comments>
							</item>
		<item>
		<title>Drupal으로 Facebook, Twitter의 Social stream 구성하기</title>
		<link>https://blog.lael.be/post/474</link>
				<comments>https://blog.lael.be/post/474#respond</comments>
				<pubDate>Wed, 05 Nov 2014 14:37:04 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[Drupal]]></category>
		<category><![CDATA[Facebook]]></category>
		<category><![CDATA[Social Stream]]></category>
		<category><![CDATA[Twitter]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=474</guid>
				<description><![CDATA[여러 drupal contribute 모듈 및 Facebook, Twitter 개발자 API 페이지를 둘러본 후 결론을 내린 Social stream 구성하기 가장 간편한 방법이다. drupal korea developer. &#160; 1. RSS Feed 경로 알아내기. 타겟 twitter와 facebook의 주소는 다음과 같다. https://twitter.com/supremaglobal https://www.facebook.com/supremaglobal &#160; 트위터 피드를 추출하기 위해 http://twitrss.me/ 의 서비스를 이용했다. http://twitrss.me/twitter_user_to_rss/?user=supremaglobal &#160; &#160; 페이스북 피드를 추출하기 위해서는 페이지ID를 알아야 하는데 https://developers.facebook.com/tools/explorer/ 로 이동한 후에 &#160; 해당 페이지를 요청해서 id 값을 얻는다. 그 아이디 값을 복사해서 rss 피드경로를 얻는다. &#160; https://www.facebook.com/feeds/page.php?id=131401796918521&#38;format=rss20 &#160; &#160; &#160; 2. 피드 모으기 aggregate (verb:모으다. noun:집합) &#160; Drupal core 모듈 중에 feed aggregator 라는 것이 있다. RSS feed 를 모아서 한곳에 보여주는 모듈이다. 모듈을 켜도록 한다. 이 이후에  configuration 에 가면 Feed Aggregator 라는 메뉴가 추가되어 있을 것이다. 클릭해서 들어간 후 1) 먼저 카테고리를&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/474/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>임베디드 쿼드콥터 키트를 이용한 원격 무인정찰 시스템</title>
		<link>https://blog.lael.be/post/269</link>
				<comments>https://blog.lael.be/post/269#comments</comments>
				<pubDate>Tue, 04 Nov 2014 10:25:34 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[AR.Drone]]></category>
		<category><![CDATA[영상처리]]></category>
		<category><![CDATA[임베디드]]></category>
		<category><![CDATA[졸업논문]]></category>
		<category><![CDATA[쿼드콥터]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=269</guid>
				<description><![CDATA[라엘이가 졸업 논문으로 썼던 것이다. (논문 파일은 하단에 첨부) 이 글을 보고 당신은 더 나은 작품을 만들기를 바란다. 키워드는 컴퓨터 네트워크, 영상처리, 얼굴인식, 모바일 통신, 리눅스 시스템, 윈도우 프로그래밍 이다. 사용한 장비는 AR Drone 2.0(AR.Drone) : 쿼드콥터 키트 아이폰 5S : 네트워크 중계기-LTE Desktop PC - Windows 7 : 제어 컴퓨터 캡스톤 디자인 과목과 연계해서 진행되었기 때문에 캡스톤 발표때 사용했던 영상을 함께 첨부한다. #1차시 #2차시 &#160; 임베디드 쿼드콥터키트를 이용한 원격 무인정찰 시스템, 전남대학교 전자컴퓨터공학부 컴퓨터공학전공 문형환, 2014년 08월 학사학위논문 이 논문에는 불완전한 항목이 있을 수 있음. 본문 참고시 내용을 한번 더 검증하길 바람. &#160; &#160;  졸업논문_201408_문형환.pdf &#160; 개인적으로, 졸업하기전에 내 실력을 평가할 수 있는, 전국대회에 출전하여 1등한것(장관상)이 좋은 경험이 되었다고 생각한다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/269/feed</wfw:commentRss>
		<slash:comments>9</slash:comments>
							</item>
		<item>
		<title>dmg2iso (dmg file conversion) &#8211; dmg를 iso로 변환</title>
		<link>https://blog.lael.be/post/407</link>
				<comments>https://blog.lael.be/post/407#comments</comments>
				<pubDate>Sun, 02 Nov 2014 13:33:05 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=407</guid>
				<description><![CDATA[만약 당신이 이 페이지를 보고 있다면, 당신은  MAC OS 설치를 시도하고 있을 것입니다. Mac OS 는 dmg-CD image 만 허용합니다. Windows OS 는 iso-CD imag 만 허용합니다. &#160; 당신의 OS가 Windows이기 때문에 .dmg 를 이용할 수 없습니다. 아래의 파일을 사용하면 dmg를 iso로 변환할 수 있고 당신의 운영체제에서 이용할 수 있습니다. --------- 쉬운 사용을 위해서 편의상 파일을 첨부하도록 하겠습니다. 시간이 있다면 아래의 공식홈페이지에서 다운받아 설치하도록 하십시오. dmg2img-1.6.5-win32.zip This Program is made by vu1tur. (Official Homepage : http://vu1tur.eu.org/tools/) &#160; command 창에서 다음의 명령을 내리면 됩니다. dmg2img [dmg filename] [iso filename] &#160; 명령어를 잘 입력했다면 아래와 같은 화면이 출력됩니다. 끝. &#160; #이 방법으로 설치된 OS는 해킹(hacking)된 매킨토시(Macintosh) 라고 하며 줄여서 해킨토시(hackintosh)라고 부릅니다. 당연히 Apple에서 허용하지 않는 방법이며, 소프트웨어 업데이트나 기타방법을 통해서 운영체제가 언제든 LOCK 걸릴 수 있습니다. 맥 기기를 구입해서 사용하는&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/407/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
							</item>
		<item>
		<title>CES 2014 후기 (Consumer Electronics Show 2014)</title>
		<link>https://blog.lael.be/post/197</link>
				<comments>https://blog.lael.be/post/197#comments</comments>
				<pubDate>Sat, 01 Nov 2014 10:00:23 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[AR.Drone]]></category>
		<category><![CDATA[CES 2014]]></category>
		<category><![CDATA[Consumer Electronics Show]]></category>
		<category><![CDATA[LVCC]]></category>
		<category><![CDATA[라스베가스]]></category>
		<category><![CDATA[여행일정]]></category>
		<category><![CDATA[쿼드콥터]]></category>
		<category><![CDATA[후기]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=197</guid>
				<description><![CDATA[매년 1월마다미국 Nevada주 Las Vegas에서Consumer Electronics Show 라는 것이 열린다. CES는 미국 가전협회의 지원을 받으며 많은 가전 기업들이 참여한다. 주로 신제품이나 개발제품(Preview)들을 전시, 소개한다. 공식홈페이지는 여기 : http://www.cesweb.org/ CES 2014의 경우  1월 7일 부터 ~ 1월 10일까지 진행되었다. LVCC(Las Vegas Convention Center;라스베가스 컨벤션 센터) 에서 진행되는 CES에 참여하기 위해서는 먼저 사전등록이 필요하다. 사전 등록된 사람에게 한해서 참가 뱃지(Badge)를 배포하며 Badge가 없으면 안에 아예 들어갈 수 없다. (뱃지가 없다면 입구에서 Security가 못들어오게 막음) 사전 등록은 다음의 링크에서 가능하며 http://www.cesweb.org/Register-Plan/How-to-Register-for-CES 등록비는 200달러이다. 현재 CES 2015의 등록비 무료 이벤트가 진행중입니다. (~ 14.08.31 까지 진행) http://www.cesweb.org/register 이 페이지에서 무료로 등록을 진행하세요. &#160; 등록 절차가 끝나면 컨벤션 센터 Central hall(입구쪽) 1층에 위치한  Information &#38; Badge Pickup 에서 행사기간 내에 수령할 수 있다. 눈에 띄는 곳에 있을 뿐더러 Badge&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/197/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>javascript 현재 경로 현재 프로토콜등 구하기</title>
		<link>https://blog.lael.be/post/400</link>
				<comments>https://blog.lael.be/post/400#respond</comments>
				<pubDate>Fri, 24 Oct 2014 02:13:08 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=400</guid>
				<description><![CDATA[만약 당신이 지금 http://www.test.com/ver2/index.php?wr_id=4&#38;bbs=free 라는 위치라면 location.protocol : http: location.host : www.test.com (주소) location.pathname : /ver2/index.php (경로) location.search : ?wr_id=4&#38;bbs=free (파라미터) 저는 보통 아래와 같이 사용합니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/400/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Why PHP file should OMIT the closing PHP tag?</title>
		<link>https://blog.lael.be/post/396</link>
				<comments>https://blog.lael.be/post/396#respond</comments>
				<pubDate>Thu, 23 Oct 2014 15:31:58 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[closing tag]]></category>
		<category><![CDATA[omit]]></category>
		<category><![CDATA[php]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=396</guid>
				<description><![CDATA[PHP Closing Tag The PHP closing tag on a PHP document ?&#62; is optional to the PHP parser. However, if used, any whitespace following the closing tag, whether introduced by the developer, user, or an FTP application, can cause unwanted output, PHP errors, or if the latter are suppressed, blank pages. For this reason, all PHP files should OMIT the closing PHP tag, and instead use a comment block to mark the end of file and it&#8217;s location relative to the application root. This allows you to still identify a file as being complete and not truncated. ** 번역하여 요약 ** 파일 끝에 스페이스나 엔터가 들어가면 php파일의 output이 생깁니다. output이 생기면 웹서버에서 헤더를 씌우고 출력을 내보냅니다. 요즘 프로그래밍 방식인 MVC&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/396/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>자바스크립 너비 지정 availHeight, height, clientHeight의 차이</title>
		<link>https://blog.lael.be/post/382</link>
				<comments>https://blog.lael.be/post/382#respond</comments>
				<pubDate>Thu, 23 Oct 2014 14:47:57 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=382</guid>
				<description><![CDATA[document.writeln(&#8220;브라우저의 전체 높이&#8221;,screen.availHeight);  //이것은 해상도의 높이에서 하단의 퀵런치 만큼의 사이즈만큼 빠지는거구요 &#160; document.writeln(&#8220;브라우저의 전체 너비&#8221;,screen.availWidth);  //너비는 해상도와 일치할겁니다. &#160; document.writeln(&#8220;모니터의 해상도 높이 &#8220;,screen.height); document.writeln(&#8220;모니터의 해상도 너비 &#8220;,screen.width); &#160; document.writeln(&#8220;브라우저안쪽의 높이 &#8220;,document.body.clientHeight); //이것이 브라우저 안쪽의 높이구요 document.writeln(&#8220;브라우저안쪽의 너비 &#8220;,document.body.clientWidth); //이것이 브라우저의 안쪽 너비죠  &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/382/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Xcode CGFloat to NSInteger conversion</title>
		<link>https://blog.lael.be/post/379</link>
				<comments>https://blog.lael.be/post/379#respond</comments>
				<pubDate>Thu, 23 Oct 2014 14:46:35 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=379</guid>
				<description><![CDATA[There are two ways to Convert From CGFloat to NSInteger. Solution one. Convert CGFloat to NSString, then take integer value. Solution two. Just take Integer value. Additional useful Infomartion &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/379/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[Apache Tips] PHP 확장자 fake 시키기 JSP</title>
		<link>https://blog.lael.be/post/373</link>
				<comments>https://blog.lael.be/post/373#respond</comments>
				<pubDate>Wed, 22 Oct 2014 02:05:19 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=373</guid>
				<description><![CDATA[라엘이는 요즘 사이트를 만들때 주소를 의미있게 만든다. 이런 주소는 SEO라고 검색이 더 잘된다. 또는 일부러 확장자를 이상하게 만든다. 다음은 그 중의 일부. /company/intro.php 파일이 있다면  다음 코드를 적용하면 /company/intro.jsp 라고 요청해도 응답이 된다. 물론 해당파일은 php파일이다. 1 2 3 4 5 6 7 8 9 10 &#60;IfModule mod_rewrite.c&#62; RewriteEngine On RewriteCond %{REQUEST_URI} \.jsp$ RewriteRule ^(.*)\.jsp$ /$1\.php [L] &#60;/IfModule&#62; &#160;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/373/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>MySQL 쓰면서 하지 말아야 할 것 17가지</title>
		<link>https://blog.lael.be/post/370</link>
				<comments>https://blog.lael.be/post/370#comments</comments>
				<pubDate>Wed, 22 Oct 2014 00:09:11 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=370</guid>
				<description><![CDATA[*MySQL 쓰면서 하지 말아야 할 것 17가지* 권장사항이다. 이것을 이해하면 당신의 어플리케이션이 더 나은 성능을 발휘할 것이다. 다만 이것이 사람의 실력을 판단하는 척도로 사용되서는 안 될 것이다. &#160; 작게 생각하기 - 조만간 규모가 커질거라면 MySQL ecosystem을 봐야된다. - 그리고 캐싱 빡시게 안 하는 메이저 웹사이트는 없다. - develooper.com의 Hansen PT랑 Ilia 튜토리얼 볼 것 - 처음부터 확장 가능하게 아키텍처 잘 쪼개놔야된다. - 복제랑 파티셔닝 어떻게 할지 미리 계획 세워놔라. - 파일 기반 세션 좀 쓰지마 -_- - 그렇다고 너무 쓸데없이 크게 생각하지도 말 것 - 특히 성능하고 확장성 구분 못 하면 난감함 &#160; EXPLAIN 안 써보기 - SELECT 앞에 EXPLAIN 이라고 붙이기만 하면 되는 것을 (..) - 실행 계획 확인 - 타입 컬럼에 index 써있는거랑 Extra 컬럼에 index 써있는거랑 &#8220;매우&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/370/feed</wfw:commentRss>
		<slash:comments>38</slash:comments>
							</item>
		<item>
		<title>Call of Duty Modern Warfare 3 한글패치 (CoD MW3) Kor Patch</title>
		<link>https://blog.lael.be/post/366</link>
				<comments>https://blog.lael.be/post/366#comments</comments>
				<pubDate>Wed, 22 Oct 2014 00:05:53 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=366</guid>
				<description><![CDATA[콜오브듀티 모던워페어 3 한글패치입니다. 콜오브듀티가 설치된 폴더에 MW3KRv1.01.zip 이 파일을 위치시킨 후 실행시키면 됩니다. &#160; 설치후에는 한국어로 게임을 진행할 수 있습니다. 참고로 번역작업은 류류(http://nmn0127.blog.me/130124865113) 님께서 진행하였으며 현재 버전의 경우 시나리오 및 미션의 모든 번역이 완료된 상태입니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/366/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>[소프트웨어 공학] 은행 사이트 만들기</title>
		<link>https://blog.lael.be/post/363</link>
				<comments>https://blog.lael.be/post/363#comments</comments>
				<pubDate>Tue, 21 Oct 2014 14:52:33 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[공학]]></category>
		<category><![CDATA[소프트웨어]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=363</guid>
				<description><![CDATA[소프트웨어 공학의 다양한 분야를 체험해 보고 이에 맞추어 제작해 보는 일을 하였다. &#160; &#60;그림 : 소프트웨어 개발단계-저건 폭포수 모델&#62; &#160; &#160; &#60;그림 : 일반적인 소프트웨어 프로젝트 진행&#62; &#160; &#160; &#160; 소프트웨어 프로젝트에 70%는 실패한다. (통계학적으로) 그러나 일반인들은 프로젝트를 하면 무조건 성공할 것으로 착각한다. &#160; &#60;그림 : 소프트웨어 개발의 잘못된 통념&#62; &#160; &#160; &#60;그림 : 프로젝트 산정, 규모측정 방법중 일부 설명&#62; &#160; &#160; &#160; &#160; &#60;그림 : 프로젝트 통제. 현재 작업이 지연중인지 확인하고 작업완료시까지의 기간과 비용을 추정가능&#62; &#160; &#160; 아무튼 은행 시스템을 개발해 보았다. 가상의 은행시스템을 개발한다. 개발자는 나. &#160; *요구사항 일상생활에서 모든 업무를 처리할 때 IT 이용하고 있다. IT를 활용한 업무 처리는 신 속·정확하며, 데이터 일관성을 유지한다. 현재 IT은행은 은행원이 수작업으로 예금하기, 출금하기, 계좌이체하기, 통장정리 등을 시행하고 있다. 은행원이 수작업으로&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/363/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>USB 가 지정된 용량보다 작게 표시될 때</title>
		<link>https://blog.lael.be/post/358</link>
				<comments>https://blog.lael.be/post/358#respond</comments>
				<pubDate>Tue, 21 Oct 2014 05:05:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=358</guid>
				<description><![CDATA[상황은 이렇습니다. &#160; 라엘이가 PC를 구입하였고 OS설치를 위해서 DVD가 필요했는데.. 하필 없더군요.. &#160; DVD-USB 라는 것이 있어서, 사용해 보았습니다. &#160; USB용량이 작아져서. &#160; #공식 다운로드 사이트 http://www.partition-tool.com/landing/home-download.htm &#160; 프리웨어 받아서 &#160; 했더니 저기 2.99G 가 숨겨서 사용되고 있군요. &#160; 삭제하면 됩니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/358/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu GeoIP를 사용하여 외국트래픽차단하기</title>
		<link>https://blog.lael.be/post/346</link>
				<comments>https://blog.lael.be/post/346#comments</comments>
				<pubDate>Mon, 20 Oct 2014 22:48:08 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=346</guid>
				<description><![CDATA[이 글에서는 Apache GeoIP 모듈을 설치하고, 외국 트래픽을 차단하는 방법에 대해 설명합니다. 웹서비스를 운영하다보면 &#8220;지역단체&#8220;, &#8220;정치인&#8220;, &#8220;중소형 음식점&#8221; 등과 같이 외국 트래픽이 전혀 필요 없을 때가 있다. 이 때 외국트래픽을 차단해 주면 보안이 매우 향상된다. *GeoIP : IP 주소만으로 해당국가를 알 수 있는 모듈. IP 주소가 무작위로 할당되는 것이 아니라, 대륙별, 지역별로 계층 할당되기 때문에 IP 만으로도 대략적인 정보를 추측할 수 있다. &#160; 예를 들어, 서울대학교 메인 서버의 주소 및 위치 정보는 다음과 같다. http://ipconfig.tools/ko/whois?host=147.46.10.58 &#160; 1. Install GeoIP &#62; 우선 웹브라우져에서 다음의 링크를 클릭하여  링크가 깨졌는지 체크한다. &#62; 깨졌으면 알아서 설치하고 &#62; 깨지지 않았으면 2번을 진행한다. http://www.maxmind.com/download/geoip/api/c/GeoIP.tar.gz 2. 서버에 root 권한으로 로그인 #whoami root #cd ~ #pwd /root 3. GeoIP 모듈 다운로드 # wget http://www.maxmind.com/download/geoip/api/c/GeoIP.tar.gz # tar -xzvf GeoIP.tar.gz&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/346/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>실리콘벨리 &#8211; 공부 잘하는 자식 의대 보낸것, 후회하는 날 온다</title>
		<link>https://blog.lael.be/post/341</link>
				<comments>https://blog.lael.be/post/341#respond</comments>
				<pubDate>Mon, 20 Oct 2014 22:14:40 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=341</guid>
				<description><![CDATA[추천받아서 읽었는데 상당히 좋은 글인듯.   구글, 페이스북 등 세계적인 IT기업이 즐비한 실리콘밸리에는 자녀교육에 대한 대체적인 공식이 하나 있다. 어릴 때 컴퓨터 코딩을 배우게 하고, 대학은 공대로 보내, 엔지니어를 시키는 것. 취업이 쉽고, 큰 돈 벌 수도 있는 방법이기 때문이다.    최근 한국의 정부, 기업, 창업 관계자들이 하루가 멀다 하고 실리콘밸리를 찾는다. 실리콘밸리 같은 창조경제 모델을 한국에도 만들어보자는 것. 그런데, 한국이 창조경제를 만들려면 실리콘밸리 부모들은 왜 자식들 코딩을 가르치고, 왜 공대를 보내려 하는지 이 질문부터 풀어야 할 터. 죽을 둥 살 둥 공부시켜 의대 보내는 대신, 부모들이 먼저 자식들 공대로 보내고 싶도록 할 수 있다면, 창조경제는 성공하는 것 아닌가.    한국 손님들이 이곳에 와서 꼭 먼저 조언을 구하는 조성문(37) 오라클 프로덕트 매니저를 만나 얘기를 들어보았다. 파워블로거로도 유명한 그는 게임빌 창업멤버로&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/341/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>프로젝트의 성공여부는</title>
		<link>https://blog.lael.be/post/339</link>
				<comments>https://blog.lael.be/post/339#respond</comments>
				<pubDate>Mon, 20 Oct 2014 22:14:08 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=339</guid>
				<description><![CDATA[내 경험으로 봤을때 &#160; 프로젝트의 성공여부는 리더의 자질에 큰 영향을 받는다. &#160; 실패하는 프로젝트들을 보면 (특히 CEO가) 과거의 경험에 비추어서 잘나가던때를 상상하며 그때처럼 진행하려고 한다. &#8220;내가 해봐서 아는데 이렇게 잘된다&#8221; 같은 식의 지휘.   그런데 사회는 빨리 변화하기 때문에 그 변화에 적응하는 사람이 되어야한다. 정확히는 변화에 적응하고 미래를 예측할 수 있어야함. &#160; 잘나가던 일본 카메라 회사 코닥이 망한 이유도 변화를 수용하지 않고 아집을 부린 까닭이다. &#160; 한국이 장기불황에 접어들었다고 한다.  일본을 따라간다고 해야하나? 미래를 예측하고 대비하도록 하자.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/339/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>한백전자 HBE-Robonova-AI 프로젝트</title>
		<link>https://blog.lael.be/post/336</link>
				<comments>https://blog.lael.be/post/336#respond</comments>
				<pubDate>Mon, 20 Oct 2014 22:07:26 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[ROVONOVA]]></category>
		<category><![CDATA[로보노바]]></category>
		<category><![CDATA[영상처리]]></category>
		<category><![CDATA[임베디드]]></category>
		<category><![CDATA[팀프로젝트]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=336</guid>
				<description><![CDATA[임베디드 소프트웨어라는 과목을 듣고 있다. &#160; arm-linux-gcc 써보는 것이다. 과목 수강생이 많은 관계로;; 8인 1조가 되었고 나는 조장이다. 프로젝트 주제는 &#8216;글자인식 로봇&#8217;이다. 원래 제대로 하려면 논문탐구도 하고 신경망 써서 인식해야 하지만 그냥 학부생 수준의 알고리즘으로 구현했다 &#60;시연영상&#62;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/336/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>재화와 서비스를 거의 무료로 사용할 수 있는 시대 &#8211; 공유 경제 가치(CSV)</title>
		<link>https://blog.lael.be/post/283</link>
				<comments>https://blog.lael.be/post/283#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:34:39 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[IT]]></category>
		<category><![CDATA[CSV]]></category>
		<category><![CDATA[공유가치]]></category>
		<category><![CDATA[공유경제]]></category>
		<category><![CDATA[제레미 리프킨]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=283</guid>
				<description><![CDATA[뉴스 보도자료(14년 3월) 참조 : http://biz.chosun.com/site/data/html_dir/2014/03/17/2014031702783.html 미국의 경제학자 제레미 리프킨이 한 말이다. 리프킨 이사장은 1999년 설립된 음악 파일 공유 사이트 ‘냅스터’를 대표적 사례로 꼽았다. 냅스터를 통해 수 많은 사용자들이 무료로 MP3 파일을 공유하게 되면서 음악 시장이 대혼란을 겪게 됐다는 것이다. 그는 “MP3와 비슷한 현상이 언론과 출판 시장을 뒤덮었다”며 “소비자들이 돈을 주고 콘텐츠를 이용하는 대신 공유를 통해 서비스를 이용하게 됐다”고 말했다. 그는 공유 경제가 이제 에너지산업과 제조업, 교육 산업에도 영향을 미치고 있다고 썼다. 특히 3D프린터의 등장으로 제조업 부문의 한계 비용이 ‘제로’ 수준으로 떨어졌고, 개방형 온라인 교육과정이 생기면서 교육 부문도 타격을 입기 시작했다고 밝혔다. 사물 인터넷도 한계 비용 제로의 시대를 앞당기는 요인이라고 리프킨 이사장은 예상했다. 2020년엔 각종 사물에 부착되는 센서가 500억개에 이를 것으로 전망했다. 공유 경제는 소유권 개념도 바꾸고 있다. 자동차를 공유하는 ‘카쉐어링’&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/283/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>소프트웨어 개발단계에서 가장 많은 비용이 소요되는 단계는?</title>
		<link>https://blog.lael.be/post/279</link>
				<comments>https://blog.lael.be/post/279#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:28:38 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[IT]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=279</guid>
				<description><![CDATA[정보처리기사 문제 족보 - &#160; 문제 : 소프트웨어 개발단계에서 가장 많은 비용이 소요되는 단계는? 정답 : 유지보수 //프로젝트비용의 절반이상을 차지한다.//유지보수행동에는 수정,적응,완전화,예방 보수등이다.(CAPP) &#160; 우리나라는 대부분의 돈을 초기 개발회사가 먹고 유지보수는 하청을 맡기거나 다른회사로 넘겨버린다. 이러니 소프트웨어가 제대로 운용될 수 있겠는가?]]></description>
						<wfw:commentRss>https://blog.lael.be/post/279/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>하청업체의 입장에서 바라본 애플과 삼성</title>
		<link>https://blog.lael.be/post/277</link>
				<comments>https://blog.lael.be/post/277#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:28:11 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[IT]]></category>
		<category><![CDATA[삼성]]></category>
		<category><![CDATA[애플]]></category>
		<category><![CDATA[태생]]></category>
		<category><![CDATA[하청업체]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=277</guid>
				<description><![CDATA[몇년전 부터 예견했었던 일이지만 애플의 아이폰이 앱스토어의 발표와 함께 연일 세간의 관심을 받게 됨으로 인하여, 피처폰 생산량 세계 2위라는 기적을 일구어낸 삼성전자는 본의아니게도 폭풍처럼 몰아치는 스마트폰이라는 이름의 또하나의 도전을 마주하게 되었습니다. 지금와서 그 충돌의 시작이 어디였는지는 자세히 기억나지 않지만, 아마도 옴니아라는 제품에서 부터 애플 vs 삼성 이라는 대결구도는 시작되었다고 봅니다. 그리고 그런 구도는 ‘애플이 아무리 날고 기어도 한국엔 세계1위 전자업체 삼성이 있다’ 라는 애국적 무의식에 삼성전자가 언론플레이란 양념을 치면서 완성되게 됩니다. 어쨌든 이러한 인식이 팽배한 가운데 삼성전자는 앞마당격인 한국시장에서 애플을 상대로 힘겨운 방어전을 하고 있습니다. 그리고 그간의 햅틱 – 옴니아 – 갤럭시로 이어지는 삼성의 대항마(라 쓰고 경주마로 읽습니다)들을 접하고 난 후 제 주관적인 견해는, &#8216;삼성전자의 혁신의지는 충분히 느낄 수 있지만, 의지는 혁신의 한가지 필요조건일 뿐.&#8217; 로 요약됩니다. 아마도 대부분의 사람들은&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/277/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>우리가 미처 알지못한 소프트웨어 공학의 사실과 오해</title>
		<link>https://blog.lael.be/post/275</link>
				<comments>https://blog.lael.be/post/275#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:27:38 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[IT]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=275</guid>
				<description><![CDATA[소프트웨어 개발을 많이 해본 로버트 L. 글래스가 쓴 책 &#8220;우리가 미처 알지못한 소프트웨어 공학의 사실과 오해&#8221; 의 목차입니다. http://www.aladin.co.kr/shop/wproduct.aspx?ISBN=8991268021 자세한 내용을 알고 싶으시면 책을 사서 읽으세요. &#160; &#160; 목차 &#160; 1부. 55개 사실 &#160; 1장. 관리 사람 사실 1. 소프트웨어 작업에서 가장 중요한 요소는 프로그래머의 자질이다. 사실 2. 최고의 프로그래머는 최하의 프로그래머보다 28배 더 뛰어나다. 사실 3. 지체된 프로젝트에 사람을 추가 투입하면 프로젝트가 더 늦어진다. 사실 4. 작업 환경은 생산성과 품질에 지대한 영향을 미친다. &#160; 도구와 기술 사실 5. 소프트웨어 업계에는 과대선전(도구와 기술에 대한)이 만연해 있다. 사실 6. 새로운 도구와 기술은 도입 초기에 생산성/품질저하를 초래한다. 사실 7. 소프트웨어 개발자는 도구에 대해 많은 말을 하지만, 별로 사용하지는 않는다. &#160; 추정 사실 8. 폭주하는 프로젝트의 가장 흔한 원인 두 가지 중 하나는 부정확한&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/275/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Apache 확장자 자동탐색 원리</title>
		<link>https://blog.lael.be/post/273</link>
				<comments>https://blog.lael.be/post/273#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:27:13 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[IT]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=273</guid>
				<description><![CDATA[Multiviews MultiViews는 디렉토리별 옵션이므로, httpd.conf의 &#60;Directory&#62;, &#60;Location&#62;, &#60;Files&#62; 섹션 혹은 (AllowOverride가 적절히 설정되었다면) .htaccess 파일의 Options 지시어에 설정할 수 있다. Options All은 MultiViews를 포함하지않음을 주의하라. 따로 직접 써줘야 한다.MultiViews를 사용하면 다음과 같은 일이 일어난다: 서버가 /some/dir/foo에 대한 요청을 받고 /some/dir/foo에 MultiViews가 동작하며 /some/dir/foo가 존재하지 않을 경우, 서버는 디렉토리에서 이름이 foo.*인 파일들을 모든 포함하는 가상의 type map을 만든다. 클라이언트가 요청한 media type과 content-encoding을 가지고 이중에 가장 적합한 것을 선택한다. MultiViews는 서버가 디렉토리를 참조할때 파일을 찾는 DirectoryIndex 지시어에도 적용된다. 설정파일이 다음과 같다면, DirectoryIndex index index.html과 index.html3이 모두 있다면 서버는 이둘 중에 하나를 결정한다. 둘 모두 없고 index.cgi가 있다면, 서버는 그것을 실행한다. 디렉토리를 읽을때 파일중 하나가 Charset, Content-Type, Language, Encoding를 판단하는 mod_mime이 모르는 확장자를 가진다면, 결과는 MultiViewsMatch 지시어 설정에 달렷다. 이 지시어는 핸들러,&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/273/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>우연이라는 것은 없다. &#8211; HP 최필립 상무님</title>
		<link>https://blog.lael.be/post/271</link>
				<comments>https://blog.lael.be/post/271#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:26:01 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[IT]]></category>
		<category><![CDATA[HP]]></category>
		<category><![CDATA[우연은 없다]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=271</guid>
				<description><![CDATA[&#160; 내가 노트를 뒤적이다가 큰 감흥이 되는 메모를 보았고 관련된 내용을 작성해 볼까한다. 라엘이는 지난 2014년 1월 14일경 미국 California, Palo Alto에 있는 HP 본사에 견학을 갔었다. HP 본사의 상무님은 놀랍게도 한국인 이었고 그 덕분에 본사 사장실 옆에 있는 Executive briefing center(임원 브리핑 센터)에서 강의를 들을 수 있었다. &#160; 강의는 &#8220;우연이라는 것은 없습니다. 여러분은 여기 이 자리에 있기 때문에 더욱 발전할 수 있을 것입니다.&#8221; 라는 멘트로 시작되었다. &#160; 필기체 입니다. 평소엔 곱고 예쁘게 씁니다. &#60;그림 : 해당 강의 필기노트&#62; &#60;그림 : 강연하시는 Phillip Choi 상무님&#62; &#160; &#60;그림 : 현재 인기있는 분야인 Cloud Computing에 대해 강연하시는 Frances Guida 매니저님&#62; &#60;그림 : 라엘이의 명패 및 HP 노트&#62; &#160; &#160; 라엘이는 스스로가 &#8216;행운아&#8217;라고 생각합니다. 저는 &#8216;저만의 신(神)&#8217; 이 있다고 믿습니다. 지금의 제가 있을&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/271/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[뉴스따라잡기] 2014 소프트웨어 전망</title>
		<link>https://blog.lael.be/post/260</link>
				<comments>https://blog.lael.be/post/260#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:20:24 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=260</guid>
				<description><![CDATA[아래는 okjsp 뉴스따라잡기 게시판에 올라온 링크 글을 옮긴 것입니다. 원문 작성자는 김수보님 입니다. 원문 : https://www.takeflava.com/SinglePage/537d57ade4b056803ae5e207  (http://www.okjsp.net/seq/251318)    개인적으로 본 2014년 소프트웨어 시장 아래는 제가 현장을 돌아다니면서 개인적으로 느낀 점을 정리해 보았습니다. 정확한 조사를 통해 나온 것이 아니므로 당연히 오류가 있습니다. 통계로 보는 거랑 시장에서 느끼는 거랑은 온도차가 확실히 나네요. &#8216;소프트웨어 연감&#8217;에서 보는 것 보다 훨씬 상황은 안 좋은 것 같아요. 아직 좋은 팀을 가지고 있는 회사는 정말 운 좋은 것 같아요. * 개발자 채용 시장 느낌 상 이력서 80-90%가 40대 개발자, 개발 안하는 PM들도 많음 50세 가까이 되는 아저씨는 연봉 2,000 만원대에 일하겠다고 취업원서를 내고. 30대 개발자들은 경력 뻥튀기해서 2,000만원도 아까운데 6,000씩 달라고 하고. 물론 대부분 그렇게 채용하지 못함. 급여가 높아서 정직원이 아니라 계약직 채용이 대부분 * SI 시장&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/260/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[Linux] 서버 시각 정기적 동기화</title>
		<link>https://blog.lael.be/post/256</link>
				<comments>https://blog.lael.be/post/256#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:19:35 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=256</guid>
				<description><![CDATA[라엘이가 여러 서버를 돌려보고 느낀건데, 서버 부하(Cpu Load)가 높으면 시간이 약간 느리게 간다. 급기야는 3시간에 5분정도의 오차를 내는 서버가 있었다. 해당서버는 Windows Server 2003 이었고 http://www.kriss.re.kr/2010/standard/12.html  프로그램을 사용하여 1분마다 서버 시각을 갱신하게 세팅해 두었다. 그건 그렇고 라엘이가 이 글을 쓰는 건   리눅스 우분투(우분투라고 했지만 다른 배포판에서 될 것같다)에서 서버 시각을 정기적으로 맞추는 방법이다. 1. 먼저 서버에 root로 접속 #whoami root #pwd /root 2. 시간업뎃 쉘작성. 명령어도 해도 되는데 쉘로 작성하는게 관리면에서 더 좋다. #vi sync_time.sh 1 /usr/sbin/ntpdate time.bora.net 여러 시각서버가 있었지만 라엘이 생각엔 time.bora.net 이 가장 안정적인것 같았다. 3. 쉘에 실행권한주기 #chmod 700 sync_time.sh 4. 실행해보자 #./sync_time.sh 25 May 08:57:31 ntpdate[25318]: step time server 203.248.240.140 offset 1.387644 sec -- 5월 25일 8시 57분에(지금 글쓰고 있는 시각과 같다) 시각동기화를 실행했으며&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/256/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>통신사들의 공유기 사용 검출법</title>
		<link>https://blog.lael.be/post/250</link>
				<comments>https://blog.lael.be/post/250#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:16:48 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=250</guid>
				<description><![CDATA[-- http://goo.gl/JZZKt 원 글이 지워졌거나 이동되었네요. -- 신형 IMS(Internet sharing Management System) 의 원리 KT Networks 신형IMS 설계에 참여했던 미릅이라고 합니다. IMS 설계가 완료되고 KT 구로국사의 테스트베드가 작년 10월에 끝나고 일부 지역에 시범서비스로 가동되고 있습니다. 구성은 각 노드의 말단부 스위치(대게 다산5124스위치) 와 백본이 연결되는 CISCO GSR 사이에 광탭을 설치후 패키을 미러링하면 이를 오가는 패킷이 500Mpps 이상의 속도를 지원하는 L4 스위치로 복사되어 올라가고 그중 HTTP_GET 패킷만 걸러내어 IMS서버로 송출합니다. (단방향이지만 엄청난 스피드를 요구합니다.) 어떤 PC의 IP주소에서 사이트A와 사이트B를 거의 비슷하게 접속해서 서핑을 한다고 한다면, 두 서버와 통신하는 패킷의 시퀀스넘버가 유사하게 매겨지는 경향이 있습니다. 그런데 만약 특정 IP주소에서 나오는 GET 메소드를 가진 패킷 여러개를 분석해보니 한쪽은 #34590 이고 다른 한쪽은 #6970 이라면 분명 두 PC에서 서로 다른 웹사이트를 접속하고 있는 것이라고 판단할&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/250/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Convert JPGtoPDF Free Portable (JPG-&gt;PDF)</title>
		<link>https://blog.lael.be/post/248</link>
				<comments>https://blog.lael.be/post/248#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:14:48 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[jpg to pdf]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=248</guid>
				<description><![CDATA[JPEGtoPDF Official Site : http://compulsivecode.com/Project_ImageToPDF.aspx JPEGtoPDF.pdf This is a program for converting image files into PDF files.  The program supports converting multiple image files to single or multiple PDFs files.  The program also supports image scaling and positioning. This program is now written in VB.Net, and supports additional image formats:  BMP, GIF, PNG, TIF, WMF, EMF, in addition to JPG, JP2, J2K.  Also, This program now supports commandline execution, where the syntax is: JPEGtoPDF.exe &#8220;pdfFileName&#8221; &#8220;imgFileName1&#8221; &#8220;imgFileName2&#8221; (Note that every parameter should be a full path+filename, and be enclosed in quotes) This program now supports unicode filenames. Latest addition:  The program now supports multi-page images. 이미지 몽땅 불러와서 Save PDF 하면 됩니다. 크기가 다른 이미지들도 하나의 PDF로 변환됩니다. (페이지마다 크기가 변함)&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/248/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Virtual Machine Manager in Ubuntu</title>
		<link>https://blog.lael.be/post/242</link>
				<comments>https://blog.lael.be/post/242#comments</comments>
				<pubDate>Sat, 18 Oct 2014 10:12:07 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=242</guid>
				<description><![CDATA[이 글은 : https://blog.lael.be/post/57 (오픈소스 클라우드 구축하기) 에 이어서 작성된 글입니다. Ubuntu 12.04 LTS Desktop 기준으로 작성되었습니다. (정확히 이 버전에서만 동작합니다.) &#160; Virtual Machine Manager 사용 메뉴얼 &#160; &#160; (libvirt) 채널을 오른쪽클릭 &#62; New &#160; &#160; Local &#160; &#160; 미리 받아둔 iso 파일 선택. OS type 및 Version 은 선택하나마나 별차이 없는것 같다. &#160; &#160; &#160; 가상서버의 사양선택. HOST 서버의 사양에 따라 최대 선택의 제한이 있으므로 적당히 잘 하도록 한다. &#160; &#160; &#160; 4번째 단계는 HDD 이미지 선택인데 라엘이는 미리 HDD 이미지를 만들어두었다. &#160; &#160; 선택한다. &#160; Browse 를 해서 선택한 파일이 있다면 그 이미지를 사용하고, 없다면 상단의 옵션으로 HDD 이미지를 생성한다. HDD 이미지 생성에는 매우 많은 시간이 소비되며 반드시 Allocate entire disk now 를 체크하도록 한다. (안하고 했더니 설치가 매우 느림.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/242/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
							</item>
		<item>
		<title>사회공학적 기법을 이용한 해킹 &#8211; 인생은 아름다워</title>
		<link>https://blog.lael.be/post/238</link>
				<comments>https://blog.lael.be/post/238#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:11:12 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=238</guid>
				<description><![CDATA[사회공학이란? 사회 공학은 보안학적 측면에서 기술적인 방법이 아닌 사람들간의 기본적인 신뢰를 기반으로 사람을 속여 비밀 정보를 획득하는 기법을 일컫는다.   -출처 : wikipedia 즉 친분을 이용한 해킹을 사회공학적 해킹이라고 한다. 최근 컴퓨터 사용자에게 겁을 주는 Hoax 계열의 스팸 글이 나돌고 있다. Hoax : 악성코드에 대한 잘못된 정보로 악영향을 끼치는 소문 &#8216;인생은 아름다워(Life is beautiful)&#8217;는 2002년도에 처음 발견된 이후.. 잊혀질 때 쯤 한번씩 사회 공학적 기법을 이용하는 놈이다. 아래는 해당 Hoax 의 한글판, 영문판 버전이고, 이외에 변형된 형태로 스팸 글이 메신저와 메일로 전파되고 있다. (외국에서 시작된 장난이 한국으로 넘어온 것 같다) 이와 비슷한 글을 받았을 경우 무시하고 닫기버튼을 누르자. 이외의 Hoax 를 보고싶다면 이곳(http://www.symantec.com/security_response/print_writeup.jsp?docid=2002-011511-0444-99)을 클릭 해당 악성코드는 발견된 적이 없다고 한다. 하우리(http://hauri.co.kr), 안철수연구소(http://www.ahnlab.com) 에 가서 직접 검색해 보아라 이렇게 중요한 정보라면 공지사항에&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/238/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Ubuntu &#8211; Best way to Local PortForwarding.</title>
		<link>https://blog.lael.be/post/231</link>
				<comments>https://blog.lael.be/post/231#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:08:58 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[port-forwarding]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=231</guid>
				<description><![CDATA[1. Find out the name of &#8216;rinetd&#8217; package. #apt-cache search rinetd rinetd - Internet TCP redirection server socat - multipurpose relay for bidirectional data transfer 2. Install &#8216;rinetd&#8217; Package. #apt-get install rinetd 3. Configure Port-forward setting. #vi /etc/rinetd.conf ex) 1) Listen 10322 PORT. 2) Send All TCP packet to Local 22 PORT. It is simple to configure. 4. Adjust it. #/etc/init.d/rinetd restart 로컬 포트포워딩 뿐만 아니라 리모트 포트포워딩도 됩니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/231/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>PHP Mcrypt Encrypt Decrypt Sample</title>
		<link>https://blog.lael.be/post/227</link>
				<comments>https://blog.lael.be/post/227#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:08:24 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=227</guid>
				<description><![CDATA[Replace your-own $key value. &#160; $key = &#8216;12345678901234567890123456789012&#8217;; $iv = &#8216;1234567890123456&#8217;; $input = &#8220;student&#8221;; $td = mcrypt_module_open(&#8216;rijndael-128&#8217;, &#8221;, &#8216;cbc&#8217;, &#8221;); mcrypt_generic_init($td, $key, $iv); $encrypted_data = mcrypt_generic($td, $input); mcrypt_generic_deinit($td); mcrypt_module_close($td); echo base64_encode($encrypted_data);]]></description>
						<wfw:commentRss>https://blog.lael.be/post/227/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Windows 10, 7, XP, Linux 멀티부팅 설정하는법</title>
		<link>https://blog.lael.be/post/225</link>
				<comments>https://blog.lael.be/post/225#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:07:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=225</guid>
				<description><![CDATA[에디트 툴을 설치해서 적당히 편집하면 된다. &#160; Win XP ~ Win 10 모두 지원합니다. &#160; 2016년 01월 20일 현재 최신버전 : v2.3  EasyBCD 2.3.zip 공식 홈페이지(다운로드) : http://neosmart.net/EasyBCD/]]></description>
						<wfw:commentRss>https://blog.lael.be/post/225/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>[PHP5] Cannot redeclare class soapclient in &#8230;</title>
		<link>https://blog.lael.be/post/221</link>
				<comments>https://blog.lael.be/post/221#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:06:28 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=221</guid>
				<description><![CDATA[Cannot redeclare class soapclient in xxx 이 에러는 php5.x 에서만 발생한다. soapclient가 php5 에서 built-in class 라서 nusoap 과 충돌이 일어난다. 해결책은 nusoap 관련파일을 몽땅 읽은후에  soapclient  라는 단어를  soapclientW 로 바꾸어주면 된다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/221/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>우리나라에서 자주 쓰이는 79가지 논리적 오류들</title>
		<link>https://blog.lael.be/post/213</link>
				<comments>https://blog.lael.be/post/213#comments</comments>
				<pubDate>Sat, 18 Oct 2014 10:04:39 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=213</guid>
				<description><![CDATA[01. 같은 말을 결론에서 되풀이하라. 선결문제 요구 Petitio principii 02. 개인의 일을 전체의 일인 양 위장하라. 결합 Composition 03.‘거의’라는 수식어를 슬쩍 집어넣어라. 은밀하게 감춰진 한정어 Half-concealed qualification 04. 결과가 어떻든 무조건 비난하라. 무조건 탓하기 Thatcher&#8217;s blame 05. 과거에 다 해본 것이라고 응수하라. 냉소적인 논증 Non-anticipation 06. 그 말은 독재적이라고 딱지 붙여라. 발생학적 오류 The genetic fallacy 07. 그것도 모르냐고 넌지시 암시하라. 삼척동자도 안다 Every schoolboy knows 08. 그것은 예외일 뿐이라고 받아쳐라. 예외를 통한 입증 The exception that proves the rule 09. 끝에 가서 딴소리를 하라. 전제들을 부정하는 결론 Conclusion which denies premises 10. 내 주장이 틀렸다는 걸 입증해 보라고 반격하라. 입증책임 전가 Shifting the burden of proof 11. 너무 뻔한 실수는 범하지 말라. 부정 전제에서 긍정 결론을 도출하는 논증 Positive&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/213/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
							</item>
		<item>
		<title>쿼드콥터 프로젝트 2013-winter 데모영상</title>
		<link>https://blog.lael.be/post/211</link>
				<comments>https://blog.lael.be/post/211#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:04:20 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[AR.Drone]]></category>
		<category><![CDATA[임베디드]]></category>
		<category><![CDATA[컴퓨터공학 프로젝트]]></category>
		<category><![CDATA[쿼드콥터]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=211</guid>
				<description><![CDATA[AR Drone 이라는 프랑스 쿼드콥터 키트를 활용해서 프로젝트를 진행합니다. 이 쿼드콥터는 전면 카메라(1280*720*30) 촬영용과 하단 카메라(패턴인식을 이용한 자리유지)를 사용합니다. 이번 프로젝트를 통해서 Windows OS에서 키트제어 및 센서값을 읽어오는 것을 하였습니다. 겨울 방학기간을 활용하여 LTE 통신으로 제어하도록 수정하겠습니다. 다음 학기때는 Image processing을 통해 차영상을 활용한 물체 추적(Object tracking) 프로젝트를 할 것 같습니다.]]></description>
						<wfw:commentRss>https://blog.lael.be/post/211/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>javascript 로 GET 추출하기? javascript parse get</title>
		<link>https://blog.lael.be/post/209</link>
				<comments>https://blog.lael.be/post/209#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:03:56 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[example]]></category>
		<category><![CDATA[javascript parse get]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=209</guid>
				<description><![CDATA[How to extract GET variable with javascript? PHP 같은 웹 어플리케이션 프로그램을 사용하지 않고도 GET 변수를 추출할 수 있다. 사용방법]]></description>
						<wfw:commentRss>https://blog.lael.be/post/209/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>Software engineering 프로젝트 위험관리</title>
		<link>https://blog.lael.be/post/205</link>
				<comments>https://blog.lael.be/post/205#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:02:45 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[RMMM]]></category>
		<category><![CDATA[리스크관리]]></category>
		<category><![CDATA[소프트웨어 엔지니어링]]></category>
		<category><![CDATA[위험관리]]></category>
		<category><![CDATA[컴퓨터공학 프로젝트]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=205</guid>
				<description><![CDATA[&#160; &#60; Igor Kokcharov - What Is Project Risk Management? &#62; &#160; 프로젝트 위험관리 - 프로젝트 위험 : 불확실하게(일어날지도 모르는) 나타나는 일. 그런데 일어나면 나쁜 효과를 일으킴. - 위험의 대처 : 일어났을때 대응법과 안일어나도록 선조치를 해야함. &#160; - 위험의 종류 : 1) 프로젝트 위험 : (프로젝트)일정이나 비용에 영향을 주는 위험. (요구사항이 변경되거나, 인력이 퇴사하거나, 돈이 예상치보다 많이 쓰거나) 2) 기술적 위험 : (소프트웨어)품질에 영향을 주는 위험. (설계를 잘못함, 인터페이스가 불편하게 나옴, 최신기술 등장으로 유저 기대치가 높아짐) 3) 사업적 위험 : (소프트웨어)생명에 영향을 주는 위험. (다 만들고 났더니 아무에게도 필요없는 소프트웨어. 예산이 끊겨서 소프트웨어 못만들게 생김. 개발팀이 해체됨) &#160; - 위험의 종류 : 프로젝트 계획을 검토함으로써 알려진 위험이 있고 경험에 의해 예측가능한 위험이 있고 뜬금없이 발생하는 예측 불가능한 위험이 있다. &#62;&#62; 당연히 예측 불가능한 위험의 충격이&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/205/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>USB 용량이 표시된 것보다 작은 이유 (다르게 표시)</title>
		<link>https://blog.lael.be/post/203</link>
				<comments>https://blog.lael.be/post/203#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:02:13 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[ssd 용량]]></category>
		<category><![CDATA[usb 용량]]></category>
		<category><![CDATA[포맷]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=203</guid>
				<description><![CDATA[검색해 봤는데 이 이슈를 다루는 글이 없어서 라엘이가 작성해 본다. 만약 1GB 라는 USB 를 구매했을 경우 운영체제 상에서 실제 사용가능공간은 960MB 정도로 표시될 것이다. &#160; USB 용량이 표시된 것보다 작은 이유는 다음과 같다. 1) 1GB 에 대해서, 저장 장치 분야와 컴퓨터 메모리 분야의 기준이 다름 기가바이트에 대한 정의 참조 : https://en.wikipedia.org/wiki/Gigabyte 즉 컴퓨터 메모리 분야에서는 1KB = 1024Byte 인데, 저장 장치 분야에서는 1KB = 1000Byte 로 다룬다는 것이다. 한 곳 에서는 2진수로 단위를 다루고, 다른 한 곳에서는 10진수로 단위를 다루는 것이다. &#160; 즉 1GB 를 컴퓨터 파일 단위라고 봤을때는 2^30 Byte 이고  //   저장 장치라고 보았을 때는 10^9 Byte 가 된다. USB 저장장치 1GB 의 저장용량은 1000000000 바이트이며, 컴퓨터 메모리 단위로 변경하면 953MB 가 된다. Windows 운영체제는 2진수 크기로 표시한다.&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/203/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
		<item>
		<title>(펌)현직 용접공이 본 현대자동차의 미래</title>
		<link>https://blog.lael.be/post/201</link>
				<comments>https://blog.lael.be/post/201#respond</comments>
				<pubDate>Sat, 18 Oct 2014 10:01:54 +0000</pubDate>
		<dc:creator><![CDATA[HYEONG HWAN, MUN]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">http://blog.lael.be/?p=201</guid>
				<description><![CDATA[이 글은 2011년 7월에 작성되었습니다. &#160; 자동차에 관심있어서 관련글을 좀 뒤적거리는데.. 조금은 편파적이지만, 그럴 수 밖에 없는 상황에 처한 사람이 쓴 글을 옮겨봤습니다. 늘 제 생각보다는 퍼온글 위주로 글을 올리는 점을 죄송하게 생각하며, 이 글이 현대자동차 뿐만이 아니라, 대한민국 완성차 업체들 모두에게 귀감이 되었으면 하는 마음에 올려봅니다. (참고로 이 글은 몇해 전 올라온 글이기 때문에 일부 현재와 다른 내용이 있을 수 있습니다.) 현직 용접공입니다..그것도 현기차에 납품하는 부품업체에서 일합니다.. 요즘 현대자동차가 잘나간다 라고 말하는대..전 앞으로 솔직히 얼마 안남았다고 생각합니다. 이유는 여러가지가 있겠지만.. 자동차라는게 수만가지 부품으로 만들어집니다..아주조그만 부품하나하나가 매우매우 중요합니다. 지금 제가 하는 부품만 하더라도..용접비드가 약간만 잘못나와도 불량입니다.. 기술쪽으로 있으신분들은 알겠지만&#8230;자동차 부품같은경우에 2티 짜리를 용접하는경우도 있습니다. 물론 백비드가 나오면 안됩니다&#8230;2티짜리를 용접하는대 백비드가 나오면 불량인겁니다.. 여기서 2티라고 하는건 2미리를 이야기 하는겁니다.2미리짜리 철판을 용접하는대..후면에 불룩하게&#8230;]]></description>
						<wfw:commentRss>https://blog.lael.be/post/201/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
							</item>
	</channel>
</rss>
