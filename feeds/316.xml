<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Programmer</title>
<link>https://jason-moon.tistory.com/</link>
<description></description>
<language>ko</language>
<pubDate>Mon, 13 May 2019 00:51:53 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>jason.moon</managingEditor>
<image>
<title>Programmer</title>
<url>http://cfile27.uf.tistory.com/image/252CD34A57D270DD344AE6</url>
<link>https://jason-moon.tistory.com</link>
<description></description>
</image>
<item>
<title>메서드 추출 (Extract Method) 단축키가 작동하지 않을때..</title>
<link>https://jason-moon.tistory.com/148</link>
<description>&lt;p&gt;IntelliJ에서 메서드 추출 (Ctrl + Alt + M) 이 작동하지 않는데, 아무래도 다른 프로그램이 단축키를 선점하고 있는 것 같아 확인해봤다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;범인은 바로 NVIDIA Geforce Experience 였다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;NVIDIA Geforce Experience 를 실행하고, 일반탭에서 설정을 누른다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/ciaPkM/btqtYJ4D6ls/U6vJzBlusKWkF0UV8yWDw1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/ciaPkM/btqtYJ4D6ls/U6vJzBlusKWkF0UV8yWDw1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FciaPkM%2FbtqtYJ4D6ls%2FU6vJzBlusKWkF0UV8yWDw1%2Fimg.png' &gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;그리고 키보드 바로가기 -&amp;gt; 일반 -&amp;gt; 마이크 끄기/켜기 토글의 단축키를 삭제시켜준다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;그럼, 이제부터 메서드 추출 단축키를 사용할 수 있게 된다.&lt;/p&gt;</description>
<category>IntelliJ</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/148</guid>
<comments>https://jason-moon.tistory.com/148#entry148comment</comments>
<pubDate>Mon, 01 Apr 2019 09:47:47 +0900</pubDate>
</item>
<item>
<title>IntelliJ에 Run Dashboard Tool Window 추가하기.</title>
<link>https://jason-moon.tistory.com/147</link>
<description>&lt;section name=&quot;4326&quot; class=&quot;section section--body section--last&quot; style=&quot;padding-bottom: 5px; position: relative; clear: both; color: rgba(0, 0, 0, 0.84); font-family: medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, Cantarell, &amp;quot;Open Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; font-size: 20px;&quot;&gt;&lt;div class=&quot;section-content&quot;&gt;&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; style=&quot;position: relative; max-width: 740px; width: 740px; margin: 0px auto; box-sizing: border-box; padding-left: 20px; padding-right: 20px;&quot;&gt;&lt;p name=&quot;fbb7&quot; id=&quot;fbb7&quot; class=&quot;graf graf--p graf--leading&quot; style=&quot;margin-top: 38px; margin-right: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;&lt;a href=&quot;https://medium.com/@jason.moon.kr/intellij-run-dashboard-not-showing-745feb6b87ae&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;이 곳에서 더 쾌적하게 볼 수 있습니다.&lt;/span&gt;&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;&lt;p name=&quot;fbb7&quot; id=&quot;fbb7&quot; class=&quot;graf graf--p graf--leading&quot; style=&quot;margin-top: 38px; margin-right: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p name=&quot;fbb7&quot; id=&quot;fbb7&quot; class=&quot;graf graf--p graf--leading&quot; style=&quot;margin-top: 38px; margin-right: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;Intellij의 2017.2 버전에서 Run DashBoard라는 기능이 추가되었다.&lt;/p&gt;&lt;p name=&quot;d6a2&quot; id=&quot;d6a2&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;기존에는 run/debug가 서로 다른 Tool Window에서 실행되었는데, Run Dashboard를 사용하면 이를 하나의 Tool Window에서 볼 수 있다.&lt;/p&gt;&lt;p name=&quot;8063&quot; id=&quot;8063&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;어쩌다보니, IDE가 추천을해주서 사용하게 되었는데, 프로젝트를 다시 구성한 후 Run Dashboard를 찾아볼수 없었다.&lt;/p&gt;&lt;p name=&quot;0c6e&quot; id=&quot;0c6e&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;Spring Boot에서 Run Dashboard를 활성화 하기 위해선 먼저 아래의 VM Option을 추가해야한다.&lt;/p&gt;&lt;div name=&quot;c6b7&quot; id=&quot;c6b7&quot; class=&quot;graf graf--mixtapeEmbed graf-after--p&quot; style=&quot;letter-spacing: 0px; font-size: 15px; position: relative; overflow: hidden; max-height: 280px; box-sizing: border-box; color: rgba(0, 0, 0, 0.54); box-shadow: rgba(0, 0, 0, 0.04) 0px 1px 4px, rgba(0, 0, 0, 0.09) 0px 0px 0px 1px inset; display: table; width: 700px; margin-top: 43px;&quot;&gt;&lt;a href=&quot;https://blog.jetbrains.com/idea/2017/05/intellij-idea-2017-2-eap-run-dashboard-for-spring-boot/&quot; data-href=&quot;https://blog.jetbrains.com/idea/2017/05/intellij-idea-2017-2-eap-run-dashboard-for-spring-boot/&quot; class=&quot;markup--anchor markup--mixtapeEmbed-anchor&quot; title=&quot;https://blog.jetbrains.com/idea/2017/05/intellij-idea-2017-2-eap-run-dashboard-for-spring-boot/&quot; rel=&quot;nofollow&quot; style=&quot;background: rgba(255, 255, 255, 0); color: inherit; -webkit-tap-highlight-color: transparent; display: table-cell; vertical-align: middle; padding: 20px;&quot;&gt;&lt;span class=&quot;markup--strong markup--mixtapeEmbed-strong&quot; style=&quot;letter-spacing: 0px; font-size: 18px; line-height: 1.3; color: rgba(0, 0, 0, 0.9); display: block; margin-bottom: -8px;&quot;&gt;IntelliJ IDEA 2017.2 EAP: Run Dashboard for Spring Boot&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;markup--em markup--mixtapeEmbed-em&quot; style=&quot;font-size: 16px; color: rgba(0, 0, 0, 0.68); display: block; margin-top: -1px; margin-bottom: 10px; max-height: 120px; overflow: hidden;&quot;&gt;Last week we've published a new IntelliJ IDEA 2017.2 EAP build, which, among various bugfixes and improvements, brings…&lt;/span&gt;blog.jetbrains.com&lt;/a&gt;&lt;a href=&quot;https://blog.jetbrains.com/idea/2017/05/intellij-idea-2017-2-eap-run-dashboard-for-spring-boot/&quot; class=&quot;js-mixtapeImage mixtapeImage u-ignoreBlock&quot; data-media-id=&quot;e3f54da1f74ddfd0d647918b594ea78d&quot; data-thumbnail-img-id=&quot;0*NKv9fwfwowtOyxTd&quot; style=&quot;background-color: transparent; color: inherit; -webkit-tap-highlight-color: transparent; display: table-cell; vertical-align: middle; width: 160px; height: 160px; background-size: cover; background-repeat: no-repeat; background-position: center center; box-sizing: border-box; box-shadow: rgba(0, 0, 0, 0.09) 0px 0px 0px 1px inset; background-image: url(&amp;quot;https://cdn-images-1.medium.com/fit/c/160/160/0*NKv9fwfwowtOyxTd&amp;quot;);&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;pre name=&quot;9d00&quot; id=&quot;9d00&quot; class=&quot;graf graf--pre graf-after--mixtapeEmbed&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 52px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;-Dide.run.dashboard=true&lt;/em&gt;&lt;/pre&gt;&lt;p name=&quot;408a&quot; id=&quot;408a&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;아래 영상을 참고해서 Option을 추가하자.&lt;/p&gt;&lt;figure name=&quot;d1c6&quot; id=&quot;d1c6&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 700px; margin: 0px auto; max-width: 700px; max-height: 472px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 471.797px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-imageLoaded is-canvasLoaded&quot; data-image-id=&quot;1*akKxAIYHDJtUYom9IvmiCw.gif&quot; data-width=&quot;801&quot; data-height=&quot;540&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*akKxAIYHDJtUYom9IvmiCw.gif&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 700px; height: 471.797px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; cursor: zoom-in; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;50&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 700px; height: 471.797px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*akKxAIYHDJtUYom9IvmiCw.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*akKxAIYHDJtUYom9IvmiCw.gif&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 700px; height: 471.797px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption class=&quot;imageCaption&quot; style=&quot;position: relative; left: 0px; width: 700px; top: 0px; margin-top: 10px; color: rgba(0, 0, 0, 0.68); outline: 0px; text-align: center; z-index: 300; --baseline-multiplier:0.22; font-family: medium-content-sans-serif-font, &amp;quot;Lucida Grande&amp;quot;, &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Sans&amp;quot;, Geneva, Arial, sans-serif; font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;lnum&amp;quot;; font-size: 16px; line-height: 1.4; letter-spacing: 0px;&quot;&gt;add VM&amp;nbsp;Option&lt;/figcaption&gt;&lt;/figure&gt;&lt;p name=&quot;9005&quot; id=&quot;9005&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;그리고 Edit Configuration을 실행하자.&lt;/p&gt;&lt;figure name=&quot;e789&quot; id=&quot;e789&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 700px; margin: 0px auto; max-width: 700px; max-height: 474px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 474.594px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-imageLoaded is-canvasLoaded&quot; data-image-id=&quot;1*loLNUdRIvLojxzsURVD88Q.gif&quot; data-width=&quot;794&quot; data-height=&quot;538&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*loLNUdRIvLojxzsURVD88Q.gif&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 700px; height: 474px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; cursor: zoom-in; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;50&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 700px; height: 474px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*loLNUdRIvLojxzsURVD88Q.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*loLNUdRIvLojxzsURVD88Q.gif&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 700px; height: 474px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption class=&quot;imageCaption&quot; style=&quot;position: relative; left: 0px; width: 700px; top: 0px; margin-top: 10px; color: rgba(0, 0, 0, 0.68); outline: 0px; text-align: center; z-index: 300; --baseline-multiplier:0.22; font-family: medium-content-sans-serif-font, &amp;quot;Lucida Grande&amp;quot;, &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Sans&amp;quot;, Geneva, Arial, sans-serif; font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;lnum&amp;quot;; font-size: 16px; line-height: 1.4; letter-spacing: 0px;&quot;&gt;Edit Configuration&lt;/figcaption&gt;&lt;/figure&gt;&lt;p name=&quot;eb71&quot; id=&quot;eb71&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;그리고 Template을 선택하면 우측 하단에 Configuration avaliable in Run Dashboard 라는 창이 있다. 이 곳에서 아래와 같이 Run Dashboard를 사용할 수 있게 Spring Boot를 추가해주자.&lt;/p&gt;&lt;figure name=&quot;5218&quot; id=&quot;5218&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 646px; margin: 0px auto; max-width: 646px; max-height: 546px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 545.859px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-imageLoaded is-canvasLoaded&quot; data-image-id=&quot;1*ZZrX1a-GiMr13U-kyNbYlQ.gif&quot; data-width=&quot;646&quot; data-height=&quot;546&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 646px; height: 545.859px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;62&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 646px; height: 545.859px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*ZZrX1a-GiMr13U-kyNbYlQ.gif&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*ZZrX1a-GiMr13U-kyNbYlQ.gif&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 646px; height: 545.859px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;p name=&quot;814b&quot; id=&quot;814b&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;추가 후 “OK”를 클릭하면 하단에 Run Dashboard가 추가된 것을 확인할 수 있다.&lt;/p&gt;&lt;figure name=&quot;a041&quot; id=&quot;a041&quot; class=&quot;graf graf--figure graf-after--p graf--trailing&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 668px; margin: 0px auto; max-width: 668px; max-height: 348px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 348.016px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*Jo_JlgjxH7I0eVKYxRWbNg.png&quot; data-width=&quot;668&quot; data-height=&quot;348&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 668px; height: 348px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;37&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 668px; height: 348px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*Jo_JlgjxH7I0eVKYxRWbNg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*Jo_JlgjxH7I0eVKYxRWbNg.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 668px; height: 348px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption class=&quot;imageCaption&quot; style=&quot;position: relative; left: 0px; width: 700px; top: 0px; margin-top: 10px; color: rgba(0, 0, 0, 0.68); outline: 0px; text-align: center; z-index: 300; --baseline-multiplier:0.22; font-family: medium-content-sans-serif-font, &amp;quot;Lucida Grande&amp;quot;, &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Sans&amp;quot;, Geneva, Arial, sans-serif; font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;lnum&amp;quot;; font-size: 16px; line-height: 1.4; letter-spacing: 0px;&quot;&gt;Run Dashboard&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>IntelliJ</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/147</guid>
<comments>https://jason-moon.tistory.com/147#entry147comment</comments>
<pubDate>Wed, 05 Sep 2018 12:37:04 +0900</pubDate>
</item>
<item>
<title>Using IntelliJ File Template</title>
<link>https://jason-moon.tistory.com/144</link>
<description>&lt;section name=&quot;c550&quot; class=&quot;section section--body section--first&quot; style=&quot;position: relative; clear: both; padding-top: 0px; margin-top: 20px;&quot;&gt;&lt;div class=&quot;section-content&quot;&gt;&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; style=&quot;position: relative; max-width: 740px; width: 740px; margin: 0px auto; box-sizing: border-box; padding-left: 20px; padding-right: 20px;&quot;&gt;&lt;h1 name=&quot;5b1a&quot; id=&quot;5b1a&quot; class=&quot;graf graf--h3 graf--leading graf--title&quot; style=&quot;font-size: 42px; margin: 0px 0px 0px -2.63px; font-family: medium-content-sans-serif-font, &amp;quot;Lucida Grande&amp;quot;, &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Sans&amp;quot;, Geneva, Arial, sans-serif; letter-spacing: -0.015em; color: rgba(0, 0, 0, 0.84); --margin-top-multiplier:0; line-height: 1.04; padding-top: 5px !important;&quot;&gt;Using IntelliJ FileTemplate.&lt;/h1&gt;&lt;p name=&quot;33e4&quot; id=&quot;33e4&quot; class=&quot;graf graf--p graf--empty graf-after--h3&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p name=&quot;ecc4&quot; id=&quot;ecc4&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;프로젝트를 진행하다 보면, 동일한 Template의 파일을 여럿 작성하게 된다.&lt;/p&gt;&lt;p name=&quot;7105&quot; id=&quot;7105&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;예를 들면, 아래와 같은 경우이다.&lt;/p&gt;&lt;p name=&quot;4037&quot; id=&quot;4037&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;공통 코드를 조회하는 RestController이다.&lt;/p&gt;&lt;p name=&quot;b0b0&quot; id=&quot;b0b0&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;CommonCodeRestController.java&lt;/p&gt;&lt;pre name=&quot;d42d&quot; id=&quot;d42d&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;import org.springframework.web.bind.annotation.RestController;&lt;/pre&gt;&lt;pre name=&quot;4fd1&quot; id=&quot;4fd1&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;import project.pilot.api.common.base.BaseController;&lt;/pre&gt;&lt;pre name=&quot;857c&quot; id=&quot;857c&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;@RestController&lt;br /&gt;public class CommonCodeRestController extends BaseRestController &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;{&lt;br /&gt;    &lt;/em&gt;private final CommonCodeService commonCodeService;&lt;br /&gt;&lt;br /&gt;    @Autowired&lt;br /&gt;    public CommonCodeController&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;CommonCodeService commonCodeService&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;) {&lt;br /&gt;        &lt;/em&gt;this.commonCodeService = commonCodeService;&lt;br /&gt;    &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;br /&gt;}&lt;/em&gt;&lt;/pre&gt;&lt;p name=&quot;00e7&quot; id=&quot;00e7&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;프로젝트내의 모든 RestController가 위의 코드를 기본으로 하여 만들어진다.&lt;/p&gt;&lt;p name=&quot;6027&quot; id=&quot;6027&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;동일한 프로젝트에서 게시글을 조회하는 RestController는 아래와 같이 만들어진다.&lt;/p&gt;&lt;p name=&quot;782c&quot; id=&quot;782c&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;BoardRestController.java&lt;/p&gt;&lt;pre name=&quot;3fe5&quot; id=&quot;3fe5&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;import org.springframework.web.bind.annotation.RestController;&lt;/pre&gt;&lt;pre name=&quot;78f6&quot; id=&quot;78f6&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;import project.pilot.api.common.base.BaseController;&lt;/pre&gt;&lt;pre name=&quot;20ea&quot; id=&quot;20ea&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;@RestController&lt;br /&gt;public class BoardRestController extends BaseRestController &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;{&lt;br /&gt;    &lt;/em&gt;private final BoardService boardService;&lt;br /&gt;&lt;br /&gt;    @Autowired&lt;br /&gt;    public BoardRestController&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;BoardService boardService&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;) {&lt;br /&gt;        &lt;/em&gt;this.boardService= boardService;&lt;br /&gt;    &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;br /&gt;}&lt;/em&gt;&lt;/pre&gt;&lt;p name=&quot;ee99&quot; id=&quot;ee99&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;두개의 파일에서 다른점을 찾아보면 딱 한개의 단어뿐이다.&lt;/p&gt;&lt;p name=&quot;514b&quot; id=&quot;514b&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;CommonCode가 Board로 바뀌었을뿐이다.&lt;/p&gt;&lt;p name=&quot;65f5&quot; id=&quot;65f5&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;IntelliJ에서는 이런 경우 해당 Template을 저장하여 파일을 만들어낼때마다 불러 쓸 수 있는 기능을 제공한다.&lt;/p&gt;&lt;p name=&quot;998d&quot; id=&quot;998d&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;바로 FileTemplate이다.&lt;/p&gt;&lt;p name=&quot;0d31&quot; id=&quot;0d31&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;File-Settings-Editor-File and Code Template&lt;/p&gt;&lt;figure name=&quot;728d&quot; id=&quot;728d&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 700px; margin: 0px auto; max-width: 700px; max-height: 493px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 492.797px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*oKkKRoNgLMuxcxJm-dBN4g.png&quot; data-width=&quot;974&quot; data-height=&quot;686&quot; data-action=&quot;zoom&quot; data-action-value=&quot;1*oKkKRoNgLMuxcxJm-dBN4g.png&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 700px; height: 492.797px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; cursor: zoom-in; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;52&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 700px; height: 492.797px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*oKkKRoNgLMuxcxJm-dBN4g.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*oKkKRoNgLMuxcxJm-dBN4g.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 700px; height: 492.797px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption class=&quot;imageCaption&quot; style=&quot;position: relative; left: 0px; width: 700px; top: 0px; margin-top: 10px; color: rgba(0, 0, 0, 0.68); outline: 0px; text-align: center; z-index: 300; --baseline-multiplier:0.22; font-family: medium-content-sans-serif-font, &amp;quot;Lucida Grande&amp;quot;, &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Sans&amp;quot;, Geneva, Arial, sans-serif; font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;lnum&amp;quot;; font-size: 16px; line-height: 1.4; letter-spacing: 0px;&quot;&gt;File and Code&amp;nbsp;Template&lt;/figcaption&gt;&lt;/figure&gt;&lt;p name=&quot;bcb4&quot; id=&quot;bcb4&quot; class=&quot;graf graf--p graf--startsWithDoubleQuote graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em; text-indent: -0.4em;&quot;&gt;“+”를 클릭하여 새 Template을 만든다.&lt;/p&gt;&lt;p name=&quot;8898&quot; id=&quot;8898&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;이름은 RestController, 확장자는 java로 한다.&lt;/p&gt;&lt;figure name=&quot;3f77&quot; id=&quot;3f77&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 495px; margin: 0px auto; max-width: 495px; max-height: 310px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 309.859px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*CBVJ6CfPuVkmKrEf-5478g.png&quot; data-width=&quot;495&quot; data-height=&quot;310&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 495px; height: 309.859px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;45&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 495px; height: 309.859px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*CBVJ6CfPuVkmKrEf-5478g.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*CBVJ6CfPuVkmKrEf-5478g.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 495px; height: 309.859px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;figcaption class=&quot;imageCaption&quot; style=&quot;position: relative; left: 0px; width: 700px; top: 0px; margin-top: 10px; color: rgba(0, 0, 0, 0.68); outline: 0px; text-align: center; z-index: 300; --baseline-multiplier:0.22; font-family: medium-content-sans-serif-font, &amp;quot;Lucida Grande&amp;quot;, &amp;quot;Lucida Sans Unicode&amp;quot;, &amp;quot;Lucida Sans&amp;quot;, Geneva, Arial, sans-serif; font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;lnum&amp;quot;; font-size: 16px; line-height: 1.4; letter-spacing: 0px;&quot;&gt;add new File&amp;nbsp;template&lt;/figcaption&gt;&lt;/figure&gt;&lt;p name=&quot;97da&quot; id=&quot;97da&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;이제 아래의 검은색 빈칸에 Template을 등록하자.&lt;/p&gt;&lt;p name=&quot;8419&quot; id=&quot;8419&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;먼저, Class파일을 살짝 컨닝해보도록 하자.&lt;/p&gt;&lt;pre name=&quot;7177&quot; id=&quot;7177&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#if (${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;&amp;amp;&amp;amp; &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;!= &quot;&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;/em&gt;package &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#end&lt;br /&gt;&lt;/em&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;#parse&lt;/span&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;&quot;File Header.java&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;br /&gt;&lt;/em&gt;public class &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;{&lt;br /&gt;}&lt;/pre&gt;&lt;p name=&quot;9af0&quot; id=&quot;9af0&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;Java Class의 Template은 여기서부터 시작한다.&lt;/p&gt;&lt;p name=&quot;07e0&quot; id=&quot;07e0&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;먼저, RestController와 Autowired에 대한 import를 지정한다.&lt;/p&gt;&lt;pre name=&quot;6deb&quot; id=&quot;6deb&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#if (${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;&amp;amp;&amp;amp; &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;!= &quot;&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;/em&gt;package &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#end&lt;/em&gt;&lt;/pre&gt;&lt;pre name=&quot;71f6&quot; id=&quot;71f6&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;import org.springframework.web.bind.annotation.RestController;&lt;/pre&gt;&lt;pre name=&quot;687a&quot; id=&quot;687a&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;#parse&lt;/span&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;&quot;File Header.java&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;br /&gt;&lt;/em&gt;public class &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;{&lt;br /&gt;}&lt;/pre&gt;&lt;p name=&quot;7f2f&quot; id=&quot;7f2f&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;이번엔 RestController Annotation을 추가한다.&lt;/p&gt;&lt;pre name=&quot;6aa1&quot; id=&quot;6aa1&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;#if (${PACKAGE_NAME} &amp;amp;&amp;amp; ${PACKAGE_NAME} != &quot;&quot;)package ${PACKAGE_NAME};#end&lt;/pre&gt;&lt;pre name=&quot;cbcb&quot; id=&quot;cbcb&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;import org.springframework.web.bind.annotation.RestController;&lt;/pre&gt;&lt;pre name=&quot;3d71&quot; id=&quot;3d71&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;#parse(&quot;File Header.java&quot;)&lt;br /&gt;@RestController&lt;br /&gt;public class ${NAME} {&lt;br /&gt;}&lt;/pre&gt;&lt;p name=&quot;6367&quot; id=&quot;6367&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;이번에는 서비스 클래스에 대한 정보를 추가해보자.&lt;/p&gt;&lt;pre name=&quot;e989&quot; id=&quot;e989&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;#if (${PACKAGE_NAME} &amp;amp;&amp;amp; ${PACKAGE_NAME} != &quot;&quot;)package ${PACKAGE_NAME};#end&lt;/pre&gt;&lt;pre name=&quot;8139&quot; id=&quot;8139&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;import org.springframework.web.bind.annotation.RestController;&lt;/pre&gt;&lt;pre name=&quot;b122&quot; id=&quot;b122&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;#parse(&quot;File Header.java&quot;)&lt;br /&gt;@RestController&lt;br /&gt;public class ${NAME} {&lt;br /&gt;    private final &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} ${&lt;/em&gt;SERVICE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;br /&gt;&lt;br /&gt;    @Autowired&lt;br /&gt;    &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;(&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} ${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;) {&lt;br /&gt;        this.&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;= &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;p name=&quot;c7f8&quot; id=&quot;c7f8&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;${SERVICE_NAME} 이라는 값을 추가했는데, 이렇게 되면 파일을 만들때 사용자에게 해당 값을 입력받게 된다.&lt;/p&gt;&lt;p name=&quot;35a4&quot; id=&quot;35a4&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;이제 지금까지 만든 Template을 등록하고 작성해보자.&lt;/p&gt;&lt;p name=&quot;19f9&quot; id=&quot;19f9&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;좌측의 Project Window에서 파일을 생성할 폴더를 선택하고, Alt+Insert를 누르면 아래와 같은 메뉴가 나온다. 등록한 파일 Template의 이름은 RestController를 선택해보자.&lt;/p&gt;&lt;figure name=&quot;4eab&quot; id=&quot;4eab&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 471px; margin: 0px auto; max-width: 471px; max-height: 181px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 180.859px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*KFN2XlligmUZqi1qAF61FQ.png&quot; data-width=&quot;471&quot; data-height=&quot;181&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 471px; height: 180.859px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;27&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 471px; height: 180.859px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*KFN2XlligmUZqi1qAF61FQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*KFN2XlligmUZqi1qAF61FQ.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 471px; height: 180.859px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;p name=&quot;35f7&quot; id=&quot;35f7&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;그럼 위 그림과 같이, SERVICE NAME을 입력 받게 된다.&lt;/p&gt;&lt;p name=&quot;d0d8&quot; id=&quot;d0d8&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;각 필드에 값을 입력하고, OK를 클릭하면 아래 파일이 만들어진다.&lt;/p&gt;&lt;figure name=&quot;1648&quot; id=&quot;1648&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 459px; margin: 0px auto; max-width: 459px; max-height: 283px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 283.188px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*jxWRR0cVI1u0GdTf1ijxGQ.png&quot; data-width=&quot;459&quot; data-height=&quot;283&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 459px; height: 283px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;45&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 459px; height: 283px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*jxWRR0cVI1u0GdTf1ijxGQ.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*jxWRR0cVI1u0GdTf1ijxGQ.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 459px; height: 283px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;p name=&quot;130e&quot; id=&quot;130e&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;문제가 하나 보인다.&lt;/p&gt;&lt;p name=&quot;0bd7&quot; id=&quot;0bd7&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;변수로 선언된 TestService값을 testService로 바꿔줘야할 것 같다.&lt;/p&gt;&lt;p name=&quot;af7b&quot; id=&quot;af7b&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;IntelliJ의 FileTemplate은 Velocity Template languge를 사용한다.&lt;/p&gt;&lt;p name=&quot;c52e&quot; id=&quot;c52e&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;이말인 즉슨, String Class가 가지고 있는 Method나, Velocity에서 제공하는 StringUtils를 사용할 수 있다는 말이다.&lt;/p&gt;&lt;p name=&quot;ecda&quot; id=&quot;ecda&quot; class=&quot;graf graf--p graf-after--p&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;Template에서 사용자 정의값을 설정할 수 있다. Velocity에서 설정하는 방법과 같다.&lt;/p&gt;&lt;pre name=&quot;c56a&quot; id=&quot;c56a&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;#set ($SERVICE_VAR_NAME = $SERVICE_NAME.substring(0,1).toLowerCase() + $SERVICE_NAME.substring(1))&lt;/pre&gt;&lt;p name=&quot;20ec&quot; id=&quot;20ec&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;위의 구분을 넣으면, ${SERVICE_VAR_NAME}에 맨 앞자리 문자를 소문자로 변경한 값을 할당하게 된다.&lt;/p&gt;&lt;blockquote name=&quot;1b25&quot; id=&quot;1b25&quot; class=&quot;graf graf--blockquote graf-after--p&quot; style=&quot;margin: 29px 0px 0px -23px; border-left-width: 3px; border-left-color: rgba(0, 0, 0, 0.84); padding-left: 20px; padding-bottom: 2px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-style: italic; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;안타깝게도 Velocity의 StringUtils에는 맨앞자리 를 대문자와 하는 capitalizeFirstLetter(java.lang.String) Method를 제공하지만, 반대의 경우는 없는 듯하다.&lt;/blockquote&gt;&lt;p name=&quot;dd2d&quot; id=&quot;dd2d&quot; class=&quot;graf graf--p graf-after--blockquote&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;만약 소문자로 입력받은 값의 맨앞자리만을 대문자로 변경하고 싶다면 아래와 같이 설정할 수 있다.&lt;/p&gt;&lt;pre name=&quot;ea3f&quot; id=&quot;ea3f&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;#set ($CAP_SERVICE_NAME = ${StringUtils.capitalizeFirstLetter($SERVICE_NAME)})&lt;/pre&gt;&lt;p name=&quot;0874&quot; id=&quot;0874&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;자, 그럼 설정한 값을 포함하여 다시 Template을 설정하자.&lt;/p&gt;&lt;pre name=&quot;b0cf&quot; id=&quot;b0cf&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap;&quot;&gt;#if (${PACKAGE_NAME} &amp;amp;&amp;amp; ${PACKAGE_NAME} != &quot;&quot;)package ${PACKAGE_NAME};#end&lt;br /&gt;#set ($SERVICE_VAR_NAME = $SERVICE_NAME.substring(0,1).toLowerCase() + $SERVICE_NAME.substring(1))&lt;/pre&gt;&lt;pre name=&quot;e197&quot; id=&quot;e197&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;import org.springframework.web.bind.annotation.RestController;&lt;/pre&gt;&lt;pre name=&quot;dc6b&quot; id=&quot;dc6b&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;#parse(&quot;File Header.java&quot;)&lt;br /&gt;@RestController&lt;br /&gt;public class ${NAME} {&lt;br /&gt;    private final ${SERVICE_NAME} ${SERVICE_VAR_NAME};&lt;/pre&gt;&lt;pre name=&quot;7dde&quot; id=&quot;7dde&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap;&quot;&gt;    @Autowired&lt;br /&gt;    ${NAME} (${SERVICE_NAME} ${SERVICE_VAR_NAME}) {&lt;br /&gt;        this.${SERVICE_VAR_NAME} = ${SERVICE_VAR_NAME};&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;p name=&quot;6d5e&quot; id=&quot;6d5e&quot; class=&quot;graf graf--p graf-after--pre&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;그리고 다시 TestRestController를 생성해보자.&lt;/p&gt;&lt;figure name=&quot;9bfb&quot; id=&quot;9bfb&quot; class=&quot;graf graf--figure graf-after--p&quot; style=&quot;margin: 43px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 466px; margin: 0px auto; max-width: 466px; max-height: 173px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 172.875px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*19rXnmNvTZf5gWgVZ7pxOg.png&quot; data-width=&quot;466&quot; data-height=&quot;173&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 466px; height: 172.875px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;27&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 466px; height: 172.875px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*19rXnmNvTZf5gWgVZ7pxOg.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*19rXnmNvTZf5gWgVZ7pxOg.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 466px; height: 172.875px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;figure name=&quot;c654&quot; id=&quot;c654&quot; class=&quot;graf graf--figure graf-after--figure&quot; style=&quot;margin: 52px 0px 0px; position: relative; clear: both; outline: 0px; box-sizing: border-box; user-select: auto; z-index: 100;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder is-locked&quot; style=&quot;position: relative; width: 465px; margin: 0px auto; max-width: 465px; max-height: 282px;&quot;&gt;&lt;div class=&quot;aspectRatioPlaceholder-fill&quot; style=&quot;padding-bottom: 281.781px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded&quot; data-image-id=&quot;1*ywYGA_r_aLkQGNxAn8uNHw.png&quot; data-width=&quot;465&quot; data-height=&quot;282&quot; data-scroll=&quot;native&quot; style=&quot;position: absolute; top: 0px; left: 0px; width: 465px; height: 281.781px; margin: auto; box-sizing: border-box; background: rgba(0, 0, 0, 0); transition: background 0.2s ease 0s; max-width: 100%;&quot;&gt;&lt;canvas class=&quot;progressiveMedia-canvas js-progressiveMedia-canvas&quot; width=&quot;75&quot; height=&quot;45&quot; style=&quot;display: block; vertical-align: baseline; position: absolute; top: 0px; left: 0px; width: 465px; height: 281.781px; margin: auto; box-sizing: border-box; visibility: hidden; opacity: 0; backface-visibility: hidden; transition: visibility 0s linear 0.5s, opacity 0.1s ease 0.4s;&quot;&gt;&lt;/canvas&gt;&lt;img class=&quot;progressiveMedia-image js-progressiveMedia-image&quot; data-src=&quot;https://cdn-images-1.medium.com/max/800/1*ywYGA_r_aLkQGNxAn8uNHw.png&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*ywYGA_r_aLkQGNxAn8uNHw.png&quot; style=&quot;border: 0px; display: block; position: absolute; top: 0px; left: 0px; width: 465px; height: 281.781px; margin: auto; box-sizing: border-box; z-index: 100; visibility: visible; opacity: 1; backface-visibility: hidden; transition: visibility 0s linear 0s, opacity 0.4s ease 0s;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/figure&gt;&lt;p name=&quot;baad&quot; id=&quot;baad&quot; class=&quot;graf graf--p graf-after--figure&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;어떤가?&lt;/p&gt;&lt;p name=&quot;9a0e&quot; id=&quot;9a0e&quot; class=&quot;graf graf--p graf-after--p graf--trailing&quot; style=&quot;margin-top: 29px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em;&quot;&gt;별것 아니지만, 참 멋진 기능 아닌가?&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;section name=&quot;ea2a&quot; class=&quot;section section--body section--last&quot; style=&quot;padding-bottom: 5px; position: relative; clear: both;&quot;&gt;&lt;div class=&quot;section-divider&quot;&gt;&lt;hr class=&quot;section-divider&quot; style=&quot;box-sizing: content-box; height: 0px; border: 0px; text-align: center; overflow: visible; margin-top: 52px; margin-bottom: 42px;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;section-content&quot;&gt;&lt;div class=&quot;section-inner sectionLayout--insetColumn&quot; style=&quot;position: relative; max-width: 740px; width: 740px; margin: 0px auto; box-sizing: border-box; padding-left: 20px; padding-right: 20px;&quot;&gt;&lt;p name=&quot;3905&quot; id=&quot;3905&quot; class=&quot;graf graf--p graf--leading&quot; style=&quot;margin-top: 38px; margin-right: 0px; margin-left: 0px; --baseline-multiplier:0.17; font-family: medium-content-serif-font, Georgia, Cambria, &amp;quot;Times New Roman&amp;quot;, Times, serif; font-size: 21px; line-height: 1.58; letter-spacing: -0.003em; color: rgba(0, 0, 0, 0.84);&quot;&gt;이렇게 추가하여, 최종적으로 완성한 나의 RestController Template은 아래와 같다.&lt;/p&gt;&lt;pre name=&quot;df41&quot; id=&quot;df41&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#if (${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;&amp;amp;&amp;amp; &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;!= &quot;&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;/em&gt;package &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;PACKAGE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#end&lt;br /&gt;&lt;br /&gt;#if (${&lt;/em&gt;Included_Service_Name_-_optional&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;&amp;amp;&amp;amp; &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;Included_Service_Name_-_optional&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;!= &quot;&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;br /&gt;    &lt;/em&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;#set &lt;/span&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;$&lt;/span&gt;SERVICE_NAME = &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;StringUtils.capitalizeFirstLetter&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;$&lt;/span&gt;Included_Service_Name_-_optional&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)} &lt;/em&gt;+ &quot;Service&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;br /&gt;&lt;/em&gt;import org.springframework.beans.factory.annotation.Autowired;&lt;br /&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#end&lt;br /&gt;&lt;/em&gt;import org.springframework.web.bind.annotation.RestController;&lt;br /&gt;&lt;br /&gt;import project.pilot.api.common.base.BaseRestController;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;#parse&lt;/span&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;&quot;File Header.java&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;br /&gt;&lt;/em&gt;@RestController&lt;br /&gt;public class &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;RestController extends BaseRestController {&lt;br /&gt;    &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#if (${&lt;/em&gt;Included_Service_Name_-_optional&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;&amp;amp;&amp;amp; &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;Included_Service_Name_-_optional&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;!= &quot;&quot;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;br /&gt;    &lt;/em&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;#set &lt;/span&gt;&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;&lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;$&lt;/span&gt;SERVICE_VAR_NAME = &lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;$&lt;/span&gt;SERVICE_NAME.substring&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;0,1&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;)&lt;/em&gt;.toLowerCase&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;() &lt;/em&gt;+ &lt;span class=&quot;markup--strong markup--pre-strong&quot; style=&quot;font-weight: 700;&quot;&gt;$&lt;/span&gt;SERVICE_NAME.substring&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;(&lt;/em&gt;1&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;))&lt;br /&gt;    &lt;/em&gt;private final &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} ${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;br /&gt;    &lt;br /&gt;    @Autowired&lt;br /&gt;    &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;RestController (&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} ${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;) {&lt;br /&gt;        this.&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;} &lt;/em&gt;= &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;${&lt;/em&gt;SERVICE_VAR_NAME&lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;}&lt;/em&gt;;&lt;br /&gt;    }&lt;br /&gt;    &lt;em class=&quot;markup--em markup--pre-em&quot; style=&quot;font-feature-settings: &amp;quot;liga&amp;quot;, &amp;quot;salt&amp;quot;;&quot;&gt;#end&lt;br /&gt;&lt;/em&gt;}&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Java</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/144</guid>
<comments>https://jason-moon.tistory.com/144#entry144comment</comments>
<pubDate>Mon, 13 Aug 2018 16:10:45 +0900</pubDate>
</item>
<item>
<title>fancy tree에서 커스텀 아이콘 추가하기.</title>
<link>https://jason-moon.tistory.com/143</link>
<description>&lt;p&gt;fancy tree를 최초 initailize 할때, icon이라는 함수를 사용해서 icon을 변경할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;icon 함수는 event와 data를 argument로 받고, data의 data.node.data에서 트리의 데이터에 접근할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;node.data에서 특정값을 확인하고 icon을 변경하고 싶으면, 클래스명을 return 하면 되고, return 값이 없다면.. 기본 icon이 적용된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;클래스명이 리턴되면, fancy트리는 해당 노드의 span 태그에&amp;nbsp;fancytree-custom-icon 와 내가 리턴한 클래스명을 클래스로 추가한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 나는 아래와 같이 해당 클래스를 추가하면 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; span.fancytree-custom-icon.fancytree-use-yn-no {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; background-image: url(/resources/images/fancytree/icons.gif);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; background-position: -16px -112px&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; }&lt;/p&gt;</description>
<category>JavaScript</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/143</guid>
<comments>https://jason-moon.tistory.com/143#entry143comment</comments>
<pubDate>Fri, 11 May 2018 11:33:37 +0900</pubDate>
</item>
<item>
<title>Spring Security SessionDestroyListener</title>
<link>https://jason-moon.tistory.com/142</link>
<description>&lt;p&gt;스프링 시큐리티에서 세션 디스트로이 이벤트 전후작업 하기.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사용자가 로그아웃할때, 로그를 남겨야한다는 요구사항이 들어왔다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사용자가 로그아웃 버튼을 클릭해서 로그아웃을 하면, &lt;b&gt;SimpleUrlLogoutSuccessHandler&lt;/b&gt;를 상속받아 &lt;b&gt;onLogoutSuccess&lt;/b&gt;&amp;nbsp;메서드를 구현해서 처리할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Source Code Pro';font-size:10.5pt;&quot;&gt;&lt;span style=&quot;color:#bbb529;&quot;&gt;@Override&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;onLogoutSuccess&lt;/span&gt;(HttpServletRequest request&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;HttpServletResponse response&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;Authentication authentication) &lt;span style=&quot;color:#cc7832;&quot;&gt;throws &lt;/span&gt;IOException&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;ServletException {&lt;br /&gt;    &lt;span style=&quot;color:#808080;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:'맑은 고딕';&quot;&gt;전 작업&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:'맑은 고딕';&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:'맑은 고딕';&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;super&lt;/span&gt;.onLogoutSuccess(request&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;response&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;authentication)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;여기서 문제는, 사용자가 로그아웃 버튼을 클릭해서 로그인을 하는것이 아니라 세션이 만료되어 로그아웃될때를 잡아야 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;세션 만료 이벤트를 잡아서 처리하려면,&amp;nbsp;&lt;b&gt;ApplicationListener&amp;lt;SessionDestroyedEvent&amp;gt;&lt;/b&gt;를 구현하여 처리할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Source Code Pro';font-size:10.5pt;&quot;&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public class &lt;/span&gt;SessionDestroyListener &lt;span style=&quot;color:#cc7832;&quot;&gt;implements &lt;/span&gt;ApplicationListener&amp;lt;SessionDestroyedEvent&amp;gt; {&lt;br /&gt;    &lt;br /&gt;    &lt;span style=&quot;color:#bbb529;&quot;&gt;@Override&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#bbb529;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;onApplicationEvent&lt;/span&gt;(SessionDestroyedEvent event) {&lt;br /&gt;        List&amp;lt;SecurityContext&amp;gt; securityContexts = event.getSecurityContexts()&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;        for &lt;/span&gt;(SecurityContext securityContext : securityContexts) {&lt;br /&gt;            &lt;span style=&quot;color:#808080;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:'맑은 고딕';&quot;&gt;세션 만료시 작업&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;.&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        &lt;/span&gt;}&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;web.xml에 아래 리스너를 등록한다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Source Code Pro';font-size:10.5pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;listener&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;listener-class&amp;gt;&lt;/span&gt;org.springframework.security.web.session.HttpSessionEventPublisher&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/listener-class&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/listener&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;그리고 SessionDestroyListen을 스프링빈으로 등록한다.&lt;/p&gt;</description>
<category>Spring</category>
<category>로그아웃 로그</category>
<category>스프링</category>
<category>시큐리티</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/142</guid>
<comments>https://jason-moon.tistory.com/142#entry142comment</comments>
<pubDate>Mon, 26 Mar 2018 13:37:59 +0900</pubDate>
</item>
<item>
<title>Spring Security 로그인 성공 혹은 실패 후 부가 작업 하기.</title>
<link>https://jason-moon.tistory.com/141</link>
<description>&lt;p&gt;요구사항.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;로그인을 5번 이상 실패하면 계정 잠금 처리.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;먼저 사용자 테이블에 로그인 실패 건수를 업데이트할 컬럼을 생성한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;로그인이 실패하면, 해당 컬럼에 +1 건을 추가하고,&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;로그인을 성공하면, 0으로 초기화 해주는 로직을 넣어보려고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;스프링 시큐리티를 사용하며, 로그인 성공시 부가 작업을 하려면,&amp;nbsp;org.springframework.security.web.authentication.&lt;b&gt;AuthenticationSuccessHandler&lt;/b&gt;를 구현해야 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;별도로 authenticationSuccessHandler를 지정하지 않으면 기본적으로 org.springframework.security.web.authentication.&lt;b&gt;SimpleUrlAuthenticationSuccessHandler&lt;/b&gt;를 사용하게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일반적은 로직은 동일하게 사용하고, 그 전에 로그인 성공에 따른 로그인 실패건수만 0으로 업데이트 해주면 되기 때문에,&amp;nbsp;&lt;b&gt;SimpleUrlAuthenticationSuccessHandler&lt;/b&gt;를 상속 받아 구현하기로 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사용자의 정보를 업데이트 해주는 서비스를 UserService 라고 가정하고, &lt;b&gt;CustomAuthenticationSuccessHandler&lt;/b&gt;를 구현해보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;pre style=&quot;background: rgb(4, 32, 41);&quot;&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(88, 110, 117);&quot;&gt;/**
 * &lt;span style=&quot;color:#859900&quot;&gt;@author&lt;/span&gt; jason, Moon (jason.moon.kr@gmail.com)
 * &lt;span style=&quot;color:#859900&quot;&gt;@since&lt;/span&gt; 2018-03-21
 */&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;
&lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;public&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;class&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(38, 139, 210);&quot;&gt;CustomAuthenticationSuccessHandler&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;extends&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; SimpleUrlAuthenticationSuccessHandler {
    &lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;private&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;final&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;UserService&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; userService;

    &lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;public&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(38, 139, 210);&quot;&gt;CustomAuthenticationSuccessHandler&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; (&lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;UserService&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; userService) {
        &lt;/font&gt;&lt;span style=&quot;color: rgb(38, 139, 210);&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color: rgb(133, 153, 0);&quot;&gt;.&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;userService &lt;/font&gt;&lt;span style=&quot;color: rgb(133, 153, 0);&quot;&gt;=&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; userService;
    }

    &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;@Override&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;
    &lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;public&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;void&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(38, 139, 210);&quot;&gt;onAuthenticationSuccess&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;(&lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;HttpServletRequest&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; httpServletRequest, &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;HttpServletResponse&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; httpServletResponse, &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;Authentication&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; authentication) &lt;/font&gt;&lt;span style=&quot;color: rgb(165, 120, 0);&quot;&gt;throws&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;IOException&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;, &lt;/font&gt;&lt;span style=&quot;color: rgb(115, 138, 5);&quot;&gt;ServletException&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt; {
        &lt;/font&gt;&lt;span style=&quot;color: rgb(88, 110, 117);&quot;&gt;// 로그인 성공시 실패 카운트 초기화&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;
        userService&lt;/font&gt;&lt;span style=&quot;color: rgb(133, 153, 0);&quot;&gt;.&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;clearFailureCount(authentication&lt;/font&gt;&lt;span style=&quot;color: rgb(133, 153, 0);&quot;&gt;.&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;getPrincipal()&lt;/font&gt;&lt;span style=&quot;color: rgb(133, 153, 0);&quot;&gt;.&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;getLoginId());

        &lt;/font&gt;&lt;span style=&quot;color: rgb(38, 139, 210);&quot;&gt;super&lt;/span&gt;&lt;span style=&quot;color: rgb(133, 153, 0);&quot;&gt;.&lt;/span&gt;&lt;font color=&quot;#839496&quot;&gt;onAuthenticationSuccess(httpServletRequest, httpServletResponse, authentication);
    }
}
&lt;/font&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;SimpleUrlAuthenticationSuccessHandler의 onAuthenticationSuccess 메서드를 오버라이딩 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;로그인 성공시 실패 카운트를 초기화하는 로직을 넣고, SimpleUrlAuthenticationSuccessHandler의 onAuthenticationSuccess 메서드를 호출해준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;굉장히 간단하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 생성한 CustomAuthenticationSuccessHandler를 설정해준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#586e75&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#268bd2;font-weight:700&quot;&gt;form&lt;/span&gt;&lt;span style=&quot;color:#93a1a1&quot;&gt;-login&lt;/span&gt; &lt;span style=&quot;color:#93a1a1&quot;&gt;login-page&lt;/span&gt;=&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;/login&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&quot;color:#93a1a1&quot;&gt;login-processing-url&lt;/span&gt;=&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;/login/login-proc&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&quot;color:#93a1a1&quot;&gt;username-parameter&lt;/span&gt;=&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;username&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&quot;color:#93a1a1&quot;&gt;password-parameter&lt;/span&gt;=&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;password&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
                    &lt;span style=&quot;color:#93a1a1&quot;&gt;authentication-success-handler-ref&lt;/span&gt;=&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;customLoginSuccessHandler&lt;span style=&quot;color:#269186&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;/&lt;span style=&quot;color:#586e75&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;&lt;p&gt;&amp;lt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;bean &lt;span style=&quot;color:#268bd2&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;customAuthenticationSuccessHandler&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; class&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;.........CustomLoginSuccessHandler&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#268bd2&quot;&gt;constructor&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;-&lt;/span&gt;arg ref&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;userService&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;/&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color:#859900&quot;&gt;/&lt;/span&gt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;bean&amp;gt;
&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;CustomAuthenticationSuccessHandler에서 userService를 사용할 수 있게 constuctor-arg에 userService를 넘겨준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;CustomAuthenticationSuccessHandler를 bean으로 설정하고, authentication-success-handler로 CustomAuthenticationSuccessHandler를 설정하면 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다만, 이때 form-login 태그에 default-target-url 속성이 정상 작동 하지 않는걸 확인할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;SimpleUrlAuthenticationHandler의 defalultTargetUrl의 값을 넘겨줘야 하는데, CustomAuthenticationSuccessHandler의 생성자에 default-target-url 값을 넘기고, SimpleUrlAuthenticationHandler에 설정해줘야 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;먼저 customAuthenticationSuccessHandler의 생성자에 dafaultTarget 값을 추가한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;&lt;p&gt;&amp;lt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;bean &lt;span style=&quot;color:#268bd2&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;customLoginSuccessHandler&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; class&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;....CustomLoginSuccessHandler&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&amp;gt;
    &amp;lt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#268bd2&quot;&gt;constructor&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;-&lt;/span&gt;arg &lt;span style=&quot;color:#268bd2&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;/main.do&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;/&lt;/span&gt;&amp;gt;
    &amp;lt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#268bd2&quot;&gt;constructor&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;-&lt;/span&gt;arg ref&lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;userService&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;/&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color:#859900&quot;&gt;/&lt;/span&gt;b&lt;span style=&quot;color:#859900&quot;&gt;:&lt;/span&gt;bean&amp;gt;
&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;그리고 두개의 값을 받은 CustomLoginSuccessHanlder의 생성자를 변경해 준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;생성자에서 주입받은 첫번째 파라메터 문자열 값 defaultTargetUrl을 SimpleUrlAuthenticationSuccessHandler의 defaultTargetUrl 값으로 설정해주면, 끝난다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;&lt;span style=&quot;color:#586e75&quot;&gt;/**
 * &lt;span style=&quot;color:#859900&quot;&gt;@author&lt;/span&gt; jason, Moon (jason.moon.kr@gmail.com)
 * &lt;span style=&quot;color:#859900&quot;&gt;@since&lt;/span&gt; 2018-03-21
 */&lt;/span&gt;
&lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a57800&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;CustomAuthenticationSuccessHandler&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;extends&lt;/span&gt; SimpleUrlAuthenticationSuccessHandler {
    &lt;span style=&quot;color:#a57800&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#a57800&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;UserService&lt;/span&gt; userService;

    &lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;CustomAuthenticationSuccessHandler&lt;/span&gt;(&lt;span style=&quot;color:#738a05&quot;&gt;String&lt;/span&gt; defaultTargetUrl, &lt;span style=&quot;color:#738a05&quot;&gt;UserService&lt;/span&gt; userSerivce) {
        &lt;span style=&quot;color:#268bd2&quot;&gt;super&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setDefaultTargetUrl(defaultTargetUrl);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;userSerivce &lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt; userSerivce;
    }

    &lt;span style=&quot;color:#738a05&quot;&gt;@Override&lt;/span&gt;
    &lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;onAuthenticationSuccess&lt;/span&gt;(&lt;span style=&quot;color:#738a05&quot;&gt;HttpServletRequest&lt;/span&gt; httpServletRequest, &lt;span style=&quot;color:#738a05&quot;&gt;HttpServletResponse&lt;/span&gt; httpServletResponse, &lt;span style=&quot;color:#738a05&quot;&gt;Authentication&lt;/span&gt; authentication) &lt;span style=&quot;color:#a57800&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;IOException&lt;/span&gt;, &lt;span style=&quot;color:#738a05&quot;&gt;ServletException&lt;/span&gt; {
        &lt;span style=&quot;color:#586e75&quot;&gt;// 로그인 성공시 실패 카운트 초기화&lt;/span&gt;
        userService&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;clearFailureCount(((&lt;span style=&quot;color:#738a05&quot;&gt;LoginUserVO&lt;/span&gt;)authentication&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;getPrincipal())&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;getLoginId());

        &lt;span style=&quot;color:#268bd2&quot;&gt;super&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;onAuthenticationSuccess(httpServletRequest, httpServletResponse, authentication);
    }
}
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같은 동일한 방식으로 AuthenticationFailureHandler도 구현할수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;동일하게&amp;nbsp;&lt;b&gt;SimpleUrlAuthenticationFailureHandler&lt;/b&gt;를 상속받아 추가하면 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;SimpleUrlAuthenticationFailureHandler에서는&amp;nbsp;&lt;b&gt;onAuthenticationFailure &lt;/b&gt;메서드를 오버라이드 해야하는데, 이때 파라메터로 전달 받는 AuthenticationException이 BadCredentialException의 인스터인 경우에만 실패 건수를 올려주면 된다.&lt;/p&gt;</description>
<category>Spring</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/141</guid>
<comments>https://jason-moon.tistory.com/141#entry141comment</comments>
<pubDate>Wed, 21 Mar 2018 22:59:37 +0900</pubDate>
</item>
<item>
<title>MyBatis에서 프로시져 호출하기.</title>
<link>https://jason-moon.tistory.com/140</link>
<description>&lt;p&gt;MyBatis에서 프로시져를 호출할때, 아래와 같은 오류가 출력된다면..&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;매개 변수 번호 0에 값이 설정되지 않았습니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;MyBatis의 tag에&amp;nbsp;&lt;b&gt;statementType=&quot;CALLABLE&quot; &lt;/b&gt;이 설정되어 있는지 확인하자.&lt;/p&gt;</description>
<category>MyBatis</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/140</guid>
<comments>https://jason-moon.tistory.com/140#entry140comment</comments>
<pubDate>Fri, 16 Mar 2018 10:30:44 +0900</pubDate>
</item>
<item>
<title>ToStringStyle.MULTI_LINE_JSON_STYLE</title>
<link>https://jason-moon.tistory.com/139</link>
<description>&lt;p&gt;Apach CommonLang의 ToStringBuilder를 많이 사용한다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;그런데, 꼭 있을것만 같은 MULTI_LINE_JSON_STYLE이 존재하지 않는다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;그래서 Custom Style을 하나 만들어봤다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;내가 만들고 싶은 스타일은.. 기본적으로 JSON_STYLE 과 MULTI_LINE_STYLE을 합치면서, 또한 null 값은 포함하지 않도록 하고 싶었다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;그렇게 완성한 Custom Style은 아래와 같다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#bd3800&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#586e75&quot;&gt;org.apache.commons.lang3.SystemUtils&lt;/span&gt;;

&lt;span style=&quot;color:#bd3800&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color:#586e75&quot;&gt;org.apache.commons.lang3.builder.ToStringStyle&lt;/span&gt;;

&lt;span style=&quot;color:#586e75&quot;&gt;/**
 * &lt;span style=&quot;color:#859900&quot;&gt;@author&lt;/span&gt; Jason, Moon
 * &lt;span style=&quot;color:#859900&quot;&gt;@since&lt;/span&gt; 2018-03-15.
 */&lt;/span&gt;
&lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a57800&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;CustomToStringStyle&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;extends&lt;/span&gt; ToStringStyle {

    &lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a57800&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#a57800&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;ToStringStyle&lt;/span&gt; MULTI_LINE_JSON_STYLE &lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;CustomToStringStyle&lt;/span&gt;();

    &lt;span style=&quot;color:#a57800&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;CustomToStringStyle&lt;/span&gt;() {
        &lt;span style=&quot;color:#268bd2&quot;&gt;super&lt;/span&gt;();
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setUseClassName(&lt;span style=&quot;color:#b58900&quot;&gt;false&lt;/span&gt;);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setUseIdentityHashCode(&lt;span style=&quot;color:#b58900&quot;&gt;false&lt;/span&gt;);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setContentStart(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;{&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;SystemUtils&lt;/span&gt;&lt;span style=&quot;color:#cb4b16&quot;&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;LINE_SEPARATOR&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#cb4b16&quot;&gt;\t&lt;/span&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setFieldNameValueSeparator(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;: &lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setNullText(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setFieldSeparator(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;,&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;SystemUtils&lt;/span&gt;&lt;span style=&quot;color:#cb4b16&quot;&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;LINE_SEPARATOR&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color:#cb4b16&quot;&gt;\t&lt;/span&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        &lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setContentEnd(&lt;span style=&quot;color:#738a05&quot;&gt;SystemUtils&lt;/span&gt;&lt;span style=&quot;color:#cb4b16&quot;&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;LINE_SEPARATOR&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;+&lt;/span&gt; &lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;}&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
    }

    &lt;span style=&quot;color:#738a05&quot;&gt;@Override&lt;/span&gt;
    &lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;append&lt;/span&gt;(&lt;span style=&quot;color:#738a05&quot;&gt;StringBuffer&lt;/span&gt; buffer, &lt;span style=&quot;color:#738a05&quot;&gt;String&lt;/span&gt; fieldName, &lt;span style=&quot;color:#738a05&quot;&gt;Object&lt;/span&gt; value, &lt;span style=&quot;color:#738a05&quot;&gt;Boolean&lt;/span&gt; fullDetail) {
        &lt;span style=&quot;color:#859900&quot;&gt;if&lt;/span&gt; (value &lt;span style=&quot;color:#859900&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#b58900&quot;&gt;null&lt;/span&gt;) {
            appendFieldStart(buffer, fieldName);
            appendInternal(buffer, fieldName, value, isFullDetail(fullDetail));
            appendFieldEnd(buffer, fieldName);
        }
    }
}
&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;사용은 아래와 같이 하면 된다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;@&lt;span style=&quot;color:#738a05&quot;&gt;Override&lt;/span&gt;
&lt;span style=&quot;color:#738a05&quot;&gt;public &lt;/span&gt;&lt;span style=&quot;color:#738a05&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;toString&lt;/span&gt;() {
    &lt;span style=&quot;color:#859900&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;ToStringBuilder&lt;/span&gt;.reflectionToString(&lt;span style=&quot;color:#268bd2&quot;&gt;this&lt;/span&gt;, &lt;span style=&quot;color:#738a05&quot;&gt;CustomToStringStyle&lt;/span&gt;.&lt;span style=&quot;color:#cb4b16&quot;&gt;MULTI_LINE_JSON_STYLE&lt;/span&gt;);
}
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;아래와 같이 테스트하면,&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;&lt;span style=&quot;color:#586e75&quot;&gt;/**
 * &lt;span style=&quot;color:#859900&quot;&gt;@author&lt;/span&gt; Jason, Moon
 * &lt;span style=&quot;color:#859900&quot;&gt;@since&lt;/span&gt; 2018-03-15.
 */&lt;/span&gt;
&lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a57800&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;ToStringTest&lt;/span&gt; {

    &lt;span style=&quot;color:#738a05&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color:#a57800&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#268bd2&quot;&gt;main&lt;/span&gt;() {
        &lt;span style=&quot;color:#738a05&quot;&gt;FreeBoardDTO&lt;/span&gt; freeBoardDTO &lt;span style=&quot;color:#859900&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#738a05&quot;&gt;FreeBoardDTO&lt;/span&gt;();

        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue1(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value1&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue2(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value2&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue3(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value3&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue4(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value4&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue5(&lt;span style=&quot;color:#b58900&quot;&gt;null&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue6(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value6&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue7(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value7&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue8(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value8&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
        freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;setValue9(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;value9&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);

        &lt;span style=&quot;color:#738a05&quot;&gt;System&lt;/span&gt;&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;out&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;println(&lt;span style=&quot;color:#269186&quot;&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;freeBoardDTO.toString() = &lt;span style=&quot;color:#cb4b16&quot;&gt;\n&lt;/span&gt;&lt;span style=&quot;color:#c60000&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#859900&quot;&gt;+&lt;/span&gt; freeBoardDTO&lt;span style=&quot;color:#859900&quot;&gt;.&lt;/span&gt;toString());
    }
}

&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;이런 결과가 나온다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background:#042029;color:#839496&quot;&gt;freeBoardDTO.toString() = 
{
    value1&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value1,
    value2&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value2,
    value3&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value3,
    value4&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value4,
    value6&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value6,
    value7&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value7,
    value8&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value8,
    value9&lt;span style=&quot;color:#859900&quot;&gt;: &lt;/span&gt;value9
}
&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Java</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/139</guid>
<comments>https://jason-moon.tistory.com/139#entry139comment</comments>
<pubDate>Thu, 15 Mar 2018 22:43:59 +0900</pubDate>
</item>
<item>
<title>MyBatis에서 Paging 처리 하기.</title>
<link>https://jason-moon.tistory.com/138</link>
<description>&lt;h2&gt;MyBatis를 통해서 Paging 처리 하기. (MS-SQL 2012 이상)&lt;/h2&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;최근 진행중인 프로젝트를 마무리 해가며, 뒤로 뒤로.. 미뤄둔 공통 Paging 작업을 처리했다.&lt;/p&gt;&lt;p&gt;반영할 운영서버에서는 MS-SQL을 사용하고 있었고, 버전은 2016으로 최신버전이었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;MS-SQL에서 페이징을 처리하는 방법은 크게&amp;nbsp;2가지로 요약할 수 있다고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1. ROW_NUMBER 함수를 이용하는 방법.&lt;/p&gt;&lt;p&gt;서브 쿼리에서 ROW_NUMBER 함수를 이용해 행번호를 할당하고, 상위 쿼리에서 이를 기준으로 필터링하는 방법이다.&lt;/p&gt;&lt;p&gt;대략 아래와 같은 구조를 가지게 된다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Fira Code';font-size:10.5pt;&quot;&gt;&lt;p&gt;SELECT &lt;span style=&quot;color:#ffc66d;&quot;&gt;*&lt;br /&gt;&lt;/span&gt;FROM&lt;br /&gt;(&lt;br /&gt;    SELECT  ROW_NUMBER() OVER(ORDER BY ..) AS ROW_NUM,&lt;br /&gt;    ...&lt;br /&gt;)&lt;br /&gt;WHERE ROW_NUM BETWEEN (#{pageNumber} - 1) * (#{rowsPerPage} + 1) AND (#{pageNumber} * #{rowsPerPage})&lt;br /&gt;ORDER BY ..&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2. OFFSET/FETCH 를 사용하는 방법.&lt;/p&gt;&lt;p&gt;SQL SERVER 2012 에서 추가된, 페이징 전용 쿼리다.&lt;/p&gt;&lt;p&gt;대략 아래와 같은 구조를 가지게 된다.&lt;/p&gt;&lt;div&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Fira Code';font-size:10.5pt;&quot;&gt;&lt;p&gt;SELECT ..&lt;br /&gt;FROM ..&lt;br /&gt;ORDER BY ..&lt;br /&gt;OFFSET ((#{pageNumber} - 1) * #{rowsPerPage}) ROWS&lt;br /&gt;FETCH NEXT #{rowsPerPage} ROWS ONLY&lt;/p&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;SQL SERVER의 버전에 따라서 두가지 방법 중 한가지를 선택하면 된다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;물론&amp;nbsp;&lt;/span&gt;2012 이상의 버전을 사용하고 있다면, 2번(OFFSET/FETCH) 방법을 추천한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;두가지 방법의 차이점은 &lt;a href=&quot;http://social.technet.microsoft.com/wiki/contents/articles/23811.paging-a-query-with-sql-server.aspx&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;화면에서 페이징을 처리하기 위해서는 아래의 몇가지의 값이 필요하다.&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;1. PageNumber - 표시할 페이지 번호.&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;2. RowsPerPage - 한페이지에 표시할 데이터의 건수.&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;3. TotalCount - 조회된 총 데이터의 건수.&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;4. TotalPage - 표시할 총 페이지의 건수.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;PageNumber와 RowsPerPage는 화면에서 전달되는 파라메터일 것 이다.&lt;/p&gt;&lt;p&gt;이를 가지고 조회된 TotalCount 를 RowsPerPage로 나누고 올림하면 TotalPage 를 도출 할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;만약 105건의 레코드가 존재 하고, 한페이지에 표시할 행의 수가 10건이라면, 여기에서는 11개의 페이지가 필요하게 된다.&lt;/p&gt;&lt;p&gt;105 / 10 = 10.5 이고 이를 올림하면 11이 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;계산을 어디에서 해도 되지만, 나는 MyBatis의 &lt;a href=&quot;http://www.mybatis.org/mybatis-3/ko/sqlmap-xml.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;include 태그&lt;/a&gt;를 최대한 활용하기 위해, 쿼리에서 모두 해결하기로 했다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.mybatis.org/mybatis-3/ko/sqlmap-xml.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;include 태그&lt;/a&gt;는 MyBatis에서 반복되는 쿼리문을 저장하여 사용할 수 있는 방법이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하나의 쿼리에서 모든 작업을 하기 위해 WITH 문을 사용하기로 했다.&lt;/p&gt;&lt;p&gt;모든 조회 쿼리의 상단(header) 하단(footer)에 추가될 공통 SQL문을 저장하고, 모든 Select의 상, 하단에 inlcude 하는 방법이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Paging 을 위해&amp;nbsp;&lt;b&gt;header SQL&lt;/b&gt;과 &lt;b&gt;footer SQL&lt;/b&gt;을 저장하기 위한, &lt;b&gt;PaginationMapper.xml&lt;/b&gt; 을 추가하고 아래와 같이 작성한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;xml version&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;1.0&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;encoding&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;UTF-8&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;?&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;!DOCTYPE &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;mapper &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;PUBLIC &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;mapper &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;namespace&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;PaginationMapper&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;sql &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;header&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &lt;/span&gt;WITH&lt;br /&gt;        SEARCH_ORG&lt;br /&gt;        AS&lt;br /&gt;        (&lt;br /&gt;    &lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/sql&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;sql &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;footer&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &lt;/span&gt;),&lt;br /&gt;        TOTAL_COUNT                                                 &lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;!-- [총건수] --&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        &lt;/span&gt;AS&lt;br /&gt;        (&lt;br /&gt;        SELECT  COUNT(1)                            AS TOTAL_COUNT&lt;br /&gt;        FROM    SEARCH_ORG                          A1              &lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;!-- [조회원본] --&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        &lt;/span&gt;)&lt;br /&gt;        SELECT  A1.&lt;span style=&quot;color:#ffc66d;&quot;&gt;*&lt;/span&gt;,&lt;br /&gt;                B1.TOTAL_COUNT,&lt;br /&gt;                ISNULL(#{pageNumber}, 1)            AS PAGE_NUMBER,&lt;br /&gt;                CEILING(&lt;span style=&quot;color:#ffc66d;font-style:italic;&quot;&gt;CONVERT&lt;/span&gt;(FLOAT, B1.TOTAL_COUNT) / ISNULL(#{rowPerPage}, 10))&lt;br /&gt;                                                    AS TOTAL_PAGE&lt;br /&gt;        FROM    SEARCH_ORG                          A1              &lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;!-- [조회원본] --&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        &lt;/span&gt;CROSS JOIN&lt;br /&gt;                TOTAL_COUNT                         B1              &lt;span style=&quot;color:#808080;&quot;&gt;&amp;lt;!-- [총페이지] --&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        &lt;/span&gt;ORDER BY&lt;br /&gt;                A1.${ORDER} DESC&lt;br /&gt;        OFFSET (ISNULL(#{pageNumber}, 1) - 1) * ISNULL(#{rowPerPage}, 10) ROWS&lt;br /&gt;        FETCH NEXT ISNULL(#{rowPerPage}, 10) ROWS ONLY&lt;br /&gt;    &lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/sql&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/mapper&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;실제로 조회되는 쿼리는 아래와 같이 작성한다.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Fira Code';font-size:10.5pt;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;select &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;selectList&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;include &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;refid&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;PaginationMapper.header&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;    SELECT&lt;br /&gt;        ...&lt;br /&gt;    FROM&lt;br /&gt;        ...&lt;br /&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;include &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;refid&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;PaginationMapper.footer&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;property &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;ORDER&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;value&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;=&quot;...&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;/include&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;SQL SERVER의 &lt;b&gt;OFFSET/FETCH&lt;/b&gt; 문을 사용하기 위해서는, 필수로 &lt;b&gt;ORDER BY &lt;/b&gt;절이 필요하다.&lt;/p&gt;&lt;p&gt;공통 &lt;b&gt;PaginationMapper.header&lt;/b&gt; 와 &lt;b&gt;PaginationMapper.footer &lt;/b&gt;를 사용하는 다수의 쿼리에서 정렬 기준이 모두 다를 수 있으므로, include 태그의 property 태그를 사용하여 직접 정렬 기준 컬럼을 설정하도록 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;조회를 하면, 조회된 모든 행에 총 건수(TotalCount)와 총 페이지 건수(TotalPage)가 조회된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이것을 프론트단에 전달하며 프론트단의 페이징 처리를 하면 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;필자는 jQuery의 &lt;a href=&quot;https://esimakin.github.io/twbs-pagination/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Pagination Plugin&lt;/a&gt;을 사용했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;#mybatis #paging #pagination&lt;/p&gt;</description>
<category>MyBatis</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/138</guid>
<comments>https://jason-moon.tistory.com/138#entry138comment</comments>
<pubDate>Sat, 31 Dec 2016 17:35:04 +0900</pubDate>
</item>
<item>
<title>Thymeleaf에서 날짜 관련 Utility 사용하기.</title>
<link>https://jason-moon.tistory.com/137</link>
<description>&lt;p&gt;Thymeleaf를 사용할때, 개발자는 꽤 많은 유틸리티를 사용할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 중, 날짜 관련 유틸인&amp;nbsp;&lt;b&gt;#dates&lt;/b&gt;&amp;nbsp;는 java.utils.Date 오브젝트를 위한 유틸리티이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아래와 같은 표현식을 사용할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3 style=&quot;box-sizing: inherit; font-style: italic; line-height: 1.5em; margin: 0.5em 0px; padding-top: 0.5em; padding-bottom: 0.5em; border-bottom: 1px solid rgb(0, 95, 15); font-size: 1.25em; color: rgb(51, 51, 51); font-family: Ubuntu, sans-serif;&quot;&gt;Dates&lt;/h3&gt;&lt;ul style=&quot;box-sizing: inherit; margin: 1em 0px 1em 2em; padding: 0px; color: rgb(51, 51, 51); font-family: Ubuntu, sans-serif; font-size: 16px;&quot;&gt;&lt;li style=&quot;box-sizing: inherit;&quot;&gt;&lt;strong style=&quot;box-sizing: inherit;&quot;&gt;#dates&lt;/strong&gt;&amp;nbsp;: utility methods for&amp;nbsp;&lt;code style=&quot;box-sizing: inherit; font-family: &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 1em; color: rgb(112, 112, 112); font-weight: bold; padding: 0.25em; word-wrap: break-word;&quot;&gt;java.util.Date&lt;/code&gt;&amp;nbsp;objects:&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;  language-java&quot; style=&quot;box-sizing: inherit; font-family: &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 16px; background-color: rgb(51, 51, 51); line-height: 1.25em; overflow: auto; padding: 1em; color: rgb(51, 51, 51);&quot;&gt;&lt;code class=&quot;  language-java&quot; style=&quot;box-sizing: inherit; font-family: &amp;quot;Ubuntu Mono&amp;quot;, monospace; font-size: 1em; color: rgb(185, 189, 182);&quot;&gt;&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * ======================================================================
 * See javadoc API for class org.thymeleaf.expression.Dates
 * ======================================================================
 */&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Format date with the standard locale format
 * Also works with arrays, lists or sets
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;arrayFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesArray&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;listFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesList&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;setFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesSet&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Format date with the ISO8601 format
 * Also works with arrays, lists or sets
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;formatISO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;arrayFormatISO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesArray&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;listFormatISO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesList&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;setFormatISO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesSet&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Format date with the specified pattern
 * Also works with arrays, lists or sets
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;box-sizing: inherit; color: rgb(224, 232, 255);&quot;&gt;'dd/MMM/yyyy HH:mm'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;arrayFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesArray&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;box-sizing: inherit; color: rgb(224, 232, 255);&quot;&gt;'dd/MMM/yyyy HH:mm'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;listFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesList&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;box-sizing: inherit; color: rgb(224, 232, 255);&quot;&gt;'dd/MMM/yyyy HH:mm'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;setFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;datesSet&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;box-sizing: inherit; color: rgb(224, 232, 255);&quot;&gt;'dd/MMM/yyyy HH:mm'&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Obtain date properties
 * Also works with arrays, lists or sets
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;                    &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayDay(...), listDay(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;                  &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayMonth(...), listMonth(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;monthName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;              &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayMonthName(...), listMonthName(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;monthNameShort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;         &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayMonthNameShort(...), listMonthNameShort(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;                   &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayYear(...), listYear(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;dayOfWeek&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;              &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayDayOfWeek(...), listDayOfWeek(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;dayOfWeekName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;          &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;dayOfWeekNameShort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;     &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;                   &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayHour(...), listHour(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;                 &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayMinute(...), listMinute(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;                 &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arraySecond(...), listSecond(...), etc.&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;millisecond&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;            &lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;// also arrayMillisecond(...), listMillisecond(...), etc.&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Create date (java.util.Date) objects from its components
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;month&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;day&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;month&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;day&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;hour&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;minute&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;month&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;day&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;hour&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;minute&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;second&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;month&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;day&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;hour&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;minute&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;second&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;,&lt;/span&gt;millisecond&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Create a date (java.util.Date) object for the current date and time
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;createNow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;createNowForTimeZone&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot; style=&quot;box-sizing: inherit; color: rgb(207, 154, 73);&quot;&gt;/*
 * Create a date (java.util.Date) object for the current date (time set to 00:00)
 */&lt;/span&gt;
$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;createToday&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;

$&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;{&lt;/span&gt;#dates&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;box-sizing: inherit;&quot;&gt;createTodayForTimeZone&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;box-sizing: inherit;&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Spring</category>
<author>jason.moon</author>
<guid>https://jason-moon.tistory.com/137</guid>
<comments>https://jason-moon.tistory.com/137#entry137comment</comments>
<pubDate>Sat, 17 Dec 2016 14:57:57 +0900</pubDate>
</item>
</channel>
</rss>