<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[길당님의블로그]]></title>
			<link>https://blog.naver.com/hgh73</link>
			
				<image>
					<url><![CDATA[https://blogpfthumb-phinf.pstatic.net/20150623_280/hgh73_1435047846071SjoE5_JPEG/logo.jpg?type=m2]]></url>
					<title><![CDATA[길당님의블로그]]></title>
					<link>https://blog.naver.com/hgh73</link>
				</image>
			
			<description><![CDATA[기업형홈페이지,쇼핑몰 
반응형워드프레스 홈페이지 
제작☏070-7079-1946
www.haopress.com
]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Mon, 13 May 2019 03:33:07 +0900</pubDate>

			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[기억되지 않는 고독에서 즐거움을 찾았을 때 비로소 자신의 자유가  산다.]]></title>
					<link>https://blog.naver.com/hgh73/221196487578</link>
					<guid>https://blog.naver.com/hgh73/221196487578</guid>
					<description><![CDATA[오랜만에 글을 올리는 군요. 길당 홍길한이라 합니다. 오랜동안 네이버에서 침묵하고 있었습니다. 참, 오랜 시간이 흘러갔군요. 세상도 많이도 변하고, 트렌드도 가파르게 빨리 변하고 있죠. 저는 그 동안 잘 지냈습니다. 여기서 활동은 중단하였지만, 주로 페이스북을 통해 활동을 활발하게 하곤 했습니다. 그렇기는 하지만, 이 블로그는 제가 독학으로 공부한 자료들을 처음으로 오래도록 처음으로 공유하던 저의 제 2의 고향과도 같은 곳입니다. 종종 글을 쓰고팠는데, 왜인지 쉽게 되지 않더군요.. 자주는 아니더라도 잡담이라도 올리곤 하거나, 필요한 정보는 적어두고 싶어집니다. 여러분 모두 반갑습니다. ^^]]></description>
					<pubDate>Mon, 29 Jan 2018 23:24:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[ipython에 대한 제가 공부한 내용 일부입니다.]]></title>
					<link>https://blog.naver.com/hgh73/220953687261</link>
					<guid>https://blog.naver.com/hgh73/220953687261</guid>
					<description><![CDATA[=============================================================== IPython 기본 IPython은 일반 파이썬 인터프리터를 실행시키듯이 ipython 명령어를 입력해서 실행시킬 수 있다. gildang@gildang-P5Q ~/BioinformaticsProgrammingUsingPython $ ipython Python 2.7.5+ (default, Feb 27 2014, 19:39:55) Type "copyright", "credits" or "license" for more information. IPython 2.1.0 -- An enhanced Interactive Python. ? -&gt; Introduction and overview of IPython's features. %quickref -&gt; Quick reference. help -&gt; Python's own help system. object? -&gt; Details about 'object', use 'object??' for extra details. In [.......]]></description>
					<pubDate>Thu, 09 Mar 2017 09:53:12 +0900</pubDate>
					<tag><![CDATA[ipython]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[warnings 모듈]]></title>
					<link>https://blog.naver.com/hgh73/220647435252</link>
					<guid>https://blog.naver.com/hgh73/220647435252</guid>
					<description><![CDATA[안녕하세요,저는 길당홍길한이라 합니다. 오늘은 오랜만에 파이썬에 관한 글을 공유합니다. ============================================================================ warnings warnings 모듈은 경고 메시지를 출력하고 걸러내는 기능을 제공한다. 예외와는 달리, 경고는 예외를 생성하거나 실행을 멈추게 하지 않고 잠재적인 문제를 사용자에게 알리는 것이 목적이다. warnings 모듈의 주 사용처 중 하나는 미래의 파이썬 버전에서 지원되지 않을 수 있는 사용이 권장되지 않은 언어 기능에 관해서 사용자에게 알리는 데 있다. 다음 예를 보자. &gt;&gt;&gt; import regex _ _main_ _:1: DeprecationWarning: the regex module is deprec.......]]></description>
					<pubDate>Sun, 06 Mar 2016 22:40:34 +0900</pubDate>
					<tag><![CDATA[python]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[시스템 콜 성능]]></title>
					<link>https://blog.naver.com/hgh73/220643025586</link>
					<guid>https://blog.naver.com/hgh73/220643025586</guid>
					<description><![CDATA[시스템 콜 성능 리눅스의 시스템 콜은 다른 많은 운영체제보다 빠르다. 이것은 부분적으로는 리눅스의 컨텍스트 스위칭이 매우 빠르기 때문이다. 즉 커널에 진입했다가 빠져나가는 일이 매우 쉽다. 다른 한 가지 요소는 시스템 콜 핸들러와 시스템 콜 자체가 매우 단순하게 구현되었기 때문이다. 시스템 콜 핸들러 유저공간의 응용프로그램이 직접 커널 코드를 호출하는 것은 불가능하다. 그 이유는 단순하다. 즉 커널은 보호된 메모리 공간 안에 있으므로 커널공간의 코드를 호출하는 것이 불가능하기 때문이다. 만약 응용프로그램이 직접 커널 주소 공간에 쓰기를 할 수 있다면, 시스템 보안은 물건너 갈 것이기 때문이다. 대신 유저공간 응용.......]]></description>
					<pubDate>Wed, 02 Mar 2016 01:48:39 +0900</pubDate>
					<tag><![CDATA[리눅스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[안녕하세요]]></title>
					<link>https://blog.naver.com/hgh73/220639690756</link>
					<guid>https://blog.naver.com/hgh73/220639690756</guid>
					<description><![CDATA[안녕하세요,한 동안 글을 올리지 않았습니다. 제가 공식적으로 책 집필을 하게 되어서, 정리의 시간이 필요했습니다. 하지만, 시간이 마무리가 되면, 다시 예전처럼 글도 쓰고 할 것입니다. 감사해요 ^^]]></description>
					<pubDate>Sat, 27 Feb 2016 12:36:09 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[opencv]]></category>
					<title><![CDATA[opencv 카메라로부터 입력받기]]></title>
					<link>https://blog.naver.com/hgh73/220598993035</link>
					<guid>https://blog.naver.com/hgh73/220598993035</guid>
					<description><![CDATA[안녕하세요, 저는 길당 홍길한이라 합니다. 오늘은 Opencv에서 카메라 장치로부터 실시간으로 입력되는영상 데이터를 처리하는 것이 가능하다는 것을 결과물로 보여드리며, 코드도 함께 공유합니다. 다음은 코드 입니다. ----------------------------- /* License: Oct. 3, 2008 Right to use this code in any way you want without warrenty, support or any guarentee of it working. BOOK: It would be nice if you cited it: Learning OpenCV: Computer Vision with the OpenCV Library by Gary Bradski and Adrian Kaehler Published by O'Reilly Media, October 3, 2008 AVAILABLE AT: http://www.amazon.com/Learning-OpenCV-Computer-V.......]]></description>
					<pubDate>Sat, 16 Jan 2016 01:55:12 +0900</pubDate>
					<tag><![CDATA[opencv,camera]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[IT]]></category>
					<title><![CDATA[2016년 1월 15일 오후 6시 27분에 저장한 글입니다.]]></title>
					<link>https://blog.naver.com/hgh73/220598663628</link>
					<guid>https://blog.naver.com/hgh73/220598663628</guid>
					<description><![CDATA[안녕하세요, 저는 길당 홍길한이라 합니다. 오늘은 간단하게만 글을 적습니다. opencv 라는 것을 통해서,avi 재생을 해 보았습니다. ----------------------- 간단한 코드입니다.파이썬.. --------------------------- import numpy as np import cv2 cap = cv2.VideoCapture('vtest.avi') while(cap.isOpened()): ret, frame = cap.read() gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY) cv2.imshow('frame',gray) if cv2.waitKey(1) &amp; 0xFF == ord('q'): break cap.release() cv2.destroyAllWindows() -------------------------------------- 감사합니다. ^^ 이 코드의 출처는 다음과 같습니다. http://docs.opencv.org/3.0-beta/doc/py.......]]></description>
					<pubDate>Fri, 15 Jan 2016 18:27:27 +0900</pubDate>
					<tag><![CDATA[opencv,avi]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[pygal web 사용하기]]></title>
					<link>https://blog.naver.com/hgh73/220593450396</link>
					<guid>https://blog.naver.com/hgh73/220593450396</guid>
					<description><![CDATA[안녕하세요, 오늘 제가 파이썬 코드에서그래픽 파일을 생성하면, 그 그래픽 파일을 html에서불러 들여, 표현하는 간단한 작업을 해보았습니다. 여기에 사용된 파이썬 모듈은 pygal이라는 것입니다. 다음은 코드입니다. gildang@gildang-P5Q /var/www/html $ cat ~/plot_pygal.py #!/usr/bin/python import pygal bar_chart = pygal.Bar() bar_chart.add('Fibonacci', [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]) bar_chart.render_to_file('bar_chart.svg') bar_chart.render_to_png(filename='bar_chart.png') gildang@gildang-P5Q /var/www/html $ 이것을 다음과 같이 하였습니다. gildang@gildang-P5Q ~ $ vim plot_pygal2.py gildang@gildang-P5.......]]></description>
					<pubDate>Sun, 10 Jan 2016 22:24:50 +0900</pubDate>
					<tag><![CDATA[pygal]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[php]]></category>
					<title><![CDATA[gtk2 for php]]></title>
					<link>https://blog.naver.com/hgh73/220588904716</link>
					<guid>https://blog.naver.com/hgh73/220588904716</guid>
					<description><![CDATA[안녕하세요, 장시간 도전을 한 것이 있습니다.저는 길당 홍길한이라 합니다. 리눅스 민트에서 APM을 설치하고 나서cario.so와 php-gtk2.so 을 설치하고 나서 콘솔에서 php 명령으로 일단 띄워 올리는 데 까지는 성공 하였습니다. 코드는 다음과 같습니다. ---------------------------------- gildang@gildang-P5Q /var/www/html $ cat gtkhello.php &lt;?php /* ZetCode PHP GTK tutorial This code example draws basic shapes with the Cairo library. author: Jan Bodnar website: www.zetcode.com last modified: August 2011 */ class Example extends GtkWindow { public function __construct() { parent::__construct(); $this-&gt;init.......]]></description>
					<pubDate>Wed, 06 Jan 2016 03:31:50 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[linux c binary file simple deb file making]]></title>
					<link>https://blog.naver.com/hgh73/220587771530</link>
					<guid>https://blog.naver.com/hgh73/220587771530</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 자신이 만든 리눅스 파일 을 컴파일하여 직접 deb 패키지 파일으로 만들어 인스톨하여쓰는 것을 학습해 보기로 합니다. 먼저 이번에 쓸 포트 스캐너 예제입니다. /* Port scanner code in c */ #include&lt;stdio.h&gt; #include&lt;sys/socket.h&gt; #include&lt;errno.h&gt; #include&lt;netdb.h&gt; #include&lt;string.h&gt; #include&lt;stdlib.h&gt; int main(int argc , char **argv) { struct hostent *host; int err, i , sock ,start , end; char hostname[100]; struct sockaddr_in sa; //Get the hostname to scan printf("Enter hostname or IP : "); gets(hostname); //Get start .......]]></description>
					<pubDate>Tue, 05 Jan 2016 00:51:45 +0900</pubDate>
					<tag><![CDATA[deb,dpkg]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[php]]></category>
					<title><![CDATA[입력 보안 처리]]></title>
					<link>https://blog.naver.com/hgh73/220586230614</link>
					<guid>https://blog.naver.com/hgh73/220586230614</guid>
					<description><![CDATA[이제 PHP 프로그래밍으로 돌아간다. 사용자 데이터 처리는 보안의 지뢰밭이고,그러한 모든 데이터는 반드시 페이지 시작부터 매우 조심해서 다뤄야 한다고아무리 강조해도 지나치지 않는다. 사실, 잠재적인 공격으로부터 사용자 입력을 보호하는 것은 그리 어려운 일은 아니지만꼭 해야만 하는 것이다. 반드시 기억해야 할 것은 입력 형식과 크기를 제한하는 HTML 폼의 제한 사항에관계없이 해커에게는 브라우저의 소스 보기 기능으로 폼을 추출하고수정한 다음 웹 사이트에 악의적으로 입력하는 것은 쉬운 일이라는 것이다. $_GET이나 $_POST 배열을 처리하기 전까지는 어떤 변수도 믿어서는 안 된다. 그렇지 않다면 사용자는 사이트의 동작을 방.......]]></description>
					<pubDate>Sun, 03 Jan 2016 15:34:13 +0900</pubDate>
					<tag><![CDATA[php]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[gtk theme 만들기]]></title>
					<link>https://blog.naver.com/hgh73/220585727857</link>
					<guid>https://blog.naver.com/hgh73/220585727857</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 리눅스 민트에서 직접 gtk 테마를 만들어 보기로 합니다. 먼저 현재 설정되어 있는 테마는다음과 같습니다. 이것을 이제 변화시켜 보기로 합니다. 먼저 필요한 것은 다음과 같습니다. sudo apt-get install libgtk2.0-dev and sudo apt-get install libgtk-3-dev 이렇게 해서 패키지를 설치하고 AWF - A Widget Factory 라는 것을 설치합니다. Ubuntu For Oneiric Ocelot: sudo add-apt-repository ppa:valere-monseur/oneiric For Precise Pangolin: sudo add-apt-repository ppa:valere-monseur/precise For Quantal Quetzal: sudo add-apt-repository ppa:valere-monseur/quantal sudo apt-ge.......]]></description>
					<pubDate>Sat, 02 Jan 2016 21:17:09 +0900</pubDate>
					<tag><![CDATA[gtk,theme]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[라이브러리 함수들]]></title>
					<link>https://blog.naver.com/hgh73/220585179988</link>
					<guid>https://blog.naver.com/hgh73/220585179988</guid>
					<description><![CDATA[안녕하세요, 출처는 Beginning Linux Programming(4e)라는 책입니다. 새해 복 많이 받으세요 ^^ 저수준 시스템 호출들로 입, 풀력을 수행하는 것은 대단히 비효율적이다. 왜 그럴까? 시스템 호출에는 성능 상의 부담이 존재한다. 리눅스는 사용자 프로그램을 실행하는 모드에서 자신의 커널을 수행하는 모드로 전환해 시스템 호출을 처리한 후 다시 사용자 프로그램으로 돌아와야 하기 때문이다. 따라서 프로그램에서는 시스템 호출을 최손한으로 사용해야 하며, 사용할 때에는 최대한 많은 일을 한거번에 수행해야 한다(에를 들면 한 번에 한 문자씩 읽고 쓰는 것보다는 대량의 자료를 한꺼번에 읽고 쓰는 등). 하드웨어에는 한계가 있으며, 그.......]]></description>
					<pubDate>Sat, 02 Jan 2016 02:30:14 +0900</pubDate>
					<tag><![CDATA[linux,c]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[간단한 pyplot code]]></title>
					<link>https://blog.naver.com/hgh73/220582051888</link>
					<guid>https://blog.naver.com/hgh73/220582051888</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 간단한 코드 하나를 공유합니다. 출처는 여기이구요.. http://matplotlib.org/users/pyplot_tutorial.html 그리고 코드는 다음과 같습니다. ------------------------------------ gildang@gildang-P5Q ~/expy $ cat logarithmetic.py #!/usr/bin/python import numpy as np import matplotlib.pyplot as plt # make up some data in the interval ]0, 1[ y = np.random.normal(loc=0.5, scale=0.4, size=1000) y = y[(y &gt; 0) &amp; (y &lt; 1)] y.sort() x = np.arange(len(y)) # plot with various axes scales plt.figure(1) # linear plt.subplot(221) plt.plot(x, y) plt.yscale('linear.......]]></description>
					<pubDate>Tue, 29 Dec 2015 18:10:53 +0900</pubDate>
					<tag><![CDATA[pyplot,python]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[Web Scraping and Crawling With Scrapy and MongoDB ]]></title>
					<link>https://blog.naver.com/hgh73/220581465624</link>
					<guid>https://blog.naver.com/hgh73/220581465624</guid>
					<description><![CDATA[===================================================== 안녕하세요, 자는 길당 홍길한이라 합니다. 오늘은 간단한 파이썬 mongodb sracpy web crawler에 대한 글을 적습니다. 저는 리눅스 민트에서 실행을 하였습니다. 먼저 시작한 것은 다음과 같습니다. sudo pip install Scrapy sudo pip install pymongo sudo pip install --upgrade pymongo 이렇게 모두 필요한 모듈을 설치하셨으면 그 다음은 mongodb를 설치하는 작업이 있습니다. 순서는 다음과 같습니다. sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc.......]]></description>
					<pubDate>Tue, 29 Dec 2015 06:54:31 +0900</pubDate>
					<tag><![CDATA[scrapy,python]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[리눅스에서 mono 를 이용하여,  mysql 의 내용을 가져오는 조그마한   툴을 실험해 보았습니다.]]></title>
					<link>https://blog.naver.com/hgh73/220580231642</link>
					<guid>https://blog.naver.com/hgh73/220580231642</guid>
					<description><![CDATA[오늘은 아주 오래 전에도해 보았던 것이었지만, 리눅스에서 mono 를 이용하여,mysql 의 내용을 가져오는 조그마한 툴을 실험해 보았습니다. 참고는 여기 이구요.. http://zetcode.com/db/mysqlcsharptutorial/ 결과는 다음과 같습니다. 힌트는 다음과 같습니다. After download the .zip file I unzipped this. This have a couple of folders named "V2" and "V4" Both folders have the mysql.data.dll (the file that we need to register) but I used the higher version number (V4): Instal mono-gac entering this in terminal: sudo apt-get install mono-gac Now register the library: sudo gacutil -i ~/UNZIPPED_FOLDER/V4/mysql.dat.......]]></description>
					<pubDate>Sun, 27 Dec 2015 22:46:53 +0900</pubDate>
					<tag><![CDATA[mono]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[리눅스 파일 구조]]></title>
					<link>https://blog.naver.com/hgh73/220580162459</link>
					<guid>https://blog.naver.com/hgh73/220580162459</guid>
					<description><![CDATA["파일 구조에 관해서는 이미 알고 있는데 왜 공부하는가?"라고 물을 수도 있다. 유닉스와 마찬가지로 리눅스 환경의 파일은 특히 중요하다. 파일은 운영체제 서비스와 장치에 관한 간단하고 일관적인 인터페이스를 제공하기 때문이다. 리눅스에서 모든 것은 파일이다. 아니 거의 대부분이다. 일반적으로 프로그램은 파일을 사용하는 것과 동일한 방식으로 디스크 파일, 직렬 포트, 프린터, 다른 장치들을 사용할 수 있다. 네트워크 연결과 같은 예외 사항을 15장에서 살펴 보겠지만, 주로 다섯 가지 기본 함수인 open, close, read, write, ioctl만을 사용하면 된다. 디렉토리도 마찬가지로 특별한 종류의 파일이다. 리눅스를 포함하여 현대 유닉.......]]></description>
					<pubDate>Sun, 27 Dec 2015 21:33:34 +0900</pubDate>
					<tag><![CDATA[linux]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[bioperl]]></category>
					<title><![CDATA[프로그래밍, 무엇부터 시작할까]]></title>
					<link>https://blog.naver.com/hgh73/220579026246</link>
					<guid>https://blog.naver.com/hgh73/220579026246</guid>
					<description><![CDATA[프로그래밍을 배우는 가장 좋은 방법은 무엇일까? 답은 어떤 일을 할 것인가에 따라 다르다. 여러분이 프로그래밍을 시작할 수 있는 방법은 여러 가지다. - 여러 가지 강의를 많이 듣는다. - 이 책과 같은 튜토리얼을 읽는다. - 프로그래밍 매뉴얼을 얻어 몰두한다. - 프로그래머에게 개인 지도를 받는다. - 필요한 프로그램이 있는지 확인한다. - 프로그램 작성을 해낼 때까지 위의 내용 가운데 뭐든지 시도한다. 답은 어떤 학습 방법을 선택하는가에 따라서도 달라진다. 어떤 사람은 일목요연 하게 얻을 수 있고 선생님에게 물어볼 수 있기 때문에 강의를 선호하고 어떤 사람에게는 자기 능력에 맞게 스스로 공부하는 것이 최선일 수도 있다. 프.......]]></description>
					<pubDate>Sat, 26 Dec 2015 11:36:11 +0900</pubDate>
					<tag><![CDATA[perl]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[즐거운 성탄절이 되세요 ^^]]></title>
					<link>https://blog.naver.com/hgh73/220578126788</link>
					<guid>https://blog.naver.com/hgh73/220578126788</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 즐거운 성탄절이 되세요 ^^ 파이썬 이미지 뷰어입니다. ^^ 코드는 다음과 같습니다. ----------------------- #!/usr/bin/python # -*- coding: utf-8 -*- import os import wx class PhotoCtrl(wx.App): def __init__(self, redirect=False, filename=None): wx.App.__init__(self, redirect, filename) self.frame = wx.Frame(None, title='Photo Control') self.panel = wx.Panel(self.frame) self.PhotoMaxSize = 500 self.createWidgets() self.frame.Show() def createWidgets(self): instructions = 'Browse for an image' img = wx.EmptyImage(240,240) self.imageCtrl = wx.StaticBitmap(self........]]></description>
					<pubDate>Fri, 25 Dec 2015 00:22:31 +0900</pubDate>
					<tag><![CDATA[wxpython]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[Brand Positioning by Correspondence Analysis]]></title>
					<link>https://blog.naver.com/hgh73/220578081413</link>
					<guid>https://blog.naver.com/hgh73/220578081413</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 Brand Positioning by Correspondence Analysis입니다. 코드는 다음과 같습니다. ca.py 출처는: http://okomestudio.net/biboroku/?p=2357 이고 코드는 다음과 같습니다. 먼저 다음과 같이 하셔도 됩니다.작업 환경은 리눅스 입니다. wget https://gist.githubusercontent.com/okomestudio/c710906f3662138f0417/raw/8640061f2b22412789bd9f17bafe5645c63cc514/fashion_brands.csv wget https://gist.githubusercontent.com/okomestudio/c710906f3662138f0417/raw/8640061f2b22412789bd9f17bafe5645c63cc514/ca.py 그러면 코드는 ---------------------- #!/usr/bin/python # -*- coding: utf-8 .......]]></description>
					<pubDate>Thu, 24 Dec 2015 23:23:24 +0900</pubDate>
					<tag><![CDATA[Brand,Positioning,by,Correspondence,Analysis]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[매스플롯라이브러리 주석]]></title>
					<link>https://blog.naver.com/hgh73/220577501250</link>
					<guid>https://blog.naver.com/hgh73/220577501250</guid>
					<description><![CDATA[3.2.1 매스플롯라이브러리 주석 매스플롯라이브러리에는 애너테이션(annotation)이라는 훌륭한 도구를 포함하고 있다. 이 애너테이션은 그려진 플롯 내에 있는 데이터 점들을 설명할 수 있도록 주석을 추가하는 도구이다. 주석은 데이터의 일부를 설명하는 데 유용하게 사용되지만, 데이터 상에 텍스트 형태의 주석이 있으면 너저분해 보인다. 그렇기 때문에 이 도구에서는 텍스트를 표현하기 위해 데이터에 없는 일정 거리의 화살표를 사용하여 데이터가 무엇을 이야기하는지 설명한다. 그림 3.4를 보자. 우리는 (0.2, 0.1) 지점에 있다. 그리고 어떤 텍스트를 (0.35, 0.3)에 배치시키고 화살표로 (0.2, 0.1) 지점을 가리키게 하였다. 우리는 주.......]]></description>
					<pubDate>Thu, 24 Dec 2015 12:17:26 +0900</pubDate>
					<tag><![CDATA[NIKON_D5200]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[ 콘택트렌즈 유형 예측하기.]]></title>
					<link>https://blog.naver.com/hgh73/220577058020</link>
					<guid>https://blog.naver.com/hgh73/220577058020</guid>
					<description><![CDATA[3.4 예제 : 콘택트렌즈 유형 예측하기 이번 절에서는 미리 처방된 콘택트 렌즈의 유형을 예측하는 예제를 다루게 될 것이다. 작은 데이터 집합을 가지고 이것으로부터 어떠한 것을 배울 수 있는지 확인해 볼 것이다. 우리에게 안과의사가 콘택트 렌즈를 처방하는 방법처럼, 의사결정 트리가 어떠한 통찰력을 제공해 줄 수 있을지 확인해 보자. 사람들이 사용하는 렌즈의 유형을 예측하고 의사결정 트리의 기본처리 절차를 이해해 보자. 수집 : 제공된 텍스트 파일 준비 : 탭으로 구분된 데이터 구문 분석 분석 : 구문 분석에 의해 잘 만들어진 데이터를 빠르게 눈으로 살펴본다. 최종적으로 createPlot()을 가지고 트리를 플롯한다. 훈련 : 3.1절.......]]></description>
					<pubDate>Wed, 23 Dec 2015 22:14:00 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[미리 크리스마스 ^^]]></title>
					<link>https://blog.naver.com/hgh73/220570457544</link>
					<guid>https://blog.naver.com/hgh73/220570457544</guid>
					<description><![CDATA[#include &lt;stdio.h&gt; int main() { int i=-1,j=0,rows; printf("Enter Rows:\n"); scanf("%d",&amp;rows); while(j++&lt;rows) // Moving pointer for the first '*' { printf(" "); } printf("*"); // This prints the first '*' while(++i&lt;rows) { for(j=-2;++j&lt;rows-i;) // This loop will print Spaces before '*' on each row printf(" "); for(j=0;++j&lt;2*i;) // This loop will print * on each row { printf("*"); } printf("\n"); // This printf will take you to the next Line } }]]></description>
					<pubDate>Wed, 16 Dec 2015 21:16:02 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[IT]]></category>
					<title><![CDATA[fMRI PySurfer(complete)]]></title>
					<link>https://blog.naver.com/hgh73/220569963001</link>
					<guid>https://blog.naver.com/hgh73/220569963001</guid>
					<description><![CDATA[안녕하세요, fMRI PySurfer 완성장면입니다.]]></description>
					<pubDate>Wed, 16 Dec 2015 13:10:31 +0900</pubDate>
					<tag><![CDATA[fmri]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[fMRI PySurfer]]></title>
					<link>https://blog.naver.com/hgh73/220569943444</link>
					<guid>https://blog.naver.com/hgh73/220569943444</guid>
					<description><![CDATA[오늘은 두 시간 가량 작업을 한 끝에완성시킨 fMRI PySurfer의 모습입니다.]]></description>
					<pubDate>Wed, 16 Dec 2015 12:47:47 +0900</pubDate>
					<tag><![CDATA[fmri]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[Canyon decimation example]]></title>
					<link>https://blog.naver.com/hgh73/220569839674</link>
					<guid>https://blog.naver.com/hgh73/220569839674</guid>
					<description><![CDATA[안녕하세요, 오늘은 파이썬의 무한한 가능성을 보여주는 예를소개시켜 드립니다. 다음은 결과 화면입니다. 소스는 다음과 같습니다. ------------------------------- #!/usr/bin/python """ Retrieve radar data from the NASA and plot a view of the Grand Canyon landscape. We cannot display the whole data, as it would be too big. To display more, see the canyon decimation example. This example is interesting as it shows how numpy can be used to load and crop data completly foreign to Mayavi. """ # Author: Gael Varoquaux &lt;gael.varoquaux@normalesup.org&gt; # Copyright (c) 2008, Enthought, Inc. # License: BS.......]]></description>
					<pubDate>Wed, 16 Dec 2015 11:01:48 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[미로와 같은 생각]]></title>
					<link>https://blog.naver.com/hgh73/220569706436</link>
					<guid>https://blog.naver.com/hgh73/220569706436</guid>
					<description><![CDATA[때론,세상을 살 때,자신의 말과 행동, 그리고 생각으로 말미암아 미로와 같은 시간을 보낼 때가 있다. 보통은 그러한 것에서 벌어나려 하거나,문제를 풀어보려고 시도하지만, 나는 이제는 그것보다는 받아들이고,천천히 탐험을 시도하기로 결정한다.]]></description>
					<pubDate>Wed, 16 Dec 2015 07:29:45 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[파이썬 netstat]]></title>
					<link>https://blog.naver.com/hgh73/220569703945</link>
					<guid>https://blog.naver.com/hgh73/220569703945</guid>
					<description><![CDATA[안녕하세요,오늘은 리눅스에서 간단하게 파이썬으로 netstat을 표시하는 코드를 적습니다. ----------------------------------------------netstat.py ---------------------- #!/usr/bin/python import pwd import os import re import glob PROC_TCP = "/proc/net/tcp" STATE = { '01':'ESTABLISHED', '02':'SYN_SENT', '03':'SYN_RECV', '04':'FIN_WAIT1', '05':'FIN_WAIT2', '06':'TIME_WAIT', '07':'CLOSE', '08':'CLOSE_WAIT', '09':'LAST_ACK', '0A':'LISTEN', '0B':'CLOSING' } def _load(): ''' Read the table of tcp connections &amp; remove header ''' with open(PROC_TCP,'r') as f: content = f.readlines() content.pop(0) ret.......]]></description>
					<pubDate>Wed, 16 Dec 2015 07:18:47 +0900</pubDate>
					<tag><![CDATA[python]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[정규식 예제]]></title>
					<link>https://blog.naver.com/hgh73/220565318386</link>
					<guid>https://blog.naver.com/hgh73/220565318386</guid>
					<description><![CDATA[실제 현장에서 마주칠 수 있는 경우에 더 가까운 파이썬 정규식 코드를 몇 가지 살펴보자. 예를 들어 POSIX(리눅스나 맥 OS X와 같은 유닉스 풍의 시스템) who 명령의 출력을 살펴보자. 이는 시스템에 로그인한 모든 사용자의 목록을 보여준다. gildang@gildang-P5Q ~/core/ch01 $ who gildang tty8 2015-12-11 06:56 (:0) gildang pts/2 2015-12-11 06:57 (:0.0) gildang pts/3 2015-12-11 06:58 (:0.0) gildang@gildang-P5Q ~/core/ch01 $ 로그인명, 사용자가 로그인한 터미널 이름, 로그인 시점, 로그인한 위치 등과 같은 정보를 저장하려 한다. str.split()을 적용하는 것은 공백의 개수가 가변적이고 똑같지 않으므로 효과적인 방법이 아니.......]]></description>
					<pubDate>Fri, 11 Dec 2015 13:09:07 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[kNN 알고리즘]]></title>
					<link>https://blog.naver.com/hgh73/220560071092</link>
					<guid>https://blog.naver.com/hgh73/220560071092</guid>
					<description><![CDATA[# -*- coding: utf-8 -*- from numpy import * import operator def createDataSet(): group = array([[1.0,1.1], [1.0,1.0], [0,0], [0,0.1]]) labels = ['A','A','B','B'] return group, labels def classify0(inX, dataSet, labels, k): dataSetSize = dataSet.shape[0] diffMat = tile(inX, (dataSetSize,1)) - dataSet sqDiffMat = diffMat ** 2 sqDistances = sqDiffMat.sum(axis = 1) distances = sqDistances ** 0.5 sortedDistIndicies = distances.argsort() # Voting with lowest k distances classCount={} for i in range(k): voteIlabel = labels[sortedDistIndicies[i]] classCount[voteIlabel] = classCount.get(voteIlabel, 0) .......]]></description>
					<pubDate>Sun, 06 Dec 2015 08:44:27 +0900</pubDate>
					<tag><![CDATA[머신러닝]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[scikit-learn sample]]></title>
					<link>https://blog.naver.com/hgh73/220556788089</link>
					<guid>https://blog.naver.com/hgh73/220556788089</guid>
					<description><![CDATA[안녕하세요,오늘은 파이썬으로 scikit-learn 으로ML sample을 공유합니다. 실행 결과를 먼저 보여드립니다. 라이브러리 설치는다음과 같습니다. sudo pip install -U scikit-learn -------------------------------- 다음은 소스 내용입니다. -------------------------------- #!/usr/bin/python # -*- coding: utf-8 -*- """ ========================================================= K-means Clustering ========================================================= The plots display firstly what a K-means algorithm would yield using three clusters. It is then shown what the effect of a bad initialization is on the classific.......]]></description>
					<pubDate>Wed, 02 Dec 2015 18:18:47 +0900</pubDate>
					<tag><![CDATA[scikit-learn,머신러닝,ML]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[linux machine learning]]></title>
					<link>https://blog.naver.com/hgh73/220555728213</link>
					<guid>https://blog.naver.com/hgh73/220555728213</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 우분투나 리눅스 민트 등에서 진행하는 기계 학습에 대한 환경 설정에 대한글을 적어 보기로 합니다. 저는 현재 파이썬 2.7.10 버전으로 되어 있습니다. 먼저 결과 모습입니다. 그러면, 이제 시작해 보기로 합니다. 터미널을 실행 시키시고, 다음의 순서대로 진행합니다. sudo add-apt-repository ppa:fkrull/deadsnakes-python2.7 sudo apt-get update sudo apt-get upgrade 그리고 나서 다음과 같이 진행합니다. sudo apt-get install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose 이렇게 해서 설치가 완료되었다면, 이제 시.......]]></description>
					<pubDate>Tue, 01 Dec 2015 18:47:56 +0900</pubDate>
					<tag><![CDATA[기계학습,머신러닝]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[조만간에 워드프레스 및 프로그래밍 그리고 리눅스 관련 글을을]]></title>
					<link>https://blog.naver.com/hgh73/220553217705</link>
					<guid>https://blog.naver.com/hgh73/220553217705</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 저는 현재 페이스북에서 활동을 하고 있습니다.제가 페이스북에서 스터디모임을 진행하고 있어서,블로그에 관리가 소홀했습니다. 정식으로 블로그를 다시 활동하는데,약간의 시간이 걸릴 것 같습니다. 그렇지만, 조만간에 정식으로 다시 예전처럼 활동을 하려 합니다. 감사합니다. ------------------------------------------------------- 일요일날 스터디 모임에서 선 보일 머신 러닝 데이터 정리와 전처리 데이터의 형태를 파악하기 위해 matplotlib의 산점도scatter plot으로 그려본 모습입니다.]]></description>
					<pubDate>Sun, 29 Nov 2015 05:17:38 +0900</pubDate>
					<tag><![CDATA[머신러닝]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[안녕하세요]]></title>
					<link>https://blog.naver.com/hgh73/220540953309</link>
					<guid>https://blog.naver.com/hgh73/220540953309</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 저는 현재 페이스북에서 활동을 많이 하고 있습니다.그래서 인지, 여기 블로그를 잠시 보류하고 있었습니다. 그리고 스터디 모임을 만들어서 오프라인에서 활동 중이구요 ^^ 이제 짬이 나면,본격적으로 다시 활동합니다. 감사합니다.]]></description>
					<pubDate>Mon, 16 Nov 2015 18:34:44 +0900</pubDate>
					<tag><![CDATA[활동]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[2015년 11월 3일 오전 1시 34분에 저장한 글입니다.]]></title>
					<link>https://blog.naver.com/hgh73/220527340212</link>
					<guid>https://blog.naver.com/hgh73/220527340212</guid>
					<description><![CDATA[네이버 블로그는 이제 내 인생의 한 부분이되었다. 글을 쓰는 데에 있어서도이제는 예전의 장애를넘어 설 수 있게 되었다. 나를 알리는 것보다는 사람들이 찾는 곳이 되었으면 싶다. 나는 이 곳을 그렇게 만들어 가고 싶다.]]></description>
					<pubDate>Tue, 03 Nov 2015 01:34:45 +0900</pubDate>
					<tag><![CDATA[Canon_EOS_7D]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[클래스]]></title>
					<link>https://blog.naver.com/hgh73/220514339727</link>
					<guid>https://blog.naver.com/hgh73/220514339727</guid>
					<description><![CDATA[클래스(class)는 인스턴스(instance)라고 부르는 객쳉레 연결되고 또 이들 객체 사이에공유되는 속성을 정의한다. 일반적으로 클래스는 함수(메서드method라고 한다), 변수(클래스 ㅂ녀수class vvariable라고 한다), 그리고 계산된 속성(프로퍼티property라고 한다)을 모아 놓은 것이다. 클래스는 class 문으로 정의한다. 클래스의 몸체는 클래스가 정의되는 도중에 실행되는 문장을담고 있다. 다음 예를 보자. class Account(object):num accounts = 0def __init__(self,name,balancde):self.name = nameself.balance = balanceAccount.num_accounts += 1def __del__(self):Account.num_accounts -= 1def deposit(self,amt):self.balance = slef.......]]></description>
					<pubDate>Tue, 20 Oct 2015 17:31:46 +0900</pubDate>
					<tag><![CDATA[파이썬]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[gedit 테마]]></title>
					<link>https://blog.naver.com/hgh73/220509726499</link>
					<guid>https://blog.naver.com/hgh73/220509726499</guid>
					<description><![CDATA[]]></description>
					<pubDate>Thu, 15 Oct 2015 17:39:24 +0900</pubDate>
					<tag><![CDATA[gedit]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[매개변수 전달과 반환 값]]></title>
					<link>https://blog.naver.com/hgh73/220508930775</link>
					<guid>https://blog.naver.com/hgh73/220508930775</guid>
					<description><![CDATA[매개변수 전달과 반환 값 함수를 호출할 때 함수의 매개변수는 단순히 전달된 입력 객체를 참조하는 이름일 뿐이다. 매개변수 전달이 내부적으로 작동하는 방식은 다른 프로그래밍 언어와 관련해서 들었을지도 모르는 "값에 의한 전달(pass by value)" 또는 "참조에 의한 전달(pass by reference)" 같은 방식 중에 어느 하나의 스타일과 정확히 일치하지는 않는다. 예를 들어, 변경 불가능한 값을 전달할 때는 실질적으로 인수가 값으로 전달되는 것처럼 보인다. 하지만, 변경 가능한 객체(리스트나 사전 같은) 가 함수에 전달되어 그 값이 변경되면 원래의 객체 값에도 반영된다. 다음 예를 보자. a = [1, 2, 3, 4, 5] def square(items): for i.......]]></description>
					<pubDate>Wed, 14 Oct 2015 22:00:21 +0900</pubDate>
					<tag><![CDATA[파이썬]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[어느날 갑자기]]></title>
					<link>https://blog.naver.com/hgh73/220500681114</link>
					<guid>https://blog.naver.com/hgh73/220500681114</guid>
					<description><![CDATA[어느날 갑자기이런 일이 생길 수 있다. 자신이 이용하던 리눅스 메인 컴퓨터의 gui 화면서에서 다음과 같이.. ** (gitg:15904): WARNING **: Couldn't connect to accessibility bus: Failed to connect to socket /tmp/dbus-ychCoQcrqT: Connection refused 이라고 뜨고 액세스가 거부되는.. 그럴 때는 침착하게 [Ctrl]+[Alt]+F1 키를 누르고 자신의 계정으로 로그인하고 들어 가서 vim으로 홈 폴더 안에 vim .bashrc 파일 안에 다음과 같은 내용을 적는다. NO_AT_BRIDGE=1 그리고 나서 재부팅을 한다. 그러면 OK!]]></description>
					<pubDate>Tue, 06 Oct 2015 06:13:27 +0900</pubDate>
					<tag><![CDATA[linux]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[Csharp]]></category>
					<title><![CDATA[linux C#]]></title>
					<link>https://blog.naver.com/hgh73/220492197594</link>
					<guid>https://blog.naver.com/hgh73/220492197594</guid>
					<description><![CDATA[-------------------------------------------------------------------- 안녕하세요, 저는 길당 홍길한이라 합니다. 요새는 파이썬 등 다양한 언어로 윈도우와 호환할 수 있습니다. 그래도 윈도우 중에서는 중요한 언어가 C#입니다. 이 c#이라는 언어는 리눅스에서도 사용할 수 있습니다. 먼저 우분투나 리눅스 민트 등에서 mono라는 것을 설치를 하여야 합니다. 순서는 간단합니다. sudo apt-get install monodevelop 컴파일러는 sudo apt-get install mono-mcs 이렇게 해주시고.. 이제 시작합니다. ^^ 시작 : "Hello World" 이제 프로그래밍 책에서 "Hello World"라는 예제로 시작하는 것은 오랜 전통처럼 되어 버렸다. 이 장에서는 먼저 C#으.......]]></description>
					<pubDate>Fri, 25 Sep 2015 22:14:49 +0900</pubDate>
					<tag><![CDATA[csharp]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[파이썬 모듈]]></title>
					<link>https://blog.naver.com/hgh73/220490514394</link>
					<guid>https://blog.naver.com/hgh73/220490514394</guid>
					<description><![CDATA[모듈 프로그램 크기가 커지면 손위운 관리를 위해 프로그램을 여러 파일로 나누고 싶어 질 것이다. 파이썬에서는 정의들을 파일에 넣어 다른 프로그램이나 스크립트에 임포트 (import)할 수 있는 모듈의 형태로 사용할 수 있다. 모듈을 생성하려면 관련 문장과 정의들을 모듈과 동일한 이름을 가지는 파일에 넣으면 된다(파일 확장자가 .py이어야 한다). 다음은 한 예다. ------------------------------------------------------------ 기본 도구 Chapter1 알고리즘 분석 1.1 실행시간 알고리즘(algorithm)은 주어진 문제를 유한한 시간 내에 해결하는 단계적 절차를 말한다. 데이터구조(data structure)는 데이터를 조직하고 접근하는 체계적 방.......]]></description>
					<pubDate>Thu, 24 Sep 2015 08:51:57 +0900</pubDate>
					<tag><![CDATA[파이썬]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[php]]></category>
					<title><![CDATA[객체 접근법]]></title>
					<link>https://blog.naver.com/hgh73/220484533647</link>
					<guid>https://blog.naver.com/hgh73/220484533647</guid>
					<description><![CDATA[객체 접근법 예제 5-10에 몇 줄을 추가해 결과를 확인해보자. 예제 5-11은 객체 속성을 설정하고메소드를 호출해 코드를 확장한 것이다. gildang2@gildang2-W65-67SF /var/www/html/secondedition/5 $ cat example5-11.php&lt;?php$object = new User;print_r($object); echo "&lt;br /&gt;"; $object-&gt;name = "Joe";$object-&gt;password = "mypass";print_r($object); echo "&lt;br /&gt;"; $object-&gt;save_user(); class User{ public $name, $password; function save_user() { echo "Save User code goes here"; }}?&gt;gildang2@gildang2-W65-67SF /var/www/html/secondedition/5 $ 코드에서 객체의 속성에 접근하는 문법은 $object-&.......]]></description>
					<pubDate>Thu, 17 Sep 2015 21:19:15 +0900</pubDate>
					<tag><![CDATA[php]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[python start]]></title>
					<link>https://blog.naver.com/hgh73/220484195385</link>
					<guid>https://blog.naver.com/hgh73/220484195385</guid>
					<description><![CDATA[1장 파이썬 맛보기이 장에서는 파이썬을 간략히 소개한다. 특수한 규칙이나 세부 사항에 너무 얽매이지 않으면서 파이썬의 핵심적인 기능을 대부분 살펴볼 것이다.이를 위해 이 장에서는 변수, 표현식, 제어 흐름, 생성기, 클래스, 입출력 같은 기본적인 개념들을 간략히 다룬다.하지만, 이러한 개념들은 아주 자세하게 다루지는 않는다. 그래도 숙련된 프로그래머는 이 장에 나오는 내용을 바탕으로 더 고급 프로그램을 작성할 수 있을 것이다.초보 프로그래머라면 파이썬에 대한 감을 잡기 위해 몇 가지 예를 직접 실행해 볼 것을 권한다.파이썬을 처음 접하는 데 파이썬 3을 사용 중이라면 이 장은 파이썬 2를 사용해 따라가는 것이 좋을 것이.......]]></description>
					<pubDate>Thu, 17 Sep 2015 15:29:15 +0900</pubDate>
					<tag><![CDATA[python]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[리눅스에서 파이썬 공부]]></title>
					<link>https://blog.naver.com/hgh73/220483134024</link>
					<guid>https://blog.naver.com/hgh73/220483134024</guid>
					<description><![CDATA[안녕하세요, 저는 길당 홍길한이라합니다. 오늘부터는 리눅스에서 파이썬 공부를 해보기로 합니다. 파이썬의 모듈 중에 SciPy와 NumPy를 사용해 프로그래밍을 해보기로 합니다. 과학적 프로그래밍에 사용되는 기본 연산에는 배열, 행렬, 적분, 미분방정식 연산, 통계등이 있습니다. 파이썬은 행렬이나 배열이 아닌 일반적 변수에 대한 기초적 수학 연산을 제공하지만기본적인 과학 계산 기능은 내장되어 있지 않습니다. SciPy와 NumPy는 과학계산을 효율적으로 수행할 수 있는 강력한 파이썬 패키지입니다. NumPy는 다차원 ndarray를 사용한 수치 연산에 특화되어 있습니다.NumPy 행렬 ndarray는 브로드캐스팅broadcasting이라고 불리는 원소별 연.......]]></description>
					<pubDate>Wed, 16 Sep 2015 15:06:48 +0900</pubDate>
					<tag><![CDATA[리눅스,파이썬]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[파이썬]]></category>
					<title><![CDATA[딜리셔스 API]]></title>
					<link>https://blog.naver.com/hgh73/220482367931</link>
					<guid>https://blog.naver.com/hgh73/220482367931</guid>
					<description><![CDATA[딜리셔스 API http://gildang.co.kr/?p=2110]]></description>
					<pubDate>Tue, 15 Sep 2015 19:56:05 +0900</pubDate>
					<tag><![CDATA[python]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[워드프레스]]></category>
					<title><![CDATA[How to display all posts in a single page using WordPress]]></title>
					<link>https://blog.naver.com/hgh73/220478441069</link>
					<guid>https://blog.naver.com/hgh73/220478441069</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 동영상과 코드입니다. ^^ http://www.emanueleferonato.com/2014/01/03/how-to-display-all-posts-in-a-single-page-using-wordpress/ --------------------------------------- &lt;?php /* Template Name: All posts */ ?&gt; &lt;?php get_header(); ?&gt; &lt;div id="blog"&gt; &lt;?php if(have_posts()) : ?&gt; &lt;?php while(have_posts()) : the_post(); ?&gt; &lt;div class="post"&gt; &lt;h1&gt;&lt;a href="&lt;?php the_permalink(); ?&gt;"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h1&gt; &lt;div class="entry"&gt; &lt;?php the_content(); ?&gt; &lt;?php $current_d.......]]></description>
					<pubDate>Fri, 11 Sep 2015 14:46:47 +0900</pubDate>
					<tag><![CDATA[워드프레스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[오후 산책 길에서 ]]></title>
					<link>https://blog.naver.com/hgh73/220477355548</link>
					<guid>https://blog.naver.com/hgh73/220477355548</guid>
					<description><![CDATA[출처 : http://www.poemlove.co.kr/bbs/board.php?bo_table=tb22&amp;wr_id=6358 마침 커피를 내렸는데 우편배달부-클로제씨-가 편지를 갖고 왔다 (조금 드시지요) (아니, 괜찮습니다. 차를 마셨거든요 ) C 시의 친구, 동생이 근무 태만으로 영창을 갔다는 시시한 내용이었다 (그거 아십니까?) 클로제씨는 숨을 크게 구름마저 증발하는 8월 (에스메가 죽었답니다) (아니, 그 친구는 아니, 아닙니다 ) 후우후우 나무가 헥헥댄다 집 앞 떡갈나무 소리다 리넨 옷감이 기분 좋다 (그럼 이만 가봐야겠군요) 클로제씨는 자전거에 올라 바람이 등 밀어주는 북쪽으로 달린다 커피를 비우니 친구 생각이 나서 언덕에 올라 가 보면 에스메가 메신저 백을 품.......]]></description>
					<pubDate>Thu, 10 Sep 2015 13:39:45 +0900</pubDate>
					<tag><![CDATA[시]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[워드프레스]]></category>
					<title><![CDATA[워드프레스 revolution slider]]></title>
					<link>https://blog.naver.com/hgh73/220476463793</link>
					<guid>https://blog.naver.com/hgh73/220476463793</guid>
					<description><![CDATA[안녕하세요, 저는 길당 홍길한이라 합니다.오늘은 워드프레스 revolution slider에 관한 것입니다. 이 워드프레스 플러인은 유료 플러그인이며,주소는 여기입니다. http://codecanyon.net/item/slider-revolution-responsive-wordpress-plugin/2751380 우선 결과는 다음과 같습니다. 그러면,간단한 사용법을 적기로 합니다. 워드프레스 알림판에서 보시면, 다음과 같이 이 플러그인이 설치되어 활성화되어 있을 때 보일 것입니다. 그러면 이 새 슬라이더를하나 만들고, 작동을 시키는 것으로 해 보기로 합니다. 저는 다음과 같이 기존의 만들어진 리스트 들이 이미 있습니다. 여기에서 create New Slider 이라는 파란색 버튼을 클릭하세요.. 아래.......]]></description>
					<pubDate>Wed, 09 Sep 2015 16:01:41 +0900</pubDate>
					<tag><![CDATA[워드프레스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[나의이야기]]></category>
					<title><![CDATA[길을 따라 올라가는 사람 ]]></title>
					<link>https://blog.naver.com/hgh73/220475475815</link>
					<guid>https://blog.naver.com/hgh73/220475475815</guid>
					<description><![CDATA[좋은 시라서, 가져왔습니다. --------------- 선생님, 저도, 선생님 가는 곳으로 가면 안 되겠습니까 저도 그 장막에 살면서 거기서 인간을 초월해 보면 안 되겠습니까 감정도 이성도 없이 세계와 하나 되어 썩어지면 안 되겠습니까 선생님의 아름다운 비단옷과 긴 칼을 정성들여 세탁하고 다리며 살아가면 안 되겠습니까 시계 수레바퀴 돌듯 돌아가며 모든 아름다움을 분절하며 살아가면 안 되겠습니까 저도 보라색 바위 위에 떠 앉아서 진한 황색으로 초록의 진리를 압도하면 안 되겠습니까 선생님, 저는, 갈 수 있습니까 선생님이라고 불러도 좋습니까 안 되겠습니까 저도 그 처소에 거하면서 이 세상을 등지면서 품어주면 안 되겠습니까 (역.......]]></description>
					<pubDate>Tue, 08 Sep 2015 17:21:54 +0900</pubDate>
					<tag><![CDATA[시]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>hgh73</author>
					<category><![CDATA[linux]]></category>
					<title><![CDATA[아마존에서 리눅스 파이썬 하기]]></title>
					<link>https://blog.naver.com/hgh73/220475449582</link>
					<guid>https://blog.naver.com/hgh73/220475449582</guid>
					<description><![CDATA[안녕하세요,저는 길당 홍길한이라 합니다. 오늘은 아마존에서리눅스로 파이썬을 활용하는 것에 대해서글을 써보기로 합니다. 오늘은 기초적인 것으로 시작합니다. 예는 먼저 여기를 들기로 하겠습니다. http://www.tutorialspoint.com/python/ Execute Python Programs이것은 파이썬 프로그램을 실행하기 입니다. 파이썬 코드는 다음과 같이 나와 있습니다. #!/usr/bin/python print "Hello, Python!" 이것을 어떻게 하는지 보시기 바랍니다. root@ip-172-31-11-220:~# pwd /root root@ip-172-31-11-220:~# ls root@ip-172-31-11-220:~# mkdir pycode root@ip-172-31-11-220:~# cd pycode/ root@ip-172-31-11-220:~/pycode# vim hello.py root@ip.......]]></description>
					<pubDate>Tue, 08 Sep 2015 16:58:59 +0900</pubDate>
					<tag><![CDATA[리눅스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
