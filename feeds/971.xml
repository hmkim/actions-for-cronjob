<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[Programming]]></title>
			<link>https://blog.naver.com/cys_star</link>
			
				<image>
					<url><![CDATA[https://blogpfthumb-phinf.pstatic.net/MjAxODAxMjZfMjA3/MDAxNTE2OTU4ODkzNzg5.4ZsS2o0jjXn_HSQOAZnu7meum2lgeaAlCMcp14UQ10Ag.1zcAjoycZwUb29gq92VtEMOQLjvsFoWjMNjgod28h4Mg.JPEG.cys_star/1_CDlclChuNeeM5Shfev2RTg.jpeg?type=m2]]></url>
					<title><![CDATA[Programming]]></title>
					<link>https://blog.naver.com/cys_star</link>
				</image>
			
			<description><![CDATA[안녕하세요.
https://github.com/dydtjr1128]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Tue, 14 May 2019 16:38:17 +0900</pubDate>

			
				<item>
					<author>cys_star</author>
					<category><![CDATA[기타]]></category>
					<title><![CDATA[압축 알고리즘 비교]]></title>
					<link>https://blog.naver.com/cys_star/221387503314</link>
					<guid>https://blog.naver.com/cys_star/221387503314</guid>
					<description><![CDATA[Snappy를 이용하여 이미지를 압축하는 부분을 다루면서, 다양한 압축 알고리즘 이 있으며 각각의 성능 차이가 크다는 것을 알게 되었다.Core i7-6700K CPU @ 4.0GHz, using lzbench, an open-source in-memory benchmark by @inikep compiled with gcc 7.3.0압축률과 속도가 가각 다르기 때문에 알맞는 상황에 적절한 압축 알고리즘을 사용하여야 한다.]]></description>
					<pubDate>Mon, 29 Oct 2018 20:21:01 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[JAVA]]></category>
					<title><![CDATA[자바 이름 규칙(JAVA naming convention)]]></title>
					<link>https://blog.naver.com/cys_star/221353798340</link>
					<guid>https://blog.naver.com/cys_star/221353798340</guid>
					<description><![CDATA[For classes: HelloWorld For variables: helloWorld For methods: helloWorld For package/projects: helloworld For constants: HELLO_WORLD Its a good practise to follow naming conventions to evolve as a good software developer who writes clean code. Sun uses PascalCase for project names. Eclipse says better to use all lower cases. I have seen somebody using camelCase. There is no strict rule as far as project names are concerned. No, they don't conflict with your class names. Make sure you use a different naming convention for classes and projects for your own clarity. References: Naming Convention.......]]></description>
					<pubDate>Thu, 06 Sep 2018 18:27:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[Jupyter notebook에 커널 생성&지우기]]></title>
					<link>https://blog.naver.com/cys_star/221312083660</link>
					<guid>https://blog.naver.com/cys_star/221312083660</guid>
					<description><![CDATA[본 환경은 Anaconda 4.2.0에서 이루어진 환경설정이다.jupyter notebook에서 설정한 커널을 사용할 수 있다. 설정된 커널을 확인 설정된 커널을 제거(삭제)]]></description>
					<pubDate>Wed, 04 Jul 2018 01:28:42 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[C,C++]]></category>
					<title><![CDATA[[C] 구조체 내부의 변수 동적할당시 free]]></title>
					<link>https://blog.naver.com/cys_star/221258187243</link>
					<guid>https://blog.naver.com/cys_star/221258187243</guid>
					<description><![CDATA[위에서 볼 수 있듯이 user내부의 pass는 동적할당 없이는 새로운 공간을 만들 수 없으며 구조체를 free하더라도 pass는 여전히 힙영역의 공간을 차지 하고 있다는 것을 알 수 있다. 이런 부분에서 실수가 발생 할 수 있으므로 주의해서 반환 시켜주어야 한다.]]></description>
					<pubDate>Sat, 21 Apr 2018 15:26:55 +0900</pubDate>
					<tag><![CDATA[C,동적할당,구조체,구조체동적할당,free,메모리반환]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[MQTT]]></category>
					<title><![CDATA[[MQTT] MQTT와 Mosquitto 요약]]></title>
					<link>https://blog.naver.com/cys_star/221197897841</link>
					<guid>https://blog.naver.com/cys_star/221197897841</guid>
					<description><![CDATA[MQTTMQTT는 Message Queuing Telemetry Transport의 약자로서 1999년 IBM과 Eurotech(Arcom)에 의해 최초로 개발되었다. 초창기에는 원격검침의 용도로 만들었다. 원격검침의 경우 대부분 저전력 배터리 등 제한적인 특정 환경에서 동작하기 때문에 낮은 전력, 낮은 대역폭 환경에서 사용할 수 있도록 설계되었다. 이러한 점 때문에 IoT에 사용하기 유용하다. QOS(Quality Of Service)를 0,1,2로 나눈다. · QOS 0 : 메시지는 한 번만 전달하며, 전달 여부를 확인하지 않는다. Fire and Forget(udp와 같이 한번 보내고 ACK를 받지 않는 것과 같이 전달 여부를 확인하지 않는다.) 타입이다. · QOS 1 : 메시지는 반드시 한 번 이상 전달된다. 하지만.......]]></description>
					<pubDate>Wed, 31 Jan 2018 16:14:35 +0900</pubDate>
					<tag><![CDATA[MQTT,Mosquitto,Broker,Publisher,Subscriber,모스키토]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[MQTT]]></category>
					<title><![CDATA[[MQTT] MQTT Protocol 분석]]></title>
					<link>https://blog.naver.com/cys_star/221197268999</link>
					<guid>https://blog.naver.com/cys_star/221197268999</guid>
					<description><![CDATA[MQTT Protocol 분석해 보기MQTT 프로토콜의 헤더 부분은 다음과 같은 형태로 시작한다.첫 1바이트는 가각 4비트씩 나뉘어 구분하며, 앞 4비트는 MQTT Control Packet type(이 연결이 CONNCET를 의미하는지, PUBLISH를 의미하는지 등등)을 의미하며 다음 4비트는 Flags specific to each MQTT Control Packet type(이 패킷이 CONNECT 인지, PUBLISH인 지 등등)을 의미한다. 그다음 1바이트가 남은 길이를 의미하는데, 최상위 비트에 따라 이 부분은 최대 4바이트까지 길어져 표현 가능하다. 아래는 각각에 대한 비트 값을 뜻한다.MQTT Control Packet typeFlags specific to each MQTT Control Packet typeWireShark 캡처 부분1 = CONNECT 0 = CON.......]]></description>
					<pubDate>Tue, 30 Jan 2018 21:28:32 +0900</pubDate>
					<tag><![CDATA[mqtt,mqttProtocol,Protocol]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Git]]></category>
					<title><![CDATA[[Git] 과거의 버전으로 되돌아 가기]]></title>
					<link>https://blog.naver.com/cys_star/221194250043</link>
					<guid>https://blog.naver.com/cys_star/221194250043</guid>
					<description><![CDATA[git에는 과거의 버전으로 되 돌릴때 reset과 revert를 사용한다. 이 2가지의 차이점은 무엇일까? reset vs revertreset로그를 보면 여러 버전의 commit들이 있는데, 그중 2개를 없애고 싶다. 혹은 특정 버전으로 되돌아 가고 싶다면 reset을 시키면 된다. 예를 들어, commit3의 내용으로 되돌리고 싶다면 그렇게 되면 이 83ac1d4라는 커밋 이후(commit4, commit5)의 내용들은 사라지고 이 commit 상태로 돌아가게 된다. 이후의 내용들이 삭제된 것처럼 보이지만 사실 삭제된 것이 아니라 숨겨진 것이다. 이 내용은 차후 다시 쓸 예정. 나중에 원격 저장소를 이용하여 다른곳과 공유하는 일이 자주 생길 수 있는데, 그때에는 절대로 reset을 시키.......]]></description>
					<pubDate>Fri, 26 Jan 2018 18:20:11 +0900</pubDate>
					<tag><![CDATA[git,reset,revert,gitReset,gitRevert]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Git]]></category>
					<title><![CDATA[[Git] git 변경사항 확인하기]]></title>
					<link>https://blog.naver.com/cys_star/221193517856</link>
					<guid>https://blog.naver.com/cys_star/221193517856</guid>
					<description><![CDATA[단순히 git log는 현재까지 commit 된 기록들을 볼 수 있지만 -p라는 명령어를 추가로 붙인다면 commit과 commit 간의 소스 차이를 볼 수가 있다.중간의 빨간색으로된 -text.txt : 2 와 초록색으로 된 +text1.txt라는 내용을 볼 수 있을 것이다. 이 것은 text.txt : 2라는 내용이 사라지고 text1.txt라는 내용이 추가 되었다는 뜻이다. 또한, commit이라는 글자 뒤에 ebd620c56107be5ec596eeda2fb2556783ac1d40 과 같은 문자열이 출력되는데, 이것은 commit id라고 한다. 이것은 버전의 고유한 주소를 뜻한다. 위처럼 입력하게 되면 이 commit message 이전의 내용들만 보이게 된다. 이 경우는 de3a5260646daee3ea01d949ff0c07cb9eaefb1c로 시작.......]]></description>
					<pubDate>Thu, 25 Jan 2018 20:28:26 +0900</pubDate>
					<tag><![CDATA[git,git변경사항,gitLog,gitDiff]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[JAVA]]></category>
					<title><![CDATA[[JAVA] Getter, Setter 등을 편하게 사용하자(Lombok)]]></title>
					<link>https://blog.naver.com/cys_star/221191856296</link>
					<guid>https://blog.naver.com/cys_star/221191856296</guid>
					<description><![CDATA[누구나 클래스를 만들면서 Getter, Setter, Constructor 등을 만들기 귀찮았던 경험이 있었을 것이다.위와같이 Course라는 클래스가 있을때 객체를 통하여 각각의 값을 대입 시키는 경우가 있는 경우가 많은데, 이때, 각각의 멤버 변수마다 Getter, Setter을 만들어야 할 것이다. 하지만 Project Lombok을 사용한다면 어노테이션 만으로도 Getter/Setter를 만들어 주기 때문에 프로그래머의 시간 절약과 코드 가독성을 높여 주는데에 큰 도움이 된다. Lombok이란?lombok은 자바에서 @Getter, @Setter 같은 annotation 을 통하여 클래스를 쉽게 작성 할 수 있도록 도와주며, 멤버 변수에 대한 Getter/Setter Method, Equals(), hashCode(), toStri.......]]></description>
					<pubDate>Tue, 23 Jan 2018 21:28:57 +0900</pubDate>
					<tag><![CDATA[Lombok,projectLombok,롬복,getter,setter,constructor]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[기타]]></category>
					<title><![CDATA[2018년 1월 프로그래밍 언어 순위]]></title>
					<link>https://blog.naver.com/cys_star/221191731860</link>
					<guid>https://blog.naver.com/cys_star/221191731860</guid>
					<description><![CDATA[소프트웨어 품질 관리 업체 '티오베(TIOBE)'가 조사한 2018년 1월 프로그래밍 언어 순위https://www.tiobe.com/tiobe-index/]]></description>
					<pubDate>Tue, 23 Jan 2018 18:18:24 +0900</pubDate>
					<tag><![CDATA[프로그래밍,프로그래밍언어순위,프로그래밍언어,언어순위]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Git]]></category>
					<title><![CDATA[[Git] Stage area]]></title>
					<link>https://blog.naver.com/cys_star/221190909297</link>
					<guid>https://blog.naver.com/cys_star/221190909297</guid>
					<description><![CDATA[text1.txt라는 파일을 복사한후 상태를 보면 버전 관리 되고 있지 않다(untracted) 고 나와있다. 그러므로 버전관리를 시작해야 한다. text.txt와 text1.txt 두개 모두의 내용을 다 변경 후 상태를 보면 둘다 modified라고 뜬다.이런경우 왜 항상 add를 해 주어야 할까?코드를 개발하다보면 여러 소스코드를 수정하게 된다. 그런 경우 자주 commit 시기를 놓치게 된다. 하나의 commit는 하나의 작업을 담고 있는게 이상적이다. 이때, add는 commit하고자 하는 파일만 commit하게 할 수가 있다. 즉 이경우 2개의 파일이 변경되었지만 add를 한 파일만이 commit이 되기 때문에 이 경우 git의 상태를 보면 text.txt만 commit이 되어있고 text1.txt는.......]]></description>
					<pubDate>Mon, 22 Jan 2018 19:24:31 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Git]]></category>
					<title><![CDATA[[Git] git 버전 만들기]]></title>
					<link>https://blog.naver.com/cys_star/221190894985</link>
					<guid>https://blog.naver.com/cys_star/221190894985</guid>
					<description><![CDATA[우리가 만들 버전을 누가 만들었는지 알려 줄 수 있도록 이름을 설정 해 주어야 한다. 이 작업을 통하여 다른 사람이 봤을 때 어떤 사람이 작업을 했는지 알 수 있다. git commit명령어를 치면 vim이 실행되는데, 이 부분에 어떤 부분이 변경되는지, 왜 변경되었는지와 같은 메세지를 기록한다. 이를 버전메세지 또는 커밋메세지라고 한다. 첫 줄에 1이라는 내용을 기록한 후 :wq로 나가게 되면 다음과 같은 내용을 볼 수 있다. text.txt의 새로운 버전이 되었다 라는 내용이다. git log를 통하여 누가, 언제 버전을 만들었는지와 같은 내용을 볼 수가 있다. text.txt파일을 수정한 후 status를 보게되면 수정되었다는 메세지를 볼 수 있다. ★이.......]]></description>
					<pubDate>Mon, 22 Jan 2018 19:01:55 +0900</pubDate>
					<tag><![CDATA[git,version,git_version]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Git]]></category>
					<title><![CDATA[[Git] git이 관리할 대상으로 파일 등록]]></title>
					<link>https://blog.naver.com/cys_star/221190878008</link>
					<guid>https://blog.naver.com/cys_star/221190878008</guid>
					<description><![CDATA[vim이라는 프로그램으로 text.txt라는 파일을 만들어 보자. 여기서 vim 과 vi의 차이?vim은 "visual interface improved"의 약자로 vi의 향상된 버전이다. 대부분의 리눅스에는 기본으로 vim만 설치되어있으므로 vi 명령어를 호출해도 vim이 실행된다.i키를 눌러 끼워넣기 상태로 바꾸어 입력할 수 있는 상태로 변경한다.그 후 내용을 넣고 ESC를 눌려 끼워넣기를 종료후 :wq를 입력해 빠져나간다. git status 명령어를 입력해 폴더 내부의 상태를 볼 수 있다. 좀 전에 생성한 text.txt 파일은 git 버전관리가 되는 gitfth 폴더 내부에 있지만 버전관리를 시작하라고 설정하기 전까지 이 파일은 무시하게 된다. 이 명령어를 통하여 명확하게 추적.......]]></description>
					<pubDate>Mon, 22 Jan 2018 18:38:05 +0900</pubDate>
					<tag><![CDATA[git,git_add]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Git]]></category>
					<title><![CDATA[[Git] 저장소 만들기]]></title>
					<link>https://blog.naver.com/cys_star/221190865984</link>
					<guid>https://blog.naver.com/cys_star/221190865984</guid>
					<description><![CDATA[pwd 명령어를 통해 자신의 작업 경로를 인지하고 작업 디렉토리를 생성한 후 그 폴더로 이동한다. 그 후 git을 쳐보면 git과 관련된 커맨드를 볼 수가 있는데, init이라는 명령어가 현재 디렉토리에서 작업을 진행하겠다는 것을 git에게 알려주는 기능을 한다. ls -al 명령어를 이용하여 내부 파일 정보를 볼 수가 있는데, 여기서 .git이라는 디렉토리가 버전관리를 담당하는 디렉토리이다. 이 .git 디렉토리를 제거하면 마지막 소스코드는 남아있겠지만 관리 해왔던 버전 정보들이 제거 된다.]]></description>
					<pubDate>Mon, 22 Jan 2018 18:22:19 +0900</pubDate>
					<tag><![CDATA[git,repository]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[기타]]></category>
					<title><![CDATA[많이 사용하는 정규 표현식]]></title>
					<link>https://blog.naver.com/cys_star/221190828440</link>
					<guid>https://blog.naver.com/cys_star/221190828440</guid>
					<description><![CDATA[정규 표현식 설명과 기능]]></description>
					<pubDate>Mon, 22 Jan 2018 17:37:29 +0900</pubDate>
					<tag><![CDATA[정규표현식]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[기타]]></category>
					<title><![CDATA[구글에서 딥러닝을 이용하여 만든 tacotron]]></title>
					<link>https://blog.naver.com/cys_star/221188764288</link>
					<guid>https://blog.naver.com/cys_star/221188764288</guid>
					<description><![CDATA[Text를 인간 목소리처럼 흉내내는 AIhttps://google.github.io/tacotron/]]></description>
					<pubDate>Fri, 19 Jan 2018 16:09:52 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[MQTT]]></category>
					<title><![CDATA[[MQTT] Ubuntu에서 apt-get 명령어를 이용하여 Mosquitto 설치]]></title>
					<link>https://blog.naver.com/cys_star/221187973904</link>
					<guid>https://blog.naver.com/cys_star/221187973904</guid>
					<description><![CDATA[apt-get 명령어를 통하여 mosquitto와 mosquitto client(publisher, subscriber)를 받아 사용할 수 있다. 1. Mosquitto broker, subscriber, publisher 설치2. Mosquitto broker 실행그 후 명령어를 통하여 메시지를 주고받을 수 있다. ※ Documenthttps://mosquitto.org/man/mosquitto-8.html]]></description>
					<pubDate>Thu, 18 Jan 2018 16:49:50 +0900</pubDate>
					<tag><![CDATA[Mosquitto,Mosquitto_sub,Mosquitto_pub]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[MQTT]]></category>
					<title><![CDATA[[MQTT] Mosquitto publisher, subscriber 실행 및 테스트]]></title>
					<link>https://blog.naver.com/cys_star/221187650993</link>
					<guid>https://blog.naver.com/cys_star/221187650993</guid>
					<description><![CDATA[Mosquitto를 이용하여 간단한 실행 테스트 코드를 작성할 수 있다. ● my_pub.c ● my_sub.c컴파일을 하다가 보면 아래와 같은 오류가 발생할 수 있다. 왜냐하면 mosquitto library를 사용하지 않아 관련된 파일들을 찾을 수 없기 때문이다. 그렇기 때문에 컴파일 시에 -lmosquitto를 붙여 컴파일을 해야 mosquitto library를 이용하여 컴파일 할 수 있다.]]></description>
					<pubDate>Thu, 18 Jan 2018 10:27:03 +0900</pubDate>
					<tag><![CDATA[mosquitto,mosquitto_sub,mosquitto_pub,mosquitto_compile]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[MQTT]]></category>
					<title><![CDATA[[MQTT] Ubuntu에서 Mosquitto(MQTT Broker) 설치하기]]></title>
					<link>https://blog.naver.com/cys_star/221187166353</link>
					<guid>https://blog.naver.com/cys_star/221187166353</guid>
					<description><![CDATA[0. 환경설정Virtural Machine - VMWare Player14 OS - Ubuntu 16.04.3-desktop-amd64 Source - mosquitto-1.4.14 1. 사전 설치(라이브러리 등)2. mosquitto 최신 버전 설치 1.4.143. mosquitto 실행4. 테스트topic이라는 이름으로 토픽을 설정하여 publish, subscribe 할 수 있다.※ Mosquitto Command -c, --config-file Load configuration from a file. If not given, the default values as described in mosquitto.conf(5) are used. -d, --daemon Run mosquitto in the background as a daemon. All other behaviour remains the same. -p, --port Listen on the port specified instead of the default 1883. This acts in addition to th.......]]></description>
					<pubDate>Wed, 17 Jan 2018 17:26:43 +0900</pubDate>
					<tag><![CDATA[mqtt,mosquitto,mosquitto_compile]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[Python] 모듈의 사용]]></title>
					<link>https://blog.naver.com/cys_star/221178604468</link>
					<guid>https://blog.naver.com/cys_star/221178604468</guid>
					<description><![CDATA[모듈1(helloModule.py)모듈2(byeModule.py) 모듈3(niceModule.py) module.py 실행코드 결과]]></description>
					<pubDate>Fri, 05 Jan 2018 16:49:03 +0900</pubDate>
					<tag><![CDATA[Python,파이썬,모듈,Module]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[Python] Selenium을 이용한 웹 테스트]]></title>
					<link>https://blog.naver.com/cys_star/221178572115</link>
					<guid>https://blog.naver.com/cys_star/221178572115</guid>
					<description><![CDATA[준비물Python, Selenium, WebDriverSeleniumSelenium을 이용하여 웹 테스트 및 자동화 도구를 만들 수 있다. Selenium 설치 아나콘다의 경우 cmd를 열고그 후 spyder로 실행하면 selenium을 사용할 수 있다. WebDriverSelenium이 설치되었다고 해서 바로 웹 자동화 도구를 사용할 수가 있는 것이 아니다. 왜냐하면 브라우저 별로 각기 다른 드라이버를 사용하기 때문에 그에 맞는 드라이버를 다운로드해 등록을 시켜주어야 그 드라이버를 이용하여 웹 자동화 도구를 사용할 수가 있다. 여기서는 크롬을 기준으로 설명을 할 예정이다. 2018년 1월 26일 자 기준으로 2.35가 최신 버전이다.https://sites.google.com/a/chromium.org/chromedriver/do.......]]></description>
					<pubDate>Fri, 05 Jan 2018 16:10:07 +0900</pubDate>
					<tag><![CDATA[Python,파이썬,Selenium,spyder]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[Python] 반목문을 통한 리스트 출력]]></title>
					<link>https://blog.naver.com/cys_star/221177630689</link>
					<guid>https://blog.naver.com/cys_star/221177630689</guid>
					<description><![CDATA[소스코드실행결과]]></description>
					<pubDate>Thu, 04 Jan 2018 12:48:39 +0900</pubDate>
					<tag><![CDATA[Python,파이썬]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[Python] 문자열 차이]]></title>
					<link>https://blog.naver.com/cys_star/221177616277</link>
					<guid>https://blog.naver.com/cys_star/221177616277</guid>
					<description><![CDATA[''' 3개의경우 다음 줄로 넘어가도 되지만 str = ' hello' 이런식의 경우 error가 발생한다. 그래서 '''을 이용해서 주석에 준하는 효과를 얻을 수 있다. =&gt; 주석은 아니지만 주석 대용으로 사용가능]]></description>
					<pubDate>Thu, 04 Jan 2018 12:25:56 +0900</pubDate>
					<tag><![CDATA[Python,파이썬,파이썬_문자열]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[Python] 입출력]]></title>
					<link>https://blog.naver.com/cys_star/221177601730</link>
					<guid>https://blog.naver.com/cys_star/221177601730</guid>
					<description><![CDATA[소스코드실행결과]]></description>
					<pubDate>Thu, 04 Jan 2018 12:04:29 +0900</pubDate>
					<tag><![CDATA[Python,파이썬,파이썬_입출력,입출력]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Web]]></category>
					<title><![CDATA[[WEB] JQuery를 이용한 데이터 전달받기]]></title>
					<link>https://blog.naver.com/cys_star/221022072992</link>
					<guid>https://blog.naver.com/cys_star/221022072992</guid>
					<description><![CDATA[이동할 페이지가 loginCheckDB.jsp 123456789101112131415161718192021&lt;script&gt;$(function(){ var out; $("#user_login").click(function(){ var data_param ="input_id="+$("#user_id").val() + "&amp;" + "input_pw="+$("#user_pw").val(); $.ajax({ type : "post", url : "loginCheckDB.jsp", data : data_param, success : function(result){ var p = result.trim(); if(p == 1){/* 로그인성공 */ &lt;%%&gt; } else if(p == 2) alert("로그인 실패!"); } }); });});&lt;/script&gt; loginCheckDB.jsp12345678910111213141516... String userID = request.getParameter("input_id"); String userPW = request.getParameter("input_pw").......]]></description>
					<pubDate>Mon, 05 Jun 2017 14:23:22 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Web]]></category>
					<title><![CDATA[[WEB] HTML 모바일크롬 창 색 변경]]></title>
					<link>https://blog.naver.com/cys_star/221021752821</link>
					<guid>https://blog.naver.com/cys_star/221021752821</guid>
					<description><![CDATA[&lt;meta name="theme-color" content="#00ABA9"&gt; Head 사이에 선언하면 크롬 모바일창 색이 바뀜]]></description>
					<pubDate>Mon, 05 Jun 2017 02:44:04 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[Web]]></category>
					<title><![CDATA[[WEB] WebRTC란?]]></title>
					<link>https://blog.naver.com/cys_star/221021093627</link>
					<guid>https://blog.naver.com/cys_star/221021093627</guid>
					<description><![CDATA[WebRTC W3C가 초안 내놓은 기술로 음성 영상등의 데이터를 서버를 거치지 않고 바로 실시간으로 송수신 하는기술 크롬 파이어폭스 등에서 지원 SKT에서 PlayRTC라는걸 내놓음]]></description>
					<pubDate>Sun, 04 Jun 2017 00:04:48 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[JAVA]]></category>
					<title><![CDATA[[JAVA]시스템 트레이 만들기]]></title>
					<link>https://blog.naver.com/cys_star/221013824780</link>
					<guid>https://blog.naver.com/cys_star/221013824780</guid>
					<description><![CDATA[123456789101112131415161718MenuItem exititem = new MenuItem("exit");PopupMenu menu = new PopupMenu("My Menu");menu.add(exititem);exititem.addActionListener(new ActionListener(){ @Override public void actionPerformed(ActionEvent e) { System.exit(1); }});TrayIcon myTray = new TrayIcon(Toolkit.getDefaultToolkit().getImage(trayURL),"chat",menu); SystemTray tray = SystemTray.getSystemTray(); try { tray.add(myTray); } catch (AWTException e1) { System.out.println(e1.getMessage()); }myTray.setImageAutoSize(true);]]></description>
					<pubDate>Thu, 25 May 2017 11:23:41 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>cys_star</author>
					<category><![CDATA[JAVA]]></category>
					<title><![CDATA[서울 버스API 적용]]></title>
					<link>https://blog.naver.com/cys_star/221010198962</link>
					<guid>https://blog.naver.com/cys_star/221010198962</guid>
					<description><![CDATA[https://www.data.go.kr/들어가서 회원가입후 https://www.data.go.kr/dataset/15000314/openapi.do 여기서 활용신청을 누른후&#65279;정보 입력 승인이 되면http://api.bus.go.kr/index.jsp에서 사용법 이용해 사용 --------------------------------------------------SERVICE KEY IS NOT REGISTERED ERROR. 라고 뜨는경우--------------------------------------------------안녕하세요. 공공데이터포털 운영팀입니다.인증키 사용에 참고하셔야 하는 사항이 대표적으로 2가지가 있습니다.1. 발급 된 인증키가 기관에 전달되는 시간 : 평균 1시간에 한번 기관으로 전송됩니다.2. 인증키 변환 : 인증키는 utf-8 형식으로 URL Encode 된 값으로 입.......]]></description>
					<pubDate>Sat, 20 May 2017 16:35:57 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
