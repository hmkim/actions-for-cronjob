<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>HAMA 블로그</title>
<link>https://hamait.tistory.com/</link>
<description>관심키워드:  폴리글랏,동시성,에너지IoT, 시계열분석,블럭체인</description>
<language>ko</language>
<pubDate>Mon, 13 May 2019 11:05:22 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>[하마] 이승현 (wowlsh93@gmail.com)</managingEditor>
<image>
<title>HAMA 블로그</title>
<url>http://cfile2.uf.tistory.com/image/24414547584670F7239537</url>
<link>https://hamait.tistory.com</link>
<description>관심키워드:  폴리글랏,동시성,에너지IoT, 시계열분석,블럭체인</description>
</image>
<item>
<title>[미디움] 블록체인 개발자 면접 오픈북</title>
<link>https://hamait.tistory.com/1054</link>
<description>&lt;figure id=&quot;og_1556162188211&quot; contenteditable=&quot;false&quot; data-ke-type=&quot;opengraph&quot;&gt;&lt;a href=&quot;https://themedium.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-original-url=&quot;https://themedium.io/&quot;&gt;
&lt;div class=&quot;og-image&quot; style=&quot;background-image: url('https://scrap.kakaocdn.net/dn/vpwGD/hyASudKDKB/Fjfk6oFFvKu78FPkV2iFz0/img.jpg?width=1920&amp;amp;height=1024&amp;amp;face=0_0_1920_1024,https://scrap.kakaocdn.net/dn/Af331/hyASwWUlEB/YGobR6tQZNQMcoGxoquhz1/img.jpg?width=1440&amp;amp;height=768&amp;amp;face=0_0_1440_768,https://scrap.kakaocdn.net/dn/bBC3bS/hyASuEMHSO/Dabf9dcsN2dkkCwwIutNnK/img.jpg?width=778&amp;amp;height=960&amp;amp;face=0_0_778_960');&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;og-text&quot;&gt;
&lt;p class=&quot;og-title&quot;&gt;Medium&lt;/p&gt;
&lt;p class=&quot;og-desc&quot;&gt;기존의 IT 시스템과 네트워크를 혁신할 수 있는 가장 빠른 블록체인 기술을 개발합니다&lt;/p&gt;
&lt;p class=&quot;og-host&quot;&gt;themedium.io&lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://themedium.io/&quot;&gt;미디움&lt;/a&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;(&lt;/span&gt;&lt;a href=&quot;https://www.rocketpunch.com/companies/medium/jobs&quot;&gt;채용정보&lt;/a&gt;&lt;span style=&quot;color: #333333;&quot;&gt;) 에서는 개발자 채용을 하고 있는데, 질문을 오픈해서 구인 합니다.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;질문 리스트는 1. 블록체인 부분&amp;nbsp; 2. 소프트웨어 일반/C++/Java/Go 가 있습니다. &lt;br /&gt;블록체인 부분은 블록체인 일반,이더리움,비트코인,하이퍼레저 패브릭에 한정되어 질문됩니다.&lt;br /&gt;소프트웨어 부분은 저희 플랫폼이 기본적으로 C++으로 만들어져 있으며, Client SDK 는 자바로, SmartContract 와 특정서비스(Ordering Consensus 등)은 Go로 만들어지기 때문에 소프트웨어 일반과 각 언어에 대한 질문이 포함 됩니다.(&lt;span style=&quot;color: #333333;&quot;&gt;C++ 에 대한 깊이있는 이해는 필수적 입니다)&lt;/span&gt;&amp;nbsp;&lt;span&gt;질문은 면접관이 몇가지를 선택하여 질문하며, 면접자가 선택하여 답변하는 방식도 포함됩니다.&amp;nbsp;&lt;/span&gt;답변은 말을 통해서 하거나 화이트 보드에 대략적으로 그려가면서 설명 할 수 있습니다. (구체적인 코딩을 요구하진 않습니다) &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;롤은 이렇습니다.&amp;nbsp; 기본적으로&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;우리 조직은 모두가 연구/개발에 적극적으로 임해야 합니다.&lt;br /&gt;&lt;/span&gt;누가 todo를 일일이 가르켜주지 않아도 능동적으로 임해야 합니다.&lt;br /&gt;&lt;br /&gt;모두를 잘 이해하고 계신 분은 수석 아키텍트롤을 맡으실 것이고, &lt;br /&gt;1번을 잘아는 분은 블록체인 아키텍트&amp;nbsp;&lt;br /&gt;2번을 잘아는 분은 소프트웨어 아키텍트 or 개발자&lt;br /&gt;3번은 아래 질문 리스트에 없지만 &quot;인프라 &amp;amp; 데브옵스 아키텍트&quot;도 구합니다.&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;제가 생각나는데로 작성했지만 저도 자세히 모르는 것들도 있습니다. &lt;br /&gt;함께 공부하고 공유하는 마음으로 임하시면 될 거 같습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;b&gt;질문 리스트 (VER 0.1)&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/b&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;b&gt;블록체인 부분&amp;nbsp;&lt;br /&gt;&lt;/b&gt;&lt;br /&gt;블록체인 일반&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;토큰과 코인의 차이는 무엇인가요? (in 이더리움)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;토큰 디자인에 대해서 아는대로 말해주세요.&lt;/span&gt;&lt;br /&gt;&lt;span&gt;3. 이더리움 ERC20 &amp;amp; ERC721 는 무슨 차이가 있나요&amp;nbsp;&lt;br /&gt;4.블록체인 트릴레마(Blockchain Trilemma)란 ?&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;비트코인&amp;nbsp;&lt;br /&gt;1. 비트코인에서 UTXO 란 무엇인가요?&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;비트코인에서 트랜잭션 검증은 어떻게 이루어 지나요&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&amp;nbsp;비트코인에서 불룸필터는 왜 사용 되나요&amp;nbsp;&lt;br /&gt;4. 비트코인에서 몇명 중에 몇명의 서명이 있어야 사용 할 수 있다라는 것은 어떻게 표현하나요&lt;/p&gt;
&lt;p&gt;이더리움&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;이더리움에서 트랜잭션 검증은 어떻게 이루어 지나요&lt;br /&gt;&lt;span style=&quot;color: #000000;&quot;&gt;2. 이더리움에서 블룸필터는 왜 사용 되나요&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&amp;nbsp;이더리움에서 머클패트리샤트리란 무엇인가요&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;이더리움에서 RLP는 무엇인가요? 왜 필요한가요?&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;Protocol buffer 와는 어떤 차이가 있나요&lt;/span&gt;&lt;br /&gt;5. 이더리움에서 플라즈마란 무엇인가요&lt;br /&gt;&lt;/span&gt;6. 이더리움에서 노드디스커버리는 어떻게 이루어 지나요&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;7. 이더리움에서 주소를 public key가 아니라, 이더리움 경우 20byte로 줄여서 사용하는 이유는 무엇인가요&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;8. 줄여진 주소를 가지고 서명을 어떻게 확인 하나요&amp;nbsp;&lt;br /&gt;&lt;/span&gt;9. 이더리움에서 블록싱크 방식은 어떻게 되나요&lt;br /&gt;10. 이더리움에서&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;저장용량을 줄이기 위한 prunning은 어떻게 할 수 있을까요&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;하이퍼레저 패브릭&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1. 하이퍼레저 패브릭에서 트랜잭션 흐름을 설명해 주세요.&lt;br /&gt;2. 하이퍼레저 패브릭에서 MVCC 충돌이란 무엇인가요&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3. 하이퍼레저 패브릭에서 MSP 란 무엇인가요&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;4. 하이퍼레저 패브릭에서 Fabric-CA가 하는 역할은 무엇인가요&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;5. 하이퍼레저 패브릭에서 RWSet이란 무엇인가요&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;6.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;하이퍼레저 패브릭에서 블룸 필터는 어떻게 사용 되나요&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;7.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;하이퍼레저 패브릭에서 ACL 은&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;어떤 정보를 어떻게 가져와서&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;적용 되나요&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;8. 하이퍼레저 패브릭에서 저장용량을 줄이기 위한 prunning은 어떻게 할 수 있을까요&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;9. 하이퍼레저 패브릭에서 Kafka 는 왜 사용 되나요? RAFT 는 왜 등장 한 걸 까요?&lt;br /&gt;10. 하이퍼레저 패브릭에서 토큰은 만들 수 있나요?&amp;nbsp; FabToken 왜 만들어 졌을까요?&amp;nbsp;&amp;nbsp;&lt;br /&gt;11.&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;하이퍼레저 패브릭에서&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;리더피어와 앵커피어란 무엇인가요?&lt;br /&gt;&lt;/span&gt;12. 하이퍼레저 패브릭에서&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;Gossip Protocol 는 왜 사용하나요?&amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;암호학&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&lt;/span&gt;HMAC /&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;PKI /&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;ECDSA&lt;span&gt;는 무엇인가요&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2.&lt;/span&gt;&amp;nbsp;diffie-hellman&amp;nbsp;키&amp;nbsp;교환&amp;nbsp;알고리즘은 무엇인가요? 이더리움에서는 왜 사용하나요&amp;nbsp;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&amp;nbsp;하이퍼레저 패브릭의 ECcert 란 무엇인가요? 패브릭에서는 왜 사용하나요&amp;nbsp;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;4.&lt;/span&gt;&amp;nbsp;하이퍼레저 패브릭의 TCert 는 왜 없어졌고, 대체제는 무엇인가요&amp;nbsp;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;5.&lt;/span&gt;&amp;nbsp;Schnorr&amp;nbsp;signature는 무엇인가요?&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;6. 이더리움에서 영지식증명으로 활용 할 수 있는 것은 무엇이 있을까요&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;7. 하이퍼레저 패브릭에서 영지식증명으로 활용 할 수 있는 것은 무엇이 있을까요&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;컨센서스&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;CFT와 BFT의 차이는 무엇인가요&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2. RAFT 에서 리더 선출은 어떻게 하나요?&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&amp;nbsp;PBFT 알고리즘은 무엇인가요&lt;br /&gt;4. DPOS 알고리즘은 무엇인가요&lt;br /&gt;&lt;br /&gt;기타&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1. 하이퍼레져 패브릭 Indy 란&lt;br /&gt;2.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;EOS에서 트랜잭션 수수료는?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;br /&gt;블록체인 소프트웨어 일반/C++/Java/Go&amp;nbsp;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;소프트웨어 일반/설계&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&lt;/span&gt;&amp;nbsp;inheritance보다 Composition을 사용하라는 말은 무슨 의미인가요?&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2.&lt;/span&gt;&amp;nbsp;주로 사용하는 리팩토링 3가지를 말해 주세요.&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&amp;nbsp;디자인패턴은 표현(구조)보다는 의도가 중요하다는 말은 무슨 의미인가요?&lt;br /&gt;4. 예외에 대해서 어떻게 생각하시나요? (&lt;a href=&quot;https://hamait.tistory.com/712&quot;&gt;예외&amp;nbsp;처리에&amp;nbsp;대한&amp;nbsp;6가지&amp;nbsp;화두&lt;/a&gt;&amp;nbsp;참고)&lt;br /&gt;5. 동기,비동기,블록,논블록은 무엇이라고 생각하나요?&lt;br /&gt;6. 잠금 없는 동시성 프로그래밍이란 무엇인가요?&lt;br /&gt;7. Actor 패턴과 Go언어의&amp;nbsp;CSP&amp;nbsp;모델의 차이점은 무엇인가요?&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;8.&lt;/span&gt;&amp;nbsp;공간(메모리)를 낭비해서 성능을 높이는 방식의 예를 3가지만 들어주세요.&lt;br /&gt;&lt;br /&gt;자바&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1. 자바&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;의&amp;nbsp;메서드&amp;nbsp;인자 전달&amp;nbsp;방식과&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;Shallow&amp;nbsp;Copy / Deep&amp;nbsp;Copy 에 대해 설명 해주세요.&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2.&lt;/span&gt;&amp;nbsp;자바의 HashMap 은 어떻게 동작하나요?&lt;br /&gt;3. 자바 리플렉션은 무엇이며, 활용처가 어떤게 있을 까요?&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;br /&gt;C++&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;C++ 에서&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;가상함수테이블에 대해서 말해주세요&lt;br /&gt;2. C++ 에서 함수포인터와 클래스멤버함수 포인터와 std::function 에 대해서 설명해주세요&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;C++ 에서 성능하락을 막기 위해 알아야 할 기본적인 것들은 무엇이 있을까요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;4.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;C++ 에서 성능향상을 위해서 일반적으로 할 수 있는게 무엇이 있을까요?&lt;span style=&quot;color: #333333;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;5. C++ 에서&amp;nbsp; STL 컨테이너의 데이터 삭제에 대해서 말해주세요&lt;br /&gt;&lt;/span&gt;&lt;span&gt;6. C++ 에서 생산자,소비자패턴중 소비자 부분의 코드입니다. 코드를 설명 해주세요&lt;/span&gt;&lt;/p&gt;
&lt;pre id=&quot;code_1556584883657&quot; class=&quot;c++ cpp&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;    std::unique_lock&amp;lt;std::mutex&amp;gt; ul_que_res(_mtx_recv_endorser, std::defer_lock);
    std::list&amp;lt;SPTR_PROPOSAL_RES&amp;gt; que_recv; 

    while (!_bStop) 
    { 
        ul_que_res.lock(); 
        if (_que_recv_endorser.empty()) 
            _cond_recv_endorser.wait(ul_que_res); 

        que_recv.swap(_que_recv_endorser); 
        ul_que_res.unlock(); 

        while (!que_recv.empty()) 
        { 
            res = que_recv.front(); 
            que_recv.pop_front(); ​&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;7.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;C++ 에서&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;std::move 와 rvalue 란 무엇인가요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;8.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;C++에서 메모리 풀링은 어떻게 구현하나요? (다양한 방식 중 아무거나)&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;9. C++에서&amp;nbsp;unique_lock과 lock_guard의 차이점은? 아래 코드를 설명하시요.&lt;/span&gt;&lt;/p&gt;
&lt;pre id=&quot;code_1556248667646&quot; class=&quot;c++ cpp&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;sptr_nt_lbuf pool_nt_lbuf::get_buf(){
   sptr_nt_lbuf pbuf;
   std::unique_lock&amp;lt;std::mutex&amp;gt; ul(_mtx, std::defer_lock);

   while (pbuf.get() == nullptr){
    ul.lock();
    if (_pool.empty()) _cond.wait(ul);
    if (!_pool.empty())
    {
       pbuf = _pool.front();
      _pool.pop_front();
    }
  }

  return pbuf;
}

void pool_nt_lbuf::release_buf(sptr_nt_lbuf pbuf){
  std::lock_guard&amp;lt;std::mutex&amp;gt; lg(_mtx);
  _pool.push_back(pbuf); 
  _cond.notify_all();
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;Golang&lt;br /&gt;&lt;/span&gt;1. Go의 덕타이핑의 장,단점은 무엇인가요?&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2.&lt;/span&gt;&amp;nbsp;Go에서 고루틴&amp;amp;채널은 무엇인가요?&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3. Go에서 select 문은 어떻게 사용되나요? 아래 코드를 설명 해 주세요.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre id=&quot;code_1556248693116&quot; class=&quot;go&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;package main

import (
   &quot;fmt&quot;
   &quot;time&quot;
)

var scheduler chan string

func consuming (prompt string){
      fmt.Println(&quot;consuming 호출됨&quot;)
   select {
   case scheduler &amp;lt;- prompt:
      fmt.Println(&quot;이름을 입력받았습니다 : &quot;, &amp;lt;- scheduler)
   case &amp;lt;-time.After(5 * time.Second):
      fmt.Println(&quot;시간이 지났습니다.&quot;)
   }
}

func producing (console chan string) {
   var name string
   fmt.Print(&quot;이름:&quot;)
   fmt.Scanln(&amp;amp;name)
   console &amp;lt;- name
}
func main() {
   console := make(chan string, 1)
   scheduler = make(chan string, 1)

   go func(){
      consuming(&amp;lt;-console)
   }()

   go producing(console)

   time.Sleep(100 * time.Second)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre id=&quot;code_1556248711281&quot; class=&quot;go&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;func (p *MsgPipeRW) WriteMsg(msg Msg) error {
  if atomic.LoadInt32(p.closed) == 0 {
    consumed := make(chan struct{}, 1)
    msg.Payload = &amp;amp;eofSignal{msg.Payload, msg.Size, consumed}
   select {
    case p.w &amp;lt;- msg:
      if msg.Size &amp;gt; 0 {
      // wait for payload read or discard
        select {
          case &amp;lt;-consumed:
          case &amp;lt;-p.closing:
        }
      }
      return nil
    case &amp;lt;-p.closing:
    }
  }
  return ErrPipeClosed
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;분산시스템&lt;br /&gt;1. CAP 이론이란?&amp;nbsp;&lt;br /&gt;2. consistent&amp;nbsp;hashing 이란 무엇인가요?&lt;br /&gt;3.&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;Gossip Protocol 는 무엇인가요?&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;br /&gt;DB&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1. 트랜잭션에서&amp;nbsp; Two&amp;nbsp;Phase&amp;nbsp;Commit 이란 무엇인가요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2. WAL (&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;write-ahead logging)&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;은 무엇인가요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;B+tree 는&amp;nbsp; 무엇인가요?&lt;br /&gt;4. 블록체인에서 블록저장을 위한 ON DISK 데이터 구조와 DBMS에서의 ON DISK 데이터 구조는 어떤 차이가 있을 까요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;5.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;LSM (log structed merge tree)은 대략 무엇인가요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;6. leveldb의 특징 및 장점은 무엇인가요?&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;br /&gt;MQ&lt;br /&gt;1. Kafka 의 브로커,토픽,파티션은 무엇인가요?&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2. Kafka 에서 Zookeeper 는 무엇이고 어떤 역할을 담당하나요?&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;네트워킹 / 소켓&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp;멀티쓰레드 방식과 Select or ePoll 방식의 소켓통신 차이점은 무엇인가요?&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;2. 소켓통신에서 가변 read 버퍼와 고정 read 버퍼 각각의 장,단점은? 가변버퍼시 메모리 풀링 방식은?&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;3. 소켓통신에서 타임아웃은 무엇이고 Nagle 알고리즘은 무엇인가요?&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;4. 소켓통신상 SSL/TLS flow를 말해주세요&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;5. React 방식과 Proact 방식의 차이점은 무엇인가요?&amp;nbsp; (in POSA2)&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;table id=&quot;tablepress-3&quot; style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;Reactor&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Event Handling&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Allows event-driven applications to demultiplex and dispatch service requests that are delivered to an application from one or more clients.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;Proactor&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Event Handling&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;Allows event-driven applications to efficiently demultiplex and dispatch service requests triggered by the completion of asynchronous operations, to achieve the performance benefits of concurrency without incurring certain of its liabilities.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;span style=&quot;color: #333333;&quot;&gt;6. NAT 와 UPnP 는 무엇인가요?&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;b&gt;인프라 &amp;amp; 데브옵스 아키텍쳐&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/b&gt;&lt;/b&gt;도커 + 쿠버네이트등 컨테이너화&lt;br /&gt;빌드자동화&lt;br /&gt;테스트자동화&lt;br /&gt;디플로이자동화&lt;br /&gt;서비스관리 자동화 (앤서블등)&amp;nbsp;&lt;br /&gt;이슈등록자동화&lt;br /&gt;네트워킹 인프라에 대한 이해&amp;nbsp;&lt;br /&gt;수직 / 수평 분활에 대한 이해&amp;nbsp;&lt;br /&gt;무정지 시스템 이해 및 구축 (무정지 리소스 증축등)&amp;nbsp;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;hr contenteditable=&quot;false&quot; data-ke-type=&quot;hr&quot; data-ke-style=&quot;style5&quot; /&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;사족) 오픈북 면접은, 면접자가 어떤 회사,학교,전공 출신인지 상관없이 현재 실력으로 판단하며, 나이,경력,성별,국적&lt;span style=&quot;color: #333333;&quot;&gt;(외국인 환영)&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;등 이런 요소들은 평가에 영향을 미치지 않습니다. 면접시 토론을 잘하는게 최우선 순위입니다.&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;물론 완벽 할 수 없음은 인정하고 있습니다.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;우리가 면접을 볼 때를 생각해보면, 황당한 질문이 나올 수도 있고 - 모든 지식을 머리속에 두고 있지 않기 때문에 - 운에 따라서 모르는 질문만 나올 수도 있습니다. 이에 따라 우리는 사측에서 필요한 지식이 무엇인지 구체적으로 오픈하고, 이 중 선택하여 질문을 하는게 서로 유리 할 거라 판단 하였습니다. 사측은 이를 통해서라도 준비된 인재를 받아 드릴 수 있을거 같습니다.&lt;/span&gt;&lt;span style=&quot;color: #333333;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #333333;&quot;&gt;질문 리스트들에 대한 모든 것을 세부적으로 기억하고 있어야 채용한다는 의미는 아닙니다. 세상은 변하여서 머리속에 모든 것을 담아 두는 시대는 아니라고 생각합니다. 다만 무엇을 어떻게 찾아야 하는지에 대한 나침판은 필요하겠지요. 저도 모르는 100% 완벽한 답을 원하는것 보다는 공부는 하였는지, 어떤 생각을 가지고 있는지 어떻게 이해하고 있는지, 모르는 것을 명확히 표현하는지에 대한 검토를 하려 합니다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;관심 있으신 분은&amp;nbsp;&lt;br /&gt;seunghyun.lee@themedium.io 로 메일 함 보내주세요 ^^&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;ps)&lt;/p&gt;
&lt;p&gt;미디움에서 구인하는 블록체인 플랫폼 팀 직무 정리&amp;nbsp; (수평적 관계)&amp;nbsp;&lt;/p&gt;
&lt;p&gt;소스품질 매니저&amp;nbsp;&amp;nbsp;&lt;br /&gt;프로젝트 매니저&amp;nbsp;&lt;br /&gt;인프라 &amp;amp; 데브옵스 아키텍트&amp;nbsp;&lt;br /&gt;블록체인 아키텍트&amp;nbsp;&lt;br /&gt;소프트웨어 아키텍트&lt;/p&gt;
&lt;p&gt;분산네트워킹 &amp;amp;&amp;nbsp; 패킷 직렬화, 압축등 연구/개발팀&lt;br /&gt;암호화&amp;amp;MSP 연구/개발팀&lt;br /&gt;BlockChain Data 연구/개발팀 &lt;br /&gt;스마트컨트랙트 연구/개발팀 &lt;br /&gt;탈중앙화 및 컨센서스 알고리즘 연구/개발팀&amp;nbsp;&lt;br /&gt;Proxy 연구/개발팀 &lt;br /&gt;Client SDK 연구/개발팀 &lt;br /&gt;하드웨어 연구/개발팀 &lt;br /&gt;성능 개선 연구/개발팀 &lt;br /&gt;선행 기술 연구/개발팀&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- hama_ad3 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-2024783465189046&quot;
     data-ad-slot=&quot;7213708715&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>블록체인</category>
<author>[하마] 이승현 (wowlsh93@gmail.com)</author>
<guid>https://hamait.tistory.com/1054</guid>
<comments>https://hamait.tistory.com/1054#entry1054comment</comments>
<pubDate>Thu, 25 Apr 2019 11:27:16 +0900</pubDate>
</item>
<item>
<title>슈노 시그니쳐 (Schnorr Signatures)</title>
<link>https://hamait.tistory.com/1053</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cJVYIF/btquE3mDWBH/LSoDGCECz9ux9qqkJyfYPk/img.jpg' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cJVYIF/btquE3mDWBH/LSoDGCECz9ux9qqkJyfYPk/img.jpg' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcJVYIF%2FbtquE3mDWBH%2FLSoDGCECz9ux9qqkJyfYPk%2Fimg.jpg' data-filename=&quot;1_7jqrS8bEohn5rkuYOhBgcA.jpeg&quot; width=&quot;579&quot; height=&quot;404&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span&gt;&amp;lt;Sig A&amp;gt; &amp;lt;Sig B&amp;gt; &lt;b&gt;&lt;span&gt;&amp;lt;Sig C&amp;gt; 3&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&amp;lt;PubKey A&amp;gt;&lt;b&gt;&lt;span&gt;&amp;lt;PubKey B&amp;gt;&lt;b&gt;&lt;span&gt;&amp;lt;PubKey C&amp;gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/b&gt;&amp;nbsp;3 CHECKMULTISIG&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bQhtZq/btquEQA6qXy/YJLstWlCiuvgLRmRHSzsY0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bQhtZq/btquEQA6qXy/YJLstWlCiuvgLRmRHSzsY0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbQhtZq%2FbtquEQA6qXy%2FYJLstWlCiuvgLRmRHSzsY0%2Fimg.png' data-filename=&quot;images.png&quot; width=&quot;100&quot; height=&quot;27&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span&gt;&amp;lt;Sig Z&lt;b&gt;&lt;span&gt;&amp;gt; 1&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&amp;lt;PubKey Z&amp;gt;&amp;nbsp;1 CHECKMULTISIG&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-family: 'Noto Sans Demilight', 'Noto Sans KR';&quot;&gt;좋지 아니 한가?&amp;nbsp;&lt;/span&gt;&lt;b&gt;&lt;span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;h4&gt;How Schnorr Signatures work&lt;/h4&gt;
&lt;blockquote style=&quot;font-size: 0.94em;&quot; data-ke-style=&quot;box&quot;&gt;&lt;b&gt;m&lt;/b&gt; = Message&lt;br /&gt;&lt;b&gt;x&lt;/b&gt; = Private key&lt;br /&gt;&lt;b&gt;G&lt;/b&gt; = Generator point&lt;br /&gt;&lt;b&gt;X&lt;/b&gt; = Public key (X = x*G, public key = private key * generator point)&lt;br /&gt;&lt;b&gt;(R, s)&lt;/b&gt; = Signature (R is the x co-ordinate of a random value after multiplying by the generator point, s is the signature)&lt;br /&gt;&lt;b&gt;H(x, y, z..)&lt;/b&gt; = Cryptographic Hashing function&lt;br /&gt;* Capitalised letters are usually points on an Elliptic curve (except the Hashing function)&lt;br /&gt;* Lower cased letters are usually scalars&lt;br /&gt;&lt;b&gt;==========================================================&lt;br /&gt;Schnorr Signatures&lt;br /&gt;==========================================================&lt;/b&gt;&lt;b&gt;&lt;br /&gt;&lt;br /&gt;Signature creation:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;(R, s) = (r*G, r + H(X, R, m) * x)&lt;br /&gt;&lt;/b&gt;* r is a random nonce&lt;br /&gt;&lt;b&gt;R&lt;/b&gt; = random nonce * generator point (becomes a point on the Elliptic Curve)&lt;br /&gt;&lt;b&gt;s&lt;/b&gt; = random nonce + Hash function(Users Public Key, Random point on Elliptic Curve, the message (transaction)) * Private Key&lt;br /&gt;&lt;b&gt;&lt;br /&gt;Signature verification:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;s*G = R + H(X,R,m) * X&lt;br /&gt;&lt;/b&gt;* Verification is a linear equation, both sides of the equation must be satisfied for the signature to be validsignature &lt;br /&gt;* generator point = Random Point on Elliptic Curve + Hashing function(Public Key, Random Point on Elliptic Curve, message (transaction)) * Public Key&lt;/blockquote&gt;
&lt;h4&gt;Naive implementation of Schnorr Signatures&lt;/h4&gt;
&lt;blockquote style=&quot;font-size: 0.94em;&quot; data-ke-style=&quot;box&quot;&gt;&lt;b&gt;=========================================================&lt;br /&gt;Naive Schnorr Signatures&lt;br /&gt;=========================================================&lt;br /&gt;&lt;/b&gt;&lt;b&gt;&lt;br /&gt;Signature creation:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;X&lt;/b&gt; = the summation of each Public Key Point &lt;br /&gt;* X = (Xi + (Xi+1) + (Xi+2)...)&lt;br /&gt;&lt;b&gt;R&lt;/b&gt; = the summation of each participants random nonce &lt;br /&gt;* R = (Ri + (Ri+1) + (Ri+2)...)&lt;br /&gt;&lt;b&gt;s&lt;/b&gt; = the summation of each participants signature &lt;br /&gt;* si = ri + H(X,R,m) * X &lt;br /&gt;* s = (si + (si+1) + (si+2)...)&lt;br /&gt;&lt;b&gt;(R, s)&lt;/b&gt; = is the signature with s being the summation of all signatures&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Signature verification:&lt;br /&gt;s*G = R + H(X,R,m) * X &lt;br /&gt;&lt;/b&gt;* X represents the summation of all participants Public Keys&lt;/blockquote&gt;
&lt;h4&gt;Rogue Key&amp;nbsp;Attacks&lt;/h4&gt;
&lt;blockquote style=&quot;font-size: 0.94em;&quot; data-ke-style=&quot;box&quot;&gt;&lt;b&gt;Rogue Key Attack:&lt;br /&gt;&lt;br /&gt;&lt;/b&gt;* Alice and Bob want to create a 2-of-2 Multi-Sig&lt;br /&gt;* Alice has a key pair of (&lt;b&gt;xA&lt;/b&gt;, &lt;b&gt;XA&lt;/b&gt;) (Private Key, Public Key)&lt;br /&gt;* Bob has a key pair of (&lt;b&gt;xB&lt;/b&gt;, &lt;b&gt;XB&lt;/b&gt;) (Private Key, Public Key)&lt;br /&gt;* We can assume that &lt;b&gt;XAB&lt;/b&gt; (Aggregated Public Key) = &lt;b&gt;XA + XB&lt;br /&gt;&lt;/b&gt;* Bob sends a false Public Key: &lt;b&gt;XBf&lt;/b&gt; = &lt;b&gt;XB - XA&lt;br /&gt;&lt;/b&gt;* This is important because the &lt;b&gt;Aggregated Key&lt;/b&gt; (&lt;b&gt;XAB&lt;/b&gt;) that emerges from using &lt;b&gt;Bob's false Public Key&lt;/b&gt; is actually equal to &lt;b&gt;Bob's true key XB&lt;br /&gt;&lt;/b&gt;* Other users may think they are sending to a 2-of-2 controlled by Alice and Bob but it's simply an address controlled by &lt;b&gt;Bob's true Public Key&lt;br /&gt;&lt;br /&gt;&lt;/b&gt;&lt;b&gt;An extremely simplistic example:&lt;/b&gt;&lt;br /&gt;&lt;b&gt;XA&lt;/b&gt; (Alice's Public Key) = 10&lt;br /&gt;&lt;b&gt;XBt&lt;/b&gt; (Bob's true Public Key) = 11&lt;br /&gt;&lt;b&gt;XBf&lt;/b&gt; (Bob's false Public Key) = &lt;b&gt;XBt&lt;/b&gt;(11) - &lt;b&gt;XA&lt;/b&gt;(10) = 1&lt;br /&gt;&lt;b&gt;XAB&lt;/b&gt; = &lt;b&gt;XA&lt;/b&gt;(10) + &lt;b&gt;XBf&lt;/b&gt;(1) = 11&lt;br /&gt;&lt;br /&gt;* Bob has attacked the Aggregated Public Key, by sending a false key which after aggregation with other keys, equals his true Public Key&lt;br /&gt;* Bob now controls the Multi-Sig&lt;/blockquote&gt;
&lt;h4 id=&quot;e398&quot;&gt;Bellare-Neven&lt;/h4&gt;
&lt;blockquote style=&quot;font-size: 0.94em;&quot; data-ke-style=&quot;box&quot;&gt;&lt;b&gt;===========================================================&lt;br /&gt;Bellare-Neven&lt;br /&gt;===========================================================&lt;br /&gt;&lt;br /&gt;&lt;/b&gt;&lt;b&gt;Signature creation:&lt;br /&gt;L&lt;/b&gt; = H(Xi + (Xi+1)...) &lt;br /&gt;* L is the hash of the summation of all Public Keys&lt;br /&gt;&lt;b&gt;R &lt;/b&gt;= (ri * G) + ((ri+1) * G)...&lt;br /&gt;* R is the summation of each participants Random Point&lt;br /&gt;* They share their Random Nonce Points with other signers&lt;br /&gt;&lt;b&gt;si&lt;/b&gt; = ri + H(L, Xi, R, m) * xi&lt;br /&gt;* si is the signature generated for each participant&lt;br /&gt;* si = random nonce + Hash(Hash of all Public Keys, Participants Public Key, Sum of all Random Points, message (transaction)) * Participants Private Key&lt;br /&gt;&lt;b&gt;s&lt;/b&gt; = (si) + (si+1) + (si+2)...&lt;br /&gt;* s is the summation of each participants signature&lt;br /&gt;* &lt;b&gt;(R, s)&lt;/b&gt; is the final signature&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Signature verification:&lt;br /&gt;s*G = R + H(L,X1,R,m) * X1 + H(L,X2,R,m) * X2 +...&lt;br /&gt;&lt;/b&gt;* Verification is a linear equation, both sides of the equation must be satisfied for the signature to be valid&lt;br /&gt;* sum of participants signatures * generator point = sum of Random Nonce Points + Hash(Sum of all Public Keys, Participant 1&amp;rsquo;s Public Key, Sum of Random Nonce Points, message (transaction)) * Participants 1&amp;rsquo;s Public Key... same is repeated for each participant&lt;/blockquote&gt;
&lt;h4 id=&quot;3463&quot;&gt;Mu-sig&lt;/h4&gt;
&lt;blockquote style=&quot;font-size: 0.94em;&quot; data-ke-style=&quot;box&quot;&gt;&lt;b&gt;===========================================================&lt;br /&gt;Mu-sig&lt;br /&gt;===========================================================&lt;br /&gt;&lt;br /&gt;&lt;/b&gt;&lt;b&gt;Signature creation:&lt;br /&gt;L&lt;/b&gt; = H(Xi + (Xi+1)...)&lt;br /&gt;* L is the hashed summation of all Public Keys &lt;br /&gt;&lt;b&gt;X &lt;/b&gt;= ( (H(L, Xi) * Xi) + (H(L, Xi+1) * Xi+1)...)&lt;br /&gt;* X is the sum of all Hashed Public Keys + Participants Public Key- Hash(Sum of all Public Keys hashed, Participant 1's Public Key) * Participant 1&amp;rsquo;s Public Key&lt;br /&gt;&lt;b&gt;R &lt;/b&gt;= (ri * G) + ((ri+1) * G)...&lt;br /&gt;* R is the summation of each participants Random Point&lt;br /&gt;* They share their Random Nonce Points with other signers&lt;br /&gt;&lt;b&gt;si&lt;/b&gt; = ri + H(X, R, m) * H(L, X) * xi&lt;br /&gt;* si is the signature generated for each participant&lt;br /&gt;* si = random nonce + Hash(&lt;b&gt;X&lt;/b&gt;, Sum of all Participant's Random Points, message (transaction)) * Hash(Hashed sum of all Public Keys, &lt;b&gt;X&lt;/b&gt;) * Participant's Private Key&lt;br /&gt;&lt;b&gt;s&lt;/b&gt; = (si) + (si+1) + (si+2)...&lt;br /&gt;* s is the summation of each participants signature&lt;br /&gt;* &lt;b&gt;(R, s)&lt;/b&gt; is the final signature&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Signature verification:&lt;br /&gt;s*G = R + H(X, R, m) * X&lt;br /&gt;&lt;/b&gt;* Verification is a linear equation, both sides of the equation must be satisfied for the signature to be valid&lt;br /&gt;* sum of participants signatures * generator point = sum of Random Nonce Points + Hash(&lt;b&gt;X&lt;/b&gt;, sum of Random Nonce Points, message (transaction)) * &lt;b&gt;X&lt;/b&gt;&lt;/blockquote&gt;
&lt;hr contenteditable=&quot;false&quot; data-ke-type=&quot;hr&quot; data-ke-style=&quot;style5&quot; /&gt;
&lt;p&gt;&lt;a href=&quot;https://bitcointechtalk.com/scaling-bitcoin-schnorr-signatures-abe3b5c275d1&quot;&gt;https://bitcointechtalk.com/scaling-bitcoin-schnorr-signatures-abe3b5c275d1&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://medium.com/digitalassetresearch/schnorr-signatures-the-inevitability-of-privacy-in-bitcoin-b2f45a1f7287&quot;&gt;https://medium.com/digitalassetresearch/schnorr-signatures-the-inevitability-of-privacy-in-bitcoin-b2f45a1f7287&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://webusers.imj-prg.fr/~ricardo.perez-marco/blockchain/Seurin.pdf&quot;&gt;https://webusers.imj-prg.fr/~ricardo.perez-marco/blockchain/Seurin.pdf&lt;/a&gt;&lt;a href=&quot;https://medium.com/digitalassetresearch/schnorr-signatures-the-inevitability-of-privacy-in-bitcoin-b2f45a1f7287&quot;&gt;https://medium.com/digitalassetresearch/schnorr-signatures-the-inevitability-of-privacy-in-bitcoin-b2f45a1f7287&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;figure id=&quot;og_1555640254119&quot; contenteditable=&quot;false&quot; data-ke-type=&quot;opengraph&quot;&gt;&lt;a href=&quot;https://bitcointechtalk.com/scaling-bitcoin-schnorr-signatures-abe3b5c275d1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-original-url=&quot;https://bitcointechtalk.com/scaling-bitcoin-schnorr-signatures-abe3b5c275d1&quot;&gt;
&lt;div class=&quot;og-image&quot; style=&quot;background-image: url('https://scrap.kakaocdn.net/dn/cbYAz0/hyANzFMyF7/ieKvrtTB7bjrg5wUANABLk/img.jpg?width=1000&amp;amp;height=667&amp;amp;face=0_0_1000_667,https://scrap.kakaocdn.net/dn/O4nta/hyANHw3XRw/2DdDKwSDhDlPsNrz1yKObK/img.jpg?width=1000&amp;amp;height=667&amp;amp;face=0_0_1000_667,https://scrap.kakaocdn.net/dn/O8EDx/hyANHqhG9T/8NV1g8LegRJ8ymcpVOF310/img.jpg?width=1024&amp;amp;height=512&amp;amp;face=0_0_1024_512');&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;og-text&quot;&gt;
&lt;p class=&quot;og-title&quot;&gt;Scaling Bitcoin: Schnorr Signatures&lt;/p&gt;
&lt;p class=&quot;og-desc&quot;&gt;Schnorr Signatures are an exciting innovation that can help scale on-chain transactions and improve privacy and security of participants&amp;hellip;&lt;/p&gt;
&lt;p class=&quot;og-host&quot;&gt;bitcointechtalk.com&lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- hama_ad3 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-2024783465189046&quot;
     data-ad-slot=&quot;7213708715&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>블록체인</category>
<author>[하마] 이승현 (wowlsh93@gmail.com)</author>
<guid>https://hamait.tistory.com/1053</guid>
<comments>https://hamait.tistory.com/1053#entry1053comment</comments>
<pubDate>Fri, 19 Apr 2019 11:07:04 +0900</pubDate>
</item>
<item>
<title>'망할' 에이콘 출판사</title>
<link>https://hamait.tistory.com/1051</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bM5tVb/btquy14MREV/SWPbtV2rnGK6mOuGBcmMk0/img.jpg' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bM5tVb/btquy14MREV/SWPbtV2rnGK6mOuGBcmMk0/img.jpg' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbM5tVb%2Fbtquy14MREV%2FSWPbtV2rnGK6mOuGBcmMk0%2Fimg.jpg' data-filename=&quot;1235478713.jpg&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;개인적으로 400여권의 책을 소장하고, 도서관에서 빌린 책만 수백권.... 교보문고는 나의 마음의 안식처로 생각하는 &lt;br /&gt;북 콜렉터로써....책은 항상 문고 가서 읽어보고 사는 편인데..&lt;br /&gt;&lt;br /&gt;&lt;span&gt;에이콘 출판사는&lt;/span&gt;&amp;nbsp;거른다.... (아 몇권 산거 같긴 하다. 눈물을 머금고...)&amp;nbsp;&lt;br /&gt;이 출판사는 바퀴벌레같은 매대 장악력과&amp;nbsp; 수준 낮은 편집능력을 보유하고 있는데..&lt;/p&gt;
&lt;p&gt;한빛,제이펍,길벗,인사이트등에 비해 유독 에이콘의 편집 수준이 그 모양인지..&lt;br /&gt;마이너한 소재에 대한 책도 빠르게 번역출판해 준다는 감사한 면도 있긴 한데 그것마다 희석시킬 정도의 편집 수준...&lt;br /&gt;덕분에 다른 출판사가 출판 할 기회가 없어지기나 하고.. 제발 출판하지 마세요~&lt;/p&gt;
&lt;p&gt;아래 글을 문제점을 보고&amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;새로 거듭나길 간절히 바라며, 내 책장에 에이콘 출판사의 책들이 꽂히길 바래본다.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;1. 종이의 질이 별로&amp;nbsp;&lt;br /&gt;2. 가격도 타 출판사와 비슷&amp;nbsp;&lt;br /&gt;3. 한페이지에 글짜가 몇개 안됨. 초딩교과서도 아니고..&lt;br /&gt;4. 한 라인의 글짜가 몇개 안됨. 좀 읽다보면 눈알을 아래로 내려야함. 집중력 저하.&amp;nbsp;&lt;br /&gt;5. 글짜사이의 간격이 큼.&amp;nbsp;&lt;br /&gt;6. 중간타이틀에 1, 1-1, 1-2 등의&amp;nbsp; 인덱스가 없음. 챕터,소챕터 구분이 잘 안됨.&amp;nbsp;&amp;nbsp;&lt;br /&gt;7. 중간타이틀 글꼴이 괴기 스러움&lt;br /&gt;8. 중요문장,단어에 대한 강조표시가 빈약함, 색상도 단조로움 일색.&amp;nbsp;&lt;br /&gt;9. 소스등 각 구분스타일에 대한 시인성 빈약함&lt;br /&gt;10. 기타 등등&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;&lt;br /&gt;&lt;span&gt;헌법 제124조에는 &amp;ldquo;국가는 건전한 소비행위를 계도하고 생산품의 품질향상을 촉구하기 위한 소비자보호운동을 법률이 정하는 바에 의하여 보장한다.&amp;rdquo;&amp;nbsp;&lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- hama_ad3 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-2024783465189046&quot;
     data-ad-slot=&quot;7213708715&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>소프트웨어 사색</category>
<category>에이콘출판사 망할</category>
<author>[하마] 이승현 (wowlsh93@gmail.com)</author>
<guid>https://hamait.tistory.com/1051</guid>
<comments>https://hamait.tistory.com/1051#entry1051comment</comments>
<pubDate>Tue, 16 Apr 2019 11:25:29 +0900</pubDate>
</item>
<item>
<title>개발자 면접 방식을 바꾸자</title>
<link>https://hamait.tistory.com/1050</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bjQPNV/btquqlayy7j/NVUKyl2b6CS0xIK38Ljt6k/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bjQPNV/btquqlayy7j/NVUKyl2b6CS0xIK38Ljt6k/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbjQPNV%2Fbtquqlayy7j%2FNVUKyl2b6CS0xIK38Ljt6k%2Fimg.png' data-filename=&quot;interview_3-300x200.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;개발자처럼 하위,상위간의 차이가 심한 직업군에서의 &quot;인사&quot;란 정말 중요한 것이라 볼 수 있는데,&lt;/p&gt;
&lt;p&gt;현재 면접관의 일방적인 질문은&amp;nbsp;&lt;/p&gt;
&lt;p&gt;1.&amp;nbsp; 면접관 본인이 급조 공부한 질문 리스트를 물어보는데, 이건 면접관 본인과 회사에 아무 도움이 안된다. 그냥 우쭐거릴 수 있다 정도. 자신이 알고 있는 것을 아는 사람도 좋지만 모르는 것을 아는데 서로 협동 가능한 사람을 뽑으면 시너지가 나겠지요.&lt;br /&gt;2.&amp;nbsp; 면접자는 자신의 머리에 있는 진짜 자신의 지식&lt;span style=&quot;color: #333333;&quot;&gt;(어떤것들을 구글링 하여 비교 평가 한다도 포함)&lt;/span&gt;에 대해 어필할 기회를 박탈 당합니다.&amp;nbsp;&lt;span style=&quot;color: #000000;&quot;&gt;면접관의 위에서 내려다보는 시각에 의한 (일방적) 발언에 반박 내지는 아무 말도 하지 못하는 분위기가 됩니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;따라서&amp;nbsp;&lt;span&gt;개발자 면접은 서로 물어보는 맞짱토론을 해야 제대로 구인할 수 있지 않을까 합니다.&lt;br /&gt;면접관도 면접자의 질문 수준을 보며 자신의 부족함을 채워 줄 수 있는지 확인 해야겠지요.&amp;nbsp;&lt;br /&gt;&lt;/span&gt;&lt;span&gt;면접관이 개발자라면 그 정도 자신감 및 포용력은 있어야 평가 할 자격이 주어지지 않을까 싶습니다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;이렇게 되면&amp;nbsp;&amp;nbsp;(면접비도 못받는 상황에서) 면접자는 자신의 모든 것을 보여주고,&amp;nbsp; 또 모르는 것을 알게되는등&amp;nbsp; 시간을 허투루 쓰지 않았다는 감정을 느낄 수 있게 되며, 사측의 개발자 또한 자신과 함께 일 할 수 있는 동료에&amp;nbsp; 신뢰감이 쌓일 수 있겠지요. 이와 동시에 같이 면접에 참여한 인사팀장이라든지 CTO등은 가장 중요한 덕목인 토론에 임하는 자기 직원 및 면접자의 예의/자세등을 체크 할 수 있게 됩니다.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;예외)&lt;/p&gt;
&lt;p&gt;이렇게&amp;nbsp; 하기 힘든 상황은 2가지 정도.&lt;/p&gt;
&lt;p&gt;- 회사에 개발자가 없는데 처음 뽑으려는 상황. (코딩 테스트는 이 경우에나 신입 채용시)&lt;br /&gt;- 개발자 실력은 필요 없는 회사 (보통 개발자가 면접관으로 안들어감)&amp;nbsp;&lt;/p&gt;
&lt;p&gt;앞으로 이런 방식으로 상호 수평적인 토론식 면접이 없는 개발자 회사/면접관에 대한&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;부정적인 인식이 생겼으면 하는 바램입니다.&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- hama_ad3 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-2024783465189046&quot;
     data-ad-slot=&quot;7213708715&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>소프트웨어 사색</category>
<category>개발자면접</category>
<author>[하마] 이승현 (wowlsh93@gmail.com)</author>
<guid>https://hamait.tistory.com/1050</guid>
<comments>https://hamait.tistory.com/1050#entry1050comment</comments>
<pubDate>Fri, 12 Apr 2019 09:11:10 +0900</pubDate>
</item>
<item>
<title>안전하게 사용하는 GO</title>
<link>https://hamait.tistory.com/1049</link>
<description>&lt;p&gt;&lt;a href=&quot;http://blog.remotty.com/blog/2015/08/15/golangeuro-anjeonhan-seobiseu-mandeulgi/?fbclid=IwAR3AwL7e11Ee0yJEzKnBP0ydNX4BJoJuJZ1zNFrZ4v8YVT4Qja0Q8-7PG44&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.remotty.com/blog/2015/08/15/golangeuro-anjeonhan-seobiseu-mandeulgi/?fbclid=IwAR3AwL7e11Ee0yJEzKnBP0ydNX4BJoJuJZ1zNFrZ4v8YVT4Qja0Q8-7PG44&lt;/a&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- hama_ad3 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-2024783465189046&quot;
     data-ad-slot=&quot;7213708715&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Go</category>
<author>[하마] 이승현 (wowlsh93@gmail.com)</author>
<guid>https://hamait.tistory.com/1049</guid>
<comments>https://hamait.tistory.com/1049#entry1049comment</comments>
<pubDate>Thu, 04 Apr 2019 10:52:13 +0900</pubDate>
</item>
</channel>
</rss>