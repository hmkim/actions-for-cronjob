<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Daniel Park</title>
<link>https://danielpark.net/</link>
<description>페이스북 : https://www.facebook.com/park.joongsoo</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 07:13:25 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>박중수</managingEditor>
<item>
<title>[JAVA vs node.js] 무엇을 사용해야할까?</title>
<link>https://danielpark.net/183</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;요새 새로운 API를 개발할 때 node.js로 개발하는 비율이 점점 늘어나는 것 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;저도 node.js를&amp;nbsp;접해가면서&amp;nbsp;&lt;b&gt;&quot;다들 노드 쓰니까 나도 써야지&quot;&lt;/b&gt; 가 아닌 개발자스럽게&amp;nbsp;&lt;b&gt;&quot;노드는 이런 장점이 있으니 이런 상황에 적절한 솔루션이 되겠군&quot;&lt;/b&gt; 이라는 생각으로 접근해보고자 생각했던 내용을 정리해보았습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;1. Blocking / Non-Blocking IO&lt;/span&gt;&lt;/h1&gt;&lt;h3&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;자바의 Blocking IO&lt;/span&gt;&lt;/h3&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;자바는 IO가 일어날 때마다 스레드가 블록상태가 됩니다.  IO는 파일읽기/쓰기 네트워크통신 등의 입출력 행위를 말합니다. &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;간단한 예로는 데이터베이스로의 CRUD 작업이 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;스레드가 블록상태가 되면 그 스레드는 작업불가 상태이기 때문에 CPU를 사용하지 못합니다. &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;만약 웹의 상황이라면 하나의 요청을 끝까지 처리한 후에야 다음 요청을 받을 수 있습니다. &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;(사용자가 요청을 취소해도 작업은 끝까지 돌아갑니다...)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이렇게 CPU가 놀고있는 시간을 최대한 줄이기 위해 자바에서는 스레드의 개수를 늘리는 방식을 사용합니다. &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;하지만 이 방식은 적절한 스레드의 개수를 튜닝해줘야하는 번거로움이 있고, 컨텍스트 스위칭으로 인한 비용도 발생합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; 또한 스레드에 병목이 발생시에 그 스레드는 복구될 때까지 사용할 수 없기에 가용스레드가 줄어드는 현상도 발생합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;이러한 Blocking IO를 극복하고자 non-blocking IO를 지원하는 리액티브 프로그래밍이 함수형 패러다임과 함께 자바에 점차 늘어나고&amp;nbsp;있지만,&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;언어레벨에서 non-blocking을 지원하는 node.js에 비해 러닝커브가 높은 단점이 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;노드의 non-blocking IO&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;노드는 IO가 일어나도 스레드를 블록시키지 않기 때문에 IO작업이 일어나는 중에도 다른 작업으로 CPU자원을 사용할 수 있습니다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;IO가 많이 일어나는 웹 환경에서 CPU의 사용률을 극대화 할 수 있기 때문에 노드가 성능이 좋다고 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;하지만 싱글스레드 기반이기 때문에 CPU의 코어를 모두 활용하려면 PM2등을 이용해 프로세스를 여러대 띄워야한다는 단점이 있습니다. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;(이 점은 Docker로 가상화시키면&amp;nbsp;편해집니다.)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;또한 싱글스레드 기반이기에 CPU에 부하가 큰 연산을 할 시에&amp;nbsp;이벤트 루프에 태스크가 밀려 서버의 효율성이 급격하게 떨어집니다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;그리고 언어 자체의 처리속도가 자바에 비해 낮습니다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;아래는 언어별 퀵정렬 벤치마킹 자료입니다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;￼&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:655px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99BB52485C6160000D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;퍼포먼스.png&quot; height=&quot;262&quot; width=&quot;655&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;(출처 : https://justhackem.wordpress.com/2014/06/16/cplusplus-csharp-java-nodejs-sort_perf)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;처리속도 자체만 본다면 자바보다 낮지만 비동기 IO에서 오는 속도 상승이 그를 상쇄시키고도 남을만큼 좋기 때문에 노드를 사용한다고 볼 수 있을 것 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;2. 코드의 명시성과 유지보수성&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;노드는 자바스크립트이기 때문에 유연한 타입과 문법 때문에 사용하기 쉽고, 스레드 동기화를 고려할 필요가 없어 생산성이 높습니다. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;하지만 인터페이스를 지원하지 않는 등의 이유로 자바에 비해 명시성이 떨어져 가독성과 유지보수성이 떨어지는 단점이 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; 그래서 복잡한 비즈니스 로직을 정의할때에 약점을 보입니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;반면 자바는 생산성은 노드에 비해 떨어지더라도 인터페이스를 지원하고, 언어 자체에서 명시성이 높아 유지보수성이 좋습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;자바의 생태계도 의존성관리, 재활용성 향상 등의 언어의 장점을 극대화시켜줄 수 있는 도구들이 크게 발달해있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;그래서 복잡한 비즈니스로직을 정의하더라도 코드의 책임을 나누기 용이하고, 유연하면서, 재활용성이 좋은 코드를 작성하기가 좋습니다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;또한&amp;nbsp;코드를 처음 보는 사람도 파악을 보다 빠르게 할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;3. 그럼 어떨 때 사용해야할까요?&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;상황마다 다르겠지만 저는 개인적으로 아래처럼 결론을 내렸습니다. &lt;/span&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;864&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border:none;border-collapse:collapse;;font-family:&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:13px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 99px; height: 38px; border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt; 자바&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 764px; height: 38px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;로직이 복잡하고, 요구사항이 변경될 가능성이 높다&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 99px; height: 38px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&amp;nbsp;노드&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 764px; height: 38px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;무거운 로직이 없고, CRUD의 작업이 많다&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;사실 웹 환경은 애초에 IO의 연속이기 때문에 node.js에서 가져올 수 있는 장점이 매우 큽니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;하지만 무거운 연산으로 메인 스레드를 계속 물고있게 된다면 non-blocking IO의 장점을 뺏기게 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;그래서 API 체이닝, 단순한 CRUD API 등의 IO가 주된 작업이거나, 혹은 Request 하나당 연산이 가벼운&amp;nbsp;작업에서는 node.js를 사용하는 것이 좋은 선택지가 될 것 같습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;하지만 아래의 상황에서는 JAVA를 사용하는 것이 좋을 것 같다고 생각됩니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;1. 요구사항이 자주 바뀔 수 있는 로직&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;2. 복잡한 비즈니스 로직&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;3. 여러 클래스들이 서로 재활용되는 비율이 큰 소스&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;4. Request 하나당 연산이 어느 정도의 부하가 있는 로직&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/183&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>JAVA</category>
<author>박중수</author>
<guid>https://danielpark.net/183</guid>
<comments>https://danielpark.net/183#entry183comment</comments>
<pubDate>Mon, 11 Feb 2019 21:34:44 +0900</pubDate>
</item>
<item>
<title>주토피아를 보고..</title>
<link>https://danielpark.net/180</link>
<description>&lt;p&gt;&lt;b&gt;주토피아&lt;/b&gt;라는 영화를&amp;nbsp;봤다.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;역시 디즈니답게 현재 사회의 문제를 잘 담아서 찌른 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;간략한 소개를 하자면 주토피아는 육식동물, 초식동물 상관없이 모두 종이 진화하여 지성을 가진 생명체로 어우러져 살아간다는 배경을 담고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;첫 째로 모든 초식동물들은 육식동물(종)에 대한 편견을 가지고 있었다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;둘 째로 약자는 절대 선(善)이 아니라는 것에 대해 알려주었다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;첫 번째로.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&quot;종에 대한&amp;nbsp;편견&quot;&lt;/b&gt;을 보여주는 모습을 보여주자면.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;영화에서 보면 모든 종들은 육식동물의 한 종에 대해 교활하고 남의 뒤통수를 잘 친다는 편견을 가지고 있었다.&lt;/p&gt;&lt;p&gt;주인공은&amp;nbsp;그런 편견을 가지고 그 종들을 대했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 주인공을 선(善)으로 나타내려는 의도&amp;nbsp;때문인지&amp;nbsp;주인공을 육식동물에게 가진 편견과 그 편견을 종식시키려는 사이에서 갈등을 나타내는 존재로 표현하였다.&lt;/p&gt;&lt;/div&gt;&lt;p&gt;주인공은 처음에 육식동물에게&amp;nbsp;편견을 가지고 다가갔지만, 그가 자식을 위해 아이스크림을 사려는 모습을 보고 곧 편견을 거두고 아이스크림을 사주는 선행을 하였다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;하지만 그 육식동물이&amp;nbsp;타인의 동정을 이용하여 이득을 취하려는 존재임을 인식하고는 바로 그 육식동물을&amp;nbsp;자신의 취조활동에 이용하려는 모습을 취했다.&lt;/p&gt;&lt;p&gt;그리고 그 육식동물과 함께 사건에 대한 조사를 하는&amp;nbsp;과정에서 난관을 만나게 된다.&lt;/p&gt;&lt;p&gt;거기서 육식동물의 도움을 받게 되었고, 육식동물에 대한 편견을 거두게되었고, 파트너 관계를 맺게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 범인의 검거과정에서 본인의 내면에 있는 종에 대한 편견을 표출하게 되었고, 그 육식동물의 불신을 얻게 되었다.&lt;/p&gt;&lt;p&gt;그 후, 경찰활동을 하면서 본인이 육식동물 전체에 대한 편견을 만들었다는 불편함에 마주하게 되었고, 경찰을 관두고 고향에 내려와 장사를 하게 되었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 후 본인을 과거에 괴롭혔던 육식동물이&amp;nbsp;현재는 부모님을 도와 장사를 하는 순박한 존재임을 깨닫게 되었고, 그에게 사과를 들음으로써 육식동물에 대한 생각이 본인의 편견이였음을 깨닫게 되고, 본인이 상처를 준 육식동물에게 사과를 하게 되고, 다시 파트너 관계를 맺게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 후 함께 사건을 해결하게 되었고, 타 종에 대한 편견을 버리게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서 우리 사회에서의 인종차별에 대해 생각하게 되었다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;사실 생각이 짧아서 그런진 모르겠어도 &quot;종&quot;에 대한 차별은 인종차별밖에 떠오르지 않았다.&lt;/p&gt;&lt;p&gt;그렇지 않은 사람도 많겠지만 대부분은 피부색을 가지고 흑인은 운동을 잘한다. 몸이 좋다. 라는 편견아닌 편견을 가지고,&lt;/p&gt;&lt;p&gt;혹은 나쁜 방향으로 생각하기도 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우리는 무의식중에 피부색 뿐만 아니라 그 사람의 외모 전반적인 것을 가지고 평가한다.&lt;/p&gt;&lt;p&gt;그러한&amp;nbsp;사실을 접하고 있고, 실제로 그렇제 생각하고 있다.&lt;/p&gt;&lt;p&gt;이 것에 대해 우리에게 생각할 거리를 던지는 것이기도 한 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;두 번째로.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&quot;약자는 절대 선(善)이 아니다.&quot;&lt;/b&gt; 라는 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;초식동물은 육식동물과 비교하여 약자다.&lt;/p&gt;&lt;p&gt;육식동물은 포식자고, 초식동물은 먹히는 관계이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 모든 종이 진화한 &quot;주토피아&quot;에서는 그렇지 않다.&lt;/p&gt;&lt;p&gt;모두가 지성체이고 서로를 존중하지만. 기존의 약자들은 미묘하게 강자들에 대한 과거에 가졌던 편협하고 두려운&amp;nbsp;시선을 가지고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러한 관계에서 약자가 강자를 공격하기 위해 음모를 꾸민다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 그 음모에 의해 약자가 강자들에게 편견을 씌우는데 성공한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지성체이고, 소수인 &quot;강자&quot;는 절대 다수인 약자에 의한 여론에 의해 피해를 입고, 편견에 의한 상처를 입는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막은 디즈니답게 해피엔딩이였지만 이 주제에 대해서도 생각해 볼 것이 많다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;약자들 중에는&amp;nbsp;우리 사회에서의 소수자도 포함된다. 즉 성적 소수자와 종교적 소수자 등이 있다.&lt;/p&gt;&lt;p&gt;그들은 소수자이고 그로 인해 사람들의 편견을 받고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또, 그들 사이에 &quot;다수&quot;였던 사람이 들어가 &quot;소수&quot;가 되고, 소수였던 사람이 다수가 된다면 어떻게 될 지도 생각해 봐야 할 문제인 것 같다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;약자인 사람들이 어떠한 조건에 의해 강자가 된다면 약자가 된 강자들에 대해 어떻게 할&amp;nbsp;지는 모르는 일이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우리는 &lt;b&gt;딜레마의 시대&lt;/b&gt;에 살고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여성의 사회참여가 활성화됨으로써 과거에 약했던 여성의 권리가 커지고, 그에 따른 책임이 커짐과 동시에&lt;/p&gt;&lt;p&gt;남성들의 여성에 대한 권리인정과, 책임을 분담하는&amp;nbsp;것에 대한 딜레마.&lt;/p&gt;&lt;p&gt;이 문제로 인해 등장한 현재의 여혐과 남혐 프레임의 등장은 필연적이였던&amp;nbsp;것일지도 모른다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 위에서 나왔듯이 그들의 성적 취향에 대한 자유, 또한 본인과 다른 사람들을 혐오할 자유의 사이에서 나오는 딜레마.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;거의 대부분의&amp;nbsp;분야에 대한 과도기에 살고있는 우리가 생각해야할 것에 대해 디즈니는 자신들의 분야인 애니메이션으로&lt;/p&gt;&lt;p&gt;사회에 메세지를 잘 던져주었다고 생각할 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우리는 그에 대해 잘 생각하고 우리가 물려받은 다수의 문화를 개선하고 통합하여&amp;nbsp;후대사람들에게&amp;nbsp;보다 더 좋은 문화를 물려주어야 할 것이다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/180&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>영화후기</category>
<author>박중수</author>
<guid>https://danielpark.net/180</guid>
<comments>https://danielpark.net/180#entry180comment</comments>
<pubDate>Fri, 18 Nov 2016 19:34:38 +0900</pubDate>
</item>
<item>
<title>mysql 2055 에러 : system error 32 Broken pipe</title>
<link>https://danielpark.net/179</link>
<description>&lt;p&gt;파이썬에서 mysql로 대량 데이터를 전송하면 이 2055에러를 만나게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 이유는 mysql에서 한 번에 대량의 패킷을 전송하지 못하도록 설정되어있기 때문이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;mysql에서 root로 접속하여&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;SET @@global.max_allowed_packet=20480000;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;명령어를 쳐주면 끝난다&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/179&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>DB</category>
<author>박중수</author>
<guid>https://danielpark.net/179</guid>
<comments>https://danielpark.net/179#entry179comment</comments>
<pubDate>Sun, 16 Oct 2016 22:38:49 +0900</pubDate>
</item>
<item>
<title>React.js 핵심정리 - 에이콘</title>
<link>https://danielpark.net/178</link>
<description>&lt;img src=&quot;http://bookthumb.phinf.naver.net/cover/105/591/10559196.jpg?udate=20160524&quot;&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;책 링크 :&amp;nbsp;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Consolas, &amp;quot;Lucida Console&amp;quot;, monospace; font-size: 12px; white-space: pre-wrap;&quot;&gt;&lt;a href=&quot;http://bookthumb.phinf.naver.net/cover/105/591/10559196.jpg?udate=20160524&quot;&gt;http://bookthumb.phinf.naver.net/cover/105/591/10559196.jpg?udate=20160524&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: Consolas, &amp;quot;Lucida Console&amp;quot;, monospace; font-size: 12px; white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;React.js로 동아리 홈페이지를 만들어볼까 하고 공부해보고자 찾다가&amp;nbsp;React.js 핵심정리라는 책을 발견했다.&lt;/div&gt;&lt;div&gt;네이버 책에서 정보를 봤는데 목차를 봤을때 꽤 괜찮아보여서 주문했다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;React.js로 트위터 콜렉션 어플리케이션을 만들어가며 배워가는 컨셉을 가진 책이다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;소스를 보여주고 그것을 해설하는 식으로 되어있어 React에 대해 이해하기가 쉽다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;주변에서 React를 사용하는 것을 조금 봤었기에 코드를 보고 따라쳐보는 것만으로도 바로 이해할 수 있었다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;그리고 렌더링, 상태 업데이트 등의 생명주기와 React 각각의 개념들을&amp;nbsp;어플리케이션을 만들어가는 과정에서 적절히 사용하면서 상황에 맞게 설명을 잘 해놨기 때문에&amp;nbsp;이해하기가 쉬웠다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;하지만 큰 컴포넌트부터 작은 컴포넌트로 이어지는 책의 흐름 때문에 어플리케이션을 완성하기 전까지는 결과물을 볼 수 없기에 아쉬움이 크다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;작은 컴포넌트부터 만들어 그 컴포넌트들이 재활용되는 것들을 더 부각시켜 보여줬으면 좋았을 것 같다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;또한 react의 필요성을 이해하는 데에 어려움이 있었다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;Angular를 아는 상태에서 보았는데 아무리 봐도 Angular가 훨씬 편해보이고 코드의 재사용도 용이해보였다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;CSS 프로퍼티를 javascript 객체화 시킨 것과&amp;nbsp;JSX를 javascript 코드에 다 몰아넣는&amp;nbsp;것이 오히려 확장성을 줄이고, View와 Controller 서로의&amp;nbsp;의존성을 높이는 것으로 보였기 때문이다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;JSX의 장점도 너무 간단히 쓰여있고, 코드를 설명할 때&amp;nbsp;css 프로퍼티를 객체화시켜 JSX에 넣으면&amp;nbsp;단순히 인라인 스타일로 들어가 컴포넌트의 독립성을 높인다고밖에 써져있지 않아 React의 사상(?)을 처음 접해보는 나에게 React를 사용해야겠다는 큰 이끌림이 생기지 않았다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;그 외에 Gulp를 이용한 빌드, Jest를 이용한 테스트 등의 예제를 꼭 필요한 것들을 예제를 통해 잘 설명해놨기&amp;nbsp;때문에 javascript의 빌드와 테스트 등의&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;개발지식이 없는 개발자에게 매우 유용한 정보가 될 수 있을 것 같다.&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;책의 제목에 걸맞게 딱 핵심정리만 해놨다. URL 라우트 등의 모듈도 간단하게나마 소개해줬으면 좋았을 것을..&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/178&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>책 리뷰</category>
<category>javascript</category>
<category>react</category>
<category>리뷰</category>
<category>리액트</category>
<category>에이콘</category>
<author>박중수</author>
<guid>https://danielpark.net/178</guid>
<comments>https://danielpark.net/178#entry178comment</comments>
<pubDate>Tue, 27 Sep 2016 20:14:38 +0900</pubDate>
</item>
<item>
<title>[django] 데이터베이스 Datetime 필드 입력시 UST로 들어가는 현상</title>
<link>https://danielpark.net/164</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;본인은 &lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;datetime.now()&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; 함수로 현재 시각을 데이터베이스에 입력하는 작업을 수행했으나 데이터베이스에 찍히는 값은&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;현재보다 9시간 뒤쳐진(UST) 시간으로 들어가고 있었다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;이 경우 settings.py에서&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;TIME_ZONE =&amp;nbsp;'Asia/Seoul'&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;USE_TZ = False&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;옵션을 선언해주면 한국시각으로 입력된다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/164&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Python</category>
<author>박중수</author>
<guid>https://danielpark.net/164</guid>
<comments>https://danielpark.net/164#entry164comment</comments>
<pubDate>Mon, 14 Mar 2016 20:42:36 +0900</pubDate>
</item>
<item>
<title>[SlideShare] JSP 빠르게 시작하기</title>
<link>https://danielpark.net/163</link>
<description>&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/mHfog7yiS5Vasz&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/parkjoongsoo1/jsp-58410192&quot; title=&quot;JSP 빠르게 시작하기&quot; target=&quot;_blank&quot;&gt;JSP 빠르게 시작하기&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/parkjoongsoo1&quot;&gt;JoongSoo Park&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/163&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>JSP</category>
<author>박중수</author>
<guid>https://danielpark.net/163</guid>
<comments>https://danielpark.net/163#entry163comment</comments>
<pubDate>Thu, 18 Feb 2016 19:58:17 +0900</pubDate>
</item>
<item>
<title>[CentOS 6.x] scrapy 설치시 나는 gcc오류 해결방법</title>
<link>https://danielpark.net/162</link>
<description>&lt;p&gt;의존 라이브러리를 설치해 의존성 문제를 해결해준다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;yum install libxml2-dev libxslt1-dev python-dev&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/162&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Python</category>
<author>박중수</author>
<guid>https://danielpark.net/162</guid>
<comments>https://danielpark.net/162#entry162comment</comments>
<pubDate>Mon, 15 Feb 2016 14:17:26 +0900</pubDate>
</item>
<item>
<title>Gitlab-Jenkins-Maven으로 쉽고 빠르게 협업서버 구축하기</title>
<link>https://danielpark.net/159</link>
<description>&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/Bt4wUSVd2Pm7Kv&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/parkjoongsoo1/jenkinsgitmaven-56007274&quot; title=&quot;[Jenkins+Gitab+Maven] 쉽고 빠르게 구축하는 협업시스템&quot; target=&quot;_blank&quot;&gt;[Jenkins+Gitab+Maven] 쉽고 빠르게 구축하는 협업시스템&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/parkjoongsoo1&quot; target=&quot;_blank&quot;&gt;JoongSoo Park&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/159&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>개발에 대해</category>
<category>Git</category>
<category>gitlab</category>
<category>jenkins</category>
<category>Maven</category>
<category>협업</category>
<author>박중수</author>
<guid>https://danielpark.net/159</guid>
<comments>https://danielpark.net/159#entry159comment</comments>
<pubDate>Thu, 10 Dec 2015 19:42:14 +0900</pubDate>
</item>
<item>
<title>[Clojure] 클로저에서 Vector 분해</title>
<link>https://danielpark.net/157</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;List, Map, Vector같은 자료구조에서 특정한 값을 골라 바인딩하는 방법을 알아보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;먼저 테스트에 사용될&amp;nbsp;중첩된 Vector를 정의한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def vec [[0 1] [2 3]])&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;Vector를 받는 함수를 정의하면서 매개변수단에서 두 번째 벡터의 첫 번째&amp;nbsp;값인 2를&amp;nbsp;추출하여 바인딩 해보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(defn get-third [[_ [item _]] (str item &quot; get complete&quot;))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;대강 봐서는 무슨소리인지 눈에 들어오지도 않을것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;해석해보자면&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[_ [item _]&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;] &lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;에서 굵게 표시된 부분은 함수의 파라미터란 뜻이다. (이전 글에서 언급한 적이 있다.)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;또한 [&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;[&lt;/b&gt;_ [item _&lt;b&gt;]&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;] 에서 굵게 표시된 안쪽 대괄호는&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[0 1] [2 3]&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;] &lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;에서 굵게 표시된 바깥 대괄호를 뜻한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;그리고&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(255, 0, 0);&quot;&gt;_&lt;/span&gt;&lt;/b&gt; [item _]&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;] 에서 빨간색으로 표시된 첫 번째 언더바(_)는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;[0 1]&lt;/b&gt; [2 3]&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;] 굵게 표시된 첫 번째 요소 벡터를 의미한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(255, 0, 0);&quot;&gt;_&lt;/span&gt;&lt;/b&gt;&amp;nbsp;&lt;b&gt;[&lt;/b&gt;item _&lt;b&gt;]&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;] 요소는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[0 1]&amp;nbsp;&lt;b&gt;[&lt;/b&gt;2 3&lt;b&gt;]&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;] 이고, &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&amp;nbsp;[&lt;b&gt;item&lt;/b&gt; _]&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;]은&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[0 1]&amp;nbsp;[&lt;b&gt;2&lt;/b&gt; 3]&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;], &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;_&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&amp;nbsp;[item&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(255, 0, 0);&quot;&gt;_&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;_]&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;]은&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[0 1]&amp;nbsp;[2&amp;nbsp;&lt;b&gt;3&lt;/b&gt;]&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;] &amp;nbsp;을 의미한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;대강 감이 왔을 것 같은데 함수의 파라미터를 표시하는 바깥 대괄호를 제외한&amp;nbsp;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;[&lt;span style=&quot;font-size: 11pt; color: rgb(0, 0, 0);&quot;&gt;_&lt;/span&gt;&amp;nbsp;[item _]&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;]&lt;/b&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;의 패턴은 vec변수인 벡터&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;[[0 1] [2 3]]&lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt; 의 패턴과 일치한다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;언더바(_)는 제외할 요소를 지정하는 것이고, item은 그 순서에 해당하는 요소를 item이라는 변수에 담는 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;즉&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;[[0 1] [2 3]] &lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;에서 2를 item이라는 변수에 담았으니 바인딩 부분에서&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;(str item &quot; get complete&quot;) &lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;을 실행하면 &lt;b&gt;&quot;2 get complete&quot;&lt;/b&gt; 가 출력될 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;다른 예로 매개변수에&amp;nbsp;&lt;/span&gt;&lt;b style=&quot;font-size: 14.6667px;&quot;&gt;[[_ [_ item]] &lt;/b&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;을 지정하면 &quot;3 get complete&quot; 가 출력될 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- mTop --&gt;
&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-client=&quot;ca-pub-5079471949376726&quot; data-ad-slot=&quot;1396257294&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;분해는 let 함수를 통해서도 할 수 있는데 let 함수의 뼈대는 아래와 같다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(let [매개변수 분해하려는Collection] (바인딩))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;위와 같은 방법으로 첫 번째 벡터의 두 번째 요소인 1을 추출해보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(let [[[_ item] _] line] (str item &quot; get complete&quot;))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;대부분 사용법은 함수와 같지만 살짝 다른점은&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;(let [[[_ item] _] &lt;b&gt;line&lt;/b&gt;] (str item &quot; get complete&quot;)) 과 같이 분해하려는 Collection이 담긴 변수를 넘겨야 한다는 점이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;위의 결과로는 첫 번째 벡터의 두 번째 요소인 1이 추출되었으므로 &lt;b&gt;&quot;1 get complete&quot;&lt;/b&gt;가 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/157&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/157</guid>
<comments>https://danielpark.net/157#entry157comment</comments>
<pubDate>Wed, 25 Nov 2015 17:19:26 +0900</pubDate>
</item>
<item>
<title>[Clojure] 클로저에서 함수 정의 및 호출</title>
<link>https://danielpark.net/155</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;클로저에서 함수를 정의 및 호출하는 법을 알아보겠다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;함수의 골격은&amp;nbsp;기본적으로&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(defn 함수명 &quot;함수설명(생략가능)&quot; [param] (body))&lt;/b&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;로 이루어진다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;두 문자열을 결합하는 함수의 정의는 이렇게 한다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(defn appendString [str1 str2] (str str1 str2))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;다른 예로 두 수를 더하는 함수를 정의해보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(defn plusNumber &quot;더하기&quot; [num1 num2] (+ num1 num2))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;매개변수가 없는경우 대괄호 사이를 비어두면 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;div&gt;&lt;script async=&quot;&quot; src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- mTop --&gt;
&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-client=&quot;ca-pub-5079471949376726&quot; data-ad-slot=&quot;1396257294&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;함수를 문서화시킬 수도 있는데 문서화는 doc 명령어를 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;더하기 함수를 문서화 시키면 다음과 같은 결과가 나온다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;user=&amp;gt; (doc plusNumber)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;-------------------------&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;user/plusNumber&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;([num1 num2])&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&amp;nbsp; comment&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/155&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/155</guid>
<comments>https://danielpark.net/155#entry155comment</comments>
<pubDate>Wed, 25 Nov 2015 16:19:31 +0900</pubDate>
</item>
<item>
<title>[Clojure] 클로저의 자료구조3 (맵)</title>
<link>https://danielpark.net/153</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;맵의 정의는 아래와 같이 한다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;{:key1 &quot;value1&quot;, :key2 &quot;value2}&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;각 요소마다는 쉼표로 구분하고, 키와 값 구분은 띄어쓰기로 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;키 이름 앞의 콜론(:)은 키워드라는 뜻이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;키워드는 자기 자신을 가르키는데에 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;각 함수를 사용하기 위해 변수에 Map을 할당하겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def exMap {:key1 &quot;val1&quot;, :key2 &quot;val2&quot;, :key3 &quot;val3&quot;})&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;키로 값을 가져오는 방법은 변수명에 키명을 전달해주면 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(exMap :key1)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;결과로 &quot;val1&quot;이 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;방금처럼 변수명을 함수로 사용하는 것과 반대로 키를 함수로 사용할 수도 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(:key1 exMap)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;결과로 똑같은 &quot;val1&quot;이 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;또한 두 개의 맵을 합칠 때에는 merge 함수를 이용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def map1 {:key1 10, :key2 20})&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def map2 {:key3 30, :key4 40})&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(merge map1 map2)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;결과로 두 맵을 합친 결과인&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;{:key1 10, :key2 20,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;:key3 30, :key4 40&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;} &amp;nbsp;가 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;또한 merge-with이라는 함수도&amp;nbsp;있는데 merge할 때 키 값이 겹치면 결합을 위한 해결방법을 지정해 줄 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def map1 {:key1 10, :key2 20})&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def map2 {:key2&amp;nbsp;30, :key3 40})&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;위의 변수를 보면 :key2가 중복되기에 결합할 때 값을 어찌할 지 애매해진다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;그 해결방법을 두 값을 합치는 것으로 지정해보겠다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(merge-with +&amp;nbsp;map1 map2)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;+를 인자로 넘겨줌으로써 키 값이 겹치면 더하도록 지정했다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;결과로는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;{:key1 10, :key2 50,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;:key3 40&lt;/span&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;} 이 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;겹치는 키인 :key2의 각각의 값인 20과 30이 더해져 50이 출력됬다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/153&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/153</guid>
<comments>https://danielpark.net/153#entry153comment</comments>
<pubDate>Tue, 24 Nov 2015 15:50:53 +0900</pubDate>
</item>
<item>
<title>[Clojure] 클로저의 자료구조2 (벡터)</title>
<link>https://danielpark.net/152</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;벡터와 리스트의 차이는 자바에서의 벡터와 리스트 차이를 생각하면 될 것 같다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;리스트는 벡터보다 약간 빠르지만 다중 스레드에 약하고,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;벡터는 약간 느리지만 다중 스레드에 최적화되어있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;클로저에서는 코드를 담을 때에는 리스트를 사용하고, 데이터를 사용할 때에는 벡터를 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;벡터는 아래와 같이 정의할 수 있다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;[:one :two :three]&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;벡터는 리스트와 사용할 수 있는 함수들이 같다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;요소를 가져올 때에도 nth 함수를 사용하며, 개수를 셀 때에는 count 함수를 사용한다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/152&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/152</guid>
<comments>https://danielpark.net/152#entry152comment</comments>
<pubDate>Tue, 24 Nov 2015 15:31:27 +0900</pubDate>
</item>
<item>
<title>[Clojure] 클로저의 자료구조1 (리스트)</title>
<link>https://danielpark.net/151</link>
<description>&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;리스트&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;리스트를 정의하는 방법에는 두 가지가 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(list 1 2 3)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;와&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;'(1 2 3)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;리스트를 변수 list에 담아보겠다&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(def list '(1 2 3))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;list 변수에 1,2,3이 담긴 리스트가 담겼다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;리스트에서 요소를 가져올 때에는 nth 함수를 이용한다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;두 번째 요소를 가져올 때에는&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(nth list 1)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;이렇게 가져올 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;기타 first, last 함수가 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;두 list를 합할 때에는&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;concat 함수를 이용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def list1 '(1 2 3))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(def list2 '(4 5 6))&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(concat list1 list2)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;=&amp;gt; (1 2 3 4 5 6)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;또한 요소의 개수를 셀 때에는 count 함수를 이용한다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14.6667px;&quot;&gt;&lt;b&gt;(count list1)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/151&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/151</guid>
<comments>https://danielpark.net/151#entry151comment</comments>
<pubDate>Tue, 24 Nov 2015 15:26:05 +0900</pubDate>
</item>
<item>
<title>[Clojure] 클로저의 수식 연산</title>
<link>https://danielpark.net/150</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;클로저의 수식연산은 전위표기법을 이용한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;예를 들자면 더하기는&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;(+&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;7 9 22 45)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;나누기는&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(/ 10 5)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;이런식으로 표현한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;또한 나머지는&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(mod 10 3) &lt;/b&gt;와 같이 표현한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;이 전위표현식의 효과는 꽤 좋은데 숫자의 정렬여부를 판별할때도 좋다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(&amp;lt; 1 9 20)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;=&amp;gt; true&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;(&amp;lt; 1 10 5)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;=&amp;gt; false&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;또한 클로저는 동적으로 자료형을 변경해주므로 수식을 편리하게 할 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/150&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>closure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/150</guid>
<comments>https://danielpark.net/150#entry150comment</comments>
<pubDate>Tue, 24 Nov 2015 14:26:03 +0900</pubDate>
</item>
<item>
<title>[Clojure] 프로젝트 생성</title>
<link>https://danielpark.net/149</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;lein을 이용해서 프로젝트를 간단히 생성해보겠다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일단 프로젝트 폴더를 만들어준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;mkdir &quot;프로젝트명&quot;&lt;/p&gt;&lt;p&gt;cd &quot;프로젝트명&quot;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 후 프로젝트를 생성해준다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;lein repl&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 명령어를 클릭하면 간단한 설치 후 콘솔화면이 나타나게된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/149&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/149</guid>
<comments>https://danielpark.net/149#entry149comment</comments>
<pubDate>Tue, 24 Nov 2015 14:17:32 +0900</pubDate>
</item>
<item>
<title>[Clojure] 설치하기</title>
<link>https://danielpark.net/148</link>
<description>&lt;p&gt;현재 클로저의 릴리즈된 최신버전은 1.7.0 버전이다.&lt;/p&gt;&lt;p&gt;클로저는&amp;nbsp;http://clojure.org/ 에서 다운받을 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또한 클로저&amp;nbsp;프로젝트 관리도구인 leiningen(라이닝겐)을 설치한다.&lt;/p&gt;&lt;p&gt;https://github.com/technomancy/leiningen&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;라이닝겐은 자바의 maven과 비슷한 존재다.&lt;/p&gt;&lt;p&gt;윈도우에서는&amp;nbsp;http://leiningen-win-installer.djpowell.net/ 에서 다운받는다.&lt;/p&gt;&lt;p&gt;본인은 윈도우를 이용하였다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 후 설치폴더/bin 디렉토리를 환경변수에 등록해준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;끝&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/148&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Clojure</category>
<category>Clojure</category>
<category>클로저</category>
<author>박중수</author>
<guid>https://danielpark.net/148</guid>
<comments>https://danielpark.net/148#entry148comment</comments>
<pubDate>Tue, 24 Nov 2015 13:30:25 +0900</pubDate>
</item>
<item>
<title>php오류 : The mbstring extension is missing. Please check your PHP configuration.</title>
<link>https://danielpark.net/147</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;환경으로는 Censos 6.7이고 phpmyadmin 최신버전을 설치하였는데&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: sans-serif; font-size: 11pt; line-height: normal; background-color: rgb(255, 238, 238);&quot;&gt;The&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://wndtn853.codns.com:9999/url.php?url=http%3A%2F%2Fphp.net%2Fmanual%2Fen%2Fbook.mbstring.php&quot; target=&quot;Documentation&quot; style=&quot;font-family: sans-serif; font-size:10pt; line-height: normal;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;mbstring&lt;/span&gt;&lt;/em&gt;&lt;/a&gt;&lt;span style=&quot;font-family: sans-serif; font-size:10pt; line-height: normal; background-color: rgb(255, 238, 238);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;extension is missing. Please check your PHP configuration.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;위의 오류가 뜨며 되지 않았다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;해결방법으로는&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;yum --enablerepo='remi-php56' install php-mbstring&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;으로 php-mbstring을 설치해주고&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;/etc/php.ini 파일 내에서&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;; &amp;nbsp; extension=module_name&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;.extension&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;의 행의 주석을 풀고 모듈이름을 추가해주었다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;extension=php_mbstring.extension&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;된다!&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/147&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>기타</category>
<author>박중수</author>
<guid>https://danielpark.net/147</guid>
<comments>https://danielpark.net/147#entry147comment</comments>
<pubDate>Sat, 21 Nov 2015 15:34:51 +0900</pubDate>
</item>
<item>
<title>Git 원격저장소를 편리하게 구축할수 있도록 도와주는 툴</title>
<link>https://danielpark.net/146</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-bottom: 6px; margin-left: 0px; color: rgb(20, 24, 35); font-family: helvetica, arial, sans-serif; font-size: 14px; line-height: 19.3199996948242px;&quot;&gt;&lt;a href=&quot;https://about.gitlab.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot; style=&quot;color: rgb(59, 89, 152); cursor: pointer;&quot;&gt;https://about.gitlab.com/&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-bottom: 6px; margin-left: 0px; color: rgb(20, 24, 35); font-family: helvetica, arial, sans-serif; font-size: 14px; line-height: 19.3199996948242px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-top: 6px; margin-right: 0px; margin-left: 0px; display: inline; color: rgb(20, 24, 35); font-family: helvetica, arial, sans-serif; font-size: 14px; line-height: 19.3199996948242px;&quot;&gt;사내 혹은 개인 프로젝트를 관리하기위해 git 원격저장소(Remote repository)를 자신의 서버에 구축하여 쓰고싶지만 설치방법이 복잡하여 구축이 힘들 때 이 툴을 추천한다. git을 ssh, http의 두 가지 프로토콜로 지원해주고 편리한 프로젝트 관리를 지원해준다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/146&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Git</category>
<category>Git</category>
<category>remote</category>
<category>Repository</category>
<category>원격</category>
<category>저장소</category>
<author>박중수</author>
<guid>https://danielpark.net/146</guid>
<comments>https://danielpark.net/146#entry146comment</comments>
<pubDate>Fri, 20 Nov 2015 23:30:13 +0900</pubDate>
</item>
<item>
<title>[Docker] 도커 컨테이너에서 인터넷 연결이 안돼는 경우</title>
<link>https://danielpark.net/145</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;그럴땐 run 옵션에 --net=host 를 주면된다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;ex) docker run --net=host .......&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/145&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Docker</category>
<category>Docker</category>
<category>network</category>
<category>네트워크</category>
<category>인터넷</category>
<author>박중수</author>
<guid>https://danielpark.net/145</guid>
<comments>https://danielpark.net/145#entry145comment</comments>
<pubDate>Tue, 17 Nov 2015 20:36:59 +0900</pubDate>
</item>
<item>
<title>[Swift] 오픈소스를 이용하여 XML 파싱하기</title>
<link>https://danielpark.net/144</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;오픈소스인 SWXMLHash를 이용하여 XML을 파싱해보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;환경은 Swift 2.0에 Xcode 7.1을 사용하였다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;SWXMLHash의 Git 주소는 다음과 같다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;https://github.com/drmohundro/SWXMLHash&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;먼저 SWXMLHash.h 파일과 SWXMLHash.swift 파일을 자신의 프로젝트에 추가한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;예제에 사용할 XML은 다음과 같다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;root&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;elements&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 6em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;사과&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 6em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;color&amp;gt;&lt;/span&gt;빨강&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/color&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 6em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;바나나&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 6em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;color&amp;gt;&lt;/span&gt;노랑&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/color&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 6em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;포도&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 6em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;color&amp;gt;&lt;/span&gt;보라&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/color&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/elements&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(47, 157, 39);&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;위의 XML 문자열은 아래 예제코드의 xml 변수에 들어있다고 가정하겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;실제 사용할 때에 xml문자열은 파일에서 읽어오거나, 서버에서 받아올 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;위의 XML을 파싱하여 과일명과 색을 출력해보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let &lt;/span&gt;xml = &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;[XML문자열]&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let&lt;/span&gt; xmlDom = &lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;SWXMLHash&lt;/span&gt;.config({ config&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt; in&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;config.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;shouldProcessLazily &lt;/span&gt;= true&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;}).&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;parse&lt;/span&gt;(xml &lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;String&lt;/span&gt;)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let &lt;/span&gt;items = xmlDom[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;root&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;elements&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;item&quot;&lt;/span&gt;]&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;for&lt;/span&gt; item &lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;in&lt;/span&gt; items {&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let&lt;/span&gt; name = item[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;name&quot;&lt;/span&gt;].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;element&lt;/span&gt;?.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;text&lt;/span&gt;!&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let&lt;/span&gt; color = item[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;color&quot;&lt;/span&gt;].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;element&lt;/span&gt;?.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;text&lt;/span&gt;!&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;print&lt;/span&gt;&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;(&quot;\(&lt;/span&gt;name&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;) : \(&lt;/span&gt;color&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;}&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;결과로는&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;사과 : 빨강&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;바나나 : 노랑&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;포도 : 보라&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;가 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;사용법이 매우 간단하기 때문에 쉽게 사용할 수 있다. 각 태그의 이름을 대괄호 안에 써줌으로써 태그의 값들을 가져올 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;태그 사이의 텍스트를 가져올 때는 &lt;b&gt;element?.text! &lt;/b&gt;로 가져오면 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;두 번째 과일인 바나나의 이름만을 가져오려면&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;xmlDom[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;root&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;elements&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;item&quot;&lt;/span&gt;][1][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;name&quot;&lt;/span&gt;].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;element&lt;/span&gt;?.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;text&lt;/span&gt;!&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;로 가져오면 된다. 같은 태그가 여러 개 인 경우 배열로 취급되는데 인덱스 값을 줌으로써 가져올 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;또한 태그나 자신의 하위 태그들의 개수를 가져오는 방법도 알아보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;먼저 자신과 같은 계층에 있는 같은 이름을 가진 태그들의 개수를 가져오는 법을 알아보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;xmlDom[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;root&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;elements&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;item&quot;&lt;/span&gt;].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;all&lt;/span&gt;.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;count&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;위와 같이 하면 root 안의 elements 태그안의 item 태그는 3개이므로 3이 반환된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;또한&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; line-height: 1.5;&quot;&gt;&lt;b&gt;xmlDom[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;root&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;elements&quot;&lt;/span&gt;].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;all&lt;/span&gt;.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;count&lt;/span&gt;&lt;/b&gt;는 root안의 elements 태그는 1개뿐이므로 1이 반환된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 1.5;&quot;&gt;또한 태그에 속한 모든 하위 태그들의 개수를 세는 법은&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;xmlDom[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;root&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;elements&quot;&lt;/span&gt;].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;element&lt;/span&gt;?.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;count &lt;/span&gt;&lt;/b&gt;와 같이 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;elements 태그에 속한 하위태그는 item 태그 3개이므로 3이 반환된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;또한 &lt;b&gt;xmlDom&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; line-height: 1.5;&quot;&gt;&lt;b&gt;[&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;root&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;elements&quot;&lt;/span&gt;][&lt;span style=&quot;color: rgb(153, 0, 76);&quot;&gt;&quot;item&quot;&lt;/span&gt;][0].&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;element&lt;/span&gt;?.&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;count&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt; &lt;/span&gt;는 첫 번째 item 태그의 하위태그가 name과 color 두개이므로 2가 반환된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/144&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/144</guid>
<comments>https://danielpark.net/144#entry144comment</comments>
<pubDate>Mon, 16 Nov 2015 13:06:00 +0900</pubDate>
</item>
<item>
<title>[리뷰] 파이썬 더 쉽게, 더 깊게</title>
<link>https://danielpark.net/143</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://bimage.interpark.com/goods_image/6/0/3/6/223186036g.jpg&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span id=&quot;HL_tag_id_bookpr_author_18677&quot; style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;a href=&quot;http://book.naver.com/search/search.nhn?query=%EC%B8%A0%EC%A7%80%20%EC%8B%A0%EA%B3%A0&amp;amp;frameFilterType=1&amp;amp;frameFilterValue=2734470&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;츠지 신고&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;저&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;bar&quot; style=&quot;display: inline-block; overflow: hidden; width: 0px; height: 11px; margin: -1px 5px 1px 4px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(234, 234, 234); vertical-align: middle; color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif; font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;a href=&quot;http://book.naver.com/search/search.nhn?query=%EC%A7%84%EB%AA%85%EC%A1%B0&amp;amp;frameFilterType=1&amp;amp;frameFilterValue=620374&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;진명조&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;역&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;bar&quot; style=&quot;display: inline-block; overflow: hidden; width: 0px; height: 11px; margin: -1px 5px 1px 4px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(234, 234, 234); vertical-align: middle; color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif; font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;HL_tag_id_bookpr_publisher_49136&quot; style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;a href=&quot;http://book.naver.com/search/search.nhn?filterType=7&amp;amp;query=%EC%A0%9C%EC%9D%B4%ED%8E%8D&quot; target=&quot;_blank&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;제이펍&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif; font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;bar&quot; style=&quot;display: inline-block; overflow: hidden; width: 0px; height: 11px; margin: -1px 5px 1px 4px; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(234, 234, 234); vertical-align: middle; color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif; font-size: 11pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span id=&quot;HL_tag_id_bookpr_publish_date_9263&quot; style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif; font-size: 11pt;&quot;&gt;2014.09.17.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: 굴림, gulim, helvetica, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 11pt;&quot;&gt;개인적인 평점 : ★★★★☆&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;이 책도 스위프트 더 쉽게, 더 쉽게와 같이 파이썬 문법을 빠르게 익히기 위해 구매하였다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;더 쉽게라는 제목처럼 쉽다. 파이썬을 모르는 상태에서 파이썬 프로젝트를 진행해야하여&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;빠른 파이썬 공부가 필요하다면 이 책이 매우 적합하다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;하지만 뒷 부분에&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;윈도우 프로그래밍 부분이 나와 자신에게 필요없는 부분도 함께 공부해야할 수도 있다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/143&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>책 리뷰</category>
<author>박중수</author>
<guid>https://danielpark.net/143</guid>
<comments>https://danielpark.net/143#entry143comment</comments>
<pubDate>Mon, 16 Nov 2015 09:44:45 +0900</pubDate>
</item>
<item>
<title>[Swift] NSString에서 문자열 자르기와 이어붙이기</title>
<link>https://danielpark.net/142</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;NSString에서 문자열을 잘라 배열로 만들거나, 문자열을 이어 붙이는 방법을 알아보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;문자열 이어붙이기&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;자바에는 StringBuilder와 StringBuffer처럼 문자열을 이어붙이는 클래스가 따로 존재하지만,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Swift의 NSString에는 문자열 이어붙이기를 자체에서 지원한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;var &lt;/span&gt;str = &lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;Daniel&quot;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;str.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;appendContentsOf&lt;/span&gt;(&lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;Park&quot;&lt;/span&gt;)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;위와 같이 appendContentsOf 라는 메소드로 문자열을 이어 붙일 수 있다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;인자는 NSString 타입을 받으며 인자로 받은 문자열을 자신에게 이어붙인다. 반환형은 Void이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;결과로는 str에 DanielPark이라는 값이 들어가게 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;문자열 자르기&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;자바에는 String에서 split이라는 메소드를 사용하는데 Swift에서는 이와 같은 역할을 하는 componentsSeparatedByString이라는 메소드를 쓴다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let&lt;/span&gt; str:&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;NSString&lt;/span&gt; = &lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;가/나/다/라&quot;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(102, 0, 255);&quot;&gt;let &lt;/span&gt;sep:[&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;NSString&lt;/span&gt;] = str.componentsSeparatedByString(&lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;/&quot;&lt;/span&gt;)&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;sep변수에는 str의 문자열을 /로 나눈 가,나,다,라 문자열이 들어있는 배열이 들어가게 된다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/142&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/142</guid>
<comments>https://danielpark.net/142#entry142comment</comments>
<pubDate>Sun, 15 Nov 2015 16:12:11 +0900</pubDate>
</item>
<item>
<title>핵심만 골라 배우는 iOS 8 프로그래밍</title>
<link>https://danielpark.net/141</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://image.bandinlunis.com/upload/product/3826/3826492.jpg&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;em style=&quot;margin-top: 0px; margin-right: 1px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; display: inline-block; color: rgb(119, 119, 119); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;저자&lt;/em&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://book.naver.com/search/search.nhn?query=%EB%8B%90+%EC%8A%A4%EB%AF%B8%EC%8A%A4&amp;amp;frameFilterType=1&amp;amp;frameFilterValue=621976&quot; class=&quot;N=a:bil.author,i:621976&quot; style=&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;닐 스미스&lt;/a&gt;&lt;span class=&quot;bar&quot; style=&quot;margin-top: 0px; margin-right: 4px; margin-bottom: 0px; margin-left: 6px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; display: inline-block; color: rgb(230, 231, 232); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;|&lt;/span&gt;&lt;em style=&quot;margin-top: 0px; margin-right: 1px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; font-style: normal; display: inline-block; color: rgb(119, 119, 119); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;역자&lt;/em&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://book.naver.com/search/search.nhn?query=%ED%99%A9%EB%B0%98%EC%84%9D&amp;amp;frameFilterType=1&amp;amp;frameFilterValue=2107559&quot; class=&quot;N=a:bil.translator,i:2107559&quot; style=&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;황반석&lt;/a&gt;&lt;span class=&quot;bar&quot; style=&quot;margin-top: 0px; margin-right: 4px; margin-bottom: 0px; margin-left: 6px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; display: inline-block; color: rgb(230, 231, 232); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;|&lt;/span&gt;&lt;a href=&quot;http://book.naver.com/search/search.nhn?filterType=7&amp;amp;query=%EC%A0%9C%EC%9D%B4%ED%8E%8D&quot; class=&quot;N=a:bil.publisher&quot; style=&quot;margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;제이펍&lt;/a&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;bar&quot; style=&quot;margin-top: 0px; margin-right: 4px; margin-bottom: 0px; margin-left: 6px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; display: inline-block; color: rgb(230, 231, 232); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 굴림, gulim, Helvetica, sans-serif; line-height: 16px; &quot;&gt;2015.04.17&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;개인적인 평점 : ★★★★☆&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이전에 쓴 Swift 쉽게, 더 쉽게를 읽고 아이폰 어플리케이션 개발을 목적으로 구매한 책이다.&lt;/p&gt;&lt;p&gt;Swift로 아이폰을 개발하는데에 필요한 내용은 전부 들어있다. (물론&amp;nbsp;XML파싱 등의 세세한 내용들까지 있는것은 아니고&amp;nbsp;아이폰의 내부 기능들을 이용하는 방법이 나와있다.)&lt;/p&gt;&lt;p&gt;개발자 등록부터 앱스토어 출시까지 내용이 모두 들어있어 처음 시작하는 사람들에게 좋을 듯 하다.&lt;/p&gt;&lt;p&gt;하지만 이미 Swift와 Xcode 버전이 업데이트되었고, 애플 개발자사이트가 리뉴얼되어 인증서를 받는 부분등은&amp;nbsp;최신 버전과 약간은 괴리감이 있다.&lt;/p&gt;&lt;p&gt;하지만 책 내용은 정말 좋기에 다음 IOS 9.0 책을 기대해볼만 하다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/141&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>책 리뷰</category>
<author>박중수</author>
<guid>https://danielpark.net/141</guid>
<comments>https://danielpark.net/141#entry141comment</comments>
<pubDate>Sat, 14 Nov 2015 20:39:11 +0900</pubDate>
</item>
<item>
<title>스위프트(Swift) 쉽게, 더 쉽게</title>
<link>https://danielpark.net/140</link>
<description>&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://image.kyobobook.co.kr/images/book/xlarge/210/x9791185890210.jpg&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;name&quot; style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;마크 라소프 , 토마스 스타초위츠&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;지음&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;line&quot; style=&quot;color: rgb(170, 170, 170); font-family: dotum, sans-serif; &quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;name&quot; style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;심재철&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&amp;nbsp;옮김&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&lt;/span&gt;&lt;span class=&quot;line&quot; style=&quot;color: rgb(170, 170, 170); font-family: dotum, sans-serif; &quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;name&quot; title=&quot;출판사&quot; style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/search/SearchKorbookMain.jsp?vPstrCategory=KOR&amp;amp;vPoutSearch=1&amp;amp;vPpubCD=25111&amp;amp;vPsKeywordInfo=%C1%A6%C0%CC%C6%E0&quot; style=&quot;color: rgb(102, 102, 102); &quot;&gt;제이펍&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&lt;/span&gt;&lt;span class=&quot;line&quot; style=&quot;color: rgb(170, 170, 170); font-family: dotum, sans-serif; &quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;date&quot; title=&quot;출간일&quot; style=&quot;color: rgb(119, 119, 119); font-family: dotum, sans-serif; &quot;&gt;2015년 05월 08일 출간&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;개인적인 평점 ★&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;★&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;★&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;★☆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;정말 제목 그대로 정말 쉽다&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;다. 개인적으로 제이펍의 쉽게 시리즈를 좋아하는데 초보자가 아닌 개발 경험자라면&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;문법과 언어의 특성을 몇 일이면 금방 익힐 수 있다. 물론 초보자를 위한 책&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; &quot;&gt;답게 언어를 깊게 파는 내용은 없다. 하지만 빠른 시일 내로 산출물을 내야하는 경우 이 책을 강력하게 추천한다&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/140&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>책 리뷰</category>
<author>박중수</author>
<guid>https://danielpark.net/140</guid>
<comments>https://danielpark.net/140#entry140comment</comments>
<pubDate>Sat, 14 Nov 2015 20:31:50 +0900</pubDate>
</item>
<item>
<title>[Swift] NSDateFormatter로 NSDate와 문자열 날짜포맷 생성하기</title>
<link>https://danielpark.net/139</link>
<description>&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;자신이 원하는 날짜로 NSDate를 생성하거나, 반대로 NSDate 객체를 자신이 원하는 문자열 포맷으로 가져오는 방법을 알아보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;NSDate에 대한 날짜포맷을 담당하는 클래스는 NSDateFormatter라는 클래스이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;환경은 Swift 2.0에 Xcode 7.1 버전을 사용하였다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;기본적인 클래스의 세팅은 아래와 같이 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;color: rgb(61, 0, 153);&quot;&gt;let&lt;/span&gt; format = &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;NSDateFormatter&lt;/span&gt;()&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;format.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;locale&lt;/span&gt; = &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;NSLocale&lt;/span&gt;(localeIdentifier: &lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;ko_kr&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;format.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;timeZone&lt;/span&gt; = &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;NSTimeZone&lt;/span&gt;(name: &lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;KST&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;format.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;dateFormat&lt;/span&gt; = &lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;yyyy-MM-dd HH:mm:ss&quot;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;locale로 한국을 선택하였고, timeZone을 한국시각으로 설정하였다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;그 후 dateFormat에 자신이 원하는 날짜포맷을 입력해준다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;날짜포맷형식은 자바와 동일하다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;먼저 현재시각을 설정한 포맷의 문자열로 출력해보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;color: rgb(61, 0, 153);&quot;&gt;let&lt;/span&gt; today = format.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;stringFromDate&lt;/span&gt;(&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;NSDate&lt;/span&gt;())&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;print&lt;/span&gt;(today)&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;결과로는 현재시각의 미리 정해놨던 포맷인 &quot;2015-11-14 14:48:38&quot;이 출력된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;그리고 이번엔 원하는 날짜를 NSDate의 객체로 만들어보겠다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;color: rgb(61, 0, 153);&quot;&gt;let&lt;/span&gt; wantedDay = &lt;span style=&quot;color: rgb(102, 0, 51);&quot;&gt;&quot;2015-11-24 18:15:32&quot;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;span style=&quot;color: rgb(61, 0, 153);&quot;&gt;let&lt;/span&gt; date = format.&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;dateFromString&lt;/span&gt;(wantedDay)&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13.3333px; line-height: 20px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt; line-height: 20px;&quot;&gt;date 변수에 2015년 11월 24일 18시 15분 32초를 가르키는 NSDate 객체가 들어가게 되었다.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/139&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/139</guid>
<comments>https://danielpark.net/139#entry139comment</comments>
<pubDate>Sat, 14 Nov 2015 15:19:48 +0900</pubDate>
</item>
<item>
<title>개발 뉴스레터 신청</title>
<link>https://danielpark.net/138</link>
<description>&lt;p&gt;https://github.com/jondot/awesome-weekly&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/138&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>기타</category>
<author>박중수</author>
<guid>https://danielpark.net/138</guid>
<comments>https://danielpark.net/138#entry138comment</comments>
<pubDate>Fri, 13 Nov 2015 23:16:36 +0900</pubDate>
</item>
<item>
<title>[Swift] LocalNotification(로컬알림) 수정하기</title>
<link>https://danielpark.net/137</link>
<description>&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;수정하는 방법은 간단하다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;어플리케이션에서 알람목록을 바로 가져올 수 있다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;app =&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;UIApplication&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;.sharedApplication()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifications = app.scheduledLocalNotifications&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;for &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;n &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;in &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifycations {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;n.userInfo?[&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;] &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;as&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;? &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;Int &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;== 11 {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;cancleLocalNotification&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(n)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;n.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;alertBody&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;=&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#7f0000;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;수정된 알람문구&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;app.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;scheduleLocalNotification&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(n)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;이전 글에서 등록했던 알람에서 &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;&lt;b&gt;notifyAlarm.userInfo = [&quot;id&quot;: 11]&lt;/b&gt; &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;로 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;userInfo&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;에 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;값을 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;11&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;로 준 적이 있었다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;그 알람을 식별하여 이전에 등록되어있던 알람을 지우고 알람문구를 변경한 다음&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;새로 등록하였다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/137&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<category>알람</category>
<author>박중수</author>
<guid>https://danielpark.net/137</guid>
<comments>https://danielpark.net/137#entry137comment</comments>
<pubDate>Fri, 13 Nov 2015 19:47:26 +0900</pubDate>
</item>
<item>
<title>[Swift] LocalNotification(로컬알림) 일정 주기로 반복하기</title>
<link>https://danielpark.net/136</link>
<description>&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;알람을 반복하는 법은 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;UILocalNotification &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;객체의 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;repeatInterval &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;옵션을 설정해주면 된다&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; font-weight: bold; font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;notification = &lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(25, 25, 255);&quot;&gt;UILocalNotification&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;notification.&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(25, 25, 255);&quot;&gt;repeatInterval&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; font-weight: bold; font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(25, 25, 255);&quot;&gt;NSCalendarUnit&lt;/span&gt;&lt;span style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;.Day&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;repeatInterval &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;옵션은 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;NSCalendarUnit &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;타입이며 알람을 반복할 주기를 결정한다&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;NSCalendarUnit&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;의 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;Day &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;옵션을 주면 매일 반복하도록 한다&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;예를 들자면 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;fireDate&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;를 오늘 오후 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;시로 설정했다면 알람은 오늘 오후 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;시를 포함하여 매일 오후 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;시에 울리게 된다&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;요일마다 울리게 하려면 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;NSCalendarUnit&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;의&lt;b&gt; &lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;&lt;b&gt;WeekDay&lt;/b&gt; &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;옵션을 주면 된다&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;만약 오늘이 월요일이고&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;, fireDate&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;를 오늘 오후 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;시로 설정했다면 알람은 오늘 오후 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;시를 포함한 매주 월요일 오후 &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;7&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;시에 울리게 된다&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/136&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<category>알람</category>
<author>박중수</author>
<guid>https://danielpark.net/136</guid>
<comments>https://danielpark.net/136#entry136comment</comments>
<pubDate>Fri, 13 Nov 2015 19:46:13 +0900</pubDate>
</item>
<item>
<title>[Swift] LocalNotification(로컬알림) 예약하기</title>
<link>https://danielpark.net/135</link>
<description>&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;스위프트 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;2.0&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;을 이용한 로컬알림을 예약하는 법에 대해 알아보겠다&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;app = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;UIApplication&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;.sharedApplication()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifyAlarm = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;UILocalNotification&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;()  &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;알람 객체생성&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifyAlarm.timeZone = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;NSTimeZone&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;.defaultTimeZone()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifyAlarm.alertBody = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#7f0000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#7f0000;&quot;&gt;알람 테스트&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#7f0000;&quot;&gt;&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;알람 문구&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifyAlarm.fireDate = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;NSDate&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;()  &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;알람이 울릴 날짜&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;notifyAlarm.userInfo = [&quot;id&quot;: 11]&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;app.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0c0cff;&quot;&gt;scheduleLocalNotification&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(notifyAlarm) &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;알람추가&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;fireDate&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;는 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;NSDate &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;형식으로 들어가며 알람이 울릴 시간과 날짜를 지정한다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;userInfo&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;는 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;Dictionary &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;형식으로 알람식별자를 넣는데에 사용하였다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;그 후 &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;scheduleLocalNotification &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;메소드를 통해 핸드폰에 알람을 등록한다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;지정한 시간이 되면 어플리케이션명&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-size:11.0pt;&quot;&gt;지정한 문구와 함께 알림이 뜨는 것을 볼 수 있다&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-size:11.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/135&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/135</guid>
<comments>https://danielpark.net/135#entry135comment</comments>
<pubDate>Fri, 13 Nov 2015 19:45:10 +0900</pubDate>
</item>
<item>
<title>[Swift] FMDB로 SQLite에 Insert와 Select 하기</title>
<link>https://danielpark.net/134</link>
<description>&lt;p class=&quot;0&quot;&gt;저번 글에 이어 이번 글에서는 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;FMDB&lt;/span&gt;를 이용한 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQLite&lt;/span&gt;에 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Insert&lt;/span&gt;와 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Select&lt;/span&gt;를 하는법을 알아보겠다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;일반적인 데이터 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Insert&lt;/span&gt;는 테이블을 생성하는 방법에 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;만 다르게 주면 된다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;하지만 동적인 값들을 입력하기 위해 이번에는 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;에 파라미터를 주는 방법&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;(&lt;/span&gt;자바로는 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;PrepareStatement)&lt;/span&gt;을 보겠다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;dbPath = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;mydatabase.db&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;fmdb = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;FMDatabase&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(path: dbPath)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;if &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;db.open() {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;sql = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;INSERT INTO MYTABLE(COL1, COL2) VALUES(:col1, :col2)&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;paramDictionary = [&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0000ff;&quot;&gt;NSObject&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;:&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0000ff;&quot;&gt;AnyObject&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;paramDictionary[&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;col1&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;] = 33&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;paramDictionary[&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;col2&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;] = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;myValue&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;result = fmdb.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;executeUpdate&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(sql, withParameterDictionary: paramDictionary)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;result {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#0000ff;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;성공&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;fmdb.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;close&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;코드를 해석해보자면 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;:(&lt;/span&gt;콜론&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;)&lt;/span&gt;은 파라미터라는 표시이다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;. &lt;/span&gt;그리고 콜론의 오른쪽에는 변수명이 온다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;. &lt;/span&gt;이렇게 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;에 표시를 해준 후&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;, [NSObject:AnyObject] &lt;/span&gt;타입의 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Dictionary&lt;/span&gt;를 생성하여 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;에 명시해준 변수명을 키로 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;에 삽입할 값을 삽입해준다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;예를 들어 첫 번째 파라미터로는 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;:col1&lt;/span&gt;을 입력하였으므로 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;dictionary[&quot;col1&quot;]=&lt;/span&gt;값 형식으로 입력해준다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;그 후 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;executeUpdate &lt;/span&gt;함수에 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;withParameterDictionary &lt;/span&gt;인자로 값을 입력한 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;dictionary&lt;/span&gt;를 함께 넘겨주면 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;에 동적인 값을 입력 할 수 있게된다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;다음으로는 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;select&lt;/span&gt;를 하여 값을 받아오는 방법을 알아보겠다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;dbPath = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#b20000;&quot;&gt;&quot;mydatabase.db&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;fmdb = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#007200;&quot;&gt;FMDatabase&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;(path: dbPath)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;if &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;db.open() {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;sql = &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#b20000;&quot;&gt;&quot;SELECT * FROM MYTABLE WHERE col1=:col1&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:11.0pt;color:#b20000;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;paramDictionary = [&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#0000ff;&quot;&gt;NSObject&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;:&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#0000ff;&quot;&gt;AnyObject&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;paramDictionary[&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#b20000;&quot;&gt;&quot;col1&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;] = 33&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;result = fmdb.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#007200;&quot;&gt;executeQuery&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;(sql, withParameterDictionary: paramDictionary)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while &lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;result.next() == true {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let resCol1 = result.intForColumn(&quot;col1&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let resCol2 = result.stringForColumn(&quot;col2&quot;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#0000ff;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;print&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;(&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#b20000;&quot;&gt;&quot;\(resCol1) : \(resCol2)&quot;&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt; &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;fmdb.&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#007200;&quot;&gt;close&lt;/span&gt;&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;다른부분은 모두 같지만 쿼리를 날리는 함수가 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;executeQuery&lt;/span&gt;로 바뀌었다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;이 함수는 자바로 치자면 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;ResultSet &lt;/span&gt;같은 객체를 리턴한다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;반복문을 돌면서 다음 행을 가져와 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;[&lt;/span&gt;자료형&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;]ForColumn(&quot;&lt;/span&gt;컬럼명&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;&quot;) &lt;/span&gt;함수로 값을 가져올 수 있다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;. &lt;/span&gt;정수를 가져오려면 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;intForColumn, &lt;/span&gt;실수를 가져오려면 &lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;doubleForColumn&lt;/span&gt;처럼 가져오면 된다&lt;span  style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/134&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/134</guid>
<comments>https://danielpark.net/134#entry134comment</comments>
<pubDate>Fri, 13 Nov 2015 19:43:15 +0900</pubDate>
</item>
<item>
<title>FMDB를 이용한 Swift에서 SQLite 사용하기</title>
<link>https://danielpark.net/133</link>
<description>&lt;p class=&quot;0&quot;&gt;어플리케이션에서 정보를 저장하기 위해선 보통 내장된 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQLite&lt;/span&gt;를 사용한다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Swift&lt;/span&gt;에서 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQLite3&lt;/span&gt;를 간편하게 사용하기 위한 오픈소스 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Wrapper &lt;/span&gt;클래스인 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;FMDB&lt;/span&gt;를 사용하는 법을 알아보겠다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;FMDB&lt;/span&gt;는 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;Github&lt;/span&gt;에서 찾을 수 있다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;주소는 &lt;a href=&quot;https://github.com/ccgus/fmdb&quot;&gt;&lt;u&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;color:#0000ff;&quot;&gt;https://github.com/ccgus/fmdb&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;span  style=&quot;font-family:나눔고딕;&quot;&gt; &lt;/span&gt;이다&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;FMDB&lt;/span&gt;를 가져와 프로젝트에 추가해준다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:185px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/274661385645BE3727&quot; filemime=&quot;image/jpeg&quot; filename=&quot;fmdb2.png&quot; height=&quot;236&quot; style=&quot;&quot; width=&quot;185&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;이전에 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;sqlite3 &lt;/span&gt;라이브러리도 추가해주어야 한다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:106px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/23681D385645BE4A0B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;fmdb1.png&quot; height=&quot;21&quot; style=&quot;&quot; width=&quot;106&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;이제 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;FMDB&lt;/span&gt;를 이용해 테이블을 생성해보겠다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;dbPath = &lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(178, 0, 0);&quot;&gt;&quot;mydatabase.db&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;let &lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;fmdb = &lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 114, 0);&quot;&gt;FMDatabase&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;(path: dbPath)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;  &lt;/span&gt;&lt;!--[if !supportEmptyParas]--&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;!--[endif]--&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;  &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;if &lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;db.open() {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;let &lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;sql = &lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(178, 0, 0);&quot;&gt;&quot;CREATE TABLE MYTABLE ( col1 NUMBER, col2 TEXT )&quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;let &lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;result = fmdb.executeUpdate(sql)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#920092;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;if &lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;result {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;color:#0000ff;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;print&lt;/span&gt;&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;(&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(178, 0, 0);&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;font-weight: bold; font-size: 12pt; color: rgb(178, 0, 0);&quot;&gt;성공&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(178, 0, 0);&quot;&gt;&quot;&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt; &lt;/span&gt;&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:11.0pt;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;fmdb.&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 114, 0);&quot;&gt;close&lt;/span&gt;&lt;span  style=&quot;font-family: 나눔고딕; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;코드를 설명해보자면 데이터베이스 파일이 저장될 경로를 지정하고&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;, &lt;/span&gt;그 경로를 인자로 넘겨 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;FMDatabase &lt;/span&gt;객체를 생성한다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;그 후 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;open() &lt;/span&gt;함수를 호출하여 데이터베이스와의 커넥션을 생성한다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;. &lt;/span&gt;만약 커넥션이 생성되지 않는다면 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;false&lt;/span&gt;가 리턴되기 때문에 데이터베이스 로직이 실행되지 않는다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;그 후 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;SQL&lt;/span&gt;을 작성하고 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;executeUpdate&lt;/span&gt;의 인자로 넘겨 입력 성공&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;/&lt;/span&gt;실패의 결과값을 리턴받는다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;만약 성공했다면 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;&quot;&lt;/span&gt;성공&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;&quot;&lt;/span&gt;이라는 문자를 출력한다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;데이터베이스를 모두 사용한 후에는 &lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;close() &lt;/span&gt;함수를 호출하여 꼭 닫아주어야 한다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;다음 글에는 테이블에 값을 입력&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;, &lt;/span&gt;출력하는 방법을 설명하겠다&lt;span  style=&quot;font-family:나눔고딕;mso-ascii-font-family:나눔고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/133&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/133</guid>
<comments>https://danielpark.net/133#entry133comment</comments>
<pubDate>Fri, 13 Nov 2015 19:41:50 +0900</pubDate>
</item>
<item>
<title>IOS에서 이전 뷰로 돌아가기(뒤로가기)</title>
<link>https://danielpark.net/132</link>
<description>&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-size: 11pt;&quot;&gt;Swift 2.0&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;에서 이전 뷰로 돌아가는 방법은&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;self&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;.&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 0, 255);&quot;&gt;presentingViewController&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;?.&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 0, 255);&quot;&gt;dismissViewControllerAnimated&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;(&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;true&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;, complection:&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;nil&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;을 사용하는 방법과&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;let&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; font-weight: bold; font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;preView =&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;self&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;.&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 0, 255);&quot;&gt;presentingViewController&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; font-weight: bold; font-size: 12pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(146, 0, 146);&quot;&gt;as&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;?&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 172, 255); font-size: 16px; font-weight: bold; line-height: 24px;&quot;&gt;[&lt;/span&gt;&lt;span style=&quot;font-weight: bold; font-size: 12pt; color: rgb(0, 172, 255);&quot;&gt;돌아가려는&amp;nbsp;&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 172, 255);&quot;&gt;ViewController 클래스명&lt;/span&gt;&lt;span style=&quot;font-weight: bold; font-size: 12pt; color: rgb(0, 172, 255);&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 0, 255);&quot;&gt;preView&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;?.&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt; color: rgb(0, 0, 255);&quot;&gt;returned&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-weight: bold; font-size: 12pt;&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;두 방법이 있다&lt;/span&gt;&lt;span  style=&quot;font-family: '맑은 고딕'; letter-spacing: 0pt; font-size: 11pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/132&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<author>박중수</author>
<guid>https://danielpark.net/132</guid>
<comments>https://danielpark.net/132#entry132comment</comments>
<pubDate>Fri, 13 Nov 2015 19:37:39 +0900</pubDate>
</item>
<item>
<title>[Swift] 웹에서 데이터 받아오기</title>
<link>https://danielpark.net/131</link>
<description>&lt;p class=&quot;0&quot;&gt;요즘 서버와의 통신은 대부분의 어플리케이션 개발에서 사용된다&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;이 글에서는 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;NSURLSession&lt;/span&gt;을 사용하여 웹서버와 통신해 데이터를 받아오는 방법을 알아볼 것이다&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;환경으로는 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;swift 2.0&lt;/span&gt;과 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;xcode 7.1&lt;/span&gt;을 사용하였다&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;url = &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#1919ff;&quot;&gt;NSURL&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(string: &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;url&lt;/span&gt;&lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;주소&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#b20000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;font-weight:bold;font-size:12.0pt;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;req = &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#1919ff;&quot;&gt;NSMutableURLRequest&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;(URL: url!)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;session = &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#1919ff;&quot;&gt;NSURLSession.sharedSession&lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#920092;&quot;&gt;let &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;task = session.dataTaskWithRequest(req, completionHandler: {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt; &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;data, res, error -&amp;gt; &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#1919ff;&quot;&gt;Void &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;in&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt; &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// code&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;}); &lt;/span&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;color:#007200;&quot;&gt;// end task&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;font-weight:bold;font-size:12.0pt;&quot;&gt;task.resume()&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot; style=&quot;word-break: keep-all;&quot;&gt;  &lt;!--[if !supportEmptyParas]--&gt;&amp;nbsp;&lt;!--[endif]--&gt;  &lt;/p&gt;&lt;p class=&quot;0&quot;&gt;주의할 점은 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;NSURLSession&lt;/span&gt;을 사용하는 방식은 요청을 &lt;span style=&quot;mso-fareast-font-family:맑은 고딕;font-weight:bold;color:#0000ff;&quot;&gt;비동기&lt;/span&gt;로 하기 때문에 함수 내에서 결과값을 받아 리턴해줄 수 없다는 점이다&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;만약 함수에서 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;NSURLSession&lt;/span&gt;을 호출하여 값을 받아온 다음 리턴한다면 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;NSURLSession&lt;/span&gt;에서 결과 값을 받아오기 전에 함수를 리턴해버리기 때문에 결국 빈 값이 리턴된다&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;0&quot;&gt;그러므로 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;dataTaskWithRequest &lt;/span&gt;함수에서 &lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;completionHandler &lt;/span&gt;인자로 전달하는 콜백을 통해 비즈니스 로직을 구현하는 것이 좋다&lt;span style=&quot;font-family:맑은 고딕;mso-ascii-font-family:맑은 고딕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/131&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Swift</category>
<category>Swift</category>
<category>Swift 2.0</category>
<category>스위프트</category>
<author>박중수</author>
<guid>https://danielpark.net/131</guid>
<comments>https://danielpark.net/131#entry131comment</comments>
<pubDate>Fri, 13 Nov 2015 13:26:31 +0900</pubDate>
</item>
<item>
<title>머신러닝을 시작하려는 사람에게 추천하는 책과 블로그</title>
<link>https://danielpark.net/130</link>
<description>&lt;p&gt;머신러닝부터 딥 러닝까지 라는 책인데 무료 Ebook이지만 꽤나 내용이 좋다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;http://digital.kyobobook.co.kr/digital/ebook/ebookDetail.ink?selectedLargeCategory=001&amp;amp;barcode=480150001023P&amp;amp;orderClick=LAN&amp;amp;Kc&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;머신러닝에 대한 블로그도 있는데 여기도 좋아보인다&lt;/p&gt;&lt;p&gt;http://deepcumen.com/category/machine-learning/&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/130&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Machine Learning</category>
<author>박중수</author>
<guid>https://danielpark.net/130</guid>
<comments>https://danielpark.net/130#entry130comment</comments>
<pubDate>Wed, 11 Nov 2015 20:30:13 +0900</pubDate>
</item>
<item>
<title>IDE가 가진 편리함의 불편함</title>
<link>https://danielpark.net/128</link>
<description>&lt;p&gt;언제부터인지 기억이 잘 나지 않지만&amp;nbsp;TV프로그램들은&amp;nbsp;시각장애인들을 위한&amp;nbsp;자막방송을 해주기 시작했다.&lt;/p&gt;&lt;p&gt;그렇게 몇 년이 지나면서 나는 그러한&amp;nbsp;자막방송에 익숙해졌다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;어느 날 옛날의 무한도전이 생각나 아주 오래 전의 방송을 다시보기로 틀었다.&lt;/p&gt;&lt;p&gt;그 방송은 자막방송이 적용되기 전의 방송이라 현재에 비해 자막의 양이 현저히 적었다.&lt;/p&gt;&lt;p&gt;그 프로를 시청하면서 나는 멤버들의 대화에서 내용을 파악하는데&amp;nbsp;불편함을 느꼈다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;나도 모르는 사이 자막을 읽는 것에 익숙해져 멤버들의 말이 들리지 않는 것이였다.&lt;/p&gt;&lt;p&gt;모든 말을 자막으로 보여주기 때문에&amp;nbsp;굳이 귀로 듣지 않아도&amp;nbsp;그 분위기와 자막만으로&lt;/p&gt;&lt;p&gt;귀로 듣는 듯한 효과가 느껴지기 때문이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;귀로 들으려면 한순간한순간을 놓치지 않고 그들의 말에 경청해야한다.&lt;/p&gt;&lt;p&gt;한 마디라도 놓치면 얼핏 들은 것으로 어떤 내용인지를&amp;nbsp;유추해야하기 때문이고,&amp;nbsp;&lt;/p&gt;&lt;p&gt;그 내용을 파악하기 힘들 때도 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 자막은 화면에 남는 시간이 길기 때문에 잠깐 집중을 하지 않아도 내용을 파악하기 쉽다.&lt;/p&gt;&lt;p&gt;얘기를 듣지 못해도 자막을 보면 되기 때문에 어느 순간부터에선가 자막만 보게 된 것이였다.&lt;/p&gt;&lt;p&gt;그러면서 귀로 듣고 분석하는 능력이 떨어지게 됬고, 자막이 없는 방송을 보아도&amp;nbsp;&lt;/p&gt;&lt;p&gt;나도 모르게 자막부터 찾게 되었고,&amp;nbsp;&lt;b&gt;듣고 분석할 필요성을 잊어버리고&lt;/b&gt;,&lt;/p&gt;&lt;p&gt;귀로 듣는 것이 눈으로 보는 것보다 우선순위가 떨어진 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;개발을 할 때에도 마찬가지이다. 요새는 많은 IDE가 출시되고있고 개발자는 이들을 통해&amp;nbsp;생산성을 높이고&lt;/p&gt;&lt;p&gt;더욱 편리한 개발을 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;IDE는 매우 편한 도구임에도 불구하고 &lt;b&gt;개발&lt;/b&gt;에 불편함을 끼친다.&lt;/p&gt;&lt;p&gt;IDE가 발전하지 못했던 때에는 개발자가&amp;nbsp;코딩부터 컴파일, 에러처리까지&amp;nbsp;&lt;/p&gt;&lt;p&gt;모든 것을 일일이&amp;nbsp;처리하여야 했지만&amp;nbsp;IDE의 발전으로 개발자의 할 일은 매우 줄어들었다.&lt;/p&gt;&lt;p&gt;단축키를 누르면 코드를 자동완성시켜주고, 버튼 하나를 자동으로 컴파일이 된다.&lt;/p&gt;&lt;p&gt;오타가 나거나 오류가 있으면 빨간 줄이 그어지고 그를 해결할 수 있는 방법마저 제시해준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만 이러한 편리함이&amp;nbsp;개발자를 나태하게 만든다.&lt;/p&gt;&lt;p&gt;특히 경력이 오래되지 않은 &lt;b&gt;초급개발자들에게 좋지 않을 수 있다&lt;/b&gt;.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;예를 들자면&amp;nbsp;어떤 초보 개발자가 특정 API를 사용하여 시스템을 개발하고 있다.&lt;/p&gt;&lt;p&gt;하지만 그 API는 자신이 잘 모르는 내용이 많았고 개발을 하던 도중 막히게 되었다.&lt;/p&gt;&lt;p&gt;그러자 개발자는 그러면&amp;nbsp;몇 글자를 짤막하게 친다.&amp;nbsp;그리고&amp;nbsp;단축키를 누르면 사용가능한 함수들과 옵션들이 나타난다.&lt;/p&gt;&lt;p&gt;그러면 개발자는 자신이 사용중인 API를 몰라도 함수의 이름을 통해 그 함수의 기능을 유추하고&lt;/p&gt;&lt;p&gt;자신에게 제시된 여러가지 함수들 중 한 가지를 골라 적용한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;얼핏 보면 경험이 많지 않은 개발자도 금방 개발을 해낼 수 있어 좋아보이지만&lt;/p&gt;&lt;p&gt;이는 자신의 발전을 막는 좋지 않은 방법이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;만약 IDE가 없었으면 어땠을까?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;그 개발자는 API의 문서를 보며&amp;nbsp;기능을 구현하는데 제일 적합한&amp;nbsp;함수를 찾아 적용했을 것이다.&lt;/p&gt;&lt;p&gt;혹은 선임 개발자에게 질문을 하여 답변을 받을 수도 있다.&lt;/p&gt;&lt;p&gt;그러면서 왜 그 함수를 사용해야 하는지를 알게 되었을 것이고 이는 경험으로 남게 될 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;개발이란 자신이 사용할 수 있는 여러 도구 중 가장 적합한 도구를 &lt;b&gt;선택&lt;/b&gt;하여 최선의 결과물을 만드는 것이다.&lt;/p&gt;&lt;p&gt;최선의 결과물을 도출해내기 위해서가 아닌, 단순히 돌아가기만 하는 코드를 만들어 내는 것은 개발자가 할 일이 아니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;IDE를 사용함으로 인해 예에서 나온&amp;nbsp;초보개발자는&amp;nbsp;어떤 기능을 어떻게 사용하며&amp;nbsp;개발해야할지 알아볼 필요 없이,&amp;nbsp;&lt;/p&gt;&lt;p&gt;제시된 코드 중 적절해 &lt;b&gt;&quot;보이는&quot;&lt;/b&gt; 코드를&amp;nbsp;이어붙여가면서 자신의 발전을 막는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;요즘 개발을 처음 배울 때부터 IDE를 사용하는 경우가 많다.&lt;/p&gt;&lt;p&gt;그러다 보면 자신이 사용하는 언어를 컴파일마저도 할 줄 모르는 개발자들이 속출하게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또한 문법 오류가 나타나도 제시되는 해결책을 클릭하여 해결하는&amp;nbsp;법에 길들여져 다음에 같은 오류를 만나도&lt;/p&gt;&lt;p&gt;해결하지 못하는 경우가 생긴다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;나도 자동완성을 애용하다 보니 에디트플러스같은&amp;nbsp;일반 툴로 개발할 때에 가끔&amp;nbsp;함수명을 기억 못하여 API문서를 뒤적이게 되는 경우가 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;분명 IDE를 이용해 생산성을 높이고 편하게 개발하는 것은 좋은 현상이다.&lt;/p&gt;&lt;p&gt;하지만 그의 편리함에 취해 &lt;b&gt;기본&lt;/b&gt;에 대한 필요성을 잊고 자신의 개발능력을 떨어뜨리는 것에 대해 조심하여야 할 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://danielpark.net/128&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>개인일기</category>
<author>박중수</author>
<guid>https://danielpark.net/128</guid>
<comments>https://danielpark.net/128#entry128comment</comments>
<pubDate>Fri, 22 May 2015 21:10:09 +0900</pubDate>
</item>
<item>
<title>JDK9 개발 및 배포일정 발표</title>
<link>https://danielpark.net/127</link>
<description>&lt;p&gt;JDK9 버전이 2016년 9월에 정식배포된다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;새로 나올 자바 신기술의 세부내용은 다음과 같다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;102:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/102&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Process API Updates&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;110:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/110&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;HTTP 2 Client&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;143:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/143&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Improve Contended Locking&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;158:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/158&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Unified JVM Logging&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;165:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/165&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Compiler Control&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;197:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/197&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Segmented Code Cache&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;199:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/199&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Smart Java Compilation, Phase Two&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;201:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/201&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Modular Source Code&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;211:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/211&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Elide Deprecation Warnings on Import Statements&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;212:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/212&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Resolve Lint and Doclint Warnings&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;213:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/213&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Milling Project Coin&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;214:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/214&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Remove GC Combinations Deprecated in JDK 8&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;215:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/215&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Tiered Attribution for javac&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;216:&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://openjdk.java.net/jeps/216&quot; style=&quot;color: rgb(102, 102, 102); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;Process Import Statements Correctly&lt;/a&gt;&lt;br style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvetica; font-size: 13px; &quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: 'DejaVu Sans', 'Bitstream Vera Sans', 'Luxi Sans', Verdana, Arial, Helvet