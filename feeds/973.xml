<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>원영's</title>
<link>https://blog.voidmainvoid.net/</link>
<description>life is short </description>
<language>ko</language>
<pubDate>Mon, 13 May 2019 01:12:34 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>AndersonChoi</managingEditor>
<image>
<title>원영's</title>
<url>http://cfile30.uf.tistory.com/image/271A0A43595393E907D51D</url>
<link>https://blog.voidmainvoid.net</link>
<description>life is short </description>
</image>
<item>
<title>Android Q 부터 비 SDK 인터페이스 제한 하는 이유와 비 SDK 인터페이스 제한 확인하는 방법</title>
<link>https://blog.voidmainvoid.net/216</link>
<description>&lt;p&gt;&lt;b&gt;android Q&lt;/b&gt; targetSdkVerison부터 공개된 SDK API만 사용가능하다.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;이에 따라 android Q를 targetSdkVersion으로 하는 application은 &lt;b&gt;&lt;span style=&quot;color: #f41a18;&quot;&gt;공식 SDK인터페이스가 아닌 기능&lt;/span&gt;&lt;/b&gt;에는 접근하지 못하도록 제한한다.(&lt;a href=&quot;https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces&quot;&gt;공식홈페이지 참고&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bM5ku7/btqvbJHQkUf/Dar0KtJYfuIYHB66HPW4rk/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bM5ku7/btqvbJHQkUf/Dar0KtJYfuIYHB66HPW4rk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbM5ku7%2FbtqvbJHQkUf%2FDar0KtJYfuIYHB66HPW4rk%2Fimg.png' width=&quot;423&quot; height=&quot;297&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;왜 비 SDK를 제한하게 되었나?&lt;/h2&gt;
&lt;p&gt;안드로이드에서&amp;nbsp;&lt;b&gt;@hide annotation&lt;/b&gt;으로 선언한 여러 sdk(android.xxx.xxx 같은 package)의 method들이 존재한다. @hide 구문을 사용하면 android내부에서만 접근 가능하고, 외부(application)은 접근하지 못하며 공식 패키지 색인에도 노출되지 않는다. 즉, 공식적으로 application단에서 사용이 불가하도록 선언해 놓은것이다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;그러나, 많은 전세계의 개발자들이 개발 편의를 위해 @hide&amp;nbsp;method를 application단에서 java의 class invokation 혹은 reflection 혹은 @hide annotation을 강제로 지우고 사용하는 일이 빈번했다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;blockquote data-ke-style=&quot;normal&quot;&gt;예를 들어 Wifi mode에서 access point를 scan하는 method가&amp;nbsp;@hide&amp;nbsp;&lt;span&gt;startScanActive()로 선언되어있는데, application이 호출할 수 없게되어 있음. 강제로 reflection을 통해 application이 method를 호출.&lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;이와 같은 사용 패턴을막아서&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;android application을 사용하는 사용자와 개발자의 환경을 개선하고 사용자의 비정상 종료 위험과 개발자의 긴급 출시 위험을 줄이기 위해&lt;/span&gt;&amp;nbsp;&lt;b&gt;android Q&amp;nbsp;&lt;/b&gt;부터는 non-sdk interface를 사용하지 못하게 제한하게 되었다.(&lt;a href=&quot;https://android-developers.googleblog.com/2018/02/improving-stability-by-reducing-usage.html&quot;&gt;구글 공식 블로그 설명글(바로가기)&lt;/a&gt;)&lt;/p&gt;
&lt;hr contenteditable=&quot;false&quot; data-ke-type=&quot;hr&quot; data-ke-style=&quot;style3&quot; /&gt;
&lt;h3&gt;SDK와 비 SDK 인터페이스&lt;/h3&gt;
&lt;p&gt;공개 SDK인터페이스는 Android 프레임워크 패키지 색인에 문서화 되어 있다. &amp;gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://developer.android.com/reference/packages.html?hl=ko&quot;&gt;패키지색인(바로가기)&lt;br /&gt;&lt;/a&gt;상기 공식 문서화 되어있는 부분만 사용. 상기 공식 문서화 되어 있지 않은 SDK의 api들에 대해서 강제로 java reflection을 주입하여 사용하는 경우에 대해서 android Q 부터는 사용 불가하다.&lt;/p&gt;
&lt;h3&gt;블랙리스트/그레이리스트/허용 구분&lt;/h3&gt;
&lt;p&gt;android Q가 targetSdkVersion으로 사용할경우&lt;/p&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 31.1628%;&quot;&gt;Blacklist&lt;/td&gt;
&lt;td style=&quot;width: 68.8372%;&quot;&gt;사용할 수 없는 비 SDK 인터페이스 액세스 불가하여 시스템오류 발생&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 31.1628%;&quot;&gt;Graylist&lt;/td&gt;
&lt;td style=&quot;width: 68.8372%;&quot;&gt;Light graylist : 제한되지 않은 그레이 리스트의 비 SDK인터페이스&lt;br /&gt;Dark graylist : 제한된 그레이 리스트의 비 SDK인터페이스&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;width: 31.1628%;&quot;&gt;허용&lt;/td&gt;
&lt;td style=&quot;width: 68.8372%;&quot;&gt;자유롭게 사용가능한 공식 문서화된 패키지들&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;제한된 비 SDK interface를 사용시 예상되는 동작&lt;/h3&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;필드를 참조하는 Dalvik 명령어&lt;/td&gt;
&lt;td&gt;NoSuchFieldError&amp;nbsp;발생&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;메소드를 참조하는 Dalvik 명령어&lt;/td&gt;
&lt;td&gt;NoSuchMethodError&amp;nbsp;발생&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Class.getDeclaredField()&amp;nbsp;또는&amp;nbsp;Class.getField()를 통한 리플렉션&lt;/td&gt;
&lt;td&gt;NoSuchFieldException&amp;nbsp;발생&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Class.getDeclaredMethod(),&amp;nbsp;Class.getMethod()를 통한 리플렉션&lt;/td&gt;
&lt;td&gt;NoSuchMethodException&amp;nbsp;발생&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Class.getDeclaredFields(),&amp;nbsp;Class.getFields()를 통한 리플렉션&lt;/td&gt;
&lt;td&gt;결과에 비 SDK 구성원 없음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Class.getDeclaredMethods(),&amp;nbsp;Class.getMethods()를 통한 리플렉션&lt;/td&gt;
&lt;td&gt;결과에 비 SDK 구성원 없음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;env-&amp;gt;GetFieldID()를 통한 JNI&lt;/td&gt;
&lt;td&gt;NULL이 반환되고&amp;nbsp;NoSuchFieldError&amp;nbsp;발생&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;env-&amp;gt;GetMethodID()를 통한 JNI&lt;/td&gt;
&lt;td&gt;NULL이 반환되고&amp;nbsp;NoSuchMethodError발생&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;앱에 비 SDK 인터페이스가 포함되어 있는지 테스트하는 방법&lt;b&gt;&lt;/b&gt;&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;1.디버깅 가능한 앱을 사용한 테스트&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;앱을 빌드하고 Android Q os가 올라간 기기에서 앱을 실행하면 테스트를 실행하는동안&lt;b&gt; 비 SDK 인터페이스에 액세스하는경우 로그 메시지를 출력.&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;선언하는 클래스, 이름, 유형(Android 런타임에서 사용하는 형식)&amp;nbsp;&lt;/li&gt;
&lt;li&gt;액세스 수단: 연결, 리플렉션 또는 JNI를 통해&amp;nbsp;&lt;/li&gt;
&lt;li&gt;비 SDK 인터페이스가 속한 목록&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;android studio를 통해 logcat을 사용하면 아래와 같은 로그를 확인 할 수 있고 이에 대응하여 확인 가능.&lt;/p&gt;
&lt;pre id=&quot;code_1557468576753&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;Accessing hidden field
  Landroid/os/Message;-&amp;gt;flags:I (light greylist, JNI)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;2.StrictMode API를 사용한 테스트&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder?hl=ko#detectNonSdkApiUsage()&quot;&gt;detectNonSdkApiUsage(바로가기)&lt;/a&gt;를 사용.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyListener(java.util.concurrent.Executor,%20android.os.StrictMode.OnThreadViolationListener)&quot;&gt;penaltyListener(바로가기)&lt;/a&gt;을 사용하여 비 sdk 인터페이스를 사용할 때 마다 콜백 받을 수 있음.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;3.veridex 도구를 사용한 테스트&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://android.googlesource.com/platform/prebuilts/runtime/+/master/appcompat&quot;&gt;veridex 도구(바로가기)&lt;/a&gt;를 통해 apk를 code base로 검색, 노출&lt;br /&gt;단, 아래와 같은 경우 검출 불가&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JNI(C,C++)을 통한 호출&lt;/li&gt;
&lt;li&gt;리플렉션을 통한 호출의 경우 일부감지&lt;/li&gt;
&lt;li&gt;API수준 검사로 제한&lt;/li&gt;
&lt;/ul&gt;</description>
<category>Android</category>
<category>android</category>
<category>AndroidQ</category>
<category>안드로이드</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/216</guid>
<comments>https://blog.voidmainvoid.net/216#entry216comment</comments>
<pubDate>Fri, 10 May 2019 15:10:13 +0900</pubDate>
</item>
<item>
<title>Pixel에 Android 이미지 설치할때 오류 fastboot too old; please download the latest version 해결하기</title>
<link>https://blog.voidmainvoid.net/215</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bIj0Pi/btqu36xKY9L/MWc2KFElaeSXPPt6bGA6mk/img.jpg' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bIj0Pi/btqu36xKY9L/MWc2KFElaeSXPPt6bGA6mk/img.jpg' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbIj0Pi%2Fbtqu36xKY9L%2FMWc2KFElaeSXPPt6bGA6mk%2Fimg.jpg' data-filename=&quot;안드로이드 os설치.jpeg&quot; width=&quot;474&quot; height=&quot;267&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;안드로이드 application개발에 대응하다 보면 android version upgrade에 민감하게 된다. 여러 api들이 생기고 사라지기 때문에 미리 android os를 접하고 무슨 에러가 나는지, 어떤 기능을 새로 사용가능한지 확인해야 한다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;이를 위해서 대부분의 android application 개발자들은 구글 공식 테스트용 단말로 사용가능한 pixel을 가지고 테스트하는데 미리 android 공홈에서 preview os image를 다운받아서 os를 단말기에 올릴 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://developer.android.com/preview/download&quot;&gt;Pixel용 Android Q 베타 시스템 이미지 다운로드 공식 홈페이지&lt;/a&gt;&lt;/p&gt;
&lt;figure id=&quot;og_1557313423744&quot; contenteditable=&quot;false&quot; data-ke-type=&quot;opengraph&quot;&gt;&lt;a href=&quot;https://developer.android.com/preview/download&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-original-url=&quot;https://developer.android.com/preview/download&quot;&gt;
&lt;div class=&quot;og-image&quot; style=&quot;background-image: url('https://scrap.kakaocdn.net/dn/cUP2Dr/hyA3VJe8W5/GT8YGBLayKDNH5Kmj5rvj0/img.png?width=1200&amp;amp;height=675&amp;amp;face=0_0_1200_675');&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;og-text&quot;&gt;
&lt;p class=&quot;og-title&quot;&gt;Pixel용 다운로드 &amp;nbsp;|&amp;nbsp; Android Developers&lt;/p&gt;
&lt;p class=&quot;og-desc&quot;&gt;Instructions for downloading and installing preview system images for Pixel devices.&lt;/p&gt;
&lt;p class=&quot;og-host&quot;&gt;developer.android.com&lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;그런데 os를 업그레이드 하던도중 아래와 같은 에러를 만날 수도 있다.&lt;/p&gt;
&lt;pre id=&quot;code_1557313466339&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;in ~/Downloads/sailfish-qpp2.190228.021 
$ ./flash-all.sh
./flash-all.sh: line 17: --version: command not found
./flash-all.sh: line 17: [: -ge: unary operator expected
fastboot too old; please download the latest version 
at https://developer.android.com/studio/releases/platform-tools.html&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;설명에 따르면 상기 홈페이지로 접속하여 android platform-tool인 &lt;b&gt;fastboot file&lt;/b&gt;을 업그레이드하라고 하며, 이와 동시에 에러가 나면서 os를 단말에 설치가 중단되게 된다. 홈페이지로 접속하여 platform-tools를 upgrade해도 정상적으로 os설치가 불가한 경우도 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;blockquote data-ke-style=&quot;normal&quot;&gt;&lt;b&gt;fastboot란?&lt;/b&gt;&lt;br /&gt;adb 기능 중 하나로서 android의 Flash memory file system을 수정하는데 사용한다. os를 업그레이드 할때 필수 tool이다.&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;해결방법&lt;/h3&gt;
&lt;p&gt;flash-all.sh file을 열면 아래 코드와 같이 되어 있는데 &lt;b&gt;이 중 if script구문을 제거하고 실행&lt;/b&gt;시키면 정상 동작한다.&lt;br /&gt;(sh 파일은 sublime text, vi, vim 등으로 수정 가능)&lt;/p&gt;
&lt;pre id=&quot;code_1557313797673&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;#!/bin/sh

# Copyright 2012 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if ! [ $($(which fastboot) --version | grep &quot;version&quot; | cut -c18-23 | sed 's/\.//g' ) -ge 2802 ]; then
  echo &quot;fastboot too old; please download the latest version at https://developer.android.com/studio/releases/platform-tools.html&quot;
  exit 1
fi
fastboot flash bootloader bootloader-sailfish-8996-012001-1812132253.img
fastboot reboot-bootloader
sleep 5
fastboot flash radio radio-sailfish-8996-130281-1902150337.img
fastboot reboot-bootloader
sleep 5
fastboot -w update image-sailfish-qpp2.190228.021.zip&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;상기 code에서 if~~ 부터 fi~~ 구문을 제거하고 실행.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</description>
<category>Android</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/215</guid>
<comments>https://blog.voidmainvoid.net/215#entry215comment</comments>
<pubDate>Wed, 08 May 2019 20:11:22 +0900</pubDate>
</item>
<item>
<title>Android studio에서 gradle upgrade시 deprecated feature 확인 옵션 켜는 방법</title>
<link>https://blog.voidmainvoid.net/214</link>
<description>&lt;p&gt;Android를 개발하면서 gradle plugin과 gradle wrapper의 version을 지속해서 업그레이드해야한다.&lt;/p&gt;
&lt;p&gt;Gradle version upgrade를 하면 여러 feature들이 추가되고 Deprecated되는데 gradle build를 할때 아래와 같이 경고를 할 때가 있다.&lt;/p&gt;
&lt;pre id=&quot;code_1557301165787&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;Deprecated Gradle features were used in this build, making it incompatible with Gradle 6.0.
Use '--warning-mode all' to show the individual deprecation warnings.
See https://docs.gradle.org/5.1.1/userguide/command_line_interface.html#sec:command_line_warnings

BUILD SUCCESSFUL in 18s
71 actionable tasks: 67 executed, 4 up-to-date
16:39:15: Task execution finished 'build'.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;현재 Gradle version에서 Deprecated된 feature들을 다수 사용하고 있기 때문에 해당 건들에 대해 확인하려면 --warning-mode all을 사용해라는 문구이다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;이때 아래와 같이 android studio에서 설정하면 어느 기능들이 deprecated되었는지 gradle log를 통해 알 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Android studio &amp;gt; Preferences(cmd+,) &amp;gt; Build, Execution, Deployment &amp;gt; Compiler &amp;gt; Command-line Options &amp;gt;&amp;nbsp;&lt;span style=&quot;color: #6f45ec;&quot;&gt;--warning-mode=all&amp;nbsp;--stacktrace&lt;/span&gt; 추가&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/M8NF6/btqu356kjFx/0oJ2iTDbrYGYqWKg7SdHx0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/M8NF6/btqu356kjFx/0oJ2iTDbrYGYqWKg7SdHx0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FM8NF6%2Fbtqu356kjFx%2F0oJ2iTDbrYGYqWKg7SdHx0%2Fimg.png' data-filename=&quot;gradle warning옵션.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;상기와 같이 수정이후 gradle build를 수행하면 아래와 같이 stacktrace와 함께 deprecated되었다는 표시가 나온다.&lt;/p&gt;
&lt;pre id=&quot;code_1557301501475&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;The JacocoReportBase.setExecutionData(FileCollection) method has been deprecated. 
  This is scheduled to be removed in Gradle 6.0. Use getExecutionData().from(...)
	at org.gradle.testing.jacoco.tasks.JacocoReportBase.setExecutionData(JacocoReportBase.java:109)
	at org.gradle.testing.jacoco.tasks.JacocoReport_Decorated.setExecutionData(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:498)&lt;/code&gt;&lt;/pre&gt;</description>
<category>Java &amp; Scala</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/214</guid>
<comments>https://blog.voidmainvoid.net/214#entry214comment</comments>
<pubDate>Wed, 08 May 2019 16:43:27 +0900</pubDate>
</item>
<item>
<title>Java gc log 분석, 시각화하는 무료 사이트 추천 gceasy.io</title>
<link>https://blog.voidmainvoid.net/213</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/blFl6J/btqu2VhVkv1/PXsqBjqa8TNeq7pHgX9SY0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/blFl6J/btqu2VhVkv1/PXsqBjqa8TNeq7pHgX9SY0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FblFl6J%2Fbtqu2VhVkv1%2FPXsqBjqa8TNeq7pHgX9SY0%2Fimg.png' data-filename=&quot;garbage collection java gc gceasy.png&quot; width=&quot;454&quot; height=&quot;341&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Java 개발과 운영을 하다보면 gc log에 대한 분석이 반드시 필요할 때가 있다.&lt;/p&gt;
&lt;p&gt;application운영을 통해 남겨진 gc log를 막상 볼려고 하면 어디서 부터 봐야할지 막막하다.&lt;/p&gt;
&lt;p&gt;이때 gceasy.io 사이트를 사용한다면 그 걱정이 말끔히 사라진다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://gceasy.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://gceasy.io/&lt;/a&gt;&amp;nbsp;&lt;/p&gt;
&lt;figure id=&quot;og_1557209177132&quot; contenteditable=&quot;false&quot; data-ke-type=&quot;opengraph&quot;&gt;&lt;a href=&quot;http://gceasy.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-original-url=&quot;https://gceasy.io/&quot;&gt;
&lt;div class=&quot;og-image&quot; style=&quot;background-image: url();&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;og-text&quot;&gt;
&lt;p class=&quot;og-title&quot;&gt;gceasy.io&lt;/p&gt;
&lt;p class=&quot;og-desc&quot;&gt;Training Our easy to understand, fun filled training programs is a preferred choice for several enterprises to transform their engineers in to performance experts&lt;/p&gt;
&lt;p class=&quot;og-host&quot;&gt;gceasy.io&lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;gceasy.io 사이트는 gc log를 무료로! 간단하게 업로드만으로 분석해준다. 다양한 upload file들을 지원(*.log, *.gz, *.zip 등)하고, 시간별, 수치(gc time 등)별 그래프를 빠르게 보여주기에 아주 편리하게 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;사용방법&lt;/h3&gt;
&lt;p&gt;1. java application에서 아래와 같은 gc log 남기는 옵션을 주고 로그를 디렉토리에 저장한다. (필요에 따라 옵션을 추가/제거)&lt;/p&gt;
&lt;pre id=&quot;code_1557209398581&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;-XX:+PrintClassHistogramAfterFullGC 
-XX:+PrintClassHistogramBeforeFullGC 
-XX:+PrintGC 
-XX:+PrintGCApplicationStoppedTime 
-XX:+PrintGCDateStamps 
-XX:+PrintGCDetails 
-XX:+PrintGCTimeStamps 
-XX:+PrintHeapAtGC 
-XX:+PrintReferenceGC &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2. directory에 남긴 log를 추출하여 gceasy.io 사이트에 업로드한다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/wBGT3/btqu2aGCPrH/2QeSMwdKvfpgsKkBNr8wYk/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/wBGT3/btqu2aGCPrH/2QeSMwdKvfpgsKkBNr8wYk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FwBGT3%2Fbtqu2aGCPrH%2F2QeSMwdKvfpgsKkBNr8wYk%2Fimg.png' data-filename=&quot;gc log upload.png&quot; width=&quot;563&quot; height=&quot;425&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3. 분석된 gc log의 그래프, 수치 등을 사이트에서 확인한다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/yBJOk/btqu2a0VINY/efmAV5dBUQ8HXXgnuUEQk1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/yBJOk/btqu2a0VINY/efmAV5dBUQ8HXXgnuUEQk1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FyBJOk%2Fbtqu2a0VINY%2FefmAV5dBUQ8HXXgnuUEQk1%2Fimg.png' data-filename=&quot;gc log 분석 결과.png&quot; width=&quot;558&quot; height=&quot;367&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;분석 결과&lt;/h3&gt;
&lt;p&gt;gc log에 대한 분석결과는 아래와 같이 각 종목별로 보여주는데 개발자가 필요한 부분에 대해서 확인 가능하다.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- GC health&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- JVM Heap Size(Allocated, Peak 등)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/MFbrt/btqu1s2kz1X/5krFfdFBIYUSD8QYLLPfZ0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/MFbrt/btqu1s2kz1X/5krFfdFBIYUSD8QYLLPfZ0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FMFbrt%2Fbtqu1s2kz1X%2F5krFfdFBIYUSD8QYLLPfZ0%2Fimg.png' data-filename=&quot;gc 분석결과.png&quot; width=&quot;553&quot; height=&quot;173&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- Key Performance Indicators(Throughput, gc duration time 등)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cetq89/btqu2G6lYJ5/ud5YrC5puqPKp25tE6evpk/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cetq89/btqu2G6lYJ5/ud5YrC5puqPKp25tE6evpk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fcetq89%2Fbtqu2G6lYJ5%2Fud5YrC5puqPKp25tE6evpk%2Fimg.png' data-filename=&quot;gc throughput 결과물.png&quot; width=&quot;555&quot; height=&quot;309&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- Interactive Graphs(Heap Usage, GC Duration 등)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/btcGIh/btqu2IC8DKn/5JMU0KKnKNlTivRedAKYlk/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/btcGIh/btqu2IC8DKn/5JMU0KKnKNlTivRedAKYlk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbtcGIh%2Fbtqu2IC8DKn%2F5JMU0KKnKNlTivRedAKYlk%2Fimg.png' data-filename=&quot;gc 그래프.png&quot; width=&quot;545&quot; height=&quot;309&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- Object Stats&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- Memory leak&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- Consecutive Full GC&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;- Long Pause&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;기타 추가 정보들.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;사용 Plan&lt;/h3&gt;
&lt;h4&gt;무료사용&lt;/h4&gt;
&lt;p&gt;- 5 upload/user/day&lt;/p&gt;
&lt;p&gt;- 50 mb file size/upload limit&lt;/p&gt;
&lt;h4&gt;PRO or ENTERPIRSE&lt;/h4&gt;
&lt;p&gt;- 300 upload/user/month or more&lt;/p&gt;
&lt;p&gt;- 300 mb file size/upload limit or more&lt;/p&gt;
&lt;p&gt;- 머신러닝을 통한 gc tuning 추천기능 사용&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;상기와 같이 &lt;b&gt;무료사용/PRO/ENTRPRISE&lt;/b&gt;로 사용 Plan이 나뉘어져 있다. gc log를 하루에 수십개씩 분석하는 것이 아닌 이상 free user라도 무리없이 사용 가능하다. &lt;span style=&quot;color: #333333;&quot;&gt;상세 plan은&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gceasy.io/pricing.jsp&quot;&gt;여기(바로가기)&lt;/a&gt;&lt;span style=&quot;color: #333333;&quot;&gt;에서 확인할 수 있다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;&lt;span style=&quot;color: #333333;&quot;&gt;무료사용 TIP&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span style=&quot;color: #333333;&quot;&gt;무료사용 plan에서 무료 file upload의 제한이 50mb이지만 upload파일 기준이므로 만약 gc log file이 50mb가 넘어간다면 zip으로 압축해서 upload하면 더 큰 파일도 무료로 분석이 가능하다.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/c9xJrB/btqu3AqR6AW/SJxWlLObT0shsP30056jI1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/c9xJrB/btqu3AqR6AW/SJxWlLObT0shsP30056jI1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fc9xJrB%2Fbtqu3AqR6AW%2FSJxWlLObT0shsP30056jI1%2Fimg.png' data-filename=&quot;gc zip으로 압축하기.png&quot; width=&quot;699&quot; height=&quot;274&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;End of Document&lt;/p&gt;</description>
<category>Java &amp; Scala</category>
<category>GC</category>
<category>gceasy</category>
<category>gclog</category>
<category>가비지콜랙션</category>
<category>유용한사이트</category>
<category>튜닝</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/213</guid>
<comments>https://blog.voidmainvoid.net/213#entry213comment</comments>
<pubDate>Tue, 07 May 2019 15:26:05 +0900</pubDate>
</item>
<item>
<title>Java에서 method작성시 파라미터 개수를 5개미만으로 해야하는 이유??</title>
<link>https://blog.voidmainvoid.net/212</link>
<description>&lt;p&gt;17년 Google 개발자들이 참여한 논문인 Detecting Argument Selection Defects에 따르면, 5개 이상 인자(argument)을 받을때 개발시 생기는 오류가 급속도로 늘어남을 확인했다고 한다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;blockquote data-ke-style=&quot;normal&quot;&gt;&lt;span&gt;By analyzing the defects found, we are able to quantify best practice advice for API design and show that the probability of an argument selection defect increases markedly when methods have more than five arguments. &lt;/span&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;5개 이상 인자가 아닐때도 개발 중 오류를 낼 수 있음을 google내부 프로젝트들에 대해 분석하면서 알게되었는데 아래가 그 예이다.&lt;/p&gt;
&lt;pre id=&quot;code_1556880835112&quot; class=&quot;java&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;class JanitorFn {
   static Value configure(String fileUser , . . . ) { . . . }
}
public class KeywordSink { 
   private String fileUser;
   public Value write(String stageName , . . . ) 
   { ...
      return JanitorFn.configure(stageName , . . . ); 
   }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;JanitorFn class는 configure method호출시 첫번째 인자가 fileUser이여야하는데 개발자가 잘못 적은 것이다. 이는 &lt;b&gt;&lt;i&gt;argument selection defects(인자 선택 오류)&lt;/i&gt; &lt;/b&gt;중 하나이다. 상기와 같은 인자 선택 오류는 실제 구글내부 프로젝트에서 84건의 실제 사례를 확인 할 수 있었다.&lt;/p&gt;
&lt;hr contenteditable=&quot;false&quot; data-ke-type=&quot;hr&quot; data-ke-style=&quot;style3&quot; /&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/sxILI/btqu046DYou/c9rGNShMFynY40VkKEjBtK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/sxILI/btqu046DYou/c9rGNShMFynY40VkKEjBtK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FsxILI%2Fbtqu046DYou%2Fc9rGNShMFynY40VkKEjBtK%2Fimg.png' data-filename=&quot;메서드 내부 인자 개수 별 오류비율.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;논문에서는 파라미터의 인자 개수와 오류 발생수치간의 관계를 파악하기 위해 실험을 했고, Figure 11과 같이 인자가 5개 이상일때 급속도로 오류 발생률이 증가됨을 확인 할 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&amp;lt; 출처 &amp;gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;fileblock&quot;&gt;&lt;a href=&quot;https://k.kakaocdn.net/dn/R9G5f/btqu0TK4cfy/zvOhmDKukmqUzMjQL2OAsK/Detecting%20Argument%20Selection%20Defects.pdf?attach=1&amp;knm=tfile.pdf&quot;&gt;&lt;div class=&quot;image&quot;&gt;&lt;/div&gt;&lt;div class=&quot;desc&quot;&gt;&lt;div class=&quot;filename&quot;&gt;&lt;span class=&quot;name&quot;&gt;Detecting Argument Selection Defects.pdf&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;size&quot;&gt;1.99MB&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;/figure&gt;&lt;/p&gt;</description>
<category>개발이야기</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/212</guid>
<comments>https://blog.voidmainvoid.net/212#entry212comment</comments>
<pubDate>Fri, 03 May 2019 20:07:42 +0900</pubDate>
</item>
<item>
<title>맥북, 인터넷 웹에서 hwp파일 무료로 업로드, 수정, 저장하기.</title>
<link>https://blog.voidmainvoid.net/211</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cOaK3j/btquXkh6HCx/tZF08osuf0tpZLxsthpdQ0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cOaK3j/btquXkh6HCx/tZF08osuf0tpZLxsthpdQ0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcOaK3j%2FbtquXkh6HCx%2FtZF08osuf0tpZLxsthpdQ0%2Fimg.png' data-filename=&quot;한글 hwp 웹사이트.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;hwp파일(한글파일)은 애증의 관계이다. 한국에서는 없어서도 안되고 없어지지도 않는 독특한 문서 포멧이자, 이만큼 다루기 편한 한글 포맷도 없다.&lt;/p&gt;
&lt;p&gt;이런 hwp파일을 열고, 수정하고, 저장하려면 한글 sw를 반드시 구매해야하는데, HANCOM에서 운영하는 &lt;span style=&quot;color: #0051a1;&quot;&gt;&lt;b&gt;말랑말랑 Platform의 한컴스페이스&lt;/b&gt;&lt;/span&gt;를 사용하면 &lt;b&gt;무료로 열고, 수정하고 저장&lt;/b&gt;할 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4 style=&quot;text-align: center;&quot;&gt;말랑 Platform - 한컴스페이스&lt;/h4&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://space.malangmalang.com/?_ga=2.190243947.1302056173.1556770590-1255745889.1556770590&quot;&gt;https://space.malangmalang.com/?_ga=2.190243947.1302056173.1556770590-1255745889.1556770590&lt;/a&gt;&lt;/p&gt;
&lt;figure id=&quot;og_1556775212656&quot; contenteditable=&quot;false&quot; data-ke-type=&quot;opengraph&quot;&gt;&lt;a href=&quot;https://space.malangmalang.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; data-original-url=&quot;https://space.malangmalang.com/?_ga=2.190243947.1302056173.1556770590-1255745889.1556770590&quot;&gt;
&lt;div class=&quot;og-image&quot; style=&quot;background-image: url('https://scrap.kakaocdn.net/dn/TRVQ4/hyAYVof5Fu/pEEx2sF49WAfg4kzM0r2Kk/img.png?width=120&amp;amp;height=120&amp;amp;face=0_0_120_120');&quot;&gt;&amp;nbsp;&lt;/div&gt;
&lt;div class=&quot;og-text&quot;&gt;
&lt;p class=&quot;og-title&quot;&gt;한컴스페이스&lt;/p&gt;
&lt;p class=&quot;og-desc&quot;&gt;어디서나 펼쳐지는 오피스 세상&lt;/p&gt;
&lt;p class=&quot;og-host&quot;&gt;space.malangmalang.com&lt;/p&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/figure&gt;
&lt;p&gt;일반사용자는 간단한 가입 이후에 무료로 사용이 가능하다. 사용관련 plan은 아래와 같다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4 style=&quot;text-align: center;&quot;&gt;사용 요금&lt;/h4&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/oRdra/btquVx3McZz/96CoyN3887u2Tz76vHJjbK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/oRdra/btquVx3McZz/96CoyN3887u2Tz76vHJjbK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FoRdra%2FbtquVx3McZz%2F96CoyN3887u2Tz76vHJjbK%2Fimg.png' data-filename=&quot;온라인 한컴.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cyscyV/btquX5xM0hi/WwpfpVCFM4mdA9Ok6d5qp0/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/cyscyV/btquX5xM0hi/WwpfpVCFM4mdA9Ok6d5qp0/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcyscyV%2FbtquX5xM0hi%2FWwpfpVCFM4mdA9Ok6d5qp0%2Fimg.png' data-filename=&quot;hwp 수정하기.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;무료로 가입만 하면 2GB스토리지가 제공되며 한개 파일 문서가 너무 용량이 크지않다면(1GB 이하) 손쉽게 문서를 편집, 생성, 저장 할 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;사용성은 어떨까?&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;실제로 문서를 업로드하여 웹을 통해 hwp문서를 확인 할 수 있는데, 기존 사용하던 한글application처럼 바로바로 수정이 가능한 것을 볼 수 있다. 또한 문서를 업로드하면 끝나는 것이 아니라 무료사용자에게는 2GB의 스토리지를 제공하므로 필요한 문서를 미리 올려둘 수도 있다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cLtOrz/btquW5yOEgB/DK4PmkoVk4BCyYGHW9yLpk/img.png' data-lightbox='lightbox' data-alt='개인용 스토리지, dropbox처럼 cloud drive로 쓸 수 있다.'&gt;&lt;img src='https://k.kakaocdn.net/dn/cLtOrz/btquW5yOEgB/DK4PmkoVk4BCyYGHW9yLpk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcLtOrz%2FbtquW5yOEgB%2FDK4PmkoVk4BCyYGHW9yLpk%2Fimg.png' data-filename=&quot;hwp 스토리지.png&quot;&gt;&lt;/span&gt;&lt;figcaption&gt;개인용 스토리지, dropbox처럼 cloud drive로 쓸 수 있다.&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/v6uNr/btquW5eqjc2/KhrRrhEx1kPhZELStIX8nk/img.png' data-lightbox='lightbox' data-alt='한글문서 편집창'&gt;&lt;img src='https://k.kakaocdn.net/dn/v6uNr/btquW5eqjc2/KhrRrhEx1kPhZELStIX8nk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fv6uNr%2FbtquW5eqjc2%2FKhrRrhEx1kPhZELStIX8nk%2Fimg.png' data-filename=&quot;한글파일 열기.png&quot;&gt;&lt;/span&gt;&lt;figcaption&gt;한글문서 편집창&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;End of Document&lt;/p&gt;</description>
<category>유용한 사이트</category>
<category>유용한사이트</category>
<category>한글과컴퓨터</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/211</guid>
<comments>https://blog.voidmainvoid.net/211#entry211comment</comments>
<pubDate>Thu, 02 May 2019 14:45:38 +0900</pubDate>
</item>
<item>
<title>Java8이상에서 MaxMetaspaceSize 설정, 반드시 해야할까?</title>
<link>https://blog.voidmainvoid.net/210</link>
<description>&lt;p&gt;지난글(&lt;a href=&quot;https://blog.voidmainvoid.net/184&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Java&amp;nbsp;8&amp;nbsp;에서&amp;nbsp;사라진&amp;nbsp;maxPermSize,&amp;nbsp;PermSize을&amp;nbsp;대체하는&amp;nbsp;옵션?&lt;/a&gt;)에서 Class의 Meta정보, Method의 Meta정보, Static변수와 상수정보를 저장하는 공간인 Permanent Heap에 대해서 이야기해 보았다. Java8부터 해당 Heap은 Native Memory영역으로 넘어갔으며 Native Memory상한까지 영역을 차지할 수 있으며, 그렇기에 Metaspace에 대한 옵션은 크게 주의를 가지고 설정할 필요가 없다고 적었다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;하지만, MaxMetaspaceSize를 정의하지 않은 상태의 특수한 상황이라면 어떨까? &lt;br /&gt;지속적으로 class의 meta정보, static변수와 상수정보값이 늘어나는 경우에는 아래와 같이 끔찍한 일이 벌어질 것이다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bOtPby/btquVxVIAYM/p7KqnX8nKYMjoc3IVQHGsK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bOtPby/btquVxVIAYM/p7KqnX8nKYMjoc3IVQHGsK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbOtPby%2FbtquVxVIAYM%2Fp7KqnX8nKYMjoc3IVQHGsK%2Fimg.png' data-filename=&quot;자바8 메타스페이스.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;상기 application process의 memory는 아래와 같은 옵션으로 되어 있었다.&lt;/p&gt;
&lt;pre id=&quot;code_1556607669707&quot; class=&quot;javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;-Xms80g -Xmx80g -server -XX:+UseG1GC -XX:+DisableExplicitGC -XX:+UseStringDeduplication&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;아주 일반적인 java8의 g1gc를 사용한 option이다. 그런데 MaxMetaSpaceSize영역이 정해져 있지 않다보니 &lt;b&gt;분명히 heap dump를 뜨거나 혹은 gc log를 봤을때는 무조건 80G만 영역을 차지하고 있는데도 불구하고&lt;/b&gt; native memory의 사용영역이 무한히 늘어나서 Memory swap이 되기 일보직전까지 갔던것이다. swap이 시작되면 application은 현저할 정도로 속도가 느려지니 장애상황과 다름없다고 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;상기와 같은 상황을 극복하기 위해 MaxMetaspaceSize를 추가해 보았다.&amp;nbsp;&lt;/p&gt;
&lt;pre id=&quot;code_1556608549704&quot; class=&quot;javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;-Xms80g -Xmx80g -server -XX:+UseG1GC -XX:+DisableExplicitGC -XX:+UseStringDeduplication -XX:MetaspaceSize=1024M -XX:MaxMetaspaceSize=1024M&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;앞으로 더 모니터링해야 하지만, java application을 위해 80Gb의 heap영역을 정해놓았고, 1Gb의 metaspace의 상한선을 선언했으니 앞으로는 81Gb까지 application process가 안정적으로 운영되어야 할 것이다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;추후 상기 모니터링 결과에 대해 정리해볼 것이다.&lt;/p&gt;</description>
<category>Java &amp; Scala</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/210</guid>
<comments>https://blog.voidmainvoid.net/210#entry210comment</comments>
<pubDate>Tue, 30 Apr 2019 16:18:39 +0900</pubDate>
</item>
<item>
<title>Pull request를 효과적으로 사용하는 방법</title>
<link>https://blog.voidmainvoid.net/209</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/byYi6U/btquN8ONa2E/g7f5eti9wBHGFWfJPbngJ1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/byYi6U/btquN8ONa2E/g7f5eti9wBHGFWfJPbngJ1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbyYi6U%2FbtquN8ONa2E%2Fg7f5eti9wBHGFWfJPbngJ1%2Fimg.png' data-filename=&quot;pull request를 효과적으로 사용하는 방법.png&quot; width=&quot;389&quot; height=&quot;248&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;최근 github에서 Pull request(이하 pr)에 대해 작성하고 답변하던 도중(&lt;a href=&quot;https://github.com/kubernetes/git-sync/pull/101&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;kubernetes git-sync pr 주고받은 내용 바로가기&lt;/a&gt;) 어떻게 pr을 적는것이 효과적일까에 대해 고민이 많아졌다. 고민과 동시에 구글링을 해봣는데 2015년 github blog에 올라온 좋은 글이 있어 해당 내용을 정리하고자 하여 posting을 하게 되었다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;blockquote data-ke-style=&quot;normal&quot;&gt;원글 :&amp;nbsp;&lt;a href=&quot;https://github.blog/2015-01-21-how-to-write-the-perfect-pull-request/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;How to write the perfect pull request&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;원글에서는 &lt;b&gt;3가지의 상황&lt;/b&gt;에 따라 pr을 작성하는 방법에 대해 소개하였다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h3&gt;Pull request를 시작하는 방법&lt;/h3&gt;
&lt;p&gt;- pr을 날리는 목적에 대한 내용을 포함하라.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. ...기능을 화면에 간편하게 표시하기 위함.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. ...을 작동시키게 하기 위함.&lt;/p&gt;
&lt;p&gt;- 왜 이 pr을 생성하게 되었는지에 대한 개요문을 포함하라. reviewer는 history에 대해 잘 모를 수 있다.&lt;/p&gt;
&lt;p&gt;- pr은 누구든지 읽을 수 있다. 그러므로 내용과 어조를 나중에 읽는 사람들을 초점에 맞추어 적어라.&lt;/p&gt;
&lt;p&gt;- 원하는 피드백이 있다면 명시적으로 적어라.&lt;/p&gt;
&lt;p&gt;- 언제 피드백을 원하는지 명시적으로 적어라. 만약 pr에 대한 내용이 개발 진행중이라면 pull request 앞에 [WIP]라고 적는다면 reviewer들은 이에 대해 확실히 이해할 수 있다.(WIP는 Work In Progress, 개발중 이라는 뜻)&lt;/p&gt;
&lt;p&gt;- 특정인에 대해 특별히 피드백을 받고 싶다면 @사람을 사용하여 논의해라.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. @wonyoung for clarification on this logic&lt;/p&gt;
&lt;p&gt;- 특정팀에 대해 특별히 피드백을 받고 싶다면 @팀명을 사용하여 논의해라.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. @github/security any concerns?&lt;/p&gt;
&lt;h3&gt;피드백 하는 방법&lt;/h3&gt;
&lt;p&gt;- pr을 날리는 목적에 대해 숙지하고 있어야한다.&lt;/p&gt;
&lt;p&gt;- 만약 어떤 comment에 대해 극구 반대하는 comment를 달고 싶다면, 진정하고 한번 더 생각해보자.&lt;/p&gt;
&lt;p&gt;- 물어라, 하라고 하지말고.(공손한 표현을 써라)&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. &quot;What do you think about trying...?&quot; // 공손한표현&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. &quot;Don't do...&quot; // X&lt;/p&gt;
&lt;p&gt;- 왜 code가 변경되어야 하는지에 대해 자세히 써라&lt;/p&gt;
&lt;p&gt;- 코드를&amp;nbsp;단순화하거나&amp;nbsp;개선할&amp;nbsp;수&amp;nbsp;있는&amp;nbsp;방법을&amp;nbsp;제공하라&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;누군가가&amp;nbsp;만든&amp;nbsp;작품을&amp;nbsp;언급할&amp;nbsp;때, &quot;멍청한&quot;과&amp;nbsp;같은&amp;nbsp;경멸적인&amp;nbsp;용어를&amp;nbsp;사용하지 마라&lt;/p&gt;
&lt;p&gt;- 겸손한 어투.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex.&amp;nbsp;&amp;ldquo;I&amp;rsquo;m&amp;nbsp;not&amp;nbsp;sure,&amp;nbsp;let&amp;rsquo;s&amp;nbsp;try&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;- 과장하지 말것.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex.&amp;nbsp;&amp;ldquo;NEVER&amp;nbsp;do&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;- skill, 지식, product quality의 향상을 초점에 맞추어 비평할 것.&lt;/p&gt;
&lt;p&gt;- 어조를 명확히 하기 위해 아래와 같이 이모지를 사용할 것.&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex.&amp;nbsp;&amp;ldquo;:sparkles:&amp;nbsp;:sparkles:&amp;nbsp;Looks&amp;nbsp;good&amp;nbsp;:+1:&amp;nbsp;:sparkles:&amp;nbsp;:sparkles:&amp;rdquo; // looking very good~&lt;/p&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: #333333;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;ex. &amp;ldquo;Looks&amp;nbsp;good.&amp;rdquo; // X&lt;/p&gt;
&lt;h3&gt;피드백에 응답하는 방법&lt;/h3&gt;
&lt;p&gt;- 피드백에 대해 감사의 표현으로 이끌어 보자.&lt;/p&gt;
&lt;p&gt;- 명확한 질문으로 이끌어 내자.&lt;/p&gt;
&lt;p&gt;- 해결법에&amp;nbsp;도달하기&amp;nbsp;위해&amp;nbsp;내린&amp;nbsp;결정에&amp;nbsp;대해&amp;nbsp;설명하자.&lt;/p&gt;
&lt;p&gt;- 최대한 모든 comment에 대해 응답하자.&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;만약&amp;nbsp;혼란이나&amp;nbsp;논쟁이&amp;nbsp;증가하고&amp;nbsp;있다면,&amp;nbsp;쓰여진&amp;nbsp;단어가&amp;nbsp;여전히&amp;nbsp;의사소통의&amp;nbsp;가장&amp;nbsp;좋은&amp;nbsp;형태인지&amp;nbsp;자신에게&amp;nbsp;물어보자.&amp;nbsp;직접&amp;nbsp;대면한&amp;nbsp;다음,&amp;nbsp;오프라인&amp;nbsp;토론을&amp;nbsp;요약으로 게시하는&amp;nbsp;것도 고려해보자.&lt;/p&gt;
&lt;hr contenteditable=&quot;false&quot; data-ke-type=&quot;hr&quot; data-ke-style=&quot;style3&quot; /&gt;
&lt;p&gt;2015년에 쓰인 글이지만 아직도 유효한 멋진 조언들이다. 상기 가이드라인을 읽어보면 pr도 하나의 글쓰기과정이라고 여기는 것처럼 보인다. pr이라는 과정은 서로 대면해서 의사소통으로 결정하는 것이 아니기 때문에 더욱 어조에 대해 신경을 많이 쓸 수 밖에 없는데, 똑같은 review라도 읽는사람 입장에서 기분이 상할 수도 있기 때문일 것이라고 생각된다.&lt;/p&gt;
&lt;h2&gt;Pull request를 효과적으로 사용하는 방법 세줄요약&lt;/h2&gt;
&lt;p&gt;&lt;span style=&quot;color: #6f45ec;&quot;&gt;&lt;b&gt;1. 겸손한 어조를 사용하여 상대방이 기분나쁘지 않도록 노력할 것.&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #6f45ec;&quot;&gt;&lt;b&gt;2. emoji, @어노테이션 등을 사용하여 효과적으로 소통할 것.&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;color: #6f45ec;&quot;&gt;&lt;b&gt;3.&amp;nbsp;명확하게 질문하고 명확하게 답변할 것.&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;</description>
<category>open source</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/209</guid>
<comments>https://blog.voidmainvoid.net/209#entry209comment</comments>
<pubDate>Wed, 24 Apr 2019 17:06:53 +0900</pubDate>
</item>
<item>
<title>[Vue.JS] button 클릭시 다른 홈페이지로 redirect하는 방법</title>
<link>https://blog.voidmainvoid.net/208</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/b7Ic8z/btquLoY7IKB/3ep2THxq8Ra3B5CUHGqNRK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/b7Ic8z/btquLoY7IKB/3ep2THxq8Ra3B5CUHGqNRK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2Fb7Ic8z%2FbtquLoY7IKB%2F3ep2THxq8Ra3B5CUHGqNRK%2Fimg.png' data-filename=&quot;vue js에서 홈페이지 띄우는 방법.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;VueJS를 개발하다보면 button click시에 특정 홈페이지로 redirect하기를 원할 때가 있다. 그때는 아래와 같이 정의하면 된다.&lt;/p&gt;
&lt;pre id=&quot;code_1556013138860&quot; class=&quot;javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Vue JS&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  
&amp;lt;div id=&quot;app&quot;&amp;gt;
  &amp;lt;button @click=&quot;onClickRedirect()&quot;&amp;gt;Redirect to Google&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;
  
&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
  new Vue({
    el: '#app',
    data: {
    },  
    methods:{
      onClickRedirect: function () {   
          window.open(&quot;https://google.com&quot;, &quot;_blank&quot;);    
      }
    }
  });
&amp;lt;/script&amp;gt;
  
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;click event를 받는 method에서 &lt;b&gt;window.open&lt;/b&gt; method를 호출!&lt;/p&gt;</description>
<category>JS &amp; JQuery</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/208</guid>
<comments>https://blog.voidmainvoid.net/208#entry208comment</comments>
<pubDate>Tue, 23 Apr 2019 18:52:49 +0900</pubDate>
</item>
<item>
<title>Javascript의 json 객체에서 -(dash)가 포함된 name에 접근하는 방법?</title>
<link>https://blog.voidmainvoid.net/207</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/1CjyL/btquJHL6P11/BUAqZKkv2E5dT0BB2ri8WK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/1CjyL/btquJHL6P11/BUAqZKkv2E5dT0BB2ri8WK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2F1CjyL%2FbtquJHL6P11%2FBUAqZKkv2E5dT0BB2ri8WK%2Fimg.png' data-filename=&quot;json dash가 있을 경우.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;json은 다양한 방식으로 표현될 수 있는데 상기와 같이 -(dash)기반으로 name을 정의할 수도 있고 혹은 java개발자에게 편한 camelCase로도 표현가능하다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;-(dash)기반으로 표현할 경우 javascript에서 아래와 같이 error가 발생하면서 정상적으로 접근하지 못할 때가 있다.&lt;/p&gt;
&lt;pre id=&quot;code_1556012737604&quot; class=&quot;javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;jsonObj.popup.menu-item //ReferenceError: &quot;item&quot; is not defined&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;상기와 같은 json표현식에서는 아래와 같이 name에 접근하면 된다.&lt;/p&gt;
&lt;pre id=&quot;code_1556012856925&quot; class=&quot;javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;jsonObj.popup[&quot;menu-item&quot;] //Good&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;대괄호안에 접근하고자 하는 name을 적으면 됨.&lt;/p&gt;</description>
<category>JS &amp; JQuery</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/207</guid>
<comments>https://blog.voidmainvoid.net/207#entry207comment</comments>
<pubDate>Tue, 23 Apr 2019 18:48:22 +0900</pubDate>
</item>
<item>
<title>쿠버네티스, 물리장비에 올릴까? 가상장비에 올릴까? 머신별 장단점 알아보기.</title>
<link>https://blog.voidmainvoid.net/206</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/eNEoMr/btquDr9kRph/G8zV6mG5vBs81ow46Put2K/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/eNEoMr/btquDr9kRph/G8zV6mG5vBs81ow46Put2K/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FeNEoMr%2FbtquDr9kRph%2FG8zV6mG5vBs81ow46Put2K%2Fimg.png' width=&quot;600&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;Kubernetes&lt;/h2&gt;
&lt;p&gt;Micro Service Architecture(이하 MSA) 개발방식이 유행을 타면서 이와 동시에 docker와 같은 container application들을 orchestration하는 도구인 Kuberntes(이하 k8s)의 관심도도 엄청나게 높아지고 있다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/cbImTU/btquDME90Bo/ztUioLTQhpvpwiYcVVGYWK/img.png' data-lightbox='lightbox' data-alt='google trend 파랑 : kubernetes, 빨강 : docker swarm (in 대한민국)'&gt;&lt;img src='https://k.kakaocdn.net/dn/cbImTU/btquDME90Bo/ztUioLTQhpvpwiYcVVGYWK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FcbImTU%2FbtquDME90Bo%2FztUioLTQhpvpwiYcVVGYWK%2Fimg.png' data-filename=&quot;쿠버네티스 도커스웜.png&quot; width=&quot;800&quot;&gt;&lt;/span&gt;&lt;figcaption&gt;google trend 파랑 : kubernetes, 빨강 : docker swarm (in 대한민국)&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;k8s에 대한 관심이 지속적으로 늘어남과 동시에 개발자들은 효율적인 machine(host)의 resource(cpu, ram등)의 사용을 위해 아래와 같은 질문이 자연스럽게 나눠지곤한다.&lt;/p&gt;
&lt;h4 style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: #6f45ec;&quot;&gt;k8s를 물리장비에 올릴까? 가상장비에 올릴까? &lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span style=&quot;color: #6f45ec;&quot;&gt;어디에 올렸을때 효과적일까?&lt;/span&gt;&lt;/b&gt;&lt;/h4&gt;
&lt;p&gt;상기와 같은 질문을 하기 전에 k8s의 목적에 대해 명확히 알아야 한다. &lt;b&gt;k8s는 container orchestration도구&lt;/b&gt;일 뿐이다. container application들은 가상장비 혹은 물리장비에 올라갈 것이고 &lt;b&gt;결국 container application의 역할과 종류, 요구사항에 따라 올라가는 위치가 달라진다&lt;/b&gt;고 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;그러므로 아래와 같이 질문하는 편이 나아보인다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h4 style=&quot;text-align: center;&quot;&gt;&lt;s&gt;&lt;b&gt;&lt;span style=&quot;color: #6f45ec;&quot;&gt;k8s를 물리장비에 올릴까? 가상장비에 올릴까?&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/s&gt;&lt;b&gt;&amp;darr;&lt;br /&gt;&lt;/b&gt;&lt;span style=&quot;color: #f41a18;&quot;&gt;&lt;b&gt;현재 운영하고자 하는 containerized application을 물리장비에 올릴까? 가상장비에 올릴까?&lt;/b&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;h2&gt;요구사항에 따른 machine 종류 선택&lt;/h2&gt;
&lt;table style=&quot;border-collapse: collapse; width: 100%; height: 161px;&quot; border=&quot;1&quot;&gt;
&lt;tbody&gt;
&lt;tr style=&quot;height: 19px;&quot;&gt;
&lt;td style=&quot;width: 27.9845%; height: 19px;&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;width: 36.2402%; height: 19px;&quot;&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;물리장비&lt;/p&gt;
&lt;/td&gt;
&lt;td style=&quot;width: 35.7752%; height: 19px;&quot;&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;가상장비&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;height: 126px;&quot;&gt;
&lt;td style=&quot;width: 27.9845%; height: 126px;&quot;&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;요구사항&lt;/p&gt;
&lt;/td&gt;
&lt;td style=&quot;width: 36.2402%; height: 126px;&quot;&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;- 게임, 10,000tps 이상의 트래픽 처리 등&lt;/p&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;- 가상장비를 운영할 환경이 되지 않을 경우&lt;/p&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;&amp;nbsp; &amp;nbsp;(소규모 회사에서의 on-promise 운영과 같은 경우)&lt;/p&gt;
&lt;/td&gt;
&lt;td style=&quot;width: 35.7752%; height: 126px;&quot;&gt;
&lt;p style=&quot;font-size: 0.94em;&quot;&gt;- 10,000tps 이하의 웹서비스&lt;br /&gt;- 이미 virtual machine 사용이 용이한 회사&lt;br /&gt;&amp;nbsp; &amp;nbsp;(vm환경이 갖추어진 회사)&lt;br /&gt;- k8s node의 확장이 필요할 경우&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;간단히 위와 같이 정리가능하다. 성능이 필요하거나 가상화환경을 구축할 여건이 되지 않는다면 물리장비를 써야할 것이고, 가상화환경이 구축이 되어 잘 운영되어 있고 성능에 큰 이슈가 없다면 가상장비에서 운영하는 편이 좋은건 당연하다.&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;
&lt;p style=&quot;text-align: justify;&quot;&gt;추가적으로 k8s의 document에도 나와 있지만 node설치시 physical에 할지 virtual에 할지에 대한 여부에 대한 이야기는 깊게 나와 있지 않다. 다만, 아래와 같이 cluster에 따라 선택한다고 적혀있다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/QLfe9/btquDBYeCWj/l0Df2rIFXcQiq92ttdfmk1/img.png' data-lightbox='lightbox' data-alt='kubernetes node 설명'&gt;&lt;img src='https://k.kakaocdn.net/dn/QLfe9/btquDBYeCWj/l0Df2rIFXcQiq92ttdfmk1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FQLfe9%2FbtquDBYeCWj%2Fl0Df2rIFXcQiq92ttdfmk1%2Fimg.png' data-filename=&quot;blob&quot;&gt;&lt;/span&gt;&lt;figcaption&gt;kubernetes node 설명&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;결론&lt;/h2&gt;
&lt;p&gt;k8s는 orchestration 도구. application의 요구사항에 맞는 machine을 취사선택하여 사용하자.&lt;/p&gt;</description>
<category>쿠버네티스</category>
<category>k8s</category>
<category>Machine</category>
<category>node</category>
<category>physical</category>
<category>virtual</category>
<category>쿠버네티스</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/206</guid>
<comments>https://blog.voidmainvoid.net/206#entry206comment</comments>
<pubDate>Thu, 18 Apr 2019 12:46:14 +0900</pubDate>
</item>
<item>
<title>[JavaScript]변수내용이 json인지 확인하는 method(check valid json)</title>
<link>https://blog.voidmainvoid.net/205</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bLpONW/btquz9IlIAg/bms1agdkmdmOoiitNrFm90/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bLpONW/btquz9IlIAg/bms1agdkmdmOoiitNrFm90/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbLpONW%2Fbtquz9IlIAg%2Fbms1agdkmdmOoiitNrFm90%2Fimg.png' data-filename=&quot;check valid json type.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;js에서 사용하고 있는 variable이 json인지 여부를 확인하고 싶을때가 있다. npm을 사용한 여러 library를 사용하는 방법도 있지만 아래와 같이 간단한 method를 활용하는 방법도 있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;pre id=&quot;code_1555398390596&quot; class=&quot;javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;function IsJsonString(str) {
  try {
    var json = JSON.parse(str);
    return (typeof json === 'object');
  } catch (e) {
    return false;
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;JSON.parse(str) 메서드 ECMAScript 2015의 standard method이다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/0WTRD/btquA14a5ax/BqVOefa2NAPMFlJSU1tr20/img.png' data-lightbox='lightbox' data-alt='mozilla사이트에 나와있는 JSON.parse의 브라우저 호환성'&gt;&lt;img src='https://k.kakaocdn.net/dn/0WTRD/btquA14a5ax/BqVOefa2NAPMFlJSU1tr20/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2F0WTRD%2FbtquA14a5ax%2FBqVOefa2NAPMFlJSU1tr20%2Fimg.png' &gt;&lt;/span&gt;&lt;figcaption&gt;mozilla사이트에 나와있는 JSON.parse의 브라우저 호환성&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JSON.parse(str)는 json의 문자열 구문을 분석하고 들어온 파라미터를 js값이나 객체로 생성한다. 이때 정상적인 json type이 아닌경우 exception을 반환하게 되는데, 이를 사용해서 json인지 여부를 판별 할 수있다.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;출처&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&lt;a href=&quot;https://stackoverflow.com/questions/3710204/how-to-check-if-a-string-is-a-valid-json-string-in-javascript-without-using-try&quot;&gt;https://stackoverflow.com/questions/3710204/how-to-check-if-a-string-is-a-valid-json-string-in-javascript-without-using-try&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-&amp;nbsp;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&lt;/a&gt;&lt;/p&gt;</description>
<category>JS &amp; JQuery</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/205</guid>
<comments>https://blog.voidmainvoid.net/205#entry205comment</comments>
<pubDate>Tue, 16 Apr 2019 16:09:34 +0900</pubDate>
</item>
<item>
<title>[ES5]여러개의 promise를 Synchronous하게 받는 promise 구현하기</title>
<link>https://blog.voidmainvoid.net/204</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/Opu7G/btqui2B7sCU/tBasBJvqBIuLLcJSBifmK1/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/Opu7G/btqui2B7sCU/tBasBJvqBIuLLcJSBifmK1/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FOpu7G%2Fbtqui2B7sCU%2FtBasBJvqBIuLLcJSBifmK1%2Fimg.png' data-filename=&quot;es5 promise.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;promise문법은 기본적으로 비동기로 구현되고 실행된다.&lt;/p&gt;
&lt;p&gt;여러개의 promise가 끝나는 것을 확인하여 synchronise하게 처리하고 싶다면 어떻게 해야할까?&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 1) promise를 중첩되게 구현한다. -&amp;gt;&lt;span style=&quot;color: #f41a18; font-family: GungSeo, serif;&quot;&gt;&lt;b&gt; Callback Hell&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp; 2) 여러 promise를 동시에 진행하고 완료됨을 확인하는 promise로 감싼다. -&amp;gt; 선택!&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;2번구현이 동작하는 방식은 아래와 같은 도식으로 표현할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bFkghU/btquugMQyXR/CrOlRu8S6PZXFjRM6YMDXk/img.png' data-lightbox='lightbox' data-alt='Multiple promise'&gt;&lt;img src='https://k.kakaocdn.net/dn/bFkghU/btquugMQyXR/CrOlRu8S6PZXFjRM6YMDXk/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbFkghU%2FbtquugMQyXR%2FCrOlRu8S6PZXFjRM6YMDXk%2Fimg.png' data-filename=&quot;blob&quot;&gt;&lt;/span&gt;&lt;figcaption&gt;Multiple promise&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;최종 구현 code는 아래와 같다.&lt;/p&gt;
&lt;pre id=&quot;code_1554885077022&quot; class=&quot;javascript prettyprint lang-javascript&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;var items = new Map;
var showProgressCircle = true;	// job을 가져오고 있을 때는 progress circle이 보이도록 
function getJobInformation(host, resolve) {
  $axios.get(host+'/api/jobs') 	// axios를 사용하여 여러개의 다른 host를 돌아가면서 job을 가져온다.
    .then((response) =&amp;gt; {
      items.set(host, response.data);
      resolve();
    })
    .catch((ex) =&amp;gt; {
      items.set(host, null);
      console.log('fetch failed', ex);
      resolve();
    })
}

let requests = HOSTS.map((item) =&amp;gt; { 	// map자료형에 여러 host ip들이 들어있다.
  return new Promise((resolve) =&amp;gt; {
    getJobInformation(item, resolve);
  });
});

Promise.all(requests).then(() =&amp;gt; {
  howProgressCircle = false;	// job을 모두 가져왔을때 progress cicrcle false
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;상기 코드에 있어 요구조건은 아래와 같다.&lt;/p&gt;
&lt;p&gt;# 여러개의 서버가 존재&lt;br /&gt;# 여러개 서버에서는 동일 api(/api/jobs)를 get방식으로 호출&lt;br /&gt;# 여러 서버에서 통합적으로 정보를 가져와서 map 자료형으로 넣고 싶음&lt;/p&gt;</description>
<category>Front-end</category>
<category>ecma2015</category>
<category>es5</category>
<category>Promise</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/204</guid>
<comments>https://blog.voidmainvoid.net/204#entry204comment</comments>
<pubDate>Wed, 10 Apr 2019 17:34:17 +0900</pubDate>
</item>
<item>
<title>특정 문자가 들어간 line만 뽑아내는 정규식</title>
<link>https://blog.voidmainvoid.net/203</link>
<description>&lt;p&gt;&lt;figure class='imageblock alignCenter'&gt;&lt;span data-url='https://k.kakaocdn.net/dn/bbMwhr/btqtY83WFjy/ouKOlRRH0NwEWn8IwX25pK/img.png' data-lightbox='lightbox' data-alt=''&gt;&lt;img src='https://k.kakaocdn.net/dn/bbMwhr/btqtY83WFjy/ouKOlRRH0NwEWn8IwX25pK/img.png' srcset='https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbbMwhr%2FbtqtY83WFjy%2FouKOlRRH0NwEWn8IwX25pK%2Fimg.png' data-filename=&quot;regex line.png&quot;&gt;&lt;/span&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;특정 문자가 들어간 들어간 line만 뽑아내려면 아래와 같이 사용하면 된다.&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-html xml&quot;&gt;&lt;code&gt;.*name.*\n&lt;/code&gt;&lt;/pre&gt;
&lt;hr contenteditable=&quot;false&quot; data-ke-type=&quot;hr&quot; data-ke-style=&quot;style1&quot; /&gt;
&lt;p&gt;&lt;b&gt;Example&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;아래 json에서 이름만 뽑아내고 싶을때 상기 regex를 사용하면됨.&lt;/p&gt;
&lt;pre id=&quot;code_1554082181115&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;{
  &quot;squadName&quot;: &quot;Super hero squad&quot;,
  &quot;homeTown&quot;: &quot;Metro City&quot;,
  &quot;formed&quot;: 2016,
  &quot;secretBase&quot;: &quot;Super tower&quot;,
  &quot;active&quot;: true,
  &quot;members&quot;: [
    {
      &quot;name&quot;: &quot;Molecule Man&quot;,
      &quot;age&quot;: 29,
      &quot;secretIdentity&quot;: &quot;Dan Jukes&quot;,
      &quot;powers&quot;: [
        &quot;Radiation resistance&quot;,
        &quot;Turning tiny&quot;,
        &quot;Radiation blast&quot;
      ]
    },
    {
      &quot;name&quot;: &quot;Madame Uppercut&quot;,
      &quot;age&quot;: 39,
      &quot;secretIdentity&quot;: &quot;Jane Wilson&quot;,
      &quot;powers&quot;: [
        &quot;Million tonne punch&quot;,
        &quot;Damage resistance&quot;,
        &quot;Superhuman reflexes&quot;
      ]
    },
    {
      &quot;name&quot;: &quot;Eternal Flame&quot;,
      &quot;age&quot;: 1000000,
      &quot;secretIdentity&quot;: &quot;Unknown&quot;,
      &quot;powers&quot;: [
        &quot;Immortality&quot;,
        &quot;Heat Immunity&quot;,
        &quot;Inferno&quot;,
        &quot;Teleportation&quot;,
        &quot;Interdimensional travel&quot;
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;b&gt;Result&lt;/b&gt;&lt;/p&gt;
&lt;pre id=&quot;code_1554082231188&quot; class=&quot;html xml&quot; data-ke-type=&quot;codeblock&quot;&gt;&lt;code&gt;      &quot;name&quot;: &quot;Molecule Man&quot;,
      &quot;name&quot;: &quot;Madame Uppercut&quot;,
      &quot;name&quot;: &quot;Eternal Flame&quot;,&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</description>
<category>개발이야기</category>
<category>regex</category>
<category>정규식</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/203</guid>
<comments>https://blog.voidmainvoid.net/203#entry203comment</comments>
<pubDate>Mon, 01 Apr 2019 10:30:44 +0900</pubDate>
</item>
<item>
<title>(번역)Netflix에서 데이터를 통해 유연하고, 안전한 클라우드 인프라로 활용하는 방법</title>
<link>https://blog.voidmainvoid.net/202</link>
<description>&lt;p&gt;원 제목 :&amp;nbsp;How Data Inspires Building a Scalable, Resilient and Secure Cloud Infrastructure At Netflix&lt;/p&gt;&lt;p&gt;원 글 :&amp;nbsp;&lt;a href=&quot;https://medium.com/netflix-techblog/how-data-inspires-building-a-scalable-resilient-and-secure-cloud-infrastructure-at-netflix-c14ea9f2d00c&quot;&gt;https://medium.com/netflix-techblog/how-data-inspires-building-a-scalable-resilient-and-secure-cloud-infrastructure-at-netflix-c14ea9f2d00c&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:700px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F99F8FD365C94B9DE15C15E&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99F8FD365C94B9DE15&quot; filemime=&quot;image/jpeg&quot; filename=&quot;넷플릭스 빅데이터.png&quot; height=&quot;426&quot; width=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Netflix의 개발자&amp;nbsp;문화는 &lt;u&gt;Netflix의 모든 사람이 핵심 책임을 맡고 자유롭게 임무를 완수 할 수 있는 자유와 책임을 전제&lt;/u&gt;로 한다. 이러한 자유를 통해&amp;nbsp;팀과 개인은 혁신을 주도할 수 있으며&amp;nbsp;결과물에 대해 품질과 견고함(robustness)에 책임을 가지고 있다. Central engineering&amp;nbsp;팀은 인프라의 보안, 확장(scalable) 및 강화(복원력)와 관련된 솔루션을 각 팀에 제공하여 걱정을 한층 덜어준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Netflix 제품 기능의 대부분은 많은 마이크로 서비스 중 하나에 부분적으로 또는 완전히 종속되어 있다. 이러한 모든 마이크로 서비스는 현재 AWS 클라우드 인프라에서 운영된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Netflix 개발자(즉, 마이크로 서비스의 책임자)는 서비스의 안정성, 안전성, 효율성 및 성능을 보장하는 것을 포함하여 운영 및 혁신에 대한 책임이 있다. 마이크로 서비스를 운영하기 위해서 개발자는&amp;nbsp;원격 측정 및 alert system, 용량 프로비저닝 프로세스, secure and reliability best practice에&amp;nbsp;대한 깊은 이해와 클라우드 인프라에 대한 방대한 양의 비공식 지식에 대해 이해하고 있어야한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Netflix의 engineering and science팀은 개발자들에게 가해지는 부담을 줄이기 위해&amp;nbsp;솔루션을 개발하고 있다. 그리고&amp;nbsp;클라우드 인프라의 여러 구성 요소를 안정적이고 안전하고 효율적으로 운영하는 것과 관련된 의사 결정을 알리고 자동화하기 위해 플랫폼 및 마이크로 서비스에서 생성되는 방대한 양의 데이터를 활용한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;◆ ◆ ◆&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;보안 영역&lt;/span&gt;&lt;/b&gt;에서,&amp;nbsp;우리의 데이터 팀은 machine learning과 statistical model을 사용하여 의심스럽거나 악의적인 활동을 감지하는데 거의 모든 노력을 집중한다.&amp;nbsp;이는 잠재적으로 위험에 처한 직원 계정에 초점을 맞추었지만 에이전트(인간 또는 기계)를 고려하기 보다는&amp;nbsp;탐지 프레임 워크 자체를&amp;nbsp;구축하는데 투자했다. 우리의 데이터 팀은 또한 마이크로 서비스 또는 내부 직원이 직면 한 위협, 위험을 줄이기 위해&amp;nbsp;보안 및 개인 정보 보호에 대한 투명성을 높이는 데 노력한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;신뢰 영역&lt;/span&gt;&lt;/b&gt;에서, 우리의 데이터 팀은 두 가지 접근 방식에 초점을 맞춘다. 첫 번째는 예방이다. 데이터 팀은 실험(ex. Canary배포), 탐지 및 개선 KPI를 통해 환경 및 가능한 많은 application들을&amp;nbsp;가능한 한 안전하게 변경하는 것을 도와준다 . 두 번째 접근법은 진단 측면이다. 데이터 팀은 위험에 대한&amp;nbsp;영향을 측정하고 발생 상황에 따라 패턴을 확인하며,&amp;nbsp;마이크로 서비스 수준 가용성에 대해 투명하게 조사한다.&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;효율 영역&lt;/span&gt;&lt;/b&gt;에서, 우리의 데이터 팀은 투명성과 최적화에 초점을 맞춘다. Netflix의 Freedom and Responsibility 문화에서 효율성에 대한 최선의 접근 방법은 모든 마이크로 서비스 소유자가 자신의 효율성을 향상 시키거나 유지할 수 있도록 올바른 정보를 제공하는 것이라고 믿고 있다. 또한 인프라가 복잡한 멀티 테넌트 환경이기 때문에 플랫폼 수준에서 데이터 기반 효율을 높일&amp;nbsp;기회가 있다. 마지막으로, 인프라 자체의 프로비저닝 또한 점점 더 복잡해지고 있다.&amp;nbsp;따라서 우리의 데이터 팀은 클라우드 용량 관리의 진단 및 자동화를 위한 도구 개발에 기여한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;성능 영역&lt;/span&gt;&lt;/b&gt;에서, 우리의 데이터 팀은 현재 넷플릭스 지원 디바이스들(mobile, tv etc)에 대한 경험의 질에 초점을 맞춘다. 보통은 디바이스 자체가 전반적인 성능에 중요한 역할을 한다.&amp;nbsp;그러나 네트워크 및 클라우드 인프라의 응답성은 무시할 수없는 영향을 미친다. 다양한 디바이스들에서 Netflix application들의 전반적인 성능에 대한 infrastructure의 영향을 이해하고 영향을&amp;nbsp;최소화하기 위해&amp;nbsp;향상된 원격 측정 및 도구를 지속적으로 구축한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;인재 영역&lt;/span&gt;&lt;/b&gt;에서, 우리의 데이터 팀은 사용 사례 관련, 중앙 팀 인원 계획을 관리하는 데 도움을 준다.&amp;nbsp;원가를 절감, 관행&amp;nbsp;고용 개선하기 위해 직원, 계약자, 파트너 및 인재 데이터에 대한 기록의 통합 시스템, 그리고 다른 사람들의 분석에 기여한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Infrastructure에서의 도전 과제 및 기회&lt;/h2&gt;&lt;h3&gt;보안 이벤트 비정상 탐지 플랫폼&lt;/h3&gt;&lt;p&gt;# 수백 가지 소스의 스키마 계약을 기반으로 반 구조화 된 데이터를 처리하고 다운 스트림 분석을위한 구조화 된 데이터의 이벤트 스트림으로 변환하는 복잡한 이벤트 처리 시스템을 어떻게 개발할 수 있을까?&lt;/p&gt;&lt;p&gt;# 개발 속도를 높이기 위해 템플릿 기반 탐지 모듈 (규칙 및 ML 기반) 및 데이터 스트림을 어떻게 개발할 수 있을까?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:700px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F9969204B5C94C2DA33D90A&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9969204B5C94C2DA33&quot; filemime=&quot;image/jpeg&quot; filename=&quot;넷플릭스 빅데이터 support component.png&quot; height=&quot;481&quot; width=&quot;700&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;보안 이벤트 플랫폼&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;몇 가지 일반적인 아이디어를 얻으려면 &lt;a href=&quot;https://streamalert.io/en/stable/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;StreamAlert&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/siddhi-io/siddhi&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Siddhi&lt;/a&gt;와 같은 오픈 소스 프로젝트를 참조하면 좋다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h4&gt;자산 인벤토리&lt;/h4&gt;&lt;p&gt;# 가용성, 탄력성 및 차량 관리를 돕기 위해 AMI/소프트웨어 스택을 비롯한 응용 프로그램, 클러스터, 지역 및 기타 메타 데이터 간의 관계를 나타내는 차원 데이터 모델을 어떻게 개발할 수 있을까?&lt;/p&gt;&lt;p&gt;# 애플리케이션 취약성 및 위험 점수로 메타 데이터를 풍부하게하는 학습 모델을 개발할 수 있을까?&lt;/p&gt;&lt;h4&gt;신뢰(Reliability)&lt;/h4&gt;&lt;p&gt;# 프로덕션 환경으로 배포 할 때 코드 변경이 안전하다는 것을 어떻게 보장 할 수 있을까?&lt;/p&gt;&lt;p&gt;# 트래픽 스파이크 발생시 가용성을 저하시키지 않으면서 어떻게 auto-scaling 정책을보다 효율적으로 조정할 수 있을까?&lt;/p&gt;&lt;h4&gt;용량 및 효율성&lt;/h4&gt;&lt;p&gt;# 어떤 리소스(클러스터, 테이블, ...)가 사용되지 않거나 활용도가 낮을까?&lt;/p&gt;&lt;p&gt;# 모든 사용자에게 AB 테스트에서 적합한 셀을 배포하는 데 드는 비용은 얼마일까?&lt;/p&gt;&lt;h4&gt;사용자 분석&lt;/h4&gt;&lt;p&gt;# 우리는 모집과 관련된 AB 실험을 지원하고 탄탄한 재능을 유치 할뿐만 아니라 후보 경험을 향상시킬 수 있을까?&lt;/p&gt;&lt;p&gt;# 우리는 포용 및 다양성 이니셔티브의 영향을 측정 할 수 있을까?&lt;/p&gt;&lt;h4&gt;사람 및 보안&lt;/h4&gt;&lt;p&gt;# 어떻게 안전하고 제한된 People Data Vault를 구축하여 통합 된 참조 시스템을 제공하고 앱이 메타 데이터를 추가 할 수있게 할 수 있을까?&lt;/p&gt;&lt;p&gt;# 액세스 권한을 자동으로 프로비저닝하거나 프로 비전 해제 할 수 있을까?&lt;/p&gt;&lt;h4&gt;데이터 계보(Data Lineage)&lt;/h4&gt;&lt;p&gt;# Netflix 데이터 환경에 저장된 다양한 데이터 아티팩트 간의 관계를 발전시키기 위해 일반화 된 계보 시스템을 개발할 수 있을까?&lt;/p&gt;&lt;p&gt;# 이 계보 솔루션을 활용하여 SLA 누락 예측 및 데이터 수명주기 관리 관련 질문 (작업 비용, 테이블 비용 및 보존)을 해결할 수 있을까?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이것으로 Infrastructure Data Engineering, Science &amp;amp; Analytics의 환상적인 세상을 잠깐 둘러 보았다. Netflix 개발자들은&amp;nbsp;세계적 수준의 정보 기반 인프라를 확장하는 것을 돕는 임무를 수행하고 있으며 이제 막 시작했다. 생각을 교환하는 데 관심이 있다면 언제든지 컨택바란다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Authors : &lt;a href=&quot;https://www.linkedin.com/in/sebastiendelarquier/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Sebastien de Larquier&lt;/a&gt; (S &amp;amp; A), &lt;a href=&quot;https://www.linkedin.com/in/jitenderaswani/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Jitender Aswani&lt;/a&gt; (DEI)&lt;/p&gt;&lt;p&gt;Contributors : &lt;a href=&quot;https://www.linkedin.com/in/sui-huang-86b97a2b/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Sui Huang&lt;/a&gt; (S &amp;amp; A)는 People initiatives를 재창조하는 데 협력하고 있습니다.&lt;/p&gt;</description>
<category>빅데이터</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/202</guid>
<comments>https://blog.voidmainvoid.net/202#entry202comment</comments>
<pubDate>Fri, 22 Mar 2019 20:19:12 +0900</pubDate>
</item>
<item>
<title>[linux] netstat 명령어 설명 및 예제</title>
<link>https://blog.voidmainvoid.net/201</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:249px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile1.uf.tistory.com%2Fimage%2F99C58E3E5C81FD8B16E216&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99C58E3E5C81FD8B16&quot; filemime=&quot;image/jpeg&quot; filename=&quot;linux netstat 설명.png&quot; height=&quot;137&quot; width=&quot;249&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;netstat 소개&lt;/h2&gt;&lt;p&gt;netstat(network statistics)는 전송 제어 프로토콜, 라우팅 테이블, 수많은 네트워크 인터페이스(네트워크 인터페이스 컨트롤러 또는 소프트웨어 정의 네트워크 인터페이스), 네트워크 프로토콜 통계를 위한 네트워크 연결을 보여주는 명령 줄 도구이다. OS X, 리눅스, 솔라리스, BSD를 포함한 유닉스 계열 운영 체제와 윈도우 XP, 윈도우 비스타, 윈도우 7, 윈도우 8, 윈도우 10을 포함한 윈도우 NT 기반 운영 체제에서 이용이 가능하다. 네트워크의 문제를 찾아내고 성능 측정으로서 네트워크 상의 트래픽의 양을 결정하기 위해 사용된다.&lt;/p&gt;&lt;p&gt;리눅스에서 net-tools의 일부인 netstat은 시대에 뒤쳐진 것으로 간주되며, iproute2의 일부인 ss를 대신 사용하여야 한다.&lt;/p&gt;&lt;p&gt;(위키피디아 발쵀)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;netstat 옵션들&lt;/h2&gt;&lt;p&gt;-a : 현재다른PC와 연결(Established)되어 있거나 대기(Listening)중인 모든 포트 번호를 확인&amp;nbsp;&lt;/p&gt;&lt;p&gt;-r : 라우팅 테이블 확인 및 커넥션되어 있는 포트번호를 확인&amp;nbsp;&lt;/p&gt;&lt;p&gt;-n : 현재 다른PC와 연결되어 있는 포트번호를 확인&lt;/p&gt;&lt;p&gt;-e : 랜카드에서 송수한 패킷의 용량 및 종류를 확인&amp;nbsp;&lt;/p&gt;&lt;p&gt;-s : IP, ICMP, UDP프로토콜별의 상태 확인&lt;/p&gt;&lt;p&gt;-t : tcp protocol&amp;nbsp;&lt;/p&gt;&lt;p&gt;-u : udp protocol&amp;nbsp;&lt;/p&gt;&lt;p&gt;-p : 프로토콜 사용 Process ID 노출&lt;/p&gt;&lt;p&gt;-c : 1초 단위로 보여줌&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;netstat 예제 및 설명&lt;/h2&gt;&lt;pre class=&quot;prettyprint&quot;&gt;$ netstat -antplF
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      -   
tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      -      
tcp        0      0 127.0.0.1:9050          0.0.0.0:*               LISTEN      -     
tcp        0      0 127.0.1.1:53            0.0.0.0:*               LISTEN      -   
tcp        0      0 192.168.0.100:44952     144.76.244.204:443      ESTABLISHED 2705/chromium-brows
tcp        0      0 192.168.0.100:49334     66.196.66.212:443       ESTABLISHED 6796/firefox  
tcp        0      0 192.168.0.100:40249     69.171.235.19:443       ESTABLISHED 6796/firefox   &lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp; - Proto : 프로토콜 종류. TCP / UDP / RAW&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Recv-Q : 해당 process가 현재 받는 바이트 표기&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Send-Q : 해당 process가 현재 보내는 바이트 표기&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Local Address : 출발지 주소 및 포트. 자신의 주소 및 포트&lt;/div&gt;&lt;div&gt;&amp;nbsp; - Foreign Address : 목적지 주소 및 포트&lt;/div&gt;&lt;div&gt;&amp;nbsp; - State : 포트의 상태 표기.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; CLOSED&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; CLOSED_WAIT&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; CLOSING&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; ESTABLISHED : 연결 완료&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; FIN_WAIT1&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; FIN_WAIT2&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; LAST_ACK&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; LISTEN :&amp;nbsp; 대기 포트. 포트 open&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; SYN_RECV&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; SYN_SENT&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; TIME_WAIT&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; =&amp;gt; UNKNOWN&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;netstat Tip&lt;/h2&gt;&lt;div&gt;Local Address column은 현재 열려있거나 혹은 리스닝하고있는 ip, port를 나타낸다. 만약 해당 ip가 &lt;b&gt;0.0.0.0이라면 all interface를 받는 다는 뜻&lt;/b&gt;이며 모든 ip에 대해서 열려있다는 뜻이다. 반대로&lt;b&gt; 127.0.0.1로 되어있다면 loopback이라는 뜻으로 자기자신만 호출가능한 상태&lt;/b&gt;를 뜻한다.&lt;/div&gt;&lt;pre class=&quot;prettyprint&quot;&gt;$ netstat -antplF
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      -  
tcp        0      0 0.0.0.0:9050          0.0.0.0:*               LISTEN      -        &lt;/pre&gt;&lt;div style=&quot;&quot;&gt;(&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;any ip could connect to &lt;b&gt;9050&lt;/b&gt; port &lt;/span&gt;| &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;only local ip could connect &lt;b&gt;631&lt;/b&gt; port&lt;/span&gt;)&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;b&gt;# 127.0.0.1, 127.0.1.1, ::1 (for IPv6)&amp;nbsp;&lt;/b&gt;→&amp;nbsp;localhost, the loop back interface - those services can only be contacted from your local machine&lt;div&gt;&lt;b&gt;# 0.0.0.0:xxx, :::xxx &lt;/b&gt;→ any local address:port-number - active connections: the IP-address and the port used by that special connection&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>servlet container</category>
<category>linux</category>
<category>netstat</category>
<category>Network</category>
<category>설명</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/201</guid>
<comments>https://blog.voidmainvoid.net/201#entry201comment</comments>
<pubDate>Fri, 08 Mar 2019 14:40:47 +0900</pubDate>
</item>
<item>
<title>젠킨스에서 plugin 설치때 jenkins Caused by: javax.net.ssl.SSLException: Received fatal alert: protocol_version 에러가 날 경우</title>
<link>https://blog.voidmainvoid.net/200</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:200px;width: 200px; height: 233px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F99FA96485C80A31F0DBBFA&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99FA96485C80A31F0D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;butler-devil.png&quot; height=&quot;233&quot; original=&quot;yes&quot; style=&quot;width: 200px; height: 233px;&quot; width=&quot;200&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;젠킨스에서 plugin을 사용시 업데이트할때 아래와 같은 오류가 날 경우가 있다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;WARNING: org.jenkinsci.plugins.ghprb.GhprbTrigger.run() failed for hudson.model.FreeStyleProject@4853e929[android-phoenix-qa-emulator]
java.lang.Error: org.kohsuke.github.HttpException: Server returned HTTP response code: -1, message: 'null' for URL: https://api.github.com/repos/nytm/android-phoenix/pulls?state=open
        at org.kohsuke.github.Requester$PagingIterator.fetch(Requester.java:516)
        at org.kohsuke.github.Requester$PagingIterator.hasNext(Requester.java:481)
        at org.kohsuke.github.PagedIterator.fetch(PagedIterator.java:44)
        at org.kohsuke.github.PagedIterator.hasNext(PagedIterator.java:32)
        at org.kohsuke.github.PagedIterable.asList(PagedIterable.java:41)
        at org.kohsuke.github.GHRepository.getPullRequests(GHRepository.java:697)
        at org.jenkinsci.plugins.ghprb.GhprbRepository.check(GhprbRepository.java:138)
        at org.jenkinsci.plugins.ghprb.GhprbTrigger.run(GhprbTrigger.java:294)
        at hudson.triggers.Trigger.checkTriggers(Trigger.java:278)
        at hudson.triggers.Trigger$Cron.doRun(Trigger.java:226)
        at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:50)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.kohsuke.github.HttpException: Server returned HTTP response code: -1, message: 'null' for URL: https://api.github.com/repos/nytm/android-phoenix/pulls?state=open
        at org.kohsuke.github.Requester.parse(Requester.java:633)
        at org.kohsuke.github.Requester.parse(Requester.java:594)
        at org.kohsuke.github.Requester.access$200(Requester.java:73)
        at org.kohsuke.github.Requester$PagingIterator.fetch(Requester.java:505)
        ... 17 more
Caused by: javax.net.ssl.SSLException: Received fatal alert: protocol_version
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:154)
        at sun.security.ssl.SSLSocketImpl.recvAlert(SSLSocketImpl.java:2023)
        at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1125)
        at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)
        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)
        at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)
        at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1512)
        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1440)
        at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
        at sun.net.www.protocol.https.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:338)
        at org.kohsuke.github.Requester.parse(Requester.java:602)
        ... 20 more&lt;/pre&gt;
&lt;p&gt;상기 에러는 TLS version issue 때문이라고 한다. 이에 따라 아래와 같은 셋팅을 수행하면 정상작동한다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;$ vi /etc/sysconfig/jenkins //Jenkins 설정 vi로 편집&lt;/pre&gt;
&lt;pre class=&quot;prettyprint lang-c&quot;&gt;JENKINS_JAVA_OPTIONS=&quot;-Dhttps.protocols=TLSv1.2&quot; //추가&lt;/pre&gt;
&lt;p&gt;상기와 같은 설정 뒤에 jenkins restart를 수행하면 정상적으로 플러그인이 작동한다.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;레퍼런스 :&amp;nbsp;&lt;a href=&quot;https://github.com/jenkinsci/ghprb-plugin/issues/634&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/jenkinsci/ghprb-plugin/issues/634&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>CI &amp; CD</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/200</guid>
<comments>https://blog.voidmainvoid.net/200#entry200comment</comments>
<pubDate>Thu, 07 Mar 2019 13:56:06 +0900</pubDate>
</item>
<item>
<title>사내 해커톤 참가 후기 - 챗봇 application 개발 경험기</title>
<link>https://blog.voidmainvoid.net/199</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:313px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F9916C34E5C7E504418A267&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9916C34E5C7E504418&quot; filemime=&quot;image/jpeg&quot; filename=&quot;해커톤 포스터.png&quot; height=&quot;187&quot; width=&quot;313&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;작년 11월경 12월까지 일정으로 사내 해커톤이 열렸다.&lt;/p&gt;&lt;p&gt;우리 회사에서는 국내외에서 활발히 이루어지고 있는 개발문화이자 축제인 해커톤을 2016년 부터 열었으며 3회째를 맞이했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1등 &lt;b&gt;상금 500만원&lt;/b&gt;, 본선진출자 airpod증정, 리얼포스 키보드 증정 등 다양하고 멋진 상품이 기다리고 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;나(개발자)와 동기형(비개발자)&lt;/b&gt;은 해커톤에 참가하기로 마음을 먹었고 ideation을 시작했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Ideation&lt;/h2&gt;&lt;div&gt;시작은 순탄하지 않았다. 이번 대회는 독특하게도 일반적인 해커톤처럼 12시간/24시간의 제한을 두고 하는 것이 아니라 일반 공모전 처럼 예선/본선 이루어져 있었다. 이렇기에 회사일과 개발을 병행해야 하는 일정 상 최대한 기존에 알고있던 기술과 빠르게 개발할 수 있는 기술 위주로 진행하기로 결정하였다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;지난 18년 중순에 참여한 &lt;a href=&quot;https://voidmainvoid.tistory.com/189&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;홍콩해커톤(포스팅 바로가기&lt;/a&gt;&lt;a href=&quot;https://voidmainvoid.tistory.com/189&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;)&lt;/a&gt;에서 AWS LEX를 활용한 챗봇을 개발한 경험이 있던 나로서는 챗봇을 통한 제품을 만들면 좋겠다고 생각했다.&lt;/div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:280px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F9934C34A5C7E51DE24FF03&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9934C34A5C7E51DE24&quot; filemime=&quot;image/jpeg&quot; filename=&quot;챗봇 시장 그래프.png&quot; height=&quot;254&quot; width=&quot;280&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;챗봇은 여러 분야에서 다양하게 고객들에게 제공되고있다. 이렇게 다양한 시장 가운데&amp;nbsp;어떻게 하면 더욱 사내 구성원들에게 설득력있게 발표를 할 것인지에 초점을 맞추고 고민하였다.(사내 구성원이 투표를 통해 시상) 오랜 고민&amp;nbsp;끝에 사내에서 사용하는 사내 채팅플랫폼에 챗봇을 붙여보기로 결정하였다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:343px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F99DD284B5C7E54B123849B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99DD284B5C7E54B123&quot; filemime=&quot;image/jpeg&quot; filename=&quot;업무용 매신저들.png&quot; height=&quot;106&quot; width=&quot;343&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;잔디, Slack 등 여러 사내 채팅플랫폼이 있지만 모두 사람간의 상호작용을 위한 것이지 각자 개개인의 일정관리와 같은 것들은 사내 웹을 이용해야만 했고, 이것은 업무에 context switching으로 작용하여 업무의 효율을 낮추고 있다고 생각했다. 그렇기에&amp;nbsp;seamless하고 연속성있는 업무를 위해 채팅플랫폼에 챗봇을 붙여 일정관리, 개발관리, 연락처확인 등 여러 작업들을 채팅플랫폼 안에서 수행하고자 하는 방안을 생각했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Development&lt;/h2&gt;&lt;div&gt;해커톤 혹은 공모전의 특성상 개발에 시간을 많이 잡아먹을 수록 효율이 떨어진다. &lt;b&gt;간단하고 설득력있는 Business model과 완성도있는&amp;nbsp;제품 결과물&lt;/b&gt;만이 우리에게 수상의 영광을 안겨줄 것이라고 생각했다. 그렇기에 아래와 같은 기술들을 사용하여 개발을 진행하였다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;# Android&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;# Amazon Web Service&amp;nbsp;LEX&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;# EC2&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;개발도중 가장 첫번째로 나온 허들은 챗봇의 사용성이였다.&lt;b&gt; AWS LEX는 오직 영어만 지원했고 한글은 지원하지 않았다. &lt;/b&gt;이에 따라 한글기반의 챗봇플랫폼이 필요했는데 여러 수소문 끝에 LG에서 만든 danbee.Ai 챗봇 플랫폼을 사용하기로 결정하였다.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:330px;width: 330px; height: 126px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile29.uf.tistory.com%2Fimage%2F99685F335C7E5E832F0459&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99685F335C7E5E832F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;danbee ai.jpg&quot; height=&quot;126&quot; original=&quot;yes&quot; style=&quot;width: 330px; height: 126px;&quot; width=&quot;330&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;danbee.Ai는 1달에 10,000번의 대화가 무료로 가능했으며 강력한 한글 NLP(자연어 처리)와 손쉬운 대화흐름(chatflow)를 drag&amp;amp;drop으로 만들 수 있었기에 빠른 prototype개발에 적합했다.&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;# Android&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;# &lt;strike&gt;Amazon Web Service&amp;nbsp;LEX &lt;/strike&gt;&lt;b&gt;&amp;nbsp;→ danbee.Ai&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 2em;&quot;&gt;# EC2&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;EC2는 챗봇과 연동하는 Jenkins를 올리기 위해 발급받아서 사용하였다. danbee.Ai는 SaaS형태의 챗봇플랫폼이므로 따로 서버가 필요하지는 않았다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 278px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F99929D4E5C7E55871B08EF&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99929D4E5C7E55871B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;해커톤 개발 사진.png&quot; height=&quot;278&quot; original=&quot;yes&quot; style=&quot;width: 400px; height: 278px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1 개발자로 구성된 2인조팀이라 모든 개발은 나의 의사결정 기반으로 이루어 졌다. 하루 10시부터 19시까지 업무를 마치고나면 개발할 수 있는 시간은 저녁 2~3시간 밖에 없었다. 다소 쉽지 않았지만 개발해야 할 기능들에 대해 명확히 정의하고 UI/UX는 기존에 여러 application들을 기반으로 benchmarking하여 최대한 결과물을 빠르게 뽑아내는데 집중했다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 462px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F99357D485C7E56DB30AEEF&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99357D485C7E56DB30&quot; filemime=&quot;image/jpeg&quot; filename=&quot;아키텍쳐.png&quot; height=&quot;462&quot; original=&quot;yes&quot; style=&quot;width: 600px; height: 462px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;최종적으로 개발된 아키텍쳐는 상기와 같다. 중앙에 있는 챗봇(P.Bot이라 명명)은 danbee.Ai와 함께 통신을 하여 사용자의 입력을 NLP를 통해 의도추론을 하게되고, 의도추론으로 어떤 의도였는지 확인&amp;nbsp;되면 대화흐름(chatflow)를 타게된다.&amp;nbsp;최종적으로 P.Bot은 사용자에게 적절한 결과물을 주게되는 형태다.&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 375px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F995EF43F5C7E5F9533921B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/995EF43F5C7E5F9533&quot; filemime=&quot;image/jpeg&quot; filename=&quot;사용자의도.png&quot; height=&quot;375&quot; original=&quot;yes&quot; style=&quot;width: 600px; height: 375px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;danbee.Ai에서는 chatbot을 쉽게 만들 수 있도록 단계적으로&amp;nbsp;도와주는데 그 중에서도 상기와 같이 &lt;b&gt;사용자 등록 예문을 통한 의도추론을 정의(definition)하는 것은 아주 효과적&lt;/b&gt;이였다. 사용자가 '일정예약' 이라는 의도를 가지고 적게될 많은 예문들을 미리 적을 수 있게 되어있다. 상기와 같은 방식으로 등록을 하게되면 NLP를 통해 확률적으로 '일정예약'/'사용자검색'/'젠킨스동작' 과 같은 여러 의도 중 하나가 선택되게 되고 아래와 같은&amp;nbsp;chatflow를 타게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 158px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile24.uf.tistory.com%2Fimage%2F996F5E335C7E60670EAD6B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/996F5E335C7E60670E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;챗플로우.png&quot; height=&quot;158&quot; original=&quot;yes&quot; style=&quot;width: 600px; height: 158px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;상기와 같은 drag&amp;amp;drop가능한 node들을 통해 각종 slot이 채워지게 되고, 결과물은&amp;nbsp;사용자에게 return하게된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;width: 600px; height: 490px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F9928A94D5C7E611C0B0ECD&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9928A94D5C7E611C0B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;단비챗봇 대시보드.jpg&quot; height=&quot;490&quot; original=&quot;yes&quot; style=&quot;width: 600px; height: 490px;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;chatbot을 개발하는 모든 과정은 우측의 chatflow simulation창을 통해 debugging하면서 고쳐가며 설정&amp;nbsp;가능하다. 아주 편리하고 단계적으로 설정가능하도록 되어 있게 때문에 개발자뿐만 아니라 기획자, 디자이너 등 업종에 관계없이 누구든지 쉽게 사용가능하다.&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;UI/UX&lt;/h2&gt;&lt;div&gt;이런 대회를 하게 되면 가장 신경쓰이는 것이 UI/UX라고 해도 과언이 아니다.&lt;b&gt; 결국 청중, 심사위원들에게 보여지는 것은 우리가 지난 24시간, 48시간 동안 잠 못자고 개발하던 그 과정이 아니라 바로 결과물&lt;/b&gt;이기 때문이다. 또한 디자이너가 없는 팀이라 더욱 신경이 쓰이고 어깨가 무거웠다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;안드로이드개발을 시작한지 7년이 다 되어 가지만, 채팅 application을 처음 개발하기 때문에 사전조사가 필요했다. Line, Slack, 잔디 등 많은 application이 배치한 대화형 User Interface를 참고하여 기본 틀을 만들었다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:431px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F998B4A455C80706B32D8D7&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/998B4A455C80706B32&quot; filemime=&quot;image/jpeg&quot; filename=&quot;챗봇리스트 스크린샷.png&quot; height=&quot;336&quot; style=&quot;&quot; width=&quot;431&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;가장 최근글이 아래에 내려오게 하고 대화가 많아질 수록 상단 scroll로 올라가는 전형적인 chat application UI를 적용하였다. 그런데, 이번에 발표하고자 하는 제품은 일반적인 채팅형태의 챗봇이 아니라 업무용 채팅플랫폼이며 이에 챗봇이 업무를 도와주는, 쉽게 말하면 비서역할을 하는 것이다. 그러므로 &lt;b&gt;더욱 Rich한 정보를 사용자에게 제공하기 위해서는 상기와 같은 제한된 채팅UI가 아닌 더욱 확장된 형태의 UI가 필요&lt;/b&gt;했다. 이때 IBM의 해커톤 수상작의 UX가 기억에&amp;nbsp;떠올랐다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;IBM은 Call for Code라고 하여 IT를 통해 여러 자연재해을 극복할 수 있는 방안을 주제로한 해커톤을 열었는데, 그 중 1등 수상작은 기술면에서나 UX면에서나 모두 뛰어났다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Gt3OTDAq2DA?start=35&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1등 수상작은 clusterDuck이라는 IoT(사물인터넷) device를 사용하여 홍수가 발생한 지역의 통신망을 ad-hoc&amp;nbsp;network를 통해 연결, 각 기점을 중심으로 통신망을 펼쳐, 재해 중에&amp;nbsp;필요한 보급, 약품, 대피소 등을 wifi를 통해 전달하는 기술이다.&lt;/p&gt;&lt;p&gt;수상작 소개 기사(wired) :&amp;nbsp;&lt;a href=&quot;https://www.wired.com/story/ibm-call-to-code-winner-clusterducks/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://www.wired.com/story/ibm-call-to-code-winner-clusterducks/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서 눈여겨 본것은 이 작품의 web Dashboard page였다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 284px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F99E1FB495C7E5B862BA135&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99E1FB495C7E5B862B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;대시보드2.png&quot; height=&quot;284&quot; original=&quot;yes&quot; style=&quot;width: 500px; height: 284px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;약품, 대피소 등이 표시된 대시보드&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 287px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F99F69D495C7E5B87049D02&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99F69D495C7E5B8704&quot; filemime=&quot;image/jpeg&quot; filename=&quot;대시보드1.png&quot; height=&quot;287&quot; original=&quot;yes&quot; style=&quot;width: 500px; height: 287px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;지도가 표시된 대시보드&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;좌측에는 챗봇을 통해 사용자가 원하는 내용을 작성하면 우측에 지도 및 각종 정보가 나오도록 하는 방식이였다. 위와 같은 UI는 사용자에게 어렵지 않게&amp;nbsp;채팅application을 사용을 유도하면서도&lt;b&gt; 각종 정보를 우측에 배치하여 마치 web browsing을 하듯이 &lt;/b&gt;쉽게 정보를 받아 들일 수 있기에 훌륭한 User Experience 경험을 제공해줄 수 있을 것이라 생각했다. 이에 따라 위 UI를 이번 작품에 벤치마킹하여 개발했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:578px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile29.uf.tistory.com%2Fimage%2F994983475C7E5CF20C9B70&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/994983475C7E5CF20C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;챗봇 기본화면.png&quot; height=&quot;430&quot; width=&quot;578&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;P.Bot의 메인화면은 좌측과 우측으로 나뉘어져 있고 좌측에는 사용자와 BOT이 채팅을 할 수 있도록 하였고, 우측에는 각종정보 및 navigation을 배치하였다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:575px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99D3F6355C7E5E442AD5F9&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D3F6355C7E5E442A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;채팅 연락처.jpg&quot; height=&quot;427&quot; width=&quot;575&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;연락처 조회 화면&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:577px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99289B355C7E5E4404B9FE&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99289B355C7E5E4404&quot; filemime=&quot;image/jpeg&quot; filename=&quot;채팅 젠킨스.png&quot; height=&quot;435&quot; width=&quot;577&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;젠킨스 build 확인 화면&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Result&lt;/h2&gt;&lt;p&gt;예선까지 작품을 모두 개발 완료했고, 예선발표까지 완벽하게 끝냈지만, 안타깝게도 본선에는 진출하지 못했다. 작품의 완성도는 뛰어났지만 적절한 Business model을 설명하지 못하고 활용가능성에 대해 좀더 집중해서 이야기하지 못한것이 아마 예선탈락의 원인이지 않을까 생각했다. 본선참가작품을 보다보니 조금더 노력해볼걸 조금 다르게 생각해볼걸하는 아쉬움도 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;본선 참가 작품들은 현재 service하고 있는 제품에 Machine learning을 붙이거나 접근방법을 비틀어 적용하여 참신성, 기술력이 매우 뛰어난 작품들로 이루어졌다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Lessons learned&lt;/h2&gt;&lt;/div&gt;&lt;div&gt;아쉽게 본선에 참가하지 못했지만, 결과물은 원래 생각했던거 보다 훨씬 만족스럽게 뽑아내서 다행이라는 생각이 들었다. 이번 대회를 통해 얻은 가장 큰 수확은&amp;nbsp;&lt;b&gt;사용자에게 제공되는 효과적인 UI/UX에 대해 한번더 생각해보는 기회&lt;/b&gt;를&amp;nbsp; 가진것이 아닌가 싶다. 사실 개발에 집중하다 보면 고객의 관점을 놓치기 쉽다. 결국 개발자가 만드는 많은 것들이 고객들에게 제공된다.&amp;nbsp;사용자가 어떻게 사용할지, 어떻게 사용하면 효과적으로 제품에 몰입할 수 있을 지 고민하면서 기능을 개발한다면 제품은 완성도가 높이지게 되고,&amp;nbsp;제품을 사용하는 고객, 제품을 만드는 개발자 둘다 만족도가 높아질것임에 틀림없다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Hackathon</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/199</guid>
<comments>https://blog.voidmainvoid.net/199#entry199comment</comments>
<pubDate>Tue, 05 Mar 2019 20:03:30 +0900</pubDate>
</item>
<item>
<title>Kotlin 소개 및 Java와의 차이점 알아보기</title>
<link>https://blog.voidmainvoid.net/198</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F998A673D5C778BCE13E434&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/998A673D5C778BCE13&quot; filemime=&quot;image/jpeg&quot; filename=&quot;kotlin.png&quot; height=&quot;229&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;What is Kotlin?&lt;/h2&gt;&lt;div&gt;# JetBrains에서 2011년 공개한 프로그래밍 언어&lt;/div&gt;&lt;div&gt;# Java와 상호 호환&amp;nbsp;&lt;/div&gt;&lt;div&gt;# JVM, Android, 브라우저에서 동작&lt;/div&gt;&lt;div&gt;# coroutines 지원&lt;/div&gt;&lt;div&gt;# Null 안정성&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;# 코틀린 공식 사이트 :&amp;nbsp;&lt;a href=&quot;https://kotlinlang.org/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://kotlinlang.org/&lt;/a&gt;&lt;/div&gt;&lt;div&gt;# 코틀린 온라인 공부 사이트 :&amp;nbsp;&lt;a href=&quot;https://play.kotlinlang.org&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://play.kotlinlang.org&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;Android와 Kotlin의 관계&lt;/h2&gt;&lt;div&gt;# Java와 100%호환을 통해 Android API그대로 사용가능&lt;/div&gt;&lt;div&gt;# Ant, Maven, Gradle build 시스템 사용가능&lt;/div&gt;&lt;div&gt;# Android studio를 통한&amp;nbsp;Java →&amp;nbsp;Kotlin 변환도구 제공&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;Java vs Kotlin&lt;/h2&gt;&lt;div&gt;java와 코틀린과 차이점을 정리해 보았다. 각 언어의 버젼별로, 상황별로 다른점이 많으나, 그 중 몇가지 중점적으로 봐야할 것을 뽑아 보았다.&lt;/div&gt;&lt;h3&gt;&lt;br /&gt;&lt;/h3&gt;&lt;h3&gt;함수 표현&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;// Java
[public/private/protected] ReturnType 함수이름(Type 변수들){
  [return]
}

// Kotlin
[public/private/protected] fun 함수이름(Type 변수들): ReturnType{
  [return]
}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;기존 Java의 표현식과 다르게 함수이름 앞에 fun이라는 예약어를 붙이고 함수이름을 적어 선언한다.&lt;/div&gt;&lt;h3&gt;변수 표현&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;// Java
[public/private/protected] [static/final] Type 변수이름 [= &amp;lt;초기값&amp;gt;]
// Kotlin
[public/private/protected] [var/val] 변수이름[:Type] [= &amp;lt;초기값&amp;gt;]

// Java
String va1 = &quot;hello&quot;; // mutable, read and write possible
final String va2 = &quot;world&quot;; // immutable, read only
// Kotlin
var va1 = &quot;hello&quot; // mutable, read and write possible
val va2 = &quot;world&quot; // immutable, read only&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;var과 val로 변수를 선언하는데, val은 immutable, var은 mutable 변수이다.&lt;/div&gt;&lt;h3&gt;Null 처리&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;// Java
String nu1 = &quot;hello&quot;;
nu1 = null;

// Kotlin
var nu1 :String = &quot;hello&quot;
n1 = null // &amp;lt;---error:Null can not be a value of non-null type String
var nu2 :String? = &quot;hello&quot;
n2 = null // possible&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;변수 type뒤에 물음표를 붙임으로서 null 허용/비허용 여부를 선언할 수 있다. null이 비허용된 변수의 경우 null이 절대로 들어갈 수 없다.&lt;/div&gt;&lt;h3&gt;Class 표현법&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;// Java
public class Person {
  private final String name;
  public Person(String name){
    this.name = name;
  }
}

// Kotlin
class Person constructor(val name: String){}&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;constructor 예약어를 통해 생성과 동시에 지정되어야 하는 매개변수에 대해 선언 가능하다.&lt;/div&gt;&lt;h3&gt;VO 표현법&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;// Java
public class User {
  private String name;
  private int age;
  public int getAge(){
    return age;
  }
  public void setAge(int age){
    this.age = age;
  }
  public Stirng getName(){
    return name;
  }
  public void setName(String name){
    this.name = name;
  }
}

// Kotlin
data class User(var name:String, var age:Int)
// automatically make .equals(), .hashCode(), .toString(), .copy(), .componentN()&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;기존 java에서 value object를 선언하게 되면 oop의 원칙에 따라 매개변수는 private로 감추고 getter/setter을 통해 각 변수를 접근하였으나, Kotlin에서는 데이터 클래스를 사용하여 vo로 자주 사용하는 각종 함수를 자동으로 제공한다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;End of Document&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Kotlin</category>
<category>android</category>
<category>java</category>
<category>JVM</category>
<category>Kotlin</category>
<category>구글</category>
<category>안드로이드</category>
<category>코틀린</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/198</guid>
<comments>https://blog.voidmainvoid.net/198#entry198comment</comments>
<pubDate>Thu, 28 Feb 2019 17:02:12 +0900</pubDate>
</item>
<item>
<title>DELL P2417H FHD 모니터 개봉기 및 리뷰</title>
<link>https://blog.voidmainvoid.net/197</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;지난 글 '&lt;a href=&quot;https://blog.voidmainvoid.net/195&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;원룸에서 사용할 DELL 모니터 선택 후기(글 바로가기)&lt;/a&gt;' 에서는 어떤 모니터를 고를지 고민해 보았다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;그 이후 11번가에서 주문한&amp;nbsp; Dell P2417H 모니터가 배송이 왔다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F998E5B445C753D49375417&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/998E5B445C753D4937&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 상자.jpg&quot; height=&quot;450&quot; style=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;역시 DELL포장답게 모두 재활용이 가능한 부품으로 이루어져 있다.&lt;/p&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile3.uf.tistory.com%2Fimage%2F9991B2445C753D4F0206FB&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9991B2445C753D4F02&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 개봉.jpg&quot; height=&quot;450&quot; style=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;24인치라 기존에 회사에서 쓰던 27인치 모니터보다는 작을거라고 예상했지만, 생각보다 묵직하고 커서 놀랐다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;가로 52cm, 세로 30cm의 모니터크기를 가지고 있고, 화면비는 16:9이다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F99872E445C753D4D0DCCEF&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99872E445C753D4D0D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 뒤편 지지대.jpg&quot; height=&quot;450&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;스위블, 틸트, 엘리베이션 기능이 있는 받침대이기 때문인지 총 무게는 7.63kg로 다소 무겁다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F998F28445C753D5B167EF5&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/998F28445C753D5B16&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 구성품.jpg&quot; height=&quot;450&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;구성품으로는 VGA선, hdmi선, usb-A선, power케이블이 포함되어있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F996CDB445C753D540EFC1C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/996CDB445C753D540E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;기존 모니터.jpg&quot; height=&quot;450&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;기존 사용하고 있던 19인치 모니터&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F997F70445C753D45037E70&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/997F70445C753D4503&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 테이블 위.jpg&quot; height=&quot;450&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;DELL P2417H 모니터로 바꾼 모습&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F9922F6445C753D5E319F0A&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9922F6445C753D5E31&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 바탕화면.jpg&quot; height=&quot;450&quot; style=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;기존 바탕화면이 그대로 가져와져서 딱 19인치크기만큼의 아이콘이 중앙에 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;중앙에 있는 아이콘부터 오른쪽 끝까지 화면이 넓어진 꼴이 된것같다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F992B3A435C753D670DE005&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/992B3A435C753D670D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 고프로 화면.jpg&quot; height=&quot;450&quot; style=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;모니터 테스트를 위해 GoPro 4k 영상을 틀어봤는데 확실히 이전 19인치 모니터에 비해 시원시원하고 편안하게 보인다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F99530B435C753D710241D9&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99530B435C753D7102&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 90도 틸트 트와이스.jpg&quot; height=&quot;450&quot; style=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;추가적으로 틸트 확인을 위해 트와이스 직캠영상을 시청했다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;트와이스 공식체널로 보이는 영상인데, 9:16의 세로 영상이 유튜브에 있었다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;잘 재생되었고 상하좌우 모두 색이 틀어지지 않고 선명히 보였다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;(시야각 스펙 : 상하 178도, 좌우 178도로 광시야각IPS 지원)&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:600px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F994D6C435C753D7702476C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/994D6C435C753D7702&quot; filemime=&quot;image/jpeg&quot; filename=&quot;DELL P2417H 우주하마.jpg&quot; height=&quot;450&quot; style=&quot;&quot; width=&quot;600&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;마지막으로 즐겨보는 배틀그라운드 스트리머 우주하마를 시청하였다.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;실시간 최대 화질인 1080p로 스트리밍되는 우주하마의 실시간 채널을 보았는데 확실히 휴대폰으로 볼때와는 다르고 즐겁게 시청할 수 있었다.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;결론&lt;/h2&gt;&lt;p&gt;화질 ★★★★☆&lt;/p&gt;&lt;p&gt;가격 ★★★★★&lt;/p&gt;&lt;p&gt;기능 ★★★★☆&lt;/p&gt;&lt;p&gt;무게 ★★★☆☆&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;총평 ★★★★☆&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>리뷰</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/197</guid>
<comments>https://blog.voidmainvoid.net/197#entry197comment</comments>
<pubDate>Tue, 26 Feb 2019 22:29:37 +0900</pubDate>
</item>
<item>
<title>scala개발시 sbt build때 GZIPInputStream: java.util.zip.ZipException: Not in GZIP format 에러나는 경우 해결책</title>
<link>https://blog.voidmainvoid.net/196</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:342px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile7.uf.tistory.com%2Fimage%2F99E815405C6E307417D7A0&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99E815405C6E307417&quot; filemime=&quot;image/jpeg&quot; filename=&quot;sbt.png&quot; height=&quot;147&quot; width=&quot;342&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;scala를 개발할때 java와 연동되던&amp;nbsp;gradle이나 maven과는 다른형태의 build툴인 sbt를 사용한다. sbt는 simple build tool 이라는 약자를 가지고 있다고는 하지만 개인적으로 엄청 불편한거같다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;최근 sbt upgrade를 하던도중 아래와 같은 에러를 만났다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;sbt 0.13.X 에서 sbt 1.X로 올리거나 그 반대의 경우 아래와 같은 에러를 만날때가 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;에러로그&lt;/h2&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;xmp&gt;% sbt
[info] Loading global plugins from /home/smarter/.sbt/0.13/plugins
[info] Updating {file:/home/smarter/.sbt/0.13/plugins/}global-plugins...
[info] Resolving org.fusesource.jansi#jansi;1.4 ...
[info] Done updating.
[info] Loading project definition from /home/smarter/opt/dotty/project
[info] Updating {file:/home/smarter/opt/dotty/project/}dotty-build...
[info] Resolving org.fusesource.jansi#jansi;1.4 ...
[info] Done updating.
Error wrapping InputStream in GZIPInputStream: java.util.zip.ZipException: Not in GZIP format
        at sbt.ErrorHandling$.translate(ErrorHandling.scala:10)
        at sbt.WrapUsing.open(Using.scala:34)
        at sbt.Using.apply(Using.scala:23)
        at sbt.IO$$anonfun$gzipFileIn$1.apply(IO.scala:863)
        at sbt.IO$$anonfun$gzipFileIn$1.apply(IO.scala:862)
        at sbt.Using.apply(Using.scala:24)
        at sbt.IO$.gzipFileIn(IO.scala:862)
        at sbt.Sync$.readUncaught(Sync.scala:88)
        at sbt.Sync$.readInfo(Sync.scala:84)
        at sbt.Sync$$anonfun$apply$1.apply(Sync.scala:28)
        at sbt.Sync$$anonfun$apply$1.apply(Sync.scala:22)
        at sbt.Defaults$$anonfun$copyResourcesTask$1.apply(Defaults.scala:948)
        at sbt.Defaults$$anonfun$copyResourcesTask$1.apply(Defaults.scala:944)
        at scala.Function4$$anonfun$tupled$1.apply(Function4.scala:35)
        at scala.Function4$$anonfun$tupled$1.apply(Function4.scala:34)
        at scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)
        at sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)
        at sbt.std.Transform$$anon$4.work(System.scala:63)
        at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
        at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
        at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)
        at sbt.Execute.work(Execute.scala:237)
        at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
        at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
        at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)
        at sbt.CompletionService$$anon$2.call(CompletionService.scala:28)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.util.zip.ZipException: Not in GZIP format
        at java.util.zip.GZIPInputStream.readHeader(GZIPInputStream.java:165)
        at java.util.zip.GZIPInputStream.&lt;init&gt;(GZIPInputStream.java:79)
        at sbt.Using$$anonfun$gzipInputStream$1.apply(Using.scala:84)
        at sbt.Using$$anonfun$gzipInputStream$1.apply(Using.scala:84)
        at sbt.Using$$anon$1.openImpl(Using.scala:51)
        at sbt.WrapUsing$$anonfun$open$2.apply(Using.scala:34)
        at sbt.ErrorHandling$.translate(ErrorHandling.scala:10)
        at sbt.WrapUsing.open(Using.scala:34)
        at sbt.Using.apply(Using.scala:23)
        at sbt.IO$$anonfun$gzipFileIn$1.apply(IO.scala:863)
        at sbt.IO$$anonfun$gzipFileIn$1.apply(IO.scala:862)
        at sbt.Using.apply(Using.scala:24)
        at sbt.IO$.gzipFileIn(IO.scala:862)
        at sbt.Sync$.readUncaught(Sync.scala:88)
        at sbt.Sync$.readInfo(Sync.scala:84)
        at sbt.Sync$$anonfun$apply$1.apply(Sync.scala:28)
        at sbt.Sync$$anonfun$apply$1.apply(Sync.scala:22)
        at sbt.Defaults$$anonfun$copyResourcesTask$1.apply(Defaults.scala:948)
        at sbt.Defaults$$anonfun$copyResourcesTask$1.apply(Defaults.scala:944)
        at scala.Function4$$anonfun$tupled$1.apply(Function4.scala:35)
        at scala.Function4$$anonfun$tupled$1.apply(Function4.scala:34)
        at scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)
        at sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)
        at sbt.std.Transform$$anon$4.work(System.scala:63)
        at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
        at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)
        at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)
        at sbt.Execute.work(Execute.scala:237)
        at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
        at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)
        at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)
        at sbt.CompletionService$$anon$2.call(CompletionService.scala:28)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
[error] (compile:copyResources) Error wrapping InputStream in GZIPInputStream: java.util.zip.ZipException: Not in GZIP format
Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore?&lt;/xmp&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;해결책&lt;/h2&gt;&lt;p&gt;개발하던 프로젝트폴더에서 아래 명령어를 실행한다.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;xmp&gt;cd ${your_project}
rm -fr project/target
rm -fr project/project/target&lt;/xmp&gt;&lt;/pre&gt;
&lt;p&gt;이미 build되어 output이 있는 target folder에 의해 정상 build가 되지 않는 것으로 보인다.&lt;/p&gt;&lt;p&gt;그러므로 해당 프로젝터의 폴더에 들어가서 target을 모조리 삭제한 후 다시 build하면 정상적으로 진행 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아래와 같이 모조리 지우는 방법도 있다.&lt;/p&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;xmp&gt;cd ${your_project}
find . -name target -exec rm -rf `pwd` \;&lt;/xmp&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Reference&lt;/h2&gt;&lt;div&gt;github sbt issue :&lt;a href=&quot;https://github.com/sbt/sbt/issues/3050&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&amp;nbsp;https://github.com/sbt/sbt/issues/3050&lt;/a&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Java &amp; Scala</category>
<category>sbt</category>
<category>scala</category>
<category>빌드</category>
<category>스칼라</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/196</guid>
<comments>https://blog.voidmainvoid.net/196#entry196comment</comments>
<pubDate>Thu, 21 Feb 2019 14:06:26 +0900</pubDate>
</item>
<item>
<title>원룸에서 사용할 DELL 모니터 선택 후기</title>
<link>https://blog.voidmainvoid.net/195</link>
<description>&lt;h1&gt;Intro&lt;/h1&gt;&lt;p&gt;대부분의 사회초년생들은 자취를 원룸에서 시작할 것이다.(글쓴이도 그렇다)&lt;/p&gt;&lt;p&gt;원룸(혹은 오피스텔)에서 빌트인되어 있는 옷장, 침대 등을 사용하지만 보통은 데스크탑, 모니터가 있는 경우는 드물다.&lt;/p&gt;&lt;p&gt;데스크탑이 반드시 필요하다면 모니터와 데스크탑을 방안에 둬야한다. 이때, 어떤 모니터를 사면 좋을까?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Requirement&lt;/h1&gt;&lt;div&gt;원룸에서 모니터를 사야할 때 고려해야할 사항은 아래와 같다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;# 몇인치 모니터?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;# 브랜드?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;# 가격대?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;# 패널종류?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;# 해상도?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;# hdmi 등 각종 기능?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;우선 상기 질문에 대해 나는 아래와 같이 판단했다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# 몇인치 모니터?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Answer : 27인치이하면 좋을것 같다. 27치 초과제품은 비쌀뿐더러 원룸에서 티비만큼이나 자리를 차지할 것이다. 19인치는 너무작으므로 24 혹은 27인치로 결정.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# 브랜드?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Answer : 모니터를 한번쓰면 오래 사용 가능한 것을 사며, 국내AS 여부도 중요 결정 포인트. 삼성, LG, DELL, HP 중에 선택하기로 결정.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# 가격대?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Answer : 저렴하면 저렴할 수록&amp;nbsp;좋으나 브랜드와 모니터 크기에 알맞는 금액이면 좋을 것같고, 이에 따라 최소 10만원 최대 30만원까지 가능.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# 패널종류?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Answer : 가격에 따라 반응성이 좋은 tn패널도 좋으나 아무래도 원룸에서 티비대용으로 쓸려면 상하좌우에서 어디서든 볼 수 있는 IPS패널 급이면 좋을것같음.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# 해상도?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Answer : 27인치면 QHD이상이면 좋겠으나 가격적 측면에서 불리하고, 24인치에서 FHD급이면 무난히 사용가능할 것으로 보여 24인치 FHD로 결정.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# hdmi 등 각종 기능?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Answer : hdmi는 필수, 나머지 port는 옵션. 피벗이 되도 좋고 안되도 좋음. 피벗이 된다면 유튜브 직캠영상을 잘볼수 있을 것으로 예상. 피벗모니터를 통해 외장모니터로서&amp;nbsp;코딩하기도 편함.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;상기 5개 질문/답변에 만족하는 제품군은 아래와 같이 추려졌다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Products&lt;/h1&gt;&lt;div&gt;※ 참고 : 하기 가격은 2019년 2월 17일 Danawa.com 기준 가격입니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;LG전자 24MK430H&lt;/b&gt;(141,800원)&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile26.uf.tistory.com%2Fimage%2F992B764F5C696A7C0235B9&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/992B764F5C696A7C02&quot; filemime=&quot;image/jpeg&quot; filename=&quot;24MK430H.png&quot; height=&quot;160&quot; style=&quot;text-align: center;&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;삼성전자 S24F350&lt;/b&gt;(125,900원)&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F993ED74F5C696A77322637&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/993ED74F5C696A7732&quot; filemime=&quot;image/jpeg&quot; filename=&quot;S24F350.png&quot; height=&quot;139&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;DELL Professional P2417H&lt;/b&gt;(159,000원)&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F99ECE24F5C696A75351917&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99ECE24F5C696A7535&quot; filemime=&quot;image/jpeg&quot; filename=&quot;P2417H.png&quot; height=&quot;156&quot; style=&quot;text-align: center;&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;HP N246v&lt;/b&gt;(163,090원)&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F99A80A4F5C696A742C0827&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99A80A4F5C696A742C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;N246v.png&quot; height=&quot;134&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;4개의 모니터들은 모두 24인치, IPS(혹은 PLS)의 광시야각 패널, 1920x1080(FHD), HDMI라는 공통점을 가지고 있다. 명암비, 반응속도 등에서 다소 차이가 나는 부분이 있으나 게임을 자주 하지는 않기 때문에 고려사항이 아니다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;고심끝에 상기 모니터 중 최종적으로 고른 모델은 &lt;b&gt;델&amp;nbsp;P2417H모델&lt;/b&gt;이다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 260px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F99F7054F5C696B3E10914B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99F7054F5C696B3E10&quot; filemime=&quot;image/jpeg&quot; filename=&quot;델 P2417H.png&quot; height=&quot;260&quot; original=&quot;yes&quot; style=&quot;width: 300px; height: 260px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;DELL P2417H&lt;/p&gt;&lt;h1&gt;Why P2417H?&lt;br /&gt;&lt;/h1&gt;&lt;div&gt;델 P2417H모델을 고른이유는 아래와 같다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;# DELL모니터에 대한 신뢰.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;# 90도 피벗이 됨에도 불구하고 피벗이 안되는 삼성, 엘지모델에 비해 겨우 2, 3만원 차이. (+ VESA hole 존재)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;# 모니터 내장 USB hub&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;# LG, 삼성, HP모델은 높낮이 조절이 불가능.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;상기 4개만 보더라도 원룸에서 사용하기 편리하고, 평소에 데스크탑으로 사용하다가 필요시에 피벗하여&amp;nbsp;노트북의 외장모니터로 사용하기도 좋다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;최종적으로 델 P2417H모델을 11번가에서 구입하였다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 78px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F991D67445C696CF5358132&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/991D67445C696CF535&quot; filemime=&quot;image/jpeg&quot; filename=&quot;11번가 P2417H 주문완료.png&quot; height=&quot;78&quot; original=&quot;yes&quot; style=&quot;width: 500px; height: 78px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;11번가 주문완료&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;이제 배송만을 기다리고 있다 :)&lt;/p&gt;</description>
<category>리뷰</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/195</guid>
<comments>https://blog.voidmainvoid.net/195#entry195comment</comments>
<pubDate>Sun, 17 Feb 2019 23:18:14 +0900</pubDate>
</item>
<item>
<title>태그호이어 포뮬러1 쿼츠 리뷰</title>
<link>https://blog.voidmainvoid.net/194</link>
<description>&lt;h2 style=&quot;text-align: center;&quot;&gt;&lt;b&gt;TAG Heuer formula 1 (&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;blue dial&lt;/span&gt;)&lt;/b&gt;&lt;/h2&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;태그호이어도 많은 종류가 있었지만 특히나 내가 필요했던 요건은 아래와 같았다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;1. 쿼츠&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;2. 크로노그래프&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;3.&amp;nbsp;&lt;/b&gt;&lt;b&gt;가죽이 아닐것, 스틸, 나토밴드, 고무밴드 가능&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;사실 시계를 살때, 특히 명품시계라면&amp;nbsp;대부분 사람들은 오토매틱을 구매하는 편이 많다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;그러나 &lt;u&gt;개인적으로 오토매틱 시계의 정교함과 멋짐보다는 편리함을 추구하기에 쿼츠모델로 고려&lt;/u&gt;하였다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;태그호이어의 쿼츠모델은 생각보다 다양하다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;아쿠아레이서, 포뮬러1, 링크, 카레라&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;종류에 상관없이 모두 존재 했으나..&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;한국 태그호이어 청담 부띠끄 매장에는 포뮬러1과 아쿠아레이서 쿼츠만 존재했고,&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;최종적으로 포뮬러1, 그 중에서도 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;블루다이얼&lt;/span&gt;을 골랐다.&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;블루다이얼 모델은 정품 나토밴드가 함께 출시되어 상황에 따라 적절하게&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;교체하여 세련됨과 고급스러움을 함께 지닐 수 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile2.uf.tistory.com%2Fimage%2F99591C3B5C6667DA1D52C2&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99591C3B5C6667DA1D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 제품들.png&quot; height=&quot;483&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;나토밴드도 함께 구매하였으나 한국으로 배송오는데 3달이 걸린다고 한다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F9923EB3F5C6667EF1B3DC9&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9923EB3F5C6667EF1B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 전체.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;태그호이어의 구성품(박스, 시계보관함, 쇼핑백)&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F998EA33F5C6667EE2439C0&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/998EA33F5C6667EE24&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 외장.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;시계보관함은 스폰지와 단단한 외부자제로 되어있어&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;여행갈때 혹은 장기보관시 유용해 보인다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F99A2863F5C6667EA1954F0&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99A2863F5C6667EA19&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 상자.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;제품박스&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile8.uf.tistory.com%2Fimage%2F99B9CA3B5C6667E524C170&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99B9CA3B5C6667E524&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 위에서 찍은 사진.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;제품박스를 개봉하면 &lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;블루다이얼&lt;/span&gt;의&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;태그호이어 포뮬러1 쿼츠&lt;/b&gt; 모델이 나온다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;기본색이 블루다이얼이긴 하지만 보는 방향과 빛의 변화에 따라&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;어두운 파랑으로 보여 &lt;b&gt;너무 캐쥬얼하지 않으면서도 고급스러운 느낌을 주기때문&lt;/b&gt;에&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;b&gt;캐쥬얼복장부터 양복까지 &lt;/b&gt;다양하게 사용할 수 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F991C003B5C6667DF2C8443&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/991C003B5C6667DF2C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 정며2.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;태그호이어의 포뮬러1 시리즈는 캐주얼한 스포츠 시계로서&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;일상생활 어디서든 스피드를 즐기는 사람들을 위해 만들어진 시계이다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;43mm 사파이어 크리스탈로 되어 있으며, 방수는 200m까지 가능하다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;파랑 알루미늄 배젤로 TACHYMETRE로 꾸며져있다. &lt;b&gt;배젤은 돌아가지 않는다.&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile28.uf.tistory.com%2Fimage%2F999C8D3B5C6667DD26D507&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/999C8D3B5C6667DD26&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 좌측2.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;무게는 177g 정도이며 밴드의 넓이는 22mm&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;시계의 두께는 11.5mm 인데, 크로노그래프임에도 불구하고&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;두껍다는 생각이 들지않을 정도로 적당하다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F99A2203B5C6667DC260A23&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99A2203B5C6667DC26&quot; filemime=&quot;image/jpeg&quot; filename=&quot;태그호이어 포뮬러1 우측.jpg&quot; height=&quot;600&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;시계의 우측에는 크로노그래프를 위한 start, reset button이 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;start버튼을 한번누르면 시작, 한번더 누르면 stop이다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;stop상태에서 reset버튼을 누르면 다시 초기상태로 돌아온다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99A221395C6564640945ED&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99A221395C65646409&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2019-02-14 오후 9.44.32.png&quot; height=&quot;588&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;3시 방향에 작은 원은 시간을 나타내는 초침&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;6시 방향에 작은 원은 크로노그래프 작동시 0.1초 단위를 나타내고,&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;9시 방향에는 크로노그래프 작동시 분단위를 나타낸다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F99624F395C6564660CD6F8&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99624F395C6564660C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;IMG_20190207_194845_790.jpg&quot; height=&quot;800&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;착용샷. 파랑 하양 주황이 적절하게 어우러져 스포티한 느낌을 준다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;시침, 분침, 각 시간은 야광으로 밤에도 확실히 인지 가능하다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;또한 4시방향에 있는&amp;nbsp;일 표시를 통해 오늘이 몇일인지도 알 수 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F9931C6395C65646903FD26&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9931C6395C65646903&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2019-02-14 오후 9.43.47.png&quot; height=&quot;631&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;기존에 가지고 있던 TISSOT 1853 시계와 태그호이어 비교 샷으로&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;TAG Heuer Formula 1 Quartz모델 리뷰를 마친다.&lt;/p&gt;</description>
<category>리뷰</category>
<category>tagheuer</category>
<category>시계</category>
<category>태그호이어</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/194</guid>
<comments>https://blog.voidmainvoid.net/194#entry194comment</comments>
<pubDate>Thu, 14 Feb 2019 22:20:56 +0900</pubDate>
</item>
<item>
<title>Kafka broker와 java client의 버젼 하위호환성 정리</title>
<link>https://blog.voidmainvoid.net/193</link>
<description>&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;하위 호환성은 기술 및 컴퓨터 분야에서 새 제품이 이전 제품을 염두에 두고 만들어진 제품에서 별도의 수정 없이 그대로 쓰일 수 있는 것을 뜻한다.&amp;nbsp;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:156px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F99094A335C64D98414FAE6&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99094A335C64D98414&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2019-02-14 오전 11.59.09.png&quot; height=&quot;133&quot; width=&quot;156&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Kafka는 1.XX version으로 올라가기 전까지는&lt;b&gt; &quot;one-way&quot; 하위 호환성&lt;/b&gt;을 가지고 있었다. 신규 버젼의 broker는 옛날 버젼의 client를 지원했으나, 신규 버젼의 client는 옛날 버젼의 broker을 지원하지 못한다는 뜻이다. Client버젼을 높이기 위해서는 반드시 broker의 버젼을 높여야 했으므로,&amp;nbsp;kafka client 업그레이드에 허들로 작용했다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;카프카 커뮤니티는 KIP-97 ticket을 통해 &lt;b&gt;&quot;two-way&quot; 하위 호환성을 가지도록 하는 방안을 논의&lt;/b&gt;하였고 이후에 호환성 protocol을 정의하여 broker 버젼과 client 버젼이 동일하지 않더라도 동작가능하도록 정리하였다.&amp;nbsp;이를 통해&amp;nbsp;아래와 같은 Kafka broker - Kafka client의 호환성을 정리할수 있게 되었다.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;center&gt;
&lt;div style=&quot;width:100%; ; overflow:auto&quot;&gt;
&lt;table class=&quot;txc-table&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border: none; border-collapse: collapse; font-family: Batang, 바탕; font-size: 13px; width: 654px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width: 125px; height: 21px; border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Kafka b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;roker 버젼&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 168px; height: 21px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Java client&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;호환성&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 142px; height: 21px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Kafka stream 호환성&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 219px; height: 21px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Kafka Connect 호환성&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 125px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.0&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 168px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.1을 제외한 모든 버젼 가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 142px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.0 버젼만&amp;nbsp;가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 219px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&amp;nbsp;0.10.1을 제외한 모든 버젼 가능&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 125px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.1&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 168px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;모든&amp;nbsp;&lt;/span&gt;버젼&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 142px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;모든 버젼 가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 219px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.1 이하 버젼 가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 125px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.2&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 168px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;모든&amp;nbsp;&lt;/span&gt;버젼&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 142px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;모든 버젼 가능&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 219px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;모든 버젼 가능&lt;/p&gt;&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 125px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.11.0&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 168px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;모든&amp;nbsp;&lt;/span&gt;버젼&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 142px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;모든 버젼 가능&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 219px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;모든 버젼 가능&lt;/p&gt;&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width: 125px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;1.0.0&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 168px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;모든&amp;nbsp;&lt;/span&gt;버젼&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;가능&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 142px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;모든 버젼 가능&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width: 219px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(206, 251, 201);&quot;&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;모든 버젼 가능&lt;/p&gt;&lt;/td&gt;

&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/center&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;상기와 같은 표와 같이 client가 호환된다고해서 모든 broker의 신규 기능을 쓸수 있는 것을 보장하지 않는다. client version이 올라갈때 마다 신규 브로커를 위한 기능이 추가 된다.&amp;nbsp;신규 client에서 새로운 기능의 api를 호출하면&amp;nbsp;옛날 버젼 broker에서는 당연히 사용이 불가하고, 호출시&amp;nbsp;&lt;b&gt;&lt;i&gt;ObsoleteBrokerVersion&lt;/i&gt; exception&lt;/b&gt;이 발생하므로&amp;nbsp;주의해야한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;각 broker 버젼별 사용 불가한 client api들은 아래와 같이 정리할 수 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;center style=&quot;color: rgb(0, 0, 0); font-family: Batang, 바탕; font-size: 13px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;

&lt;div style=&quot;width:100%; overflow:auto&quot;&gt;
&lt;table class=&quot;txc-table&quot; width=&quot;100%&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border: none; border-collapse: collapse; font-family: Batang, 바탕; font-size: 13px; width: 450px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 146px; height: 22px; border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;Kafka b&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;roker 버젼&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 303px; height: 22px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-top: 1px solid rgb(204, 204, 204); background-color: rgb(234, 234, 234);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: center;&quot;&gt;&lt;b&gt;Features that newer clients might notice missing&lt;/b&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 146px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.0&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;line-height: normal; width: 303px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(255, 255, 255);&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Admin&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;Client requests&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Topics&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createTopics&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # deleteTopics&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createPartitions&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# ACLs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # deleteAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Configs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeConfigs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # alterConfigs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Log Dirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeReplicaLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # alterRe&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;plica&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;L&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;ogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0); font-family: Batang, 바탕; font-size: 13px; margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 146px; height: 225px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.1&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;line-height: normal; width: 303px; height: 225px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp; AdminClient&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Top&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;ics&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createPartitions&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# ACLs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # deleteAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Configs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeConfigs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # alterConfigs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Log Dirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeReplicaLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # alterR&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;eplicaLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0); font-family: Batang, 바탕; font-size: 13px; margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 146px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.10.2&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;line-height: normal; width: 303px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp; AdminClient&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Top&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;ics&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createPartitions&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# ACLs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # deleteAcls&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Configs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeConfigs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # alterConfigs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Log Dirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeReplicaLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;alterR&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;eplicaLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0); font-family: Batang, 바탕; font-size: 13px; margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 146px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;0.11.0&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;line-height: normal; width: 303px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# Topi&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;cs:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # createPartitions&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;# L&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;og Dirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # describeReplica&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;LogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;&amp;nbsp; # alterR&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0); font-size: 11pt;&quot;&gt;eplicaLogDirs&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(0, 0, 0); font-family: Batang, 바탕; font-size: 13px; margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 146px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); border-left: 1px solid rgb(204, 204, 204);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&amp;nbsp;1.0.0&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=&quot;line-height: normal; font-size: 13px; font-family: Batang, 바탕; color: rgb(0, 0, 0); width: 303px; height: 24px; border-bottom: 1px solid rgb(204, 204, 204); border-right: 1px solid rgb(204, 204, 204); background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;margin-top: 0px; margin-bottom: 0px; text-align: left;&quot;&gt;&amp;nbsp;N/A&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;/div&gt;
&lt;/center&gt;&lt;h2&gt;Reference&lt;/h2&gt;&lt;p&gt;# &lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/KIP-97%3A+Improved+Kafka+Client+RPC+Compatibility+Policy&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;KIP-97: Improved Kafka Client RPC Compatibility Policy&lt;/a&gt;&lt;/p&gt;&lt;p&gt;#&amp;nbsp;&lt;a href=&quot;https://cwiki.apache.org/confluence/display/KAFKA/Compatibility+Matrix&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Compatibility Matrix&lt;/a&gt;&lt;/p&gt;</description>
<category>Kafka</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/193</guid>
<comments>https://blog.voidmainvoid.net/193#entry193comment</comments>
<pubDate>Thu, 14 Feb 2019 13:23:00 +0900</pubDate>
</item>
<item>
<title>Back-end 개발자라면 답변가능한 Questions</title>
<link>https://blog.voidmainvoid.net/191</link>
<description>&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:312px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F9966224E5C611420306BDB&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9966224E5C61142030&quot; filemime=&quot;image/jpeg&quot; filename=&quot;면접질문.png&quot; height=&quot;205&quot; width=&quot;312&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;OS, Linux, Network&lt;/h1&gt;&lt;p&gt;&lt;b&gt;# 프로세스와 쓰레드 차이&lt;/b&gt;&lt;/p&gt;&lt;p&gt;프로세스 - 실행되고 있는 프로그램의 개체. CPU 시간이나 메모리 등 시스템 장원이 할당되는 독립적인 개체. 다른 프로세스와 상관 없이 독립적으로 자원을 할당 받음. 프로세스 간의 통신을 위해선 파이프, 파일, 소켓 등을 사용하여 통신하여야 함&amp;nbsp;&lt;/p&gt;&lt;p&gt;쓰레드 - 프로세스 안에 존재하여, 프로세스의 자원을 공유하는 개체 흔히 경량 프로세스라고 부름 각 쓰레드는 별도의 레지스터와 스택을 갖고, 힙 영역은 공유.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# System call이란?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Shared memory?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# 해쉬알고리즘의 종류 및 특징?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;MD5 SHA-1&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Swap memory는 무엇이고 언제발생하는가?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Java에서 Memory mapped file은 언제 사용하는가?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# OSI 7 layer&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Http연결시 세션과 쿠키 차이점&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Http의 Keep alive 개념?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Get, Post 차이점&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# TCP vs UDP&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# L7 switch란?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Java Programming&lt;/h1&gt;&lt;div&gt;&lt;b&gt;# Java 8, 9, 10 차이점 설명&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Java에서 Integer는 몇바이트인가?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Collection package들&amp;nbsp;설명&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Call by value, call by reference 차이 및 Java에서 동작방식&lt;/b&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Overload와 override차이&lt;/b&gt;&lt;/p&gt;&lt;p&gt;오버로딩 - 똑같은 함수에 매개변수를 변경하여 선언하는 법&lt;/p&gt;&lt;p&gt;오버라이딩 - 부모 클래스로 부터 상속 받은 메소드의 내부 구현 로직을 변경하는 방법&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Hashtable, hashmap 차이&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# ArrayList, LinkedList 차이&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# JVM GC 종류 및 원리&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Java NIO(new io)?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Java refrection?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# servlet?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Singleton패턴이 무었이고 어떨때 사용가능한가?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Threadsafe란?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# mutex와 semaphore 차이?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;프로세스 혹은 쓰레드 간의 통신 시에 shared memory 등을 쓰는 경우 하나의 자원에 두 개 이상의 프로세스 혹은 쓰레드가 접근하는 경우에 문제가 발생. 이를 제어하기 위해 쓰레드에서는 뮤텍스를 사용하며, 프로세스에서는 세마포어를 사용 함&amp;nbsp;&lt;/p&gt;&lt;p&gt;뮤텍스 - 상호배제라고도 하며, Critical Section을 가진 스레드의 Running time이 서로 겹치지 않도록 각각 단독으로 실행하게 하는 기술 synchronized 또는 lock을 통해 해결&amp;nbsp;&lt;/p&gt;&lt;p&gt;세마포어 - 리소스 상태를 나타내는 간단한 카운터 공유 리소스에 접근할 수 있는 프로세스의 최대 허용치만큼 동시에 사용자가 접근하여 사용할 수 있음.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Spring boot란? 왜 쓰는가?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# ORM이란?&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Design pattern아는 것 나열 및 설명&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# String, StringBuffer, StringBuilder 차이&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Java에서 int와 long차이&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;# Gradle vs Maven&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;DevOps&lt;/h1&gt;&lt;div&gt;&lt;b&gt;# Kubernetes란?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Container의 종류 및 써야하는 이유?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Jenkins란?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# 무중단 배포를 위한 방법?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# 마이크로 서비스 아키텍쳐란 무었인가?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;BigData&lt;/h1&gt;&lt;div&gt;&lt;b&gt;# Hadoop의 특징 및 장단점&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Kafka의 특징 및 장단점&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# 각종 Queue application의 차이 설명&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# MapReduce설명&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# 샤딩과 파티션 차이&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>개발이야기</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/191</guid>
<comments>https://blog.voidmainvoid.net/191#entry191comment</comments>
<pubDate>Mon, 11 Feb 2019 15:42:22 +0900</pubDate>
</item>
<item>
<title>자바 가비지 컬렉션 설명 및 종류</title>
<link>https://blog.voidmainvoid.net/190</link>
<description>&lt;h1&gt;Getting Started&lt;/h1&gt;&lt;div&gt;JVM 기반 언어와 C, C++과 가장 큰 다른점은 free()와 같은 메모리접근을 통한 명시적 메모리 해제 여부이다. 자바는 OS메모리 영역에 직접 접근하지 않고 JVM이라는 Process이자 가상머신을 통해 접근한다.&amp;nbsp;&lt;/div&gt;&lt;div&gt;자바 application은 System.gc()와 같은 명시적 명령어를 통해 garbage collection을 수행할 수 있으나, 권장되지 않는다. 대신 JVM의 옵션에 따라 Serial GC, Parallel GC, CMS(Concurrent Mark Sweep) GC, G1 GC(after java 7)이 사용되고, 각 GC들은 특정 알고리즘과 주어진&amp;nbsp;옵션에 따라 메모리 관리를 하게 된다.&lt;/div&gt;&lt;h2&gt;What is garbage?&lt;/h2&gt;&lt;div&gt;Java application에서는 가비지 컬렉션을 통해 더이상 사용되지 않는 오브젝트들을 제거한다. 가비지 컬렉션에서 &lt;b&gt;'더이상 사용되지 않는'&lt;/b&gt;의 의미는 &lt;b&gt;'Unreachable object'&lt;/b&gt;라고 말할 수 있다. Unrechable object들은 Stack에 도달할 수 없는 Heap영역의 객체단위라고 할수 있다.&lt;/div&gt;&lt;h2&gt;Unreachable object&lt;/h2&gt;&lt;p&gt;Java application에서 &lt;span style=&quot;text-align: justify;&quot;&gt;unreach&lt;/span&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;able&lt;/span&gt;&amp;nbsp;object를 보여주는 예제를 아래에서 확인해보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;text-align: center; width: 500px; height: 354px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F99B66C425C53C0E62C8564&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99B66C425C53C0E62C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;heap memory jvm unrechable object.png&quot; height=&quot;354&quot; original=&quot;yes&quot; style=&quot;text-align: center; width: 500px; height: 354px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&quot;prettyprint lang-java&quot;&gt;Integer i = new Integer(4);
// 레퍼런스변수 i는 새로운 Integer 객체 인스턴스를 가르킨다.
i = null;
// 레퍼런스변수 i는 null로 할당됨
// 이전에 만든 Integer객체 인스턴스는 unrechable object가 된다.&lt;/pre&gt;
&lt;p style=&quot;text-align: justify; clear: none; float: none;&quot;&gt;heap memory 영역에 object가 선언된 이후 i에 null이 선언되면서 Integer(4)는 어느 누구도 참조하지 않는 unreachable object가 되었다. 이 object는 곧 JVM의 GC에 의해 반환된다.&lt;/p&gt;&lt;p style=&quot;text-align: justify; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Garbage Collections 과정&lt;/h2&gt;&lt;div&gt;가비지 컬렉션의 과정에 대해 확인해보자.&lt;/div&gt;&lt;div&gt;참고로 C언어와는 다르게, deallocating memory과정은 가비지 컬렉터에 의해 자동으로 실행된다.&lt;/div&gt;&lt;h3&gt;Step 1: Marking&lt;/h3&gt;&lt;div&gt;가비지 컬렉터는 메모리에서 live object를 확인 하고, unrechable object가 무엇인지 마킹하는 절차를 진행한다.&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:355px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99C9A2345C53C8A4089F41&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99C9A2345C53C8A408&quot; filemime=&quot;image/jpeg&quot; filename=&quot;gc marking.png&quot; height=&quot;251&quot; width=&quot;355&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;h3&gt;Step 2: Normal Deletion&lt;/h3&gt;&lt;div&gt;가비지 컬렉터는 unrechable object를 삭제한다.&lt;/div&gt;&lt;div style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:376px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile24.uf.tistory.com%2Fimage%2F99D4A8345C53C8A5074422&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D4A8345C53C8A507&quot; filemime=&quot;image/jpeg&quot; filename=&quot;gc deletion.png&quot; height=&quot;228&quot; style=&quot;text-align: center;&quot; width=&quot;376&quot;/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;Step 2a: Deletion with Compacting&lt;/h3&gt;&lt;div&gt;가비지 컬렉터중 일부는 memory를 더욱 효과적으로 쓰기위해&amp;nbsp; unreachable object를 삭제함과 동시에 압축을 진행하기도 한다.&lt;/div&gt;&lt;div style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:360px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile27.uf.tistory.com%2Fimage%2F9901BC345C53C8A504DC50&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9901BC345C53C8A504&quot; filemime=&quot;image/jpeg&quot; filename=&quot;gc deletion and comact.png&quot; height=&quot;219&quot; style=&quot;text-align: center;&quot; width=&quot;360&quot;/&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;h2&gt;Java Garbage Collection 용어 정리&lt;/h2&gt;&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:429px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F996E7D3F5C53CD5712F01C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/996E7D3F5C53CD5712&quot; filemime=&quot;image/jpeg&quot; filename=&quot;java heap memory.png&quot; height=&quot;224&quot; width=&quot;429&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Young Generation&lt;/b&gt; : 최초로 new object가 생성되었을 경우 heap memory에서 위치하는 공간. MinorGC가 발생하면 unreachable object는 삭제되고, surviving object(참조되고 있는 객체들)은 Old generation으로 이동한다.&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Old Generation&lt;/b&gt; : Long surviving object들이 머무는 공간. Old generation이 가득차게되면 MajorGC가 발생한다.&lt;/div&gt;&lt;div&gt;&lt;b&gt;# MinorGC&lt;/b&gt; : Young generation에서 발생하는 GC&lt;/div&gt;&lt;div&gt;&lt;b&gt;# MajorGC&lt;/b&gt; : Old Generation에서 발생하는 GC&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Full GC&lt;/b&gt; : Heap memory전체를 clear하는 작업&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Stop the World Event &lt;/b&gt;: MinorGC 발생시 Stop the world event가 발생한다. MinorGC를 수행할때는 모든 application thread가 중지하고, 예외는 없다.&lt;/div&gt;&lt;div&gt;&lt;b&gt;# Permanent generation&lt;/b&gt; : Java application에 필요한 클래스의 메타데이터를 자장하는 곳. Java8을 기준으로 Permanent generation은 heap memory가 아닌 native memory로 관리됨.(참고문서 :&amp;nbsp;&lt;a href=&quot;https://blog.voidmainvoid.net/184&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Java8에서 permSize를 대체하는 옵션?&lt;/a&gt;)&lt;/div&gt;&lt;h2&gt;Java Garbage Collector의&amp;nbsp;종류&lt;/h2&gt;&lt;h3&gt;Serial GC&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;-XX:+UseSerialGC&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;MinorGC, MajorGC 모두 순차적으로 수행, Deletion and Compacting 수행&lt;/div&gt;&lt;h3&gt;Parallel GC&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;-XX:+UseParallelGC&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;여러 CPU를 효과적으로 활용하기 위해 GC수행시 멀티스레드를 사용. Default로 young generation에서만 멀티스레드를 활용하나, 옵션을 통해 old generation에서도 멀티스레딩 활용가능. Deletion and Compacting 수행&lt;/div&gt;&lt;h3&gt;CMS(Concurrent Mark Sweep) Collector&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;-XX:+UseConcMarkSweepGC&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;가비지 컬렉션 작업을 애플리케이션 스레드와 동시 수행. stop-the-world시간 최소화. Compacting수행하지 않아서 memory를 더 많이 차지.&lt;/div&gt;&lt;h3&gt;G1 Garbage Collector&lt;/h3&gt;&lt;div&gt;&lt;pre class=&quot;prettyprint lang-java&quot;&gt;-XX:+UseG1GC&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;Java7부터 사용가능. 여러 CPU와 아주 큰 memory에서 효과적인 GC를 활용하기 위함. Oracle문서에 따르면 heap size가 6GB보다 클 경우 GC의 latency를 0.5sec이하로 낮출수 있다고 한다.(&lt;a href=&quot;https://www.oracle.com/technetwork/tutorials/tutorials-1876574.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Oracle G1 GC문서&lt;/a&gt;) Java9에서는 default GC로 설정되어 있다.(이전까지는 Parallel GC가 default)&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Oracle에서 G1 GC를 사용을 권하는(Recommend) 기준&lt;/b&gt;&lt;/div&gt;&lt;p&gt;# Full GC durations are too long or too frequent.&amp;nbsp;&lt;/p&gt;&lt;p&gt;# The rate of object allocation rate or promotion varies significantly.&amp;nbsp;&lt;/p&gt;&lt;p&gt;# Undesired long garbage collection or compaction pauses (longer than 0.5 to 1 second)&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;※ 일부 사진 및 내용은 &lt;a href=&quot;https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Oracle Garbage collection Basics 공식문서&lt;/a&gt;에서 가져왔습니다.&lt;br /&gt;&lt;/p&gt;</description>
<category>Java &amp; Scala</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/190</guid>
<comments>https://blog.voidmainvoid.net/190#entry190comment</comments>
<pubDate>Fri, 01 Feb 2019 13:41:05 +0900</pubDate>
</item>
<item>
<title>홍콩 해커톤 Smartone 참가 후기</title>
<link>https://blog.voidmainvoid.net/189</link>
<description>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: 18pt;&quot;&gt;Smartone Hackathon 2018&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(70, 65, 217);&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;홍콩에서 스마트한 삶을 꿈꾸다&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;페이스북의 '좋아요' 버튼이 사내 해커톤에서 개발되어 상용화된 사례라는 점은 이미 널리 알려진 사실이다. 페이스북이 해커톤을 통해 새로운 비즈니스 모델을 개발한 이후 IT기업들 사이에서 해커톤 개최는 일종의 트렌드로 자리잡았다. 국내에서도 우리 회사를 비롯하여 네이버, 삼성전자 등의 기업이 해마다 해커톤을 개최하고 있으며, 최근에는 그 의미가 확장되어 지자체, 대학교, 금융기관 등에서도 다양한 목적의 해커톤을 개최하고 있다. 현재 해외에서는 어떠한 해커톤이 열리고 있고, 국내 해커톤과의 차이는 무엇일까? 작년 가을 홍콩에서 열린 '&lt;b&gt;스마톤 해커톤(Smartone Hackathon) 2018&lt;/b&gt;'에서의 경험을 소개한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;글_SK플래닛 Data Infrastructure팀&amp;nbsp;최원영 매니저&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:777px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F996ABC405C46FE090169E4&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/996ABC405C46FE0901&quot; filemime=&quot;image/jpeg&quot; filename=&quot;해커톤 내부 사진.jpg&quot; height=&quot;358&quot; width=&quot;777&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;i&gt;&lt;span style=&quot;text-align: center; color: rgb(163, 102, 255); font-size: 18pt;&quot;&gt;해커톤이란?&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;i&gt;&lt;span style=&quot;color: rgb(163, 102, 255);&quot;&gt;해커톤(Hackathon)은 해킹(hacking)과 마라톤(marathon)의 합성어이다. 소프트웨어 개발 분야의 프로그래머나 그래픽 디자이너, UI 설계자 등 다양한 분야의 전문가들이 모여 제한된 시간동안 아이디어를 도출하고 비즈니스 모델 등의 형태로 결과물을 만들어 내는 일종의 대회를 말한다. 해커톤은 프로젝트를 완성하기까지의 업무 과정을 24시간 혹은 48시간으로 압축한 것이라 보면 된다. 다만 보다 신선한 아이디어를 구상하기 위해 다양한 전문가들과 자유롭게 토론하며 관습적인 업무 방식을 의도적으로 벗어나려 한다는 점에서 일상적 업무와는 다르다.&lt;/span&gt;&lt;/i&gt;&lt;/div&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;홍콩&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;비즈니스가 지속적으로 성장하는 곳&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;홍콩 제1의 통신 기업인 스마톤(Smartone)이 주최한 '스마톤 해커톤 2018'의 주제는 '스마트 라이프, 스마트 프로퍼티(Smart life, Smart property)'였다. 5개국이상 100여 명의 인원이 참가하였고, 총 25개 팀이 경합을 벌인 제법 규모가 큰 대회였다. 통신 기업에서 주최한 해커톤임을 감안한다면 참가자들이 작품이 모바일 앱에 치중되었을 것이라 생각하기 쉬우나 대회에서 목격한 아이디어들은 홍콩이라는 도시의 특성을 반영하였다는 공통점만 있을 뿐 소프트웨어와 하드웨어의 구분 없이 다양한 기술과 접목되는 양상이었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;width: 800px; height: 277px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile6.uf.tistory.com%2Fimage%2F99DCA1365C46FC2103AC3A&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99DCA1365C46FC2103&quot; filemime=&quot;image/jpeg&quot; filename=&quot;홍콩 파노라마.jpg&quot; height=&quot;277&quot; original=&quot;yes&quot; style=&quot;width: 800px; height: 277px;&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;스마톤 해커톤의 이러한 다양성은 홍콩이라는 도시가 지닌 특성에서 어느 정도 기인한다고 볼 수 있다. 홍콩은 24년째 경제자유지수 1위를 유지하고 있는 도시이다. 경제자유지수란 미국 보수 성향의 정책 연구소인 해리티지재단(The Heritage Foundation)이 매년 각국의 재정 상태, 금융 규제 정책, 무역 정책 등을 기준으로 측정한 지표로서 국가별 기업들의 경제활동이 얼마나 자유로운지를 가늠해 볼 수 있는 척도이다. 조사가 시작된 1995년 이래로 선두 자리를 지키고 있는 홍콩은 세금과 제도적인 측면에서 그만큼 사업 편의설을 갖추고 있는 도시라 볼 수 있다. 덕분에 아시아를 비롯하여 다양한 국가의 인재들이 사업을 위해 홍콩으로 모여들고 있으며 지엽적 조건에 갇히지 않는 글로벌한 트랜드를 경험할 수 있다.&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center; font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;아이디어 기획&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;에서&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;개발까지&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번 해커톤의 주제가 스마트한 도시생활에 초점이 맞춰진 만큼 비즈니스 모델 구상에 앞서 홍콩이라는 도시의 특성을 파악해야 했다. 우리가 주목한 것은 홍콩의 주택난이었다. 홍콩은 2000년대 이후 중국 본토인의 부동산 투자가 늘면서 부동산 가격이 급격하게 폭등했고, 비정상적인 주택 가격으로 인해 심각한 주택난에 시달리고 있었다. 공공 임대 주택을 배정받으려면 최소 몇년을 대기해야 할 정도라고 한다. 우리는 이러한 도시 생활을 문제점을 어떤한 아이디어와 기술로 개선시킬 수 있을지 고민하였다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:790px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile3.uf.tistory.com%2Fimage%2F99323C375C46FE4615D7D5&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99323C375C46FE4615&quot; filemime=&quot;image/jpeg&quot; filename=&quot;홍콩의 일반적인 아파트2.jpg&quot; height=&quot;380&quot; width=&quot;790&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;글로벌한 해커톤의 진면목을 경험해 보고 싶다면 대회장에서 자신의 전문성이나 아이디어를 홍보하여 원하는 팀에 합류하거나 직접 팀을 꾸릴 수도 있다. 다만 개발 과정에서 자신의 의견을 적극 반영하려면 기본적으로 영어에 능통해야 한다. 자유롭게 소통하는 일이 부담스럽고 경험보다는 개발에 집중하고 싶다면 팀을 미리 구성해서 참가하는 방법을 추천한다. 나는 대학 동기 2명, 대학 후배 2명과 함께 미리 팀을 구성하여 참가하였다. 팀원들을 홍콩행 비행기에 오르게 하기까지 긴 설득의 과정을 거쳐야 했지만 익숙한 구성원들 덕분에 한결 수월하게 개발 작업에 임할 수 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;주택난이라는 문제 상황을 보다 구체화시킨 끝에 주거 공간 관리를 위한 데이터 기반의 챗봇 시스템을 개발&lt;/b&gt;하기로 했다. 홍콩의 주상복합이나 아파트에서는 관리 공지사항을 아직도 전화나 엘리베이터의 게시판을 통해 전달하고 있었다. 주거인과 관리인이 보다 쉽게 소통할 수 있도록 공지사항을 챗봇 플랫폼을 통해 관리하고, 이 과정에서 나온 데이터들을 모아 추후 관리 포인트를 예측하거나 예산을 책정할 수 있도록 돕는 시스템을 개발하기로 했다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 355px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F99E19F445C47006C174B1C&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99E19F445C47006C17&quot; filemime=&quot;image/jpeg&quot; filename=&quot;해커톤 결과물 특징 ppt.png&quot; height=&quot;355&quot; original=&quot;yes&quot; style=&quot;width: 500px; height: 355px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;대회장 근처의 공원을 산책하고, 맥도날드에서 점심을 즐기며 자유로운 분위기 속에서 비즈니스 모델을 구상한 뒤에는 본격적인 개발의 시간이 찾아왔다. 먼저 챗봇 기반의 NLP, Chat-flow 등의 기술 개발 진행 여부, 사용할 서버와 클라이언트의 종류를 고민하였다. 최종적으로 아마존 웹 서비스(Amazon Web Services, AWS)의 챗봇인 렉스(Lex)를 사용하여 NLP와 Chat-flow를 해결하기로 했고, 아마존 웹 서비스의 EC2 서버와 아파치(Apache) 기반의 html 정적 페이지를 사용하기로 했다. 5명의 팀원 모두가 열정을 불태우며 뜬눈으로 지새운 홍콩의 밤이었다.&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;text-align: center; font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;심사위원들&lt;/span&gt;&lt;span style=&quot;text-align: center; font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;과&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;함께 고민하&lt;/span&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;홍콩 해커톤 심사 과정에서 가장 인상적이었던 것은 아이디어를 바라보는 심사위원들의 시각이었다. 심사위원들은 새로운 아이디어가 사회에 미칠 영향이나 효과를 가늠하기 어렵다는 이유로 보수적인 관점에서 아이디어를 평가하기 쉽다. 그러나 &lt;b&gt;홍콩 해커톤의 심사위원들은 아이디어의 성장 가능성에 주목하고 심지어 아이디어가 미래에 미칠 영향에 대해 참가자들과 함께 고민하고 이야기하는 데 상당 시간을 할애&lt;/b&gt;하였다. 덕분에 참가자들의 비즈니스 모델은 심사를 통해 축소되는 것이 아니라 마치 컨설팅을 받은 것처럼 새로운 진출 영역을 발견하게 되거나 한 단게 발전하는 모습을 보였다. &lt;b&gt;다소 권위적이고, 기업의 홍보 용도로 적합한 아이디어가 아니라면 큰 점수를 주지 않는 국내 해커톤 심사와는 다른 모습&lt;/b&gt;이었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;참가자 중에 비전문가들이 많았다는 점도 인상적이었다. 심지어 아빠, 엄마, 아이로 구성된 가족 단위의 팀도 만날 수 있었다. 아이디어가 있고 그것을 실현시키고자 하는 의지만 있다면 누구든 해커톤에 참가할 수 있었다. 10살 남짓한 아이와 함께 즐거운 얼굴로 단상에 올라 아이디어를 발표하는 모습을 보면서 우리나라에도 보다 자유로운 해커톤 문화가 정착되었으면 좋겠다는 생각이 들었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:793px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile6.uf.tistory.com%2Fimage%2F9911B9415C46FE8811B44B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9911B9415C46FE8811&quot; filemime=&quot;image/jpeg&quot; filename=&quot;해커톤 발표.jpg&quot; height=&quot;373&quot; width=&quot;793&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;관찰력과 아이디어만 있&lt;/span&gt;&lt;span style=&quot;font-size: 18pt; color: rgb(70, 65, 217);&quot;&gt;다면&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;준비완료!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번 대회에서 1등을 수상한 작품은 홍콩 공원에 비치된 애견용 배변 비닐 제공 장치를 사물인터넷에 연결시킨 서비스였다. 홍콩, 이스라엘, 중국 사람으로 이루어진 이 팀은 배변 비닐 제공 장치에 QR코드나 NFC 모듈을 연결시켜 견주가 편리하게 장치를 찾을 수 있게 하고, 공원 관리인은 사물인터넷 데이터를 사용하여 공원을 효과적으로 관리할 수 있도록 했다. 이 팀의 발표를 듣는 순간 홍콩 공원에서 해당 장치를 무심하게 지나쳤던 기억이 떠올랐다. &lt;b&gt;효과적인 아이디어란 새롭고 신기한 것에서 시작되는 것이 아니라 기존의 것을 세심하게 관찰하는 과정에서 나온다는 것을 다시 한번 깨닫는 순간&lt;/b&gt;이었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;많은 사람이 내세울 기술이 없다는 이유로 해커톤 참가를 포기한다. 그러나 해커톤에 있어 기술은 자신의 아이디어를 구체화하기 위한 하나의 준비물일 뿐이다. 그러니 아이디어가 있다면 주저말고 도전해 보자. 당신의 관찰력과 아이디어에 반해 팀을 이루고 싶어 하는 개발자, 디자이너들을 만나게 될지도 모르니까.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:795px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile22.uf.tistory.com%2Fimage%2F9917ED415C46FF511CA788&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9917ED415C46FF511C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;해커톤에 참석한 우리팀.jpg&quot; height=&quot;485&quot; width=&quot;795&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Hackathon</category>
<author>circlezero AndersonChoi</author>
<guid>https://blog.voidmainvoid.net/189</guid>
<comments>https://blog.voidmainvoid.net/189#entry189comment</comments>
<pubDate>Tue, 22 Jan 2019 20:39:11 +0900</pubDate>
</item>
<item>
<title>[Stream Process as a Platform] Netflix의 실시간 스트림 처리 플랫폼 Keystone 소개</title>
<link>https://blog.voidmainvoid.net/187</link>
<description>&lt;p&gt;아래 포스트는 &lt;a href=&quot;https://medium.com/netflix-techblog/keystone-real-time-stream-processing-platform-a3ee651812a&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Keystone Real-time Streaming Processing Platform(medium)&lt;/a&gt;을 읽고 정리한 글입니다.&lt;/p&gt;&lt;p&gt;원글 글쓴이 : &lt;a href=&quot;https://www.linkedin.com/in/zhenzhong-xu-0243003/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Zhenzhong Xu&lt;/a&gt; in Real-time Data Infrastructure team&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Keystone Stream Processing Platform&lt;/b&gt;은 넷플릭스의 Data-driven culture을 가능케한&amp;nbsp;Data backbone 이자 infrastructure의 필수적인 부분을 뜻한다. Netflix Keystone은 2015년 기준, 8,000,000tps의 데이터를 처리하고 있으며 약 1PB 양의 데이터를 처리하고 있다.&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;
&lt;br /&gt;&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/ft9NKKuqrkdIz4&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;&quot;&gt;오늘날 Keystone Platform은 두가지의 핵심 서비스를 제공한다.&lt;/p&gt;&lt;h3&gt;1) Data Pipeline&lt;/h3&gt;&lt;p&gt;Routing service, Messaging service를 통해 Data의 producing, collecting, processing, aggregating 역할을 하며, microservice event를 실시간으로 전달해주기도 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;2) Stream Processing as a Service(SPaaS)&lt;/h3&gt;&lt;p&gt;사용자들이 Stream processing application을 빌드하고 커스텀하게 운영할 수 있도록 제공한다. 또한 플랫폼에서 Data scale, operation, domain expertise를 제공하여 사용자들은&amp;nbsp;Application logic에 집중하도록 도와준다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:679px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F992DCC3B5C36D5651E97A3&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/992DCC3B5C36D5651E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;netflix stream platform keystone.png&quot; height=&quot;377&quot; width=&quot;679&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;그림. 넷플릭스 키스톤 파이프라인&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제, 상기 그림과 같은&amp;nbsp;Keystone platform을 설계하기 위해 직면했던&lt;b&gt; &lt;span style=&quot;color: rgb(5, 0, 153);&quot;&gt;도전과제(challenges)&lt;/span&gt;&lt;/b&gt;와 &lt;b&gt;&lt;span style=&quot;color: rgb(5, 0, 153);&quot;&gt;설계원칙(Design principle)&lt;/span&gt;&lt;/b&gt;을 살펴보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span style=&quot;color: rgb(5, 0, 153);&quot;&gt;Challenges&lt;/span&gt;&lt;/h1&gt;&lt;div&gt;Netflix Keystone과 같이 대규모 데이터 플랫폼을 운영하기 위해서는 많은 장애물이 발생하고 이를 극복해나가야 한다. Netflix에서 keystone을 운영하기 위한 도전과제를 아래와 같이 정의하였다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;1. Scale&lt;/h2&gt;&lt;p&gt;넷플릭스 서비스는 약 190개국의 1억 3천만 구독자가 사용한다. 데이터 스트리밍 플랫폼은 &lt;b&gt;하루에 1조번 이상의 event와 페타바이트(petabyte)단위의 데이터&lt;/b&gt;를 처리하게 된다. 그러므로 구독자가 늘어남에 따라 Keystone platform은&amp;nbsp;scale out되는 구조를 가져야 한다.&lt;/p&gt;&lt;h2&gt;2. Diverse Use-cases&lt;/h2&gt;&lt;p&gt;&lt;b&gt;Keystone Routing Service&lt;/b&gt; : 이 서비스는 사용자의 요구에 따라 입수되는 이벤트를 라우팅하는 역할을 한다. 각 라우팅된 이벤트들은 병렬로 스트리밍 프로세싱 처리 된다. 사용자는 선택적으로 해당 이벤트들에 대해&amp;nbsp;filter 혹은 aggregation 가능하다. 입수된 데이터들은 batch/stream processing을 위해 storage에 저장된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Stream Processing as a Service&lt;/b&gt;: SPaaS 플랫폼은 2017년부터 넷플릭스에서 사용되었다. 아직 성숙되지 않은 플랫폼이지만 아래와 같이 몇가지 고려해야할 사항이 있다.(Job state, Job Complexity, Traffic pattern, Failure recovery 등)&lt;/p&gt;&lt;h2&gt;3. Multi-tenancy&lt;/h2&gt;&lt;p&gt;Keystone은 수천개의 스트리밍 작업을 지원하면서 데이터 전달, 분석을 수행하고 microservice architecture pattern을 돌아가게 한다. 이러한&amp;nbsp;스트리밍 작업의 다양한 특성에도 안정적으로 데이터플랫폼을 운영하려면,&amp;nbsp;&lt;b&gt;사용자들에게 의미있는 서비스 수준을 보장하기 위해 infrastructure level에서 실행&amp;amp;운영의 격리가 필요하며, 공유 자원의 overhead를 최소화&lt;/b&gt; 해야한다.&lt;/p&gt;&lt;h2&gt;4. Elasticity&lt;/h2&gt;&lt;p&gt;보통 스트림의 트래픽 패턴은 고정적이지만, &lt;b&gt;예상치 못한 급격한 트래픽 변화에 따른 시스템 자동 조정 및 대응&lt;/b&gt;이 필요하다.&lt;/p&gt;&lt;h2&gt;5. Cloud Native Resiliency&lt;/h2&gt;&lt;p&gt;넷플릭스의 마이크로서비스들은 모두 cloud service에 올라가 있다. &lt;b&gt;Cloud service로 인한 네트워크 장애, 인스턴스 장애, regional disaster failure등 모든 단계에서 장애를 모니터링 탐지 할 수 있는 시스템을 설계&lt;/b&gt;해야한다.&lt;/p&gt;&lt;h2&gt;6. Operation overhead&lt;/h2&gt;&lt;p&gt;Keystone은 수천개의 라우팅 작업과 스트리밍 애플리케이션을 서비스한다. 모든 스트림을 수동으로 관리하게 되면 플랫폼팀에 의존하게 되므로, 운영하는데 비용이 증가하게된다. 그러므로, 사용자는 스트리밍 서비스의 각 job에 대해 lifecycle을 명시해야하며, &lt;b&gt;인프라는 가능한한 자동화 해야한다&lt;/b&gt;.&lt;/p&gt;&lt;h2&gt;7. Agility&lt;/h2&gt;&lt;p&gt;넷플릭스는 &lt;b&gt;변경사항에 대해 하루에도 여러번 신속하게 개발하고 배포 &lt;/b&gt;할 수 있기를 원한다. 또한 사용자도 또한 동일한 수준으로 서비스를 자신있게 사용 할 수 있도록 플랫폼을 제공해주고자 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;&lt;span style=&quot;color: rgb(5, 0, 153);&quot;&gt;Platform Mindset &amp;amp; Design &lt;/span&gt;&lt;span style=&quot;color: rgb(5, 0, 153);&quot;&gt;Principle&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;Netflix Keystone 플랫폼의 주요 목표 중 하나는 다른 