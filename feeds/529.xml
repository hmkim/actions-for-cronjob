<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>꿀벌개발일지</title>
<link>https://ohgyun.com/</link>
<description>천천히, 그러나 끊임없이.</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 09:47:31 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>ohgyun</managingEditor>
<image>
<title>꿀벌개발일지</title>
<url>http://cfile9.uf.tistory.com/image/26683A49563F7451231C83</url>
<link>https://ohgyun.com</link>
<description>천천히, 그러나 끊임없이.</description>
</image>
<item>
<title>Error: pg_config executable not found</title>
<link>https://ohgyun.com/787</link>
<description>&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;발생일:&lt;/span&gt; 2019.04.05&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;키워드:&lt;/span&gt; psycopg2, pg_config&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;문제:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;얼마 전, 파이썬 배치 작업들이 모두 실패했다.&lt;/div&gt;
&lt;div&gt;오류 문구는 아래와 같다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: #005493;&quot;&gt;Collecting&amp;nbsp;psycopg2&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;Using&amp;nbsp;cached&amp;nbsp;https://files.pythonhosted.org/packages/c7/ca/75236b17f1b951950ffc55d657c5aa408d3d0327a1b6c4c0f7cb16ef7e7b/psycopg2-2.8.tar.gz&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Complete&amp;nbsp;output&amp;nbsp;from&amp;nbsp;command&amp;nbsp;python&amp;nbsp;setup.py&amp;nbsp;egg_info:&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;running&amp;nbsp;egg_info&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;creating&amp;nbsp;pip-egg-info/psycopg2.egg-info&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;writing&amp;nbsp;pip-egg-info/psycopg2.egg-info/PKG-INFO&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;writing&amp;nbsp;dependency_links&amp;nbsp;to&amp;nbsp;pip-egg-info/psycopg2.egg-info/dependency_links.txt&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;writing&amp;nbsp;top-level&amp;nbsp;names&amp;nbsp;to&amp;nbsp;pip-egg-info/psycopg2.egg-info/top_level.txt&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;writing&amp;nbsp;manifest&amp;nbsp;file&amp;nbsp;'pip-egg-info/psycopg2.egg-info/SOURCES.txt'&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Error:&amp;nbsp;pg_config&amp;nbsp;executable&amp;nbsp;not&amp;nbsp;found.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pg_config&amp;nbsp;is&amp;nbsp;required&amp;nbsp;to&amp;nbsp;build&amp;nbsp;psycopg2&amp;nbsp;from&amp;nbsp;source.&amp;nbsp;&amp;nbsp;Please&amp;nbsp;add&amp;nbsp;the&amp;nbsp;directory&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;containing&amp;nbsp;pg_config&amp;nbsp;to&amp;nbsp;the&amp;nbsp;$PATH&amp;nbsp;or&amp;nbsp;specify&amp;nbsp;the&amp;nbsp;full&amp;nbsp;executable&amp;nbsp;path&amp;nbsp;with&amp;nbsp;the&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;option:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;python&amp;nbsp;setup.py&amp;nbsp;build_ext&amp;nbsp;--pg-config&amp;nbsp;/path/to/pg_config&amp;nbsp;build&amp;nbsp;...&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;or&amp;nbsp;with&amp;nbsp;the&amp;nbsp;pg_config&amp;nbsp;option&amp;nbsp;in&amp;nbsp;'setup.cfg'.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If&amp;nbsp;you&amp;nbsp;prefer&amp;nbsp;to&amp;nbsp;avoid&amp;nbsp;building&amp;nbsp;psycopg2&amp;nbsp;from&amp;nbsp;source,&amp;nbsp;please&amp;nbsp;install&amp;nbsp;the&amp;nbsp;PyPI&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'psycopg2-binary'&amp;nbsp;package&amp;nbsp;instead.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For&amp;nbsp;further&amp;nbsp;information&amp;nbsp;please&amp;nbsp;check&amp;nbsp;the&amp;nbsp;'doc/src/install.rst'&amp;nbsp;file&amp;nbsp;(also&amp;nbsp;at&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;http://initd.org/psycopg/docs/install.html&amp;gt;).&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;----------------------------------------&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #005493;&quot;&gt;Command&amp;nbsp;&quot;python&amp;nbsp;setup.py&amp;nbsp;egg_info&quot;&amp;nbsp;failed&amp;nbsp;with&amp;nbsp;error&amp;nbsp;code&amp;nbsp;1&amp;nbsp;in&amp;nbsp;/private/var/folders/7m/gd92t9wx0nl_t8yw70ymhl0c0000gn/T/pip-install-t4927zna/psycopg2/&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;왜 그럴까?&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;해결책:&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div&gt;psycopg2 관련 모듈이 업데이트 되면서 postgresql 바이너리를 찾지 못하는 문제인 것 같다.&lt;/div&gt;
&lt;div&gt;postgresql 관련 모듈을 다시 설치하는 것으로 해결했다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;맥에서는,&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: #005493;&quot;&gt;$ brew install postgresql&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;CentOS에서는,&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: #005493;&quot;&gt;$&amp;nbsp;sudo yum install postgresql postgresql-devel python-devel&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;참고:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://stackoverflow.com/questions/11618898/pg-config-executable-not-found&quot;&gt;https://stackoverflow.com/questions/11618898/pg-config-executable-not-found&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</description>
<category>Python</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/787</guid>
<comments>https://ohgyun.com/787#entry787comment</comments>
<pubDate>Sat, 13 Apr 2019 21:55:35 +0900</pubDate>
</item>
<item>
<title>nginx: 허용하지 않은 도메인에서 접속이 되는 경우</title>
<link>https://ohgyun.com/786</link>
<description>&lt;div&gt;&lt;b&gt;발생일:&lt;/b&gt; 2017.12.06&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;키워드:&lt;/b&gt; nginx, default_server, 기본 server&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;문제:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;엥?? 도메인이 다른 전혀 관련 없는 웹페이지가 우리 서비스를 프록시로 걸어 제공하고 있었다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;어처구니가 없는 행동이지만, 그 전에 왜 nginx는 도메인이 다른 접근에 응답하고 있었던 걸까?&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;nginx 설정의 서버 블럭에는 아래와 같이 server_name 이 명시되어 있었다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;server {&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; server_name ohgyun.com;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; ...&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;}&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;해결책:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;nginx의 &quot;첫 번째&quot; 서버 블럭은 server_name 이 매칭되지 않았을 때 동작하는 기본 서버 블럭이다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;서버 블럭을 하나만 정의했었기 때문에, 도메인이 매칭되지 않았을 때에도 동일하게 첫 번째 블럭이 실행된 것이 문제였다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;아래와 같이 기본 서버 블럭을 정의하고, 404를 리턴하게 한 것으로 해결했다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;# Default server&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;server {&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return 404;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;}&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;server {&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;server_name ohgyun.com;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; ...&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span&gt;}&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;응답으로 &lt;a href=&quot;https://httpstatuses.com/444&quot;&gt;444&lt;/a&gt;를 리턴하면, 404보다는 네트워크 데이터를 좀 더 절약할 수 있다고 한다.&lt;/div&gt;
&lt;div&gt;우린 AWS ELB를 쓰고 있었는데, 444로 리턴했더니 502 Bad Gateway로 응답한다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;확인해보니, 444는 nginx 확장 코드라 아직 ELB에서 지원하지 않는다고 한다.&lt;/div&gt;
&lt;div&gt;404로 리턴하도록 했다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;참고:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://stackoverflow.com/a/43128186/954292%0A&quot;&gt;https://stackoverflow.com/a/43128186/954292&lt;/a&gt;&lt;/div&gt;</description>
<category>nginx</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/786</guid>
<comments>https://ohgyun.com/786#entry786comment</comments>
<pubDate>Sat, 13 Apr 2019 21:45:35 +0900</pubDate>
</item>
<item>
<title>nginx: 로그 때문에 서버 용량이 찼을 때 처리 방법</title>
<link>https://ohgyun.com/785</link>
<description>&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;발생일:&lt;/span&gt; 2017.07.31&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;키워드:&lt;/span&gt; nginx, 용량, 로그 용량, copytruncate, logrotate, 로그 로테이트&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;문제:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;서버 용량이 가득 차서 리스타트에 실패하는 문제가 발생했다.&lt;/div&gt;
&lt;div&gt;nginx 로그 때문으로 추측되는데, 실제로 로그 디렉토리 내의 로그 파일의 용량은 문제가 될 만큼 크지 않다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;뭐가 문제일까?&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;해결책:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;nginx 로그는 로테이트해 S3로 업로드한 후에 삭제한다.&lt;/div&gt;
&lt;div&gt;확인해보니, 원인은 로그가 제대로 로테이트되지 않고 프로세스가 삭제된 기존 파일을 계속 물고 있었기 때문이다.&lt;/div&gt;
&lt;div&gt;로그 로테이트 옵션에 copytruncate 을 추가하는 것으로 해결했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래는 작업과 관련된 스크립트:&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# 현재 머신의 용량을 확인해본다&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;df -h&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# 어떤 디렉토리에서 가장 많이 차지하는지 확인한다&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;sudo du -hs * | sort -hr | head -n 10&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# nginx 프로세스가 삭제된 파일을 물고 있는지 확인한다 (이게 원인이었음)&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;lsof / | grep deleted&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# nginx 리로드해서 삭제된 물고 있는 파일을 정리한다&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;sudo /etc/init.d/nginx reload&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# nginx 로그로테이트 설정 파일 보기&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;sudo cat /etc/logrotate.d/nginx&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# nginx 로그로테이트 설정 파일에 copytruncate을 추가했다&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;sudo vi /etc/logrotate.d/nginx&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# 디버깅 모드로 로그로테이트 실행하기&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;sudo logrotate -d /etc/logrotate.d/nginx&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;# 강제로 로그로테이트 실행하기&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;sudo logrotate -f /etc/logrotate.d/nginx&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;du + sort 로 읽기 편한 사이즈로 표시하면서 정렬하는 방법&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://serverfault.com/questions/62411/how-can-i-sort-du-h-output-by-size&quot;&gt;https://serverfault.com/questions/62411/how-can-i-sort-du-h-output-by-size&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;로그 용량이 기가 단위로 큰 경우엔 copytruncate 동작 중 I/O 블로킹으로 인한 타임아웃이 발생할 수 있다고 한다.&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://brunch.co.kr/@alden/27&quot;&gt;https://brunch.co.kr/@alden/27&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>nginx</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/785</guid>
<comments>https://ohgyun.com/785#entry785comment</comments>
<pubDate>Tue, 26 Mar 2019 11:48:52 +0900</pubDate>
</item>
<item>
<title>clasp: 구글 앱스 스크립트 로컬에서 개발하기</title>
<link>https://ohgyun.com/784</link>
<description>&lt;div&gt;
&lt;b&gt;발생일:&lt;/b&gt; 2019.03.02&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;b&gt;키워드:&lt;/b&gt; Google Apps Script, 구글 앱스 스크립트, clasp&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;문제:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;구글 앱스 스크립트를 로컬에서 개발하고 싶다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;기존엔 파일이 크지 않아 온라인에서 수정하거나, 수정 사항이 좀 있을 땐 에디터에 복사해서 수정하고 붙여넣곤 했다.&lt;/div&gt;
&lt;div&gt;규모가 조금 커지다보니 더 이상 귀찮아서 못하겠다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;뭔가 도구가 있을 테다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;해결책:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;유후. 로컬에서 개발하고 배포할 수 있는 clasp 라는 도구가 있다. 진작에 찾아볼 걸.&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://github.com/google/clasp&quot;&gt;https://github.com/google/clasp&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;npm 으로 바로 설치할 수 있다.&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; $&amp;nbsp;sudo npm i @google/clasp -g&lt;/span&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;구글 계정에서 Apps API 권한을 허용해준 다음,&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;https://script.google.com/home/usersettings&quot;&gt;https://script.google.com/home/usersettings&lt;/a&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;터미널에서 바로 로그인하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp login&lt;/font&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;난 이미 프로젝트가 있어서, 로컬에 디렉토리를 만들어 클론했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp clone [스크립트 ID]&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;한 번 클론한 이후에 원격의 수정 사항을 가져오려면 pull만 하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp pull&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;로컬에서 파일을 수정한 후에, push 하면 된다.&lt;/div&gt;
&lt;div&gt;push 후 온라인 스크립트 에디터에서 확인해보려면 새로고침 한 번 해야한다.ㅎㅎ&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp push&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;수정 사항으로 새 버전을 따거나 바로 배포할 수도 있다.&lt;/div&gt;
&lt;div&gt;간단하게 deploy만 하면, 신규 버전이 따지면서 배포도 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp deploy&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;와. 정말 편하다.&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;온라인 스크립트 에디터를 바로 열 수 있기도 하고!&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp open&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;버전 관리는 별도로 git 으로 하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;clone 한 스크립트 아이디는&lt;font color=&quot;#005493&quot;&gt; .clasp.json&lt;/font&gt; 파일에 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;로컬 파일이 변경될 때마다 자동으로 push 하고 싶다면, -w (--watch) 옵션을 쓰면 된다. 편하다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp -w&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;로컬에서 함수를 실행할 땐, run 명령을 쓰면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp run [함수명]&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;git 과 비슷하게 status 명령이 있지만 의미는 다르다.&lt;/div&gt;
&lt;div&gt;이 명령은 서버에 푸시할 때 포함되는 파일의 목록을 출력해준다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ clasp status&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;deploy 한다고 변경 내용이 서버에 push 되는 건 아니니 주의한다.&lt;/div&gt;
&lt;div&gt;수정 전에 push -w 을 걸어두는 게 편하겠다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;또한, deploy 한다고 웹앱이 신규로 퍼블리싱 되는 것도 아니다.&lt;/div&gt;
&lt;div&gt;기대한 대로라면 잘 되어야 할 것 같고, &lt;a href=&quot;https://github.com/google/clasp/issues/63&quot;&gt;깃헙 이슈에서 논의도 되었지만&lt;/a&gt; 아직 해결되지 않은 듯 싶다.&lt;/div&gt;
&lt;div&gt;좀 번거롭긴 한데, deploy 후에 퍼블리싱 과정을 챙겨줘야겠다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</description>
<category>Etc</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/784</guid>
<comments>https://ohgyun.com/784#entry784comment</comments>
<pubDate>Sat, 02 Mar 2019 03:53:48 +0900</pubDate>
</item>
<item>
<title>npm 설치 오류: code EBADKEY</title>
<link>https://ohgyun.com/783</link>
<description>&lt;div&gt;
&lt;b&gt;발생일:&lt;/b&gt; 2019.03.01&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;b&gt;키워드:&lt;/b&gt; node, npm&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;문제:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;code EBADKEY&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;invalid config key requested: config&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;npm install 할 때, 위 문구가 나오면서 설치되지 않는다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;해결책:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;검색해서 몇 가지 방법을 시도해봤는데, 잘 되지 않았다.&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;노드 관련 파일을 모두 제거 후에 다시 설치했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;- 루트 node_modules 제거&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; npm 루트 경로는 아래 명령으로 찾으면 된다&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ npm root -g &amp;nbsp;# npm&amp;nbsp;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;- node 제거&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; 노드 파일은 아래 명령으로 찾으면 된다&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ type node&amp;nbsp;&lt;/font&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;- n 으로 노드 신규 설치&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; $&amp;nbsp;curl -L &lt;a href=&quot;https://git.io/n-install&quot;&gt;https://git.io/n-install&lt;/a&gt; | bash&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;오랜만에 깨끗해졌다~ ㅎㅎ&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</description>
<category>Javascript</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/783</guid>
<comments>https://ohgyun.com/783#entry783comment</comments>
<pubDate>Sat, 02 Mar 2019 03:53:16 +0900</pubDate>
</item>
<item>
<title>Node: String 크기 제한에 의한 RangeError</title>
<link>https://ohgyun.com/782</link>
<description>&lt;en-note style=&quot;zoom: 1;&quot;&gt;&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;발생일:&lt;/span&gt; 2018.10.22&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;키워드:&lt;/span&gt; JSON.stringify, RangeError, Invalid string length,&amp;nbsp;max-old-space-size, 메모리 부족, RangeError&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;문제:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;배치 작업 과정 중에 아래와 같은 오류가 발생하면서 프로세스가 종료됐다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;RangeError: Invalid string length&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at JSON.stringify (&amp;lt;anonymous&amp;gt;)&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;메모리 이슈인 것 같아 노드의 max-old-space-size 파라미터로 힙 사이즈를 필요한 만큼 지정해 실행했는데도 동일하게 발생한다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;왜 그런 걸까?&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;해결책:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;확인해보니, V8은 구조적 문제로 객체의 크기를 1.9기가로 제한하고 있다고 한다.&lt;/div&gt;
&lt;div&gt;사이즈가 큰 객체를 stringify 하는 과정에서 문자열의 크기가 지나치게 커진 것이 문제였다.&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래 코드를 실행하면, 위 오류를 재현할 수 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;let str = 'a';&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (let i = 0; i &amp;lt; 30; i++) {&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str += str;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;위 예제에서는 단순히 문자열을 더한 것이지만,&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; JSON.stringify(bigObject);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;와 같이 사이즈가 큰 객체를 변경 시 JSON Syntax를 포함한 변환된 문자열의 크기가 허용치를 넘어서면서 발생할 수도 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;해결하려면,&lt;/div&gt;
&lt;div&gt;- 객체를 작은 사이즈로 나누거나&lt;/div&gt;
&lt;div&gt;- 스트림으로 직렬화하는 방법으로 우회할 수 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;# JSON을 스트림으로 처리&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;JSON을 스트림으로 처리하는 용도로 JSONStream 모듈이 있다.&lt;/div&gt;
&lt;div&gt;
&lt;a href=&quot;https://www.npmjs.com/package/JSONStream&quot;&gt;https://www.npmjs.com/package/JSONStream&lt;/a&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래와 같은 식으로 사용하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const parser = JSONStream.stringifyObject();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.pipe(fs.createWriteStream('output'));&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; parser.write(['key1', 'value1']);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.write(['key2', 'value2']);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.end();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;스트림의 종료 이벤트는 좀 헷갈리는데,&amp;nbsp;&lt;/div&gt;
&lt;div&gt;Readable 은 end 이벤트를, Writable 은 finish 이벤트를 사용하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래는 읽고 쓰는 샘플 예제이다.&lt;/div&gt;
&lt;div&gt;(유틸리티 모듈로&amp;nbsp;undescore 를, 프라미스 모듈로 Q를 썼다.)&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const fs = require('fs');&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const JSONStream = require('JSONStream');&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const dumpJson = function (obj, outputFile) {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const deferred = Q.defer();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const parser = JSONStream.stringifyObject();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const output = fs.createWriteStream(outputFile);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.pipe(output);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_.each(obj, (value, key) =&amp;gt; {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.write([key, value]);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.end();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;output.on('finish', () =&amp;gt; {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;deferred.resolve(output);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return deferred.promise;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const restoreJson = function (inputFile) {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const deferred = Q.defer();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const input = fs.createReadStream(inputFile);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const parser = JSONStream.parse('$*');&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const obj = {};&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;input.pipe(parser);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.on('data', (data) =&amp;gt; {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;obj[data.key] = data.value;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;parser.on('end', () =&amp;gt; {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;deferred.resolve(obj);&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return deferred.promise;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;const obj = {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;foo: '1',&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bar: '2',&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;baz: [1, 2, 3]&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return dumpJson(obj, 'output.json').then(() =&amp;gt; {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return restoreJson('output.json').then((restored) =&amp;gt; {&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;console.log(_.isEqual(obj, restored));&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;위 문제에서처럼 사이즈가 큰 객체를 메모리를 늘리지 않고 처리하거나,&lt;/div&gt;
&lt;div&gt;event loop을 방해하지 않으면서 처리하고 싶을 때 사용하면 좋다.&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;다만, 기본 파싱보다 느린 것이 단점이다. (대략 10배 정도 느림)&lt;/div&gt;
&lt;div&gt;우린 서버에서도 사용하고 있는데, 큰 사이즈의 데이터를 캐시에 넣고 뺄 때 다른 요청에 방해되지 않게 하는 용도로 사용하고 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;JSON은 사이즈가 커질수록 파싱하는데 시간이 크게 늘어나니, 이런 종류의 데이터를 만들지 않는 것이 가장 좋은 방법일 것 같다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;----&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;# 메모리가 부족한 경우&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;이 외에 단순히 메모리가 부족한 경우엔 아래와 같은 오류가 출력된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;Allocation failed — process out of memory&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;또는,&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;FATAL ERROR: JS Allocation failed - process out of memory&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;또는,&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;--- Last few GCs ---&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[54774:0x103000000]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;95 ms: Mark-sweep 6.2 (15.7) -&amp;gt; 5.6 (15.7) MB, 4.9 / 0.0 ms&amp;nbsp;&amp;nbsp;(average mu = 0.205, current mu = 0.152) allocation failure GC in old space requested&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[54774:0x103000000]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;100 ms: Mark-sweep 5.6 (15.7) -&amp;gt; 5.6 (16.2) MB, 4.8 / 0.0 ms&amp;nbsp;&amp;nbsp;(average mu = 0.110, current mu = 0.004) allocation failure GC in old space requested&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;--- JS stacktrace ---&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;==== JS stack trace =========================================&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;0: ExitFrame [pc: 0x16c79d5dc01d]&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Security context: 0x1bc5a131e681 &amp;lt;JSObject&amp;gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;이런 경우엔 노드 스크립트를 실행할 때, V8의 옵션인 max-old-space-size 파라미터로 힙 사이즈를 필요한만큼 지정해주면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; $ node&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;--max-old-space-size=10240&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt; task.js&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;단위는 MB이다. 즉, 위 코드의 10240은 10GB를 의미한다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://nodejs.org/api/v8.html#v8_v8_getheapspacestatistics&quot;&gt;https://nodejs.org/api/v8.html#v8_v8_getheapspacestatistics&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;----&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;# 메모리가 부족한 경우 (Grunt)&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;우린 태스크 러너로 그런트를 사용하고 있는데, 이럴 땐 노드 옵션을 주고 그런트를 이어서 실행하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;$ &lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;node --max-old-space-size=10240&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt; /usr/bin/local/grunt task.js&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;----&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;# 힙 사이즈 확인&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;힙 사이즈를 확인하려면 v8 모듈을 사용하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;const v8 = require('v8');&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;v8.getHeapStatistics();&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;[&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; ...,&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;{&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;space_name&quot;: &quot;old_space&quot;,&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;space_size&quot;: 3090560,&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;space_used_size&quot;: 2493792,&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;space_available_size&quot;: 0,&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;physical_space_size&quot;: 3090560&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp;&amp;nbsp;},&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; ...&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;]&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;참고:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;- 스택오버플로우:&amp;nbsp;&lt;a href=&quot;https://stackoverflow.com/questions/24153996/is-there-a-limit-on-the-size-of-a-string-in-json-with-node-js&quot;&gt;https://stackoverflow.com/questions/24153996/is-there-a-limit-on-the-size-of-a-string-in-json-with-node-js&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;- 크로미엄 이슈:&amp;nbsp;&lt;a href=&quot;https://bugs.chromium.org/p/v8/issues/detail?id=847&quot;&gt;https://bugs.chromium.org/p/v8/issues/detail?id=847&lt;/a&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;V8의 헤더 파일&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://v8docs.nodesource.com/node-10.6/d8/dcd/classv8_1_1_resource_constraints.html#a62577457df1cfedc707856d865529b53&quot;&gt;https://v8docs.nodesource.com/node-10.6/d8/dcd/classv8_1_1_resource_constraints.html#a62577457df1cfedc707856d865529b53&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;쉬운 예:&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://medium.com/@vuongtran/how-to-solve-process-out-of-memory-in-node-js-5f0de8f8464c&quot;&gt;https://medium.com/@vuongtran/how-to-solve-process-out-of-memory-in-node-js-5f0de8f8464c&lt;/a&gt;&lt;/div&gt;&lt;/en-note&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Javascript</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/782</guid>
<comments>https://ohgyun.com/782#entry782comment</comments>
<pubDate>Tue, 30 Oct 2018 14:44:10 +0900</pubDate>
</item>
<item>
<title>Python: 정규식으로 문자열을 자를 때, 그룹이 포함되어 있는 경우</title>
<link>https://ohgyun.com/781</link>
<description>&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;발생일:&lt;/span&gt; 2017.08.18&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;키워드:&lt;/span&gt; re, 정규식, lookbehind, 그룹, group, regular expression, regex, split&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;문제:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;문자열을 정규식으로 split 할 때, 정규식 구문에 그룹이 포함되어 있었더니 원하는 결과가 나오지 않는다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;왜 그런 걸까?&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;해결책:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;split()으로 전달하는 패턴에 그룹이 있으면, 분할한 결과 뒤에 그룹 매칭값이 붙는다.&lt;/div&gt;
&lt;div&gt;아래 예제를 보면 쉽게 이해할 수 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('-', 'aaa-bbb')&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; -&amp;gt; ['aaa', 'bbb']&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('&lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;(-)&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;', 'aaa-bbb') &amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#008f00&quot;&gt;# 그룹으로 묶음&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; -&amp;gt; ['aaa', &lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;'-'&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;, 'bbb'] &amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#008f00&quot;&gt;# split 결과에 그룹이 포함된다&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('&lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;(-)&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;', 'aaa-bbb-ccc') &lt;/span&gt;&lt;font color=&quot;#008f00&quot;&gt;&amp;nbsp;# 여러 번 잘라질 때도 동일&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; -&amp;gt; ['aaa', &lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;'-'&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;, 'bbb', &lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;'-'&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;, 'ccc']&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('&lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;(-)(x)&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;', 'aaa-xbbb-xccc') &lt;/span&gt;&lt;span style=&quot;color: rgb(0, 143, 0);&quot;&gt;&amp;nbsp;# 그룹이 여러 개인 경우&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; -&amp;gt; ['aaa', &lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;'-', 'x',&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;'bbb', &lt;/span&gt;&lt;span style=&quot;color: rgb(148, 23, 81);&quot;&gt;'-', 'x'&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;, 'ccc']&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;그룹에 포함되지 않게 하려면 ?: 를 넣어주면 된다.&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('(&lt;/span&gt;&lt;font color=&quot;#941751&quot;&gt;?:&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;-)', 'aaa-bbb')&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# 자바스크립트에서도 동일&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;자바스크립트에서도 동일하다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; 'aaa-bbb'.split(&lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;/-/&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt;); //-&amp;gt; ['aaa', 'bbb']&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; 'aaa-bbb'.split(&lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;/(-)/&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt;); //-&amp;gt; ['aaa', &lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;'-'&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt;, 'bbb']&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;그룹이 포함된 정규식 구문으로 split 하는 경우에 원하는 결과가 나오지 않는다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# 글을 문장 단위로 자르기&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;사실 이 문제는 글을 문장 단위로 자르는 코드를 작성하면서 발생했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;예를 들어,&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; &quot;오늘 아마존의 주가는 4.2% 증가했다. 구글은 3.4% 증가했다.&quot;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;와 같은 문장을 첫 문장과 두 번째 문장으로 구분하려고 했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래와 같이 단순히 마침표로만 자를 수도 있는데,&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('\.', text)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;이렇게 하면, 자르는 기준에 4.2%, 3.4%와 같은 소수점도 포함되기 때문에 &lt;a href=&quot;https://medium.com/@iamreadytocommit/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%A0%84%EB%B0%A9%ED%83%90%EC%83%89-%ED%9B%84%EB%B0%A9%ED%83%90%EC%83%89-8c62588c8b8f&quot;&gt;lookbehind&lt;/a&gt; 옵션으로 마치표 앞의 문자는 숫자가 아닌 것만으로 제한했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('(?&amp;lt;=[^0-9])\.', text)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;이때까지 잘 동작했는데, 개행 문자를 정규식 구문에 추가하기 위해 그룹으로 묶었다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('&lt;/span&gt;&lt;font color=&quot;#941751&quot;&gt;(&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;(?&amp;lt;=[^0-9])&lt;/span&gt;&lt;font color=&quot;#941751&quot;&gt;\.|\n)&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;', text)&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;이랬더니, 결과에 마침표가 포함된 거였다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래처럼 그룹에 포함되지 않게 변경하는 것으로 수정했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('(&lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;?:&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt;(?&amp;lt;=[^0-9])\.|\n)', text)&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;그치만 정리하다 보니, 그룹 없이 그냥 캐릭터를 쓰는 게 훨씬 간결하겠네...&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;&amp;nbsp; &amp;nbsp; re.split('&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;(?&amp;lt;=[^0-9])&lt;/span&gt;&lt;font color=&quot;#941751&quot;&gt;[\.|\n]&lt;/font&gt;&lt;span style=&quot;color: rgb(0, 84, 147);&quot;&gt;', text)&lt;/span&gt;
&lt;/div&gt;</description>
<category>Python</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/781</guid>
<comments>https://ohgyun.com/781#entry781comment</comments>
<pubDate>Tue, 30 Oct 2018 14:20:24 +0900</pubDate>
</item>
<item>
<title>CLI로 젠킨스 설정 업데이트하기</title>
<link>https://ohgyun.com/780</link>
<description>&lt;div&gt;
&lt;b&gt;발생일:&lt;/b&gt; 2018.10.29&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;b&gt;키워드:&lt;/b&gt; jenkins, 젠킨스, manage jenkins, reload configuration in command line, 설정 업데이트&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;문제:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;젠킨스의 설정 파일인 config.xml 을 직접 변경하고 나면,&lt;/div&gt;
&lt;div&gt;Manager Jenkin (Jenkins 관리) 메뉴에 들어가서 Reload Configuration from Disk &amp;nbsp;버튼을 눌러야 실행 중인 젠킨스에 반영된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;CLI로 바로 업데이트 할 수 없을까?&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;해결책:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;터미널에서 아래와 같이 호출하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $&amp;nbsp;java -jar jenkins-cli.jar -s [JENKINS_URL]&amp;nbsp;-auth [ID:PW] reload-configuration&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;난 젠킨스가 실행되고 있는 환경에서 바로 실행해서 아래와 같이 localhost 로 호출했다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ java -jar jenkins-cli.jar &lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;-s http://localhost:8080 -auth ${id}:${password}&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt; reload-configuration&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;jenkins-cli.jar 파일은 젠킨스 URL에서 다음 주소로 다운로드 받을 수 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;/jnlpJars/jenkins-cli.jar&amp;nbsp;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;젠킨스가 실행되어 있는 서버의 터미널이라면, 아래처럼 호출하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ curl -O http://localhost:8080//jnlpJars/jenkins-cli.jar &lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# REST API에는 없는 듯&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;우린 &lt;a href=&quot;https://github.com/silas/node-jenkins&quot;&gt;node-jenkins&lt;/a&gt; 클라이언트 모듈을 사용하고 있었는데, 이 라이브러리는 REST API를 호출하는 것 같더라.&lt;/div&gt;
&lt;div&gt;내가 못 찾은 걸 수도 있는데, REST API에 설정 업데이트는 지원하지 않는 것 같다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;잡(job)이나 빌드 설정은 클라이언트 라이브러리를 활용하는 것이 편하다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# 권한 필요&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;설정 업데이트는 젠킨스의 어드민 권한이 있어야 가능하다.&lt;/div&gt;
&lt;div&gt;혹시 권한 문제로 실행되지 않는다면, &lt;font color=&quot;#005493&quot;&gt;Jenkins 관리 &amp;gt; Manage and Assign Role &amp;gt; Assign Roles&lt;/font&gt; 에서 설정해주면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;참고:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://jenkins.io/doc/book/managing/cli/#downloading-the-client&quot;&gt;https://jenkins.io/doc/book/managing/cli/#downloading-the-client&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://stackoverflow.com/questions/34791525/how-to-reload-the-configuration-jenkins-from-the-command-line&quot;&gt;https://stackoverflow.com/questions/34791525/how-to-reload-the-configuration-jenkins-from-the-command-line&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</description>
<category>Etc</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/780</guid>
<comments>https://ohgyun.com/780#entry780comment</comments>
<pubDate>Mon, 29 Oct 2018 21:18:20 +0900</pubDate>
</item>
<item>
<title>AWS Security Group 중첩 이슈 및 정리 팁</title>
<link>https://ohgyun.com/779</link>
<description>&lt;div&gt;
&lt;b&gt;발생일: &lt;/b&gt;2018.04.08&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;b&gt;키워드:&lt;/b&gt; AWS Security Group, 보안 그룹, 시큐리티 그룹, nested security group&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;문제:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;AWS 보안 그룹에 다른 보안 그룹을 추가했는데, 하위 보안 그룹의 룰셋이 상위 보안 그룹에 추가되는 것 같지 않다.&lt;/div&gt;
&lt;div&gt;왜 그런 걸까?&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;해결책:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;보안 그룹 내에 다른 보안 그룹을 추가하는 경우,&lt;/div&gt;
&lt;div&gt;- 하위 보안 그룹의 룰셋이 상위 보안 그룹의 룰셋에 추가되는 것이 아니라,&lt;/div&gt;
&lt;div&gt;- &lt;font color=&quot;#941751&quot;&gt;하위 보안 그룹을 가진 &lt;b&gt;인스턴스들이&lt;/b&gt; 상위 보안 그룹에 액세스&lt;/font&gt;할 수 있게 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;오해하기 쉬워 보인다. @_@&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;참고:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://stackoverflow.com/questions/42871841/can-you-configure-aws-security-groups-to-have-sub-groups-or-nested-groups&quot;&gt;https://stackoverflow.com/questions/42871841/can-you-configure-aws-security-groups-to-have-sub-groups-or-nested-groups&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html&quot;&gt;https://docs.aws.amazon.com/ko_kr/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;AWS: 10 Things You're Probably Doing Wrong as ans Architect&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://labs.eleks.com/2013/11/aws-10-things-youre-probably-doing.html&quot;&gt;https://labs.eleks.com/2013/11/aws-10-things-youre-probably-doing.html&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;종종 보안 설정이 헷갈렸던 이유는, 보안 그룹을 룰셋으로 설정할 때도 있고, 대상 인스턴스의 IP 목록으로 설정하는 경우도 있었기 때문이다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래처럼 정리하면 편리할 것 같다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;- VPC를 대표하는 default 그룹을 생성. default 그룹은 모든 인스턴스가 갖도록 한다.&lt;/div&gt;
&lt;div&gt;- 각 인스턴스의 그룹은 그룹을 대표할 수 있는 이름(예: app, rds, redshift, redis, jenkins-slave 등)을 보안 그룹으로 갖게 한다.&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp; - 즉, 이 보안 그룹은 룰셋인 동시에 해당 인스턴스의 목록이 된다.&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;span&gt;&amp;nbsp; &amp;nbsp; - 해당 보안 그룹의 Inbound 룰에 AWS 인스턴스로부터의 접근 권한을 지정한다.&lt;/span&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp; - 예) 특정 인스턴스의 접근만 허용할 거라면, 해당 보안 그룹을 추가하는 방식으로 넣어준다.&lt;/div&gt;
&lt;div&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;span&gt;&amp;nbsp; &amp;nbsp; - 예) 모든 인스턴스의 접근을 허용할 거라면 default 그룹을 추가한다.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;- VPC 외부의 IP를 명시하는 보안 그룹은 별도로 만들고, (보안 그룹이 아니라) 인스턴스에 지정한다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; - 이 보안 그룹은 외부 IP에 대한 룰셋이므로 별도의 접두사를 둔다.&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 예) ext_office: 사무실 IP 룰 목록&lt;/div&gt;
&lt;div&gt;&amp;nbsp; &amp;nbsp; - 예를 들어, app 인스턴스엔 default, app, ext_office 보안 그룹이 할당되어 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</description>
<category>AWS</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/779</guid>
<comments>https://ohgyun.com/779#entry779comment</comments>
<pubDate>Tue, 23 Oct 2018 18:32:45 +0900</pubDate>
</item>
<item>
<title>Python으로 Alfred Workflow 만들기</title>
<link>https://ohgyun.com/778</link>
<description>&lt;div&gt;
&lt;span style=&quot;font-weight: bold;&quot;&gt;발생일:&lt;/span&gt; 2018.10.20&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;b&gt;키워드:&lt;/b&gt; alfred workflow, 알프레드 워크플로우&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;문제:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;파이썬으로 알프레드 워크플로우 만들기 :)&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;해결책:&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;파이썬으로 워크플로우를 쉽게 만들 수 있게 부트스트랩 라이브러리를 만들어둔 저장소가 있다.&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://github.com/deanishe/alfred-workflow&quot;&gt;https://github.com/deanishe/alfred-workflow&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래는 간단 튜토리얼.&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://www.deanishe.net/alfred-workflow/tutorial_1.html&quot;&gt;http://www.deanishe.net/alfred-workflow/tutorial_1.html&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;논의:&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# 부트스트랩 라이브러리 설치&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;알프레드 워크플로우를 생성한 후에, 해당 디렉토리에서 아래처럼 설치할 수 있다. (&lt;a href=&quot;http://www.deanishe.net/alfred-workflow/installation.html&quot;&gt;설치 가이드 참고&lt;/a&gt;)&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ pip install --target ./workflow Alfred-Workflow&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;----&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# 한글 이슈&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;알프레드는 맥의 기본 버전인 파이썬 2.7 버전을 사용하기 때문에, 고질적인 유니코드 문제가 있다.&lt;/div&gt;
&lt;div&gt;unicodedata 모듈로 아래와 같이 노멀라이징하면 스크립트 필터에서 전달하는 한글 이슈를 해결할 수 있다.&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; import sys&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; import unicodedata&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; reload(sys)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; sys.setdefaultencoding(&quot;utf-8&quot;)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; query = unicodedata.normalize('NFC', query)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;위에서 언급한 workflow 모듈의 인스턴스의 args 변수에 실행 스크립트로 전달한 인자가 저장되며,&lt;/div&gt;
&lt;div&gt;이미 유니코드로 노멀라이즈 되어 있어서 바로 사용해도 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; query = wf.args[0]&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;다만, 디버깅 용도로 print()로 한글을 출력하려면 기본 인코딩을 지정해줘야 한다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; import sys&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; reload(sys)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; sys.setdefaultencoding(&quot;utf-8&quot;)&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; query = wf.args[0]&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;----&lt;/div&gt;
&lt;div&gt;
&lt;b&gt;# 서드파티 라이브러리 추가 (third-party library)&lt;/b&gt;&lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;먼저, pip로 별도 라이브러리에 서드파티 라이브러리를 설치한다.&lt;/div&gt;
&lt;div&gt;예를 들어, lib 디렉토리에 click 이란 패키지를 설치하려면 아래와 같이 실행하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ pip install --target=&lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;./lib&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt; click&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;스크립트에서 직접 가져오려면 __init__.py 를 만들어줘야 한다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; $ touch ./lib/__init__.py&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; from lib import click&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;wf 인스턴스에서 바로 가져오는 방법도 있다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; def main(wf):&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;import requests&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ...&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; if __name__ == '__main__':&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;
&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; wf = Workflow3(&lt;/font&gt;&lt;font color=&quot;#941751&quot;&gt;libraries=['./lib']&lt;/font&gt;&lt;font color=&quot;#005493&quot;&gt;)&lt;/font&gt;
&lt;/div&gt;
&lt;div&gt;&lt;font color=&quot;#005493&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sys.exit(wf.run(main))&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;----&lt;/div&gt;
&lt;div&gt;&lt;b&gt;# 꿀벌개발일지 검색용 워크플로우&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;아래와 같이 검색하는 간단한 워크플로우이다.&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:683px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99EF334E5BCA081211&quot; filemime=&quot;image/png&quot; filename=&quot;evernote_image_1.png&quot; height=&quot;580&quot; width=&quot;683&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div&gt;코드는 아래 gist에서 확인하면 된다.&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://gist.github.com/ohgyun/0f728f80ff14fd64e5bea476be2cf695&quot;&gt;https://gist.github.com/ohgyun/0f728f80ff14fd64e5bea476be2cf695&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;다운로드해 참고해보면 쉽게&amp;nbsp;다른 워크플로우를 만들 수 있을 것이다. :D&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;;height:auto;max-width:100%&quot;&gt;&lt;a href=&quot;https://ohgyun.com/attachment/cfile5.uf@998686455BCA08380EF6A7.alfredworkflow&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/tistory_admin/assets/blog/62384c30f559776a94b803c2593b16f189a323d2/blogs/image/extension/unknown.gif?_version_=62384c30f559776a94b803c2593b16f189a323d2&quot; alt=&quot;&quot; style=&quot;vertical-align: middle;&quot; /&gt; 꿀벌개발일지_1.0.alfredworkflow&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>DevTip</category>
<author>ohgyun</author>
<guid>https://ohgyun.com/778</guid>
<comments>https://ohgyun.com/778#entry778comment</comments>
<pubDate>Sat, 20 Oct 2018 01:37:35 +0900</pubDate>
</item>
</channel>
</rss>