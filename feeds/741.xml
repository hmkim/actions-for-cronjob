<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>기계인간 John Grib</title>
    <description>기계인간 블로그
</description>
    <link>https://johngrib.github.io/</link>
    <atom:link href="https://johngrib.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 13 May 2019 23:59:46 +0900</pubDate>
    <lastBuildDate>Mon, 13 May 2019 23:59:46 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>


    
      <item>
        <title>그래프(Graph)</title>
        <description></description>
        <pubDate>Mon, 13 May 2019 23:59:17 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/graph/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/graph/</guid>
        
        
      </item>
    

    
      <item>
        <title>쇼펜하우어의 엔트로피 법칙(Schopenhauer's Law Of Entropy)</title>
        <description></description>
        <pubDate>Mon, 13 May 2019 22:58:33 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/Schopenhauer-s-Law-Of-Entropy/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/Schopenhauer-s-Law-Of-Entropy/</guid>
        
        
      </item>
    

    
      <item>
        <title>관계(Relations)</title>
        <description></description>
        <pubDate>Sun, 12 May 2019 17:50:57 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/relations/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/relations/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>2019년 링크 모음</title>
        <description></description>
        <pubDate>Sat, 11 May 2019 22:55:09 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/links-2019/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/links-2019/</guid>
        
        
      </item>
    

    
      <item>
        <title>공부, 학습 관련 토막글 모음</title>
        <description></description>
        <pubDate>Sat, 11 May 2019 11:14:00 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/study-note/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/study-note/</guid>
        
        
      </item>
    

    
      <item>
        <title>2019년 기록</title>
        <description>연말에 회고로 제목을 바꿀 문서</description>
        <pubDate>Mon, 06 May 2019 11:23:15 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/review-2019/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/review-2019/</guid>
        
        <category>review</category>
        
        
      </item>
    

    
      <item>
        <title>간단하게 만드는 랜덤런치 그룹 생성기</title>
        <description></description>
        <pubDate>Sat, 04 May 2019 21:48:32 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/random-luch/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/random-luch/</guid>
        
        
      </item>
    

    
      <item>
        <title>Timeline</title>
        <description></description>
        <pubDate>Sun, 28 Apr 2019 00:07:14 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/timeline/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/timeline/</guid>
        
        
      </item>
    

    
      <item>
        <title>애자일(agile)에 대한 토막글 모음</title>
        <description></description>
        <pubDate>Wed, 24 Apr 2019 23:05:08 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/agile/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/agile/</guid>
        
        <category>agile</category>
        
        
      </item>
    

    
      <item>
        <title>평균 계산 복잡도 구하기</title>
        <description>Average Case Computational Complexity</description>
        <pubDate>Mon, 15 Apr 2019 22:39:31 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/average-complexity/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/average-complexity/</guid>
        
        <category>algorithm</category>
        
        
      </item>
    

    
      <item>
        <title>빅 오 표기법(Big O notation)</title>
        <description>알고리즘의 효율성을 나타내는 표기법이다</description>
        <pubDate>Mon, 15 Apr 2019 22:29:16 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/big-O-notation/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/big-O-notation/</guid>
        
        <category>algorithm</category>
        
        
      </item>
    

    
      <item>
        <title>이메일 주소 형식 검증하기</title>
        <description>Verify email address format</description>
        <pubDate>Mon, 15 Apr 2019 20:31:35 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/email-validation/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/email-validation/</guid>
        
        <category>email regex php</category>
        
        
      </item>
    

    
      <item>
        <title>RFC(Request For Comment)</title>
        <description>일련번호가 매겨진 인터넷 표준 문서</description>
        <pubDate>Thu, 11 Apr 2019 23:34:07 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/RFC/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/RFC/</guid>
        
        <category>rfc</category>
        
        
      </item>
    

    
      <item>
        <title>트랜지스터</title>
        <description>전자 신호 및 전력을 증폭하거나 스위칭하는 데 사용하는 반도체 소자</description>
        <pubDate>Sun, 31 Mar 2019 20:42:22 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/transistor/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/transistor/</guid>
        
        
      </item>
    

    
      <item>
        <title>이항 정리(Binomial Theorem)</title>
        <description></description>
        <pubDate>Sat, 23 Mar 2019 12:40:51 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/Binomial-Theorem/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/Binomial-Theorem/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>그레이 코드(Gray code)</title>
        <description>reflected binary Gray code</description>
        <pubDate>Mon, 18 Mar 2019 22:42:13 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/gray-code/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/gray-code/</guid>
        
        <category>binary algorithm</category>
        
        
      </item>
    

    
      <item>
        <title>모듈러 연산(나머지 연산)</title>
        <description>Modular Arithmetic</description>
        <pubDate>Sat, 16 Mar 2019 23:25:56 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-modular/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-modular/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>타이머</title>
        <description></description>
        <pubDate>Sat, 16 Mar 2019 19:45:22 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/my-timer/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/my-timer/</guid>
        
        <category>tools</category>
        
        
      </item>
    

    
      <item>
        <title>100층 건물과 2개의 계란 문제</title>
        <description></description>
        <pubDate>Wed, 13 Mar 2019 23:42:13 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/two-eggs-100-floor/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/two-eggs-100-floor/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>(책) 전생검신</title>
        <description></description>
        <pubDate>Wed, 13 Mar 2019 12:33:03 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/reincarnation-sword-master/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/reincarnation-sword-master/</guid>
        
        <category>book fantasy</category>
        
        
      </item>
    

    
      <item>
        <title>RSA 암호(RSA Encryption)</title>
        <description></description>
        <pubDate>Sun, 10 Mar 2019 23:12:49 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/rsa-encryption/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/rsa-encryption/</guid>
        
        <category>encryption</category>
        
        
      </item>
    

    
      <item>
        <title>카이사르 암호(Caesar cipher)</title>
        <description>자리이동식 암호법</description>
        <pubDate>Sat, 09 Mar 2019 20:52:57 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/Caesar-cipher/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/Caesar-cipher/</guid>
        
        <category>encryption</category>
        
        
      </item>
    

    
      <item>
        <title>선형합동</title>
        <description>Linear Congruences</description>
        <pubDate>Thu, 07 Mar 2019 21:44:09 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-linear-congruences/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-linear-congruences/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>부트스트래핑(bootstrapping)의 어원</title>
        <description></description>
        <pubDate>Wed, 06 Mar 2019 23:34:08 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/bootstrapping/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/bootstrapping/</guid>
        
        
      </item>
    

    
      <item>
        <title>원시근(Primitive Roots)</title>
        <description></description>
        <pubDate>Sun, 03 Mar 2019 22:45:31 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/primitive-roots/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/primitive-roots/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>페르마의 소정리</title>
        <description>Fermat's little theorem</description>
        <pubDate>Sun, 03 Mar 2019 17:42:20 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/Fermat-s-little-theorem/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/Fermat-s-little-theorem/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>2018년 회고</title>
        <description></description>
        <pubDate>Sat, 02 Mar 2019 21:41:02 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/review-2018/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/review-2018/</guid>
        
        <category>review</category>
        
        
      </item>
    

    
      <item>
        <title>존 베커스, 문제 해결사 팀을 만들다</title>
        <description>포트란의 탄생</description>
        <pubDate>Fri, 01 Mar 2019 17:01:12 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/John-W-Backus/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/John-W-Backus/</guid>
        
        <category>story</category>
        
        
      </item>
    

    
      <item>
        <title>2018-01-20 토요일</title>
        <description></description>
        <pubDate>Wed, 27 Feb 2019 11:28:14 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/2018-01-20/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/2018-01-20/</guid>
        
        <category>diary block-chain</category>
        
        
      </item>
    

    
      <item>
        <title>P-NP 문제</title>
        <description></description>
        <pubDate>Sun, 24 Feb 2019 21:13:14 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/p-np/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/p-np/</guid>
        
        <category>math cs</category>
        
        
      </item>
    

    
      <item>
        <title>단위</title>
        <description></description>
        <pubDate>Fri, 22 Feb 2019 07:55:52 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/units/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/units/</guid>
        
        <category>unit</category>
        
        
      </item>
    

    
      <item>
        <title>최대공약수와 최소공배수</title>
        <description>Greatest Common Divisor, Least Common Multiple</description>
        <pubDate>Thu, 21 Feb 2019 18:06:38 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/gcd/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/gcd/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>정지 문제</title>
        <description>The Halting Problem</description>
        <pubDate>Sat, 16 Feb 2019 21:34:30 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/halting-problem/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/halting-problem/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>수열</title>
        <description>Sequences</description>
        <pubDate>Sat, 16 Feb 2019 21:29:36 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-sequences/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-sequences/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>(요약) 이더리움 백서</title>
        <description>Ethereum White Paper</description>
        <pubDate>Mon, 11 Feb 2019 15:54:54 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/ethereum-white-paper/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/ethereum-white-paper/</guid>
        
        <category>blockchain</category>
        
        
      </item>
    

    
      <item>
        <title>알고리즘</title>
        <description></description>
        <pubDate>Tue, 05 Feb 2019 22:53:48 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/algorithm/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/algorithm/</guid>
        
        <category>algorithm</category>
        
        
      </item>
    

    
      <item>
        <title>행렬</title>
        <description>Matrices</description>
        <pubDate>Mon, 04 Feb 2019 20:07:14 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-matrices/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-matrices/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>집합</title>
        <description>Sets</description>
        <pubDate>Sat, 02 Feb 2019 14:50:16 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-sets/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-sets/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>git</title>
        <description></description>
        <pubDate>Tue, 29 Jan 2019 16:43:48 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/git/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/git/</guid>
        
        <category>git command</category>
        
        
      </item>
    

    
      <item>
        <title>fc 명령어</title>
        <description>명령어 입력/편집, 나열, 재실행 등을 할 수 있다</description>
        <pubDate>Tue, 29 Jan 2019 10:50:49 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/fc/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/fc/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>수열의 합</title>
        <description>Summations</description>
        <pubDate>Sun, 27 Jan 2019 22:18:50 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-summations/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-summations/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>함수</title>
        <description>Functions</description>
        <pubDate>Fri, 25 Jan 2019 21:22:58 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-functions/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-functions/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>awk</title>
        <description>pattern-directed scanning and processing language</description>
        <pubDate>Wed, 23 Jan 2019 11:26:56 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/awk/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/awk/</guid>
        
        <category>command</category>
        
        
      </item>
    

    
      <item>
        <title>(책) 함께 자라기</title>
        <description>애자일 철학을 삶에 적용해 다른 사람들과 함께 성장하기</description>
        <pubDate>Tue, 22 Jan 2019 22:30:47 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/grow-together/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/grow-together/</guid>
        
        <category>agile study</category>
        
        
      </item>
    

    
      <item>
        <title>보이 스카웃 규칙</title>
        <description>캠프장은 처음 왔을 때보다 더 깨끗하게 해놓고 떠나라</description>
        <pubDate>Sun, 20 Jan 2019 20:24:38 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/Boy-Scout-Rule/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/Boy-Scout-Rule/</guid>
        
        <category>rule Uncle-Bob</category>
        
        
      </item>
    

    
      <item>
        <title>편리한 git alias 설정하기</title>
        <description>나만의 git alias를 만들어 보자</description>
        <pubDate>Sun, 20 Jan 2019 08:32:52 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/git-alias/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/git-alias/</guid>
        
        <category>fzf git bash</category>
        
        
      </item>
    

    
      <item>
        <title>openssl 명령어</title>
        <description>cryptography toolkit</description>
        <pubDate>Sat, 19 Jan 2019 12:58:50 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/openssl/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/openssl/</guid>
        
        <category>bash encryption command</category>
        
        
      </item>
    

    
      <item>
        <title>나의 공부 방법</title>
        <description></description>
        <pubDate>Sat, 19 Jan 2019 12:03:58 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/my-study-method/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/my-study-method/</guid>
        
        <category>study</category>
        
        
      </item>
    

    
      <item>
        <title>cut 명령어</title>
        <description>cut out selected portions of each line of a file</description>
        <pubDate>Tue, 15 Jan 2019 17:21:17 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/cut/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/cut/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>URI</title>
        <description>Uniform Resource Identifier</description>
        <pubDate>Mon, 14 Jan 2019 21:54:46 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/URI/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/URI/</guid>
        
        <category>http</category>
        
        
      </item>
    

    
      <item>
        <title>Diary</title>
        <description></description>
        <pubDate>Mon, 14 Jan 2019 21:43:51 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/diary/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/diary/</guid>
        
        <category>diary</category>
        
        
      </item>
    

    
      <item>
        <title>중괄호 인덴트 스타일</title>
        <description>K&amp;R style, Allman style</description>
        <pubDate>Mon, 14 Jan 2019 21:41:31 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/indent-style/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/indent-style/</guid>
        
        
      </item>
    

    
      <item>
        <title>composer</title>
        <description>Dependency Manager for PHP</description>
        <pubDate>Sun, 13 Jan 2019 22:54:23 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/composer/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/composer/</guid>
        
        <category>php command</category>
        
        
      </item>
    

    
      <item>
        <title>php</title>
        <description></description>
        <pubDate>Sun, 13 Jan 2019 22:34:44 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/php/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/php/</guid>
        
        <category>php</category>
        
        
      </item>
    

    
      <item>
        <title>touch 명령어</title>
        <description>change file access and modification times</description>
        <pubDate>Sun, 13 Jan 2019 18:22:50 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/touch/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/touch/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>find 명령어</title>
        <description>walk a file hierarchy</description>
        <pubDate>Sun, 13 Jan 2019 18:04:32 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/find/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/find/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>Homebrew</title>
        <description>macOS 용 패키지 관리자. 이름은 Homebrew지만, 명령어는 brew.</description>
        <pubDate>Fri, 11 Jan 2019 16:36:10 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/brew/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/brew/</guid>
        
        <category>bash mac command</category>
        
        
      </item>
    

    
      <item>
        <title>diff</title>
        <description>compare files line by line</description>
        <pubDate>Fri, 11 Jan 2019 11:30:51 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/diff/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/diff/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>증명</title>
        <description>Proofs</description>
        <pubDate>Wed, 09 Jan 2019 18:41:01 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-proofs/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-proofs/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>phpbrew</title>
        <description>Brew &amp; manage PHP versions in pure PHP at HOME</description>
        <pubDate>Tue, 08 Jan 2019 22:43:54 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/phpbrew/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/phpbrew/</guid>
        
        <category>php command</category>
        
        
      </item>
    

    
      <item>
        <title>cal, ncal</title>
        <description>displays a calendar and the date of Easter</description>
        <pubDate>Mon, 07 Jan 2019 13:05:08 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/cal/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/cal/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>tail 명령어</title>
        <description>display the last part of a file</description>
        <pubDate>Sun, 06 Jan 2019 23:43:13 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/tail/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/tail/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>yes 명령어</title>
        <description>문자열을 반복 출력한다</description>
        <pubDate>Sun, 06 Jan 2019 23:13:05 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/yes/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/yes/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>ag, the silver searcher</title>
        <description>A code-searching tool similar to ack, but faster.</description>
        <pubDate>Sun, 06 Jan 2019 22:57:10 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/ag/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/ag/</guid>
        
        <category>bash command</category>
        
        
      </item>
    

    
      <item>
        <title>추론규칙</title>
        <description>Rules of Inference</description>
        <pubDate>Sun, 06 Jan 2019 13:32:33 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-inference-rules/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-inference-rules/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>한정기호</title>
        <description>Quantifiers</description>
        <pubDate>Sun, 06 Jan 2019 11:21:04 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-quantifiers/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-quantifiers/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>명제 논리</title>
        <description>Propositional Logic</description>
        <pubDate>Sun, 06 Jan 2019 10:27:36 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/discrete-math-propositional-logic/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/discrete-math-propositional-logic/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>(study) 이산수학</title>
        <description></description>
        <pubDate>Sat, 05 Jan 2019 17:15:40 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/study-discrete-mathematics/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/study-discrete-mathematics/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>Kanban, Scrum</title>
        <description>칸반, 스크럼</description>
        <pubDate>Fri, 04 Jan 2019 23:09:27 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/kanban-scrum/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/kanban-scrum/</guid>
        
        <category>agile</category>
        
        
      </item>
    

    
      <item>
        <title>(study) 이산수학 - KOCW 수강 1</title>
        <description>KOCW 동국대학교 주태우 교수님 2016년 1학기 강의 수강 노트</description>
        <pubDate>Thu, 03 Jan 2019 21:13:03 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/d-m-du-2016-01/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/d-m-du-2016-01/</guid>
        
        <category>math</category>
        
        
      </item>
    

    
      <item>
        <title>회고 모음</title>
        <description></description>
        <pubDate>Tue, 01 Jan 2019 11:47:11 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/review/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/review/</guid>
        
        <category>review</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.03.02</title>
        <description>CONNECTION BETWEEN REGULAR EXPRESSIONS AND REGULAR LANGUAGES</description>
        <pubDate>Sun, 30 Dec 2018 19:21:30 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-03-02/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-03-02/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>Golang reflect 사용법</title>
        <description>라이브러리 만들 때에만 쓰고 남용하지 말자</description>
        <pubDate>Sun, 30 Dec 2018 12:44:06 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/golang-reflect/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/golang-reflect/</guid>
        
        <category>golang reflect</category>
        
        
      </item>
    

    
      <item>
        <title>2018년 링크 모음</title>
        <description>해묵은 웹 브라우저 탭 정리</description>
        <pubDate>Sat, 29 Dec 2018 18:21:57 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/links-2018/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/links-2018/</guid>
        
        
      </item>
    

    
      <item>
        <title>Vimwiki + Jekyll + Github.io로 나만의 위키를 만들자</title>
        <description>마음에 드는 무료 위키가 없어서 만들어보았다</description>
        <pubDate>Thu, 27 Dec 2018 21:41:52 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/my-wiki/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/my-wiki/</guid>
        
        <category>wiki vimwiki jekyll blog</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.03.01</title>
        <description>REGULAR EXPRESSIONS</description>
        <pubDate>Tue, 25 Dec 2018 07:35:29 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-03-01/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-03-01/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.02.04</title>
        <description>REDUCTION OF THE NUMBER OF STATES IN FINITE AUTOMATA</description>
        <pubDate>Thu, 20 Dec 2018 10:36:32 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-02-04/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-02-04/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.02.03</title>
        <description>EQUIVALENCE OF DETERMINISTIC AND NONDETERMINISTIC FINITE ACCEPTERS</description>
        <pubDate>Sun, 16 Dec 2018 18:34:41 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-02-03/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-02-03/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.02.02</title>
        <description>NONDETERMINISTIC FINITE ACCEPTERS</description>
        <pubDate>Sun, 16 Dec 2018 16:59:27 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-02-02/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-02-02/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.02.01</title>
        <description>DETERMINISTIC FINITE ACCEPTERS</description>
        <pubDate>Sun, 16 Dec 2018 16:32:17 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-02-01/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-02-01/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.01.02</title>
        <description>THREE BASIC CONCEPTS</description>
        <pubDate>Sun, 16 Dec 2018 14:40:27 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-01-02/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-01-02/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.01.01</title>
        <description>MATHEMATICAL PRELIMINARIES AND NOTATION</description>
        <pubDate>Sun, 16 Dec 2018 14:05:06 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-01-01/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-01-01/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.01.00</title>
        <description>INTRODUCTION TO THE THEORY OF COMPUTATION</description>
        <pubDate>Sat, 15 Dec 2018 22:29:22 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-01-00/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-01-00/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>vim 자동완성 기능 사용하기</title>
        <description>vim을 똑똑하게 사용하자</description>
        <pubDate>Mon, 10 Dec 2018 21:23:00 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/vim-auto-completion/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/vim-auto-completion/</guid>
        
        <category>vim</category>
        
        
      </item>
    

    
      <item>
        <title>구글링하는 방법</title>
        <description>구글 및 여러 검색 서비스 사용법</description>
        <pubDate>Sun, 09 Dec 2018 21:57:55 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/googling/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/googling/</guid>
        
        <category>google twitter facebook</category>
        
        
      </item>
    

    
      <item>
        <title>git에서 다른 브랜치의 특정 파일만 체크아웃하기</title>
        <description>git checkout [branch] -- [path] 로 해결</description>
        <pubDate>Sun, 02 Dec 2018 14:32:59 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/git-checkout-specific-files/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/git-checkout-specific-files/</guid>
        
        <category>til git</category>
        
        
      </item>
    

    
      <item>
        <title>Go WaitGroup에 1외에 다른 값을 Add 하면?</title>
        <description>더하는 숫자가 중요한 게 아니라 0을 맞추는 게 중요</description>
        <pubDate>Thu, 29 Nov 2018 11:11:32 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/golang-waitgroup-add/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/golang-waitgroup-add/</guid>
        
        <category>gloang goroutine</category>
        
        
      </item>
    

    
      <item>
        <title>내 키보드 레이아웃</title>
        <description></description>
        <pubDate>Thu, 22 Nov 2018 11:07:09 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/my-keyboard/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/my-keyboard/</guid>
        
        <category>keyboard</category>
        
        
      </item>
    

    
      <item>
        <title>특수문자 모음</title>
        <description>특수문자 검색하다 빡쳐서 작성한 문서</description>
        <pubDate>Tue, 20 Nov 2018 16:44:19 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/special-chars/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/special-chars/</guid>
        
        <category>special-chars</category>
        
        
      </item>
    

    
      <item>
        <title>명명 원칙(The Naming Principle)</title>
        <description></description>
        <pubDate>Sun, 18 Nov 2018 22:31:43 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/Naming-Principle/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/Naming-Principle/</guid>
        
        <category>proverb principle naming</category>
        
        
      </item>
    

    
      <item>
        <title>고대 이집트 곱셈법</title>
        <description>EGYPTIAN MULTIPLICATION</description>
        <pubDate>Fri, 16 Nov 2018 10:54:03 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/egyptian-multiplication/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/egyptian-multiplication/</guid>
        
        
      </item>
    

    
      <item>
        <title>형식언어와 오토마타.00.서문</title>
        <description>Preface</description>
        <pubDate>Mon, 12 Nov 2018 08:59:52 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/f-l-a-00-preface/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/f-l-a-00-preface/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>(study) FORMAL LANGUAGES AND AUTOMATA</title>
        <description></description>
        <pubDate>Mon, 12 Nov 2018 00:08:19 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/study-formal-languages-and-automata/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/study-formal-languages-and-automata/</guid>
        
        <category>cs</category>
        
        
      </item>
    

    
      <item>
        <title>Vimwiki 사용법</title>
        <description>로컬에서 Vim으로 관리하는 나만의 위키</description>
        <pubDate>Fri, 02 Nov 2018 22:29:56 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/vimwiki/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/vimwiki/</guid>
        
        <category>vim wiki</category>
        
        
      </item>
    

    
      <item>
        <title>엑셀 단축키 모음</title>
        <description></description>
        <pubDate>Thu, 01 Nov 2018 09:45:21 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/excel-hot-keys/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/excel-hot-keys/</guid>
        
        <category>excel hotkey</category>
        
        
      </item>
    

    
      <item>
        <title>Vim 공백 문자 조작 설정</title>
        <description></description>
        <pubDate>Wed, 31 Oct 2018 10:00:21 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/vim-with-space-char/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/vim-with-space-char/</guid>
        
        <category>vim</category>
        
        
      </item>
    

    
      <item>
        <title>Floating Point 부동소수점</title>
        <description></description>
        <pubDate>Mon, 29 Oct 2018 11:40:34 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/floating-point/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/floating-point/</guid>
        
        <category>binary</category>
        
        
      </item>
    

    
      <item>
        <title>TOML</title>
        <description>Tom's Obvious, Minimal Language</description>
        <pubDate>Tue, 23 Oct 2018 11:01:12 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/TOML/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/TOML/</guid>
        
        <category>toml data-format</category>
        
        
      </item>
    

    
      <item>
        <title>Go dependency manager</title>
        <description>사람들이 많이 쓰는 걸 쓰자</description>
        <pubDate>Sun, 21 Oct 2018 17:51:17 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/golang-dependency-manager/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/golang-dependency-manager/</guid>
        
        <category>golang</category>
        
        
      </item>
    

    
      <item>
        <title>Go cheatsheet</title>
        <description>golang을 배우면서 까먹기 쉬운 것들을 적어두자</description>
        <pubDate>Fri, 19 Oct 2018 22:21:31 +0900</pubDate>
        <link>https://johngrib.github.io/wiki/golang-cheatsheet/</link>
        <guid isPermaLink="true">https://johngrib.github.io/wiki/golang-cheatsheet/</guid>
        
        <category>golang cheatsheet</category>
        
        
      </item>
    


      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 24 Nov 2017 19:31:27 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/11/24/welcome-to-jekyll/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/11/24/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>

      <item>
        <title>0.1 + 0.2 == 0.30000000000000004</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#01--02--03&quot; id=&quot;markdown-toc-01--02--03&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0.1 + 0.2 != 0.3&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;01--02--03&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0.1 + 0.2 != 0.3&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;python에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;0.1&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;0.2&lt;/code&gt;를 더해보면 산수 상식과는 좀 다른 값이 나온다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python
Python 2.7.10
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 0.1 + 0.2
0.30000000000000004
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 0.1 + 0.2 &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 0.3
False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;물론 python만의 문제는 아니다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;node
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 0.1 + 0.2
0.30000000000000004
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 0.1 + 0.2 &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; 0.3
&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원인은 당연히 둥둥소수점 문제이고, 사용할 때 조심하면 된다고 생각해왔다.&lt;/p&gt;

&lt;p&gt;그런데 며칠 전에 접한 &lt;a href=&quot;https://perl6.org/&quot;&gt;Perl6&lt;/a&gt;에서는 아래와 같이 깔끔한 결과가 나오는 것이었다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;perl6
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 0.1 + 0.2
0.3
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 0.1 + 0.2 &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; 0.3
True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;관심이 생겨 조사해보니 &lt;a href=&quot;https://0.30000000000000004.com&quot;&gt;https://0.30000000000000004.com&lt;/a&gt;라는
곳에 프로그래밍 언어별로 &lt;code class=&quot;highlighter-rouge&quot;&gt;0.1 + 0.2&lt;/code&gt; 연산을 수행했을 때의 결과가 잘 정리되어 있다.&lt;/p&gt;

&lt;p&gt;그리고 몇몇 언어들의 경우 어떤 방식으로 이 문제들을 처리하고 있는지에 대한 설명도 짤막하게 달려 있다.&lt;/p&gt;

&lt;p&gt;가령 Groovy는 소수점 리터럴 표현의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;java.math.BigDecimal&lt;/code&gt;로 처리를 하고 있으며,
Perl6의 경우 실수 객체가 분자/분모 정보를 갖고 있다.&lt;/p&gt;

&lt;p&gt;결과도 결과지만 같은 값을 내기 위한 각 언어의 코드를 살펴보는 것도 꽤 흥미로웠다.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://0.30000000000000004.com&quot;&gt;https://0.30000000000000004.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://j.mearie.org/post/133187760423/inaccuracy-and-inexactness-of-floating-point&quot;&gt;메아리 저널의 2015년 11월 14일 글&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://support.microsoft.com/ko-kr/help/42980/-complete-tutorial-to-understand-ieee-floating-point-errors&quot;&gt;IEEE 부동 소수점 오류의 이해를 위한 자습서&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://perl6.org/&quot;&gt;Perl6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 23 Aug 2017 18:15:32 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/08/23/0.30000000000000004/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/08/23/0.30000000000000004/</guid>
        
        <category>TIL</category>
        
        
      </item>

      <item>
        <title>아희 'Hello, World!'에 코멘트를 달아 보았다.</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#아희-hello-world에-코멘트를-달아-보았다&quot; id=&quot;markdown-toc-아희-hello-world에-코멘트를-달아-보았다&quot;&gt;아희 “Hello, World!”에 코멘트를 달아 보았다.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#주석&quot; id=&quot;markdown-toc-주석&quot;&gt;주석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;아희-hello-world에-코멘트를-달아-보았다&quot;&gt;아희 “Hello, World!”에 코멘트를 달아 보았다.&lt;/h1&gt;

&lt;p&gt;다음은 &lt;a href=&quot;https://github.com/aheui/aheui.github.io/blob/master/_posts/2006-10-27-specification.ko.markdown#예제&quot;&gt;아희 사이트&lt;/a&gt;에서 복사해 온 “Hello, World!”소스 코드이다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-aheui&quot;&gt;밤밣따빠밣밟따뿌
빠맣파빨받밤뚜뭏
돋밬탕빠맣붏두붇
볻뫃박발뚷투뭏붖
뫃도뫃희멓뭏뭏붘
뫃봌토범더벌뿌뚜
뽑뽀멓멓더벓뻐뚠
뽀덩벐멓뻐덕더벅
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;주석&quot;&gt;주석&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;심심해서 아래와 같이 주석을 달아 보았다.&lt;/li&gt;
  &lt;li&gt;meaning의 push, dup, pop 등의 용어들은 내가 이 글을 쓰면서 임의로 선택한 키워드다.&lt;/li&gt;
  &lt;li&gt;초기에 선택된 스택은 ‘받침 없음’ 이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ind&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;code&lt;/th&gt;
      &lt;th&gt;meaning&lt;/th&gt;
      &lt;th&gt;stack&lt;/th&gt;
      &lt;th&gt;comment&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;밤&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[4]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;밣&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[4, 8]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;따&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;빠&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 32]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;밣&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 8]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;밟&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 8, 9]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;따&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 72]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뿌&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 72]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뭏&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 32, 72]&lt;/td&gt;
      &lt;td&gt;H 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;붇&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;붖&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 3, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;붘&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 3, 3, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뚜&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 3, 9]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뚠&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 27]&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ㄴ&lt;/code&gt;무시 : 산술 연산의 받침은 무시&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;벅&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 27, 2]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;더&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 72, 29]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;덕&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 101]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뻐&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 32, 101, 101]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;멓&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 32, 101]&lt;/td&gt;
      &lt;td&gt;e 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;벐&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 101,  7]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;덩&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 108]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뽀&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 32, 108, 108]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뽑&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 32, 108, 108, 108]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뫃&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 32, 108, 108]&lt;/td&gt;
      &lt;td&gt;l 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뫃&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 32, 108]&lt;/td&gt;
      &lt;td&gt;l 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;볻&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 32, 108, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;돋&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 32, 111]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;빠&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 32, 111, 111]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;맣&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 32, 111]&lt;/td&gt;
      &lt;td&gt;o 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;파&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;swap&lt;/td&gt;
      &lt;td&gt;[32, 111, 32]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;빨&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 111, 32, 32]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;받&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 111, 32, 32, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;밤&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 111, 32, 32, 3, 4]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뚜&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 111, 32, 32, 12]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;두&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 111, 32, 44]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뭏&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 111, 32]&lt;/td&gt;
      &lt;td&gt;,  출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뭏&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 111]&lt;/td&gt;
      &lt;td&gt;space 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뿌&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 111, 111]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뻐&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 111, 111, 111]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;벓&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 111, 111, 111, 8]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;더&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 111, 111, 119]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;멓&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 111, 111]&lt;/td&gt;
      &lt;td&gt;w 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;멓&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 111]&lt;/td&gt;
      &lt;td&gt;o 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뽀&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 111, 111]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;봌&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 111, 111, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;45&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;도&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 111, 114]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뫃&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 111]&lt;/td&gt;
      &lt;td&gt;r 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;47&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;밬&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 111, 3]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;48&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;탕&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 108]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;빠&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;dup&lt;/td&gt;
      &lt;td&gt;[32, 108, 108]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;맣&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32, 108]&lt;/td&gt;
      &lt;td&gt;l 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;붏&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 108, 8]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;투&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[32, 100]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뭏&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[32]&lt;/td&gt;
      &lt;td&gt;d 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;54&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;벌&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[32, 5]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;더&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[37]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;56&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;범&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[37, 4]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;57&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;토&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[33]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뫃&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[ ]&lt;/td&gt;
      &lt;td&gt;! 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;59&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;박&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[2]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;발&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;push&lt;/td&gt;
      &lt;td&gt;[2, 5]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;뚷&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;[10]&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;62&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;멓&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;pop&lt;/td&gt;
      &lt;td&gt;[ ]&lt;/td&gt;
      &lt;td&gt;linefeed (10) 출력&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;63&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;희&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;end&lt;/td&gt;
      &lt;td&gt;[ ]&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ㅎ&lt;/code&gt;은 끝&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aheui/aheui.github.io/blob/master/_posts/2006-10-27-specification.ko.markdown&quot;&gt;아희 specification&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aheui/aheui.github.io/blob/master/_posts/2006-10-27-specification.ko.markdown#예제&quot;&gt;아희 사이트: Hello, World! 예제&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 14 Jul 2017 23:00:17 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/07/14/aheui-explained/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/07/14/aheui-explained/</guid>
        
        <category>aheui</category>
        
        
      </item>

      <item>
        <title>레거시 코드를 파괴하는 Vim 벽돌 깨기</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#발단-레거시를-들여다보던-어느-날&quot; id=&quot;markdown-toc-발단-레거시를-들여다보던-어느-날&quot;&gt;발단: 레거시를 들여다보던 어느 날&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#어떻게-개발했나&quot; id=&quot;markdown-toc-어떻게-개발했나&quot;&gt;어떻게 개발했나&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-vimscript-코드-가독성-문제&quot; id=&quot;markdown-toc-1-vimscript-코드-가독성-문제&quot;&gt;1. Vimscript 코드 가독성 문제&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-퍼포먼스-저하-문제&quot; id=&quot;markdown-toc-2-퍼포먼스-저하-문제&quot;&gt;2. 퍼포먼스 저하 문제&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-multibyte-문자-길이-문제&quot; id=&quot;markdown-toc-3-multibyte-문자-길이-문제&quot;&gt;3. multibyte 문자 길이 문제&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hacker-news-github-trending-today-developers에-오르다&quot; id=&quot;markdown-toc-hacker-news-github-trending-today-developers에-오르다&quot;&gt;Hacker News, Github Trending Today Developers에 오르다&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#부록-a--링크-출처-모음&quot; id=&quot;markdown-toc-부록-a--링크-출처-모음&quot;&gt;부록 A : 링크, 출처 모음&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#부록-b&quot; id=&quot;markdown-toc-부록-b&quot;&gt;부록 B&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#설치실행-방법&quot; id=&quot;markdown-toc-설치실행-방법&quot;&gt;설치/실행 방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#게임-방법&quot; id=&quot;markdown-toc-게임-방법&quot;&gt;게임 방법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;혼돈! 파괴! Vim!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;이 글은 본인이 &lt;a href=&quot;https://woowabros.github.io/tools/2017/07/06/vim-game-code-break.html&quot;&gt;회사 기술 블로그&lt;/a&gt;에 작성한 포스트를 백업한 것입니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;발단-레거시를-들여다보던-어느-날&quot;&gt;발단: 레거시를 들여다보던 어느 날&lt;/h2&gt;

&lt;p&gt;누군가 마음속에서 속삭이더군요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-destroy.gif&quot; alt=&quot;Destroy it!&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그래서 정신 나간 Vim 플러그인을 하나 만들어 보았습니다.&lt;/p&gt;

&lt;p&gt;플러그인을 설치한 다음 코딩하다 분노가 느껴지는 타임이 도래했을 때
&lt;code class=&quot;highlighter-rouge&quot;&gt;:VimGameCodeBreak&lt;/code&gt;를 입력하면 해당 코드를 스테이지 삼아 벽돌 깨기 게임이 시작됩니다.
게임으로 박살 난 코드가 원본 파일에 저장되지는 않으니 &lt;strong&gt;와장창&lt;/strong&gt; 다 때려 부수면 됩니다.
플레이가 귀찮으면 볼을 떨궈도 Life가 줄지 않는 GOD MODE를 켜고 사라져가는 코드를 구경해도 좋습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-codebreak.gif&quot; alt=&quot;vim-game-code-break&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;와아!  파괴를 부르는 생산성 저하 도구 등장!&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;어떻게-개발했나&quot;&gt;어떻게 개발했나&lt;/h2&gt;

&lt;p&gt;개발에는 대략 3주 정도 걸렸습니다.
본업이 게임 개발도 아니고 업무 시간에 코드를 파괴하며 놀 수는 없으니,
점심시간이나 퇴근 후에 시간을 내서 코드를 작성했으며 주말에도 틈틈이 컴퓨터 앞에 앉아있었어요.
사실은 작은 게임들을 만드는 걸 좋아해서 (취미라고 할 수도 있을 것 같습니다)
집에서는 계속 CodeBreak만 잡고 있었다고 할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이 때까지만 해도 여흥으로 만든 이 게임이 흥하게 될 줄은 아무도 몰랐습니다….&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;아무튼, 성격상 프로토타입을 빠르게 만들고 뒤이어 리팩토링하는 방식을 선호하여 다음과 같이 작업했습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;구색 갖추기&lt;/li&gt;
  &lt;li&gt;기능 추가&lt;/li&gt;
  &lt;li&gt;디버깅&lt;/li&gt;
  &lt;li&gt;리팩토링&lt;/li&gt;
  &lt;li&gt;GOTO 2&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;만드는 도중에 몇 가지 까다로운 문제들을 마주하고 어렵사리 해결하기도 했습니다.
여러 가지 재미있는 문제들이 있었지만… 특히 다음의 세 문제가 기억에 많이 남습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vimscript 코드 가독성 문제&lt;/li&gt;
  &lt;li&gt;주로 syntax highlight 때문에 발생한 퍼포먼스 저하 문제&lt;/li&gt;
  &lt;li&gt;multibyte 문자 길이 문제&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;1-vimscript-코드-가독성-문제&quot;&gt;1. Vimscript 코드 가독성 문제&lt;/h3&gt;

&lt;p&gt;Vimscript는 VimL이라고도 부르며 일반적으로는 Vim plugin 제작을 위해 작성되고 Vim 내에서만 돌아가는 DSL 입니다.
Python이나 Perl이 떠오르는 특징들이 보이기도 하지만 곰곰이 살펴보면 두 언어의 이념을 따르는 언어가 아니란 것도 알 수 있습니다.
아마 C++나 Java와 같은 엄격한 언어들에 익숙한 분들께 이 언어는 지옥일 수 있을 겁니다.&lt;/p&gt;

&lt;p&gt;예를 들어 다음의 코드는 축약의 차이만 있을 뿐 똑같은 세 함수를 정의합니다. 알아보기 힘든 코드를 짜는 데에는 환상적이겠죠.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-vimL&quot;&gt;&quot; 주석은 이렇게 큰따옴표를 사용합니다
function! Foo()
    vsplit  &quot; vertical split
endfunction

fun! Foo()
    vs      &quot; vertical split
endf

funct! Foo()
    vsp     &quot; vertical split
endfu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;한편 List를 다루는 방식은 Python의 괴상한 친척 같은 느낌도 듭니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let mylist = [1, two, 3, 'four']
let last = mylist[-1]   &quot; 값은 four

let a = '12345'
echo a[0:2]             &quot; 결과는 123 이 나옵니다. Python이라면 12 가 나왔겠죠?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vim 편집기 명령어의 특성상 상당수 명령어에 축약 표현이 있고 비슷한 문법을 가진 다른 대중적인 언어의 관용구와 차이점이 있으며, 테스트 코드를 작성하기에도 어려움이 많습니다(&lt;a href=&quot;https://github.com/junegunn/vader.vim&quot;&gt;Vader.vim&lt;/a&gt;이라는 훌륭한 테스트 프레임워크가 있지만, 아직 공부를 못했어요).
아마 여기까지 읽어주신 분들이라면 가급적 멀리하고 싶은 언어로 생각하시겠네요. 하하하 ;ㅁ;&lt;/p&gt;

&lt;p&gt;하지만 Vimscript는 Vim의 DSL인 만큼 익숙해질수록 나름의 편리함과 유쾌함을 느낄 수 있으며
답답한 만큼 무언가를 만들어냈을 때의 즐거움이 큰 편입니다. 제가 Vim을 좋아해서 그런 것도 있겠지만, Vim에서 작업하는 것은 대체로 게임같이 즐거운 일이죠.&lt;/p&gt;

&lt;p&gt;아무튼, 완벽한 대안이 있는 것도 아니고, 테스트 코드 작성도 어려우므로 저는 Vim plugin 개발에서 가장 중요한 것은 가독성이라고 여기게 되었습니다. 외국의 다른 분들이 만든 멋진 Vim plugin 코드를 읽을 때도 가독성 때문에 어려움이 많았거든요. 따라서 다음과 같은 원칙을 생각하게 되었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;가능한 한 축약하지 않는다. 단, Vim 명령어 중 관용적으로 많이 사용되는 것(s, g 등)은 예외로 한다.&lt;/li&gt;
  &lt;li&gt;함수 이름을 대충 짓지 않는다.&lt;/li&gt;
  &lt;li&gt;함수를 가능한 한 짧게 만들고 한 가지 기능만 하게 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-퍼포먼스-저하-문제&quot;&gt;2. 퍼포먼스 저하 문제&lt;/h3&gt;

&lt;p&gt;다음은 개발을 시작한 지 일주일쯤 되었을 때의 프로토타입입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-codebreak-ship-color.gif&quot; alt=&quot;prototype&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;영상을 보면 다음과 같은 문제들을 발견할 수 있습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;공이 잠시 멈칫하는 순간이 있다.&lt;/li&gt;
  &lt;li&gt;플레이어가 조종하는 막대기 디자인이 구리다.&lt;/li&gt;
  &lt;li&gt;커서가 막대기를 따라다닌다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 세 문제는 각자 다른 카테고리에 속한 것처럼 보이지만, 속도 저하와 관련이 있다는 특징이 있습니다.
다음과 같은 방식으로 느려터진 속도를 다소 만회할 수 있었습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;짧은 시간 동안에 충돌 처리가 반복적으로 일어나면 느려진다.
    &lt;ul&gt;
      &lt;li&gt;=&amp;gt; 게임 전체를 관리하는 while 문 내에 있는 sleep 시간 조정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;막대기에 원래 색깔이 나타나야 하는데 위쪽 코드가 망가지니 syntax highlight가 계획한 대로 나타나지 않는다.
    &lt;ul&gt;
      &lt;li&gt;게다가 막대기 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;12345654321&amp;gt;&lt;/code&gt;가 코드에 포함되니 syntax color가 무너진다.&lt;/li&gt;
      &lt;li&gt;계속 움직이는 막대기 때문에 syntax highlight redraw가 너무 빈번하게 발생한다!&lt;/li&gt;
      &lt;li&gt;=&amp;gt; 막대기를 status line으로 옮겨 syntax highlight의 영향을 받지 않게 한다.&lt;/li&gt;
      &lt;li&gt;=&amp;gt; 막대기 모양을 좀 더 단순하게 &lt;code class=&quot;highlighter-rouge&quot;&gt;XXXXXXXXXXXXXXXXX&lt;/code&gt;로 변경&lt;/li&gt;
      &lt;li&gt;=&amp;gt; Vim help를 참고하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;regexpengine&lt;/code&gt; 옵션을 &lt;code class=&quot;highlighter-rouge&quot;&gt;old&lt;/code&gt;로 변경.
&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-regexpengine.png&quot; alt=&quot;prototype&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;커서를 움직여 막대기를 그리고 있으므로 커서가 따라다니고 있다.
    &lt;ul&gt;
      &lt;li&gt;=&amp;gt; 될 수 있으면 커서를 사용하지 않고 화면을 갱신하도록 수정.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;3-multibyte-문자-길이-문제&quot;&gt;3. multibyte 문자 길이 문제&lt;/h3&gt;

&lt;p&gt;UTF-8에서 한글은 3 byte로 구성됩니다.
&lt;a href=&quot;https://memory.loc.gov/diglib/codetables/9.3.html&quot;&gt;MARK 21 Specification의 Code Table Korean Hangul&lt;/a&gt; 표를 살펴보면 &lt;del&gt;초성 중성 종성이 1 byte씩 차지하기 때문인 것을 알 수 있습니다.&lt;/del&gt;&lt;sup id=&quot;fnref:hangul&quot;&gt;&lt;a href=&quot;#fn:hangul&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;
한편 Vim에서는 문자 위에 커서를 놓고 &lt;code class=&quot;highlighter-rouge&quot;&gt;g8&lt;/code&gt;을 입력하면 다음과 같이 손쉽게 문자의 byte 값을 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-g8.png&quot; alt=&quot;prototype&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;오 byte 단위로 작업할 일이 있다면 정말 편리하겠네요?
그런데 이것이 이 게임에서는 좀 짜증 나는 문제가 됩니다.
소스코드에 multibyte 문자로 주석이 달려 있을 때 공이 이상하게 움직이는 것을 발견했거든요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-codebreak-multibyte-curve.gif&quot; alt=&quot;prototype&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;고의로 문제를 유발한 위의 gif 영상을 잘 살펴보면 공이 한글이 있는 라인을 지나갈 때 순간적으로 기대한 위치보다 왼쪽으로 점멸하는 것을 볼 수 있습니다. 이유를 이해하기 쉽게 관계된 사실들을 나열하자면 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vim에서는 2 byte 이상의 multibyte 문자를 2 cursor column 사이즈로 보여줍니다(확실치는 않고 제가 모르는 설정이 있을 수 있습니다).&lt;/li&gt;
  &lt;li&gt;제가 작성한 공을 그리는 함수는 공의 미래 x 좌표를 참고하여 문자열을 자르고 공 문자를 끼운 다음 이어붙입니다.&lt;/li&gt;
  &lt;li&gt;문자열을 자를 때 문자열의 배열 인덱스를 기준으로 하는 방법을 사용했는데(깊게 생각하지 않은 결과), Vimscript에서 문자열의 배열 인덱스는 byte 단위입니다. 이로 인해 한글 한 글자를 이루는 3 byte 중 한 byte가 공으로 오염될 가능성이 생깁니다.&lt;/li&gt;
  &lt;li&gt;Vimscript에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;cursor&lt;/code&gt; 함수를 쓰면 커서가 byte 단위로 움직입니다.&lt;/li&gt;
  &lt;li&gt;Vimscript에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;execute &quot;normal! l&quot;&lt;/code&gt; 로 커서를 움직여도 커서는 byte 단위로 움직입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;즉 한글이 왼쪽에 있다면, 최종적으로 표현된 공의 x 좌표 위치가 왜곡되어 보인다는 것입니다.
그뿐만 아니라 만약 공이 한글의 3 byte 중 영 좋지 못한 곳을 지나가면 2개의 byte 문자가 화면에 나타나기도 했습니다.&lt;/p&gt;

&lt;p&gt;이 문제를 해결하기 위해서 머리를 싸매고 고민을 했습니다.&lt;/p&gt;

&lt;p&gt;“라인별로 string 길이와 byte 길이를 비교해서 두 길이가 같지 않으면 multibyte 문자가 있다고 가정하고,
그 차이를 2로 나누면 multibyte 문자의 수가 나올 텐데… 아 이것만으로는 multibyte 문자의 위치를 확정할 수는 없구나. 임의의 x 값에 대해 왼쪽에 있는 multibyte 문자의 수를 구하는 것이 중요하니 라인별로 이진 탐색을 할까?”&lt;/p&gt;

&lt;p&gt;그리고 진짜로 이진 탐색 코드를 작성하기 시작할 무렵…
이전까지 알지 못했던 Vim 명령어를 하나 알게 되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-codebreak-bar.png&quot; alt=&quot;prototype&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;아… &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;를 입력하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt; 처럼 움직이지만, 실제로는 screen column 기준으로 움직이는구나!
역시 매뉴얼을 잘 읽어야 고생을 덜 한다는 교훈을 얻고 &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;를 사용해 x 좌표 문제를 해결할 수 있었습니다.&lt;/p&gt;

&lt;h2 id=&quot;hacker-news-github-trending-today-developers에-오르다&quot;&gt;Hacker News, Github Trending Today Developers에 오르다&lt;/h2&gt;

&lt;p&gt;위의 문제들까지 나름 무난하게 해결하고 나서는 개발이 다 끝났다고 생각했고 마무리 작업으로 돌입했습니다.
아직 이런저런 작은 문제들이 남아있긴 했지만, 천천히 해결하면 된다고 생각했거든요.
며칠 후 이 정도면 됐다는 생각이 들어 트위터에도 올리고 회사 동료들과 개발자 친구들에게 보여주며 신나게 놀았습니다.&lt;/p&gt;

&lt;p&gt;그런데 팀 동료인 허승원 주임님이 이 게임을 해커 뉴스에 올려보면 어떻겠냐는 조언을 주시더군요.
별다른 생각 없이 해커 뉴스에 가입하고, CodeBreak의 Github 저장소 링크를 &lt;a href=&quot;https://news.ycombinator.com/item?id=14693127&quot;&gt;올렸습니다&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;그런데 1~2시간 후 누가 트위터에서 제 저장소가 Hacker News 트위터에 떴다고 알려주길래 들어가서 봤더니 Hacker News 제일 윗자리에 제 글이 있었습니다. 그리고 저녁때쯤 되자 팀 동료인 남규진 님이 Github 트렌드에 제 저장소가 올라갔다고 알려주셨어요.&lt;/p&gt;

&lt;p&gt;그리고 &lt;a href=&quot;https://github.com/johngrib/vim-game-code-break&quot;&gt;저장소&lt;/a&gt;에 별이 찍히기 시작했습니다.&lt;/p&gt;

&lt;p&gt;다음 날 아침이 되자 pull request도 두 개나 들어와 있고 issue도 등록되어 새벽 다섯시에 일어나 pr을 검토하고 머지해주고 issue도 읽어보고 처리해주었습니다. 엄청난 행운이 다가온 느낌이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-hacker-news.jpg&quot; alt=&quot;hacker news&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;해커 뉴스 첫 번째 위치에 5시간 정도 올라가 있었습니다.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-github-trend-repositories.png&quot; alt=&quot;github trend&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;다음 날이 되자 Trending Repositories 순위도 올라서 2번 위치까지 올라갔습니다;;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://johngrib.github.io/post-img/2017/2017-07-06-github-trend-developers.png&quot; alt=&quot;github trend&quot; style=&quot;display: block; padding:1px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;가문의 영광&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;이 글을 쓰고 있는 지금(이틀 후) 확인해보니 Github Star 가 910 개에 이르렀습니다. 광고 이메일이 오기도 하고, 트위터와 구글로 검색해보니 CodeBreak에 대해 대화하는 사람들의 글도 찾아볼 수 있었습니다. 대체로 웃고 즐거워하는 분위기의 글들이 많아 무척 기뻤고 많은 사람에게 재미를 준 것 같아 행복을 느끼고 있습니다.
아마 이런 즐거움도 소프트웨어 개발의 아름다운 측면이 아닐까 생각해 봅니다.&lt;/p&gt;

&lt;p&gt;마지막으로 Reddit에서 &lt;a href=&quot;https://www.reddit.com/r/vim/comments/6l5s9x/blockbreaking_game_in_vim_80/&quot;&gt;CodeBreak에 대한 스레드&lt;/a&gt;를 하나 발견했는데 큰 감사와 부끄러움을 동시에 느끼게 하는 코멘트가 있었습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rathrio: “This is absolutely amazing! I encourage everyone to skim over the code! It’s surprisingly readable Vimscript.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;rathrio님 감사합니다. 그리고 CodeBreak를 다운받은 분들과 이 글을 읽어주신 분들께도 감사를 드립니다.&lt;/p&gt;

&lt;h2 id=&quot;부록-a--링크-출처-모음&quot;&gt;부록 A : 링크, 출처 모음&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/johngrib/vim-game-code-break&quot;&gt;VimGameCodeBreak github repository&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.funnyjunk.com/Deleting+my+history/funny-gifs/4942386#d03c55_4941942&quot;&gt;엘론드: Destroy it! &lt;strong&gt;짤&lt;/strong&gt;림&lt;strong&gt;방&lt;/strong&gt;지 이미지&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/junegunn/vader.vim&quot;&gt;Vader.vim: Vim script test framework&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://memory.loc.gov/diglib/codetables/9.3.html&quot;&gt;MARK 21 Specification: Code Table Korean Hangul&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=14693127&quot;&gt;Hacker News에 올린 글&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/vim/comments/6l5s9x/blockbreaking_game_in_vim_80/&quot;&gt;reddit: Block-breaking game in vim 8.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;부록-b&quot;&gt;부록 B&lt;/h2&gt;
&lt;h3 id=&quot;설치실행-방법&quot;&gt;설치/실행 방법&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Vim 8.0 버전을 준비합니다. (이전 버전에서는 특정 함수들이 지원되지 않을 수 있습니다.)&lt;/li&gt;
  &lt;li&gt;플러그인 관리자를 사용하여 플러그인을 설치합니다.
    &lt;ul&gt;
      &lt;li&gt;플러그인 관리자로는 &lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;VimPlug&lt;/a&gt;, &lt;a href=&quot;https://github.com/VundleVim/Vundle.vim&quot;&gt;Vundle&lt;/a&gt;, &lt;a href=&quot;https://github.com/tpope/vim-pathogen&quot;&gt;Pathogen&lt;/a&gt;를 추천합니다.&lt;/li&gt;
      &lt;li&gt;플러그인 관리자를 쓰기 싫다면 직접 Vim personal runtime path(일반적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.vim&lt;/code&gt;)에 소스코드를 복사해도 됩니다.
        &lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.vim/plugin
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/johngrib/vim-game-code-break.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Vim을 재실행하거나 스크립트를 읽어들입니다.&lt;/li&gt;
  &lt;li&gt;스트레스를 풀고 싶은 소스코드 파일을 버퍼로 불러옵니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:VimGameCodeBreak&lt;/code&gt;를 입력하여 게임을 시작합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;게임-방법&quot;&gt;게임 방법&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Arkanoid&quot;&gt;알카노이드&lt;/a&gt;와 같은 일반적인 벽돌 깨기 게임 규칙을 따릅니다. 막대기로 낙하하는 공을 튕겨내고, 공이 코드를 때리면 코드가 사라집니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;space&lt;/code&gt; 키를 누르면 공을 출발시키고, 게임을 시작할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;h&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;l&lt;/code&gt; 로 막대기를 좌우로 움직입니다.&lt;/li&gt;
  &lt;li&gt;공이 막대기가 없는 바닥으로 떨어지게 되면 Life 점수가 감소합니다.&lt;/li&gt;
  &lt;li&gt;아이템을 먹으면 Life 점수가 회복되거나, 공이 추가된다던가, 막대기의 길이가 변화하는 등의 효과를 기대할 수 있습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;EOB&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:hangul&quot;&gt;
      &lt;p&gt;&lt;strong&gt;바로잡습니다.&lt;/strong&gt; UTF-8에서 한글의 초성, 중성, 종성이 각각 1 byte 씩 차지한다는 것은 제 추측이었으며 잘못된 정보입니다.&lt;br /&gt;&lt;a href=&quot;https://www.facebook.com/oh.hyunsok&quot;&gt;Frank Hyunsok Oh&lt;/a&gt;님께서 첨부한 멘션을 인용합니다.&lt;br /&gt; &lt;em&gt;중간에 “초성 중성 종성이 1 byte씩 차지하기 때문”은 잘못된 정보같습니다. 한번 더 확인해 보시면 좋을것 같아요. 말씀하신 초중종성 분리 가능은 원래의 유니코드 한글 소리마디(Hangul Syllables) 코드포인트의 특징이고, 이를 인코딩한 UTF-8은 원래의 16비트 xxxxyyyyyyzzzzzz를 1110xxxx 10yyyyyy 10zzzzzz 처럼 인코딩합니다. 원래의 한글 소리마디 코드포인트에서는 ((초성 값 x 21) + 중성 값) x 28 + 종성 같은 형식으로 인코딩이 되어 있고요.&lt;/em&gt; &lt;a href=&quot;#fnref:hangul&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 09 Jul 2017 00:15:00 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/07/09/vim-game-code-break/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/07/09/vim-game-code-break/</guid>
        
        <category>vim game</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 16</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#열-여섯-번째-수업-이모저모&quot; id=&quot;markdown-toc-열-여섯-번째-수업-이모저모&quot;&gt;열 여섯 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#마지막-말씀&quot; id=&quot;markdown-toc-마지막-말씀&quot;&gt;마지막 말씀&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#교수님이-과거로-돌아가-자바-웹-백엔드-개발자를-시작한다면&quot; id=&quot;markdown-toc-교수님이-과거로-돌아가-자바-웹-백엔드-개발자를-시작한다면&quot;&gt;교수님이 과거로 돌아가 자바 웹 백엔드 개발자를 시작한다면&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#효과적으로-학습하는-방법론도-공부할-것&quot; id=&quot;markdown-toc-효과적으로-학습하는-방법론도-공부할-것&quot;&gt;효과적으로 학습하는 방법론도 공부할 것&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#자바-웹-개발-관련-추천-서적&quot; id=&quot;markdown-toc-자바-웹-개발-관련-추천-서적&quot;&gt;자바 웹 개발 관련 추천 서적&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;열-여섯-번째-수업-이모저모&quot;&gt;열 여섯 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-06-01 19:00:03 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;오늘은 8주 과정의 마지막 수업.&lt;/li&gt;
  &lt;li&gt;수업 시작시에 화재 경보가 울림.
    &lt;ul&gt;
      &lt;li&gt;대피를 주저하는 사람들도 있었지만 결국 모두 안전하게 건물 바깥으로 빠져나갔다.&lt;/li&gt;
      &lt;li&gt;원칙에 충실한 회사를 다닌다는 것이 기쁘다.&lt;/li&gt;
      &lt;li&gt;다행히 진짜 화재가 아니었으므로(경보기 오작동), &lt;code class=&quot;highlighter-rouge&quot;&gt;19:35&lt;/code&gt;에 강의실로 복귀하여 수업을 계속 들을 수 있었다.&lt;/li&gt;
      &lt;li&gt;화재 경보에 대한 안전 불감증도 일종의 ‘깨진 창문’으로 볼 수 있지 않을까?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;마지막-말씀&quot;&gt;마지막 말씀&lt;/h1&gt;

&lt;h2 id=&quot;교수님이-과거로-돌아가-자바-웹-백엔드-개발자를-시작한다면&quot;&gt;교수님이 과거로 돌아가 자바 웹 백엔드 개발자를 시작한다면&lt;/h2&gt;

&lt;p&gt;시작하는 단계&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;기본: Spring Boot + Spring&lt;/li&gt;
  &lt;li&gt;DB: Spring Data JPA, ORM 프레임워크, 관계형 DB, DB Migration 도구
    &lt;ul&gt;
      &lt;li&gt;ORM은 현재 프로젝트에 사용하지 않더라도 미래를 위해…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인증, 인가: Spring Security&lt;/li&gt;
  &lt;li&gt;Clean code: 객체지향, 테스트, 리팩토링&lt;/li&gt;
  &lt;li&gt;빌드 도구: 메이븐 또는 그래들&lt;/li&gt;
  &lt;li&gt;Logging: SLF4J, Logback&lt;/li&gt;
  &lt;li&gt;자동화: 쉘 스크립트&lt;/li&gt;
  &lt;li&gt;소스 코드 관리: Git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;한 단계 더 나아간다면&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프레임워크, 라이브러리 직접 구현&lt;/li&gt;
  &lt;li&gt;기초 지식: 네트워크, HTTP&lt;/li&gt;
  &lt;li&gt;DB: No SQL&lt;/li&gt;
  &lt;li&gt;Restful API, react.js, angular.js&lt;/li&gt;
  &lt;li&gt;함수형 프로그래밍, Reactive Programming&lt;/li&gt;
  &lt;li&gt;보안과 성능: Cache(서버측 Cache, 정적인 자원 Cache), Message Queue, SSL&lt;/li&gt;
  &lt;li&gt;자동화: Ansible, Docker&lt;/li&gt;
  &lt;li&gt;개발문화 및 프로세스&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;효과적으로-학습하는-방법론도-공부할-것&quot;&gt;효과적으로 학습하는 방법론도 공부할 것&lt;/h2&gt;

&lt;p&gt;추천 서적&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788901150598&quot;&gt;습관의 힘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788995540213&amp;amp;orderClick=LAG&amp;amp;Kc=&quot;&gt;이너 게임: 배우며 즐겁게 일하는 법(절판)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788973378869&amp;amp;orderClick=LAG&amp;amp;Kc=&quot;&gt;몰입의 즐거움&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791186805282&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;1만 시간의 재발견: 노력은 왜 우리를 배신하는가&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;자바-웹-개발-관련-추천-서적&quot;&gt;자바 웹 개발 관련 추천 서적&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788965400677&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;자바 웹 개발 워크북&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966261161&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;Effective Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788960773431&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;토비의 SPRING&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788960777330&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;JPA 프로그래밍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966261024&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;TDD by example&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788979149715&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;Refactoring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788998139766&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;객체지향의 사실과 오해&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788969090010&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;객체 지향과 디자인 패턴&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966260959&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;Clean Code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788992939850&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;도메인 주도 설계&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052&quot;&gt;Working Effectively with Legacy Code 1st Edition&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788989975922&amp;amp;orderClick=LAH&amp;amp;Kc=&quot;&gt;레거시 코드 활용 전략&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Isolation level에 대해서는 SQL 92 문서를 참고 (Table9, 69쪽)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt&quot;&gt;SQL 92&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-KlMu_0pZySnFa_fxo_n&quot;&gt;Test, OOP 피드백&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-Kiheahir0nyud31unoI&quot;&gt;Spring Profile 및 서버 배포&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://blog.restcase.com/rest-api-error-codes-101/&quot;&gt;REST API Error Codes 101&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/slipp/jwp-spring-boot/tree/step12-spring-profile&quot;&gt;참고용 교수님 저장소&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;DB migration 도구
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://flywaydb.org/&quot;&gt;flywaydb&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://www.liquibase.org/&quot;&gt;liquibase&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://firebasestorage.googleapis.com/v0/b/nextstep-real.appspot.com/o/lesson-attachments%2F-KgqHzXq92AfQVxeZor5%2F8-2-3.%20%EC%B5%9C%EC%A2%85%20%EC%A0%95%EB%A6%AC.pdf?alt=media&amp;amp;token=893d17ee-b6fc-4927-bed7-f973c55abb09&quot;&gt;최종 정리.pdf&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/slipp/jwp-book/tree/master/chapter1&quot;&gt;초보 웹 개발자를 위하여&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3mgMwObtaQ0&quot;&gt;자바 웹 개발자의 학습 로드맵&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://slipp.net/&quot;&gt;교수님께 질문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 01 Jun 2017 19:52:40 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/06/01/jwp-16/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/06/01/jwp-16/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 15</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#열-다섯-번째-수업-이모저모&quot; id=&quot;markdown-toc-열-다섯-번째-수업-이모저모&quot;&gt;열 다섯 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#restful-api-설계&quot; id=&quot;markdown-toc-restful-api-설계&quot;&gt;Restful API 설계&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;열-다섯-번째-수업-이모저모&quot;&gt;열 다섯 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-29 19:00:01 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;책 추천: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788931004090&amp;amp;orderClick=JAj&quot;&gt;내가 믿는 세상 by E.F. 슈마허&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;오늘은 Restful API 설계 실습을 해본다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;restful-api-설계&quot;&gt;Restful API 설계&lt;/h1&gt;

&lt;p&gt;교수님 추천 읽어볼만한 글들&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&quot;&gt;Best Practices for Designing a Pragmatic RESTful API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.apigee.com/rs/apigee/images/api-design-ebook-2012-03.pdf&quot;&gt;PDF: Web API Design Crafting Interfaces that Developers Love&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://martinfowler.com/articles/richardsonMaturityModel.html&quot;&gt;Martin Fowler - steps toward the glory of REST&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;REST를 처음 제안한 로이 필딩의 논문 링크. 다 읽기 번거롭다면 &lt;strong&gt;CHAPTER 5: Representational State Transfer (REST)&lt;/strong&gt;라도 읽어두면 괜찮다.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm&quot;&gt;Architectural Styles and the Design of Network-based Software Architectures by Roy Thomas Fielding&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.google.co.kr/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=2&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwjVj5Hj-JTUAhXEo5QKHQWdCTMQFgg2MAE&amp;amp;url=https%3A%2F%2Fwww.ics.uci.edu%2F~fielding%2Fpubs%2Fdissertation%2Ffielding_dissertation.pdf&amp;amp;usg=AFQjCNEEwS3STct3jnKXToOQXO15Q4cY1g&quot;&gt;PDF 파일&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&quot;&gt;Best Practices for Designing a Pragmatic RESTful API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://pages.apigee.com/rs/apigee/images/api-design-ebook-2012-03.pdf&quot;&gt;PDF: Web API Design Crafting Interfaces that Developers Love&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-Kihe6YpYKTxWlvaE-xz&quot;&gt;RESTful API 설계&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-Kj6o0MYeqXWkmV7uR_s&quot;&gt;테스트를 활용한 Restful API 개발&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-KiheRpKnPav7jqwECvw&quot;&gt;테스트, 객체 지향 프로그래밍&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/slipp/jwp-spring-boot/tree/step10-delete-question-completed&quot;&gt;과제 참고용 교수님 저장소&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 29 May 2017 19:54:06 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/29/jwp-15/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/29/jwp-15/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 14</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#열-네-번째-수업-이모저모&quot; id=&quot;markdown-toc-열-네-번째-수업-이모저모&quot;&gt;열 네 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#프로그래밍-단상-변화를-어떻게-만들어갈-것인가&quot; id=&quot;markdown-toc-프로그래밍-단상-변화를-어떻게-만들어갈-것인가&quot;&gt;프로그래밍 단상: 변화를 어떻게 만들어갈 것인가?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#immutable-객체-메모&quot; id=&quot;markdown-toc-immutable-객체-메모&quot;&gt;immutable 객체 메모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#orm---jpa&quot; id=&quot;markdown-toc-orm---jpa&quot;&gt;ORM - JPA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;열-네-번째-수업-이모저모&quot;&gt;열 네 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-25 19:00:00 +0900&lt;/code&gt; 무렵에 시작했을 것으로 추측.
    &lt;ul&gt;
      &lt;li&gt;이번 수업엔 내가 3 분 정도 지각했다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;오늘은 ORM을 사용해 본다.&lt;/li&gt;
  &lt;li&gt;이제 종강까지 수업 두 번 남았다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;프로그래밍-단상-변화를-어떻게-만들어갈-것인가&quot;&gt;프로그래밍 단상: 변화를 어떻게 만들어갈 것인가?&lt;/h1&gt;

&lt;p&gt;회고를 통해 얻은 깨달음을 토대로 작은 성공을 반복해 가는 사이클.&lt;/p&gt;

&lt;p&gt;작은 변화들의 누적으로 인한 큰 변화의 발생을 기대하는 방식이 마음에 든다.&lt;/p&gt;

&lt;h1 id=&quot;immutable-객체-메모&quot;&gt;immutable 객체 메모&lt;/h1&gt;

&lt;p&gt;어지간한 경우엔 그냥 불변 객체를 쓰는 쪽이 좋다고 생각한다.
자잘한 버그가 줄어들고, 읽기도 더 편하다. 사이드 이펙트를 관리하기도 좋다.&lt;/p&gt;

&lt;p&gt;Java에서는 불변 객체의 사용이 꽤 번거로운 편이므로
Scala 같은 언어를 사용하는 것도 좋다고 생각한다.&lt;/p&gt;

&lt;p&gt;덧붙이자면 객체 뿐 아니라 변수의 사용도 자제하고,
가능한 한 상수만을 사용해서 코딩하는 것도 좋다고 생각한다.&lt;/p&gt;

&lt;h1 id=&quot;orm---jpa&quot;&gt;ORM - JPA&lt;/h1&gt;

&lt;p&gt;이 책 한 권이면 된다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.acornpub.co.kr/book/jpa-programmig&quot;&gt;자바 ORM 표준 JPA 프로그래밍&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KgqHPfpV1xrdi1_T9ne/lessons/-Kk9mNZRospN5eO7duC0&quot;&gt;프로그래밍 단상&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-Kihe0w5_EXX4St6SZcT&quot;&gt;ORM 및 Spring Data JPA&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 27 May 2017 18:00:40 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/27/jwp-14/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/27/jwp-14/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 13</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#열-세-번째-수업-이모저모&quot; id=&quot;markdown-toc-열-세-번째-수업-이모저모&quot;&gt;열 세 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;열-세-번째-수업-이모저모&quot;&gt;열 세 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-22 19:00:00 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;회고에 대한 이야기
    &lt;ul&gt;
      &lt;li&gt;회고는 소프트웨어 개발 프로세스에서 가장 중요한 활동 중 하나.&lt;/li&gt;
      &lt;li&gt;회고를 할 때 팀원간의 감정 공유도 매우 중요하다.
        &lt;ul&gt;
          &lt;li&gt;감사 메시지 남기기&lt;/li&gt;
          &lt;li&gt;서로, 스스로 칭찬하기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이번 수업 내용은 다소 까다롭고 난이도가 높았다.
교수님 레파지토리를 보고 곱씹어 보는 시간이 필요할듯.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/slipp/jwp-spring-boot/tree/step2-refactoring&quot;&gt;교수님 레파지토리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-KihdwAUJKQvBDvkGCmQ&quot;&gt;AOP 개념 및 로그인 기반 테스트&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-KkPXQQuTJB7TSIF7f4a&quot;&gt;Spring AOP 및 LoggingAspect&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 23 May 2017 22:05:44 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/23/jwp-13/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/23/jwp-13/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 12</title>
        <description>&lt;h1 id=&quot;열-두-번째-수업-이모저모&quot;&gt;열 두 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-18 19:00:00 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;오늘부터는 Spring Boot를 공부한다.&lt;/li&gt;
  &lt;li&gt;오늘의 목표는 교수님을 따라 Spring Boot 애플리케이션을 작성하고, 배포까지 하는 것.
    &lt;ul&gt;
      &lt;li&gt;그러나 프로젝트를 만드는 과정에서 너무 많은 시간이 소요되는 사람들이 몇 명 있었다.&lt;/li&gt;
      &lt;li&gt;그 중에 나도 있었다. (아마 내가 제일 오래 걸린듯 하다)&lt;/li&gt;
      &lt;li&gt;프로젝트 셋팅에 시간이 너무 오래 걸려, 수업 목표가 바뀌었다.
        &lt;ul&gt;
          &lt;li&gt;배포는 포기하고 애플리케이션 작성 완료를 목표로.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IntelliJ에서 새로운 Spring Boot 프로젝트를 만들고 빌드하는 과정이 너무 힘들었다.
    &lt;ul&gt;
      &lt;li&gt;뭘 어떻게 해도 자꾸 에러가 발생했다.&lt;/li&gt;
      &lt;li&gt;두 시간 가까이 삽질을 했고 규진님의 도움으로 가까스로 셋팅을 완료하고 코딩에 들어갈 수 있었다.&lt;/li&gt;
      &lt;li&gt;이후엔 개인적으로 급한 일이 생겨 일찍 집으로 돌아갔다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;책 소개 : &lt;a href=&quot;https://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966260836&quot;&gt;객체지향 설계와 실천&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;오늘의 강의 내용은 이 책과 관련이 깊음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;아마추어와-프로의-차이&quot;&gt;아마추어와 프로의 차이&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;책 소개: &lt;a href=&quot;https://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9791186805282&quot;&gt;1만 시간의 재발견&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;심리학자 말콤 글래드웰이 만든 1만 시간의 법칙을 비판하는 책으로 보인다.&lt;/li&gt;
  &lt;li&gt;1만 시간의 법칙은 반례가 충분히 많기 때문에 과학 이론으로서는 결함이 많다고 생각해왔다. 기본적으로는 생각해왔던 것들과 큰 차이가 없을 것 같아서 책 자체에 큰 흥미가 생기진 않는다. 나중에 서점 가서 대충 훑어볼 생각.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;과제-수행&quot;&gt;과제 수행&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업을 끝까지 듣지 못했으므로 무엇이 과제인지 알지 못한다.&lt;/li&gt;
  &lt;li&gt;따라서 수업 교재를 보고 수업 시간에 따라하지 못한 것을 완료할 것을 목표로 삼고 작업을 시작하였다.&lt;/li&gt;
  &lt;li&gt;그런데 이번 주말엔 이런 저런 일로 시간이 부족해서 과제에 쏟을 시간이 충분하지 못하여, 교수님의 저장소를 참고하고 따라 해 보는 정도로 만족하기로 했다.&lt;/li&gt;
  &lt;li&gt;브라우저를 열지 않고 웹 개발을 한다는 다소 모순된 것 같은 방식에 점차 익숙해지고 있다. 너무 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;과제 완료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/slipp/jwp-spring-boot&quot;&gt;참고 자료: 교수님의 저장소&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/johngrib/test-spring-boot/tree/step1-johngrib&quot;&gt;내 과제 수행 결과&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KihchAcnJJxzb909TBT/lessons/-KjqDMIMMiyhMCImA8Hw&quot;&gt;점진적 소프트웨어 개발 by 테스트&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 20 May 2017 20:44:40 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/20/jwp-12/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/20/jwp-12/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 11</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#열-한-번째-수업-이모저모&quot; id=&quot;markdown-toc-열-한-번째-수업-이모저모&quot;&gt;열 한 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mockito-테스트-실습&quot; id=&quot;markdown-toc-mockito-테스트-실습&quot;&gt;Mockito 테스트 실습&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;열-한-번째-수업-이모저모&quot;&gt;열 한 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-15 19:00:00 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;이제 수업이 3주 남았다.
    &lt;ul&gt;
      &lt;li&gt;다음 주 부터는 5회에 걸쳐 Spring Boot를 학습한다.&lt;/li&gt;
      &lt;li&gt;마지막 수업엔 개발한 Spring Boot 어플리케이션의 배포를 실습한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이론 수업
    &lt;ul&gt;
      &lt;li&gt;빈 컨테이너 설정 관리&lt;/li&gt;
      &lt;li&gt;Spring life cycle&lt;/li&gt;
      &lt;li&gt;Property Source 및 환경 변수&lt;/li&gt;
      &lt;li&gt;Java Bean Validation&lt;/li&gt;
      &lt;li&gt;DI 기반 단위 테스트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;피자/맥주 파티
    &lt;ul&gt;
      &lt;li&gt;약 21시부터 피자/맥주 파티를 하며 담소를 나누었다.&lt;/li&gt;
      &lt;li&gt;나는 피자/맥주/콜라 모두 안 먹는 음식들이라 생수만 마셨다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;mockito-테스트-실습&quot;&gt;Mockito 테스트 실습&lt;/h1&gt;

&lt;p&gt;Mockito를 사용하니 어렵지 않고 깔끔하게 끝낼 수 있었다.
약간 우려스러운 점이 있긴 하지만 아직은 Mockito를 잘 모르니 좀 더 익숙해지면 생각해보도록 하자.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RunWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MockitoJUnitRunner&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;QnaServiceTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QuestionDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnswerDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answerDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QnaService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Before&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;QnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answerDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 로그인 사용자와 질문한 사람이 같아야 한다.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Positive_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;질문한&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;사람과&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제하려는&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;사람이&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;같으면&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제할&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;수&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;있다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;질문하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;제목&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteQuestion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 로그인 사용자와 질문한 사람이 같아야 한다.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Negative_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;질문한&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;사람과&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제하려는&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;사람이&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;다르면&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제할&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;수&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;없다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;질문하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;제목&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;삭제하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteQuestion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 답변이 없는 경우 삭제가 가능하다.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Positive_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;답변이&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;없는&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;경우&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제가&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;가능하다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;질문하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;제목&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answerDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAllByQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EMPTY_LIST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteQuestion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 답변이 없는 경우 삭제가 가능하다.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Negative_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;답변이&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;있다면&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제할&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;수&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;없다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;질문하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;제목&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;답변하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answerDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAllByQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteQuestion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 질문자와 답변자가 같은 경우 삭제가 가능하다.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Positive_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;답변이&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;있어도&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;질문자와&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;답변자가&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;같다면&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제할&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;수&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;있다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;질문하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;제목&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answerDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAllByQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteQuestion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 질문자와 답변자가 다른 경우 답변을 삭제할 수 없다.&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Negative_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;답변이&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;있을&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;때&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;질문자와&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;답변자가&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;다르면&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;삭제할&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;수&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;없다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CannotOperateException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;질문하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;답변하는 사람 아이디&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;제목&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getUserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;내용&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;questionDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answerDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAllByQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;thenReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;qnaService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;deleteQuestion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getQuestionId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;과제 완료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/johngrib/jwp-spring/tree/step2-johngrib&quot;&gt;Mockito 테스트 실습&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9qPOW42m1nnuoyvXz/lessons/-KiY-AXcRm8DhRdOy5Rv&quot;&gt;DI 기반 단위 테스트&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 16 May 2017 21:36:06 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/16/jwp-11/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/16/jwp-11/</guid>
        
        <category>study jwp mockito DI</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 10</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#열-번째-수업-이모저모&quot; id=&quot;markdown-toc-열-번째-수업-이모저모&quot;&gt;열 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#단상-삶과-프로그래밍&quot; id=&quot;markdown-toc-단상-삶과-프로그래밍&quot;&gt;단상: 삶과 프로그래밍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#di-프레임워크-1단계-실습&quot; id=&quot;markdown-toc-di-프레임워크-1단계-실습&quot;&gt;DI 프레임워크 1단계 실습&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;열-번째-수업-이모저모&quot;&gt;열 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-11 19:03:00 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;오늘은 지난 시간 feedback 후 DI를 구현하는 연습을 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;단상-삶과-프로그래밍&quot;&gt;단상: 삶과 프로그래밍&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;어떻게 일할 것인가?&lt;/li&gt;
  &lt;li&gt;내가 일지를 작성하는 방식을 공유하였다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;di-프레임워크-1단계-실습&quot;&gt;DI 프레임워크 1단계 실습&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;요구사항&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;새로 만든 MVC 프레임워크는 자바 리플렉션을 활용해 @Controller 애노테이션이 설정되어 있는 클래스를 찾아 인스턴스를 생성하고, URL 매핑 작업을 자동화했다. 같은 방법으로 각 클래스에 대한 인스턴스 생성 및 의존관계 설정을 애노테이션으로 자동화한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;먼저 애노테이션은 각 클래스 역할에 맞도록 컨트롤러는 이미 추가되어 있는 @Controller, 서비스는 @Service, DAO는 @Repository 애노테이션을 설정한다. 이 3개의 설정으로 생성된 각 인스턴스 간의 의존관계는 @Inject 애노테이션을 사용한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;내 구현 내용은 &lt;a href=&quot;https://github.com/johngrib/jwp-basic/tree/step10-johngrib&quot;&gt;GitHub&lt;/a&gt;에 올려두었다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;교수님은 다들 부담스럽겠지만 재귀를 사용해야 할 것이라며 재귀를 강조하셨지만, 나는 오히려 for loop보다 재귀를 선호하는 편이므로 자신만만하게 작업을 시작했다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그러나 몇 가지 메서드가 이미 구현되어 있다는 걸 생각하지 못했고, (&lt;code class=&quot;highlighter-rouge&quot;&gt;BeanFactoryUtils.getInjectedConstructor&lt;/code&gt;나, &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanFactoryUtils.findConcreteClass&lt;/code&gt; 등) Repository 도 구현된 게 있다는 걸 발견하지 못해서 3 시간 가까이 갈피를 잡지 못하고 헤메이다 간신히 힌트를 보고 숙제를 할 수 있었다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일요일까지 끌고 오긴 했지만(…) 과제를 완수할 수 있어서 다행이라 생각한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johngrib/jwp-basic/tree/step10-johngrib&quot;&gt;과제 완료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.martinfowler.com/articles/injection.html#FormsOfDependencyInjection&quot;&gt;Martin Fowler: Inversion of Control Containers and the Dependency Injection pattern&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KgqHPfpV1xrdi1_T9ne/lessons/-Ki7rZnr3DpctbqOtJQn&quot;&gt;삶과 프로그래밍: 어떻게 일할 것인가?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9qPOW42m1nnuoyvXz/lessons/-KiXzwhTznbMAcSlMO7w&quot;&gt;DI 프레임워크 1단계 실습 및 힌트&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 14 May 2017 14:10:50 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/14/jwp-10/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/14/jwp-10/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 09</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#아홉-번째-수업-이모저모&quot; id=&quot;markdown-toc-아홉-번째-수업-이모저모&quot;&gt;아홉 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#단상-삶과-프로그래밍&quot; id=&quot;markdown-toc-단상-삶과-프로그래밍&quot;&gt;단상: 삶과 프로그래밍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#메모-spring-annotation&quot; id=&quot;markdown-toc-메모-spring-annotation&quot;&gt;메모: Spring Annotation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#메모-refactoring-fp-oop&quot; id=&quot;markdown-toc-메모-refactoring-fp-oop&quot;&gt;메모: Refactoring, FP, OOP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#spring-mvc-실습&quot; id=&quot;markdown-toc-spring-mvc-실습&quot;&gt;Spring MVC 실습&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;아홉-번째-수업-이모저모&quot;&gt;아홉 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-05-08 19:01:00 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;사내 교육장이 완성되어, 이제부터는 소마 미술관에 가지 않아도 된다.
    &lt;ul&gt;
      &lt;li&gt;다만 교육장 내부 시설은 아직 정비가 필요한 듯하다. 간이 책상과 의자를 사용했고, 교육장 앞쪽에 컴퓨터를 둘 수 없어, 박재성 교수님이 앞뒤로 이동하며 강의하셔야 했음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;오늘은 MVC 프레임워크 실습 피드백을 하고, Spring 실습을 한다.&lt;/li&gt;
  &lt;li&gt;QnA가 다른 시간보다 활발한 편이었다. 리팩토링에 대한 이야기가 주를 이루었음.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;단상-삶과-프로그래밍&quot;&gt;단상: 삶과 프로그래밍&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;권위: 동의할 수 없는 권위에 굴복하지 말 것.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;메모-spring-annotation&quot;&gt;메모: Spring Annotation&lt;/h1&gt;

&lt;p&gt;스프링엔 어노테이션이 도입되지 않았던 시절도 있었다. 어노테이션 없이도 훌륭한 스프링 애플리케이션을 만드는 것은 가능할 것이다. 그러나 스프링 어노테이션의 존재를 알면서도 사용하지 않는 사람은 매우 드물 거라고 생각한다.&lt;/p&gt;

&lt;p&gt;내 관점에서 현재의 스프링은 거대한 리플렉션 라이브러리다. 스프링은 리플렉션을 사용한 어노테이션 기능을 잔뜩 구현해 놓음으로써, 사용자가 리플렉션의 필요를 느끼지 못하게 만들었다.&lt;/p&gt;

&lt;p&gt;나는 리플렉션이 Java답지 않은 기능이라고 생각한다. Java의 중요한 특징인 강한 타입과 IDE 지원을 무시하는 코드가 생산되기 때문이다. 게다가 결과물은 Exception이 잔뜩 붙어 있어 참기 어려운 고약한 냄새가 난다. 하지만 Java의 문법만으로는 몇몇 작업을 수행할 때 한계가 있으니 울며 겨자 먹기로 사용할 수 밖에 없다.&lt;/p&gt;

&lt;p&gt;하지만 스프링이 있다면 사용자의 코드에서는 리플렉션이 사라지게 된다. 스프링 어노테이션은 환상적인 기능이다. 클래스와 메서드에 어노테이션 스탬프만 쾅쾅 찍어 놓으면 프레임워크가 알아서 리플렉션으로 처리해준다. 이는 내가 좋아하는 스티브 맥코넬의 ‘최종 목표’와도 걸맞는 일이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;최종 목표는 한번에 생각해야 하는 프로그램의 양을 최소화하는 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;스프링은 Java 프레임워크의 정점이라는 생각까지 들고 있다. 그러나 이것이 과연 바람직한 일일까? 로드 존슨이 어노테이션 도입을 반대했다는 이야기를 얼핏 들은 것 같은데, 아마도 스프링 어노테이션으로 인한 커플링을 걱정했던 모양이다.&lt;/p&gt;

&lt;p&gt;루비 온 레일즈에 대한 비판을 찾아보는 것도 좋을 것 같다.&lt;/p&gt;

&lt;h1 id=&quot;메모-refactoring-fp-oop&quot;&gt;메모: Refactoring, FP, OOP&lt;/h1&gt;

&lt;p&gt;OOP Language에서 Functional Language로 넘어가는 작업을 해 본 적이 있었다. Java에서 Scala로. 전체적인 구조는 OOP 형식으로 잡고 메서드 단위에서는 FP 방식으로 코딩하는 쪽으로 작업을 했는데 썩 만족스러웠다.&lt;/p&gt;

&lt;p&gt;그러나 돌이켜 생각해보니 아쉬운 마음이 든다.&lt;/p&gt;

&lt;p&gt;전체적인 구조를 OOP로 잡고, 메서드 단위에서 FP의 이념을 구현한 것은… 현실적인 대안이긴 했지만 FP라 부르기에는 많이 부족했다고 생각한다. 패러다임이 바뀌지 않았기 때문이다. 결과물은 여전히 객체들 사이의 상호작용이었다.&lt;/p&gt;

&lt;p&gt;Java에서는 함수를 동적으로 생성해 리턴하거나, 일반 동사처럼 작동하는 여러 개의 기본 함수를 합성해 한 번만 사용하거나 하는 일들이 어렵거나 때로는 불가능하다. OOP 하 FP 스타일의 메서드 구현이란 궁여지책은, 함수가 스스로 존재할 수 없으며 클래스에 내재되어야 하는 구조이기 때문에 그렇게 작업할 수 밖에 없는 Java의 문법, Java의 OOP 패러다임에 지나치게 익숙했기 때문에 비롯된 것이었다고 생각한다.&lt;/p&gt;

&lt;p&gt;물론 나는 그 경험이 나쁜 경험이었다고는 생각하지 않는다. 좋은 경험에 가깝다. FP 언어로 넘어갔음에도 불구하고 안타깝게도 패러다임이 전환에 실패한 경험일 뿐이다. OOP 코드는 FP 메서드를 뿌려줘도 계속 OOP 코드일 수 밖에 없다는 교훈을 얻었다.&lt;/p&gt;

&lt;h1 id=&quot;spring-mvc-실습&quot;&gt;Spring MVC 실습&lt;/h1&gt;

&lt;p&gt;강의는 Spring 아키텍처에 대한 내용이 주를 이루었다.&lt;/p&gt;

&lt;p&gt;내 구현 내용은 &lt;a href=&quot;https://github.com/johngrib/jwp-spring/tree/step1-johngrib&quot;&gt;GitHub&lt;/a&gt;에 올려두었다.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johngrib/jwp-spring/tree/step1-johngrib&quot;&gt;step1 과제 완료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sangwook.github.io/2016/06/14/ruby-rails-solnic.html&quot;&gt;“Rails 이제 안 써” 를 읽고&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://solnic.eu/2016/05/22/my-time-with-rails-is-up.html&quot;&gt;My time with Rails is up&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-KgqHPfpV1xrdi1_T9ne/lessons/-Ki7rZnr3DpctbqOtJQn&quot;&gt;삶과 프로그래밍: 권위&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9leY0VnZi2akOLdkW/lessons/-KiczjAzomD4tthzbxCE&quot;&gt;MVC 프레임워크 3단계 실습 피드백&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9leY0VnZi2akOLdkW/lessons/-KiXzmz-fArFcxPxgjH_&quot;&gt;Spring MVC 실습&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 09 May 2017 10:45:58 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/09/jwp-09/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/09/jwp-09/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Vim 사용시 한/영 전환 문제 해결하기</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#짜증나는-한영전환을-완벽히-해결해-보자&quot; id=&quot;markdown-toc-짜증나는-한영전환을-완벽히-해결해-보자&quot;&gt;짜증나는 한영전환을 완벽히 해결해 보자&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#langmap을-사용하는-방법&quot; id=&quot;markdown-toc-langmap을-사용하는-방법&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;langmap&lt;/code&gt;을 사용하는 방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#구름-입력기를-사용하는-방법&quot; id=&quot;markdown-toc-구름-입력기를-사용하는-방법&quot;&gt;구름 입력기를 사용하는 방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#karabiner를-사용하는-방법&quot; id=&quot;markdown-toc-karabiner를-사용하는-방법&quot;&gt;karabiner를 사용하는 방법&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hammerspoon을-사용하는-방법&quot; id=&quot;markdown-toc-hammerspoon을-사용하는-방법&quot;&gt;hammerspoon을 사용하는 방법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;짜증나는-한영전환을-완벽히-해결해-보자&quot;&gt;짜증나는 한영전환을 완벽히 해결해 보자&lt;/h1&gt;

&lt;p&gt;Vim을 사용할 때 가장 짜증나는 일은 한국어로 주석을 적다가 Normal 모드로 들어갔을 때 한국어 글자가 입력되어 명령이 제대로 먹히지 않는 경우일 것이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;를 입력할 때마다 영문으로 바뀌면 좋은데, 방법을 모를 때에는 일일이 영문으로 전환해주고 모드를 변경해주는 수고를 해 주어야 한다.&lt;/p&gt;

&lt;p&gt;지금이야 이런 저런 꼼수들을 적용해놔서 생각할 필요가 없는 문제이긴 하다.&lt;/p&gt;

&lt;p&gt;그러나 이걸 아예 잊고 살다가 나중에 다 까먹고 새로운 환경에서 삽질할 일을 방지하기 위해 글을 남겨두기로 했다.&lt;/p&gt;

&lt;h2 id=&quot;langmap을-사용하는-방법&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;langmap&lt;/code&gt;을 사용하는 방법&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;langmap&lt;/code&gt;을 사용하면 꼭 영문이 아니어도 Normal 모드에서 명령을 입력할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-viml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; langmap&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;ㅁ&lt;span class=&quot;k&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅠ&lt;span class=&quot;k&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅊ&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅇ&lt;span class=&quot;k&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㄷ&lt;span class=&quot;k&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㄹ&lt;span class=&quot;k&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅎ&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅗ&lt;span class=&quot;k&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅑ&lt;span class=&quot;k&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅓ&lt;span class=&quot;k&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅏ&lt;span class=&quot;k&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅣ&lt;span class=&quot;k&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅡ&lt;span class=&quot;k&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅜ&lt;span class=&quot;k&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅐ&lt;span class=&quot;k&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅔ&lt;span class=&quot;k&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅂ&lt;span class=&quot;k&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㄱ&lt;span class=&quot;k&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㄴs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅅ&lt;span class=&quot;k&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅕ&lt;span class=&quot;k&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅍ&lt;span class=&quot;k&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅈ&lt;span class=&quot;k&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅌ&lt;span class=&quot;k&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅛ&lt;span class=&quot;k&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;ㅋz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vim 자체의 설정만을 사용하는 방법이라 썩 괜찮은 방법. 그러나 명령을 입력할 때마다 한국어 글쇠의 잔상이 남아서 보기 껄끄럽고 신경쓰인다. &lt;code class=&quot;highlighter-rouge&quot;&gt;langmap&lt;/code&gt;을 지원하지 않는 IDE Vim plugin 에서 사용할 수 없다는 것도 문제.&lt;/p&gt;

&lt;h2 id=&quot;구름-입력기를-사용하는-방법&quot;&gt;&lt;a href=&quot;http://gureum.io/&quot;&gt;구름 입력기&lt;/a&gt;를 사용하는 방법&lt;/h2&gt;

&lt;p&gt;mac 이라면 구름 입력기를 사용하여 쉽게 해결 가능하다.&lt;br /&gt;
구름 입력기에는 다음과 같은 엄청난 옵션들이 있기 때문이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;를 입력할 때마다 영문으로 변경&lt;/li&gt;
  &lt;li&gt;영문으로 전환하는 단축키 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;입력기 자체를 바꾸는 것이기 때문에 Vim 이건 IDE Vim Plugin 이건 설정을 바꿔줄 필요가 없다.
특히 영문 전환 단축키를 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;C-c&amp;gt;&lt;/code&gt; 나 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;C-[&amp;gt;&lt;/code&gt; 등으로 설정해 주는 것도 가능해서 활용하기 좋다.
복잡하게 설정하기 귀찮다면 가장 이상적인 해결책이라 생각한다. 실제로 구름 입력기 설정만으로도 1년이 넘게 잘 썼다.&lt;/p&gt;

&lt;p&gt;하지만 네이티브 입력기가 아니라서 그런지, mac Sierra 부터는 iTerm 에서 속도 저하 문제가 있다. Normal 명령어 몇 개 빠르게 입력하기만 해도 딜레이가 생겨서 좀 답답하다.&lt;/p&gt;

&lt;p&gt;또한 IntelliJ IDEA 의 Vim Plugin인 Ideavim 과 상성이 별로 좋지 않다. 구름 입력기 옵션에 IntelliJ 관련 설정이 있긴 하지만, 설정을 해도 사용하다 보면 모드 전환이 한 번에 안 되는 등의 불만족스러운 상황을 자주 만나게 된다.&lt;/p&gt;

&lt;h2 id=&quot;karabiner를-사용하는-방법&quot;&gt;karabiner를 사용하는 방법&lt;/h2&gt;

&lt;p&gt;구 karabiner 에서는 아래와 같은 설정을 써서 한 번에 해결이 가능했다.
나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;F15&lt;/code&gt; 키를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Capslock&lt;/code&gt; 에 매핑해 두었었기 때문에, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;Capslock&lt;/code&gt;만 누르면 편리하게 모드 전환을 할 수 있었다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;vkchangeinputsourcedef&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;KeyCode::VK_CHANGE_INPUTSOURCE_TO_ENGLISH&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;inputsourceid_equal&amp;gt;&lt;/span&gt;com.apple.keylayout.ABC&lt;span class=&quot;nt&quot;&gt;&amp;lt;/inputsourceid_equal&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/vkchangeinputsourcedef&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;identifier&amp;gt;&lt;/span&gt;F15_abc_escape&lt;span class=&quot;nt&quot;&gt;&amp;lt;/identifier&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;F15 : abc 로 inputsource 전환 후, ESC 입력&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;autogen&amp;gt;&lt;/span&gt;
        __KeyOverlaidModifier__
        KeyCode::F15,
        KeyCode::VK_MODIFIER_EXTRA1,
        KeyCode::VK_CHANGE_INPUTSOURCE_TO_ENGLISH,
        KeyCode::ESCAPE,
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/autogen&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;문제는 mac Sierra 부터 사용할 수 없게 되었다는 점. karabiner 가 Sierra에서는 작동하지 않기 때문에 이제는 알아봐야 소용이 없는 방법이다. 여기에 추가한 이유는 그냥 기록을 남겨 놓고 싶어서이다.&lt;/p&gt;

&lt;p&gt;karabiner 를 사용할 수 없게 되자, karabiner의 개발자분이 &lt;a href=&quot;https://github.com/tekezo/Karabiner-Elements&quot;&gt;karabiner-elements&lt;/a&gt;를 급히 개발해 내놓긴 했지만 karabiner 를 통해 사용할 수 있었던 기능 대부분을 사용할 수 없는 상태. 현재로서는 그냥 키 1:1 매핑 밖에 안 된다.&lt;/p&gt;

&lt;h2 id=&quot;hammerspoon을-사용하는-방법&quot;&gt;hammerspoon을 사용하는 방법&lt;/h2&gt;

&lt;p&gt;내가 가장 선호하는 방법이다. &lt;a href=&quot;http://www.hammerspoon.org/&quot;&gt;hammerspoon&lt;/a&gt;은 mac을 위한 일종의 매크로 툴로서, Windows 진영의 &lt;a href=&quot;https://autohotkey.com/&quot;&gt;autohotkey&lt;/a&gt;와 비슷한 느낌으로 쓸 수 있다. 기능도 비슷하고 할 수 있는 일도 비슷. 다만 lua 를 쓰기 때문에 autohotkey 보다는 좀 더 쓸만한 언어로 작업을 할 수 있다는 장점이 있다.&lt;/p&gt;

&lt;p&gt;hammerspoon에서 다음과 같은 코드를 특정 키에 바인딩해주면 해당 키를 입력할 때마다 무조건 영문으로 변경되고, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;C-c&amp;gt;&lt;/code&gt;를 추가로 입력하기 때문에 Vim 에서는 Normal 모드로 변경된다.&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputEnglish&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.apple.keylayout.ABC&quot;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input_source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keycodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentSourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputEnglish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eventtap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyStroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'right'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keycodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentSourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputEnglish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;hs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eventtap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyStroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'control'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt; 가 아니라 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;C-c&amp;gt;&lt;/code&gt; 가 입력되게 한 이유는 iTerm 에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Meta&lt;/code&gt; 키를 사용하는 그나마 적절한 방법이 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;를 사용하는 것 뿐이기 때문이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아무튼 이 방법을 사용하면 네이티브 입력기를 사용하기 때문에 커서 움직임이 구름 입력기에 비해 엄청나게 빠르고, IntelliJ의 Ideavim에서나 터미널 Vim에서나 똑같이 사용할 수 있다는 장점이 있다. hammerspoon을 적극적으로 여러 방향으로 사용하고 있는 내게는 현재 가장 적절한 방법이라 생각한다.&lt;/p&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://gureum.io/&quot;&gt;구름 입력기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/tekezo/Karabiner-Elements&quot;&gt;karabiner-elements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://autohotkey.com/&quot;&gt;autohotkey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hammerspoon.org/&quot;&gt;hammerspoon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 04 May 2017 22:05:30 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/04/input-source/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/04/input-source/</guid>
        
        <category>vim 구름입력기 hammerspoon karabiner input-source</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 08</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#여덟-번째-수업-이모저모&quot; id=&quot;markdown-toc-여덟-번째-수업-이모저모&quot;&gt;여덟 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#단상--삶과-프로그래밍&quot; id=&quot;markdown-toc-단상--삶과-프로그래밍&quot;&gt;단상 : 삶과 프로그래밍&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reflection&quot; id=&quot;markdown-toc-reflection&quot;&gt;Reflection&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mvc-framework-구현&quot; id=&quot;markdown-toc-mvc-framework-구현&quot;&gt;MVC Framework 구현&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;여덟-번째-수업-이모저모&quot;&gt;여덟 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-04-27 19:00:00 +0900&lt;/code&gt;에 시작.&lt;/li&gt;
  &lt;li&gt;오늘은 Reflection 연습을 하고, annotation 기반의 MVC Framework를 만들어 본다.
    &lt;ul&gt;
      &lt;li&gt;Reflection에 익숙한 사람은 Framework 만들기로 바로 들어가기로 한다.&lt;/li&gt;
      &lt;li&gt;나는 Reflection에 익숙한 편이라고 스스로 판단하고 Framework 만들기로 바로 들어갔다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;단상--삶과-프로그래밍&quot;&gt;단상 : 삶과 프로그래밍&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;몰입
    &lt;ul&gt;
      &lt;li&gt;몰입은 단순히 작업 능률에만 영향을 주는 것이 아니라, 삶과 행복과도 관련이 있다.&lt;/li&gt;
      &lt;li&gt;그렇다면 어떻게 몰입할 것인가?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;reflection&quot;&gt;Reflection&lt;/h1&gt;

&lt;p&gt;나는 Java로 코드를 작성할 때 Reflection을 즐겨 쓰는 편이지만 Reflection을 썩 좋아하지는 않는다.
Reflection을 써서 코딩하고 있다 보면 Java의 아이덴티티가 희석되는 느낌이 들기 때문이다.&lt;/p&gt;

&lt;p&gt;나는 Java 문법상의 한계가 Reflection에서 드러난다고 생각한다.
그리고 Reflection이 Java의 장점에 해를 끼친다고 본다.&lt;/p&gt;

&lt;p&gt;나는 딱히 자신 있는 언어가 없고, Java에 대해서도 아직 초심자에 속한다고 생각한다.
정적 타입 언어보다는 동적 타입 언어가 더 성격에 맞는 편이다.
그럼에도 불구하고 뭔가 새로운 것을 만들 때, 나는 Java를 항상 중요한 선택지 중의 하나로 고려한다.
왜냐하면 Java는 컴파일 타임에서 꽤 많은 실수를 걸러낼 수 있기 때문이다.
그게 가능하기 때문에 Java IDE의 신뢰할 수 있는 대규모 리팩토링이나 스마트한 자동완성도 가능하다.&lt;/p&gt;

&lt;p&gt;그런데 Reflection을 적극적으로 사용하게 되면 컴파일 타임에서 얻을 수 있는 이득을 상당부분 포기해야 한다.
내 기준으로 Java를 선택할 중요한 이유가 사라지는 셈이다.&lt;/p&gt;

&lt;p&gt;하지만 그럼에도 불구하고 Java는 현대 산업에 있어 중요한 언어이고
그러한 Java의 한계를 극복하게 해 주는 Reflection은 주요 프레임워크들에 의해 널리 사용되고 있다.
물론 Reflection이 제한 없이 사용되는 건 아닌 모양이다.
Reflection은 프로그램 가동시에만 사용하고, 가능한 한 검증된 라이브러리에 수록된 것만 사용해야 한다는
암묵적인 원칙이 공유되고 있는 느낌이다.&lt;/p&gt;

&lt;p&gt;폴 그레이엄이 Java를 두고 실수 예방에 초점을 맞춘 언어라고 했던 게 생각난다.
&lt;a href=&quot;http://paulgraham.com/javacover.html&quot;&gt;폴 그레이엄은 Java를 까면서&lt;/a&gt; 그런 말을 했지만,
사실 Java는 실수 예방에 굉장히 뛰어난 언어이기 때문에 주류 언어가 되었고
앞으로도 꽤 오랫동안 산업계에서 사랑받을 거라고 생각한다.&lt;/p&gt;

&lt;p&gt;그러고보니 래리 월은 &lt;a href=&quot;https://youtu.be/LR8fQiskYII?t=1m39s&quot;&gt;Java가 좋은 의미의 현대판 Cobol&lt;/a&gt;이라 했었던 것 같다.
&lt;del&gt;(어느 문서에서 말했는지는 잘 기억이 안 나는데 링크를 찾아다 붙여놓을 예정이다)&lt;/del&gt;&lt;/p&gt;

&lt;h1 id=&quot;mvc-framework-구현&quot;&gt;MVC Framework 구현&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;구현 내용은 &lt;a href=&quot;https://github.com/johngrib/jwp-basic/tree/step8-johngrib&quot;&gt;GitHub Repository&lt;/a&gt;에 올려두었다.&lt;/li&gt;
  &lt;li&gt;Reflection을 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Controller&lt;/code&gt; 어노테이션과 &lt;code class=&quot;highlighter-rouge&quot;&gt;@RequestMapping&lt;/code&gt; 어노테이션을 수집하고, 그에 따라 요청을 처리하도록 수정하였다. 아래는 &lt;code class=&quot;highlighter-rouge&quot;&gt;UserController.java&lt;/code&gt;의 내용을 축약한 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/users&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserDao&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userDao&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 생략&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/form&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 생략&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/create&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 생략&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/update&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 생략&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/updateForm&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;updateForm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 생략&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/profile&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 생략&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;url에 중복이 많아서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Controller&lt;/code&gt;에 prefix를 지정할 수 있도록 작업해 봤다.&lt;/li&gt;
  &lt;li&gt;하나하나의 메서드가 각각의 Request를 담당하게 되니 여러 Controller 클래스를 하나로 합칠 수 있었다.&lt;/li&gt;
  &lt;li&gt;이정도면 일단 만족. Spring이랑 비슷한 모양이 나오네.&lt;/li&gt;
  &lt;li&gt;아, &lt;code class=&quot;highlighter-rouge&quot;&gt;DispatcherServlet&lt;/code&gt;은 다음과 같은 모양을 갖추게 되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;dispatcher&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlPatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loadOnStartup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DispatcherServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DispatcherServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControllerMapping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;controllerMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControllerMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;annotation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;next.controller&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestUri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Method : {}, Request URI : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requestUri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ControllerData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mav&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controllerData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mav&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mav&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Exception : {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;links&quot;&gt;Links&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/johngrib/jwp-basic/tree/step8-johngrib&quot;&gt;step8 과제 완료&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.journaldev.com/4098/java-heap-space-vs-stack-memory&quot;&gt;JournalDev : Java Heap Space vs Stack – Memory Allocation in Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://paulgraham.com/javacover.html&quot;&gt;Paul Graham : Java’s Cover&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.fupfin.com/?p=102&quot;&gt;Paul Graham : Java’s Cover(한국어)&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;폴 그레이엄은 Java를 매우 까는 입장인데, Java를 사랑하는 사람이라면 이 글을 읽기 전에 심호흡을 하고, 그가 엄청나게 하드코어한 Lisp 해커라는 점을 염두에 두길 바란다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/LR8fQiskYII?t=1m39s&quot;&gt;Larry Wall : 5 Programming Languages Everyone Should Know&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;수업 자료
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.ted.com/talks/mihaly_csikszentmihalyi_on_flow?language=ko#t-1033416&quot;&gt;TED : 미하이 칙센트미하이의 몰입&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://egloos.zum.com/agile/v/5749946&quot;&gt;당신이 제자리 걸음인 이유 : 지루하거나 불안하거나&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9lXoEYVTp6w6Nkl3t/lessons/-Kh_ghT2zXD6EMC6Ix5e&quot;&gt;상태 점검에 따른 피드백&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9leY0VnZi2akOLdkW/lessons/-Khyfd6JtntTR9BwsGVR&quot;&gt;자바 Reflection 실습&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://nextstep.camp/courses/-KgDNT4rfavb_BzYLBXr/-Kf9leY0VnZi2akOLdkW/lessons/-KhyffvIV_kFgKjRrGOi&quot;&gt;MVC 프레임워크 3단계 실습&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;링크를 찾아 일일이 달아놓는 건 꽤 귀찮은 일이지만, 한편으로는 꽤 재미있는 일이기도 하다.&lt;/p&gt;
</description>
        <pubDate>Mon, 01 May 2017 07:33:10 +0900</pubDate>
        <link>https://johngrib.github.io/blog/2017/05/01/jwp-08/</link>
        <guid isPermaLink="true">https://johngrib.github.io/blog/2017/05/01/jwp-08/</guid>
        
        <category>study jwp</category>
        
        
      </item>

      <item>
        <title>Next JWP Study 07</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#일곱-번째-수업-이모저모&quot; id=&quot;markdown-toc-일곱-번째-수업-이모저모&quot;&gt;일곱 번째 수업 이모저모&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#단상--삶과-프로그래밍&quot; id=&quot;markdown-toc-단상--삶과-프로그래밍&quot;&gt;단상 : 삶과 프로그래밍&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#감상--고흐의-편지를-읽고&quot; id=&quot;markdown-toc-감상--고흐의-편지를-읽고&quot;&gt;감상 : 고흐의 편지를 읽고&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#사족--레퍼런스-체크---인용된-반-고흐의-편지에-대해&quot; id=&quot;markdown-toc-사족--레퍼런스-체크---인용된-반-고흐의-편지에-대해&quot;&gt;사족 : 레퍼런스 체크 - 인용된 반 고흐의 편지에 대해&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#중간-점검&quot; id=&quot;markdown-toc-중간-점검&quot;&gt;중간 점검&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#중간-점검을-위한-실습-환경-설정&quot; id=&quot;markdown-toc-중간-점검을-위한-실습-환경-설정&quot;&gt;중간 점검을 위한 실습 환경 설정&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#요구사항&quot; id=&quot;markdown-toc-요구사항&quot;&gt;요구사항&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#메모&quot; id=&quot;markdown-toc-메모&quot;&gt;메모&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot; id=&quot;markdown-toc-links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;일곱-번째-수업-이모저모&quot;&gt;일곱 번째 수업 이모저모&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;수업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;2017-04-24 19:00:00 +0900&lt;/code&gt;에 시작.
    &lt;ul&gt;
      &lt;li&gt;매 시간 정각에 시작하는 게 신기하다. 시계 보고 기다리고 있다가 00 초가 되면 바로 시작하시는 듯.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;매 수업 시작 전에 일찍 출석해서 책상 셋팅해주시는 분들게 감사 인사.&lt;/li&gt;
  &lt;li&gt;오늘은 중간 점검을 한다.
    &lt;ul&gt;
      &lt;li&gt;그동안 작성한 코드들을 사용하여 과제를 수행한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;목요일에는 과제에 대한 피드백을 하고, annotation 기반 MVC 프레임워크를 구현할 예정.&lt;/li&gt;
  &lt;li&gt;AJAX의 장단점에 대한 논의.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;단상--삶과-프로그래밍&quot;&gt;단상 : 삶과 프로그래밍&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;빈센트 반 고흐가 테오에게 쓴 편지 중&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;열심히 노력하다가, 갑자기 나태해지고 잘 참다가 조급해지고, 희망에 부풀었다가 절망에 빠지는 일을 또 다시 반복하고 있다.&lt;br /&gt;
그래도 계속해서 노력하면 수채화를 더 잘 이해할 수 있겠지.&lt;br /&gt;
그게 쉬운 일이었다면 그 속에서 아무런 즐거움도 얻을 수 없었을 것이다.&lt;br /&gt;
그러니 계속해서 그림을 그려야겠다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;감상--고흐의-편지를-읽고&quot;&gt;감상 : 고흐의 편지를 읽고&lt;/h2&gt;

&lt;p&gt;고흐의 편지를 읽어보니 그가 반복적으로 찾아오는 절망 속에서 그림을 그렸음을 알 수 있다.
고흐는 살아있을 때 인정받은 사람이 아니다.
그는 삶의 막바지에 이르러 수채화를 이해하게 되었을까?&lt;/p&gt;

&lt;p&gt;돌이켜보면 나 또한 늘 불안에 빠져 있는 것 같다.
불안해서 매일 공부를 하고, 운동을 하고, 책을 읽는다.
특출난 사람들을 보면 고흐처럼 절망에 빠진다.
질투심보다 불안에 휩싸여 집으로 돌아와 홀린듯이 공부를 한다.
결과적으로 불안은 나의 저력일지도 모르겠다.
불안이 있기에 조금씩이라도 실력이 향상되고 더 나은 미래를 준비할 수 있다.&lt;/p&gt;

&lt;p&gt;늘상 불안을 안고 있는데도 그 못지 않은 행복을 느끼는 걸 보면
불안과 행복은 아마 다른 레이어에 걸쳐 있는 감정인 것 같다.
중첩이 가능하거나, 공존 가능한 심적 상태인 모양.&lt;/p&gt;

&lt;h2 id=&quot;사족--레퍼런스-체크---인용된-반-고흐의-편지에-대해&quot;&gt;사족 : 레퍼런스 체크 - 인용된 반 고흐의 편지에 대해&lt;/h2&gt;

&lt;p&gt;위의 인용된 번역된 반 고흐의 편지는 &lt;a href=&quot;https://books.google.co.kr/books?id=ydalAwAAQBAJ&amp;amp;lpg=PT60&amp;amp;ots=N3otvB4h94&amp;amp;dq=%EB%B0%98%20%EA%B3%A0%ED%9D%90%20%EA%B7%B8%EB%9E%98%EB%8F%84%20%EA%B3%84%EC%86%8D%ED%95%B4%EC%84%9C%20%EB%85%B8%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%88%98%EC%B1%84%ED%99%94%EB%A5%BC%20%EB%8D%94%20%EC%9E%98%20%EC%9D%B4%ED%95%B4%ED%95%A0%20%EC%88%98%20%EC%9E%88%EA%B2%A0%EC%A7%80&amp;amp;hl=ko&amp;amp;pg=PT60#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;반 고흐, 영혼의 편지&lt;/a&gt;에 수록된 것이다. 그런데 갑자기 원문이 어떤지 궁금해졌으므로, &lt;a href=&quot;http://vangoghletters.org/&quot;&gt;vangoghletters.org&lt;/a&gt;에서 해당 편지를 찾아보았다.&lt;/p&gt;

&lt;p&gt;그리고 &lt;a href=&quot;http://vangoghletters.org/vg/letters/let199/letter.html&quot;&gt;해당 편지&lt;/a&gt;를 찾아냈다.&lt;/p&gt;

&lt;p&gt;링크로 들어가 &lt;code class=&quot;highlighter-rouge&quot;&gt;original text&lt;/code&gt;탭을 클릭하면 네덜란드어로 된 원문을 읽을 수 있고, &lt;code class=&quot;highlighter-rouge&quot;&gt;translation&lt;/code&gt;탭을 클릭하면 영어 번역본을 읽을 수 있다.&lt;/p&gt;

&lt;p&gt;네덜란드의 반 고흐 박물관에서 운영하는 웹 사이트이므로 공신력을 인정받을 수 있는 번역이라 생각한다.&lt;/p&gt;

&lt;p&gt;그런데 영어로 번역된 문장은 [반 고흐, 영혼의 편지] 책에 수록된 것과 꽤 다른 느낌이었다.
아래의 한국어 번역은 내가 한 것이다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Now I’m going through a similar period of struggle and despondency, of patience and impatience, of hope and desolation. But I must plod on and anyway, after a while I’ll understand more about making watercolours. If it were that easy, one wouldn’t take any pleasure in it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;이제 나는 투쟁과 낙담, 인내와 조바심, 희망과 황폐함의 시기를 겪고 있다. 그러나 꾸준히 내 길을 가다보면, 수채화를 더 잘 이해할 수 있겠지.
그게 쉬운 일이었다면 그 속에서 아무런 즐거움도 얻을 수 없었을 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그런데 다음 문장부터 내용이 다르다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;And it’s exactly the same with painting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;그리고 그것은 그림을 그리는 일과 완전히 똑같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;반 고흐는 “그러니 계속해서 그림을 그려야겠다”고 하지 않았다. 고흐는 자신의 삶/공부 과정이 괴롭고 어렵지만 나름의 즐거움도 있다고 말하고 있고, 그것이 그림 그리는 과정과 상징적으로 일치한다고 말하고 있다.&lt;/p&gt;

&lt;p&gt;그렇다면 다음 문장에는 그런 말이 나올까? 안타깝게도 비슷한 말은 전혀 나오지 않았다.
날씨까지 나빠서 올 겨울엔 별로 즐겁지는 못했지만 삶을 즐기고 있고, 이제 자신의 스튜디오가 있어 너무 좋다고… 언제 한번 찾아와서 자신과 함께 커피나 마시자는 등의 이야기를 하고 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Moreover, the weather is bad, and this winter I haven’t yet gone out for pleasure. Still, I enjoy life and, in particular, having my own studio is too wonderful for words. When will you come and have coffee or tea with me? Soon I hope. You can stay here too, if necessary, that would be nice and companionable. And I even have flowers, and a couple of boxes of bulbs. And I’ve also acquired another ornament for my studio, I got a great bargain on some splendid woodcuts from The Graphic, some of them prints not of the clichés but of the blocks themselves. Just what I’ve been wanting for years.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;중간-점검&quot;&gt;중간 점검&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;내 구현 내용은 &lt;a href=&quot;https://github.com/johngrib/jwp-basic/tree/step7-johngrib&quot;&gt;GitHub&lt;/a&gt;에 올려두었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;중간-점검을-위한-실습-환경-설정&quot;&gt;중간 점검을 위한 실습 환경 설정&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;자신의 계정으로 fork한 jwp-basic 프로젝트의 브랜치를 step7-self-check 으로 이동한다.&lt;/li&gt;
  &lt;li&gt;src/test/java 디렉토리의 next.WebServerLauncher의 main 메서드를 실행한 후 http://localhost:8080 으로 접근한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;요구사항&quot;&gt;요구사항&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;서버 초기화 과정을 설명할 것.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8080&lt;/code&gt;으로 접근해서 질문 목록이 보이기까지 소스 코드의 호출 순서 및 흐름을 설명하라.&lt;/li&gt;
  &lt;li&gt;질문하기 기능을 구현한다.&lt;/li&gt;
  &lt;li&gt;로그인한 사용자만 질문이 가능하도록 수정한다.&lt;/li&gt;
  &lt;li&gt;상세보기 화면의 JSP에 하드코딩 된 부분을 JSTL과 EL을 사용하여 수정할 것.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CharacterEncodingFilter&lt;/code&gt;에 어노테이션 설정을 하여 한글 문제를 해결할 것.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ShowController&lt;/code&gt;가 멀티 스레드 상황에서 문제가 발생하지 않도록 수정하고, 문제 원인을 설명한다.&lt;/li&gt;
  &lt;li&gt;답변을 추가하면 댓글 수가 1씩 증가하도록 수정한다.&lt;/li&gt;
  &lt;li&gt;QnA 전체 리스트를 JSON으로 돌려주는 api를 구현할 것.&lt;/li&gt;
  &lt;li&gt;상세보기 화면의 답변 삭제 기능을 AJAX로 구현