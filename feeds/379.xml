<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Abraham Park on Medium]]></title>
        <description><![CDATA[Stories by Abraham Park on Medium]]></description>
        <link>https://medium.com/@mocona?source=rss-1928205e36cb------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/0*jMLZThutNkV-yxi3.jpg</url>
            <title>Stories by Abraham Park on Medium</title>
            <link>https://medium.com/@mocona?source=rss-1928205e36cb------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 13 May 2019 20:12:16 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@mocona" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[[번역]2016년에 iOS를 배운다는건 어떤 느낌일까]]></title>
            <link>https://medium.com/@mocona/%EB%B2%88%EC%97%AD-2016%EB%85%84%EC%97%90-ios%EB%A5%BC-%EB%B0%B0%EC%9A%B4%EB%8B%A4%EB%8A%94%EA%B1%B4-%EC%96%B4%EB%96%A4-%EB%8A%90%EB%82%8C%EC%9D%BC%EA%B9%8C-5920a71febe2?source=rss-1928205e36cb------2</link>
            <guid isPermaLink="false">https://medium.com/p/5920a71febe2</guid>
            <dc:creator><![CDATA[Abraham Park]]></dc:creator>
            <pubDate>Thu, 01 Dec 2016 23:48:06 GMT</pubDate>
            <atom:updated>2016-12-01T23:48:06.414Z</atom:updated>
            <content:encoded><![CDATA[<p>날림 번역자 왈 : 이 글은 페북 공유를 통해서 만나게 된 멋진 글, <a href="https://medium.com/ios-geek-community/how-it-feels-to-learn-ios-in-2016-b195a79f7e80#.qjttjre35">How it feels to learn iOS in 2016</a> 을, 조금 찰지게(?), 조금 의역(?)을 하여 공유합니다.</p><p>번역 및 게시를 허락해주신 <a href="https://medium.com/@bobleesj">Bob Lee</a>님께도 감사의 말씀을 전하며, 제 날림 번역이 원 글에 누가 안되었으면 좋겠습니다. :)</p><p>2016년에 iOS를 배운다는건 어떤 느낌일까</p><p>- 이 문서는 입소문에 인기 쵝오인 “<a href="https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.6mjeplpbo">2016년에 Javascript를 배우는 기분</a>”이라는 문서에 힌트를 얻었습니다. 이 문서는 작성자의 ‘의견’에 불과하다는걸 마음에 두시구요, ‘대화 내용’은 제가 iOS 를 바닥부터 공부하면서 배운 개인적인 경험을 기반으로 합니다.</p><p>빌 : 여, 스티브, 나 드디어 담에 저지를 걸 골랐어. 세상을 바꿀 예정이지. 얼마나 대단한지 그게 설명하기도 힘들 정도라고. 하지만 오늘 너한테 한두가지 좀 물어봐야 겠어. 알다시피말야, 내가 개발자를 구하기에는 좀 그래서, 직접 배우고 해볼까 하거든. 3주안에 시작하려는 계획을 세웠어. 학교에서 C 를 배웠기도 했고, ‘모바일 앱’을 만드는 건 breeze 하거든. 어쨌던, 너 iOS 좀 하잖아, 그치?</p><p>스티브 : 어, 응? 내가 Swift 와 Server-side project 오픈 소스에 기여하고 있지. 5년전에 iOS 밋업도 구성했었고.. 암튼 일단 질문할 사람은 잘 고른듯 싶당.</p><p>빌 : 좋아써. 그래서말야, 내가 대체 어디서부터 시작해야 할지를 모르겠더라구. 당장 내가 어떤 언어부터 파야 하는거야?</p><p>스티브 : (‘구글신에게 물어보면…’이라고 말하고 싶었지만..) 일단 언어는 두가지가 있어 Obj-C 랑 Swift. 둘중 하나를 고르면 되지.</p><p>빌 : 좋아쓰. Swift? 이름이 뭐이리 기괴해. 암튼 둘다 배워야 하는겨?</p><p>스티브 : 꼭 그렇진 않아. 이미 팀에서 코드를 Obj-C로 작성한게 아니라면 2016년에 Obj-C 를 배우는 사람은 없어. (역:크흑..ㅠ.ㅜ)</p><p>빌 : 좋아, 그럼 그 둘 차이는 뭐임?</p><p>스티브 : 가장큰 차이는 Swift 는 이제 갓 태어난 새 언어이자, 2014년부터 적용되기 시작한거고, Obj-C는 32살이고 애플 플랫폼 전분야에서 골고루 쓰인다는 거지.</p><p>빌 : 그럼 니 말은 많은 부분들이 Obj-C 로 만들어졌단 이야기네. 그럼 왜 내가 Swift 를 배워야 하는거지?</p><p>스티브 : 읽기 쉽거든. 파이썬이나 자바스크립트 읽는 것처럼 보여. 더이상 @ 심볼, 세미콜론, 꼬여버린 괄호 지옥…등을 볼 필요 없지. 그리고 스위프트는 ‘Optional’ 덕분에 더 안전하거든.</p><p>빌 : Optional? 그건 또 뭐야?</p><p>스티브 : 스위프트안에서는 모든 인스턴스가 반드시 ‘type safe’하게 초기화 되야 하거든. 근데 ‘nil’이라 불리는 ‘값 없는 상태’를 만날 수 있어. 예를 들어 ‘페북 API’를 호출했다 치자구, 프로필 ‘이미지’를 못받을 수 있잖아. 이경우 스위프트는 Optional 을 사용해서 nil 값을 담아두도록 하는 거지.</p><p>빌 : 알겠다. 흥미롭네. 그런데말야, 앱 만들려면 맥 사야하는겨?</p><p>스티브:(‘.’) 이쉑. 얌마, MacOS 가 언제가 쵝오라고.</p><p>빌: 그말 반갑네! 사실 얼마전 2016 맥북 프로 질렀거든. 터치바 죽이더라구, $2399불 밖에 안해(씨바). 서피스 스튜디오 따위는 왜사?! 암튼 다른건 뭐가 필요해?</p><p>스티브: (-.-a) Xcode를 받아야 해.</p><p>빌 : 걘또 뭐임?</p><p>스티브 : Xcode는 Cocoa 와 Cocoa Touch 프레임웍과 잘 통합되어 있는 애플의 개발툴 — IDE — 야.</p><p>빌 : 뭔소리 하는지 하나도 모르겠다. 어디서 부터 시작하라는 거냐?</p><p>스티브 : (어금니 꽉 깨물며) 얌마, 나 지금 전철 타야 한다. 나중에 야그 하자 잉!</p><p>빌 : 자,잠깐 스티브! 하나만 더 하나만 더!</p><p>스티브 : 나 지금 가야해. 구글 뒀다 뭐하니?</p><p>…… 3일 뒤……</p><p>빌 : 야, 스티브. 잘 지내냐? 나 주말 내내 iOS 만 팠다. 근데 진짜 정말 헷갈리네 이거. 좀 도와줘 ㅠ.ㅜ</p><p>스티브 : 어, 그래? 뭐 도와줄까?</p><p>빌 : 일단 내가 엑스코드를 다운받고 스위프트를 공부하고 말이지, OOP 라는 내가 첨 들어보는 걸 공부했거든…</p><p>스티브 : (흐으으음…) 좋아. 일단 방향은 맞아보이네.</p><p>빌 : 그리고 또 UIButton, UILable, UIImage 같은걸 스토리보드를 통해서 만들고 연결하고.. 왜 뷰컨트롤러에 그걸 올린다음에 커스터마이징하고 뭐 그런것도 했어.</p><p>스티브 : 좋아, 계속해봐</p><p>빌 : 근데, 왜 viewDidLoad 랑 didReceivedMemoryWarning 은 맨날 내가 뷰 컨트롤러 만들때마다 나오는거야? 쟤들 왜그래 대체?</p><p>스티브 : (다행이네.. 휴..) 사실 정말 좋은 질문이야. viewDidLoad는 뷰 컨트롤러가 메모리로 로딩되었을 때 한번 동작하는 함수거든. (역자: 정확히는 뷰컨트롤러 생성후 뷰 생성후 그 결과를 받는.. 아 그냥 조용히 할께요..) 그 결과로 뷰가 준비되는 블럭(역자: 단계로 봐야 할 듯) 안에서 커스텀 UI를 만들어나 할 수 있는거얌. didReceiveMemoryWarning은 내부 메서드인데 앱이 메모리 경고를 받았을때 뷰 컨트롤러로 전달되는 메시지임. 둘다 ‘옵셔널’이야. 그나저나 자연스럽게 viewDidAppear 랑 viewWillAppear 도 배우지 않았는감?</p><p>빌 : 오, 알았어. 근데 걔들은 뭐임?</p><p>스티브 : 걱정마, 지금은 몰라도 돼. 나중에 UI 가 동적 업데이트 되어야 할때쯤 되면 물어보삼.</p><p>빌 : 어.. 알았어. 그리고 새 플젝 열었을때 말야 ‘UIApplication’ 이라는 스위프트 파일이 있던데, 걘 뭐임?<br>(역자: 파일은 없어요…)</p><p>스티브 : 걔는 ‘높은 곳’에서 앱 전체를 관리해주지. 예를 들어 사용자가 홈 버튼을 눌렀을때 할 일을 알려주거나.. 푸시 메시지를 받았을때 라던지.. 뭐 그런거.</p><p>빌: 으..응? 뭐라고? 나 아이폰 사용해본적 한번도 없는디.</p><p>스티브 : (-.-) 걱정마, 일단 UIKit 부터 배워야 할꺼야.</p><p>빌 : 내 생각에는 이미 난 다 배운거 같은디?</p><p>스티브: 아직 코딱지 만큼도 안했거든. 너 GUI 없으면 어떻게 뷰 만드는지도 모르잖아.</p><p>빌 : 스토리보드 말하는거지?</p><p>스티브 : 맞아, 넌 아무것도 몰라. (역자 : 오오, 이거 왕좌의 게임 패러디?)</p><p>빌 : 잠깐만 잠깐만, 니 말은 내가 UI 를 웹사이트 만들때 CSS 쓰는 것처럼 만들수 있다는거야?</p><p>스티브 : 물론이지. 스토리보드에만 기대지 않고 가능하지.</p><p>빌 : 잠깐만, 스티브. 뭔소리를 하는거야? 그럼 너 지금 스토리보드를 쓰지 말라는거야?</p><p>스티브 : 아니지. 커스텀 윈도랑 뷰를 만들기 전에, 먼저 그 ‘기본 구조’를 알아야 한다는거지. UITableView 랑 UICollectionView 가지고 좀 끄적여 본 적 있어?</p><p>빌 : 음… 아니. 꼭 해야 하는거야?</p><p>스티브 : (하아.. 이 쉑을..) 쯧. 걔들이 UIKit 에서 가장 많이 사용되는 애들이라구. UITableView 는 설정 페이지 같은거 만들때 제법 쓰이고, UICollectionView 는 예를 들어 페이스북 뉴스 피드, 핀터레스트, 인스타그램 메인 페이지 같은 사용자가 만든 컨텐츠 보여주기에 아주 좋거든. 그냥 어떻게 드래그 &amp; 드랍 할 줄 안다고 해서, iOS 를 아는건 아니잖냐.</p><p>빌 : 으음… 그럼 니말은 내가 UICollectionView 를 배우면, 내가 페북 앱 같은걸 만들 수 있다는겨?</p><p>스티브 : (말문이 막혀…) 아니지. 일단 토큰을 이용해서 사용자 인증하는거랑, 뷰 컨트롤러들 사이에서 델리게이트나 세그 등을 통해서 데이터 전달하는것도 배워야지. 그리고 Firebase 나 AWS Mobile Hub 같은걸 이용해서 백엔드랑 통신하는것도 탑재해야 한다구.</p><p>빌 : 으응? 뭐라구? 니가 뭐라 하는지 하나도 모르겠다.</p><p>스티브 : 모든 애플 장비에 딱맞는 앱을 만들려면 오토 레이아웃이랑 아마도 스택뷰도 배워야 해. Alamorefire 랑 SwiftyJSON 같은 외부 라이브러리를 써서 네트워크 통신도 하고 파싱도 좀 할 줄 알아야지. ‘컨커런시’도 이해하고, Grand Central Dispatch 혹은 GCD 라고 불리는 비동기 동작도 좀 탑재해야지. 프로코톨 지향 프로그래밍도 배워서 가벼운 코드도 만들어야 하고, 아마도 Nib 파일도 다룰줄 알게 되면 커스텀 UI 도 좀 쉽게 만들수 있고 말이지.</p><p>빌 : 오토 레이아웃? ‘위~대한 중앙 처리? 닙? 프로토콜? 뭐, 뭐라구? <a href="http://twitter.com/_">@_</a>@</p><p>스티브 : 아직 멀었다구.</p><p>빌 : 흐미. 어째 iOS 나랑 안맞는거 같다.</p><p>스티브 : 자 봐봐. 넌 이제 겨우 1% 정도도 안되는 껍데기를 살짝 깐거에 불과하다고. 애플에서 직접 만들어놓은 100개가 넘는 프레임 워크 중에서 말야. 이 와중에 대체 써드파티 API들은 어찌 설명해줘야 할지 참.. 막막하다. 나도 아무것도 모르는데, 넌 우쨔 다 안다고 그러냐? (앙?)</p><p>빌 : 난 그냥 iOS 는 걍 화면 몇개 찍찍 땡겨 놓고, 연결하고 그럼 되는 줄 알았지. 파워포인트 처럼 말야.</p><p>스티브 : 뭐, 다들 그렇게 생각하긴 하지. 근데 글친 않다구. 좀 적응되는데 한 1년은 걸릴꺼야.</p><p>빌 : 야, 스티브. 이런말 해서 미안한데… 나 완전 삽질한 거 아닌가 몰겠다.</p><p>스티브 : 괜찮아. 나도 프론트 개발자에서 iOS 개발자로 넘어갈때 똑같이 삽질했거든. 나도 다 안다고 생각했었지. ㅎㅎ</p><p>빌 : 좋아, 그럼 이제 난 뭐부터 해야 할까? 내 ‘조낸 죽이는’ 이 앱을 걍 접을까?</p><p>스티브 : 내가 너라면, 일단 매일 매일 조금씩 공부하는 방법을 택하겠어. 좀 골때리게 돌아갈지 몰라도 일단 구조에 집중하고 말야.</p><p>빌 : 좋아. 좋아. 스티브, 이제 내 멘토가 되어라. ㅋㅋ</p><p>스티브 : 좋아. 도와줄께. 근데 대체 그 앱 아이디어는 어떤건데? 썰좀 풀어봐</p><p>빌 : 이게 말이지… 쏼라 쏼라 쏼라…</p><p>스티브 : 와, 죽이는데? 아주 좋아!</p><p>스티브는 살며시 웃으며 나갔다. (응?)</p><p>글쓴이 후기</p><p>읽어주셔서 감사합니다. 지금도 구조적 의미도 모른 채 viewDidLoad 안에다 막 코드를 넣었던 기억이 나네요. iOS를 배운다는 건 도전이고, 언제나 때려치고 싶었습니다만… 지금 전 전세계 수많은 iOS 커뮤니티와 공유하고 교류하고 있습니다. 많이 도움 받고, 또 이런 기회가 생긴거에 감사하죠.</p><p>부담없이 추천 해드리는 문서들도 확인해보세요.</p><p><a href="https://medium.com/@bobleesj/love-and-hate-relationship-between-apple-and-ios-developers-fb644f451da4#.888nnrn9t">애플과 iOS 개발자 사이의 애증 관계</a></p><p><a href="https://medium.com/@bobleesj/how-i-submitted-an-ios-app-in-2-months-35c522bfa289#.e0d10297b">두달안에 앱 등록하는 방법</a></p><p><a href="https://medium.com/@bobleesj/5-reasons-why-i-fell-in-love-with-swift-23e5eea5dad8#.8keq7nsj7">스위프트와 사랑에 빠질 수 밖에 없는 다섯가지 이유</a></p><p>공짜 iOS 수업 (유튭)</p><p><a href="https://www.youtube.com/playlist?list=PL8btZwalbjYlRZh8Q1VK80Ly0YsZ7PZxx">밥과 함께 하는 완벽한 스위프트3 튜토리얼</a></p><p>글쓴이는…</p><p>About Me<br>I am an iOS instructor📱 and a tech blogger. I invite you to connect with me on Twitter and LinkedIn(<a href="mailto:bobleesj@gmail.com">bobleesj@gmail.com</a>). I publish articles on Wednesdays and Saturdays. Please follow me on Medium for fresh updates!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=5920a71febe2" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[풀 스택 개발자, 있다, 없다?]]></title>
            <link>https://medium.com/@mocona/%ED%92%80-%EC%8A%A4%ED%83%9D-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9E%88%EB%8B%A4-%EC%97%86%EB%8B%A4-320c4d122dd1?source=rss-1928205e36cb------2</link>
            <guid isPermaLink="false">https://medium.com/p/320c4d122dd1</guid>
            <dc:creator><![CDATA[Abraham Park]]></dc:creator>
            <pubDate>Fri, 01 Jul 2016 19:46:58 GMT</pubDate>
            <atom:updated>2016-07-01T19:47:37.308Z</atom:updated>
            <content:encoded><![CDATA[<p>혼자 다 모든것을 처리해야 하는 ‘영웅’ 시스템에서, 풀 스택이라는 무시무시한 장비를 착용한 개발자를 만날 수 있을까?</p><blockquote>결론부터 이야기하자. 만날 수 있다.</blockquote><blockquote>단, 찾지는 말자.</blockquote><p>이유는 간단하다.</p><blockquote>혼자서 모든 것을 바닥부터 맨 위까지 쌓을 수 있긴 하지만, 외롭기 때문이다. (응?!)</blockquote><p>서비스 개발 스탭을 아주 아주 간단히 정리해보자.</p><ol><li>스팩 정리 후</li><li>DB 설계, 정규화(!)를 거친뒤,</li><li>API 설계 및 구현(응?)</li><li>그리고 그에 맞는 클라이언트 플랫폼 개발.</li></ol><p>문1. 위의 프로젝트를 진행하는데 필요한 적절한 개발 인력을 <strong>비용에 맞춰</strong>(Dammit, Chloe!) 제시하시오.</p><p>문2. 위의 4개의 항목중 가장 중요한 항목은 무엇인가.</p><p>문3. 위의 4개의 항목중 (그나마..) 툴의 힘 혹은 자동화의 힘을 얻을 수 있는 것은 무엇인가?</p><p>문4. 아참, 이야기 하는 것을 까먹었다. 확장성(scalability)도 고려해서 답하………. (찰싹!(x), 철썩!(o))</p><p>결론.</p><p>만약 당신이 기획자 혹은 인력 수급의 의사결정권자라면 풀스택 개발자를 찾기 전, 먼저 자기 자신에게 질문을 해보기 바란다.</p><ol><li>기술적 선택을 개발자에게 전권 넘길수 있는가.</li><li>지금 마음속으로 생각하는 ‘풀 스택 개발자 지급 예정 금액’이 혹시 위 1번 문항의 비용에 75% 이상 가까운가.</li></ol><blockquote>그래도, 그냥 최소한 둘이상 구할 생각은 없는가. - 개발자는 외롭다.</blockquote><blockquote>그렇다고, 개발자1 - 디자이너1 을 이야기 하는건 아니라는거, 잘 아시죠?</blockquote><p>사족.</p><ol><li>일단, 혼자서 다 처리하기에는 일이 너무 너무 많고, 그걸 모두 다 100 % 멋지게 다 처리하기에는 정말 정말 정말 정말 어렵다.</li><li>결국, 풀스택 개발자 역시 선택과 집중을 할 수 밖에 없으며, 결국 힘을 제일 주어야 하는 부분은 ‘클라이언트 앱’으로 ‘대부분’ 귀결된다.</li><li>당연히 윗선은 개발자가 힘을 ‘한곳에 집중’ 할 수 있도록 도와주는 센스를 발휘해야 한다.</li></ol><p>그리고 마지막으로…</p><h3>돈 아끼려고 풀스택 개발자 찾지 말자.</h3><p>어차피, 잘못 물리면(?) 개발 비용은 더 든다.</p><p>애초에 개발비용 보전한다해도 시간이 더 소요될 수 있으며, 잘 알다시피 시간=돈.</p><blockquote>영웅 시스템에서는 역시 ‘현질’이 최고다. 물론 아이템 빨(?)도 필수.</blockquote><blockquote>참, 보상 시스템이 제대로 안 갖춰져 있으면, ‘그분’ 회사 로그아웃 시 어떻게 하시겠;;?</blockquote><p>여기까지! - 근데 이 뻘글 왜쓴겨.?</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=320c4d122dd1" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[iPad Pro, 짧은 감상.]]></title>
            <link>https://medium.com/@mocona/ipad-pro-%EC%A7%A7%EC%9D%80-%EA%B0%90%EC%83%81-909b1993b8d1?source=rss-1928205e36cb------2</link>
            <guid isPermaLink="false">https://medium.com/p/909b1993b8d1</guid>
            <category><![CDATA[cocoa]]></category>
            <category><![CDATA[ios-x]]></category>
            <category><![CDATA[ipad-pro]]></category>
            <dc:creator><![CDATA[Abraham Park]]></dc:creator>
            <pubDate>Tue, 01 Dec 2015 07:47:15 GMT</pubDate>
            <atom:updated>2015-12-06T12:58:22.440Z</atom:updated>
            <content:encoded><![CDATA[<p>며칠전 애플 신사이바시 스토어에서 짧게 만져보았던 iPad Pro 에 대한 이야기를 해볼까 한다.</p><h4>총평을 먼저 내리면, ‘완벽한 하드웨어와 이를 받쳐주지 못하는 소프트웨어’라고나 할까.</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*6VG7fPVkYRnY1Rqzk5ub5Q.jpeg" /><figcaption>.웹 브라우징은 정말 훌륭하다, 그동안 1024 pt 를 어떻게 버틴거지 싶을 정도로.</figcaption></figure><h3>완벽한 하드웨어</h3><p>아이패드 프로 실물을 보기 전까지의 생각은, ‘너무 큰 화면’이 아닐까였다. 연관되어서 항상 걸렸던 문제였던, 컨텐츠 ‘생산성’과 ‘소비성’의 중심에서 항상 후자에 더 많은 무게가 실렸던 하드웨어이기에, 과연 어떨까 싶었다.</p><p>그런데, 역시 그 생각은 기우였다. 넓은 화면이 부담되기 보다는, 오히려 더 시원하게 느껴졌다. 가끔 커뮤니티에서 까이는 ‘아이콘 사이의 간격’도, 내 관점에서는 넉넉하고 편하게 배치된 느낌이었다.</p><p>하드웨어의 완성도 그 자체는 정말 높다. 사실 본체를 보자마자, 집으로 모셔가고 싶은 느낌이 확 다가왔는데, 그정도로 완성도는 정말 높다.</p><p>사운드 역시, 애플의 설명처럼 신경을 많이 썼다는게 느껴졌다. 상대적으로 좀 더 풍부한 음량을 들려준다고나 할까, 허기사 본체가 커진 만큼, 더 집중해야 하는 곳이 어디인지 잘 아는 애플답게, 그 기대를 어긋나게 하지 않는다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*-cSCsvH0FfZ4mDAmp1D-tw.jpeg" /><figcaption>.나에겐 빚좋은 개살구.</figcaption></figure><p>‘연필’의 반응 속도가 많은 이슈를 낳고 있는데, 연필 자체의 완성도도 상당히 높다. 하지만, 연필 잡아도 육각형-.-이나 그리는 나에게 있어서는 그닥.. ㅠ.ㅜ</p><h3>소프트웨어, 분발해주길!</h3><p>하지만 문제는 다른 곳에 있었다. 바로 소프트웨어.</p><p>최근 잦은 불만이 올라오듯이, 멋지게 만든 하드웨어 대비 소프트웨어의 완성도가 아쉬웠다. 특히 몇가지 거슬렸던 점이 있는데..</p><p>일단, 키보드와 묶였을 경우인데, 먼저, 한영 전환 등 다국어 전환시의 순서가 뒤죽박죽이고, 그 동작도 좀 이상하다. 과거 iOS8 까지만 하더라도, 동작 방식이 OSX 과 일치되어서 만족스러운 경험을 주었는데, 대체 이번에는 왜그런걸까. 처음에는 순서 기억인가 싶었는데, 오늘 내 아이패드에서 외장 키보드와 테스트 해보니, iOS9 의 ‘발적화’임을 알 수 있었다.</p><p>다국어 전환의 경우, 상당히 민감한 케이스인데, 정확한 변환을 위해서 사용자가 키보드에서 손을 떼고, 화면을 터치하게 되는 굉장히 ‘아름답지 못한’ UX 상황을 만들어주는 것이다.</p><p>또하나, 자잘한 부분들 중, 내 눈길을 끌었던 것은 대화면에 대한 애플 기본앱들의 자세(?)이다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*203Tv6qrYz98phKZdEps7w.jpeg" /><figcaption>.이제 비행할 맛이 좀 나겠는데.</figcaption></figure><p>기술적인 면으로 접어들어가면 HIG 에서 iPad Pro의 Landscape 와 Portrait 모두 Sized class에서 특별한 언급없이 Regular 로 정의해놓은 상태이기에, (다시 말하면 iPad brothers(mini, regular, pro) 모두 같은 UI 사이즈를 가지게 된다는 점) 아마도 이부분에 대한 대대적인 정비가 iOS10 쯤에서 다시 이루어지지 않을까 싶다.</p><p>아마도 mail 앱등 몇몇 앱의 detail view 화면 자체가 좌우 기본 마진 가이드라인 조절로 대응되었다 생각되는데, 컨텐츠의 내용과 읽기 편의성을 생각해보면 당연한 접근이긴 해도, 실제 앱 개발의 입장에서는 분명히 이 ‘허전함’을 채우기 위한 도전들이 시작될거라 본다.</p><h4>그건 그렇고, 애플아, 제발 자잘한 버그좀 잡아줘. 퍼포먼스도 좀 올려주고!</h4><h3>결론</h3><p>iPad Pro 가 PC 를 대체할 수 있을까? 라는 질문에 대한 대답은 사실상 어떤 기능을 대체하려 하는가 라는데서 갈라질거라 본다.</p><p>개인적으로 Tablet 과 PC 는 서로가 서로를 잠식하는게 아닌, 서로 부족한 부분을 ‘채워주는’ 것이라 생각한다. 그러기에 애플의 ‘Continuity’ 가 더 빛나는 것일테고.</p><p>현시점의 문제는 두가지라고 본다.</p><p>하나. OSX 과 iOS 내부의 ‘버그’잡기. 진짜, 잡스가 조인트라도 까지 않는 이상에는… 하아.. 자잘한 것들을 하나씩 잡고 큰 그림을 그려야 하는데, 세심함이 부족해지고 있다고 느껴진다. 하드웨어 부분은 정말 빛이 나건만… 버그를 잡고, 전체 벌레잡기 플래그를 전반적으로 CEO 바로 옆에서 누군가가 무소불위의 권력을 휘둘러야 할 듯 싶다.</p><h4>돌아보면, 올해 WWDC 에서 팀쿡의 이야기, “기능 좀 덜 넣었어, 완성도 높히려고~!”라는 이야기가 틀린말은 아니였던듯.</h4><h4>왜냐고?</h4><h4>“기능은 덜 넣었지만, OS 갯수를 늘리지 않는다고는 이야기 안했다-.-”</h4><h4>분위기 이니 말이다.</h4><p>둘. 이제 내년이면 iOS가 10번째 릴리즈가 된다. 과연 OSX 과의 통합은 어떻게 이루어질까? 하드웨어 성능도 이제 제법 높아졌으니 내년 두 ‘X’ OS 의 개발 프레임워크는 제대로 ‘합방’ 할 수 있을까. 과거 내 예상은 일단 Foundation 부터 하나로 이루어질거다 였고, 그 시발점은 binding 이 아닐까 싶었다. 이제 프로가 나왔고, 하드웨어 성능도 진일보했다.진정 ‘업무’용 플랫폼을 지향한다면 binding 기반의 grid 가 어떤식으로든 장착되지 않을까, 생각해본다.</p><p>뭐 애플도 생각이 많겠지…</p><p>그나저나, 이 글은 iPad pro로 시작해서 애플 운영체제 이야기로 끝나는구나.. ㅠ.ㅜ</p><h4>아참, 키보드!</h4><h3>그런게 있었나요? -.-;</h3><h4>키감은 호불호가 갈릴 듯 = 손톱 빠지겠다, 이놈들아!!</h4><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=909b1993b8d1" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[유니클로의 흥미로운 콜라보레이션, 그리고 모바일.]]></title>
            <link>https://medium.com/@mocona/%EC%9C%A0%EB%8B%88%ED%81%B4%EB%A1%9C%EC%9D%98-%ED%9D%A5%EB%AF%B8%EB%A1%9C%EC%9A%B4-%EC%BD%9C%EB%9D%BC%EB%B3%B4%EB%A0%88%EC%9D%B4%EC%85%98-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EB%AA%A8%EB%B0%94%EC%9D%BC-21ed2a472ff7?source=rss-1928205e36cb------2</link>
            <guid isPermaLink="false">https://medium.com/p/21ed2a472ff7</guid>
            <category><![CDATA[collaboration]]></category>
            <category><![CDATA[mobile]]></category>
            <category><![CDATA[uniqlo]]></category>
            <dc:creator><![CDATA[Abraham Park]]></dc:creator>
            <pubDate>Tue, 01 Dec 2015 01:00:12 GMT</pubDate>
            <atom:updated>2015-12-01T01:00:12.002Z</atom:updated>
            <content:encoded><![CDATA[<p>유니클로의 흥미로운 콜라보레이션, 그리고 모바일.</p><p>지난 토요일 일본 유니클로 매장에서 발견한 흥미로운 콜라보레이션.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*nQWsn5oV_NQv27EIv3mz_w.jpeg" /></figure><p>새로 개봉하는 ‘찰리 브라운’ 영화에 맞춰서 (이상하게 난 피너츠보다 찰리 브라운이라 부르는게 좋다. :) ) 유니클로와 콜라보레이션을 진행하는 것이다. :)</p><p>크게 세가지로 나누어 지는데.</p><ol><li>매장 내 포토존(파란색 아이콘)에서 캐릭터와 사진 찍기!</li></ol><p>– 뒤에 잠시 다루겠지만, 증강현실을 이용해서, 랜덤하게 캐릭터가 나오고, 아이들과 사진을 찍을 수 있다. :)</p><p>2. 매장 내 전시 품목 사이 사이에 숨겨진 캐릭터 만나기(빨간색 아이콘)</p><p>– 역시 매장에 숨겨진(?) 마크를 찍으면 캐릭터를 볼 수 있다는 거.</p><p>3. 색칠 놀이 후, 캐릭터를 만나기</p><p>– 팜플랫 안의 ‘색칠 놀이’를 앱으로 찍으면 캐릭터가 나온다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*HPQRescIdbA19WQ0D05yCg.jpeg" /></figure><h3>기술적 측면으로 접근해보자.</h3><p>일단, 어떻게 돌아가는지, 한번 볼까요?</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FSCNseO_Awpg%3Ffeature%3Doembed&amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DSCNseO_Awpg%26feature%3Dyoutu.be&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FSCNseO_Awpg%2Fhqdefault.jpg&amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/5c64a4443a627f3842007420bdf36778/href">https://medium.com/media/5c64a4443a627f3842007420bdf36778/href</a></iframe><p>직접 촬영한거라 흔들림이 좀 많지만… ㅎㅎ 대략 이런 느낌이다.</p><h4>만들어야 한다, 라면 어떻게 접근해야 할까</h4><p>나라면 일단 이렇게 접근하지 않을까 싶다.</p><ol><li>OpenCV 등을 이용한 스티커 인식 - 이거 사실 참 좋다. ㅠ.ㅜ 특히 매장 내는 조명도 상당히 밝고, 인식하려는 객체의 크기와 색도 명확하니!</li><li>3D로 인식하고 텍스쳐를 입히기. - 요 부분은 아직 다뤄본적이 없어서, 뭐라 딱 말할 수는 없지만, 어쩐지 모르게 오픈소스로 있지 않을까. 텍스쳐의 모양도 이미 약속 되어 있으니 기준점을 잡아서 어찌어찌… (내가 안짤꺼아.. 크흑.)</li></ol><p>종합 기술 난이도 : (2번만 해결된다면…) 대략 3 / 5 정도?</p><h3>사업적으로는 어떨까?</h3><p>– 주니어 및 와이프와 물건을 구입하러 갔을 때, 주니어의 눈높이에 맞춰서 배치되어 있던 전단지는 인상적이었다. :) 아이들이 어른들보다 먼저 발견하고 하고 싶다고 막 이야기를 했으니까. ;)</p><h4>매장과의 협조 중요</h4><p>– 주니어와 함께, 포토존을 찾기 위해서 열심히 매장을 돌아다녔는데, 아쉽게도 할수가 없었다! 주니어를 시켜서… 이유를 스탭에게 물어보게 하니, 스탭 왈, ‘아직 매장 내에는 준비가 안되었다’고 이야기를 한다. 프로모션 시작이 금요일 이었고, 내가 간 시점이 토요일 이었으니..</p><p>– 콜라보 자체는 내년 1월 중순쯤?에 마무리되는 듯 싶다. 그 이후에는 앱이 더이상 동작 안한다 하니..</p><p>- 과연 엄마 아빠는 아이들의 성화에 못이겨서 폰을 꺼내서 앱을 설치하고, 덧붙여서 같이 포토존을 찾아다닐까? 일단, 주니어의 경우 극성 아빠 덕분에 오히려 같이 신나게 찾아다니긴 했지만 말이다. ㅎㅎ</p><p>- 가끔 과자에 적용된 케이스도 있다. 패턴은 위와 동일. 과자 케이스에 캐릭터 색칠 놀이가 있고, 칠하고, 전용 앱으로 인식, 내가 색칠한 캐릭터가 움직이기.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=21ed2a472ff7" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[sails.js 에 대한 단상 #1]]></title>
            <link>https://medium.com/@mocona/sails-js-%EC%97%90-%EB%8C%80%ED%95%9C-%EB%8B%A8%EC%83%81-1-2313d50339ce?source=rss-1928205e36cb------2</link>
            <guid isPermaLink="false">https://medium.com/p/2313d50339ce</guid>
            <category><![CDATA[sailsjs]]></category>
            <category><![CDATA[nodejs]]></category>
            <category><![CDATA[javascript]]></category>
            <dc:creator><![CDATA[Abraham Park]]></dc:creator>
            <pubDate>Mon, 16 Nov 2015 10:11:47 GMT</pubDate>
            <atom:updated>2015-11-16T10:11:47.561Z</atom:updated>
            <content:encoded><![CDATA[<p>sails.js 에 대한 단상 #1</p><p>sails.js 를 이용해서 본격적으로 개발을 시작한 지 약 3개월이 지났다.</p><p>물론 기술 검토 기간을 고려한다면, 한달 정도를 덧붙여야 하지만, 지금 진행중인 프로젝트의 날짜를 고려해보면 대략 3개월.</p><p>아직 프로젝트가 끝나지 않은 상황에서 무엇인가를 논하기에는 부족한 부분이 많지만, 이 글은 현 시점에서의 sails.js 에 대한 내 소감을 담는것을 목표로 한다.</p><ol><li>임모탄의 V8 보다 더 화려한 node.js 위에서</li><li>DB의 경계를 가르는 Waterline ORM 을 품고</li><li>마법의 Blueprint CRUD API 를 막 뿌려대는</li><li>귀여운(?) 오징어 한마리.(로고가.. ;) )</li></ol><p>장점</p><ol><li>기본 기능에 충실한(?) API 개발 만큼은 진짜 빠르다. - 심하게 이야기하면, 스키마 잡고, ‘정책’설정만 잘 만지면 끝. -.-;</li><li>개발인지, 설정인지 가끔 헷갈리는 듯한 개발 스텝.</li><li>그래서인지 혼자 이것저것 다 하기 딱 좋다. - DB 도 설계하고, 그 위에 API 만들고, 프론트 백엔드 얼쑤~</li><li>생각보다(?) 안정적인 시스템 플랫폼. - 물론 초반에는 삽질 좀 했지만.. ㅎㅎ</li></ol><p>단점</p><ol><li>node.js, javascript 의 탑재는 필수 - 좋게 생각하면 클로저의 세계에 빠지니, 이제 swift 로의 전환(?!)은 떡먹기? (쿨럭)</li><li>정체성의 혼란 - 나는 개발자인가, DBA 인가.. -.-a</li><li>아직 서비스에서 돌려보지 못한 경험 - 조만간 되겠지</li><li>한계가 분명한 Blueprint CRUD API, 특히, 검색! - 기본 검색은 탄탄한데, populated 된 값에 대한 검색이 pk외에는 안된다. ㅠ.ㅜ 어쩌면 되는데 내가 못하는 걸지도.. -.-;</li><li>아쉬움이 조금씩 남는, 그 부분을 코드로 채우려다 높아지는 코드 난이도. - Waterline ORM vs 그냥 join 이 나을까. 흐으음…</li><li>Waterline ORM 그 자체의 이해도 조금 시간이 필요. - 특히 ‘관계’에서. 하지만 이건 방향을 찾았다.</li><li>한글 자료의 부족(사실 포기하고 찾아보지도 않았;;음) &amp; 공홈의 데이터도 좀 부족;; - 그래도 막상 찾으면 있긴 있다.. -.-;;</li><li>퍼포먼스 문제? - 그,글쎄.. @_@;;;</li></ol><p>결론</p><ol><li>혼자 지지고 볶고 할 때, 좀 급하게 만들어야(!)할 때, 혹은 스타트업에게는 좋은 선택지가 될 수’도’ 있다고 봄</li><li>근데 어쩌면 그냥 가볍고 편하게, express.js 를 쓰는게 나을지도 - 사실 sails.js 가 express.js 위에서 돌아가는건 함정.</li><li>더 큰 문제는, 국내에서 쓰긴 쓰나염? -.-a</li></ol><p>도전 과제</p><ol><li>Javascript 언어 그 자체에 대한 공부</li><li>이걸로 scalability 기반의 상용서비스까지 가보기</li><li>Waterline ORM 을 위한 ER diagram tool for mac 개발 - 현재는 mySQLWorkbench(!) 사용중인데 아쉽아쉽.</li><li>(전반적인) API 관리를 위한 업무 페이지 만들기 (현재 개발중)</li></ol><p>… 이러다 PMS 까지 만들지도.. 쿨럭;</p><p>오늘까지의 작업 내역</p><p>- 72개의 테이블-.-;과 다 대 다 관계를 위해서 자동 생성된 +a 테이블들…</p><p>보너스</p><p>sails.js build order를 추천한다면..?</p><ol><li>먼저, node.js 를 간단히 잡고, — <a href="http://nodeschool.io/">http://nodeschool.io</a> (learn you node) 추천</li><li>sails.js 의 문서중 concept 쪽을 일독하면서,</li><li>architect 와 부분 공개되어있는 e-book 을 같이 읽으면 금상첨화.</li><li>적고보니 3번의 e-book이 최고인듯.</li></ol><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2313d50339ce" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>