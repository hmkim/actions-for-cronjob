<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>arload &#8211; my Load, to Architect</title>
	<atom:link href="https://arload.wordpress.com/feed/" rel="self" type="application/rss+xml" />
	<link>https://arload.wordpress.com</link>
	<description>http://www.arload.net</description>
	<lastBuildDate>
	Wed, 20 Mar 2019 18:21:15 +0000	</lastBuildDate>
	<language>ko-KR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>http://wordpress.com/</generator>
<cloud domain='arload.wordpress.com' port='80' path='/?rsscloud=notify' registerProcedure='' protocol='http-post' />
<image>
		<url>https://secure.gravatar.com/blavatar/9f24b63f1cb1468f693c0f3f3f4e0294?s=96&#038;d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>arload &#8211; my Load, to Architect</title>
		<link>https://arload.wordpress.com</link>
	</image>
	<atom:link rel="search" type="application/opensearchdescription+xml" href="https://arload.wordpress.com/osd.xml" title="arload - my Load, to Architect" />
	<atom:link rel='hub' href='https://arload.wordpress.com/?pushpress=hub'/>
	<item>
		<title>CPO, Product Team이 뭐죠?</title>
		<link>https://arload.wordpress.com/2018/09/09/cpo_productteam/</link>
				<comments>https://arload.wordpress.com/2018/09/09/cpo_productteam/#respond</comments>
				<pubDate>Sat, 08 Sep 2018 18:29:58 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Articles]]></category>
		<category><![CDATA[My Thinking]]></category>
		<category><![CDATA[Software Architecture]]></category>
		<category><![CDATA[CPO]]></category>
		<category><![CDATA[DataDog]]></category>
		<category><![CDATA[New Relic]]></category>
		<category><![CDATA[Product Team]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4714</guid>
				<description><![CDATA[CPO는 제품의 향후 마일스톤을 결정하고, 어떠한 가치및 기능들을 전달할지 결정하는  역할이다.  개발자에게는 제품/상품이라는 개념이 다소 생소할수 있겠지만, 결국 우리가 만드는 SW들은 고객들에게 하나의 상품이다.  고객의 입장에서 매력적인 / 또 실제 팔릴수 있는 상품을 만들수 있게 제품 전반에 지휘권을 가지고 있는 자다.    ]]></description>
								<content:encoded><![CDATA[<p>실리콘 벨리에 있는 많은 기업들이 Product Team을 앞서 만들고 있지만 아직 우리에게는 먼 이야기다.  소프트웨어 제품을 만드는 유명한 기업들의 임원 (Leadership) 구성을 보면 CPO (Chief Product Officer) 라는 직함이 있다.</p>
<p>CPO 라고 주요 기업에 검색하면 정말 놀랄말한 분들이 각자의 포지션을 차지하고 있다.</p>
<ul>
<li>Netflix &#8211; https://media.netflix.com/en/press-releases/greg-peters-to-become-netflix-chief-product-officer-in-july</li>
<li>New Relic  &#8211;  <a href="https://newrelic.com/about/leadership" rel="nofollow">https://newrelic.com/about/leadership</a></li>
<li>DataDog &#8211; https://www.datadoghq.com/about/team/</li>
<li>SalesForce &#8211; https://techcrunch.com/2017/11/21/salesforce-appoints-bret-taylor-as-chief-product-officer/</li>
<li>Slack &#8211; http://fortune.com/2018/04/04/slack-april-underwood-chief-product-officer/</li>
</ul>
<p>몇몇 회사는 임원 서열에서 CEO 바로 아래에 위치해 있다. 한번 잘 살펴보시길 바란다.</p>
<blockquote><p><strong>CPO의 역할</strong></p></blockquote>
<p>최고 제품 책임자의 역할은 무엇인가?  그럼 그 밑에 Product Team의 역할은?</p>
<div data-shortcode="caption" id="attachment_4715" style="width: 1468px" class="wp-caption alignnone"><img aria-describedby="caption-attachment-4715" data-attachment-id="4715" data-permalink="https://arload.wordpress.com/2018/09/09/cpo_productteam/career-roadmap-chief-product-officer2-100705367-orig/" data-orig-file="https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=770" data-orig-size="1458,794" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="career-roadmap-chief-product-officer2-100705367-orig" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=770?w=770" class="alignnone size-full wp-image-4715" src="https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=770" alt="career-roadmap-chief-product-officer2-100705367-orig.jpg" srcset="https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=770 770w, https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=150 150w, https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=300 300w, https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg?w=1024 1024w, https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg 1458w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4715" class="wp-caption-text">그림1. CPO의 역할및 기타 소개 &#8211;  https://www.cio.com/article/3160728/hiring/it-career-roadmap-chief-product-officer.html </p></div>
<p>CPO는 <strong>제품의 향후 마일스톤을 결정하고, 어떠한 가치및 기능들을 전달할지 결정</strong>하는  역할이다.  개발자에게는 제품/상품이라는 개념이 다소 생소할수 있겠지만, 결국 우리가 만드는 SW들은 고객들에게 하나의 상품이다.  고객의 입장에서 매력적인 / 또 실제 팔릴수 있는 상품을 만들수 있게 <strong>제품 전반에 지휘권을 가지고 있는 자</strong>다.</p>
<p>우와 멋진 자리라고  할수 있겠지만 CPO 는 그만큼 많은 책임을 지는 자리이다.  <strong> 제품 라인업을 어떻게 가져갈 것이며,  경쟁사 대비 우리가 가져가야 하는 장점과 포지션에 대해 항상 고민</strong>해야 하며, 이것이 곧 매출로 연결되기 때문에 상당한 압박을 받는 위치라고 생각하면 된다.</p>
<p>자 Facebook의 팀 구성에 대해 보자.</p>
<div data-shortcode="caption" id="attachment_media-10" style="width: 1211px" class="wp-caption alignnone"><img aria-describedby="caption-attachment-media-10" data-attachment-id="4716" data-permalink="https://arload.wordpress.com/2018/09/09/cpo_productteam/facebooks-new-product-teams/" data-orig-file="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=770" data-orig-size="1201,1145" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="facebooks-new-product-teams" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=770?w=770" class="alignnone size-full wp-image-4716" src="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=770" alt="facebooks-new-product-teams.png" srcset="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=770 770w, https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=150 150w, https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=300 300w, https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg?w=1024 1024w, https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg 1201w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-media-10" class="wp-caption-text">그림 2. Facebook의 팀 구성도 &#8211; https://read.bi/2MYxy33 </p></div>
<p>위 그림을 보면 알겠지만, CPO는  Product Team 의 가장 중요한 역할중에 또 하나는 <strong>개발자 와 영업/마켓팅 팀간에 중간 허리 역할</strong>을 한다.    영업 / 마켓팅이 고객으로 받은 의견들이나 요구사항을 수렴하고, 개발팀과 이야기를 나누며 우선 순위를 정해 제품에 녹아 내는 역할을 해야 한다.</p>
<blockquote><p><strong>Product Team의 역할</strong></p></blockquote>
<p>Product Team 이  가져가야 되는 역할을 좀더 세분화해서 나누어 보자.  각 회사마다 Product Team의 위치가 상이하지만 저의 경험과 몇몇 공개된 글을 통해 정리한 내용이다.</p>
<p><strong>제품의  기능및  라인업 관리 </strong></p>
<p>가장 어려운 일이다. 고객에게 제공해야 되는 핵심 가치및 기능은 무엇인가?  그리고  수 많은 기능중에 무엇을 먼저 제공해야 하는가?   그리고 제품이 여러개라면 이들 제품간의 시너지를 어떻게 낼지 고민해야 한다.</p>
<p>한 예로 SaaS형 APM의 업계 1위인 New Relic의 사례를 들겠다.   초기 고객을 확보하기 위해 Server 모니터링을 무상으로 제공을 하였고,  이 무상 고객을 APM(웹어플리케이션 모니터링)이라는 고 부가가치 상품의 판매로 연결하기 위한 많은 노력을 진행했다.  초기 고객을 어떻게 확보하냐에 적당한 미끼 상품을 제공했다.  APM이 성공적으로 시장에 안착하자,  서버 모니터링을 내리고,  Infrastrucutre 모니터링 제품을 유료로 내놓아 고객을 유입시켰다.</p>
<p><strong>개발팀, 영업팀, 고객 만족팀 (Customer Success Team), 마켓팅 팀간의 중간 허리</strong></p>
<div data-shortcode="caption" id="attachment_4717" style="width: 812px" class="wp-caption alignnone"><img aria-describedby="caption-attachment-4717" data-attachment-id="4717" data-permalink="https://arload.wordpress.com/2018/09/09/cpo_productteam/product-team-structure/" data-orig-file="https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=770" data-orig-size="802,685" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="product team structure" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=770?w=770" class="alignnone size-full wp-image-4717" src="https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=770" alt="product team structure.png" srcset="https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=770 770w, https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=150 150w, https://arload.files.wordpress.com/2018/09/product-team-structure.png?w=300 300w, https://arload.files.wordpress.com/2018/09/product-team-structure.png 802w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4717" class="wp-caption-text">그림 3. Product Team의 구조 &#8211; https://bit.ly/2QflJ6k </p></div>
<p>정말 거짓말 같지만.. 그림 3처럼 모든 이해 당사자를 조율하고 이야기를 이끌어 내야 되는 것이 Product Team 속성이다.   자연히 Cross Functional Team 으로 구성될 수 밖에 없다.</p>
<div data-shortcode="caption" id="attachment_4719" style="width: 1278px" class="wp-caption alignnone"><img aria-describedby="caption-attachment-4719" data-attachment-id="4719" data-permalink="https://arload.wordpress.com/2018/09/09/cpo_productteam/proddiag1/" data-orig-file="https://arload.files.wordpress.com/2018/09/proddiag1.png?w=770" data-orig-size="1268,383" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="proddiag1" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2018/09/proddiag1.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2018/09/proddiag1.png?w=770?w=770" class="alignnone size-full wp-image-4719" src="https://arload.files.wordpress.com/2018/09/proddiag1.png?w=770" alt="proddiag1.png" srcset="https://arload.files.wordpress.com/2018/09/proddiag1.png?w=770 770w, https://arload.files.wordpress.com/2018/09/proddiag1.png?w=150 150w, https://arload.files.wordpress.com/2018/09/proddiag1.png?w=300 300w, https://arload.files.wordpress.com/2018/09/proddiag1.png?w=1024 1024w, https://arload.files.wordpress.com/2018/09/proddiag1.png 1268w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4719" class="wp-caption-text">그림 4. 또 다른 Product Team의 구조 &#8211; https://bit.ly/2MZhwpA </p></div>
<p>이렇게 중간에서 Marketing과 Engineering간의  허리 역할을 할수도 있다. 하지만 이건 팀의 능력, 상품의 특성, 정치적 상황등 다양하게 변할수 있다는 의미로 받아들이고, 원칙적으로는 제품을 만들기 위해 집중하는 팀이라고 보면 된다.</p>
<div data-shortcode="caption" id="attachment_4718" style="width: 1610px" class="wp-caption alignnone"><img aria-describedby="caption-attachment-4718" data-attachment-id="4718" data-permalink="https://arload.wordpress.com/2018/09/09/cpo_productteam/1_ck9wtk10g546ihpn2hkkqq/" data-orig-file="https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=770" data-orig-size="1600,742" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="1_Ck9wTK10g546ihPn2HkKqQ" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=770?w=770" class="alignnone size-full wp-image-4718" src="https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=770" alt="1_Ck9wTK10g546ihPn2HkKqQ.png" srcset="https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=770 770w, https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=1540 1540w, https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=150 150w, https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=300 300w, https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png?w=1024 1024w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4718" class="wp-caption-text">그림 5. Product vs Functional Team </p></div>
<p>물론 실제 일하는 사람 입장에서는 그림 5가 더 쉽게 이해 될것으로  보이며, 딱 맞는 비유는 아이지만  <a href="https://arload.wordpress.com/2008/05/20/peanutbutter/" target="_blank" rel="noopener">땅콩버터와 마천루</a>라는 필자의 글을 보면 이해할수 있을 것이다.</p>
<p><strong>경쟁사 및 업계 동향 분석</strong></p>
<p>경쟁사나 업계의 트랜드를 항상 모니터링 하고 제품에 반영하는 역할을 해야 한다.  1위가 아닌 하위업체들은 절대 1위 업체가 가진 모든 기능들을 동일하게 제공할수 없다.  주로 공략하는 기법이 1위 업체가 가지고 있는 많은 기능중에 고객들이 저렴하게 딱 사용하고 싶은 기능은 더 쉽게 간단하게 내 놓는 것이 주요한 전략이며, 이러한 전략을 공격 당했을대 어떻게 해야할지.</p>
<p>예를 들자면 New Relic은 유료 상품으로 서버 모니터링, APM 제품으로 올해 1000억 매출을 예상하고 있다.  하지만   후발주자로 DataDog은 상대적으로 저렴한 가격에 Server 모니터링 + 다양한 플랫폼과 언어를 제공하여, 게임사를 타겟으로 시장을 공격하고 있다 (  매출 210억) .   또 다른 후발주자인 Elastic은 APM을 오픈소스로 공개하여 시장 가격을 무너뜨리며 공격을 한다면 어떻게 해야할까?</p>
<p><strong>후발 주자들이 다양한 방법으로 공격한다면,  어떻게 향후 제품 정책을 수립하고, Marketing / Sales팀에게 어떠한 메세지를 고객에게 알려야 될까?  참 어려운 역할이다.  그 만큼 보람도 클거라고 믿는다. </strong></p>
<blockquote><p><strong>맺음</strong></p></blockquote>
<p>한국의 몇몇 기업들이 드디어 CPO라는 직함을 부여하고 상품 위주로 팀을 개편하는 역할을 하고 있다. 하지만 기존 조직 운영이 돌아가는 관습이나 여러 상황으로 인해 Product Team이 전면적으로 돌아가는 회사는 많이 보지 못했다.    <strong>여러분의 회사가 제품/상품을 만드는 회사라면,  개발과 영업조직이 직접 싸우게 하지 말고 이에대해 완충작용과 향후 전략에 따라 조직을 이끌수 있는  적임자를 뽑아 제품 기반으로 팀을 구성하길 바란다</strong>. 안되면 이에 가깝게라도 갈수 있게 해야 하는 것이 임원/ 경영자의 역할이다.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
		<div class="wpcnt">
			<div class="wpa wpmrec">
				<span class="wpa-about">광고</span>
				<div class="u">		<div style="padding-bottom:15px;width:300px;height:250px;float:left;margin-right:5px;margin-top:0px">
		<div id="atatags-26942-5c92849bce5f7">
			<script type="text/javascript">
			__ATA.cmd.push(function() {
				__ATA.initSlot('atatags-26942-5c92849bce5f7',  {
					collapseEmpty: 'before',
					sectionId: '26942',
					width: 300,
					height: 250
				});
			});
			</script>
		</div></div>		<div style="padding-bottom:15px;width:300px;height:250px;float:left;margin-top:0px">
		<div id="atatags-114160-5c92849bce5fb">
			<script type="text/javascript">
			__ATA.cmd.push(function() {
				__ATA.initSlot('atatags-114160-5c92849bce5fb',  {
					collapseEmpty: 'before',
					sectionId: '114160',
					width: 300,
					height: 250
				});
			});
			</script>
		</div></div></div>
				
			</div>
		</div>]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2018/09/09/cpo_productteam/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:thumbnail url="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg" />
		<media:content url="https://arload.files.wordpress.com/2018/09/facebooks-new-product-teams.jpg" medium="image">
			<media:title type="html">facebooks-new-product-teams</media:title>
		</media:content>

		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2018/09/career-roadmap-chief-product-officer2-100705367-orig.jpg" medium="image">
			<media:title type="html">career-roadmap-chief-product-officer2-100705367-orig.jpg</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2018/09/product-team-structure.png" medium="image">
			<media:title type="html">product team structure.png</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2018/09/proddiag1.png" medium="image">
			<media:title type="html">proddiag1.png</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2018/09/1_ck9wtk10g546ihpn2hkkqq.png" medium="image">
			<media:title type="html">1_Ck9wTK10g546ihPn2HkKqQ.png</media:title>
		</media:content>
	</item>
		<item>
		<title>클라우드를 도입한다면, 꼭 알아야 하는 것들.</title>
		<link>https://arload.wordpress.com/2017/07/31/cloudstory/</link>
				<comments>https://arload.wordpress.com/2017/07/31/cloudstory/#respond</comments>
				<pubDate>Mon, 31 Jul 2017 12:19:50 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Cloud]]></category>
		<category><![CDATA[성능]]></category>
		<category><![CDATA[CPU Steal Time]]></category>
		<category><![CDATA[IOPS]]></category>
		<category><![CDATA[Performance]]></category>
		<category><![CDATA[TCP Connection]]]></category>
		<category><![CDATA[USE]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4451</guid>
				<description><![CDATA[클라우드 꼭 해야 하나? 클라우드 바람이 불고 있다.  개발자나 DBA 입장에서는 서버를 빌려쓰는 것으로 이해할 수 있지만, 전통적인 시스템 운영자에게는 그 이상이다.    클라우드를  도입시 고려해야 되는 상황과 시장 에 대해서 설명하고자 한다. 미국은 클라우드 전환 율이 5:5 이지만 한국은 이제 8:2 -&#62; 7:3으로 넘어가고 있는 상황이다. 혹자는 낮은 클라우드 전환 율이 해외에 비해 경쟁력이 [&#8230;]]]></description>
								<content:encoded><![CDATA[<blockquote><p>클라우드 꼭 해야 하나?</p></blockquote>
<p>클라우드 바람이 불고 있다.  개발자나 DBA 입장에서는 서버를 빌려쓰는 것으로 이해할 수 있지만, 전통적인 시스템 운영자에게는 그 이상이다.    클라우드를  도입시 고려해야 되는 상황과 시장 에 대해서 설명하고자 한다.</p>
<p>미국은 클라우드 전환 율이 5:5 이지만 한국은 이제 8:2 -&gt; 7:3으로 넘어가고 있는 상황이다. 혹자는 낮은 클라우드 전환 율이 해외에 비해 경쟁력이 없다, 뒤쳐지고 있다 라는 이야기를 하고 있다.</p>
<p>엄격하게 말하면, 이러한 상황은  한국 시장의 특성때문에 그렇다. 미국,중국은 내국 서비스라고 해도 미국 전역에 서비스를 배포해야 한다.   개별 IDC 업체들을 돌아가며 IDC 특성에 맞추어가며 배포하는 것보다, AWS, Azure, GCE와 같은 글로벌 밴더사의 클라우드 플랫폼에서 운영 배포하는 것이 유지보수가 훨씬 쉽기 때문에,  미국, 중국 전역 또는 글로벌한 서비스들은  클라우드로  빠르게 전환되고 있는 추세다.</p>
<p>현재 한국은 중견 기업 이상급들이 비용 절감을 위해 오픈 스택, Private Cloud 도입을 하고 있는 추세이다.   하지만 글로벌에 나갈때는  멀티 리전, 멀티 존에 대한 운영이나 경험들에 대해 부족해 어려움을 겪고 있는 현실이며, 이러한 경험을 가진 인력을 구하기는 쉽지 않다.</p>
<blockquote><p>클라우드는 공유 제한</p></blockquote>
<div data-shortcode="caption" id="attachment_4522" style="width: 335px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4522" data-attachment-id="4522" data-permalink="https://arload.wordpress.com/2017/07/31/cloudstory/cloud-instance/" data-orig-file="https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=325&#038;h=267" data-orig-size="849,696" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cloud instance" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=325&#038;h=267?w=300" data-large-file="https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=325&#038;h=267?w=770" class=" wp-image-4522 aligncenter" src="https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=325&#038;h=267" alt="cloud instance" width="325" height="267" srcset="https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=325&amp;h=267 325w, https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=650&amp;h=534 650w, https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=150&amp;h=123 150w, https://arload.files.wordpress.com/2017/07/cloud-instance.png?w=300&amp;h=246 300w" sizes="(max-width: 325px) 100vw, 325px" /><p id="caption-attachment-4522" class="wp-caption-text">그림 1. 클라우드는 공유자원</p></div>
<p>개발자, 운영자 DBA가 클라우드가 가져오는 가장 큰 제약은 클라우드는 공유자원이라는 것이다. 하나의 머신에, 가상화된 여러개의 인스턴스를 올려 놓은 것이다.   즉 다시 말하자면, 우리는 공유자원을 빌려 쓰는 것이므로 오늘 잘 동작한다고 해서 내일 잘 동작한다는 것을 보장할수 없다.</p>
<div data-shortcode="caption" id="attachment_4534" style="width: 2110px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4534" data-attachment-id="4534" data-permalink="https://arload.wordpress.com/2017/07/31/cloudstory/iops-queue-length/" data-orig-file="https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=770" data-orig-size="2100,728" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="iops queue length" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=770?w=770" class=" size-full wp-image-4534 aligncenter" src="https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=770" alt="iops queue length.png" srcset="https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=770 770w, https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=1540 1540w, https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=150 150w, https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=300 300w, https://arload.files.wordpress.com/2017/07/iops-queue-length.png?w=1024 1024w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4534" class="wp-caption-text">그림 2. 클라우드 장애의 단골 손님 &#8211;  IOPS 부족 문제</p></div>
<p>국내 서비스중인  안정적인 게임이 중국에 클라우드에서 배포되고 나서 발생한 장애사례이다. 한국에서는 실제 물리서버에서 배포를 했었는데, 중국 진출 후 클라우드를 처음 도입하였다.   그런데 두개의 리전에 로그인 서비스를 배포 했는데, 특정 시간대에 한쪽 리전에서만 계속 로그인이 제대로 되지 않아 튕기는 문제가 발생했다.</p>
<p>장애시 개발팀은 이미 몇 년동안 검증된 로직인데, 원인을 찾기 힘들어 했었고, 문의가 들어와 확인을 해보니 클라우드 인프라의 문제였다.  바로 클라우드에 가장 장애로 많이 이어지는 IOPS (초당 발생하는 IO) 가 대표적인 예이다.  위 그림을 보면 IOPS가 초당 250으로 제한이 되어있는 것처럼 볼수 있으며, 실제 IOPS 요청에 비해 부하가 반영이 되지 않아 Write Queue에 요청이 쌓여 있는 것을 볼수 있다.</p>
<p>왜 이러한 현상이 발생했을까? 앞서 언급한 것 처럼 클라우드는 공유자원이다.   즉 하나의 Host 머신에서 우리 서비스 이외에 다른 서비스들도 입점 할수  있으며,이 서비스가 특정 시간마다 과도한 자원을 사용한다면 (IO가 많이 필요한 배치 작업을 돌린다면), 우리 서비스에 영향을 줄수 있다는 것이다.  그래서 기존 서비스를 쾌적한 다른 존으로 배치하고 나서 장애는 해결되었다.</p>
<p><span id="more-4451"></span></p>
<blockquote><p>클라우드의 도입시 고민해야 하는 것들</p></blockquote>
<ol>
<li>DBA나 개발자가 처음 클라우드를 접할 때, 가장 간과하는 것이 클라우드와 물리 서버의 스펙 산정이다. 보수적으로 클라우드는 동일한 스펙의 물리 서버보다 40%~50% 수준의 성능을 감안해야 된다는 것이다.</li>
<li> 각 인스턴스 별로 IO를 잘 분산해 비용 절감적인 아키텍처를 유지하는 것이 중요하다. (DB를 클라우드로 전환할 경우.  DBMS 쿼리의 문제가 아닌, IOPS가 모잘라 Slow Query가 발생하는 경우도 종종있다.)   즉  IO를 잘 관리하는게 핵심이다.    IO를 보장받는 AWS의 Provisioned IOPS, Azure의  Premium Storage 와 같은 제품을 판매하지만,  비용이 만만하지 않다.</li>
<li> 메모리 비용도 1G당 월 1만원 정도의 비용이라, 로그 , 시계열 데이터 같은 경우 메모리를 많이 사용하는 RDBMS 보다는, Time Series (시계열) DB를 사용하여 비용을 아끼는 것이 중요하다.</li>
</ol>
<blockquote><p>어떠한 지표로 우리 시스템을 바라보아야할까?</p></blockquote>
<p>리눅스에서 성능과 관련된 명령어들을 나열해 보면 다음과 같다.</p>
<div data-shortcode="caption" id="attachment_4602" style="width: 1490px" class="wp-caption alignnone"><img aria-describedby="caption-attachment-4602" data-attachment-id="4602" data-permalink="https://arload.wordpress.com/2017/07/31/cloudstory/linux-perf/" data-orig-file="https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=770" data-orig-size="1480,929" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="linux perf" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=770?w=770" class="alignnone size-full wp-image-4602" src="https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=770" alt="linux perf" srcset="https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=770 770w, https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=150 150w, https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=300 300w, https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png?w=1024 1024w, https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png 1480w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4602" class="wp-caption-text">그림 3. 리눅스 성능 지표 (출처 &#8211; Brendan / Netflix Tech Blog )</p></div>
<p>이 많은 지표에서  우리는 무엇을 봐야 할까?</p>
<pre id="6a0f" class="graf graf--pre graf-after--p">uptime
dmesg | tail
vmstat 1
mpstat -P ALL 1
pidstat 1
iostat -xz 1
free -m
sar -n DEV 1
sar -n TCP,ETCP 1
top</pre>
<p>Netflix에 기술 블로그에<a href="https://medium.com/netflix-techblog/linux-performance-analysis-in-60-000-milliseconds-accc10403c55" target="_blank" rel="noopener"> 60초안에 서버 성능 분석하기</a>에서 추천한 지표이다. 상세한 설명은 링크를 보기 바라며, 기본 적인 설명이 잘 되어있다.   한 걸음 더 나아가서, 이러한 지표를  더 이해하기 쉽게 구성을 하면 어떨까?</p>
<div data-shortcode="caption" id="attachment_4630" style="width: 1518px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4630" data-attachment-id="4630" data-permalink="https://arload.wordpress.com/2017/07/31/cloudstory/use-method/" data-orig-file="https://arload.files.wordpress.com/2017/07/use-method.png?w=770" data-orig-size="1508,788" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="use method" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/07/use-method.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2017/07/use-method.png?w=770?w=770" class=" size-full wp-image-4630 aligncenter" src="https://arload.files.wordpress.com/2017/07/use-method.png?w=770" alt="use method.png" srcset="https://arload.files.wordpress.com/2017/07/use-method.png?w=770 770w, https://arload.files.wordpress.com/2017/07/use-method.png?w=150 150w, https://arload.files.wordpress.com/2017/07/use-method.png?w=300 300w, https://arload.files.wordpress.com/2017/07/use-method.png?w=1024 1024w, https://arload.files.wordpress.com/2017/07/use-method.png 1508w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4630" class="wp-caption-text">그림 4. USE 방법론 &#8211; 출처 <a href="http://www.brendangregg.com/usemethod.html" target="_blank" rel="noopener">Brendan의 성능 페이지</a></p></div>
<p>이러한 고민에 나온 지표들이 <a href="http://www.brendangregg.com/usemethod.html">USE 메소드</a>, TSA  (쓰레드 상태로 보는 방법로도 이다. ) 메소드 이다. 이중에서 USE 메소드를 소개하고자 한다.</p>
<p>단순히 사용률(Utilization)  만 제공하기 보다는,</p>
<ul>
<li>얼마나 많은 부하(Saturation)가 들어와서</li>
<li>이러한 사용률( Utilization)이 나왔는지 문제가 발생했다면</li>
<li>문제가 발생했다면 에러 메세지들은 무엇인지</li>
</ul>
<p>본다면 한결 인과 관계를 파악하기 쉬워진다.</p>
<table style="height:378px;" width="622">
<tbody>
<tr>
<td width="106"><b>Resource</b></td>
<td width="170"><b>Utilization </b></td>
<td width="220"><b>Saturation</b></td>
<td width="158"><b>Errors</b></td>
</tr>
<tr>
<td width="106">CPU</td>
<td width="170">mpstat-PALL1,</p>
<p>sumnon-idlefields</td>
<td width="220">vmstat1,&#8221;r&#8221;</td>
<td width="158">perf</td>
</tr>
<tr>
<td width="106">Memory</p>
<p>Capacity</td>
<td width="170">free–m,&#8221;used&#8221;/&#8221;total&#8221;</td>
<td width="220">vmstat1,&#8221;si&#8221;+&#8221;so&#8221;;</p>
<p>demsg|grepkilled</td>
<td width="158">dmesg</td>
</tr>
<tr>
<td width="106">StorageI/O</td>
<td width="170">iostat–xz1,</p>
<p>&#8220;%util&#8221;</td>
<td width="220">iostat–xnz1,</p>
<p>&#8220;avgqu-sz&#8221;&gt;1</td>
<td width="158">/sys/…/ioerr_cnt;</p>
<p>smartctl</td>
</tr>
<tr>
<td width="106">Network</td>
<td width="170">nicstat,&#8221;%Util&#8221;</td>
<td width="220">ifconfig,&#8221;overrunns&#8221;;</p>
<p>netstat–s&#8221;retrans…&#8221;</td>
<td width="158">ifconfig,</p>
<p>&#8220;errors&#8221;</td>
</tr>
</tbody>
</table>
<p>실제 USE 메소드의  한 예로 위와 같은 지표들을 선정할수 있다.  분류화가 되니 훨씬  이해하기 쉽다.</p>
<blockquote><p>이외에도 추가적으로 봐야 되는 지표들</p></blockquote>
<p>TCP 연결 상태</p>
<div data-shortcode="caption" id="attachment_4670" style="width: 546px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4670" data-attachment-id="4670" data-permalink="https://arload.wordpress.com/2017/07/31/cloudstory/tcp-connection/" data-orig-file="https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=536&#038;h=242" data-orig-size="1599,722" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="tcp connection" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=536&#038;h=242?w=300" data-large-file="https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=536&#038;h=242?w=770" class=" wp-image-4670 aligncenter" src="https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=536&#038;h=242" alt="tcp connection" width="536" height="242" srcset="https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=536&amp;h=242 536w, https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=1072&amp;h=484 1072w, https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=150&amp;h=68 150w, https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=300&amp;h=135 300w, https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=768&amp;h=347 768w, https://arload.files.wordpress.com/2017/07/tcp-connection.png?w=1024&amp;h=462 1024w" sizes="(max-width: 536px) 100vw, 536px" /><p id="caption-attachment-4670" class="wp-caption-text">그림 5. TCP 연결 상태</p></div>
<p>자원 사용량은 여유가 있는데,  장애가 난  경우도 있다.  네트워크가 불안정하거나,  개발로직의 문제의 TCP Connection이 제대로 닫히지 되지 않아  CLOSE_WAIT가 쌓여서 발생한 경우이다.</p>
<p>CPU Steal Time</p>
<p>CPU Steal Time은 호스트 OS에서  우리 VM으로 까지 CPU를 할당할때 걸리는 시간이다. 평상시는 2ms 이하이며, 이 지표가 좋아지지 않는다면  Host OS나 다른 VM에서 과도하게 자원을 사용하는게 아닌지 의심해 볼만 하다.</p>
<div data-shortcode="caption" id="attachment_4671" style="width: 570px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4671" data-attachment-id="4671" data-permalink="https://arload.wordpress.com/2017/07/31/cloudstory/steal_scenarios/" data-orig-file="https://arload.files.wordpress.com/2017/07/steal_scenarios.png?w=770" data-orig-size="560,183" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="steal_scenarios" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/07/steal_scenarios.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2017/07/steal_scenarios.png?w=770?w=560" class=" size-full wp-image-4671 aligncenter" src="https://arload.files.wordpress.com/2017/07/steal_scenarios.png?w=770" alt="steal_scenarios.png" srcset="https://arload.files.wordpress.com/2017/07/steal_scenarios.png 560w, https://arload.files.wordpress.com/2017/07/steal_scenarios.png?w=150 150w, https://arload.files.wordpress.com/2017/07/steal_scenarios.png?w=300 300w" sizes="(max-width: 560px) 100vw, 560px"   /><p id="caption-attachment-4671" class="wp-caption-text">그림 6. CPU Steal 현상 &#8211;  출처 http://bit.ly/1w1HQy7</p></div>
<p>만약  동일한 역할을 하는 서버들이,  (같은 호스트 OS가 아닌) 다른 존등에  흩어져 있는데 위와 같은 현상이 발생했다고 하자.</p>
<ol>
<li>모든 인스턴스에서 CPU Steal Time이 증가한 경우 : 이 경우는 전역적으로 자원이 모자라다는 것을 의하며,  자원을 늘려야 되는 문제 된다.</li>
<li>특정 서버만 CPU Steal Time이 증가한 경우 : 이 경우는 하나의 VM에만 발생했다는 것은 해당 VM이 올라간 Physical 서버에 문제가 있을 확률이 높으며, 다른 존 또는 새롭게 인스턴스를 생성하여 이사갈 필요가 있다.</li>
</ol>
<p>&nbsp;</p>
<blockquote><p>맺으며.</p></blockquote>
<p>클라우드에 대한  이해, 부하 관리의 중요성, 알아야 할 필수적인 지표들을 소개해 드렸다.  다음 글에서는  Dropbox가 클라우드 환경에서 서비스의 품질을 지키기 위한 여러 노하우를 공유해 드리고자 한다.</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2017/07/31/cloudstory/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/07/cloud-instance.png" medium="image">
			<media:title type="html">cloud instance</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/07/iops-queue-length.png" medium="image">
			<media:title type="html">iops queue length.png</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/07/linux-perf-e1501501394187.png" medium="image">
			<media:title type="html">linux perf</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/07/use-method.png" medium="image">
			<media:title type="html">use method.png</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/07/tcp-connection.png" medium="image">
			<media:title type="html">tcp connection</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/07/steal_scenarios.png" medium="image">
			<media:title type="html">steal_scenarios.png</media:title>
		</media:content>
	</item>
		<item>
		<title>트위터는 왜 모니터링을 2번이나 만들었을까?</title>
		<link>https://arload.wordpress.com/2017/04/21/%ed%8a%b8%ec%9c%84%ed%84%b0%eb%8a%94-%ec%99%9c-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81%ec%9d%84-2%eb%b2%88%ec%9d%b4%eb%82%98-%eb%a7%8c%eb%93%a4%ec%97%88%ec%9d%84%ea%b9%8c/</link>
				<comments>https://arload.wordpress.com/2017/04/21/%ed%8a%b8%ec%9c%84%ed%84%b0%eb%8a%94-%ec%99%9c-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81%ec%9d%84-2%eb%b2%88%ec%9d%b4%eb%82%98-%eb%a7%8c%eb%93%a4%ec%97%88%ec%9d%84%ea%b9%8c/#respond</comments>
				<pubDate>Fri, 21 Apr 2017 12:57:22 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Articles]]></category>
		<category><![CDATA[My Thinking]]></category>
		<category><![CDATA[Software Engineering]]></category>
		<category><![CDATA[architecture]]></category>
		<category><![CDATA[Monitoring]]></category>
		<category><![CDATA[Twitter]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4438</guid>
				<description><![CDATA[트위터는 왜 두번이나 모니터링 시스템을 직접 개발 하였을까요?   Monitorama 에서 발표한Building Twitter Next-Gen Alerting System과  여러 컨퍼러스에서 발표한 내용을 정리해서 공유해 드리고자 합니다. Twitter 모니터링 초창기 시스템 아키텍처 첫 모니터링 솔루션은 위와 같이 아키텍처를 수립하였습니다. (현재 오픈소스 솔루션과 유사하죠)     1.0 시스템은 다음과 같은 컴포넌트로 구성되어 있습니다.  (트위터의 모니터링 시스템이 오픈소스로 공개되지 않아서, 전적으로 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>트위터는 왜 두번이나 모니터링 시스템을 직접 개발 하였을까요?   Monitorama 에서 발표한<a href="https://vimeo.com/173607647">Building Twitter Next-Gen Alerting System</a>과  여러 컨퍼러스에서 발표한 내용을 정리해서 공유해 드리고자 합니다.</p>
<blockquote><p>Twitter 모니터링 초창기 시스템 아키텍처</p></blockquote>
<p><img data-attachment-id="4447" data-permalink="https://arload.wordpress.com/2017/04/21/%ed%8a%b8%ec%9c%84%ed%84%b0%eb%8a%94-%ec%99%9c-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81%ec%9d%84-2%eb%b2%88%ec%9d%b4%eb%82%98-%eb%a7%8c%eb%93%a4%ec%97%88%ec%9d%84%ea%b9%8c/observability2/" data-orig-file="https://arload.files.wordpress.com/2017/04/observability2.png?w=770" data-orig-size="700,548" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="observability2" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2017/04/observability2.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2017/04/observability2.png?w=770?w=700" class="alignnone size-full wp-image-4447" src="https://arload.files.wordpress.com/2017/04/observability2.png?w=770" alt="observability2" srcset="https://arload.files.wordpress.com/2017/04/observability2.png 700w, https://arload.files.wordpress.com/2017/04/observability2.png?w=150 150w, https://arload.files.wordpress.com/2017/04/observability2.png?w=300 300w" sizes="(max-width: 700px) 100vw, 700px"   /></p>
<p>첫 모니터링 솔루션은 위와 같이 아키텍처를 수립하였습니다. (현재 오픈소스 솔루션과 유사하죠)     1.0 시스템은 다음과 같은 컴포넌트로 구성되어 있습니다.  (트위터의 모니터링 시스템이 오픈소스로 공개되지 않아서, 전적으로 발표자료에 의존해 설명이 구체적이지 않습니다. )</p>
<ul>
<li>Agent  &#8211; 데이터를 수집하는 Agent로 시스템 성능에 필요한 여러 지표를 수집.</li>
<li>Collector &amp; Storage API &#8211; 수집부에서 데이터를  모아  Storage API 를 통해 Time Series Database( <a href="https://blog.twitter.com/2014/manhattan-our-real-time-multi-tenant-distributed-database-for-twitter-scale">Manhattan</a>으로 추정)에 저장하고, 그정보를 Cassandra에 저장.</li>
<li>Monitoring &#8211; Query 엔진으로 데이터를 긁어와 여러 지표를 모니터링.</li>
<li>Dashboard &#8211;  Alert 과 Dashboard 를 쉽게 구성할수 있는 Config, DSL을 제공.</li>
<li>Ad Hoc Queries &#8211; 상황에 따라 적합한 쿼리를 던질수 있음.</li>
</ul>
<blockquote><p>트위터는 왜 모니터링 2.0 시스템을 만들어야 했나?</p></blockquote>
<p>하지만 트위터의 급격한 성장으로 인해, 위 아키텍처로는 더 이상 모니터링을 할수 없는 상황이 되었습니다.</p>
<ul>
<li><span style="font-weight:400;">1분당 수집되는 메트릭이 3년 만에 3억개(300M)-&gt; 14배로 43억개(4.3B)으로 증가.</span></li>
<li><span style="font-weight:400;">발생하는 알럿의 증가 &#8211;  1분당 2500개 -&gt; 1분당 3만개로 증가.</span></li>
</ul>
<p><img class="aligncenter wp-image-1605 size-large" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/04/twitter-metric--e1491972065300-1024x545.png" alt="1분당 수집되는 트위터 성능 지표 수집 수 " width="660" height="351" /></p>
<p><span id="more-4438"></span></p>
<ul>
<li><span style="font-weight:400;">기존 시스템 Alert Config 간단하게 만들어서 올리는 형태를 제공, A</span>lert config와 dashboard 구성 DSL 간의 관리가 잘 되지 않음 -&gt; 알럿을 설정했지만 대시보드 구성에 빠져서 정작 데이터는 못보는 문제들이 발생</li>
</ul>
<p><img class="aligncenter size-large wp-image-1591" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/03/alert_dashboard-1024x344.png" alt="alert_dashboard" width="660" height="222" /></p>
<ul>
<li>Alert 시스템을 한 존에서만 운영했는데, 존 자체가 안 좋아져서 알럿이 안 온 사례도 많아.  Alert 시스템을 멀티 존에 이중화 함.  이에 동일한 알럿을 두번 받게 되더라도, 예외처리하는 코드등이 필요하게 되었음.</li>
</ul>
<p><img class="aligncenter size-large wp-image-1587" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/03/alert-zone-2-1024x533.png" alt="alert zone 2" width="660" height="344" /></p>
<blockquote><p>더 나은 모니터링 솔루션 2.0을 만들기 위한 노력들</p></blockquote>
<p>새로운 모니터링 시스템을 만들기 위해 인터뷰를 비롯하여, 고객의 페르소나 분석등, 어떻게 개선할지 많은 이야기를 나누었습니다 .  고객의 요구를 정확히 파악하기 위해 원하는 Feature에 대해 계속 질문을 하였으며,  답은 유도하거나 제시하지 않기 위해서 많은 노력을 했습니다.</p>
<ul>
<li>Usage &#8211; 화면을 보게 되었을때 무엇을 하는가?</li>
<li>Motivation &#8211; 1.0에서 알럿(이벤트)를 받았을때 왜 반응하거나/ 반응하지 않았는가?</li>
<li>Pain Point &#8211; 사용하면서 좌절하거나, 힘들게 만들었던 요인들은 무엇이냐?</li>
</ul>
<p>개선된 2.0을 만들기 위해, 2.0에 도움이 될 <a href="http://blog.wishket.com/%ED%8E%98%EB%A5%B4%EC%86%8C%EB%82%98-%EA%B8%B0%EB%B2%95%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%94%94%EC%9E%90%EC%9D%B8-%EB%B0%A9%EB%B2%95/">페르소나 등을 도출</a>하는 등의 노력도 했구요</p>
<p><img class="aligncenter size-full wp-image-1606" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/04/persona.png" alt="persona" width="599" height="316" /></p>
<blockquote><p>개선된 모니터링 2.0</p></blockquote>
<p>실제적으로 어떠한 개선이 이루어졌는지 보도록 하시죠. 모니터링 솔루션을 제작하거나/사용하는 입장에서 충분히 공감할 부분들이 많았습니다.</p>
<ol>
<li>알럿과 대시보드와의 통합</li>
</ol>
<p><img class="aligncenter size-large wp-image-1588" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/03/monitoring-_twitter-1024x303.png" alt="monitoring _twitter" width="660" height="195" /></p>
<p><span style="font-weight:400;">1.0에는 알럿과 차트가 분리되어 있어서 알럿이 발생해도, 어느 대시보드에서 있는지 찾기가 어려웠습니다.  </span></p>
<p><img data-attachment-id="1589" data-permalink="https://arload.wordpress.com/2009/09/17/plop-fault-tolerance-robert-hanmer/with-bob-hanmer/" data-orig-file="https://arload.files.wordpress.com/2009/09/with-bob-hanmer.jpg" data-orig-size="448,336" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;4.1&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;E-420&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1251505599&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;20&quot;,&quot;iso&quot;:&quot;800&quot;,&quot;shutter_speed&quot;:&quot;0.1&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="with-bob-hanmer" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2009/09/with-bob-hanmer.jpg?w=300" data-large-file="https://arload.files.wordpress.com/2009/09/with-bob-hanmer.jpg?w=448" class="aligncenter size-large wp-image-1589" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/03/new-alert-system-1024x427.png" alt="new alert system" width="660" height="275" /></p>
<p>2.0에서는 알럿과 해당 차트가 맵핑됨으로써,  차트에서 좋고 나쁜 상태를 또 반대로 알럿이 발생한 차트가 무엇인지 쉽게 찾을수 있게 UI가 개선되었습니다.</p>
<p>2. <span style="font-weight:400;">설정 언어에 대한 변경</span></p>
<p><span style="font-weight:400;">기존 대시 보드 구성을 DSL대신,  python으로 변경하여 더 유연하게, 사전 검증 가능하게 만들었습니다.</span></p>
<p><img class="aligncenter size-large wp-image-1590" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/03/python-config-1024x408.png" alt="python config" width="660" height="263" /></p>
<p><span style="font-weight:400;">모니터링 하는 대상들을 Python 모듈로만들어서 쉽게 대시보드에 addin되는 형태로 만들었으며, </span><span style="font-weight:400;">배포 전에 server side validator를 통해서 안정성을 검증하는 로직을 강화했습니다.  실수하지 않게 만드는 것이지요. </span></p>
<p>3. 알럿 신뢰성 확보 문제</p>
<p>1.0에서는 알럿 신뢰성을 위해 멀티 존에서 알럿을 보냈으나,  클라이언트 쪽에서는 두번 메세지를  체크하는 등에 대한 여러 번거로움이 있었습니다.  그래서 zone의 건강 상태를 체크하고, 상태가 좋은 zone으로  alert 시스템을 rebalnacing하게 만들었습니다. <img class="aligncenter size-large wp-image-1592" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/03/alert-rebalance-1024x372.png" alt="alert rebalance" width="660" height="240" /></p>
<blockquote><p>Twitter 모니터링 2.0 시스템 아키텍처</p></blockquote>
<p>위에 대한 고민들을 반영하여, 새로운 모니터링 시스템을 만들었습니다.</p>
<div data-shortcode="caption" id="attachment_1593" style="width: 583px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-1593" class="size-full wp-image-1593" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/03/observ_1.png" alt="트위터 모니터링 2.0 시스템 아키텍처 " width="573" height="391" /><p id="caption-attachment-1593" class="wp-caption-text">트위터 모니터링 2.0 시스템 아키텍처</p></div>
<ul>
<li>Agent &#8211; Python으로 만들어진 Agent로 부터 데이터를 수집한다.</li>
<li>Ingestion Service &#8211; 데이터를 저장및 조회하는  엔진인 Cuckoo를 별도로 제공합니다. 내부적으로는 트위터가 만든 Time Series DB인 Manhattan에 정보를 저장합니다.</li>
<li>Time Series DB Query Engine &#8211; Cuckoo를 통해 원하는 데이터를 조회할수 있는 CQL을 별도로 제공합니다.   CQL은 내부적으로 다음과 같이 동작합니다. <img class="aligncenter wp-image-1594" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/03/cuckoo-read.png" alt="cuckoo-read" width="320" height="285" />Parser는 쿼리를 파싱하여 AST (Abstract Syntax Trees)로 만들고, Rewriter는 성능 향상을 위하여,  AST 노드를  프로세싱 하고, 성능 향상을 위해 후처리 작업을 합니다. 그리고 Executor는 Rewriter의 작업 결과물을 실행하고,  output을 도출합니다.</li>
<li>Time Based Aggregation  &#8211; 입력받은 데이터를 가공하여 분단위, 시간 단위로 쪼개어 저장됩니다.</li>
<li>Temporal Indexing Service &#8211;  서비스, 소스 및 메트릭을 신속하게 탐색 할 수 있는 색인 서비스를 제공합니다. 지표의 메타 데이터 / 타임 스탬프등을 추적하고, 맴버 셋(redis 의 smember와 유사한 것으로 추정)에 대한 키 값을 관리합니다.</li>
<li><span style="font-weight:400;">CLI (command line interface) / Visualization &#8211; 고객은 CLI 와 를 시각화할 수 있는 UI를 사용하므로, 이에 적합하게 데이터를 전송 .</span></li>
</ul>
<blockquote><p>클라우드 존의 건강 상태를 보고 이사가는 알럿 시스템 구축</p></blockquote>
<p>모니터링에서 핵심 킬러 서비스인 알럿의 비용 절감 및 관리 효율화를  위해,  두개의 Zone에서 이중화 하여 사용하는 것 보다는, Zone의 상태 (사견 : 네트워크 latency, IOPS, CPU StealTime 등을)가 좋지 않다면, 다른 Zone으로 알럿 시스템을 이사(ReBalancing) 할수 있게 만들었습니다.</p>
<div data-shortcode="caption" id="attachment_1595" style="width: 670px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-1595" class="wp-image-1595 size-large" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/03/alerting-2-1024x569.png" alt="alerting 2" width="660" height="367" /><p id="caption-attachment-1595" class="wp-caption-text">트위터 알럿 시스템 2.0 아키텍처</p></div>
<p><strong>성능이 나오지 않는 존에서 scale out으로 처리하기 보다는,  상태가 건강한 존으로 이사를 간다는 것이 눈여겨 볼만한 상황</strong>입니다.   이렇게 하기 위해서는 stateless process 기반으로 시스템이 구축되어야 한다는 점입니다. 그리고  상태정보가 저장되는 DB는 두 존에 다 배포되어 동기화 된다는 것이 위 아키첵처의 핵심이라고 발수 있습니다.</p>
<ul>
<li><span style="font-weight:400;">알럿을 빠르게 전송하기 위해 RuleSet들을 Shard로 나누어 전송.  </span><img class="aligncenter size-large wp-image-1597" src="https://i2.wp.com/tech.whatap.io/wp-content/uploads/2017/03/rule-set-%E1%84%82%E1%85%A1%E1%84%82%E1%85%AE%E1%86%B72-1024x451.png" alt="rule set 나눔2" width="660" height="291" /></li>
</ul>
<p>한 서버에 모든 Rule들을 다 저장한 것이 아니라,   Rule들을 샤딩을 했다는 것입니다.  트위터 알럿 시스템 2.0 아키텍처에서 Balancer가  적절하게 샤드를 나누어서 배분한 것으로 보입니다.</p>
<blockquote><p><span style="font-weight:400;">Human Reasoning (장애가 발생하면 합리적인 판단이 가능하게 만든다..)</span></p></blockquote>
<p>고객이 솔루션을 사용할때, 합리적으로 판단하고 추론할수 있도록 만드는데 많은 고민을 한 것이 발표에서 느껴졌습니다.</p>
<ol>
<li><span style="font-weight:400;">장애 발생시 Context를 고민해야 한다.  발생한 장애의 Root Cause를 찾는 것이 중요하며 그 유형을 다음과 같이  분류했습니다. </span></li>
</ol>
<p><span style="font-weight:400;"><img data-attachment-id="1607" data-permalink="https://arload.wordpress.com/2009/09/18/plop-linda-rising-fearless-change/linda-rising-_-seminar/" data-orig-file="https://arload.files.wordpress.com/2009/09/linda-rising-_-seminar.jpg" data-orig-size="365,348" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="linda-rising-_-seminar" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2009/09/linda-rising-_-seminar.jpg?w=300" data-large-file="https://arload.files.wordpress.com/2009/09/linda-rising-_-seminar.jpg?w=365" class="aligncenter size-full wp-image-1607" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/04/context.png" alt="context" width="652" height="280" /></span></p>
<ul>
<li style="font-weight:400;"><span style="font-weight:400;">Global context : backbone componet(network.) 장애,  전체에 영향을 주는 장애.   </span></li>
<li style="font-weight:400;"><span style="font-weight:400;">Peer context : peer들간의 의존관계로 발생하는 장애. (Storage Layer의 문제)</span></li>
<li style="font-weight:400;"><span style="font-weight:400;">Local context : 배포를 잘못한 경우등.</span></li>
</ul>
<p><span style="font-weight:400;">2. 시스템을 다시 안정화 시킬 필요가 있는데, 다음과 같이 구성하여 해결.  실행 지침(list of steps)과 해결이 힘들경우 escalation할 컨텍 포인트(link)를 제공.</span></p>
<p><img class="aligncenter size-full wp-image-1608" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/04/list-of-steps.png" alt="list of steps" width="931" height="396" /></p>
<p>3. 알럿이 발생한 곳과 연관된 차트에 표현하기</p>
<p><img data-attachment-id="1589" data-permalink="https://arload.wordpress.com/2009/09/17/plop-fault-tolerance-robert-hanmer/with-bob-hanmer/" data-orig-file="https://arload.files.wordpress.com/2009/09/with-bob-hanmer.jpg" data-orig-size="448,336" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;4.1&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;E-420&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1251505599&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;20&quot;,&quot;iso&quot;:&quot;800&quot;,&quot;shutter_speed&quot;:&quot;0.1&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="with-bob-hanmer" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2009/09/with-bob-hanmer.jpg?w=300" data-large-file="https://arload.files.wordpress.com/2009/09/with-bob-hanmer.jpg?w=448" class="aligncenter size-large wp-image-1589" src="https://i0.wp.com/tech.whatap.io/wp-content/uploads/2017/03/new-alert-system-1024x427.png" alt="new alert system" width="660" height="275" /></p>
<blockquote><p><span style="font-weight:400;">Empower Human  &#8211; 어떻게 사용자에게 더 도움을 줄까?</span></p></blockquote>
<p>2.0을 만들고 나서, 사용자들이 잘 사용할수 있게 전방위 적으로 다양한 점접을 만들었습니다.</p>
<ul>
<li><span style="font-weight:400;">1차 지원  &#8211;  </span>Interaction 접점들을  다양히 제공.<img class="aligncenter size-full wp-image-1609" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/04/user-support-.png" alt="user support" width="787" height="225" />특히 세번째 Configuration Libraries 많은 시간을 투자 하였습니다.</li>
</ul>
<ul>
<li><span style="font-weight:400;">2차 지원 : Documentation을 업데이트하기 위해 많은 노력을 했습니다. 특히 코드와 일치가 유지되도록 많은 노력을 진행하였습니다. <img data-attachment-id="1610" data-permalink="https://arload.wordpress.com/2009/09/18/plop-linda-rising-fearless-change/manns_0201741571_mech-qxd/" data-orig-file="https://arload.files.wordpress.com/2009/09/fearless-change.jpg" data-orig-size="432,648" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;Manns_0201741571_mech.qxd&quot;}" data-image-title="Manns_0201741571_mech.qxd" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2009/09/fearless-change.jpg?w=200" data-large-file="https://arload.files.wordpress.com/2009/09/fearless-change.jpg?w=432" class="aligncenter size-full wp-image-1610" src="https://i1.wp.com/tech.whatap.io/wp-content/uploads/2017/04/us-2nd-line.png" alt="us 2nd line" width="901" height="225" /></span></li>
<li>3차 지원 :  당번(On Call)을 두어 직접 응대를 함.</li>
</ul>
<p><img class="aligncenter size-full wp-image-1611" src="https://i2.wp.com/tech.whatap.io/wp-content/uploads/2017/04/3rd-line.png" alt="3rd line" width="931" height="238" /></p>
<blockquote><p><span style="font-weight:400;">맺음</span></p></blockquote>
<p>클라우드 상황에서 서비스의 안정성을 유지하기 위해서 모니터링은 필수이며, 모니터팅의 핵심인 알럿의 높은 성능을 유지하기 위해 zone 의 상태를 보고 이사를 갈수 있는 시스템을 만들었다는 것이 매우 인상적이었습니다.  그리고 내부 시스템이지만 1.0 사용자를 인터뷰하면서 2.0 개선안을 도출해내는 점진적 개선하는 모습들. 그리고 이 컨셉들이 향후 와탭 제품에 많이 도움이 될듯 하네요.</p>
<p>이 내용인 모니터링 컨퍼러스인 monitorama 2016년도에 <a href="https://vimeo.com/173607647">Building Twitter Next-Gen Alerting System 내용</a>과 여러 블로그 글들을 찾아 요약한 것입니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2017/04/21/%ed%8a%b8%ec%9c%84%ed%84%b0%eb%8a%94-%ec%99%9c-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81%ec%9d%84-2%eb%b2%88%ec%9d%b4%eb%82%98-%eb%a7%8c%eb%93%a4%ec%97%88%ec%9d%84%ea%b9%8c/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2017/04/observability2.png" medium="image">
			<media:title type="html">observability2</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/twitter-metric--e1491972065300-1024x545.png" medium="image">
			<media:title type="html">1분당 수집되는 트위터 성능 지표 수집 수 </media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/alert_dashboard-1024x344.png" medium="image">
			<media:title type="html">alert_dashboard</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/alert-zone-2-1024x533.png" medium="image">
			<media:title type="html">alert zone 2</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/persona.png" medium="image">
			<media:title type="html">persona</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/monitoring-_twitter-1024x303.png" medium="image">
			<media:title type="html">monitoring _twitter</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/new-alert-system-1024x427.png" medium="image">
			<media:title type="html">new alert system</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/python-config-1024x408.png" medium="image">
			<media:title type="html">python config</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/alert-rebalance-1024x372.png" medium="image">
			<media:title type="html">alert rebalance</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/observ_1.png" medium="image">
			<media:title type="html">트위터 모니터링 2.0 시스템 아키텍처 </media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/cuckoo-read.png" medium="image">
			<media:title type="html">cuckoo-read</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/alerting-2-1024x569.png" medium="image">
			<media:title type="html">alerting 2</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/rule-set-%E1%84%82%E1%85%A1%E1%84%82%E1%85%AE%E1%86%B72-1024x451.png" medium="image">
			<media:title type="html">rule set 나눔2</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/context.png" medium="image">
			<media:title type="html">context</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/list-of-steps.png" medium="image">
			<media:title type="html">list of steps</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/03/new-alert-system-1024x427.png" medium="image">
			<media:title type="html">new alert system</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/user-support-.png" medium="image">
			<media:title type="html">user support</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/us-2nd-line.png" medium="image">
			<media:title type="html">us 2nd line</media:title>
		</media:content>

		<media:content url="http://tech.whatap.io/wp-content/uploads/2017/04/3rd-line.png" medium="image">
			<media:title type="html">3rd line</media:title>
		</media:content>
	</item>
		<item>
		<title>marshal &#8211; encode(serialization) in golang</title>
		<link>https://arload.wordpress.com/2016/01/01/marshal-encodeserialization-in-golang/</link>
				<comments>https://arload.wordpress.com/2016/01/01/marshal-encodeserialization-in-golang/#respond</comments>
				<pubDate>Fri, 01 Jan 2016 11:15:11 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Backend]]></category>
		<category><![CDATA[News]]></category>
		<category><![CDATA[Software Architecture]]></category>
		<category><![CDATA[decode]]></category>
		<category><![CDATA[encode]]></category>
		<category><![CDATA[go]]></category>
		<category><![CDATA[golang]]></category>
		<category><![CDATA[json]]></category>
		<category><![CDATA[json in golang]]></category>
		<category><![CDATA[marshal]]></category>
		<category><![CDATA[steram]]></category>
		<category><![CDATA[unmarshal]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4358</guid>
				<description><![CDATA[marshal / unmarshal  &#8211; encode / decode에 대한 go의 개념들 Marshal 이란? 구조체 또는 객체의 데이터를 json으로 byte[]로 만드는 것이 json.Marshal의 역할입니다.   여기까지는 그냥 string이며  http상에서는 문서로써 바로 전달이 가능하지요.  http상에서는 모든게 문서이니깐요 🙂 (marshalling의 원래의미 &#8211;  군대에서 준비태세를 갖추는것을 말하는 것인데, 네트워크-전쟁으로 나아가기 전에 어떤 포멧- 무기로 싸울지 준비태세를 갖추는 것으로 이해하면 됩니다) [&#8230;]]]></description>
								<content:encoded><![CDATA[<blockquote><p>marshal / unmarshal  &#8211; encode / decode에 대한 go의 개념들</p></blockquote>
<p>Marshal 이란?</p>
<p>구조체 또는 객체의 데이터를 json으로 byte[]로 만드는 것이 json.Marshal의 역할입니다.   여기까지는 그냥 string이며  http상에서는 문서로써 바로 전달이 가능하지요.  http상에서는 모든게 문서이니깐요 <img src="https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/1f642.png" alt="🙂" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
<p>(marshalling의 원래의미 &#8211;  군대에서 준비태세를 갖추는것을 말하는 것인데, 네트워크-전쟁으로 나아가기 전에 어떤 포멧- 무기로 싸울지 준비태세를 갖추는 것으로 이해하면 됩니다)</p>
<p>Serialization 이란?</p>
<p>하지만 일정한 크기로 잘게 나누어서 물 흐르듯이  계속 보내기 위해서는 stream 형태로 전달할 필요가 있습니다.  node.js가 서버 사이드 언어이므로 최상위 객체 EventEmitter바로 밑에 stream 으로 흐르게 딱 박혀있습니다 (왜 갑자기 node.js 이야기를 하냐면 stream이 그만큼 서버 사이트 프로그래밍에 중요하다는 의미이고 node.js 도 stream 형태로 데이터를 전송하는 것이 기본 골격이라는 의미입니다)</p>
<div data-shortcode="caption" id="attachment_4379" style="width: 2071px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4379" data-attachment-id="4379" data-permalink="https://arload.wordpress.com/2016/01/01/marshal-encodeserialization-in-golang/node-class-diagram/" data-orig-file="https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=770" data-orig-size="2061,1638" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="node-class-diagram" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=770?w=770" class=" size-full wp-image-4379 aligncenter" src="https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=770" alt="node-class-diagram" srcset="https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=770 770w, https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=1540 1540w, https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=150 150w, https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=300 300w, https://arload.files.wordpress.com/2016/01/node-class-diagram.png?w=1024 1024w" sizes="(max-width: 770px) 100vw, 770px"   /><p id="caption-attachment-4379" class="wp-caption-text"><a href="https://github.com/shigeki/node-class-diagram">출처 &#8211; github.com/shigeki</a></p></div>
<p>&nbsp;</p>
<blockquote><p>golang에서는 Encode  (Serialization) 라 불러주세요</p></blockquote>
<p>golang에서는 serialization, 즉 byte[] 데이터를 stream화 하는 녀석의 이름이 encode라고 부르네요.</p>
<div data-shortcode="caption" id="attachment_4390" style="width: 681px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-4390" data-attachment-id="4390" data-permalink="https://arload.wordpress.com/2016/01/01/marshal-encodeserialization-in-golang/golang-made/" data-orig-file="https://arload.files.wordpress.com/2016/01/golang-made.png?w=770" data-orig-size="671,354" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="golang made" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2016/01/golang-made.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2016/01/golang-made.png?w=770?w=671" class=" size-full wp-image-4390 aligncenter" src="https://arload.files.wordpress.com/2016/01/golang-made.png?w=770" alt="golang made" srcset="https://arload.files.wordpress.com/2016/01/golang-made.png 671w, https://arload.files.wordpress.com/2016/01/golang-made.png?w=150 150w, https://arload.files.wordpress.com/2016/01/golang-made.png?w=300 300w" sizes="(max-width: 671px) 100vw, 671px"   /><p id="caption-attachment-4390" class="wp-caption-text">json.Marshal , Encode 의 개념도</p></div>
<p><span id="more-4358"></span></p>
<p>golang 은 json 이외에도 <a href="https://golang.org/pkg/encoding/">다양한 encoding을 지원</a>합니다.</p>
<ul>
<li>ascii85</li>
<li>asn1</li>
<li>base32/base64</li>
<li>binary</li>
<li>csv</li>
<li>gob</li>
<li>hex</li>
<li>json</li>
<li>pem</li>
<li>xml</li>
</ul>
<p>이 encoding formant을 보고나서, go가 물건이라는 것에 다시금 놀라게 되네요<a href="https://github.com/nodejs/node/blob/master/lib/buffer.js">node.js의 encoding</a>보다 기본적으로 제공하는 것이 많습니다.  이 말뜻은 기본적인 네트워크 프로그래밍 짜기에는 golang이 더 편하다는 이야이가 되겠네요.</p>
<blockquote><p>json 직렬화일때 고민해야 하는 것들</p></blockquote>
<p>json 직렬화에 대한 예제들과 고려사항에 대한 글들을 공유한다.</p>
<ul>
<li>json 에제 &#8211; <a href="https://gobyexample.com/json">gobyexample</a></li>
<li><a href="http://attilaolah.eu/2014/09/10/json-and-struct-composition-in-go/">go에서 struct를 이용한  json 구성 방법</a></li>
<li><a href="http://attilaolah.eu/2013/11/29/json-decoding-in-go/">go에서  json decoding 하기 </a></li>
</ul>
<p>특히 두번째 포스트는 눈여겨 볼만하다. 중첩된 (nested) struct와 pointer의조합으로 재미난 trick 을 볼수있다. extra filed를 어떻게 json으로 전달할것인지에 대한 좋은 정보가 담겨져 있다.</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2016/01/01/marshal-encodeserialization-in-golang/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2016/01/node-class-diagram.png" medium="image">
			<media:title type="html">node-class-diagram</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2016/01/golang-made.png" medium="image">
			<media:title type="html">golang made</media:title>
		</media:content>
	</item>
		<item>
		<title>golang을 위한 dependency graph 도구들!</title>
		<link>https://arload.wordpress.com/2015/12/30/golang-dependency-tools/</link>
				<comments>https://arload.wordpress.com/2015/12/30/golang-dependency-tools/#respond</comments>
				<pubDate>Tue, 29 Dec 2015 20:04:27 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Framework]]></category>
		<category><![CDATA[dependency graph]]></category>
		<category><![CDATA[golang]]></category>
		<category><![CDATA[goviz]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4291</guid>
				<description><![CDATA[node.js / golang이  큰 장점을 가진 언어임에도 불구하고 쉽게 개발자들이 선뜻 적용하지 못하는 이유가 새로운 분야의 학습 곡선과 문제가 발생했을시 drill down해서 해결하는 노하우가 아직 널리 공유되지 못하는 이유이기도 하며, 여러 프레임워크의 아키텍처나 구조등이 개발자에게 널리 공유되지 못한것도 있다. 일전의 포스트에서와 본것과 같이 etcd를 요즘 살펴보고 있는데, go lang을 잘 적용한 프로젝트라서 보려고 해도 이 녀석의 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>node.js / golang이  큰 장점을 가진 언어임에도 불구하고 쉽게 개발자들이 선뜻 적용하지 못하는 이유가 새로운 분야의 학습 곡선과 문제가 발생했을시 drill down해서 해결하는 노하우가 아직 널리 공유되지 못하는 이유이기도 하며, 여러 프레임워크의 아키텍처나 구조등이 개발자에게 널리 공유되지 못한것도 있다.</p>
<p>일전의 포스트에서와 본것과 같이 etcd를 요즘 살펴보고 있는데, go lang을 잘 적용한 프로젝트라서 보려고 해도 이 녀석의 아키텍처가 잘 공유되어 있지는 않다.</p>
<p>어떠한 철학으로 layering되어 있고, 의존성들은 어떻게 관리하는지 더 나아가 profiling까지 보고 싶으나&#8230; golang은 아직 역사가 짧기 때문에 profiling이나 의존성 관계를 파악하는 도구등이 java / .net 진영보다는 부족하다고 할수 있다.</p>
<p>급한데로 찾아보니 나랑 비슷한 고민을 해본 사람이 있고 나름 괜찮은 프로젝트가 있어서 공유한다.</p>
<blockquote><p>go 파일간의 dependency를 그래프로 시각해 주는 툴들</p></blockquote>
<ul>
<li><a href="https://github.com/paetzke/go-dep-graph" rel="nofollow">https://github.com/paetzke/go-dep-graph</a></li>
<li><a href="https://github.com/hirokidaichi/goviz" rel="nofollow">https://github.com/hirokidaichi/goviz</a></li>
</ul>
<p>살펴본 결과 goviz가 더 나아 보인다.  일단 depth 별로 추출해주는 기능과 다양한 포멧을 지원해서 편하다.</p>
<p><span id="more-4291"></span></p>
<blockquote><p>goviz 사용법</p></blockquote>
<p>1. graphviz 설치</p>
<p>운영체제 별로 적절한 도구를 활용해 설치하시길</p>
<pre class="brush: plain; title: ; notranslate"> brew install graphviz </pre>
<p>2. go get 으로 goviz 다운 받기</p>
<pre class="brush: plain; title: ; notranslate"> go get github.com/hirokidaichi/goviz</pre>
<p>3. 분석할 프로젝트 go get으로 다운 받기</p>
<pre class="brush: plain; title: ; notranslate"> go get github.com/coreos/etcd</pre>
<p>4. goviz로 graph 생성하기</p>
<pre class="brush: plain; title: ; notranslate"> goviz -i github.com/coreos/etcd | dot -Tpng -o etcd.png</pre>
<p>5. goviz로 depth별로 graph 생성하기<br />
depth별로 생성할수 있는 기능에 칭찬을 하고 싶다.</p>
<pre class="brush: plain; title: ; notranslate">
goviz -i github.com/coreos/etcd -s github.com/coreos/etcd -d 1 | dot -Tpng -o etcddepth1.png
goviz -i github.com/coreos/etcd -s github.com/coreos/etcd -d 2 | dot -Tpng -o etcddepth2.png
goviz -i github.com/coreos/etcd -s github.com/coreos/etcd -d 3 | dot -Tpng -o etcddepth3.png </pre>
<blockquote><p>생성된 결과물들.</p></blockquote>
<p>etcd 레이어상 1단계는 사실 별 의미없는 결과물이 나오는듯 하다.  depth(단계) 별로 나온 결과물을 공유한다.</p>
<p>아쉬운 점은 d3를 통해서 collapsible 하게 접힌다거나, circular dependency를 상위개념에서 볼수 있다면 정말 좋을듯 하다.</p>
<p>&nbsp;</p>
<ul>
<li>2단계</li>
</ul>
<p><img data-attachment-id="4341" data-permalink="https://arload.wordpress.com/2015/12/30/golang-dependency-tools/etcddepth2/" data-orig-file="https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=770" data-orig-size="1629,1664" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="etcddepth2" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=770?w=294" data-large-file="https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=770?w=770" class=" size-full wp-image-4341 aligncenter" src="https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=770" alt="etcddepth2" srcset="https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=770 770w, https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=1540 1540w, https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=147 147w, https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=294 294w, https://arload.files.wordpress.com/2015/12/etcddepth2.png?w=1002 1002w" sizes="(max-width: 770px) 100vw, 770px"   /></p>
<ul>
<li>3단계</li>
</ul>
<p><img data-attachment-id="4342" data-permalink="https://arload.wordpress.com/2015/12/30/golang-dependency-tools/etcddepth3/" data-orig-file="https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=770" data-orig-size="6039,4485" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="etcddepth3" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=770?w=770" class=" size-full wp-image-4342 aligncenter" src="https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=770" alt="etcddepth3" srcset="https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=770 770w, https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=1540 1540w, https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=150 150w, https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=300 300w, https://arload.files.wordpress.com/2015/12/etcddepth3.png?w=1024 1024w" sizes="(max-width: 770px) 100vw, 770px"   /></p>
<ul>
<li>전체</li>
</ul>
<p><img data-attachment-id="4343" data-permalink="https://arload.wordpress.com/2015/12/30/golang-dependency-tools/etcd/" data-orig-file="https://arload.files.wordpress.com/2015/12/etcd.png?w=770" data-orig-size="8692,7706" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="etcd" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/etcd.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2015/12/etcd.png?w=770?w=770" class=" size-full wp-image-4343 aligncenter" src="https://arload.files.wordpress.com/2015/12/etcd.png?w=770" alt="etcd" srcset="https://arload.files.wordpress.com/2015/12/etcd.png?w=770 770w, https://arload.files.wordpress.com/2015/12/etcd.png?w=1540 1540w, https://arload.files.wordpress.com/2015/12/etcd.png?w=150 150w, https://arload.files.wordpress.com/2015/12/etcd.png?w=300 300w, https://arload.files.wordpress.com/2015/12/etcd.png?w=1024 1024w" sizes="(max-width: 770px) 100vw, 770px"   /></p>
<p>&nbsp;</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2015/12/30/golang-dependency-tools/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/etcddepth2.png" medium="image">
			<media:title type="html">etcddepth2</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/etcddepth3.png" medium="image">
			<media:title type="html">etcddepth3</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/etcd.png" medium="image">
			<media:title type="html">etcd</media:title>
		</media:content>
	</item>
		<item>
		<title>etcd를 이용한 high availability 확보 방안</title>
		<link>https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/</link>
				<comments>https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/#respond</comments>
				<pubDate>Thu, 10 Dec 2015 16:30:20 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Articles]]></category>
		<category><![CDATA[Backend]]></category>
		<category><![CDATA[My Thinking]]></category>
		<category><![CDATA[Software Engineering]]></category>
		<category><![CDATA[Study]]></category>
		<category><![CDATA[etcd]]></category>
		<category><![CDATA[failover]]></category>
		<category><![CDATA[heartbeat]]></category>
		<category><![CDATA[High Availability]]></category>
		<category><![CDATA[mongodb]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4195</guid>
				<description><![CDATA[mongodb가 혜성처럼 등장해 많은 사랑을 받은 이유가 여러가지 있다.  가장 큰 덕은 모바일의 폭발적인 성장이지만, 개발자에게는.. auto-sharding schemaless + json 데이터 저장 자체적으로 가지고 있는 master-slave  high availability 기능 정도 되지 않을까 생각한다. sharding이라는 것은 꽤 귀찮은 작업으로 어떻게 데이터를 분배해야 할지 많은 고민을 해야 되는데, 굳이 크게 고민하지 않고 auto-sharding을 쓸수 있는 적당한 규모의 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>mongodb가 혜성처럼 등장해 많은 사랑을 받은 이유가 여러가지 있다.  가장 큰 덕은 모바일의 폭발적인 성장이지만, 개발자에게는..</p>
<ul>
<li>auto-sharding</li>
<li>schemaless + json 데이터 저장</li>
<li>자체적으로 가지고 있는 master-slave  high availability 기능</li>
</ul>
<p>정도 되지 않을까 생각한다.</p>
<p>sharding이라는 것은 꽤 귀찮은 작업으로 어떻게 데이터를 분배해야 할지 많은 고민을 해야 되는데, 굳이 크게 고민하지 않고 auto-sharding을 쓸수 있는 적당한 규모의 프로젝트라면 마다할 필요가 없다.</p>
<p>또한 High Availiability를 자체적으로 지원을 하는데</p>
<p><img data-attachment-id="4285" data-permalink="https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/replica-set-primary-with-secondary-and-arbiter/" data-orig-file="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png?w=770" data-orig-size="700,265" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="replica-set-primary-with-secondary-and-arbiter" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png?w=770?w=700" class="alignnone size-full wp-image-4285" src="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png?w=770" alt="replica-set-primary-with-secondary-and-arbiter" srcset="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png 700w, https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png?w=150 150w, https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png?w=300 300w" sizes="(max-width: 700px) 100vw, 700px"   />1) 별도의  watcher인  arbiter 를 셋업하여 master-slave를 감시하는 방법</p>
<p><img data-attachment-id="4286" data-permalink="https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/replica-set-primary-with-two-secondaries/" data-orig-file="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png?w=770" data-orig-size="700,265" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="replica-set-primary-with-two-secondaries" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png?w=770?w=700" class="alignnone size-full wp-image-4286" src="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png?w=770" alt="replica-set-primary-with-two-secondaries" srcset="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png 700w, https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png?w=150 150w, https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png?w=300 300w" sizes="(max-width: 700px) 100vw, 700px"   />2) watcher없이 master-slave가 서로 heartbeat 메세지를 보내고 문제를 감지해 failover를 처리하는 방법</p>
<p>이렇게 두가지를 지원한다.  개발자에게는 야호하고 소리를 지를수 있는 좋은기능! (단 죽은 master를 어떻게 살리지는 개발자 여러분의 몫 &#8211; 좋은 방법이 있으면 공유를&#8230;)</p>
<p><span id="more-4195"></span></p>
<blockquote><p>문제는 HA를 자체적으로 지원하지 않는 DB들..</p></blockquote>
<p>문제는 오픈소스 DBMS에서 master-slave간에 뾰족한 high availability를 지원하지 않는 경우이다.</p>
<p>apache zookeeper 를 통해 high availiability를 확보하는 방안들이 여기 저기 공유되고 있으나 zookeeper는 구현시 여러가지 불편함이 있다.  트리구조로 관리되고 일회성 트리거라는 부분이 꽤  귀찮음을 유발한다.</p>
<p>이에 대해 많은 고민을 하다가 작년에 김현종님에게 etcd라는 것을 소개 받았다.</p>
<p>도대체 etcd가 무엇인가 고민하게 되고? etcd의 정의를 보면. 응  이게 watcher랑 무슨 관계이지? 라고 생각하게 되었다.</p>
<blockquote><p>etcd의 정의</p></blockquote>
<p>etcd는 go언어와 Raft프레임워크 이용해 작성된 오픈소스 key-value 저장소로 대규모 Docker 클러스터링에 있어서 컨테이너들을 유기적으로 연동시키고 억세스하기 위한 세련된 아키텍처를 제공하는 녀석이다.</p>
<p>현종님께서 etcd로 high availability를 구현하는 방법을 보여주셨는데, mongodb의 arbiter처럼 별도로 독립적인 서버를 설치해 주기적으로 heartbeat 또는 ping/pong등 상황에 맞는 전략을 사용해 , 문제시  failover를 해결하는 방법이었다.</p>
<p><img data-attachment-id="4289" data-permalink="https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/etcd_arbiterstyle/" data-orig-file="https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=770" data-orig-size="856,447" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="etcd_arbiterstyle" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=770?w=300" data-large-file="https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=770?w=770" class="alignnone size-full wp-image-4289" src="https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=770" alt="etcd_arbiterstyle" srcset="https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=770 770w, https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=150 150w, https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png?w=300 300w, https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png 856w" sizes="(max-width: 770px) 100vw, 770px"   /></p>
<p>틀렸다는게 아님. 이것도 좋은 방안이다 단지 다른 옵션이 있을 뿐! 때로는 심플한게 정신 건강에 좋다고 생각한다.  etcd는 restful api로 쉽게 key/value에 접근할수 있고 더불어 보안관련 기능도 제공하고 있어서 etcd 하나만으로도 쉽게 restful key/value 저장소로 사용할수 있다.</p>
<blockquote><p>계속 생기는 이상한 의문..</p></blockquote>
<p>그런데 etcd를 보면서 계속 의문점이 생겼다. consequence를 보장하는 raft 알고리즘이라는 딱 버텨있고, 거기다가 master-slave에 준하는 leader-follower구조를 가질수 있게 cluster를 지원하고 있어서, 뭔가 다르게 구현하는 방법이 있다고 생각이 들었다.</p>
<p>mongodb에서 ha를 제공하는 방법중에서 별도의 서버 arbiter 없이 개별 노드들끼리 heartbeat 메세지를 보내며 처리하는 것과 유사한 형태로 처리하는 방법이 없을까? 고민끝에 여러 생각을 다하게 되었다.</p>
<p>mongodb에서 최신 oplog 를 가진 slave를 master로 올리거나나 riak/ cassandra에서 하는  versioning을 통해 최신의 데이터를 판단하는 방법이 있다.</p>
<p>그런데 고민을 해보니 정석이라고 할수 있는  etcd cluster를 구성하고  제공하는 raft의 기능을 그대로 이용해서, 빈번하게 leader쪽에 데이터를 보내고 follower들이 수신하여 versioning을 통해 충돌시  leader 후보군을 선정하는 방식을 생각할수 있다.  (위 mongodb 2번째 방법과 유사)</p>
<p><a href="http://thesecretlivesofdata.com/raft/">etcd 의 raft  알고리즘을 그림으로 설명한 것이 있는데, 가장 직관적인 자료</a>이다. 보면 볼수록 mongodb의 oplog가 생각난다..  etcd   cluster를 setup한 이후 db의 log 정보를 leader에 전달한다면 비슷하게 구현이 가능하다. 아마 이 방법이 정식일 것으로 판단이 된다. <a href="https://coreos.com/etcd/docs/0.4.7/etcd-api/">leader / follower의 정보는 api를 통해 얻어오는게 가능</a>하다.</p>
<p>하지만 빈번하게 consensus를 맞추기 위해 서로 끊임없이 메세지를 보낸다는 것이 그리고 셋팅부터 머리가 지근 지근 하다.</p>
<blockquote><p>etcd의 TTL parameter와  prevExist를 이용해  leader(master)를 선정하는 방법.</p></blockquote>
<p>무언가 구현하기 쉽고 더 간단한 방법, 간단한 방법.. 코딩이 귀찮아서..</p>
<p>게속 파고 파다 보니 좋은 자료(<a href="https://www.compose.io/articles/high-availability-for-postgresql-batteries-not-included/" target="_blank">High Availability for PostgreSQL, Batteries Not Included</a>)를 찾았다. etcd의  prevExist=false와 TTL을 활용해 leader key를 서로 set하도록  경쟁(race)을 통해  failover를 유지하는 방법이다. 간단하면서도 쓸만한 방법이라고 판단이 든다. <a href="https://github.com/compose/governor/blob/master/postgres-ha.pdf"> 이 방법에 대한 diagram은</a> 여기에 있다. <a href="https://github.com/compose/governor">python으로 돌아가는 sample code </a>도 있으니 참고하시길 바란다.</p>
<p><img data-attachment-id="4255" data-permalink="https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/etcd-ha-for-postgresql/" data-orig-file="https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png?w=770" data-orig-size="604,1136" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="etcd ha for postgresql" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png?w=770?w=160" data-large-file="https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png?w=770?w=544" class="alignnone size-full wp-image-4255" src="https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png?w=770" alt="etcd ha for postgresql" srcset="https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png 604w, https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png?w=80 80w, https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png?w=160 160w" sizes="(max-width: 604px) 100vw, 604px"   /></p>
<p>좋은 아이디어와 코드, 다이어그램을 공유해 주신  <a href="https://github.com/Winslett">christopher  winslett</a>님에게 감사를 표하며 그가 공유한 다이어그램을 올린다.</p>
<p>여유가 되시면 mongodb의 oplog와 같이 구현하는 방법도 재미날듯 하다!.</p>
<p>정말? @#$@$!@$!@</p>
<blockquote><p>참고 링크</p></blockquote>
<ul>
<li><a href="https://github.com/compose/governor" rel="nofollow">https://github.com/compose/governor</a></li>
<li><a href="https://www.compose.io/articles/high-availability-for-postgresql-batteries-not-included/" rel="nofollow">https://www.compose.io/articles/high-availability-for-postgresql-batteries-not-included/</a></li>
<li><a href="https://github.com/coreos/etcd/blob/master/Documentation/clustering.md#static" rel="nofollow">https://github.com/coreos/etcd/blob/master/Documentation/clustering.md#static</a></li>
<li><a href="https://coreos.com/etcd/docs/0.4.7/etcd-api/" rel="nofollow">https://coreos.com/etcd/docs/0.4.7/etcd-api/</a></li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2015/12/11/etcd%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-high-availability-%ed%99%95%eb%b3%b4-%eb%b0%a9%ec%95%88/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-secondary-and-arbiter.png" medium="image">
			<media:title type="html">replica-set-primary-with-secondary-and-arbiter</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/replica-set-primary-with-two-secondaries.png" medium="image">
			<media:title type="html">replica-set-primary-with-two-secondaries</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/etcd_arbiterstyle.png" medium="image">
			<media:title type="html">etcd_arbiterstyle</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/12/etcd-ha-for-postgresql.png" medium="image">
			<media:title type="html">etcd ha for postgresql</media:title>
		</media:content>
	</item>
		<item>
		<title>Android Studio 새로운 메모리 분석 도구를 품다!  (Hello!! Allocation Tracker)</title>
		<link>https://arload.wordpress.com/2015/08/11/android-studio-hello-allocation-tracker/</link>
				<comments>https://arload.wordpress.com/2015/08/11/android-studio-hello-allocation-tracker/#respond</comments>
				<pubDate>Tue, 11 Aug 2015 04:20:16 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4175</guid>
				<description><![CDATA[안드로이드 개발시 Eclipse에서 Android Studio로 넘어가는 하나의 허들이 Memory 분석 툴이었는데. Android Studio 가 이에 대한 해답을 가지고 왔습니다. 안드로이드 스튜디오가 Memory 관련 프로파일러들을 잔뜩 추가/업데이트를 했습니다. 기존에 command 명령어를 좀더 시각적으로 보여주고,  이클립스 플러그인 MAT에서 볼수 있는 내용을 좀더 보기 편하게 만들었다고 생각이 듭니다. Memory Monitor  디테일한 메모리 분석용이라기 보다는 앱을 실행시키면서 메모리가 갑자기 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>안드로이드 개발시 Eclipse에서 Android Studio로 넘어가는 하나의 허들이 Memory 분석 툴이었는데. Android Studio 가 이에 대한 해답을 가지고 왔습니다.</p>
<p>안드로이드 스튜디오가 <a href="https://developer.android.com/tools/performance/comparison.html">Memory 관련 프로파일러들을 잔뜩 추가/업데이트</a>를 했습니다.</p>
<p>기존에 command 명령어를 좀더 시각적으로 보여주고,  이클립스 플러그인 MAT에서 볼수 있는 내용을 좀더 보기 편하게 만들었다고 생각이 듭니다.</p>
<blockquote><p><span style="color:#993300;">Memory Monitor </span></p></blockquote>
<p><a href="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png"><img data-attachment-id="4176" data-permalink="https://arload.wordpress.com/2015/08/11/android-studio-hello-allocation-tracker/compare_memorymonitor/" data-orig-file="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png?w=504&#038;h=156" data-orig-size="288,89" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Memory Monitor" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png?w=504&#038;h=156?w=288" data-large-file="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png?w=504&#038;h=156?w=288" class="aligncenter  wp-image-4176" src="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png?w=504&#038;h=156" alt="Memory Monitor" width="504" height="156" srcset="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png 288w, https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png?w=150&amp;h=46 150w" sizes="(max-width: 504px) 100vw, 504px" /></a></p>
<p>디테일한 메모리 분석용이라기 보다는 앱을 실행시키면서 메모리가 갑자기 튀어 오른다음. 특정 시간이 지나도록 감소하지 않는 등과 같이 큰 흐름을 판단하기 좋은 도구 입니다.  모든 시나리오를 상세하기 일일이 heap dump를 떠 가며 분석하는 것은 큰 비용이 드는 일입니다.</p>
<p>핵심 시나리오나, Crash Report로 보고된 에러중 Out Of Memory등으로 보고된 에러들을 다시 한번 이 툴로 가볍게 검증해 보시길 바랍니다.  이렇게 말씀 드리는 이유는 이러한 에러가 특정 디바이스나 특정 OS에서만 나는 경우가 있기 때문에 가볍게 상황을 판단하실때 쓰라는 말씀 입니다.</p>
<p><span id="more-4175"></span></p>
<blockquote><p><span style="color:#993300;"> Heap Viewer </span></p></blockquote>
<p><a href="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png"><img data-attachment-id="4177" data-permalink="https://arload.wordpress.com/2015/08/11/android-studio-hello-allocation-tracker/studio-hprof-viewer/" data-orig-file="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png" data-orig-size="781,382" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Heap Viewer(hprof viewer)" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=480&#038;h=235" data-large-file="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=770" class="aligncenter  wp-image-4177" src="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=480&#038;h=235" alt="Heap Viewer(hprof viewer) " width="480" height="235" srcset="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=480&amp;h=235 480w, https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=150&amp;h=73 150w, https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=300&amp;h=147 300w, https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=768&amp;h=376 768w, https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png 781w" sizes="(max-width: 480px) 100vw, 480px" /></a></p>
<p>위 Allocation Tracker로 메모리 누수가 의심되는 부분을 선별하신 다음 Heap Viewer로 해당 스냅샵만 분석해서 보는 것입니다.   아마 MAT가 하나의 heap dump로 추측을 해서 문제점을 선별해 주는데, 아직 그 레벨까지는 아니고 메모리 사용량이 많은 순으로 보여주고 보고 있습니다.</p>
<blockquote><p><strong><span style="color:#993300;">Allocation Tracker</span></strong></p></blockquote>
<p><a href="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png"><img data-attachment-id="4178" data-permalink="https://arload.wordpress.com/2015/08/11/android-studio-hello-allocation-tracker/studio-allocation-tracker/" data-orig-file="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png" data-orig-size="562,498" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="alocation-tracker" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=424&#038;h=376" data-large-file="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=562" class="aligncenter  wp-image-4178" src="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=424&#038;h=376" alt="alocation-tracker" width="424" height="376" srcset="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=424&amp;h=376 424w, https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=150&amp;h=133 150w, https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=300&amp;h=266 300w, https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png 562w" sizes="(max-width: 424px) 100vw, 424px" /></a></p>
<p>이 부분은 MAT에 비해 칭찬하고 싶습니다.</p>
<p>실제 Heap Dump는 하나의 스냅샷으로 찍는 것이 의미가 없구요. 최소 두 개의 스냅샷을 찍어서 Before / After를 비교해야 합니다.  좀더 정확히 말하면 더 많이 찍어야 합니다. 여튼 MAT는 두개의 스냅샷을 분석하더라도 히스토그램 형태로 단순 비교를 해 실제 분석하기 힘듭니다.</p>
<p>Android Studio에 포함된 Allocation Tracker는 MAT에 비해 좀더 시각적으로 보기 편하게 스냅샷을 비교할 수 있습니다.</p>
<blockquote><p><strong><span style="color:#993300;">개념과 실제 사용법</span></strong></p></blockquote>
<p>이러한 툴을 쓰기 위해서는 MAT와 동일하게 Dominator Tree라는 개념을 이해하고 있어야 합니다.  NEXT 수업자료인 메모리 프로파일링 부분에 해당 자료를 업데이트 하였으니 참고하시기 바랍니다.  위 사항은 49페이지부터 추가되어 있습니다.</p>
<div class="jetpack-video-wrapper"><iframe src='https://www.slideshare.net/slideshow/embed_code/51484412' width='650' height='533' allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div>
<p>자료 업데이트는 NEXT의  김기렴 군이 수고해 주었습니다!  감사!!</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2015/08/11/android-studio-hello-allocation-tracker/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/08/compare_memorymonitor.png" medium="image">
			<media:title type="html">Memory Monitor</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/08/studio-hprof-viewer.png?w=300" medium="image">
			<media:title type="html">Heap Viewer(hprof viewer) </media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/08/studio-allocation-tracker.png?w=300" medium="image">
			<media:title type="html">alocation-tracker</media:title>
		</media:content>
	</item>
		<item>
		<title>Android Studio에서 생성한 Heap Dump 와 Eclipse MAT 연동 방법</title>
		<link>https://arload.wordpress.com/2015/01/17/android-studio-hprof-covert-to-eclipse-mat-format/</link>
				<comments>https://arload.wordpress.com/2015/01/17/android-studio-hprof-covert-to-eclipse-mat-format/#respond</comments>
				<pubDate>Sat, 17 Jan 2015 13:44:05 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[heap dump]]></category>
		<category><![CDATA[hprof]]></category>
		<category><![CDATA[hrpof-conv]]></category>
		<category><![CDATA[mat]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4168</guid>
				<description><![CDATA[Android Studio 1.0 버전이 정식 릴리즈 되면서, 많은 편의성들이 강화 되었습니다. 이미 안드로이드 개발에 40%가 Eclipse , 30% 정도가 Android Studio로 개발을 하고 있고, Google 공식적으로 Eclipse ADT Plugin을 개발하지 않을 거라는 이야기에 이미 대세는 Android Studio로 넘어갔다고 볼수 있습니다. 제가 오랫동안 Android Studio로 넘어가지 못한 이유중에 하나인 MAT (Memory Analyzer) 가 크게 작동을 하였는데요. [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>Android Studio 1.0 버전이 정식 릴리즈 되면서, 많은 편의성들이 강화 되었습니다.</p>
<p>이미 안드로이드 개발에 40%가 Eclipse , 30% 정도가 Android Studio로 개발을 하고 있고, Google 공식적으로 Eclipse ADT Plugin을 개발하지 않을 거라는 이야기에 이미 대세는 Android Studio로 넘어갔다고 볼수 있습니다.</p>
<p>제가 오랫동안 Android Studio로 넘어가지 못한 이유중에 하나인<a href="https://eclipse.org/mat/"> MAT (Memory Analyzer) </a>가 크게 작동을 하였는데요.  1.0을 설치하고 모든 개발 환경을 Android Studio로 이관중  Heam Dump 분석에 문제가 생겼습니다.</p>
<p><a href="https://arload.files.wordpress.com/2015/01/mat-overview.png"><img data-attachment-id="4169" data-permalink="https://arload.wordpress.com/2015/01/17/android-studio-hprof-covert-to-eclipse-mat-format/mat-overview/" data-orig-file="https://arload.files.wordpress.com/2015/01/mat-overview.png" data-orig-size="785,852" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="mat-overview" data-image-description="" data-medium-file="https://arload.files.wordpress.com/2015/01/mat-overview.png?w=276&#038;h=300" data-large-file="https://arload.files.wordpress.com/2015/01/mat-overview.png?w=770" class="aligncenter wp-image-4169 size-medium" src="https://arload.files.wordpress.com/2015/01/mat-overview.png?w=276&#038;h=300" alt="MAT 화면" width="276" height="300" srcset="https://arload.files.wordpress.com/2015/01/mat-overview.png?w=276&amp;h=300 276w, https://arload.files.wordpress.com/2015/01/mat-overview.png?w=552&amp;h=600 552w, https://arload.files.wordpress.com/2015/01/mat-overview.png?w=138&amp;h=150 138w" sizes="(max-width: 276px) 100vw, 276px" /></a></p>
<p>안드로이드 개발시 가장 많이 만나는 두가지 크래시인 NPE 와 OOM중 Out Of Memory를 잡기 위해 사용하는 유일한 도구라 할수 있는  MAT가 Android Studio에서 만든 hprof (heam dump) 파일을 분석하지 못하는 문제가 발생한 것입니다.  (Eclipse 같은 경우는  dump만 뜨면 자동으로 MAT를 뛰우며 분석 화면을 뛰워줍니다.)</p>
<p><span id="more-4168"></span>MAT에서 Hprof (dump) 파일을 열때 만나는 에러는 다음과 같습니다.</p>
<pre class="default prettyprint prettyprinted"><code><span class="typ">Error</span><span class="pln"> opening heap </span><span class="kwd">dump</span> <span class="str">'com.game.hprof'</span><span class="pun">.</span> <span class="typ">Check</span><span class="pln"> the error log </span><span class="kwd">for</span><span class="pln"> further details</span><span class="pun">.</span>
<span class="typ">Error</span><span class="pln"> opening heap </span><span class="kwd">dump</span> <span class="str">'com.game.hprof.hprof'</span><span class="pun">.</span> <span class="typ">Check</span><span class="pln"> the error log </span><span class="kwd">for</span><span class="pln"> further details</span><span class="pun">.</span>
<span class="typ">Unknown</span><span class="pln"> HPROF </span><span class="typ">Version</span> <span class="pun">(</span><span class="pln">JAVA PROFILE </span><span class="lit">1.0</span><span class="pun">.</span><span class="lit">3</span><span class="pun">)</span> <span class="pun">(</span><span class="pln">java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">IOException</span><span class="pun">)</span>
<span class="typ">Unknown</span><span class="pln"> HPROF </span><span class="typ">Version</span> <span class="pun">(</span><span class="pln">JAVA PROFILE </span><span class="lit">1.0</span><span class="pun">.</span><span class="lit">3</span><span class="pun">)</span></code></pre>
<p>순간 깜짝 놀랐으나, <a href="http://stackoverflow.com/questions/9679995/memory-analyzer-mat-plugin-not-opening-heap-prof-in-mat-eclipse-4-1-2-automati">구글링을 통해 쉽게 답</a>을 얻을수 있었습니다.</p>
<p>원인은  Android Studio에서 뜨는 덤프는 Android SDK에서 생성하는 Dump 포멧으로 아직 생성해 주지 않는 것으로 판단됩니다.</p>
<p><a href="http://developer.android.com/tools/help/hprof-conv.html%20">hrprof-conv </a>라는 명령어를 통해서 쉽게 이 문제를 해결할수 있습니다.</p>
<pre class="prettyprint"><span class="pln">hprof</span><span class="pun">-</span><span class="pln">conv </span><span class="str">&lt;infile&gt;</span> <span class="str">&lt;outfile&gt;</span></pre>
<p>위와 같은 명령어를 통해 변환된 파일을 만드시고, 이 파일을 Eclipse MAT로 Open 하시면 정상적인 화면을 얻으실수 있습니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2015/01/17/android-studio-hprof-covert-to-eclipse-mat-format/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>

		<media:content url="https://arload.files.wordpress.com/2015/01/mat-overview.png?w=276" medium="image">
			<media:title type="html">MAT 화면</media:title>
		</media:content>
	</item>
		<item>
		<title>동료에 대한 믿음을 가지되,  편향된 정보는 조심하자!</title>
		<link>https://arload.wordpress.com/2015/01/13/%eb%8f%99%eb%a3%8c%ec%97%90-%eb%8c%80%ed%95%9c-%eb%af%bf%ec%9d%8c%ec%9d%84-%ea%b0%80%ec%a7%80%eb%90%98-%ed%8e%b8%ed%96%a5%eb%90%9c-%ec%a0%95%eb%b3%b4%eb%8a%94-%ec%a1%b0%ec%8b%ac%ed%95%98%ec%9e%90/</link>
				<comments>https://arload.wordpress.com/2015/01/13/%eb%8f%99%eb%a3%8c%ec%97%90-%eb%8c%80%ed%95%9c-%eb%af%bf%ec%9d%8c%ec%9d%84-%ea%b0%80%ec%a7%80%eb%90%98-%ed%8e%b8%ed%96%a5%eb%90%9c-%ec%a0%95%eb%b3%b4%eb%8a%94-%ec%a1%b0%ec%8b%ac%ed%95%98%ec%9e%90/#comments</comments>
				<pubDate>Tue, 13 Jan 2015 02:03:32 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
		
		<guid isPermaLink="false">http://arload.wordpress.com/?p=4165</guid>
				<description><![CDATA[좋은 사람, 등을 맡길수 있는 동료랑 같이 일할수 있다면 얼마나 행복할까.. 많은 생각이 드는 시기입니다. 이들과 동고동락하여 성공을 맞보고, 믿음이 생기면,  얼마나 행복할까 잠시 꿈을 꾸기도 했습니다.. 또한 요즘 제가 겪는 여러가지 일들이,  내부의 동료를 신뢰하다 보니, 그들의 일방적인 의견만 들어 프레임효과에 갇혀 외부에 올바른 시그널을 듣지 못한다는 것입니다.   이 사이에 적절한 중용을 찾는것 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>좋은 사람, 등을 맡길수 있는 동료랑 같이 일할수 있다면 얼마나 행복할까.. 많은 생각이 드는 시기입니다.</p>
<p>이들과 동고동락하여 성공을 맞보고, 믿음이 생기면,  얼마나 행복할까 잠시 꿈을 꾸기도 했습니다..</p>
<p>또한 요즘 제가 겪는 여러가지 일들이,  내부의 동료를 신뢰하다 보니, 그들의 일방적인 의견만 들어 프레임효과에 갇혀 외부에 올바른 시그널을 듣지 못한다는 것입니다.   이 사이에 적절한 중용을 찾는것 자체가 조직을 운용하는데 얼마나 중요할까.. 다시 보게 됩니다.</p>
<p>거대한 회사일수록  이사회나 상층부에 정보로 판단하게 되며,  더 나은 개선을 찾기 위해 노력하는 것도 있지만, 그들 간에도 서로의 밥그릇을 지키는 싸움을 하고 있음을 아시기 바랍니다.  내가 믿는 동료라고 하더라도, 그가 주는 데이터가 과연 객관적인 데이터인지 다시 생각해 보아야 합니다.    동료로 부터 받은 의견이 선입견으로 작용하여, 올바른 판단을 하지 못하는 상황을 계속 보아오고 있습니다.</p>
<p>이러한 시선에 피해자이기도 하며, 이런 경험을 직접 당하고 나니  난 어떻게 주위의 사람을 믿고 올바르게 자리를 잡아야 하는지 다시 생각해 보게 됩니다.    너무 크게 다가온 상처라. 제가 사람을 바라보게 되는 새로운 시선이 열렸습니다.</p>
<p>뒤통수 치는 사람도 있지만 좋은 사람도 더 많다. 사람은 믿자가 지금 까지 제가 사람을 대해온 자세라면,   사람들의 말을 최대한 다양한 측면에서  선입견없이 듣고 판단하자가 추가 되었습니다.</p>
<p>좋은게 다 좋은게 아니며, 나쁜게 다 나쁜게 아니다. 쓴 소리도 들을수 있어야 하며, 진심으로 최대한 공손하게 쓴 소리도 할수 있어야.. 된다는 것을 깨닫게 됩니다.  동료들의 쓴소리를 감사하게 생각하고 들어야 한다는 것을 깨달았습니다.     어려움 속에서도 정말 큰 교훈을 얻어갑니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2015/01/13/%eb%8f%99%eb%a3%8c%ec%97%90-%eb%8c%80%ed%95%9c-%eb%af%bf%ec%9d%8c%ec%9d%84-%ea%b0%80%ec%a7%80%eb%90%98-%ed%8e%b8%ed%96%a5%eb%90%9c-%ec%a0%95%eb%b3%b4%eb%8a%94-%ec%a1%b0%ec%8b%ac%ed%95%98%ec%9e%90/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>
	</item>
		<item>
		<title>Android Profiler 그리고 BITMAP 핸들링</title>
		<link>https://arload.wordpress.com/2014/08/12/android-profiler-and-bitmap/</link>
				<comments>https://arload.wordpress.com/2014/08/12/android-profiler-and-bitmap/#respond</comments>
				<pubDate>Tue, 12 Aug 2014 03:15:51 +0000</pubDate>
		<dc:creator><![CDATA[arload]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[News]]></category>
		<category><![CDATA[bitmap]]></category>
		<category><![CDATA[cpu]]></category>
		<category><![CDATA[garbage collection]]></category>
		<category><![CDATA[heap dump]]></category>
		<category><![CDATA[mat]]></category>
		<category><![CDATA[memory]]></category>
		<category><![CDATA[profiler]]></category>

		<guid isPermaLink="false">http://arload.wordpress.com/?p=4150</guid>
				<description><![CDATA[안드로이드에서 종종 만나는 문제가   NullPointer Exception이며 또 하나는 OOM (Out Of Memory) 입니다. Crash Report 서비스인 UrQA ( http://www.urqa.io) 를 운영하면서 많은 문제들을 볼수 있습니다. 하지만 위 두 문제는 모든 앱이 다 겪고 있는 문제죠. (현재 URQA는 300개가 넘는 업체가 사용하고 있으며, 안드로이드 뿐만 아니라 곧 iOS, Unity, JS를 지원하게 됩니다. 내부 테스트 중입니다) &#160; 이러한 [&#8230;]]]></description>
								<content:encoded><![CDATA[<p>안드로이드에서 종종 만나는 문제가   NullPointer Exception이며 또 하나는 OOM (Out Of Memory) 입니다. Crash Report 서비스인 UrQA ( <a href="http://www.urqa.io">http://www.urqa.io</a>) 를 운영하면서 많은 문제들을 볼수 있습니다. 하지만 위 두 문제는 모든 앱이 다 겪고 있는 문제죠. (현재 URQA는 300개가 넘는 업체가 사용하고 있으며, 안드로이드 뿐만 아니라 곧 iOS, Unity, JS를 지원하게 됩니다. 내부 테스트 중입니다)</p>
<p>&nbsp;</p>
<p>이러한 문제를 어떻게 해결할까? 에 대해 해당 디바이스를 직접 구하지 않는 한 답은 없지만, 개발자 선에서 해결할수 있는 방법이 Profiler가 아닐까 생각이 듭니다. 하지만 안드로이드 Profiler는 처음 접하기에 러닝 커브가 좀 있고,  이것들을 어떻게 활용하는지 많은 분들이 잘 모릅니다.</p>
<p>또한 안드로이드 OOM (Out of Memory)의 주 원인인 BITMAP. 이것을 어떻게 다루는 것이 좋은지 안드로이드 개발자 사이트에 있으나, 그 밑단에 많은 개념들을 숙지하고 있어야 합니다.</p>
<ul>
<li>JVM과 다른 Dalvik 의 메모리 관리 기법</li>
<li>다양한 Reference를 사용하여, Garbage Collection 시 불 필요한 리소스를  빠르게 수거하는 방법</li>
<li>그리고 Heap Dump를 이해하기 위해 MAT라는 툴을 사용해야 하는데 보는 방법</li>
</ul>
<p>이 외에도 많은 숨겨진 지식들이 있어야 Profiler를 제대로 활용할수 잇고,  그 문제에 대한 해결책을 찾아갈수 있습니다.</p>
<p><span id="more-4150"></span></p>
<p>곧 ART가 나오고 ROSalloc 이 나오면서, 메모리 체계, Garbage Collection 의 여러 개선 방향이 나오지만,  우리는 항상 Legacy와 싸워야 합니다.    이 자료가 많은 안드로이드 개발자에게 도움이 되길 바라며, 공유를 합니다.</p>
<div class="jetpack-video-wrapper"><iframe src='https://www.slideshare.net/slideshow/embed_code/37894892' width='650' height='533' allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div>
<p>이 자료는 만드는 데 2개월 가량  저랑 토론하고 몇번을 변경하고 고생한 NHN NEXT의 이영남 학생에게 깊은 감사를 표합니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://arload.wordpress.com/2014/08/12/android-profiler-and-bitmap/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://2.gravatar.com/avatar/28f0e9e86d11fc64f2ced9de024483fa?s=96&#38;d=wavatar&#38;r=G" medium="image">
			<media:title type="html">arload</media:title>
		</media:content>
	</item>
	</channel>
</rss>
