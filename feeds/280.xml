<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet href="http://rss.egloos.com/style/blog.xsl" type="text/xsl" media="screen"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
	<title>기획자 본인만큼 잡다한 블로그</title>
	<link>http://greentec.egloos.com</link>
	<description>그냥 살면서 느낀 점, 공부하는 이야기로 채울 예정입니다.</description>
	<language>ko</language>
	<pubDate>Wed, 12 Dec 2018 12:33:36 GMT</pubDate>
	<generator>Egloos</generator>
	<image>
		<title>기획자 본인만큼 잡다한 블로그</title>
		<url>http://pds27.egloos.com/logo/201308/01/70/f0367670.jpg</url>
		<link>http://greentec.egloos.com</link>
		<width>80</width>
		<height>80</height>
		<description>그냥 살면서 느낀 점, 공부하는 이야기로 채울 예정입니다.</description>
	</image>
  	<item>
		<title><![CDATA[ 트위터 언팔로워 트래커 ]]> </title>
		<link>http://greentec.egloos.com/4442651</link>
		<guid>http://greentec.egloos.com/4442651</guid>
		<description>
			<![CDATA[ 
  <br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds21.egloos.com/pds/201811/30/70/f0367670_5c00cf31eb60b.jpg" width="457" height="239" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201811/30/70/f0367670_5c00cf31eb60b.jpg', 457, 239);" /></div><br />
<br />
트위터에는 사용자에게 꼭 필요하지만 빠져 있는 기능이 있다. 바로 나를 언팔로우한 사람이 누군지 알려주는 기능이다. 언팔로우란 팔로우를 하다가 팔로우를 끊는 것을 말한다. 페이스북으로 치면 unfriend, 싸이월드로 치면 일촌끊기가 되겠다. 일단 관계가 있어야 관계를 끊을 수 있다. 먼 옛날 싸이월드와 달리 인스타그램이나 트위터는 팔로워 수가 이 계정의 유명세에 대한 하나의 지표가 된다. 유명세는 권력, 힘이 된다. <br />
<br />
트위터를 처음 시작한 초반에는 팔로우를 해주는 사람들이 그냥 고마웠다. 그래서 내 관심주제랑 어느 정도 겹치면 자연스럽게 맞팔로우를 하기도 했다. 그런데 그러고나서 매우 짧은 시간 후에 나에 대한 팔로우를 끊는 것을 몇 번 목격했다. 이런 것을 반복하면 이 사람의 팔로잉 수는 줄고 팔로워 수만 늘어서 자연스럽게 힘을 획득하게 된다. 양심이라는 아주 싼 가격에 말이다. <br />
(관련글 링크 : <a href="http://blog.naver.com/PostView.nhn?blogId=matalcross&amp;logNo=220801698519" target="_blank">인스타그램 맞팔 후 언팔</a>)<br />
<br />
뭐, 물론 언팔을 하는 쪽에서도 변명할 수는 있겠지만 그런 것보다 중요한 것은 트위터의 팔로워 수가 100 명을 넘어가기 시작하면 눈으로 보고 누가 언팔로우를 했는지 알아내기는 쉽지 않다는 사실이다. 인터넷에 검색해보니 <a href="http://twtmanager.com/uf" target="_blank">언팔매니저</a> 같은 것들이 있는데, 여기까지 들어온 분들이라면 직접 코드를 사용하는 방법에 관심이 있을 것 같다. tweepy 를 사용하면 매일 내 팔로워를 긁어온 다음에 어제의 날짜와 비교해서 누가 팔로우를 끊었는지 알아낼 수 있다. 언팔매니저는 맞팔을 안해준 사람들을 찾는 것이 목적이라면 내가 만드는 코드는 언팔로워만 찾는 것이 목적이다.<br />
<br />
그럼 간단한 코드를 보자. 짧은 코드이니만큼 전체를 리뷰하며 한 줄 한 줄 설명하도록 하겠다. <br />
이 글은 python 3.6.2, tweepy 3.6.0 을 기준으로 한다. <br />
<br />
<ol><li> 트위터 API 접속 </li><br />
트위터는 API 를 제공하기 때문에 접속해서 나의 팔로워 수, 팔로워 정보, 트윗 등을 얻어올 수 있고 직접 트윗을 올릴 수도 있다. 나도 이것으로 2개의 트위터 봇을 라즈베리파이에서 돌리고 있다. 라즈베리파이는 설정 과정이 너무 고통스러웠기 때문에 빨리 백업을 해놔서 보드가 죽어도 다른 곳에서 쓸 수 있게 해야 하는데.. 아직 귀찮아서 못하고 있다. 어쨌든 이 서두 부분은 Twitter API 에 접속하기 위해서 꼭 필요하다. <br />
<br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #007020; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">tweepy</span><br />
<span style="color: #007020; font-weight: bold">from</span> <span style="color: #0e84b5; font-weight: bold">credentials</span> <span style="color: #007020; font-weight: bold">import</span> <span style="color: #666666">*</span><br />
<br />
<span style="color: #60a0b0; font-style: italic"># tweeter initialize!!</span><br />
auth <span style="color: #666666">=</span> tweepy<span style="color: #666666">.</span>OAuthHandler(consumer_key, consumer_secret)<br />
auth<span style="color: #666666">.</span>set_access_token(access_token, access_token_secret)<br />
api <span style="color: #666666">=</span> tweepy<span style="color: #666666">.</span>API(auth, wait_on_rate_limit<span style="color: #666666">=</span><span style="color: #007020">True</span>, wait_on_rate_limit_notify<span style="color: #666666">=</span><span style="color: #007020">True</span>, compression<span style="color: #666666">=</span><span style="color: #007020">True</span>)<br />
</pre></div><br />
</span><br />
<br />
일단 <a href="https://github.com/tweepy/tweepy" target="_blank">tweepy</a> 는 트위터 API 를 간단한 명령어로 편하게 쓸 수 있게 해주는 python 라이브러리다. 윈도우 환경에서는 보통 Anaconda 를 쓴다면 pip install tweepy 같은 간단한 명령어를 cmd 창에서 입력해서 설치할 수 있다.<br />
<br />
credentials 는 이 코드에서 다루는 파일과 같은 위치에 저장된 credentials.py 파일을 말한다. <a href="https://developer.twitter.com" target="_blank">developer.twitter.com</a> 에 접속해서 App 을 사용하도록 설정하면 다음과 같은 Keys and tokens 를 받을 수 있다. 이 값들을 credentials.py 에 저장해놓고, 불러와서 twitter API 접속에 사용하는 것이다. <br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds25.egloos.com/pds/201811/30/70/f0367670_5c00cf2e217cb.png" width="500" height="461.367013373" onclick="Control.Modal.openDialog(this, event, 'http://pds25.egloos.com/pds/201811/30/70/f0367670_5c00cf2e217cb.png', 673, 621);" /></div><br />
<br />
credentials.py 에는 다음처럼 값을 저장해준다.<br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%">consumer_key <span style="color: #666666">=</span> <span style="color: #4070a0">'Zzzzzzzzzzzzzzzzzzzzzzzz'</span><br />
consumer_secret <span style="color: #666666">=</span> <span style="color: #4070a0">'Mmmmmmmmmmmmmmmmmmmmmmmmmm'</span><br />
access_token <span style="color: #666666">=</span> <span style="color: #4070a0">'11111111111111111-222222222222222'</span><br />
access_token_secret <span style="color: #666666">=</span> <span style="color: #4070a0">'eeeeeeeeeeeeeeeeeeeeee'</span><br />
</pre></div><br />
</span><br />
<br />
<br />
<li> 어제, 오늘의 팔로워 정보 얻어오기 </li><br />
다음 부분은 어제의 팔로워 정보를 로드하는 부분이다. 그런데 이 글을 따라오는 분들이라면 어제의 팔로워 저장 파일은 당연히 없을 것이기 때문에,지금은 써놓기만 하고 주석처리 후 뒤에서 팔로워 정보를 한번 저장한 후에 로드하면 된다. <br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #60a0b0; font-style: italic"># load file</span><br />
original_ids <span style="color: #666666">=</span> []<br />
<span style="color: #007020; font-weight: bold">with</span> <span style="color: #007020">open</span>(pi_path <span style="color: #666666">+</span> <span style="color: #4070a0">'follower.txt'</span>, <span style="color: #4070a0">'r'</span>) <span style="color: #007020; font-weight: bold">as</span> f:<br />
    <span style="color: #007020; font-weight: bold">for</span> line <span style="color: #007020; font-weight: bold">in</span> f<span style="color: #666666">.</span>readlines():<br />
        <span style="color: #007020; font-weight: bold">if</span> line <span style="color: #666666">!=</span> <span style="color: #4070a0">''</span>:<br />
            original_ids<span style="color: #666666">.</span>append(line<span style="color: #666666">.</span>strip())<br />
</pre></div><br />
</span><br />
<br />
<br />
오늘의 팔로워 정보는 직접 tweepy 에서 얻어온다. 여기서 나오는 Cursor 가 궁금한 분들은 <a href="http://docs.tweepy.org/en/v3.5.0/cursor_tutorial.html?highlight=cursor" target="_blank">이곳</a>에서 간단한 글을 읽어보셔도 좋겠다. 요약하면 Cursor 는 기존의 page 방법과 다르게 boilerplate code (어떤 업무를 위해 반복적으로 작성해야 하는 코드) 를 없애고 간단하게 같은 작업을 할 수 있는 표현법이다. <br />
<br />
이 코드는 <a href="https://github.com/audreyr/tweepy-utils/blob/master/scripts/unfollow-nonfollowers.py" target="_blank">이 gist</a> 에서 가져왔다.<br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #007020; font-weight: bold">print</span>(<span style="color: #4070a0">"Loading followers.."</span>)<br />
followers <span style="color: #666666">=</span> []<br />
<span style="color: #007020; font-weight: bold">for</span> follower <span style="color: #007020; font-weight: bold">in</span> tweepy<span style="color: #666666">.</span>Cursor(api<span style="color: #666666">.</span>followers)<span style="color: #666666">.</span>items():<br />
    followers<span style="color: #666666">.</span>append(follower)<br />
<br />
<span style="color: #007020; font-weight: bold">print</span>(<span style="color: #4070a0">"Found </span><span style="color: #70a0d0; font-style: italic">%s</span><span style="color: #4070a0"> followers, finding friends.."</span> <span style="color: #666666">%</span> <span style="color: #007020">len</span>(followers))<br />
friends <span style="color: #666666">=</span> []<br />
<span style="color: #007020; font-weight: bold">for</span> friend <span style="color: #007020; font-weight: bold">in</span> tweepy<span style="color: #666666">.</span>Cursor(api<span style="color: #666666">.</span>friends)<span style="color: #666666">.</span>items():<br />
    friends<span style="color: #666666">.</span>append(friend)<br />
    <br />
<span style="color: #007020; font-weight: bold">print</span>(<span style="color: #4070a0">'Found </span><span style="color: #70a0d0; font-style: italic">%s</span><span style="color: #4070a0"> friends..'</span> <span style="color: #666666">%</span> <span style="color: #007020">len</span>(friends))<br />
<br />
<br />
<span style="color: #60a0b0; font-style: italic"># creating dictionaries based on id's is handy too</span><br />
friend_dict <span style="color: #666666">=</span> {}<br />
<span style="color: #007020; font-weight: bold">for</span> friend <span style="color: #007020; font-weight: bold">in</span> friends:<br />
    friend_dict[<span style="color: #007020">str</span>(friend<span style="color: #666666">.</span>id)] <span style="color: #666666">=</span> friend<br />
<br />
follower_dict <span style="color: #666666">=</span> {}<br />
<span style="color: #007020; font-weight: bold">for</span> follower <span style="color: #007020; font-weight: bold">in</span> followers:<br />
    follower_dict[<span style="color: #007020">str</span>(follower<span style="color: #666666">.</span>id)] <span style="color: #666666">=</span> follower<br />
</pre></div><br />
</span><br />
<br />
<br />
<li> 어제, 오늘의 정보 비교해서 언팔로워 알아내기 </li><br />
이 부분도 2에서 어제의 팔로워 정보가 없어서 original_ids 가 [] 상태인 분들은 모든 사람이 unfollowers 로 뜰 것이다. 그렇지 않다면 정확한 unfollowers 와 unfollowers_and_still_friends 가 뜰 것이다. unfollowers 는 어제와 비교해서 오늘 follower 가 아닌 사람(언팔로우한 사람), unfollowers_and_still_friends 는 그 중에 아직 내가 팔로우하고 있는 사람이다. 내가 관심있는 건 뒷부분이다. 내가 팔로우 중이지만 나를 언팔로우한 경우. <br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%">unfollowers <span style="color: #666666">=</span> []<br />
unfollowers_and_still_friend <span style="color: #666666">=</span> []<br />
<span style="color: #007020; font-weight: bold">for</span> id_ <span style="color: #007020; font-weight: bold">in</span> original_ids:<br />
    <span style="color: #007020; font-weight: bold">if</span> id_ <span style="color: #007020; font-weight: bold">not</span> <span style="color: #007020; font-weight: bold">in</span> follower_dict:<br />
        unfollowers<span style="color: #666666">.</span>append(id_)<br />
        <span style="color: #007020; font-weight: bold">if</span> id_ <span style="color: #007020; font-weight: bold">in</span> friend_dict:<br />
            unfollowers_and_still_friend<span style="color: #666666">.</span>append(id_)<br />
<br />
<span style="color: #007020; font-weight: bold">print</span>(<span style="color: #4070a0">'unfollwers:'</span>, <span style="color: #007020">len</span>(unfollowers))<br />
<span style="color: #007020; font-weight: bold">print</span>(<span style="color: #4070a0">'unfollowers_and_still_friend:'</span>, <span style="color: #007020">len</span>(unfollowers_and_still_friend))<br />
</pre></div><br />
</span><br />
<br />
<br />
<li> 변경된 팔로워 저장 </li><br />
오늘의 팔로워 정보만 저장한다. 좀 더 자세히 한다면 이 사람이 언제 팔로워가 됐는지 하는 것들도 저장 가능하겠지만, 나는 라즈베리파이에서 이 스크립트를 돌릴 것이기 때문에 가능한 최소한의 저장 용량만 쓰고 싶었다. 오늘의 팔로워 목록만 있으면 내 목적은 달성된다.<br />
<br />
이제 2에서 어제의 팔로워 정보가 없어서 로드를 못하셨던 분들은 로드를 할 수 있다. 다만 팔로워가 많을 경우 tweepy 의 기능을 여러 번 사용하면 limit 가 걸릴 수 있다는 점에 주의하자. 이럴 때는 일정 시간 동안 기다렸다가 다시 시도하면 된다.<br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #60a0b0; font-style: italic"># save file</span><br />
<span style="color: #007020; font-weight: bold">with</span> <span style="color: #007020">open</span>(pi_path <span style="color: #666666">+</span> <span style="color: #4070a0">'follower.txt'</span>, <span style="color: #4070a0">'w'</span>) <span style="color: #007020; font-weight: bold">as</span> f:<br />
    <span style="color: #007020; font-weight: bold">for</span> id_ <span style="color: #007020; font-weight: bold">in</span> follower_dict:<br />
        f<span style="color: #666666">.</span>write(<span style="color: #007020">str</span>(id_) <span style="color: #666666">+</span> <span style="color: #4070a0">'</span><span style="color: #4070a0; font-weight: bold">\n</span><span style="color: #4070a0">'</span>)<br />
</pre></div><br />
</span><br />
<br />
<br />
<li> 메일로 보내서 자동화 </li><br />
이제 스크립트는 완성되었다. 이 스크립트를 매일 돌려도 된다. 하지만 좀 더 자동화하면 내 삶이 편해질 것 같다. 라즈베리파이에 넣어서 일정 시간마다 스크립트가 실행되도록 하고, 해당 내용을 메일로 받아보고 싶었다.<br />
<br />
나는 gmail 을 사용하는데 yagmail  이라는 라이브러리를 설치하면 좀 편하게 메일을 보낼 수 있다. 사용 방법은 아까처럼 cmd 창에서 pip install yagmail 을 입력하면 설치된다. 원래는 smtplib 라이브러리를 쓰려고 했는데 gmail 접속이 안돼서 이걸로 바꿨다. 그런데 스크립트로 메일이 안갈 때의 해결책이 지메일에서 '보안성이 낮은 앱의 접근을 허용' 옵션을 켜는 것이었기 때문에, 사실 smtplib 을 써도 되는 게 아니었나 생각한다.<br />
<br />
<span style="font-size:130%;"><div style="background: #f0f0f0; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #007020; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">smtplib</span><br />
<span style="color: #007020; font-weight: bold">from</span> <span style="color: #0e84b5; font-weight: bold">email.mime.text</span> <span style="color: #007020; font-weight: bold">import</span> MIMEText<br />
<span style="color: #007020; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">datetime</span><br />
<span style="color: #007020; font-weight: bold">import</span> <span style="color: #0e84b5; font-weight: bold">yagmail</span><br />
<br />
<span style="color: #007020; font-weight: bold">if</span> <span style="color: #007020">len</span>(unfollowers) <span style="color: #666666">&gt;</span> <span style="color: #40a070">0</span>:<br />
    now <span style="color: #666666">=</span> datetime<span style="color: #666666">.</span>datetime<span style="color: #666666">.</span>now()<br />
    nowDate <span style="color: #666666">=</span> now<span style="color: #666666">.</span>strftime(<span style="color: #4070a0">'%Y-%m-</span><span style="color: #70a0d0; font-style: italic">%d</span><span style="color: #4070a0">'</span>)<br />
<br />
    mail_str <span style="color: #666666">=</span> <span style="color: #4070a0">''</span><br />
    <span style="color: #007020; font-weight: bold">for</span> id_ <span style="color: #007020; font-weight: bold">in</span> unfollowers:<br />
        <span style="color: #007020; font-weight: bold">if</span> id_ <span style="color: #007020; font-weight: bold">in</span> unfollowers_and_still_friend:<br />
            mail_str <span style="color: #666666">+=</span> <span style="color: #4070a0">'unfollower and still friend: '</span> <span style="color: #666666">+</span> id_ <span style="color: #666666">+</span> <span style="color: #4070a0">'</span><span style="color: #4070a0; font-weight: bold">\n</span><span style="color: #4070a0">'</span><br />
        <span style="color: #007020; font-weight: bold">else</span>:<br />
            mail_str <span style="color: #666666">+=</span> <span style="color: #4070a0">'just unfollower: '</span> <span style="color: #666666">+</span> id_ <span style="color: #666666">+</span> <span style="color: #4070a0">'</span><span style="color: #4070a0; font-weight: bold">\n</span><span style="color: #4070a0">'</span><br />
<br />
    mail_str <span style="color: #666666">+=</span> <span style="color: #4070a0">'</span><span style="color: #4070a0; font-weight: bold">\n</span><span style="color: #4070a0">'</span><br />
    mail_str <span style="color: #666666">+=</span> <span style="color: #4070a0">'unfollower: '</span> <span style="color: #666666">+</span> <span style="color: #007020">str</span>(<span style="color: #007020">len</span>(unfollowers)) <span style="color: #666666">+</span> <span style="color: #4070a0">'</span><span style="color: #4070a0; font-weight: bold">\n</span><span style="color: #4070a0">'</span><br />
    mail_str <span style="color: #666666">+=</span> <span style="color: #4070a0">'unfollowers_and_still_friend: '</span> <span style="color: #666666">+</span> <span style="color: #007020">str</span>(<span style="color: #007020">len</span>(unfollowers_and_still_friend)) <span style="color: #666666">+</span> <span style="color: #4070a0">'</span><span style="color: #4070a0; font-weight: bold">\n</span><span style="color: #4070a0">'</span><br />
<br />
<br />
    sub <span style="color: #666666">=</span> <span style="color: #4070a0">'[트위터 Unfollower Tracker] '</span> <span style="color: #666666">+</span> nowDate <span style="color: #666666">+</span> <span style="color: #4070a0">' unfollower 현황입니다.'</span><br />
<br />
    yag <span style="color: #666666">=</span> yagmail<span style="color: #666666">.</span>SMTP(<span style="color: #4070a0">"send_email_address"</span>, <span style="color: #4070a0">"password"</span>)<br />
    yag<span style="color: #666666">.</span>send(<span style="color: #4070a0">"receive_email_address"</span>, subject<span style="color: #666666">=</span>sub, contents<span style="color: #666666">=</span>mail_str)<br />
</pre></div><br />
</span><br />
<br />
<br />
</ol><br />
이것으로 자동화가 완성되었다. 이제 나를 팔로우하는 사람들에게 자신있게 맞팔로우를 할 수 있다... <br />
<br />
<br />
* 후기<div><br />
</div><div>이 시스템을 만들고 며칠 동안 언팔로워가 없어서 제대로 테스트하지 못하다가, 드디어 오늘 언팔로워가 생겨서 메일을 받아볼 수 있었다. 결론은 잘 동작한다.&nbsp;</div><div><br />
</div><div><div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds25.egloos.com/pds/201812/12/70/f0367670_5c110006f045f.png" width="500" height="154.568210263" onclick="Control.Modal.openDialog(this, event, 'http://pds25.egloos.com/pds/201812/12/70/f0367670_5c110006f045f.png', 799, 247);" /></div><div><br />
<br />
</div></div><br/><br/>tag : <a href="/tag/트위터" rel="tag">트위터</a>,&nbsp;<a href="/tag/맞팔" rel="tag">맞팔</a>,&nbsp;<a href="/tag/언팔" rel="tag">언팔</a>,&nbsp;<a href="/tag/언팔로우" rel="tag">언팔로우</a>,&nbsp;<a href="/tag/tweepy" rel="tag">tweepy</a>,&nbsp;<a href="/tag/자동화" rel="tag">자동화</a>			 ]]> 
		</description>
		<category>프로그래밍</category>
		<category>트위터</category>
		<category>맞팔</category>
		<category>언팔</category>
		<category>언팔로우</category>
		<category>tweepy</category>
		<category>자동화</category>

		<comments>http://greentec.egloos.com/4442651#comments</comments>
		<pubDate>Fri, 30 Nov 2018 06:13:29 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ 게임 장르의 욕망이 사라질 때 ]]> </title>
		<link>http://greentec.egloos.com/4441958</link>
		<guid>http://greentec.egloos.com/4441958</guid>
		<description>
			<![CDATA[ 
  모든 게임은 밤낮을 잊고 재밌게 플레이하다가도 어느 순간 그만두게 되는 시점이 온다. 게임 장르별로 플레이를 지속하게 만드는 욕망은 다르다. 오늘은 문득 길을 걷다 이것에 대해 글을 쓰고 싶어졌다. 욕망의 개인차가 있을 수 있기 때문에 주로 나의 경우를 예를 들어 설명해본다.<br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds25.egloos.com/pds/201810/28/70/f0367670_5bd585fb8125e.jpg" width="500" height="281.413612565" onclick="Control.Modal.openDialog(this, event, 'http://pds25.egloos.com/pds/201810/28/70/f0367670_5bd585fb8125e.jpg', 764, 430);" /></div><br />
<div align="center"><a href="http://blog.daum.net/_blog/BlogTypeView.do?blogid=0ae1A&articleno=2&categoryId=1&regdt=20161222143004" target="_blank">Netmarble, 세븐나이츠</a></div><br />
<br />
<strong>수집형 게임</strong><br />
- 카드, 캐릭터, 아이템 등 뭔가를 모아야 하는 게임들은 패키지가 아니라면 주기적으로 업데이트를 해서 수집 목록을 갱신하게 한다. <br />
욕망 : 목표로 하는 단품 혹은 콜렉션을 얻고 싶다. 얻은 후 강화해서 쓸만하게 만들고 싶다.<br />
사라질 때 : 원하는 것을 얻었다. 또는 원하는 것을 얻기까지의 과정이 너무 힘들어 보인다(과금 & 시간 많이 소요). 내 자산의 가치가 폭락했다(주로 업데이트로 인해).<br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd5869356a6d.jpg" width="500" height="281.112737921" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd5869356a6d.jpg', 1366, 768);" /></div><br />
<div align="center"><a href="https://www.reddit.com/r/leagueoflegends/comments/1t8vgt/reminder_yasuo_costs_now_6300_ip/" target="_blank">Riot Games, 리그 오브 레전드</a></div><br />
<br />
<strong>전략형 게임</strong><br />
- LOL, 스타크래프트, 클래시 로얄 등 보통 PvP 를 상정한 게임이다. 게임은 비교적 공평하며 플레이어의 과금보다는 주로 실력으로 승부하게 된다.<br />
욕망 : 게임을 좀 더 잘하고 싶다. 상대를 이기고 싶다. 높은 랭크에 올라가고 싶다.<br />
사라질 때 : 시간 투입에 비해 게임 실력이 늘지 않는다. 여러 가지 정상적이지 않은 방법으로 높은 랭크를 획득했다(대리 게임 등).<br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds25.egloos.com/pds/201810/28/70/f0367670_5bd587291b4aa.jpg" width="500" height="375" onclick="Control.Modal.openDialog(this, event, 'http://pds25.egloos.com/pds/201810/28/70/f0367670_5bd587291b4aa.jpg', 1000, 750);" /></div><br />
<div align="center"><a href="http://industri.info/fmd/m/minecraft-lord-of-the-rings-castle/" target="_blank">Mojang, 마인크래프트</a></div><br />
<br />
<strong>샌드박스형 게임</strong><br />
- Don't starve, 마인크래프트, 롤러 코스터 타이쿤 등 주어진 세계의 룰 안에서 하고 싶은 것을 하며 노는 게임이다. <br />
욕망 : 시간이나 게임 시스템의 압박 없이 자유롭게 플레이하고 싶다. 이 세계의 구성 요소를 조합해서 새로운 것을 만들고 싶다. 남들이 만든 창작물을 보고 더 좋은 것을 만들고 싶다. 나의 개입 없이도 잘 돌아가는 세계(system)를 만들고 싶다.<br />
사라질 때 : 게임이 너무 어렵다. 내가 만들어 놓은 세계가 너무 잘 돌아가서 내가 할 게 없다(매우 드문 경우지만). 다른 사람들의 엄청난 창작물을 보고 좌절감을 느낀다.<br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd587658974b.jpg" width="500" height="231.756756757" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd587658974b.jpg', 740, 343);" /></div><br />
<div align="center"><a href="https://m.post.naver.com/viewer/postView.nhn?volumeNo=10637019&memberNo=36047368" target="_blank">Telltale Games, 워킹 데드</a></div><br />
<br />
<strong>스토리 게임</strong><br />
- 텔테일 게임즈의 게임들, 디트로이트 비컴 휴먼 등 인터랙티브 무비라 불리는 장르의 게임들이 주로 이에 해당된다. 위처, 레드 데드 리뎀션 같은 RPG 게임들도 메인 스토리를 보면 이쪽에 발을 걸치고 있다고도 할 수 있다. <br />
욕망 : 스토리의 끝을 알고 싶다. 스토리의 과정을 하나하나 참여하며 진행하고 싶다. <br />
사라질 때 : 스토리의 엔딩을 봤다. 스토리의 주요 반전을 스포일러 당했다. 스토리에 내가 미치는 영향이 미미하다(주로 텔테일. 주요 선택지에 따라 ㅇㅇㅇ는 기억할 것입니다 라는 메시지만 나오고 결과에는 영향이 거의 없음). <br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd587e65d95c.png" width="500" height="280.684104628" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd587e65d95c.png', 994, 558);" /></div><br />
<div align="center"><a href="https://www.vice.com/en_us/article/nn9pvq/the-puzzling-hitman-go-is-as-much-a-must-play-as-any-agent-47-game-proper-715" target="_blank">Square Enix, 히트맨 고</a></div><br />
<br />
<strong>퍼즐 게임</strong><br />
- 지뢰찾기, 카드게임부터 캔디 크러시 사가나 Hitman GO 등 주어진 퍼즐을 해결하는 것이 메인 콘텐츠인 게임이다.<br />
욕망 : 게임에 존재하는 퍼즐 혹은 임의의 퍼즐을 모두 풀고 싶다.<br />
사라질 때 : 퍼즐이 너무 어렵다. walkthrough 등의 영상을 보고 퍼즐을 따라서 풀었지만 이해가 되지 않는다. 퍼즐 양이 많지만 베리에이션이 부족하고 다 비슷하게 보여서 퍼즐을 푸는 것이 노가다를 하는 느낌이라 풀고 싶지 않다.<br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd588ea5c8ae.jpg" width="500" height="281.25" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201810/28/70/f0367670_5bd588ea5c8ae.jpg', 1920, 1080);" /></div><br />
<div align="center"><a href="https://www.usgamer.net/articles/09-10-2018-assassins-creed-odyssey-guide/traverse-map-quickly-guide" target="_blank">Ubisoft, 어쌔신 크리드 오디세이</a></div><br />
<br />
<strong>오픈 월드 게임</strong><br />
- 게임 내 배경이 존으로 구분되지 않고 하나로 통합되어 있는 게임으로, 월드에 배치된 다양한 콘텐츠를 자유롭게 이동하며 즐길 수 있다.<br />
욕망 : 게임에서 제공하는 콘텐츠를 모두 클리어하고 싶다. 게임에서 강제하는 순서가 아니라 내가 원하는 것부터 마음대로 즐기고 싶다.<br />
사라질 때 : 게임에서 제공하는 콘텐츠를 모두 클리어했다. 모두 클리어하지 못할만큼 콘텐츠 양이 많은데, 콘텐츠들이 다 비슷해서 계속하고 싶은 마음이 들지 않는다. 스토리가 너무 유치하거나 말이 안돼서 몰입이 안된다(스토리가 있는 게임의 경우. 대부분 오픈월드 게임들은 스토리가 있는 것 같다).<br />
<br />
<br />
<br />
<br />
<br/><br/>tag : <a href="/tag/게임" rel="tag">게임</a>,&nbsp;<a href="/tag/장르" rel="tag">장르</a>,&nbsp;<a href="/tag/욕망" rel="tag">욕망</a>			 ]]> 
		</description>
		<category>글쓰기</category>
		<category>게임</category>
		<category>장르</category>
		<category>욕망</category>

		<comments>http://greentec.egloos.com/4441958#comments</comments>
		<pubDate>Sun, 28 Oct 2018 10:02:30 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ <처음 시작하는 R 데이터 분석>, 강진희 & 엄동란 지음 ]]> </title>
		<link>http://greentec.egloos.com/4441570</link>
		<guid>http://greentec.egloos.com/4441570</guid>
		<description>
			<![CDATA[ 
  <div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds21.egloos.com/pds/201810/14/70/f0367670_5bc3507b29821.jpg" width="400" height="514" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201810/14/70/f0367670_5bc3507b29821.jpg', 400, 514);" /></div><br />
<br />
<br />
내가 R 이라는 언어를 처음 접한 때는 2015년 1월 경 <a href="https://www.coursera.org" target="_blank">coursera</a> 의 <a href="https://www.coursera.org/learn/r-programming" target="_blank">R Programming</a> 이라는 수업에서였다. 통계에서 쓰는 언어는 SPSS, SAS 를 많이 들어봤고 공부도 해본 적이 있었지만 R 은 그때 처음으로 제대로 공부해 보았다. python 을 연상하게 하는 간결한 문법과 직관적인 사용법, 다양한 라이브러리와 오픈 소스 개발이 인상적이었지만 아쉽게도 그 당시에는 우리말로 된 교재를 찾아보기 힘들었다. 정확히 말하자면 대학교재들은 있었지만 일반인이 알기 쉽게 쓰인 책은 거의 없었다고 생각한다.<br />
<br />
거의 4년이 지난 지금 우리말로 된 R 교재는 번역서와 국내 저자가 쓴 것을 합쳐 100여 권에 이를 정도로 많다. 짧은 시간에 이렇게 많은 책이 나온 데는 기계학습과 빅 데이터의 발전으로 R이 업계에서 차지하는 위치가 이전과는 비교할 수 없을 정도로 높아진 것이 한몫할 것이다. <a href="https://insights.stackoverflow.com/survey/2018/#technology-programming-scripting-and-markup-languages" target="_blank">Stackoverflow 의 2018년도 개발자 설문조사</a>에서 R 은 세계에서 19번째로 가장 많이 쓰이는 언어였다. 또 <a href="http://r4stats.com/2017/02/28/r-passes-sas/" target="_blank">r4stats.com 의 2017년 Job Report</a> 에서 R 은 SAS 를 제치고 Data science 분야에서 5번째로 사랑받는 언어가 되었다(SAS 는 7위, SPSS 는 14위).<br />
<br />
R에 대해서 많은 책이 나와 있기 때문에 R 에 관심이 생겨서 당장 뭐라도 해보고 싶은 사람들은 교재의 선택에 어려움을 겪을 수 있다. 나같은 경우 한 분야에 입문하기 위해서는 두꺼운 책보다는 얇은 책을 선호하고, 튜토리얼이 세세하게 느껴질 정도로 꼼꼼하게 되어 있는 책을 좋아한다. 이 책은 그런 조건에 부합하고 있다. 풀컬러이며, 책의 시작 부분인 R과 RStudio 의 설치 안내 부분도 빨간색 박스로 눌러야 할 버튼을 강조해가면서 길을 헤매지 않도록 친절하게 안내해주고 있다. github 과 출판사 홈페이지에서 <a href="https://github.com/newstars/HelloR" target="_blank">소스코드</a>도 제공하고 있다. 사실 입문서이니만큼 소스코드의 양은 많지 않지만 여기서 쓰는 데이터를 받기 위해 소스코드를 받아야 했다.<br />
<br />
정리하면 이 책은 초급자와 R을 처음 접하는 사람에게 좋은 입문서이다. 반대로 더 자세하고 많은 내용을 기대하는 중급 이상의 사용자들에게는 권하고 싶지 않은 책이다. 그런 분들에게는 시중에 이미 우리말로 되어 있는 두껍고 다양한 책들을 권하고 싶다.<br />
<br />
<br/><br/>tag : <a href="/tag/r" rel="tag">r</a>,&nbsp;<a href="/tag/데이터분석" rel="tag">데이터분석</a>,&nbsp;<a href="/tag/한빛미디어" rel="tag">한빛미디어</a>			 ]]> 
		</description>
		<category>독서</category>
		<category>r</category>
		<category>데이터분석</category>
		<category>한빛미디어</category>

		<comments>http://greentec.egloos.com/4441570#comments</comments>
		<pubDate>Sun, 14 Oct 2018 14:21:14 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ 비행기에서 플레이한 게임들 ]]> </title>
		<link>http://greentec.egloos.com/4441463</link>
		<guid>http://greentec.egloos.com/4441463</guid>
		<description>
			<![CDATA[ 
  며칠 전 런던-에딘버러(스코틀랜드)-로마 여행을 다녀왔다. 올해는 의도치 않게 많이 쉬게 된다. 그만큼 업무 시간에는 열심히 일해야겠다.<br />
게임업계 종사자로서 최신 게임을 접하는 데에 부족한 점이 많았던 것 같기도 했고, 편도 10시간이 넘는 비행 시간을 버티기 위해서 핸드폰 게임을 하면서 가기 위해 여러 개의 게임을 다운로드 받았다. 내가 탔던 비행기는 이코노미 석에서 인터넷 연결을 제공하지 않기 때문에 인터넷 연결 없이 플레이가 가능한 게임이어야 했다. 그 중 재미있었던 것들을 뽑아본다.<br />
<br />
<br />
<a href="https://itunes.apple.com/kr/app/the-battle-of-polytopia/id1006393168?mt=8" target="_blank">The Battle of Polytopia</a><br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201810/09/70/f0367670_5bbc7128b0ee6.jpg" width="500" height="887.5" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201810/09/70/f0367670_5bbc7128b0ee6.jpg', 640, 1136);" /></div><br />
<br />
<br />
문명의 영향을 많이 받은 것 같은 전략게임이다. 문명6도 모바일로 나오긴 했지만 4GB 정도의 용량이라 외국 USIM 칩의 느린 다운로드 속도로는 다 받지 못하고, 대신에 이걸 받게 되었다. 단순하고 가벼운 시스템이었지만 이게 생각보다 재미있었다. 플레이할 때는 몰랐는데 나중에 나무위키를 찾아보니 Actionscript 로 개발했다고 한다. 어쩐지 더 반갑다.<br />
<br />
기본 4종족은 무료로 플레이할 수 있고 다른 추가 종족들은 1,200 원에서 2,500 원을 내고 구매해야 하는 문명 같은 DLC 시스템을 따르고 있다. 이 종족들을 구매하지 않으면 게임에 나오는 종족이 최대 4개로만 고정되고 최대 종족 수에 따라 맵 크기도 더 커지기 때문에 역동적인 게임을 즐기려면 많은 종족을 구매해야 할 것 같다. <br />
<br />
난이도는 Easy, Normal, Hard, Crazy 로 구성되는데 Crazy 는 정말 어떻게 깨라는 건지 모를 정도로 많은 적 병력이 등장한다. 이 점은 전략 게임이 늘 가지고 있는 문제 - 불공정한 AI - 를 제기하게 한다. 인간에 비해 판단력이 떨어지기 때문에 AI 는 더 많은 자원 혹은 더 저렴한 비용 등의 버프로 인간과의 격차를 줄일 수밖에 없다. 알파고 시대이니 만큼 이런 문제도 언젠가는 해결이 가능해지지 않을까.<br />
<br />
플레이시간 : 대략 6시간 정도<br />
<br />
<br />
<br />
<a href="https://itunes.apple.com/us/app/hexa-turn/id1296648658?mt=8" target="_blank">Hexa Turn</a><br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds25.egloos.com/pds/201810/09/70/f0367670_5bbc72e6a1df6.jpg" width="500" height="667.185069984" onclick="Control.Modal.openDialog(this, event, 'http://pds25.egloos.com/pds/201810/09/70/f0367670_5bbc72e6a1df6.jpg', 643, 858);" /></div><br />
<br />
<br />
삼각형의 진로를 막는 턴제 퍼즐 게임이다. Armorgames, Kongregate 등에서 원래 유명했는데, 웹페이지에서는 Package 1(24 레벨)만 플레이 가능하고 앱에서 즐겨야 풀 버전(Package 1~4, 96 레벨)을 플레이할 수 있다. 유료 버전이 2,500 원인데 좀 고민하다가 구매했다. 게임은 생각보다 어려워서, 현재 Package 2 의 16까지만 진행한 상태다. 새로운 기믹이 나오는 게 재밌어서 계속 플레이하고 싶은데 너무 어렵다. <br />
<br />
플레이시간 : 대략 2시간 정도<br />
<br />
<br />
<br />
<a href="https://itunes.apple.com/kr/app/icy-ropes/id1153896723?mt=8" target="_blank">Icy Ropes</a><br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds25.egloos.com/pds/201810/09/70/f0367670_5bbc7424d91b9.jpg" width="500" height="667.185069984" onclick="Control.Modal.openDialog(this, event, 'http://pds25.egloos.com/pds/201810/09/70/f0367670_5bbc7424d91b9.jpg', 643, 858);" /></div><br />
<br />
<a href="http://www.foddy.net/Athletics.html" target="_blank">QWOP</a>의 플랫포머 버전 같은 게임이다. 터치할 때마다 연결된 두 캐릭터 중 하나의 움직임을 조절하는데, 이 움직임은 물리 법칙을 따르면서도 몹시 제어하기 어렵다. 하지만 계속 플레이하다보면 실력이 점점 늘게 되기 때문에, 실패했을 때 게임 탓 대신 내가 잘못해서 실패했다는 생각을 하게 된다. 오래 가는 피지컬 위주의 게임들은 이런 환상을 플레이어에게 심어주는 것이 중요한 것 같다.<br />
<br />
이런 류의 게임들이 그렇듯이 <a href="https://itunes.apple.com/kr/app/%EA%B8%B8%EA%B1%B4%EB%84%88-%EC%B9%9C%EA%B5%AC%EB%93%A4/id924373886?mt=8" target="_blank">길건너 친구들</a>이 만든 전형에 충실하게 이 게임도 자주 실패하도록 유도하고, 광고 클릭을 하도록 하고, 여러 캐릭터의 뽑기를 제공한다. 별도의 고정된 맵을 만들어서 Challenge Mode 를 제공하고 맵을 깰 때마다 추가 캐릭터를 주는 경험은 신선하고 재미있었다.<br />
<br />
플레이시간 : 대략 3시간 정도<br />
<br />
<br />
<br />
<br/><br/>tag : <a href="/tag/모바일" rel="tag">모바일</a>,&nbsp;<a href="/tag/비행기" rel="tag">비행기</a>,&nbsp;<a href="/tag/게임" rel="tag">게임</a>			 ]]> 
		</description>
		<category>추천게임</category>
		<category>모바일</category>
		<category>비행기</category>
		<category>게임</category>

		<comments>http://greentec.egloos.com/4441463#comments</comments>
		<pubDate>Tue, 09 Oct 2018 09:36:00 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ <데이터 시각화 원리> - 조르즈 카몽이스 지음, 이혜연 옮김 ]]> </title>
		<link>http://greentec.egloos.com/4441082</link>
		<guid>http://greentec.egloos.com/4441082</guid>
		<description>
			<![CDATA[ 
  <div align="center"><div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds21.egloos.com/pds/201809/20/70/f0367670_5ba3974e7c3ac.jpg" width="280" height="350" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201809/20/70/f0367670_5ba3974e7c3ac.jpg', 280, 350);" /></div></div><br />
<br />
이 책의 원제는 "Data at Work" 다. 말 그대로 일에서 쓰기 위해서 데이터를 어떻게 시각화해야 하는가에 대한 시각을 담고 있다. <a href="http://www.yes24.com/24/goods/15238736" target="_blank">&lt;사용자를 생각하게 하지마&gt;</a>나 <a href="http://www.yes24.com/24/goods/12292773" target="_blank">&lt;월스트리트 저널 인포그래픽 가이드&gt;</a> 에서도 느꼈지만 이런 류의 책들은 한결같이 복잡하고 화려한 데이터 시각화를 경계하며 심플하고 목적성이 뚜렷한 시각화를 만드는 것을 강조한다.<br />
<br />
위에 언급한 책들과 이 책의 차이점은 큰 방향은 같지만 좀 더 철학적인 접근이 보인다는 것이다. 물론 두께도 500여 쪽으로 더 두껍지만 말이다. 저자는 '이것은 모두 실용주의에 관한 것이며, 미적인 것이 아니다(p. 454).', '만약 어느 경우에나 들어맞는 답은 없다는 사실과 보편적인 규칙이 없다는 사실을 받아들인다면, 각 실무자와 소비자 집단에 대해 일관된 이론을 늘 찾아야만 한다(p.24).', '우리가 찾기를 원했던 패턴을 노력 없이 찾을 수 있다면, 패턴이 흥미로울수록 더 많은 패턴을 찾을 가능성이 높음을 의미한다. ... 그 반대 역시 사실이다(p. 177).' 등 처음 봐서는 쉽게 받아들이기 힘든 고수의 심득(心得) 같은 이야기들을 풀어놓는다. 이 책을 보고 나도 이 분야의 시각화라는 것에 대해서 좀 더 고민이 많아지게 되었다. <br />
<br />
그리고 이 책의 강점은 수많은 엑셀 차트(모두 인터넷에서 다운로드 가능하다. <a href="http://www.dataatworkbook.com/" target="_blank">이곳</a>에서 상단의  Book 을 누르면 각 챕터별로 차트를 받을 수 있다) 들로 저자의 심득을 쉽게 풀어 설명한다는 것이다. 다 세어보지는 않았지만 차트가 200 여 개가 넘는 듯 하다. 차트의 구성요소인 색, 차트 종류, 라벨 등을 조금씩 바꾸면서 어느 지점이 문제인지, 무엇을 개선하면 더 나아지는지를 꼼꼼하게 알려주고 있다. 하지만 역시 실무에 적용하려면 많은 경험과 노력이 필요할 것 같다. 그래도 실무에 바로 참고할 수 있는 심플하고 깔끔한 다량의 차트를 확보할 수 있다는 것은 이 책을 읽은 이들에게 의도하지 않았던 수확일 것이다. <br />
<br />
저자는 따로 <a href="https://excelcharts.com" target="_blank">블로그</a>도 쓰고 있고 여기에도 짧지만 재미있는 글들이 보이는데, 이 중 저자가 특히 사용을 신중하게 해야 한다고 하는 <a href="https://excelcharts.com/alternative-pizzas-pie-charts-datavis-pedantry/" target="_blank">파이 차트에 대해서 쓰인 이 글</a>이 인상적이다. <br />
<br />
<br />
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Forget pepperoni - mushroom is Britain's most liked pizza topping (65%), followed by onion (62%) and then ham (61%) <a href="https://t.co/5kYikXOEtF">https://t.co/5kYikXOEtF</a> <a href="https://t.co/AJezMfJHbk">pic.twitter.com/AJezMfJHbk</a></p>— YouGov (@YouGov) <a href="https://twitter.com/YouGov/status/838720989991223297?ref_src=twsrc%5Etfw">2017년 3월 6일</a></blockquote><br />
<br />
<br />
<br />
이 <a href="https://twitter.com/YouGov/status/838720989991223297" target="_blank">사진과 트윗</a>을 올린 Yougov 는 위키피디아에 따르면 영국에 있는 Internet-based market research and data analytics 회사이다. 그런데 이런 전문가 집단에서 올린 트위터 사진에는 피자 조각과 퍼센티지, 꺾인 안내선이 결합되어 있어서 우리가 흔히 보는 파이 차트를 떠올리게 한다. 하지만 사실 파이 차트의 기본 원칙인 모두 합치면 100% 가 성립하지 않고, 퍼센티지와 조각의 비율도 맞지 않고, 애초에 여기서 다루는 토핑의 비율은 중복 조사이기 때문에 합쳐서 100% 가 되지 않고 되더라도 의미가 없다. 책을 읽기 전이었다면 이 사진에서 틀린 부분을 찾아내는데 오래 걸렸겠지만, 저자가 워낙 책 전반에서 파이 차트의 잘못된 사용을 경계한 덕분에 틀린 부분들을 금방 알아볼 수 있었다. <br />
<br />
요약하자면 이 책은 데이터 시각화 분야에서 내가 읽은 몇 안되는 책들 중 제일 두꺼웠고 제일 유익했던 책이다. 특히 바로 쓸 수 있는 cookbook 이 아니라 이 분야에서 시각화를 어떻게 해야 하는가에 대해 고민을 하게 만드는 책이라는 점이 좋았다. <br/><br/>tag : <a href="/tag/데이터" rel="tag">데이터</a>,&nbsp;<a href="/tag/데이터시각화" rel="tag">데이터시각화</a>,&nbsp;<a href="/tag/에이콘" rel="tag">에이콘</a>,&nbsp;<a href="/tag/독서" rel="tag">독서</a>			 ]]> 
		</description>
		<category>독서</category>
		<category>데이터</category>
		<category>데이터시각화</category>
		<category>에이콘</category>
		<category>독서</category>

		<comments>http://greentec.egloos.com/4441082#comments</comments>
		<pubDate>Thu, 20 Sep 2018 12:55:08 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ <이것이 C#이다> - 박상현 지음 ]]> </title>
		<link>http://greentec.egloos.com/4440971</link>
		<guid>http://greentec.egloos.com/4440971</guid>
		<description>
			<![CDATA[ 
  <br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201809/14/70/f0367670_5b9bb7f592629.jpg" width="500" height="641.940085592" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201809/14/70/f0367670_5b9bb7f592629.jpg', 1402, 1800);" /></div><br />
<br />
이 책은 한빛미디어의 &lt;나는 리뷰어다> 8월 이벤트에 있던 유일한 C# 책이었던 것으로 기억한다. Actionscript 로 코딩을 시작했고 현재 주력이 js 와 python 인 나에게 옛날부터 C는 가까이하고 싶지만 먼 언어였다. C#은 그래도 회사에서 개발중인 게임의 서버 코드들을 가끔 살펴보면서 문법이 이해하기 쉽다고 생각하고 있었다. 리뷰 후보로는 총 세 권을 골랐고 운좋게도 이 책에 당첨이 되었다.<br />
<br />
나는 프로그래밍을 꽤 늦게 배운 편이다. 군대에서 독학으로 배웠는데, 그때 썼던 방법이 책의 코드를 처음부터 끝까지 따라서 치는 것이었다. 사실 프로그래밍 책의 코드들은 프로그램이 이런 식으로 구성된다고 보여주려는 의도도 있지만, 기본적으로는 독자가 따라서 쳐보고 구동시켜 보는 것을 상정하고 있다고 생각한다. 하지만 보통 시간이 너무 오래 걸리는데다 노력에 비해 얻는 것이 적다고 생각해서 나도 그 이후로는 잘 하지 않았었다. <br />
<br />
이 책을 읽으면서 프로그래밍을 처음으로 제대로 배울 때의 느낌을 되살리며 코드를 처음부터 거의 끝까지 다 치면서 읽어보았다. 코드를 치다보면 같은 내용에서 조금만 달라지는 부분도 있지만 복사/붙여넣기를 하지 않고 거의 다 직접 타이핑했다. Github 에서 소스코드를 받지 않고 손으로 직접 코드를 치다보면 완벽하게 옮길 수 없다. 오타도 있고 컴파일 에러, 런타임 에러도 발생한다. 하지만 그것을 해결하는 과정도 학습 과정이라고 생각하고, 이 시간이 쌓여야 하나의 프로그래밍 언어를 완전히 자기 것으로 받아들일 수 있다고 생각한다. 가장 좋은 방법은 뭔가 만들어보면서 시행착오를 통해 배우는 것이겠지만, 이 방법은 나에게 안전한 차선책은 된다고 생각한다. 어쨌든 책의 코드는 한정되어 있고, 다 치면 끝나니까.<br />
<br />
저자는 지금까지 "뇌를 자극하는..." 시리즈로 대표되는 열 권 내외의 IT 서적을 집필해왔다. 예전에 저자가 쓴 &lt;뇌를 자극하는 알고리즘>을 읽었는데 같은 내용을 외국 서적과 달리 최대한 쉽게 설명하려고 하는 모습이 인상적이었다. 이 책 &lt;이것이 C#이다>도 C#을 처음 접하는 독자를 대상으로 가급적 내용을 쉽게 설명하려고 애쓰고 있다. 하지만 꼭 알고 넘어가야 하는 중요한 내용에 대해서도 놓치지 않으려고 한 흔적이 보인다. 800 여 쪽에 달하는 이 책의 두께가 그 증명이다. 이 분야의 실무와 교육을 겸하는 전문가에게 C# 이라는 언어에 대해서 처음부터 끝까지 자세하게 배울 수 있는 입문서이고, 비교적 최신인 7.2 버전을 따르고 있기 때문에 호환성 걱정도 없다. 또 <a href="https://github.com/sean-lab/ThisIsCSharp7" target="_blank">소스코드 Github</a> 과 <a href="https://cafe.naver.com/thisiscsharp" target="_blank">네이버 카페</a>도 운영하고 있기 때문에 소스에 문제가 생긴다면 문의하기도 좋다. 동영상 강의도 있다는데 책 설명이 친절해서 굳이 필요할까 싶지만 내용이 이해되지 않는 부분이 있으면 도움을 받을수도 있을 것 같다.<br />
<br />
전에도 썼지만 사실 책 한 권을 읽고 어떤 내용에 대해서 모든 것을 알기는 힘든 일이다. 그래도 가이드가 필요하다면 이 책 역시 꽤 안정적인 선택일 것 같다.<br/><br/>tag : <a href="/tag/C" rel="tag">C</a>,&nbsp;<a href="/tag/Csharp" rel="tag">Csharp</a>,&nbsp;<a href="/tag/한빛미디어" rel="tag">한빛미디어</a>,&nbsp;<a href="/tag/리뷰" rel="tag">리뷰</a>,&nbsp;<a href="/tag/프로그래밍" rel="tag">프로그래밍</a>,&nbsp;<a href="/tag/프로그래밍언어" rel="tag">프로그래밍언어</a>			 ]]> 
		</description>
		<category>독서</category>
		<category>C</category>
		<category>Csharp</category>
		<category>한빛미디어</category>
		<category>리뷰</category>
		<category>프로그래밍</category>
		<category>프로그래밍언어</category>

		<comments>http://greentec.egloos.com/4440971#comments</comments>
		<pubDate>Fri, 14 Sep 2018 13:32:11 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ Reddit Logo Generator ]]> </title>
		<link>http://greentec.egloos.com/4440132</link>
		<guid>http://greentec.egloos.com/4440132</guid>
		<description>
			<![CDATA[ 
  <div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds27.egloos.com/pds/201808/05/70/f0367670_5b670d8587a06.png" width="120" height="40" onclick="Control.Modal.openDialog(this, event, 'http://pds27.egloos.com/pds/201808/05/70/f0367670_5b670d8587a06.png', 120, 40);" /></div><br />
<br />
내가 자주 가는 subreddit 인 <a href="https://www.reddit.com/r/proceduralgeneration/" target="_blank">r/proceduralgeneration</a> 에서는 매 달 challenge 를 개최해서 유저들의 참여를 독려한다. 지금까지 재미있는 challenge 들이 많이 나왔는데, 이번에는 특히 이 subreddit 의 로고를 만드는 <a href="https://www.reddit.com/r/proceduralgeneration/comments/93ufbk/august_challenge_a_logo_for_this_subreddit/" target="_blank">challenge</a> 가 나왔다. 제한 조건은 다음과 같다.<br />
<br />
- reddit 글씨가 들어가야 함 + some art<br />
- 가로:세로 비율은 3:1. 120 * 40 px 로 보일 것이기 때문.<br />
- 오픈 소스. 설치 / 실행이 쉬울 것<br />
-- 물론 코드를 올리는 대신에 많은 양의 로고 이미지 파일을 만들어서 업로드해도 됨<br />
- 매일 새로운 이미지여야 함<br />
<br />
이걸 보고 예전에 codepen.io 와 이 subreddit 에 올렸던 <a href="https://codepen.io/greentec/pen/Ogrjwx" target="_blank">Watercolor</a> 가 생각났다. 처음에 몇 개의 픽셀로 이루어진 이미지로 시작해서, 각 픽셀 사이에 중간값을 채우는 식으로 자연스럽게 연결되는 수채화물감 같은 이미지를 만드는 작은 프로그램이다. 내가 독창적으로 생각했던 것은 아니고, 이미지 생성에 참조했던 것은 다른 글이었다. 지금은 링크를 못 찾겠다... 원래는 이 <a href="http://www.tylerlhobbs.com/writings/watercolor" target="_blank">블로그포스트</a>를 보고 따라하려고 했지만 KTX 에서 작업해서 그런지 집중이 되질 않아서 잘 되지 않았다. <br />
<br />
원리는 다음과 같다. 처음에 적은 수 - 여기서는 25개 - 의 픽셀에 랜덤한 컬러 값을 지정한다. <br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds27.egloos.com/pds/201808/05/70/f0367670_5b6709a5bdbc1.png" width="500" height="500" onclick="Control.Modal.openDialog(this, event, 'http://pds27.egloos.com/pds/201808/05/70/f0367670_5b6709a5bdbc1.png', 512, 512);" /></div><br />
<br />
그리고 그 후 각 사이값에 적절한 값을 채워넣는다. <br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds26.egloos.com/pds/201808/05/70/f0367670_5b6709c1c33aa.png" width="500" height="500" onclick="Control.Modal.openDialog(this, event, 'http://pds26.egloos.com/pds/201808/05/70/f0367670_5b6709c1c33aa.png', 512, 512);" /></div><br />
<br />
적절한 값을 채워넣는 알고리즘은 코드에도 있지만 풀어서 설명하면 다음과 같다. <br />
<br />
1. 모든 픽셀의 좌표에 2를 곱해준다.<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds21.egloos.com/pds/201808/06/70/f0367670_5b683af98b369.png" width="362" height="170" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201808/06/70/f0367670_5b683af98b369.png', 362, 170);" /></div><br />
<br />
<br />
2. 위에서 부터 3 x 3 의 9개 픽셀을 선택. corner 4 개의 픽셀은 변하지 않는 값으로 두고, 새로 생성되는 빈 픽셀들에 대해서 다음과 같은 규칙으로 픽셀의 RGB 값을 지정한다.<br />
- R, G, B 각각에 대해서 반복<br />
-- corner 4개 픽셀의 average 값 계산<br />
-- edge의 4개 픽셀은 인접한 픽셀 중 한 개의 (RGB 값 + average) / 2 의 RGB 값을 갖는다.<br />
-- center의 1개 픽셀은 corner 4개 픽셀 중 하나의 값을 갖는다. (R, G, B 에서 같은 corner 픽셀이 선택될 확률은 낮기 때문에 center 픽셀은 각 corner 가 어느 정도 섞인 픽셀이 된다)<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds27.egloos.com/pds/201808/06/70/f0367670_5b683bb9b5ae8.png" width="422" height="175" onclick="Control.Modal.openDialog(this, event, 'http://pds27.egloos.com/pds/201808/06/70/f0367670_5b683bb9b5ae8.png', 422, 175);" /></div><br />
<br />
<br />
이후로는 이 과정의 반복이다. 생성되는 픽셀의 수가 타겟 이미지의 픽셀 수와 같아지게 되면 그럴듯한 이미지가 나온다. <br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds26.egloos.com/pds/201808/05/70/f0367670_5b670ca041756.gif" width="500" height="500" onclick="Control.Modal.openDialog(this, event, 'http://pds26.egloos.com/pds/201808/05/70/f0367670_5b670ca041756.gif', 512, 512);" /></div><br />
<br />
<br />
이제 이 이미지를 배경으로 reddit logo generator 를 만들려고 보니... 2가지 문제가 있었다.<br />
1. 레딧 로고니까 레딧 마스코트 로봇을 그려주는 게 좋을 것 같다.<br />
2. 매일 다른 이미지가 생성되어야 한다.<br />
<br />
1번은 일단 svg 파일을 찾아서, 그것을 통째로 복사하는 식으로 접근했다. 그 다음에 svg 를 canvas 에 그리려고 보니 svg 에 custom tag 들이 많이 붙어 있어서 에러가 나는 것을 발견하지 못해서 1시간쯤 헤맸다. custom tag 들을 열심히 제거하고 나니 svg 를 canvas 에 그릴 수 있어서, 최종 이미지에 로봇이 포함될 수 있었다.<br />
<br />
2번은 원래 WaterColor 버전에는 random seed 가 없었다. 그래서 매일의 year, month, day 로 random seed 를 구성하도록 접근해서 해결했다. 이것도 seed 에 숫자를 보내야 하는데 date 문자를 그대로 보내는 바람에 버그가 생겨서 1시간쯤 헤맨 것 같다.<br />
<br />
어쨌든 이 2가지의 난관을 극복하니 <a href="https://codepen.io/greentec/pen/mjKWpV" target="_blank">로고 제너레이터</a>를 완성할 수 있었다. 언젠가는 내가 만든 이 로고가 proceduralgeneration subreddit 메인에 걸리면 좋겠다. <br />
<br />
<br/><br/>tag : <a href="/tag/algorithm" rel="tag">algorithm</a>,&nbsp;<a href="/tag/procedural" rel="tag">procedural</a>,&nbsp;<a href="/tag/reddit" rel="tag">reddit</a>,&nbsp;<a href="/tag/logo" rel="tag">logo</a>,&nbsp;<a href="/tag/generation" rel="tag">generation</a>,&nbsp;<a href="/tag/javascript" rel="tag">javascript</a>,&nbsp;<a href="/tag/codepen" rel="tag">codepen</a>			 ]]> 
		</description>
		<category>프로그래밍</category>
		<category>algorithm</category>
		<category>procedural</category>
		<category>reddit</category>
		<category>logo</category>
		<category>generation</category>
		<category>javascript</category>
		<category>codepen</category>

		<comments>http://greentec.egloos.com/4440132#comments</comments>
		<pubDate>Sun, 05 Aug 2018 14:45:40 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ This War Of Mine - 마음을 성장시키는 경험 ]]> </title>
		<link>http://greentec.egloos.com/4439355</link>
		<guid>http://greentec.egloos.com/4439355</guid>
		<description>
			<![CDATA[ 
  오늘 회사에서 Workshop 을 했는데 과제로 이 게임을 분석했다. 사놓은지는 오래 되었지만 한시간밖에 플레이하지 않았었는데, 이번 기회에 다시 플레이하며 예전에 느끼지 못했던 여러 가지를 느낄 수 있었다. 레포트를 쓰는게 오랜만이라 조심스러워서 존댓말로 썼다.<br />
<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://thumbnail.egloos.net/500x0/http://pds21.egloos.com/pds/201807/04/70/f0367670_5b3cba3446d2d.jpg" width="500" height="311.764705882" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201807/04/70/f0367670_5b3cba3446d2d.jpg', 680, 424);" /></div><br />
<br />
<br />
This War Of Mine 은 로그라이크 게임이라고 할 수 있습니다. 아스키 문자로 그려지는 던전에서 플레이했던 <rogue> 게임과 닮은 게임들을 일컫는 명칭에서 이제는 하나의 장르가 된 로그라이크 게임은 대표적으로 '영속적인 죽음(perma-death)' 이라는 특징을 지니고 있습니다. 보통의 게임은 자유롭거나 제한적으로 게임의 진행 정도를 저장, 불러오기가 가능하지만 로그라이크 게임은 이것을 용납하지 않는 것이 대표적인 게임성입니다. RPG 게임을 예로 들면 게임 내에서 죽었다가 부활하면 약간의 페널티를 얻더라도 게임의 진행 정도는 그대로 유지되고, 내 캐릭터의 강함도 유지되기 때문에 게임을 계속 진행하는 데에 무리가 없습니다. 하지만 로그라이크 게임에서는 보통 게임 내에서의 죽음은 되돌릴 수 없습니다. 죽고 나서 새 게임을 시작하면 맨몸 상태의 캐릭터가 레벨 1로 시작하게 됩니다. 게임에 남는 것은 아무 것도 없습니다.<br />
<br />
<br />
사실 남는 것이 아주 없지는 않습니다. 게임을 하고 있는 플레이어는 로그라이크 안에서 다양하고 기상천외한 방법으로 죽을 수 있습니다. 몬스터에게 맞아죽기도 하고, 몬스터가 떨어뜨린 고기를 주워먹었다가 병에 걸려서 죽기도 하고, 묘한 빛깔의 약물을 먹었다가 지능이 떨어져서 숨쉬는 법을 까먹어서 죽기도 합니다. 극한 상황에서 플레이어는 점점 더 좋은 선택을 할 수 있게 되고, 이런 경험들을 통해 플레이어의 실력은 점점 성장합니다. 내 캐릭터가 성장하기보다 내가 성장하는 게임인 것입니다.<br />
<br />
<br />
This War Of Mine 에서도 게임의 끝은 영원한 끝입니다. 그런데 이 게임의 제작자들은 단순히 재미있는 게임을 만드는 것에 그치지 않고 메시지(<a href="http://www.inven.co.kr/webzine/news/?news=155658" target="_blank">[NDC2016] 디스워오브마인, '메시지를 전달하기 위한 아트 디렉터의 고민'</a>)를 주고 싶어 했습니다. 전쟁 속의 민간인을 현실적으로 그려내기 위해 이들은 보정하지 않은 제작진들의 사진을 게임 캐릭터로 사용하고, 아트 스타일에서도 평범하면서 현실성 있는 모습을 보여주기 위해 노력했습니다. 플레이어는 게임을 하다보면 실제로 전쟁 속에 들어온 민간인이 된 것처럼 무력함을 느끼게 되고, 전쟁에 대한 환멸도 느낍니다. 노부부만 있는 집의 물건을 털어야 할지, 소녀를 겁박하는 총 든 군인을 모른척 지나가야 할지, 도움을 청하는 어린아이들 앞에서 내가 가진 약품을 주어야 할지 등 플레이어는 게임 내에서 끊임없이 갈등을 겪습니다. 이런 것은 보통의 로그라이크 게임에는 없었습니다. 이런 상황에서 좋은 선택이 있을까요? 이런 경험을 통해 플레이어의 게임 실력이 성장할까요? <br />
<br />
<br />
이런 경험을 통해 우리는 게임에서 주는 메시지를 받습니다. 제가 생각하기에 그것은 전쟁에 속한 사람은 누구도 전쟁에서 자유로울 수 없고, 기본권을 침해받는다는 것입니다. 개념적으로, 소설이나 영화 같은 수동적 미디어를 통해 머리로만 알고 있던 사실을 이 게임은 능동적인 참여를 통해 가슴에 와닿게 해주었습니다. 이 게임의 메시지를 제대로 받아들인다면 우리는 전쟁을 겪는 사람들의 아픔에 좀 더 공감할 수 있을 것입니다. 이 게임은 다른 경험을 줍니다. 그것은 플레이어의 게임 실력이 아닌 마음을 성장시키기 위한 경험입니다.</rogue>			 ]]> 
		</description>
		<category>추천게임</category>

		<comments>http://greentec.egloos.com/4439355#comments</comments>
		<pubDate>Wed, 04 Jul 2018 12:17:25 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ 비행기에서 본 영화들 ]]> </title>
		<link>http://greentec.egloos.com/4439323</link>
		<guid>http://greentec.egloos.com/4439323</guid>
		<description>
			<![CDATA[ 
  2주 전 영국-스페인 여행을 다녀왔다. 편도 10시간이 넘게 걸리는 비행기 안에서 각각 네 편씩 총 여덟 편의 영화를 봤다. 잠도 오지 않았고 생각보다 재미있는 영화들이 있었다. 그 중 몇 편에 대한 감상을 가볍게 적어본다.<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds26.egloos.com/pds/201807/03/70/f0367670_5b3b5613709bd.jpg" width="454" height="650" onclick="Control.Modal.openDialog(this, event, 'http://pds26.egloos.com/pds/201807/03/70/f0367670_5b3b5613709bd.jpg', 454, 650);" /></div><br />
<br />
<a href="https://movie.naver.com/movie/bi/mi/basic.nhn?code=37049" target="_blank">이탈리안 잡</a><br />
<br />
범죄 영화의 탈을 쓴 BMW Mini 의 광고 영화. 전문가들이 모여 팀을 이뤄서 도둑질을 한다는 줄거리는 흔하지만, BMW Mini 를 거칠게 운전하는 20대의 샤를리즈 테론은 이 영화를 특별하게 만든다. 이 영화에서 Mini 는 지하철도 탄다. 다른 배우들도 제이슨 스타뎀 등 지금은 다 유명한 스타들이어서 1편 개봉(2003년) 이후 말만 무성했던 속편이 나오기는 힘들 것 같다. 이연걸이 나왔던 &lt;의천도룡기> 같은 걸까.<br />
<br />
　<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds26.egloos.com/pds/201807/03/70/f0367670_5b3b57b1ec9a3.jpg" width="450" height="642" onclick="Control.Modal.openDialog(this, event, 'http://pds26.egloos.com/pds/201807/03/70/f0367670_5b3b57b1ec9a3.jpg', 450, 642);" /></div><br />
<br />
<a href="https://movie.naver.com/movie/bi/mi/basic.nhn?code=157243" target="_blank">당갈</a><br />
<br />
영화를 보는 내내 이 작품에 참여한 모든 사람들에 대한 존경심이 들었다. 실존 인물의 이야기라는 것도 놀라웠고... 뻔한 이야기이지만 그걸 잘 만들었다. 옛날에 영화 &lt;똥파리>를 볼 때도 비슷한 느낌이 들었다. 노래를 넣지 않으면 허전했는지 중간에 노래씬이 하나 나오긴 한다. 하지만 그것조차 그 뒤에 작품에 의미 있는 내용으로 활용한다. 스포츠 장면도 너무나 잘 찍었고.. 버릴 데가 없는 한 마리 소 같은 영화..라고 하면 안되겠지. <br />
<br />
　<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds21.egloos.com/pds/201807/03/70/f0367670_5b3b58d106650.jpg" width="450" height="643" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201807/03/70/f0367670_5b3b58d106650.jpg', 450, 643);" /></div><br />
<br />
<a href="https://movie.naver.com/movie/bi/mi/basic.nhn?code=155665" target="_blank">강철비</a><br />
<br />
중반 이후의 늘어짐과 개연성 부족 등 걸리는 부분들이 있지만 이정도면 괜찮은 블록버스터라고 생각한다. 배우 박은혜씨가 강철비가 다른 영화의 스크린 독과점으로 400만을 못 갈 수 있다고 한탄하던 게 생각난다. 그럴만큼 천만도 갈 수 있을 정도로 잠재력이 큰 아쉬운 영화다. 강철비는 오늘 검색해보니 최종 445만으로 마감했다. (출처 : <a href="http://www.kobis.or.kr/kobis/business/stat/boxs/findFormerBoxOfficeList.do?loadEnd=0&searchType=search&sMultiMovieYn=&sRepNationCd=&sWideAreaCd=" target="_blank">역대 박스오피스</a>)<br />
<br />
　<br />
<br />
<div style="text-align:center"><img class="image_mid" border="0" onmouseover="this.style.cursor='pointer'" alt="" src="http://pds21.egloos.com/pds/201807/03/70/f0367670_5b3b5b607dfd3.jpg" width="450" height="655" onclick="Control.Modal.openDialog(this, event, 'http://pds21.egloos.com/pds/201807/03/70/f0367670_5b3b5b607dfd3.jpg', 450, 655);" /></div><br />
<br />
<a href="https://movie.naver.com/movie/bi/mi/basic.nhn?code=146480" target="_blank">덩케르크</a><br />
<br />
영화는 세 곳의 주요 지점 - 땅, 바다, 하늘 - 에서 세 무리의 주요 인물들 - 귀환병, 구조에 나선 민간인들, 공군 - 을 차례로 조명하며 이야기를 풀어나간다. 처음에는 복잡하게 느껴졌지만 이야기가 진행될수록 세 무리의 사람들이 섞여가면서 편집도 조화를 이룬다. 아니면 내가 영화에 적응한 것일수도 있겠다. 귀환병들은 정말 처절하게 살기 위해 투쟁하고, 공중전은 정말 답답하면서도 긴장감이 느껴졌다. 명감독이고 명작인데 이 글의 마무리에 들어올 때까지도 이 영화가 생각이 나지 않았다. 좋은 영화지만 내게 그다지 인상적이지는 않았나보다.<br />
<br />
<br />
<br />
			 ]]> 
		</description>
		<category>영화</category>

		<comments>http://greentec.egloos.com/4439323#comments</comments>
		<pubDate>Tue, 03 Jul 2018 11:24:57 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
	<item>
		<title><![CDATA[ ECMAScript 2016, 2017, 2018 변경점 정리 글 링크 ]]> </title>
		<link>http://greentec.egloos.com/4437541</link>
		<guid>http://greentec.egloos.com/4437541</guid>
		<description>
			<![CDATA[ 
  <a href="https://medium.freecodecamp.org/here-are-examples-of-everything-new-in-ecmascript-2016-2017-and-2018-d52fa3b5a70e" target="_blank">https://medium.freecodecamp.org/here-are-examples-of-everything-new-in-ecmascript-2016-2017-and-2018-d52fa3b5a70e</a><br />
<br />
18개의 변경점을 example 중심으로 깔끔하게 정리해 놓았다. <br />
medium 에서 34k 의 clap 을 받을 정도로 좋은 글인 것 같다. <br />
<br />
눈에 띄는 개선점으로는 아래와 같은 것들이 있다.<br />
<br />
<strong>ECMA 2017</strong><br />
- Object.entries() : Object 의 key, value 를 array 형태로 루핑할 수 있다. key 만 Loop 가 되는 것이 아니라, key, value 를 같이 받는 것이다. python 의 Object.items() 같은 기능.<br />
<br />
<strong>ECMA 2018</strong><br />
- RegExp Named Group Captures : Regex 에서 year, FirstName 같은 custom named group 을 캡쳐할 수 있다. 이를 이용해서 replace 까지 한 줄에 처리할 수 있다. <br />
- Asynchronous Iteration :  For-await-of Loop 의 추가. 이제 여러 개의 Promise 를 Loop 로 돌릴 수 있다.<br/><br/>tag : <a href="/tag/javascript" rel="tag">javascript</a>,&nbsp;<a href="/tag/ecmascript" rel="tag">ecmascript</a>			 ]]> 
		</description>
		<category>프로그래밍</category>
		<category>javascript</category>
		<category>ecmascript</category>

		<comments>http://greentec.egloos.com/4437541#comments</comments>
		<pubDate>Wed, 25 Apr 2018 08:26:54 GMT</pubDate>
		<dc:creator>기획자</dc:creator>
	</item>
</channel>
</rss>
