<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
>

<channel>
	<title>원강민의 Wonhada 블로그</title>
	<atom:link href="https://blog.wonhada.com/?feed=rss2" rel="self" type="application/rss+xml" />
	<link>https://blog.wonhada.com</link>
	<description></description>
	<lastBuildDate>
	Mon, 15 Apr 2019 02:06:37 +0000	</lastBuildDate>
	<language>ko-KR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.1.1</generator>
<site xmlns="com-wordpress:feed-additions:1">122868454</site>	<item>
		<title>[Android] 불투명한 픽셀만 추출하기</title>
		<link>https://blog.wonhada.com/?p=3703</link>
				<comments>https://blog.wonhada.com/?p=3703#respond</comments>
				<pubDate>Fri, 29 Mar 2019 02:55:10 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[네이티브[엔터프라이즈]]]></category>
		<category><![CDATA[안드로이드]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3703</guid>
				<description><![CDATA[iOS 버전과 달리 Android는 픽셀을 뽑아서 할 줄 짜리 이미지로 만듭니다.]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="443" height="265"/></a></figure>



<p><a href="https://blog.wonhada.com/?p=3695">iOS 버전</a>과 달리 Android는 픽셀을 뽑아서 할 줄 짜리 이미지로 만듭니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br />25<br />26<br />27<br />28<br />29<br />30<br />31<br />32<br />33<br />34<br />35<br />36<br />37<br />38<br />39<br />40<br />41<br />42<br />43<br />44<br />45<br />46<br />47<br />48<br />49<br />50<br />51<br />52<br />53<br />54<br />55<br />56<br />57<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">private void SaveBitmapToFileCache(Bitmap bitmap, String strFilePath)<br />
{<br />
&nbsp; &nbsp; File fileCacheItem = new File(strFilePath);<br />
&nbsp; &nbsp; OutputStream out = null;<br />
<br />
&nbsp; &nbsp; try<br />
&nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; fileCacheItem.createNewFile();<br />
&nbsp; &nbsp; &nbsp; &nbsp; out = new FileOutputStream(fileCacheItem);<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; bitmap.compress(Bitmap.CompressFormat.PNG, 100, out);<br />
&nbsp; &nbsp; }<br />
&nbsp; &nbsp; catch (Exception e)<br />
&nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();<br />
&nbsp; &nbsp; }<br />
&nbsp; &nbsp; finally<br />
&nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; try<br />
&nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.close();<br />
&nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; &nbsp; &nbsp; catch (IOException e)<br />
&nbsp; &nbsp; &nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();<br />
&nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; }<br />
}<br />
<br />
String path = ...<br />
Bitmap img = BitmapFactory.decodeFile(path);<br />
<br />
ArrayList bmSource = new ArrayList();<br />
<br />
final int W = img.getWidth();<br />
final int H = img.getHeight();<br />
<br />
for (int y = 0; y &amp;lt; H; ++y) {<br />
&nbsp; &nbsp; for (int x = 0; x &amp;lt; W; ++x) {<br />
&nbsp; &nbsp; &nbsp; &nbsp; int pixel = img.getPixel(x, y);<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; if (Color.alpha(pixel) &gt;= 255) {// 불투명한 픽셀<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bmSource.add(pixel);<br />
&nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; }<br />
}<br />
<br />
int len = bmSource.size();<br />
<br />
Bitmap newImg = Bitmap.createBitmap(len, 1, Bitmap.Config.ARGB_8888);<br />
for (int i = 0; i &amp;lt; len; ++i) {<br />
&nbsp; &nbsp; newImg.setPixel(i, 0, (int)bmSource.get(i));<br />
}<br />
<br />
File tmpFile = File.createTempFile(&quot;tmp_&quot;, &quot;.png&quot;);<br />
String newImgPath = tmpFile.getAbsolutePath();<br />
SaveBitmapToFileCache(newImg, newImgPath);</div></td></tr></tbody></table></div>

</pre>



<p></p>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3703</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3703</post-id>	</item>
		<item>
		<title>[iOS] 불투명한 픽셀만 추출하기</title>
		<link>https://blog.wonhada.com/?p=3695</link>
				<comments>https://blog.wonhada.com/?p=3695#comments</comments>
				<pubDate>Fri, 29 Mar 2019 02:35:49 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[iOS/Mac]]></category>
		<category><![CDATA[네이티브[엔터프라이즈]]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3695</guid>
				<description><![CDATA[이미지의 완전히 불투명한(알파값 100%) 픽셀만 추출하는 Objective-C 코드입니다.파일은 Xcode 프로젝트의 루트에 두면 됩니다. 사용한 이미지: 초록색 배경은 알파값 90% 입니다. 결과 화면]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="448" height="269"/></a></figure>



<p>이미지의 완전히 불투명한(알파값 100%) 픽셀만 추출하는 Objective-C 코드입니다.<br>파일은 Xcode 프로젝트의 루트에 두면 됩니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br />25<br />26<br />27<br />28<br />29<br />30<br />31<br />32<br />33<br />34<br />35<br />36<br />37<br />38<br />39<br />40<br />41<br />42<br />43<br />44<br />45<br />46<br />47<br />48<br />49<br />50<br />51<br />52<br />53<br />54<br />55<br />56<br />57<br />58<br />59<br />60<br />61<br />62<br />63<br />64<br />65<br />66<br />67<br />68<br />69<br />70<br />71<br />72<br />73<br />74<br />75<br />76<br />77<br />78<br />79<br />80<br />81<br />82<br />83<br />84<br />85<br />86<br />87<br />88<br />89<br />90<br />91<br />92<br />93<br />94<br />95<br />96<br />97<br />98<br />99<br />100<br />101<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">#import &quot;ViewController.h&quot;<br />
<br />
@interface ViewController ()<br />
<br />
@end<br />
<br />
@implementation ViewController<br />
<br />
-(void) createOpaqueImage:(NSString *)imagePath<br />
{<br />
&nbsp; &nbsp; UIImage *source = [UIImage imageWithContentsOfFile:imagePath];<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; CGContextRef ctx;<br />
&nbsp; &nbsp; CGImageRef imageRef = [source CGImage];<br />
&nbsp; &nbsp; NSUInteger width = CGImageGetWidth(imageRef);<br />
&nbsp; &nbsp; NSUInteger height = CGImageGetHeight(imageRef);<br />
&nbsp; &nbsp; CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();<br />
&nbsp; &nbsp; unsigned char *rawData = (unsigned char *)malloc(height * width * 4);<br />
&nbsp; &nbsp; NSUInteger bytesPerPixel = 4;<br />
&nbsp; &nbsp; NSUInteger bytesPerRow = bytesPerPixel * width;<br />
&nbsp; &nbsp; NSUInteger bitsPerComponent = 8;<br />
&nbsp; &nbsp; CGContextRef context = CGBitmapContextCreate(rawData, width, height,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bitsPerComponent, bytesPerRow, colorSpace,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;kCGImageAlphaPremultipliedLast);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; CGContextDrawImage(context, CGRectMake(0, 0, width, height), imageRef);<br />
&nbsp; &nbsp; CGContextRelease(context);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; unsigned char *newRawData = (unsigned char *)malloc(height * width * 4);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; int byteIndex = 0;<br />
&nbsp; &nbsp; for (int ii = 0 ; ii &amp;lt; width * height ; ++ii)<br />
&nbsp; &nbsp; {<br />
&nbsp; &nbsp; &nbsp; &nbsp; if(((CGFloat)rawData[byteIndex + 3]) &gt;= 255.0f)<br />
&nbsp; &nbsp; &nbsp; &nbsp; {// 불투명 픽셀<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newRawData[byteIndex] = rawData[byteIndex];<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newRawData[byteIndex + 1] = rawData[byteIndex + 1];<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newRawData[byteIndex + 2] = rawData[byteIndex + 2];<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newRawData[byteIndex + 3] = rawData[byteIndex + 3];<br />
&nbsp; &nbsp; &nbsp; &nbsp; }<br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; byteIndex += 4;<br />
&nbsp; &nbsp; }<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; free(rawData);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; ctx = CGBitmapContextCreate(newRawData,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 8,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bytesPerRow,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; colorSpace,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; kCGImageAlphaPremultipliedLast );<br />
&nbsp; &nbsp; CGColorSpaceRelease(colorSpace);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; imageRef = CGBitmapContextCreateImage(ctx);<br />
&nbsp; &nbsp; UIImage* rawImage = [UIImage imageWithCGImage:imageRef];<br />
&nbsp; &nbsp; CGImageRelease(imageRef);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; CGContextRelease(ctx);<br />
&nbsp; &nbsp; free(newRawData);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; // 이미지뷰 생성<br />
&nbsp; &nbsp; UIImageView *imgView = [[UIImageView new] initWithImage:rawImage];<br />
&nbsp; &nbsp; [imgView setCenter:CGPointMake(150, 410)];<br />
&nbsp; &nbsp; [imgView setBounds:CGRectMake(0, 0, width * 0.5, height * 0.5)];<br />
&nbsp; &nbsp; [self.view addSubview:imgView];<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; /* 파일 생성<br />
&nbsp; &nbsp; NSString *tempFilePath = [NSTemporaryDirectory() stringByAppendingPathComponent:[[NSUUID UUID] UUIDString]];<br />
&nbsp; &nbsp; NSData *newImg = [NSData dataWithData:UIImagePNGRepresentation(rawImage)];<br />
&nbsp; &nbsp; [newImg writeToFile:tempFilePath atomically:YES];<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; rawImage = nil;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; return tempFilePath;*/<br />
}<br />
<br />
- (void)viewDidLoad {<br />
&nbsp; &nbsp; [super viewDidLoad];<br />
&nbsp; &nbsp; // Do any additional setup after loading the view.<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; NSString *path = [[NSBundle mainBundle] pathForResource:@&quot;icon1&quot; ofType:@&quot;png&quot;];<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; // /var/containers/Bundle/Application/086AAB96-982A-4ED5-98F2-C0EC1327D3DB/Test.app/icon1.png<br />
&nbsp; &nbsp; NSLog(@&quot;%@&quot;, path);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; UIImage *source = [UIImage imageNamed:path];<br />
&nbsp; &nbsp; CGImageRef imageRef = [source CGImage];<br />
&nbsp; &nbsp; NSUInteger width = CGImageGetWidth(imageRef);<br />
&nbsp; &nbsp; NSUInteger height = CGImageGetHeight(imageRef);<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; UIImageView *imgView = [[UIImageView new] initWithImage:source];<br />
&nbsp; &nbsp; [imgView setCenter:CGPointMake(150, 150)];<br />
&nbsp; &nbsp; [imgView setBounds:CGRectMake(0, 0, width * 0.5, height * 0.5)];<br />
&nbsp; &nbsp; [self.view addSubview:imgView];<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; [self createOpaqueImage:path];<br />
}<br />
<br />
@end</div></td></tr></tbody></table></div>

</pre>



<p>사용한 이미지: 초록색 배경은 알파값 90% 입니다.</p>



<figure class="wp-block-image"><img data-attachment-id="3698" data-permalink="https://blog.wonhada.com/?attachment_id=3698" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/03/icon1.png" data-orig-size="400,503" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="icon1" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/03/icon1-239x300.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/03/icon1.png" src="https://blog.wonhada.com/wp-content/uploads/2019/03/icon1.png" alt="" class="wp-image-3698" srcset="https://blog.wonhada.com/wp-content/uploads/2019/03/icon1.png 400w, https://blog.wonhada.com/wp-content/uploads/2019/03/icon1-239x300.png 239w" sizes="(max-width: 400px) 100vw, 400px" /></figure>



<p>결과 화면</p>



<figure class="wp-block-image"><img data-attachment-id="3699" data-permalink="https://blog.wonhada.com/?attachment_id=3699" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/03/result.png" data-orig-size="640,1136" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="result" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/03/result-169x300.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/03/result-577x1024.png" src="https://blog.wonhada.com/wp-content/uploads/2019/03/result-577x1024.png" alt="" class="wp-image-3699" srcset="https://blog.wonhada.com/wp-content/uploads/2019/03/result-577x1024.png 577w, https://blog.wonhada.com/wp-content/uploads/2019/03/result-169x300.png 169w, https://blog.wonhada.com/wp-content/uploads/2019/03/result-600x1065.png 600w, https://blog.wonhada.com/wp-content/uploads/2019/03/result.png 640w" sizes="(max-width: 577px) 100vw, 577px" /></figure>



<p></p>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3695</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3695</post-id>	</item>
		<item>
		<title>[Flutter] ListView 샘플 (http, xml 패키지)</title>
		<link>https://blog.wonhada.com/?p=3692</link>
				<comments>https://blog.wonhada.com/?p=3692#comments</comments>
				<pubDate>Thu, 21 Mar 2019 08:15:42 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[플러터[Flutter]]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3692</guid>
				<description><![CDATA[원하다닷컴 블로그 Atom 피드를 보여줍니다. pubspec.yaml main.dart]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="445" height="267"/></a></figure>



<p>원하다닷컴 블로그 <a href="https://blog.wonhada.com/?feed=atom">Atom 피드</a>를 보여줍니다.</p>



<p>pubspec.yaml</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">dependencies:<br />
&nbsp; ...<br />
&nbsp; http: ^0.12.0+1<br />
&nbsp; xml: ^3.4.1<br />
&nbsp; url_launcher: ^5.0.2</div></td></tr></tbody></table></div>

</pre>



<p>main.dart</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br />25<br />26<br />27<br />28<br />29<br />30<br />31<br />32<br />33<br />34<br />35<br />36<br />37<br />38<br />39<br />40<br />41<br />42<br />43<br />44<br />45<br />46<br />47<br />48<br />49<br />50<br />51<br />52<br />53<br />54<br />55<br />56<br />57<br />58<br />59<br />60<br />61<br />62<br />63<br />64<br />65<br />66<br />67<br />68<br />69<br />70<br />71<br />72<br />73<br />74<br />75<br />76<br />77<br />78<br />79<br />80<br />81<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">import 'dart:convert';<br />
import 'package:flutter/material.dart';<br />
import 'package:http/http.dart' as http;<br />
import 'package:xml/xml.dart' as xml;<br />
import 'package:url_launcher/url_launcher.dart';<br />
<br />
void main() =&gt; runApp(MyApp());<br />
<br />
class MyApp extends StatelessWidget {<br />
&nbsp; @override<br />
&nbsp; Widget build(BuildContext context) {<br />
&nbsp; &nbsp; return MaterialApp(<br />
&nbsp; &nbsp; &nbsp; title: 'Flutter ListView Demo',<br />
&nbsp; &nbsp; &nbsp; theme: ThemeData(<br />
&nbsp; &nbsp; &nbsp; &nbsp; primarySwatch: Colors.blue,<br />
&nbsp; &nbsp; &nbsp; ),<br />
&nbsp; &nbsp; &nbsp; home: MyHomePage(title: 'Flutter ListView Sample'),<br />
&nbsp; &nbsp; );<br />
&nbsp; }<br />
}<br />
<br />
class MyHomePage extends StatefulWidget {<br />
&nbsp; MyHomePage({Key key, this.title}) : super(key: key);<br />
<br />
&nbsp; final String title;<br />
<br />
&nbsp; @override<br />
&nbsp; _MyHomePageState createState() =&gt; _MyHomePageState();<br />
}<br />
<br />
class _MyHomePageState extends State&amp;lt;MyHomePage&gt; {<br />
&nbsp; var list = [];<br />
<br />
&nbsp; @override<br />
&nbsp; void initState() {<br />
&nbsp; &nbsp; super.initState();<br />
<br />
&nbsp; &nbsp; this.getData(() {<br />
&nbsp; &nbsp; &nbsp; setState(() { });<br />
&nbsp; &nbsp; });<br />
&nbsp; }<br />
<br />
&nbsp; void getData(Function callback) async {<br />
&nbsp; &nbsp; var response = await http.get(&quot;https://blog.wonhada.com/?feed=atom&quot;);<br />
&nbsp; &nbsp; if (response.statusCode == 200) {<br />
&nbsp; &nbsp; &nbsp; xml.XmlDocument doc = xml.parse(utf8.decode(response.bodyBytes));<br />
&nbsp; &nbsp; &nbsp; list = doc.findAllElements('entry').toList();<br />
&nbsp; &nbsp; &nbsp; callback();<br />
&nbsp; &nbsp; } else {<br />
&nbsp; &nbsp; &nbsp; print(&quot;Error: ${response.statusCode}.&quot;);<br />
&nbsp; &nbsp; }<br />
&nbsp; }<br />
<br />
&nbsp; @override<br />
&nbsp; Widget build(BuildContext context) {<br />
&nbsp; &nbsp; return Scaffold(<br />
&nbsp; &nbsp; &nbsp; appBar: AppBar(<br />
&nbsp; &nbsp; &nbsp; &nbsp; title: Text(widget.title),<br />
&nbsp; &nbsp; &nbsp; ),<br />
&nbsp; &nbsp; &nbsp; body: ListView.builder(<br />
&nbsp; &nbsp; &nbsp; &nbsp; padding: const EdgeInsets.all(10.0),<br />
&nbsp; &nbsp; &nbsp; &nbsp; itemCount: list.length,<br />
&nbsp; &nbsp; &nbsp; &nbsp; itemBuilder: (context, idx) {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(list.length &amp;lt; 1) { return null; }<br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return _buildRow(list[idx]);<br />
&nbsp; &nbsp; &nbsp; &nbsp; },<br />
&nbsp; &nbsp; &nbsp; ),<br />
&nbsp; &nbsp; );<br />
&nbsp; }<br />
<br />
&nbsp; Widget _buildRow(xml.XmlElement elem) {<br />
&nbsp; &nbsp; return ListTile(<br />
&nbsp; &nbsp; &nbsp; title: Text(elem.findElements('title').first.firstChild.text),<br />
&nbsp; &nbsp; &nbsp; subtitle: Text(elem.findElements('published').first.firstChild.text),<br />
&nbsp; &nbsp; &nbsp; onTap: () {<br />
&nbsp; &nbsp; &nbsp; &nbsp; launch(elem.findElements('link').first.getAttribute('href'));<br />
&nbsp; &nbsp; &nbsp; },<br />
&nbsp; &nbsp; );<br />
&nbsp; }<br />
}</div></td></tr></tbody></table></div>

</pre>



<figure class="wp-block-image"><img src="https://lh3.googleusercontent.com/eGSEYy1OZfuLDr4oIkx3yHY9EpsP3-mjc7grEgrFJlGXSf0ee4zdzZVW3o2IIGomNdqa0NdgeuBsZLyB6J82pKUPHIhYBcuQA1hUn782BnVhxblh_yXetD-lBATd7yhSrxBGbg71ABZ7s18AC5BQiWoJ9OMIsHAJHbPQ0_g18fhnghgQ1sMZF2p99XoeLiNadssyTDec5CJts7rGqMKzq3WvFcBgtRoZtLiM-hn-Tq2rocHsDWgKcozGRZFDo50T5M1seTXxtxXF1mDgztc4BGiaxWsJjLFqTNwVwix0QxNIhsNTYQUT8HX9QH5QR4wb1bWXZJYu11AArKBSB5te3pRQH_kC6v95Sl0_VzF5FrkecEkRUCRUmxajf4cxMmIQ8c37nguUrrJG6p2rDAqIbAmBv1GuChp3_mTiQ6IkXAYnfh2P_zdEHC8pv-PgnPLiryjtaOxI1ErgGi-ckAf2MkJc6n9iAl9OJF8Gx3oZ6TRBuTY7PLvIysZtTldOqNZNmg1M-bvJ-ajxcRDqZQtWaGqt-2MJOLubE84C1FsIbeuFw9BzrkNCoW4PaxJP4rehXowdYSQi5W7TWoXjDAs19qRyCcM1LGzrE_XRuRkMuap_nConZzyOoik9ekpkvZNzQe-W3-p286SgrEhH1MwIf-PWjAaUWC6S=w545-h1119-no" alt=""/></figure>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3692</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3692</post-id>	</item>
		<item>
		<title>CodeIgniter + MySQL 이모지(Emoji) 지원</title>
		<link>https://blog.wonhada.com/?p=3685</link>
				<comments>https://blog.wonhada.com/?p=3685#comments</comments>
				<pubDate>Wed, 20 Mar 2019 03:10:54 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[PHP]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3685</guid>
				<description><![CDATA[MySQL 5.5.3부터 &#8216;utf8mb4&#8217; 캐릭터셋을 지원합니다. 제 서버는 기존에 모두 &#8216;utf8_general_ci&#8217;로 설정이 되어 있어서 텍스트 저장 필드에 이모지가 들어가지 않았습니다. utf8은 3바이트까지 지원하는데 이모지는 4바이트이기 때문입니다. 그래서 모든 필드를 바꿀 수는 없고 해당 필드만 &#8216;utf8mb4_general_ci&#8217;로 변경했습니다. &#8216;utf8mb4_unicode_ci&#8217;로 해도 됩니다. 필드에 이모지가... <a class="more-link" href="https://blog.wonhada.com/?p=3685">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<p>MySQL 5.5.3부터 &#8216;utf8mb4&#8217; 캐릭터셋을 지원합니다. 제 서버는 기존에 모두 &#8216;utf8_general_ci&#8217;로 설정이 되어 있어서 텍스트 저장 필드에 이모지가 들어가지 않았습니다. utf8은 3바이트까지 지원하는데 이모지는 4바이트이기 때문입니다.</p>



<p>그래서 모든 필드를 바꿀 수는 없고 해당 필드만 &#8216;utf8mb4_general_ci&#8217;로 변경했습니다. &#8216;utf8mb4_unicode_ci&#8217;로 해도 됩니다.</p>



<p>필드에 이모지가 잘 들어갑니다.</p>



<figure class="wp-block-image"><img data-attachment-id="3686" data-permalink="https://blog.wonhada.com/?attachment_id=3686" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-2.png" data-orig-size="41,92" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-2.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-2.png" src="https://blog.wonhada.com/wp-content/uploads/2019/03/image-2.png" alt="" class="wp-image-3686"/></figure>



<p>그런데 앱에서 보내온 이모지는 &#8216;????&#8217;로 변환되어 들어가더군요. CodeIgniter의 database.php의 캐릭터셋을 수정해야 합니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">'char_set' =&gt; 'utf8mb4',<br />
'dbcollat' =&gt; 'utf8mb4_general_ci',</div></td></tr></tbody></table></div>

</pre>



<p>제대로 동작합니다. &#8216;utf8_general_ci&#8217;만으로 구성된 DB들도 문제없이 동작하네요. 살펴보니 필드 하나만 변경해도 전체 콜레이션이 변경됨을 알 수 있었습니다. 물론 기존 utf8 필드들은 그대로 있고요.</p>



<figure class="wp-block-image"><img data-attachment-id="3687" data-permalink="https://blog.wonhada.com/?attachment_id=3687" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-3.png" data-orig-size="407,32" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-3-300x24.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-3.png" src="https://blog.wonhada.com/wp-content/uploads/2019/03/image-3.png" alt="" class="wp-image-3687" srcset="https://blog.wonhada.com/wp-content/uploads/2019/03/image-3.png 407w, https://blog.wonhada.com/wp-content/uploads/2019/03/image-3-300x24.png 300w" sizes="(max-width: 407px) 100vw, 407px" /></figure>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3685</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3685</post-id>	</item>
		<item>
		<title>우분투 서버 타임존(timezone) 설정 + Nginx에 적용</title>
		<link>https://blog.wonhada.com/?p=3680</link>
				<comments>https://blog.wonhada.com/?p=3680#comments</comments>
				<pubDate>Tue, 19 Mar 2019 02:44:21 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[AWS]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3680</guid>
				<description><![CDATA[AWS에 우분투 서버 설치 후 타임존을 변경하는 방법입니다. 잘 변경됐는지 확인합니다. 제대로 변경됐습니다. 그런데 한 가지 문제가 있었는데요. Crontab에 스케줄을 걸었더니 다른 시간에 실행이 되네요. 문제 해결을 위해 AWS 해외 리전의 경우 Nginx에 따로 설정해 줘야 할게 있습니다. &#8216;/etc/nginx/sites-available&#8217; 폴더의... <a class="more-link" href="https://blog.wonhada.com/?p=3680">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<p>AWS에 우분투 서버 설치 후 타임존을 변경하는 방법입니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">$ sudo dpkg-reconfigure tzdata</div></td></tr></tbody></table></div>

</pre>



<figure class="wp-block-image"><img data-attachment-id="3681" data-permalink="https://blog.wonhada.com/?attachment_id=3681" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image.png" data-orig-size="529,283" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-300x160.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image.png" src="https://blog.wonhada.com/wp-content/uploads/2019/03/image.png" alt="" class="wp-image-3681" srcset="https://blog.wonhada.com/wp-content/uploads/2019/03/image.png 529w, https://blog.wonhada.com/wp-content/uploads/2019/03/image-300x160.png 300w" sizes="(max-width: 529px) 100vw, 529px" /></figure>



<figure class="wp-block-image"><img data-attachment-id="3682" data-permalink="https://blog.wonhada.com/?attachment_id=3682" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-1.png" data-orig-size="494,281" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-1-300x171.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/03/image-1.png" src="https://blog.wonhada.com/wp-content/uploads/2019/03/image-1.png" alt="" class="wp-image-3682" srcset="https://blog.wonhada.com/wp-content/uploads/2019/03/image-1.png 494w, https://blog.wonhada.com/wp-content/uploads/2019/03/image-1-300x171.png 300w" sizes="(max-width: 494px) 100vw, 494px" /></figure>



<p>잘 변경됐는지 확인합니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">$ date<br />
Tue Mar 19 11:38:35 KST 2019</div></td></tr></tbody></table></div>

</pre>



<p>제대로 변경됐습니다. 그런데 한 가지 문제가 있었는데요. Crontab에 스케줄을 걸었더니 다른 시간에 실행이 되네요. 문제 해결을 위해 AWS 해외 리전의 경우 Nginx에 따로 설정해 줘야 할게 있습니다. &#8216;/etc/nginx/sites-available&#8217; 폴더의 파일들을 열고 아래와 같이 한 줄을 추가합니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">server {<br />
&nbsp; &nbsp; ....<br />
&nbsp; &nbsp; autoindex_localtime on;</div></td></tr></tbody></table></div>

</pre>



<p>Nginx를 재시작하면 정상 동작합니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">/etc/init.d/nginx restart<br />
/etc/init.d/cron restart</div></td></tr></tbody></table></div>

</pre>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3680</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3680</post-id>	</item>
		<item>
		<title>AWS RDS 인스턴스 변경 및 메인 버전 변경</title>
		<link>https://blog.wonhada.com/?p=3677</link>
				<comments>https://blog.wonhada.com/?p=3677#comments</comments>
				<pubDate>Thu, 14 Mar 2019 06:02:00 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[AWS]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3677</guid>
				<description><![CDATA[처음 RDS 인스턴스 생성 시 MySQL 5.7이 베타였으므로 안정적인 5.6을 선택했었습니다. 하지만 새로운 프로젝트에서 자유로운 검색 및 위치 기반 서비스를 해야 해서 5.7로 업그레이드를 해야 하는 상황이 되었는데요. 메인 버전은 그냥 올릴 수 없더군요. 그래서 검색을 해봤으나 딱히 제대로 알려주는게... <a class="more-link" href="https://blog.wonhada.com/?p=3677">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="450" height="270"/></a></figure>



<p>처음 RDS 인스턴스 생성 시 MySQL 5.7이 베타였으므로 안정적인 5.6을 선택했었습니다. 하지만 새로운 프로젝트에서 자유로운 검색 및 위치 기반 서비스를 해야 해서 5.7로 업그레이드를 해야 하는 상황이 되었는데요. 메인 버전은 그냥 올릴 수 없더군요. 그래서 검색을 해봤으나 딱히 제대로 알려주는게 없어서 고민을 좀 하다가 방법을 찾았습니다.</p>



<p>저는 아래와 같이 진행해서 변경을 잘 마쳤습니다.<br>1.RDS 스냅샷 생성 (27기가 정도 약 1분 소요)<br>2.스냅샷 복원 (DB 버전 및 인스턴스 선택, 약 40분 소요)<br>  &#8211; 생성 중에는 &#8216;읽기&#8217; role이지만 완료되면 &#8216;쓰기&#8217;로 바뀜<br>3.완료 후 서비스들의 DB 엔드포인트 변경</p>



<p>이상입니다. 전체 걸린 시간은 약 1시간 정도네요.</p>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3677</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3677</post-id>	</item>
		<item>
		<title>SpriteWidget [Flutter용 2D 게임 엔진]</title>
		<link>https://blog.wonhada.com/?p=3664</link>
				<comments>https://blog.wonhada.com/?p=3664#comments</comments>
				<pubDate>Wed, 20 Feb 2019 03:17:45 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[플러터[Flutter]]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3664</guid>
				<description><![CDATA[https://www.spritewidget.com pubspec.yaml 노드(Node) 아래에 노드가 들어가는 구조입니다. 편의상 최상위 노드를 rootNode라는 변수명으로 만듭니다. SpriteWidget은 레터 박스(letterbox)를 사용하여 내용을 표시합니다. 즉, 루트 노드에 지정하는 크기에 따라 SpriteWidget의 내용이 크기에 맞게 조정됩니다. 위젯 영역에 완벽하게 맞지 않으면 상단과 하단 또는 왼쪽과 오른쪽... <a class="more-link" href="https://blog.wonhada.com/?p=3664">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="457" height="274"/></a></figure>



<p><a href="https://www.spritewidget.com/">https://www.spritewidget.com</a></p>



<p>pubspec.yaml</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">dependencies:<br />
&nbsp; flutter:<br />
&nbsp; &nbsp; sdk: flutter<br />
&nbsp; spritewidget:</div></td></tr></tbody></table></div>

</pre>



<p>노드(Node) 아래에 노드가 들어가는 구조입니다. 편의상 최상위 노드를 rootNode라는 변수명으로 만듭니다.</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">import 'package:flutter/material.dart';<br />
import 'package:spritewidget/spritewidget.dart';<br />
<br />
void main() =&gt; runApp(MyWidget());<br />
<br />
class MyWidget extends StatefulWidget {<br />
&nbsp; @override<br />
&nbsp; MyWidgetState createState() =&gt; new MyWidgetState();<br />
}<br />
<br />
class MyWidgetState extends State&amp;lt;MyWidget&gt; {<br />
&nbsp; NodeWithSize rootNode;<br />
<br />
&nbsp; @override<br />
&nbsp; void initState() {<br />
&nbsp; &nbsp; super.initState();<br />
&nbsp; &nbsp; rootNode = new NodeWithSize(const Size(1024.0, 1024.0));<br />
&nbsp; }<br />
<br />
&nbsp; @override<br />
&nbsp; Widget build(BuildContext context) {<br />
&nbsp; &nbsp; return new SpriteWidget(rootNode);<br />
&nbsp; }<br />
}</div></td></tr></tbody></table></div>

</pre>



<p>SpriteWidget은 레터 박스(letterbox)를 사용하여 내용을 표시합니다. 즉, 루트 노드에 지정하는 크기에 따라 SpriteWidget의 내용이 크기에 맞게 조정됩니다. 위젯 영역에 완벽하게 맞지 않으면 상단과 하단 또는 왼쪽과 오른쪽 중 하나가 잘립니다.<br><br>앱의 빌드 메소드에 SpriteWidget을 추가하면 애니메이션 실행과 사용자 입력 처리가 자동으로 시작됩니다. 다른 추가 설정이 필요 없습니다.</p>



<p>이미지 추가</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br />15<br />16<br />17<br />18<br />19<br />20<br />21<br />22<br />23<br />24<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">ImageMap imgMap;<br />
<br />
Future&amp;lt;Null&gt; _loadAssets(AssetBundle bundle) async {<br />
&nbsp; imgMap = ImageMap(bundle);<br />
&nbsp; await imgMap.load(&amp;lt;String&gt;[<br />
&nbsp; &nbsp; &quot;assets/icon.png&quot;<br />
&nbsp; ]);<br />
}<br />
<br />
@override<br />
void initState() {<br />
&nbsp; super.initState();<br />
&nbsp; rootNode = NodeWithSize(Size(720.0, 600.0));<br />
<br />
&nbsp; AssetBundle bundle = rootBundle;<br />
<br />
&nbsp; _loadAssets(bundle).then((_) {<br />
&nbsp; &nbsp; Sprite icon = Sprite.fromImage(imgMap[&quot;assets/icon.png&quot;]);<br />
&nbsp; &nbsp; icon.pivot = Offset(0, 0);<br />
&nbsp; &nbsp; icon.size = Size(398, 500);<br />
&nbsp; &nbsp; icon.position = Offset(100, 50);<br />
&nbsp; &nbsp; rootNode.addChild(icon);<br />
&nbsp; });<br />
}</div></td></tr></tbody></table></div>

</pre>



<p>Flutter의 Canvas를 이용하며 렌더링 퍼포먼스 테스트 결과 코로나보다 조금 더 나은 수준이지만 캡쳐 퀄리티는 훨씬 떨어집니다. 게임쪽은 좀 더 개선된 다음 써야 할 듯.</p>



<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<iframe class='youtube-player' type='text/html' width='676' height='381' src='https://www.youtube.com/embed/eY5LOn5TGRs?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe>
</div></figure>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3664</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3664</post-id>	</item>
		<item>
		<title>Hapi.js 설정하기</title>
		<link>https://blog.wonhada.com/?p=3660</link>
				<comments>https://blog.wonhada.com/?p=3660#comments</comments>
				<pubDate>Thu, 14 Feb 2019 07:06:50 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[Node.js]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3660</guid>
				<description><![CDATA[Node.js 작업할 때 Express.js를 많이 썼었는데 이번엔 가벼운 프레임웍을 쓰고 싶어서 Hapi.js를 사용했습니다. SSL 설정 CORS 지원 GET 처리 POST 처리]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="457" height="274"/></a></figure>



<p>Node.js 작업할 때 Express.js를 많이 썼었는데 이번엔 가벼운 프레임웍을 쓰고 싶어서 Hapi.js를 사용했습니다.</p>



<p>SSL 설정</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">'use strict';<br />
<br />
const Hapi = require('hapi');<br />
var fs = require('fs');<br />
<br />
var options = {<br />
&nbsp; &nbsp; key: fs.readFileSync('~/privkey.pem'),<br />
&nbsp; &nbsp; cert: fs.readFileSync('~/cert.pem'),<br />
&nbsp; &nbsp; ca: fs.readFileSync('~/chain.pem')<br />
};<br />
<br />
const server = new Hapi.Server();<br />
server.connection({address: 'localhost', port: 3000, tls: options});</div></td></tr></tbody></table></div>

</pre>



<p>CORS 지원</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">server.connection({address: 'localhost', port: 3000, tls: options, routes: {cors: {origin: ['*']}} });</div></td></tr></tbody></table></div>

</pre>



<p>GET 처리</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br />9<br />10<br />11<br />12<br />13<br />14<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">const mongojs = require('mongojs');<br />
server.app.db = mongojs('test', ['users']);// test: DB, users: Collection(Table)<br />
<br />
server.route({<br />
&nbsp; &nbsp; method: 'GET',<br />
&nbsp; &nbsp; path:'/', <br />
&nbsp; &nbsp; handler: function (request, reply) {<br />
&nbsp; &nbsp; &nbsp; &nbsp; // request.query.foo<br />
&nbsp; &nbsp; &nbsp; &nbsp; var _db = server.app.db;<br />
&nbsp; &nbsp; &nbsp; &nbsp; _db.users.find({}, &nbsp;{name:1, _id:1}, function (error, data) {<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; reply(data);<br />
&nbsp; &nbsp; &nbsp; &nbsp; });<br />
&nbsp; &nbsp; }<br />
});</div></td></tr></tbody></table></div>

</pre>



<p>POST 처리</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br />7<br />8<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">server.route({<br />
&nbsp; &nbsp; method: 'POST',<br />
&nbsp; &nbsp; path:'/{projectName}/save',<br />
&nbsp; &nbsp; handler: function (request, reply) {<br />
&nbsp; &nbsp; &nbsp; // request.params.projectName<br />
&nbsp; &nbsp; &nbsp; // request.payload.arr<br />
&nbsp; &nbsp; }<br />
});</div></td></tr></tbody></table></div>

</pre>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3660</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3660</post-id>	</item>
		<item>
		<title>Amazon (AWS) DynamoDB 사용하기</title>
		<link>https://blog.wonhada.com/?p=3652</link>
				<comments>https://blog.wonhada.com/?p=3652#comments</comments>
				<pubDate>Thu, 14 Feb 2019 05:29:21 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[AWS]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3652</guid>
				<description><![CDATA[https://console.aws.amazon.com/dynamodb NoSQL 서버입니다. 이미 AWS Aurora 서버도 쓰고 있지만 대량의 데이터 처리를 위해 사용하기로 했습니다. 결론부터 말하자면 온디맨드 설정 후 테스트로 10,000개의 데이터(개당 64바이트)를 동시에 보냈더니 8초 정도 걸렸고 모든 데이터가 문제없이 입력되었습니다. 다이나모(DynamoDB)는 테이블을 생성해서 데이터(모델)를 처리합니다. 처음에 만들... <a class="more-link" href="https://blog.wonhada.com/?p=3652">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<p><a href="https://console.aws.amazon.com/dynamodb">https://console.aws.amazon.com/dynamodb</a></p>



<p>NoSQL 서버입니다. 이미 AWS Aurora 서버도 쓰고 있지만 대량의 데이터 처리를 위해 사용하기로 했습니다. 결론부터 말하자면 온디맨드 설정 후 테스트로 10,000개의 데이터(개당 64바이트)를 동시에 보냈더니 8초 정도 걸렸고 모든 데이터가 문제없이 입력되었습니다.</p>



<p>다이나모(DynamoDB)는 테이블을 생성해서 데이터(모델)를 처리합니다. 처음에 만들 때 고려해야 하는게 하나 있는데요. 파티션 키(Hash Key)와 정렬 키(Range Key)입니다.</p>



<ul><li>파티션 키: RDBMS의 Primary Key와 유사. 파티션 키만 지정할 경우 이미 저장된 파티션 키와 동일한 값 저장 불가.</li><li>정렬 키: RDBMS의 Unique Constraint 설정과 유사. 정렬 키를 지정할 경우 이미 저장된 파티션 키와 정렬 키가 모두 동일한 값 저장 불가. 둘 중 하나씩은 동일한 값 추가 가능.</li></ul>



<p>예를 들어, 각 아이템의 pk와 순서가 있는 테이블을 만든다면..</p>



<figure class="wp-block-image"><img data-attachment-id="3656" data-permalink="https://blog.wonhada.com/?attachment_id=3656" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-3.png" data-orig-size="440,178" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-3-300x121.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-3.png" src="https://blog.wonhada.com/wp-content/uploads/2019/02/image-3.png" alt="" class="wp-image-3656" srcset="https://blog.wonhada.com/wp-content/uploads/2019/02/image-3.png 440w, https://blog.wonhada.com/wp-content/uploads/2019/02/image-3-300x121.png 300w" sizes="(max-width: 440px) 100vw, 440px" /></figure>



<p>동일한 item_pk가 입력 가능하고, order는 0이나 1부터 오름차순으로 순서대로 입력 가능합니다. 결국 둘을 조합하면 고유합니다. (Unique Constraint)</p>



<p>테이블 생성 후 프로젝트 성격에 따라 아래와 같이 &#8216;용량&#8217;을 수정할 필요가 있습니다. 기본은 아래와 같이 &#8216;할당됨&#8217; 인데요. 데이터 흐름량에 따라 읽기/쓰기 용량을 정할 수 있습니다. 참고로 아래와 같이 기본 5를 설정한 다음 10,000개의 요청을 한꺼번에 보내면 1,500개 정도만 처리됩니다.</p>



<figure class="wp-block-image"><img data-attachment-id="3654" data-permalink="https://blog.wonhada.com/?attachment_id=3654" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-1.png" data-orig-size="636,627" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-1-300x296.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-1.png" src="https://blog.wonhada.com/wp-content/uploads/2019/02/image-1.png" alt="" class="wp-image-3654" srcset="https://blog.wonhada.com/wp-content/uploads/2019/02/image-1.png 636w, https://blog.wonhada.com/wp-content/uploads/2019/02/image-1-300x296.png 300w, https://blog.wonhada.com/wp-content/uploads/2019/02/image-1-600x592.png 600w" sizes="(max-width: 636px) 100vw, 636px" /></figure>



<p>저희 서비스(Colorfil, 컬러필)는 상당히 많은 요청을 처리할 것이므로 온디맨드로 변경했습니다. 처리되는 시간이 좀 걸립니다. 처음에 말한 것처럼 온디맨드 설정 후 테스트로 10,000개의 데이터(개당 64바이트)를 동시에 보냈더니 8초 정도 걸렸고 모든 데이터가 문제없이 입력되었습니다.</p>



<figure class="wp-block-image"><img data-attachment-id="3655" data-permalink="https://blog.wonhada.com/?attachment_id=3655" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-2.png" data-orig-size="639,470" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-2-300x221.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2019/02/image-2.png" src="https://blog.wonhada.com/wp-content/uploads/2019/02/image-2.png" alt="" class="wp-image-3655" srcset="https://blog.wonhada.com/wp-content/uploads/2019/02/image-2.png 639w, https://blog.wonhada.com/wp-content/uploads/2019/02/image-2-300x221.png 300w, https://blog.wonhada.com/wp-content/uploads/2019/02/image-2-600x441.png 600w" sizes="(max-width: 639px) 100vw, 639px" /></figure>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3652</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3652</post-id>	</item>
		<item>
		<title>Cocos2D-X 환경 설정 [MAC]</title>
		<link>https://blog.wonhada.com/?p=3629</link>
				<comments>https://blog.wonhada.com/?p=3629#comments</comments>
				<pubDate>Wed, 23 Jan 2019 03:02:23 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[Cocos2d-x]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3629</guid>
				<description><![CDATA[Cocos2D-X 설치 새 프로젝트 생성 안드로이드는 Android Studio에서 &#8216;proj.android&#8217; 프로젝트 열어서 빌드]]></description>
								<content:encoded><![CDATA[
<figure class="wp-block-image is-resized"><a href="https://smartstore.naver.com/hangloshop/notice/content/2000863362?parameter=%7B%22currentPageLayout%22%3A%22LAYOUT5%22%2C%22type%22%3A%22%22%2C%22typeSelect%22%3A%22%EC%A0%84%EC%B2%B4%22%2C%22noticeKeyword%22%3A%22%22%2C%22page.page%22%3A1%2C%22page.size%22%3A15%7D" target="_blank" rel="noreferrer noopener"><img src="http://j.mp/2KwlZiM" alt="" width="448" height="269"/></a></figure>



<p>Cocos2D-X 설치</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br />5<br />6<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">cd {새로운 폴더를 생성할 루트 폴더}<br />
git clone https://github.com/cocos2d/cocos2d-x.git<br />
cd cocos2d-x<br />
./download-deps.py<br />
git submodule update --init<br />
./setup.py</div></td></tr></tbody></table></div>

</pre>



<p>새 프로젝트 생성</p>



<pre class="wp-block-code">

<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br />2<br />3<br />4<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">cd {새로운 폴더를 생성할 프로젝트 루트 폴더}<br />
cocos new {프로젝트명} -l cpp -p {패키지명 ex)com.wonhada.test}<br />
cd MyCppGame (생성된 폴더명)<br />
cocos run -p mac (또는 ios)</div></td></tr></tbody></table></div>

</pre>



<p>안드로이드는 Android Studio에서 &#8216;proj.android&#8217; 프로젝트 열어서 빌드</p>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3629</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3629</post-id>	</item>
		<item>
		<title>[CodeIgniter] DB 필드를 JSON으로 만들기</title>
		<link>https://blog.wonhada.com/?p=3614</link>
				<comments>https://blog.wonhada.com/?p=3614#comments</comments>
				<pubDate>Mon, 17 Dec 2018 07:42:51 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[PHP]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3614</guid>
				<description><![CDATA[일반적으로는 아래와 같이 하면 됩니다. $result = $this-&#62;…_model-&#62;getList();echo json_encode($result); 그런데 만약 $result 내에 desc 라는 멤버가 json 타입의 문자열이라면 json_encode() 결과에 &#8220;desc&#8221;:&#8221;\&#8221;key\&#8221;:\&#8221;value\&#8221;&#8221; 처럼 나오게 됩니다. 클라이언트에서 문자열 replace() 를 하는 등 번거롭죠. 그럴 때는 아래와 같이 desc 멤버를 json 객체로... <a class="more-link" href="https://blog.wonhada.com/?p=3614">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<p>일반적으로는 아래와 같이 하면 됩니다.</p>



<pre class="wp-block-preformatted">$result = $this-&gt;…_model-&gt;getList();<br>echo json_encode($result);</pre>



<p>그런데 만약 $result 내에 desc 라는 멤버가 json 타입의 문자열이라면 json_encode() 결과에 &#8220;desc&#8221;:&#8221;\&#8221;key\&#8221;:\&#8221;value\&#8221;&#8221; 처럼 나오게 됩니다. 클라이언트에서 문자열 replace() 를 하는 등 번거롭죠. 그럴 때는 아래와 같이 desc 멤버를 json 객체로 만든 다음 json_encode() 하세요.</p>



<pre class="wp-block-preformatted">$result = $this->…_model->getList();<br>foreach($result as &amp;$item)<br>{<br>    $item->desc = json_decode($item->desc);<br>}<br>echo json_encode($result);</pre>



<p>&#8220;desc&#8221;:{&#8220;key&#8221;:&#8221;value&#8221;} 이렇게 나올 것입니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3614</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3614</post-id>	</item>
		<item>
		<title>맥북 프로 2011년형 &#8211; Lion 부터 High Sierra 까지 설치기 =_=</title>
		<link>https://blog.wonhada.com/?p=3600</link>
				<comments>https://blog.wonhada.com/?p=3600#comments</comments>
				<pubDate>Fri, 07 Dec 2018 10:35:12 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[미분류]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3600</guid>
				<description><![CDATA[원인 :: 패러럴즈에서 공인인증서 로그인 실패 (nh 투자증권만 =_=) 하이 시에라 이후 모하비가 나왔으나 설치 안 됨 부트캠프로 원도우 설치 안 됨 (Windows 8.1 조차) 해결책 강구 :: macOS를 다운그레이드 하자 부트캠프로 윈도우를 설치하자 하이 시에라로 업데이트 하자 현실 ::... <a class="more-link" href="https://blog.wonhada.com/?p=3600">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[
<p>

원인 ::
</p>



<ul><li>패러럴즈에서 공인인증서 로그인 실패 (nh 투자증권만 =_=)
</li><li>하이 시에라 이후 모하비가 나왔으나 설치 안 됨
</li><li>부트캠프로 원도우 설치 안 됨 (Windows 8.1 조차)
</li></ul>



<p>해결책 강구 ::
</p>



<ul><li>macOS를 다운그레이드 하자
</li><li>부트캠프로 윈도우를 설치하자
</li><li>하이 시에라로 업데이트 하자
</li></ul>



<p>현실 ::
</p>



<ul><li>인터넷 복구를 통해 Lion 설치함 (Option + Command + R)
</li><li>부트캠프는 Windows 7만 지원됨 (10 쓸건데)
</li><li>안되겠다 다시 하이 시에라로 돌아가자
</li><li>복구하려면 빙빙 돌아가야 함
</li></ul>



<p>빙빙 돌아가기 ::
</p>



<ul><li><a href="https://cafe.naver.com/inmacbook/1502830">https://cafe.naver.com/inmacbook/1502830</a>&nbsp;앱스토어 링크 발견 (dmg 파일도 있으나 스토어에서 직접 받음)</li><li>엘 캐피탄을 먼저 설치해야 결국 하이 시에라로 갈 수 있음 (<a href="https://itunes.apple.com/kr/app/os-x-el-capitan/id1147835434?mt=12">https://itunes.apple.com/kr/app/os-x-el-capitan/id1147835434?mt=12</a>)</li><li>부트캠프 설치 시작하니 ‘설치 프로그램 디스크를 찾을 수 없습니다&#8217; =_=</li><li>시에라를 설치해야 한다고 했으나 곧바로 하이 시에라 설치</li><li><del>시에라 설치 (</del><a href="https://itunes.apple.com/kr/app/macos-sierra/id1127487414?mt=12"><del>https://itunes.apple.com/kr/app/macos-sierra/id1127487414?mt=12</del></a><del>)</del></li><li>하이 시에라 설치 (<a href="https://itunes.apple.com/kr/app/macos-high-sierra/id1246284741?mt=12">https://itunes.apple.com/kr/app/macos-high-sierra/id1246284741?mt=12</a>)</li></ul>



<p>결론 ::
</p>



<ul><li>nh 투자증권은 윈도우 PC에서 할 것
</li><li>모하비 설치할 생각은 하지 말 것
</li><li>부트캠프 쓸 생각도 하지 말 것
</li></ul>



<p>아쉬움 ::
</p>



<ul><li>Lion에서 윈7 설치 후 맥 업그레이드 하고 윈10으로 업그레이드 했다면?</li><li>(혹시 성공하면 알려주시길..)</li><li>다시 하려니 너무 귀찮다. 맥만 쓰자.</li></ul>



<p>참고 자료 ::
</p>



<ul><li>모하비 (<a href="https://itunes.apple.com/kr/app/macos-mojave/id1398502828?mt=12">https://itunes.apple.com/kr/app/macos-mojave/id1398502828?mt=12</a>)
</li><li>전체 다운로드 주소:&nbsp;<a href="http://kimsungjin.tistory.com/184">http://kimsungjin.tistory.com/184</a>
</li></ul>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3600</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3600</post-id>	</item>
		<item>
		<title>Xcode 10 &#8211; &#8216;Command SetMode failed with a nonzero exit code&#8217; 에러</title>
		<link>https://blog.wonhada.com/?p=3590</link>
				<comments>https://blog.wonhada.com/?p=3590#comments</comments>
				<pubDate>Thu, 25 Oct 2018 09:17:17 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[iOS/Mac]]></category>
		<category><![CDATA[네이티브[엔터프라이즈]]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3590</guid>
				<description><![CDATA[&#8216;Command SetMode failed with a nonzero exit code&#8217; 에러가 난다면..]]></description>
								<content:encoded><![CDATA[<p>&#8216;Command SetMode failed with a nonzero exit code&#8217; 에러가 난다면..</p>
<p><img data-attachment-id="3591" data-permalink="https://blog.wonhada.com/?attachment_id=3591" data-orig-file="https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG.png" data-orig-size="842,251" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="4rXAG" data-image-description="" data-medium-file="https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG-300x89.png" data-large-file="https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG.png" src="https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG.png" alt="" width="842" height="251" class="alignnone size-full wp-image-3591" srcset="https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG.png 842w, https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG-300x89.png 300w, https://blog.wonhada.com/wp-content/uploads/2018/10/4rXAG-600x179.png 600w" sizes="(max-width: 842px) 100vw, 842px" /></p>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3590</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3590</post-id>	</item>
		<item>
		<title>Xcode 10 &#8211; Corona Native Errors</title>
		<link>https://blog.wonhada.com/?p=3587</link>
				<comments>https://blog.wonhada.com/?p=3587#comments</comments>
				<pubDate>Fri, 12 Oct 2018 07:01:50 +0000</pubDate>
		<dc:creator><![CDATA[원강민]]></dc:creator>
				<category><![CDATA[네이티브[엔터프라이즈]]]></category>

		<guid isPermaLink="false">https://blog.wonhada.com/?p=3587</guid>
				<description><![CDATA[1error: Multiple commands produce '/Users/.../Library/Developer/Xcode/DerivedData/App-anfmiuceddfobrarbjnibdilymgz/Build/Products/Debug-iphoneos/App.app/README.md': 위와 같은 에러는 프로젝트에 포함된 파일 중 CocoaPods로 받아온 파일들과 중복된 경우 나타남. 파일들을 지워주면 해결됨. 1error: /Users/.../ios/~/Library/Application Support/Corona/Native/Corona/shared/resource/Corona3rdPartyLicenses.txt: No such file or directory 위와 같이 에러가 난다면 Sublime Text 등의 에디터로 &#8216;App.xcodeproj&#8217; 파일을 열고... <a class="more-link" href="https://blog.wonhada.com/?p=3587">Continue Reading &#8594;</a>]]></description>
								<content:encoded><![CDATA[<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">error: Multiple commands produce '/Users/.../Library/Developer/Xcode/DerivedData/App-anfmiuceddfobrarbjnibdilymgz/Build/Products/Debug-iphoneos/App.app/README.md':</div></td></tr></tbody></table></div>
<p>위와 같은 에러는 프로젝트에 포함된 파일 중 CocoaPods로 받아온 파일들과 중복된 경우 나타남. 파일들을 지워주면 해결됨.</p>
<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">error: /Users/.../ios/~/Library/Application Support/Corona/Native/Corona/shared/resource/Corona3rdPartyLicenses.txt: No such file or directory</div></td></tr></tbody></table></div>
<p>위와 같이 에러가 난다면 Sublime Text 등의 에디터로 &#8216;App.xcodeproj&#8217; 파일을 열고 &#8216;project.pbxproj&#8217; 파일 선택 후 ~ 를 찾아서 $HOME 으로 바꿔주면 해결됨.</p>
<p>검색 ::</p>
<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">path = &quot;~/</div></td></tr></tbody></table></div>
<p>수정 ::</p>
<div class="codecolorer-container text dawn" style="overflow:auto;white-space:nowrap;border:1px solid #9F9F9F;width:560px;"><table cellspacing="0" cellpadding="0"><tbody><tr><td style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;text-align:center;color:#888888;background-color:#EEEEEE;border-right: 1px solid #9F9F9F;"><div>1<br /></div></td><td><div class="text codecolorer" style="padding:5px;font:normal 12px/1.4em Monaco, Lucida Console, monospace;white-space:nowrap;">path = &quot;$HOME/</div></td></tr></tbody></table></div>
]]></content:encoded>
							<wfw:commentRss>https://blog.wonhada.com/?feed=rss2&#038;p=3587</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">3587</post-id>	</item>
	</channel>
</rss>
