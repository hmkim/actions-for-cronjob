<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://mike2ox.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mike2ox.github.io/" rel="alternate" type="text/html" /><updated>2019-04-24T13:08:26+00:00</updated><id>https://mike2ox.github.io/feed.xml</id><title type="html">Light in the Fog</title><subtitle>코딩 삽질보다 요리 삽질이 익숙한 여행자
</subtitle><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><entry><title type="html">주니어 개발자에 필요한 정보들(1)</title><link href="https://mike2ox.github.io/study/summary/2019/04/24/Daily_study.html" rel="alternate" type="text/html" title="주니어 개발자에 필요한 정보들(1)" /><published>2019-04-24T00:00:00+00:00</published><updated>2019-04-24T00:00:00+00:00</updated><id>https://mike2ox.github.io/study/summary/2019/04/24/Daily_study</id><content type="html" xml:base="https://mike2ox.github.io/study/summary/2019/04/24/Daily_study.html">&lt;h4 id=&quot;1-3번째-직장까지jojoldu님-글&quot;&gt;1. &lt;a href=&quot;https://jojoldu.tistory.com/277?category=689637&quot;&gt;3번째 직장까지(jojoldu님 글)&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;4.5개월의 개발 일과(2개월 교육 → 2.5개월 팀프)&lt;/li&gt;
  &lt;li&gt;오전 9시 ~ 오후 9시까지의 교육과 자습&lt;/li&gt;
  &lt;li&gt;따라가기 → &lt;strong&gt;오늘 배운 내용을 다른 사람에게 요약 및 정리&lt;/strong&gt;
 → 정해진 시간 내에 스스로 정리하는 시간이 필요(수업방식)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;포폴보단 github과 개인 기술 블로그를 더 신뢰, 요구함&lt;/strong&gt;(jojoldu님의 생각)&lt;/li&gt;
  &lt;li&gt;실상은 &lt;code class=&quot;highlighter-rouge&quot;&gt;인터넷에서 돌아가는 코드 search -&amp;gt; ctrl+c/ ctrl+v....&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;국비 교육시 tip
    &lt;ol&gt;
      &lt;li&gt;주제 선정에 열을 쏟지 말 것&lt;/li&gt;
      &lt;li&gt;개인 프로젝트를 더 선호 → &lt;strong&gt;직접 고민하고 개발한 내용을 블로그/github에 남기는게 중요&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;공짜는 절박함을 낮춘다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;뚜렷한 목표와 절박함이 필요.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;자료구조, 데이터베이스, 운영체제, 네트워크는 무조건 꼭 다회 공부&lt;/li&gt;
  &lt;li&gt;대기업 SI와 자체 서비스 기업의 다른 채용과정
    &lt;ol&gt;
      &lt;li&gt;대기업 SI
        &lt;ul&gt;
          &lt;li&gt;서류심사 → 인적성 + (코딩테스트) → 기술면접 → 임원면접
&lt;em&gt;※최근 IT기업에서 코딩테스트 보는 것을 선호해서 추가함.(mike2ox)&lt;/em&gt;&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;회사의 인재상&lt;/strong&gt;에 맞춰야함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;자체 서비스 기업
        &lt;ul&gt;
          &lt;li&gt;서류심사 → 코딩 테스트 + (이론 시험) → 기술면접 → 최종 면접&lt;/li&gt;
          &lt;li&gt;본인이 만든 소프트웨어, 프로젝트 위주의 설명&lt;/li&gt;
          &lt;li&gt;포트폴리오, github을 요구&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;명확한 방향으로 취업준비 
&lt;em&gt;※대기업은 2,3군데정도만 ai직무를 지원하고 나머지는 일반sw, 자체 서비스 기업에는 반반으로 지원(mike2ox)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;기술 면접은 다대다로 진행하면 옆사람에게 질문 토스가 될 수 있음.&lt;/li&gt;
  &lt;li&gt;스타트업이더라도 &lt;strong&gt;코드 리뷰 문화&lt;/strong&gt;와 &lt;strong&gt;적정의 트래픽&lt;/strong&gt;이 이뤄지는 곳으로 가자.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;주니어일때는 아낌없이 본인 공부를 위해 돈을 쓰자. 혼자서 삽질도 중요하지만 시간을 사는거라 생각하자.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;포트폴리오 특성상 보여줄 수 있는건 &lt;strong&gt;기술 스택 / 목적 / 프로젝트 기능 소개 / 화면 등 외형적인 것&lt;/strong&gt;만 포함&lt;/li&gt;
  &lt;li&gt;멤버 모두가 이득을 보는 스터디 유형(&lt;a href=&quot;https://jojoldu.tistory.com/302?category=689637&quot;&gt;관련 정보&lt;/a&gt;)
    &lt;ol&gt;
      &lt;li&gt;직접 강의 하기&lt;/li&gt;
      &lt;li&gt;강의형 스터디 참석하기&lt;/li&gt;
      &lt;li&gt;온라인으로 공부한것 공유하기&lt;/li&gt;
      &lt;li&gt;모여서 각자 코딩하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;2-20대-후반-취업-29살-신입-개발자-가능프로그래머-삶님의-글&quot;&gt;2. &lt;a href=&quot;https://coderlife.tistory.com/608&quot;&gt;20대 후반 취업, 29살 신입 개발자 가능?(‘프로그래머 삶’님의 글)&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;개발에는 나이가 중요하지 않음. &lt;strong&gt;끊임없는 공부와 자기계발이 중요&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;취미와 직업은 다르다
※ 아마추어와 프로는 다르다(mike2ox)&lt;/li&gt;
  &lt;li&gt;하려면 제대로, 최선을 다해서 할 것.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-작심3일-패턴&quot;&gt;3. &lt;a href=&quot;https://github.com/hanbitmedia/Writing-IT-Books/tree/master/3%20Days%20Later?fbclid=IwAR2bVzhP0tNq698lFQ4n_q_RuQnjqPpk_FbzE-iDvkLrQMvxxutISQ0V2pw&quot;&gt;작심3일 패턴&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;짧은 휴일간에 신기술 공부하는 가이드라인 제공&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">1. 3번째 직장까지(jojoldu님 글) 4.5개월의 개발 일과(2개월 교육 → 2.5개월 팀프) 오전 9시 ~ 오후 9시까지의 교육과 자습 따라가기 → 오늘 배운 내용을 다른 사람에게 요약 및 정리 → 정해진 시간 내에 스스로 정리하는 시간이 필요(수업방식) 포폴보단 github과 개인 기술 블로그를 더 신뢰, 요구함(jojoldu님의 생각) 실상은 인터넷에서 돌아가는 코드 search -&amp;gt; ctrl+c/ ctrl+v.... 국비 교육시 tip 주제 선정에 열을 쏟지 말 것 개인 프로젝트를 더 선호 → 직접 고민하고 개발한 내용을 블로그/github에 남기는게 중요 공짜는 절박함을 낮춘다. 뚜렷한 목표와 절박함이 필요.</summary></entry><entry><title type="html">Intern 6 week(Itatech)</title><link href="https://mike2ox.github.io/daily/intern/2018/08/06/Intern-6%EC%A3%BC%EC%B0%A8.html" rel="alternate" type="text/html" title="Intern 6 week(Itatech)" /><published>2018-08-06T00:00:00+00:00</published><updated>2018-08-06T00:00:00+00:00</updated><id>https://mike2ox.github.io/daily/intern/2018/08/06/Intern-6%EC%A3%BC%EC%B0%A8</id><content type="html" xml:base="https://mike2ox.github.io/daily/intern/2018/08/06/Intern-6%EC%A3%BC%EC%B0%A8.html">&lt;h2 id=&quot;project관련&quot;&gt;Project관련&lt;/h2&gt;
&lt;p&gt;지난주 피드백으로 data process를 멈추고 바로 trained model에 학습시킨 결과는,&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;예상외로 잘 검출되었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;였다. 아마도 trained model을 사용하니 retrain단계에 들어가는 시간이 대폭 줄었을 것으로 생각된다. 게다가 검증된 model들을 가져온 것이라 입력단계만 문제없다면 정상적으로 실행되는건 당연하다.&lt;br /&gt;
 모델은 SSD mobile net, Faster R CNN (trained by COCO) 두가지로 진행하였고 Faster R CNN은 sample config에서 일부 요소(opt, data auguments 등)를 수정해서 학습시키기도 했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mike2ox/mike2ox.github.io/master/_data/img/ITATECH_LR.png&quot; width=&quot;45%&quot; align=&quot;&quot; /&gt;
 &lt;img src=&quot;https://raw.githubusercontent.com/mike2ox/mike2ox.github.io/master/_data/img/ITATECH_loss.png&quot; width=&quot;45%&quot; align=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;수정한 Faster R CNN이 좋은 결과가 나와 해당 모델을 가지고 test를 실행하니 생각보다 여러 object들이 있을때도 object detection되어 data 처리단계만 더 진행하면 좋은 결과가 나올거라 예상된다.&lt;/p&gt;

&lt;h2 id=&quot;git-관련&quot;&gt;git 관련&lt;/h2&gt;
&lt;p&gt;object detection부분을 tensorflow api를 가져와서 접목시키는데 커밋을 남길 때 기존 프로젝트와 api에 있는 repository 2개임을 간과해서 커밋이 두 저장소에 섞여서 저장이 되었다.&lt;/p&gt;

&lt;p&gt;만약 후일에 api나 다른 프로젝트를 apply할 때 커밋이 어느 저장소에 되는지 확인작업을 갖도록 해야겠다.&lt;/p&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">Project관련 지난주 피드백으로 data process를 멈추고 바로 trained model에 학습시킨 결과는, 예상외로 잘 검출되었다. 였다. 아마도 trained model을 사용하니 retrain단계에 들어가는 시간이 대폭 줄었을 것으로 생각된다. 게다가 검증된 model들을 가져온 것이라 입력단계만 문제없다면 정상적으로 실행되는건 당연하다. 모델은 SSD mobile net, Faster R CNN (trained by COCO) 두가지로 진행하였고 Faster R CNN은 sample config에서 일부 요소(opt, data auguments 등)를 수정해서 학습시키기도 했다.</summary></entry><entry><title type="html">Intern 5 week(Itatech)</title><link href="https://mike2ox.github.io/daily/intern/2018/07/27/Intern-5%EC%A3%BC%EC%B0%A8.html" rel="alternate" type="text/html" title="Intern 5 week(Itatech)" /><published>2018-07-27T00:00:00+00:00</published><updated>2018-07-27T00:00:00+00:00</updated><id>https://mike2ox.github.io/daily/intern/2018/07/27/Intern-5%EC%A3%BC%EC%B0%A8</id><content type="html" xml:base="https://mike2ox.github.io/daily/intern/2018/07/27/Intern-5%EC%A3%BC%EC%B0%A8.html">&lt;h2 id=&quot;project관련&quot;&gt;Project관련&lt;/h2&gt;
&lt;p&gt;생각했던 것보다 데이터 처리단계에서 시간 소비를 많이 한 것 같다. 작년 kaggle competition에서 데이터 처리가 중요하다는 경험이 악효과를 낳았고 소장님의 피드백으로 다시 프로젝트 진행 방향을 다시 잡을 수 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;성능이 안나와도 Model(or Program)이 Running되는 것이 중요하다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;솔직히 독일에서 일했을 때도 영양가 없이 보낸 시간이 길었는데 이게 처음부터 완벽하려는 습관이 있음을 알았으나 여전히 고쳐지지 않았던거다. 모델설계가 익숙하지 않아 쉽게 단계를 넘어가지 않으려한 버릇도 문제라고 생각이 된다.&lt;br /&gt;
  예상대로면 현재 딥러닝 모델에서 기존 CV 성능과 비교하는 실험을 진행했어야 했는데 일주일은 지연될 것으로 보인다. 일이 조기 마감하기 위해 퇴근 후 기초 지식 공부와 모델 적용 연습을 계획한다.&lt;/p&gt;

&lt;h2 id=&quot;진로-관련&quot;&gt;진로 관련&lt;/h2&gt;
&lt;p&gt;약 열흘전 전시회 이후로 방황하는 진로를 동기, 친척과의 대화를 통해 일단락 나왔다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;정리 해야하는 건 문서(ex. CV, 이론 정리 등)로 정리
분야는 고려하지 말고 채용 공고에 맞게 자소서 준비
전공 기반이 되는 과목은 반복적인 공부
걱정은 하되 빠른 행동으로 짧게만&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;어떻게 보면 당연한 부분이지만 적어놔야지 실천도가 더 올라갈 듯싶어서 작성해보았다.&lt;/p&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">Project관련 생각했던 것보다 데이터 처리단계에서 시간 소비를 많이 한 것 같다. 작년 kaggle competition에서 데이터 처리가 중요하다는 경험이 악효과를 낳았고 소장님의 피드백으로 다시 프로젝트 진행 방향을 다시 잡을 수 있었다.</summary></entry><entry><title type="html">Intern 4 week(Itatech)</title><link href="https://mike2ox.github.io/daily/intern/2018/07/20/Intern-4%EC%A3%BC%EC%B0%A8.html" rel="alternate" type="text/html" title="Intern 4 week(Itatech)" /><published>2018-07-20T00:00:00+00:00</published><updated>2018-07-20T00:00:00+00:00</updated><id>https://mike2ox.github.io/daily/intern/2018/07/20/Intern-4%EC%A3%BC%EC%B0%A8</id><content type="html" xml:base="https://mike2ox.github.io/daily/intern/2018/07/20/Intern-4%EC%A3%BC%EC%B0%A8.html">&lt;h2 id=&quot;multi-label-classfication-관련-자료-조사&quot;&gt;Multi-label Classfication 관련 자료 조사&lt;/h2&gt;

&lt;h2 id=&quot;it-trend-보고서-작성&quot;&gt;IT trend 보고서 작성&lt;/h2&gt;

&lt;p&gt;지난주에 다녀온 2018 국제 인공지능 대전에서 조사한 내용과 관련 자료들을 약식으로 정리를 완료했다. 생각보다 많은 회사, 연구소와 면담을 가져서 각각의 특이점과 공통되는 부분만 요약하는 식으로 마무리를 지었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;컴퓨터비전과 자연어처리가 8, 나머지가 2정도의 비율을 차지&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;딥러닝에서 CV를 접목하기 위해선 Class CV 지식 습득이 필수요소&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;학사로도 지원가능한 곳이 있음 (※ 실제로 채용사이트에서도 많았음)&lt;/p&gt;

      &lt;p&gt;☆ 하지만 학사로 과연 &lt;strong&gt;&lt;em&gt;어느선까지 개발/연구를 할 수 있을지&lt;/em&gt;&lt;/strong&gt; 에 의문 필요&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;low level의 CV와 머신러닝 알고리즘을 알고 있어야 데이터별 적합한 접근법이 도출.&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;졸업까지 남은 6개월은 시점에서 얼마나 실전식 프로젝트, 지식을 쌓을 수 있을지 모르겠으나 공통 필수요건은 &lt;strong&gt;OS 전체 이해도, Algorithm 구현&lt;/strong&gt;으로 보인다.&lt;/p&gt;

&lt;h2 id=&quot;data-extract--make-data-set&quot;&gt;&lt;strong&gt;Data Extract &amp;amp; Make Data set&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;현재 인턴중인 회사에서 진행중인 프로젝트의 data에 대해 분석할 수록 딥러닝 모델보다 &lt;strong&gt;데이터 수집단계&lt;/strong&gt;의 고충을 알아가고 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Img에서 기본적인 CV 용어 및 알고리즘&lt;/li&gt;
  &lt;li&gt;python lib로 적합한 데이터 추출&lt;/li&gt;
  &lt;li&gt;목표에 적합한 label 제작 과정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;특히나, Img에 특정 객체에 대한 Bounding Box GT가 없다보니 label을 직접 제작해야한 과정부터가 난관이었다. 양도 많을 뿐더러 CV 알고리즘 선지식이 부족해 제대로 접근해 가는지도 의문이었다. 현재는 선임분들과의 피드백을 통해 어느정도 방향은 맞게 가고있다. (다만 제작과정이 너무나 노가다…)&lt;/p&gt;

&lt;h2 id=&quot;하반기-계획712월&quot;&gt;하반기 계획(7~12월)&lt;/h2&gt;

&lt;p&gt;앞서 실무에서 겪고있는 데이터 처리 능력 부족에 하반기 계획을 약간 수정해야함을 느꼈다.&lt;/p&gt;

&lt;p&gt;남은 방학 동안(약 6주)에는&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;머신러닝 알고리즘 및 딥러닝 데이터 처리 관련 학습(4주)(병행)&lt;/li&gt;
    &lt;li&gt;OS study(Linux 기반)(4주)(병행)&lt;/li&gt;
    &lt;li&gt;ACM study(python, C++)(6주 병행)&lt;/li&gt;
    &lt;li&gt;Java review –&amp;gt; Simple 프로젝트(10일 단독)&lt;/li&gt;
    &lt;li&gt;카카오 code festibal 참가&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;위주로 진행을 하려한다.&lt;/p&gt;

&lt;p&gt;아쉬운 점은 영어실력에 따라 paper understanding이 달라지기에 원래는 영어부터 완료하려 했다. 
하지만 실질적인 개발부분에 쓰일 알고리즘을 더 공부하기로 방향을 바꾸었고 교재는 &lt;a href=&quot;http://www.hanbit.co.kr/store/books/look.php?p_code=B9267655530&quot;&gt;핸즈온 머신러닝&lt;/a&gt;과 &lt;a href=&quot;http://www.hanbit.co.kr/store/books/look.php?p_code=B2700797734&quot;&gt;머신러닝 실무 프로젝트&lt;/a&gt;로 진행할 생각이다(물론 이 책들은 머신러닝관련).&lt;/p&gt;

&lt;p&gt;카카오 code festibal은 실제 codeing interview를 고려해서 풀어보려 한다. 기간도 얼마 남지 않아서 잘 할지는 모르겠으나 백준이랑 &lt;a href=&quot;http://www.yes24.com/24/goods/15530294?Pcode=010&quot;&gt;코딩 인터뷰&lt;/a&gt;로 공부 진행 중이다.&lt;/p&gt;

&lt;p&gt;마지막 학기(약 12주)에는&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;영어 (TOFLE 90 &amp;gt; )&lt;/li&gt;
    &lt;li&gt;ACM study(C++, python 병행)&lt;/li&gt;
    &lt;li&gt;졸업 프로젝트(CV+DL)&lt;/li&gt;
    &lt;li&gt;Review &amp;amp; Summary (DB, 자료구조, OS) –&amp;gt; 취준&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;생각보다 하반기는 학교생활엔 여유가 있어보인다. (캡디2, 졸논만 들으면 됨) 
상황봐서 채용형 인턴을 할 생각이라 이거 관련해서는 담당자와 상담하고 결정해야겠고 실제로 가게 되도 부족한 부분까지 커버해서 성장할지가 의문이다.(자신의 위치를 다시끔 알게됐기에…)&lt;br /&gt;
방학 막바지에 예전 인턴하면서 지냈던 지인과 학교 교수님들과 상담을 가져볼 계획이다.&lt;/p&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">Multi-label Classfication 관련 자료 조사 IT trend 보고서 작성 지난주에 다녀온 2018 국제 인공지능 대전에서 조사한 내용과 관련 자료들을 약식으로 정리를 완료했다. 생각보다 많은 회사, 연구소와 면담을 가져서 각각의 특이점과 공통되는 부분만 요약하는 식으로 마무리를 지었다.</summary></entry><entry><title type="html">Intern 3 week(Itatech)</title><link href="https://mike2ox.github.io/daily/2018/07/16/Intern-3%EC%A3%BC%EC%B0%A8.html" rel="alternate" type="text/html" title="Intern 3 week(Itatech)" /><published>2018-07-16T00:00:00+00:00</published><updated>2018-07-16T00:00:00+00:00</updated><id>https://mike2ox.github.io/daily/2018/07/16/Intern-3%EC%A3%BC%EC%B0%A8</id><content type="html" xml:base="https://mike2ox.github.io/daily/2018/07/16/Intern-3%EC%A3%BC%EC%B0%A8.html">&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2018 국제 인공지능 대전 전시회 관람&lt;/li&gt;
  &lt;li&gt;프로젝트 방향 재설정&lt;/li&gt;
  &lt;li&gt;Data 추출 module 제작(c++ –&amp;gt; python)&lt;/li&gt;
  &lt;li&gt;진로 고민&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">Summary 2018 국제 인공지능 대전 전시회 관람 프로젝트 방향 재설정 Data 추출 module 제작(c++ –&amp;gt; python) 진로 고민</summary></entry><entry><title type="html">Tensorboard 뽀개기(3)</title><link href="https://mike2ox.github.io/ce_study/2017/10/13/TensorBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-3.html" rel="alternate" type="text/html" title="Tensorboard 뽀개기(3)" /><published>2017-10-13T00:00:00+00:00</published><updated>2017-10-13T00:00:00+00:00</updated><id>https://mike2ox.github.io/ce_study/2017/10/13/TensorBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-3</id><content type="html" xml:base="https://mike2ox.github.io/ce_study/2017/10/13/TensorBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-3.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;※ 지난 &lt;a href=&quot;https://quisutdeus7.github.io/tensorboard/study/2017/10/12/Tensorboard-%EB%BD%80%EA%B0%9C%EA%B8%B0-2/&quot;&gt;Tensorboard 뽀개기(2)&lt;/a&gt;에 이어서 실제 Tensorboad를 활용한 &lt;a href=&quot;https://github.com/golbin/TensorFlow-Tutorials/tree/master/05%20-%20TensorBoard%2C%20Saver&quot;&gt;예제&lt;/a&gt;를 구현해가면서 기능을 알아봄.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5-간단한-cnn으로-tensorboard-적용하기이어서&quot;&gt;5. 간단한 CNN으로 Tensorboard 적용하기(이어서)&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#########&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 신경망 모델 학습&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;######&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;saver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Saver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ckpt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_checkpoint_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./model'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ckpt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkpoint_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ckpt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model_checkpoint_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;saver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ckpt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model_checkpoint_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_variables_initializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;merged&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./logs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 최적화 진행&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Step: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d, '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;'Cost: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 적절한 시점에 저장할 값들을 수집하고 저장합니다.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;saver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./model/dnn.ckpt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;saver = tf.train.Saver(tf.global_variables())&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;tensor값들을 저장하도록 하는 함수로 10번 함수인 save가 실행되도록 한다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;ckpt = tf.train.get_checkpoint_state(‘./model’)&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;체크포인트를 할 폴더의 위치를 저장할 함수로 10번 함수인 save가 실행되도록 한다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;merged = tf.summary.merge_all()&lt;/em&gt;&lt;/a&gt;  &lt;/dt&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;writer = tf.summary.FileWriter(‘./logs’, sess.graph)&lt;/em&gt;&lt;/a&gt;  &lt;/dt&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;writer.add_summary(summary, global_step=sess.run(global_step))&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;&lt;em&gt;위 함수들은 1장에서 설명했기에 생략한다.&lt;/em&gt;&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;saver.save(sess, ‘./model/dnn.ckpt’, global_step=global_step)&lt;/em&gt;&lt;/a&gt;&lt;br /&gt;
    : global_step인수에 값을 전달하여 체크포인트할 파일 이름의 수를 결정하는 함수이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;6-tensorboard에-표시된-결과물&quot;&gt;6. Tensorboard에 표시된 결과물&lt;/h2&gt;
&lt;h3 id=&quot;1-main-graph&quot;&gt;1) Main Graph&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quisutdeus7/quisutdeus7.github.io/master/_data/img/tensorboard_basic2_graph.PNG&quot; width=&quot;70%&quot; align=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그래프는 node들을 따로 정리하지 않아서 clear하지 않는 형태이다. Tensorboard 화면에서 &lt;em&gt;remove from main graph&lt;/em&gt; 기능을 실행하면
 깔끔하게 정리가 가능하다.&lt;/p&gt;

&lt;h3 id=&quot;2-scalars&quot;&gt;2) Scalars&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quisutdeus7/quisutdeus7.github.io/master/_data/img/tensorboard_basic2_scalar.PNG&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-distributions&quot;&gt;3) Distributions&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quisutdeus7/quisutdeus7.github.io/master/_data/img/tensorboard_basic2_distribute1.PNG&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-histograms&quot;&gt;4) Histograms&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/quisutdeus7/quisutdeus7.github.io/master/_data/img/tensorboard_basic2_histogram1.PNG&quot; width=&quot;70%&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/quisutdeus7/quisutdeus7.github.io/master/_data/img/tensorboard_basic2_histogram3.PNG&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;6-쓸데없을-수-있지만-고민한-흔적들&quot;&gt;6. 쓸데없을 수 있지만 고민한 흔적들&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;현재 review중인 code의 cost가 왜 0.550에 머무는가&lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;with와 name_scope를 사용여부에 따른 그래프의 형태 변화&lt;/dt&gt;
      &lt;dd&gt;with와 name_scope를 사용하지 않을 경우 그래프가 매우 퍼져있는(?) 형태가 되어 한눈에 파악하기가 힘들다&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;학습이 안되는 case에 대한 비교&lt;/dt&gt;
      &lt;dd&gt;Learning rate 변화만 먼저 시험.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;Histogram 함수도 with문 안에 있는데 왜 Tensorboard의 graph에 표현이 안되는가&lt;/li&gt;
  &lt;li&gt;Histograms에 그려져 있는 그래프들의 의미. 그리고 왜 epoch 과정중 일부가 표현이 안되어 있는가&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">※ 지난 Tensorboard 뽀개기(2)에 이어서 실제 Tensorboad를 활용한 예제를 구현해가면서 기능을 알아봄.</summary></entry><entry><title type="html">Tensorboard 뽀개기(2)</title><link href="https://mike2ox.github.io/ce_study/2017/10/12/Tensorboard-%EB%BD%80%EA%B0%9C%EA%B8%B0-2.html" rel="alternate" type="text/html" title="Tensorboard 뽀개기(2)" /><published>2017-10-12T00:00:00+00:00</published><updated>2017-10-12T00:00:00+00:00</updated><id>https://mike2ox.github.io/ce_study/2017/10/12/Tensorboard-%EB%BD%80%EA%B0%9C%EA%B8%B0-2</id><content type="html" xml:base="https://mike2ox.github.io/ce_study/2017/10/12/Tensorboard-%EB%BD%80%EA%B0%9C%EA%B8%B0-2.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;※ 지난 &lt;a href=&quot;https://quisutdeus7.github.io/jekyll/update/2017/10/11/TenserBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-1/&quot;&gt;Tensorboard 뽀개기(1)&lt;/a&gt;에 이어서 실제 Tensorboad를 활용한 &lt;a href=&quot;https://github.com/golbin/TensorFlow-Tutorials/tree/master/05%20-%20TensorBoard%2C%20Saver&quot;&gt;예제&lt;/a&gt;를 구현해가면서 기능을 알아봄.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;5-간단한-cnn으로-tensorboard-적용하기&quot;&gt;5. 간단한 CNN으로 Tensorboard 적용하기&lt;/h2&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0, 0, 1, 0, 0
1, 0, 0, 1, 0
1, 1, 0, 0, 1
0, 0, 1, 0, 0
0, 0, 1, 0, 0
0, 1, 0, 0, 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;먼저 데이터 파일은 위와 같은 형식의 csv로 local directory에 갖고 있어야 한다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 적용시킬 data를 가져온다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadtxt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delimiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'float32'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;coding: utf-8&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;코드 내에 있는 한글 주석때문에 run할 때 SyntexError를 발생하는 경우가 있는데 이는 python의 기본 인코딩이 ascii이기에 euc-kr, utf-8 형식인 한글같은 경우 해석이 불가능하기 때문이다.
 그래서 한글 주석을 달아주기 위해 파일 상단에 &lt;a href=&quot;&quot;&gt;&lt;em&gt;coding: utf-8&lt;/em&gt;&lt;/a&gt;를 넣어줘야지 다른 곳에서 삽질을 안한다.&lt;/dd&gt;
    &lt;/dl&gt;

    &lt;p&gt;&lt;del&gt;물론 영어 주석에 익숙한 coder는 상관없는 문제겠다.&lt;/del&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;np.loadtxt(‘./data.csv’, delimiter=’,’,unpack=True, dtype=’float32’)&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;Numpy 패키지에 있는 loadtxt 함수로 로컬에 저장되있는 숫자형식(이 부분은 확인이 더 필요하다)데이터가 저장된 파일을 load한다. 불러올 때 해당 정보의 타입이나 자료 구분자 등에 대한 정보는 input parameter로 지정해준다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;np.transpose(data[a:b])&lt;/em&gt;&lt;/a&gt;
    : 배열의 행과 열을 바꾸는 함수로 python의 슬라이싱을 이용해 원형 배열에서도 일부만 transpose를 할수 있게 해준다. 여기서는 원형 데이터를 같고있는 data배열에서 index가 [0:2]인 부분은 xdata, 나머지는 ydata로 사용했다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;####&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 신경망 모델 구성&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;####&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trainable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'global_step'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# with tf.name_scope 으로 묶은 블럭은 텐서보드에서 한 레이어안에 표현해줌&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name_scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'layer1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matmul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 추가코드&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weights&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name_scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'layer2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matmul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 추가코드&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weights&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name_scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'output'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'W3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matmul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# 추가코드&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weights&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;histogram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Model&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name_scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'optimizer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;softmax_cross_entropy_with_logits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AdamOptimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learning_rate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;train_op&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# tf.summary.scalar 를 이용해 수집하고 싶은 값들을 지정할 수 있습니다.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scalar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;with tf.name_scope(‘put a layer name’):&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;여기서는 with와 name_scope함수를 통해 Tensorboard에서 graph가 얼마나 간소화 되는지 알 수 있다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;tf.summary.histogram(“Weights”, W1)&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;TensorBoard의 Histogram메뉴에서 그래프가 그려지도록 하는 함수이다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;a href=&quot;&quot;&gt;&lt;em&gt;tf.summary.scalar(‘cost’, cost)&lt;/em&gt;&lt;/a&gt;&lt;/dt&gt;
      &lt;dd&gt;&lt;em&gt;summary.scalar는 앞장에서 설명했기에 생략한다.&lt;/em&gt;&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;-쓸데없을-수-있지만-고민한-흔적들&quot;&gt;※ 쓸데없을 수 있지만 고민한 흔적들&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;현재 review중인 code의 cost가 왜 0.550에 머무는가&lt;/li&gt;
  &lt;li&gt;with와 name_scope를 사용여부에 따른 그래프의 형태 변화&lt;/li&gt;
  &lt;li&gt;학습이 안되는 case에 대한 비교할 방도&lt;/li&gt;
  &lt;li&gt;histogram 함수도 with문 안에 있는데 왜 Tensorboard의 graph에 표현이 안되는가&lt;/li&gt;
  &lt;li&gt;Histaograms에 그려져 있는 그래프들의 의미. 그리고 왜 epoch 과정중 일부가 표현이 안되어 있는가&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">※ 지난 Tensorboard 뽀개기(1)에 이어서 실제 Tensorboad를 활용한 예제를 구현해가면서 기능을 알아봄.</summary></entry><entry><title type="html">Tensorboard 뽀개기(1)</title><link href="https://mike2ox.github.io/ce_study/2017/10/11/TenserBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-1.html" rel="alternate" type="text/html" title="Tensorboard 뽀개기(1)" /><published>2017-10-11T00:00:00+00:00</published><updated>2017-10-11T00:00:00+00:00</updated><id>https://mike2ox.github.io/ce_study/2017/10/11/TenserBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-1</id><content type="html" xml:base="https://mike2ox.github.io/ce_study/2017/10/11/TenserBoard-%EB%BD%80%EA%B0%9C%EA%B8%B0-1.html">&lt;h2 id=&quot;1-tensorboard란&quot;&gt;1. TensorBoard란?&lt;/h2&gt;
&lt;p&gt;TensorFlow에 기록된 로그들을 토대로 그래프로 시각화 해주는 도구로서 TensorFlow의 결과 비교나 변화를 보기 쉽게 해준다.&lt;/p&gt;

&lt;h2 id=&quot;2-tensorboard-실행-준비&quot;&gt;2. TensorBoard 실행 준비&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scalar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'cost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./path to logs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위 형식은 TensorBoard를 사용하는데 필요한 메소드들을 나열한 것이다. (내 나름대로 생각한 메소드들)&lt;/p&gt;

&lt;h2 id=&quot;3-tensorboard-실행시키기&quot;&gt;3. TensorBoard 실행시키기&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;tensorboard --logdir= path to logdir   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;위의 명령어는&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‘루트 폴더 아래의 특정 경로에 있는 directory안의 로그파일을 보겠다’&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;라는 의미의 코드로 tensorflow 소스코드 안에 작성한 FileWriter 함수 parameter 들 중에 경로값과 일치해야 한다.
그리고 port를 따로 지정하지 않았기에&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;localhost:6006
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;으로 연결된다. 그래서 port를 설정하고 싶다면&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-commandline&quot;&gt;tensorboard --logdir= path to logdir --port=NNNN 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;처럼 마지막에 특정 port번호를 입력해 주면 된다.&lt;/p&gt;

&lt;p&gt;※ 여기서 경로 설정을 잘못하면 graph가 제대로 출력되지 않을 수 있다. &lt;em&gt;(ex. 빈화면)&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고한 사이트 : http://tensorflowstepbystep.tistory.com/4&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-tensorboard-중요-method&quot;&gt;4. TensorBoard 중요 Method&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;※ &lt;a href=&quot;&quot;&gt;2. TensorBoard 실행시키기&lt;/a&gt;에서 언급한 Method들을 예제코드와 &lt;a href=&quot;https://www.tensorflow.org/api_docs/&quot;&gt;Tensorflow API r1.3&lt;/a&gt; 의 분석 삽질로 나름 해석해 보았다.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;tf.summary.scalar(‘value name’, value)&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;이 함수는 수집하고자 하는 data를 지정하는 함수로 input parameter는 수집하고자 하는 값의 이름과 그 값을 가지고 있는 value를 받는다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;tf.summary.merge_all()&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;tensorboard에 표시해주기 위해 tensor들을 수집하는 함수이다.
  이는 각각의 summary한 node들을 run시켜줄 때 효율성을 높이기 위해 미리 하나의 data로 묶어주는 함수이다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;tf.summary.FileWriter(‘./path to logs’,sess.graph)&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;summary하면서 발생한 tensor값들과 그래프를 로컬에 저장하기 위한 함수이다.
  input parameter로 log파일이 저장될 경로와 저장할 graph가 있다. 그 외 다른 parameter가 있지만 현재 학습과정에선 저 2가지만 기억하려 한다.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;Writer.add_summary()&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;말 그대로 summary들을 합치는 코드이다.
        &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;global_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;위 코드처럼 merge_all한 summary protocol buffer들을 합치는 과정으로
step 하면서 값들을 저장한다.&lt;/p&gt;
      &lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">1. TensorBoard란? TensorFlow에 기록된 로그들을 토대로 그래프로 시각화 해주는 도구로서 TensorFlow의 결과 비교나 변화를 보기 쉽게 해준다.</summary></entry><entry><title type="html">Windows 10에서 Ubuntu 서버 Ethernet 연결</title><link href="https://mike2ox.github.io/ce_study/2017/09/26/Windows%EC%99%80-ubuntu-Ethernet-connect.html" rel="alternate" type="text/html" title="Windows 10에서 Ubuntu 서버 Ethernet 연결" /><published>2017-09-26T22:52:56+00:00</published><updated>2017-09-26T22:52:56+00:00</updated><id>https://mike2ox.github.io/ce_study/2017/09/26/Windows%EC%99%80-ubuntu-Ethernet-connect</id><content type="html" xml:base="https://mike2ox.github.io/ce_study/2017/09/26/Windows%EC%99%80-ubuntu-Ethernet-connect.html">&lt;h2 id=&quot;작업-환경&quot;&gt;작업 환경&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;메인 PC&lt;/strong&gt; : windows&lt;/p&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">작업 환경</summary></entry><entry><title type="html">Tensorflow Example 중 DNN,CNN</title><link href="https://mike2ox.github.io/ce_study/2017/09/26/Tensorflow-Example-DNN,-CNN.html" rel="alternate" type="text/html" title="Tensorflow Example 중 DNN,CNN" /><published>2017-09-26T22:25:56+00:00</published><updated>2017-09-26T22:25:56+00:00</updated><id>https://mike2ox.github.io/ce_study/2017/09/26/Tensorflow-Example-DNN,-CNN</id><content type="html" xml:base="https://mike2ox.github.io/ce_study/2017/09/26/Tensorflow-Example-DNN,-CNN.html">&lt;p&gt;※ 해당 포스트는 KIST 유럽연구소 인턴기간 중 실시한 TensorFlow 세미나의 과제를 정리하는 것으로
  기존 오픈된 소스코드나 자료를 활용할 수 있음.&lt;/p&gt;

&lt;h1 id=&quot;convolution-neural-net&quot;&gt;&lt;strong&gt;Convolution Neural Net&lt;/strong&gt;&lt;/h1&gt;

&lt;h2 id=&quot;1-concept&quot;&gt;1. Concept&lt;/h2&gt;

&lt;h2 id=&quot;2-implement&quot;&gt;2. Implement&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow.examples.tutorials.mnist&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input_data&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_data_sets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./mnist/data/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one_hot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 28*28*1의 image와 Y ?&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 갯수는 none임.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;keep_prob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Q1. Y는 무슨 의미?&lt;em&gt;**&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# convolution layer를 통과 시킴 stride : 가운데 2요소가 움직이는 칸의 수&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# X : 이미지, W1 : 무게, SAME : 원래 이미지랑 같게 나오도록 해주는 설정.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stddev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strides&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ksize에서 가운데 2요소가 필터의 사이즈&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ksize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strides&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 두번째 무게 필터&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# X가 32개이고 필터가 64개&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stddev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# L2의 Conv 형태 = (?,14,14,64), 몇 장인지 안 정해져 있었기에 ?임.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strides&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ksize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strides&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# FC 레이어 : input 7*7*64 --&amp;gt; output 256&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# FC을 위해 직전의 Pool 사이즈인 (?,7,7,64)를 참고하여 차원을 줄여줍니다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stddev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# []에서 -1은 왜 나오는거지?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matmul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Dropout을 통해 일부 노드는 활동을 멈춘다. But! 효율은 올라감.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keep_prob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 최종 출력값 L3 에서의 출력 256개를 입력값으로 받아서 0~9 레이블인 10개의 출력값을 만듭니다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;W4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stddev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Q2. strides의 요소들의 의미는?&lt;/p&gt;

&lt;p&gt;Q3. stddev의 의미는?&lt;/p&gt;

&lt;p&gt;Q4. ksize의 요소들의 의미는?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matmul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;W4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;softmax_cross_entropy_with_logits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AdamOptimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 최적화 함수를 RMSPropOptimizer 로 바꿈&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#########&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 신경망 모델 학습&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;######&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_variables_initializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;total_batch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_examples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;batch_xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_ys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 이미지 데이터를 CNN 모델을 위한 자료형태인 [28 28 1] 의 형태로 재구성합니다.&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;batch_xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_xs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost_val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                               &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_xs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                          &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_ys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                          &lt;span class=&quot;n&quot;&gt;keep_prob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total_cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost_val&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Epoch:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%04&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;'Avg. cost ='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{:.3f}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'최적화 완료!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#########&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 결과 확인&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;######&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;is_correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;accuracy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reduce_mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_correct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'정확도:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accuracy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;feed_dict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                   &lt;span class=&quot;n&quot;&gt;keep_prob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Moonhyeok Song</name><email>firefinger07@gmail.com</email></author><summary type="html">※ 해당 포스트는 KIST 유럽연구소 인턴기간 중 실시한 TensorFlow 세미나의 과제를 정리하는 것으로 기존 오픈된 소스코드나 자료를 활용할 수 있음.</summary></entry></feed>