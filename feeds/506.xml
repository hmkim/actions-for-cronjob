<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by 신지웅 on Medium]]></title>
        <description><![CDATA[Stories by 신지웅 on Medium]]></description>
        <link>https://medium.com/@shinjiwoong1656?source=rss-ab5bedee73a5------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*PBbdOpY0fO0O-o7fcNtBEg.png</url>
            <title>Stories by 신지웅 on Medium</title>
            <link>https://medium.com/@shinjiwoong1656?source=rss-ab5bedee73a5------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 13 May 2019 21:51:03 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@shinjiwoong1656" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Daum Map API를 이용해 지도에 마커 표시하기]]></title>
            <link>https://medium.com/wasd/daum-map-api-simple-example-4cb4130fcf30?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/4cb4130fcf30</guid>
            <category><![CDATA[android]]></category>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[daumkakao]]></category>
            <category><![CDATA[daum-map-api]]></category>
            <category><![CDATA[maps]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Sun, 29 Jul 2018 08:09:14 GMT</pubDate>
            <atom:updated>2018-07-29T09:44:28.382Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*zHq2iW1hpa07HhE7E0Uciw.jpeg" /><figcaption>Photo by <a href="https://unsplash.com/photos/sSzf5VG-n3s?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Enrique Alarcon</a> on <a href="https://unsplash.com/search/photos/google-map?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></figcaption></figure><p>이번 포스팅은 Daum Map Api를 사용하여 특정 위치를 마커로 표시해주는 앱을 만들어 보겠습니다.</p><h3>1. Daum Map 프로젝트에 적용하기</h3><h4><strong>1–1 API키 받기</strong></h4><p>Daum Map을 사용하기 위해선 API키가 필요합니다.</p><p><a href="https://developers.kakao.com/">사이트</a>로 들어가서 API키를 받아봅시다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*_aGMzJva3qJ-obxon72ELg.jpeg" /></figure><p><strong>앱 개발 시작하기</strong> 버튼을 눌러주면</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Pk0ahO2YuJKgGVx8EX6t4A.jpeg" /></figure><p>이렇게 화면이 뜨게되고, <strong>로그인</strong>을 하게되면</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*H89GGf4FSS0sFHrfzMUEfA.jpeg" /></figure><p>이런 화면이 뜨게 될 것입니다.</p><p>아이콘에는 카카오톡에 링크를 보낼 시 표시되는 사진이고 이름은 마찬가지로 표시될 이름입니다. 앱 이름을 정하고 앱 만들기를 누르면 <em>‘어플리케이션을 생성하였습니다.’</em> 라는 화면이 표시됩니다.</p><h4>1–2. 플랫폼 등록하기</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*lcBmh2cSGSV4AhAatrmNjA.png" /></figure><p>앱 등록이 되었으면 다음으로 플랫폼 등록을 해야합니다.</p><p><strong>설정 -&gt; 일반</strong> 에 들어가서 <strong>+ 플랫폼 추가</strong>를 눌러줍시다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/419/1*BbsbaqNr14lAN42f9i8ueQ.png" /></figure><p>이렇게 입력창이 뜨면 프로젝트의 패키지명을 입력해주세요. 마켓 URL은 패키지명을 입력하면 자동으로 입력됩니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/632/1*ribom6zAODFWLdYidoMiDw.png" /><figcaption>참고로 패키지 이름은<strong> </strong><strong>AndroidManifest.xml</strong>에 있으니 참고하세요.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/768/1*zi3x04LLfacyDc30-wodOA.png" /></figure><p>마지막으로 비어있는<strong> 키 해시</strong>를 추가해줘야 합니다. 여러가지 방법 중 저는 아래 있는 코드를 빌드해서 추가하도록 하겠습니다.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/6fc5579acc0e4beda25d1e1760ba7c82/href">https://medium.com/media/6fc5579acc0e4beda25d1e1760ba7c82/href</a></iframe><figure><img alt="" src="https://cdn-images-1.medium.com/max/987/1*vYIrNQT51mpyaQFJ0LN-zw.png" /></figure><p>빌드를 하고 나면 Logcat에 Log에서 찾으면 됩니다. 찾기 어려우시면 Ctrl+F로 Hash key를 입력하시면 Hash key가 표시되어 있는 위치로 이동하게 되어 찾기 편하실 겁니다. 얻은 키 해시를 입력하시고 저장버튼을 누르면 플랫폼 등록이 완료됩니다.</p><h4>1–3. 프로젝트에 SDK 추가하기</h4><p><a href="http://apis.map.daum.net/android/guide/">Daum 지도 API</a></p><p>SDK 설치를 위해 위 사이트로 들어갑시다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/571/1*gQONxq9EEbvTg20XMpjmXw.png" /></figure><p>버튼을 누르면 Android_DaumMap_SDK_1.3.1.0.zip 파일이 다운이 됩니다.</p><p>이제 다운 받은 파일을 안드로이드 프로젝트에 추가해줍시다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/505/1*haM7dOKAWxBD065S-cGmgQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/606/1*qofHBGKWhFrD52WA5oHhOA.png" /></figure><p>zip파일을 풀면 두 폴더가 생성됩니다. 아래에 있는 Android_DaumMap_SDK_1.3.1.0 폴더에 들어가서</p><p>libs파일을 복사Ctrl+c해주세요. 그리고</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/243/1*KqGgMKVb_zSMYBu4bJchew.png" /></figure><p>Android를 Project로 바꾸어주시고</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/269/1*eAbbuQj5F7MZ_3VTinhLmw.png" /></figure><p>app에 복사해주고 libDaumMapAndroid.jar은 그대로 두고, armeabi, armeabi-v7a는src/main에 jniLibs 디렉토릐를 만들어서 옮겨주시면 됩니다.</p><p>마지막으로 jar파일을 프로젝트에 등록해 주어야합니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/262/1*TuzRWQypWsOHSjq_EWfJMA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/822/1*5Vc10-BVAuU6EjOVVl7poQ.png" /></figure><p>File─&gt;Project Structure에 들어갑니다.</p><p>app ─&gt; Dependencies ─&gt; +버튼 ─&gt; 2.jar dependency 를 누른 뒤 위에서 추가했던 libs ─&gt; libDaumMapAndroid.jar 을 추가한 후 Sync Now를 누르면 설정이 완료됩니다.</p><h3>2. 앱 만들기</h3><h4>2–1. 퍼미션과 App Key추가하기</h4><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/d3e7143dea034713c65935e9adce9576/href">https://medium.com/media/d3e7143dea034713c65935e9adce9576/href</a></iframe><p>퍼미션으로 인터넷 사용권한과 위치 사용권한 퍼시션을 등록해주시고</p><p>meta-data에 value값에 설정 ─&gt; 일반 ─&gt; 기본정보에 있는 Api Key값을 넣어주세요.</p><h4>2–2. activity_main.xml 정의하기</h4><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/b1c8ed1b3eeea5e17fac709363194332/href">https://medium.com/media/b1c8ed1b3eeea5e17fac709363194332/href</a></iframe><p>xml은 간단하게 정의하겠습니다. RelativeLayout 에는 지도가 표시됩니다.</p><h4>2–3. MainActivity.java 정의하기</h4><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/56419adddb0f3763bc883abfe04bee12/href">https://medium.com/media/56419adddb0f3763bc883abfe04bee12/href</a></iframe><p>java코드를 알아봅시다.</p><p>MapView를 객체를 생성합니다. 이후 setDaumMapApiKey 로 Api Key를 등록합니다. mapView를 ViewGroup로 생성하고 xml에 있던 map_view를 연결해줍니다.</p><p>MapPoint.mapPointWithGeoCoord(위도, 경도): 위도와 경도를 하나의 변수로 지정해주는 메서드입니다. 이것은 아래 설명할 마커에도 사용됩니다. MapPoint의 위치는저는 제가 재학 중인 학교의 위치를 지정하였습니다.</p><p>setMapCenterPoint(MapPoint,true) : 아까 MapPoint로 설정했던 변수와 true나 false값을 넣으면 어플을 실행했을 때 화면 중앙에 표시될 위치를 정해줍니다.</p><p>mapViewContainer.addView(mapView) : 이제 설정했던 맵을 mapView를 mapviewContainer에 적용시켜줍니다.</p><p>이제 마커를 표시하는 방법입니다.</p><p>marker.setItemName(“”) : 마커를 눌렀을 때 표시되는 아이템의 이름을 설정합니다.</p><p>marker.setTag(0) : 마커의 번호를 지정합니다.</p><p>marker.setMarkerType(MapPOIItem.MarkerType.BluePin)와 marker.setSelectedMarkerType(MapPOIItem.MarkerType.RedPin)는 코드에서 설명하였으므로 생략하겠습니다.</p><p>mapView.addPOIItem(marker) : mapView에 설정한 marker을 적용시킵니다.</p><h3>3. 실행결과</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/320/1*EauCQhnz-_wwKsnQY65wJg.gif" /></figure><p>앱을 실행하게 되면 제가 재학중인 학교가 중앙에 마커와 함께 표시가 되고 마커를 누르게 되면 학교의 이름이 마커상단에 표시되게 됩니다.</p><h4>Another article by `신지웅`</h4><ul><li><a href="https://medium.com/wasd/preview-of-android-p-version-update-89813c47167b">Preview of Android P version update</a></li><li><a href="https://medium.com/wasd/creating-an-android-google-stt-application-4cea24ee97af">Creating an Android Google STT application</a></li><li><a href="https://medium.com/wasd/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%95%A1%EC%85%98%EB%B0%94-%EC%BB%A4%EC%8A%A4%ED%85%80-5657d3fc5257">Customize the Android Action Bar</a></li><li><a href="https://medium.com/wasd/configure-bottom-navigation-330f2c0d9832">Configure Bottom Navigation</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4cb4130fcf30" width="1" height="1"><hr><p><a href="https://medium.com/wasd/daum-map-api-simple-example-4cb4130fcf30">Daum Map API를 이용해 지도에 마커 표시하기</a> was originally published in <a href="https://medium.com/wasd">WASD</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Configure Bottom Navigation]]></title>
            <link>https://medium.com/wasd/configure-bottom-navigation-330f2c0d9832?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/330f2c0d9832</guid>
            <category><![CDATA[components]]></category>
            <category><![CDATA[bottomnavigationview]]></category>
            <category><![CDATA[vector]]></category>
            <category><![CDATA[android]]></category>
            <category><![CDATA[android-app-development]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Sun, 15 Jul 2018 11:58:13 GMT</pubDate>
            <atom:updated>2018-07-15T11:58:13.788Z</atom:updated>
            <content:encoded><![CDATA[<h4>Bottom navigation을 간단히 만들어 보는 시간입니다.</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/721/1*6VLE9oROaO8cG-2YTYmOXw.png" /><figcaption>https://material.io/design/components/bottom-navigation.html#usage</figcaption></figure><p>오늘은 BottomNavigationView를 사용해서 버튼을 누르면 TextView의 Text가 버튼 이름과 같게 바뀌는 간단한 어플을 만들어 보겠습니다.</p><p>이 글은 아래 링크에서 참고하여 작성하였습니다.</p><ul><li><a href="https://material.io/design/components/bottom-navigation.html">Bottom navigation</a></li><li><a href="http://otakijae.tistory.com/22">[서울시 앱 공모전 / 서울시를 이겨라] BottonNavigationView</a></li></ul><h4>주의사항</h4><p>프로젝트를 만들기 전에 <a href="https://material.io/design/components/bottom-navigation.html#usage">material.io</a>에서 알려준 주의사항 몇가지를 설명 <br>드리겠습니다.</p><blockquote>item을 3개 이하로 구성하면 안됩니다. (대신 탭 사용)</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/0*xVqTBJCQ0HYlKlxc.png" /></figure><blockquote>item을 5개 이상으로 구성하면 안됩니다.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/0*rbv-pF-8QLJHNHRD.png" /></figure><blockquote>텍스트를 너무 길게 선언하면 안됩니다.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/0*CF-Phi3TVoPKPVRB.png" /></figure><blockquote>텍스트가 짤린다고 텍스트의 사이즈를 줄이면 안됩니다.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/0*_fEp06CJIbUOe8sz.png" /></figure><blockquote>다양한 색상의 아이콘과 텍스트 라벨을 사용하지 마십시오.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/0*PdgF3IsnInj4KsDi.png" /></figure><blockquote>Bottom navigation을 스크롤 되게 해도 안됩니다.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/0*JaTR9GblXkpF10hN.png" /></figure><h4>Gradle에 support design 라이브러리 추가하기</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/760/1*lDq1I3vTU7ag7CIZhllIwA.png" /></figure><p>Bottom Navigation을 사용하려면 Gradle에서 support design을 추가해줘야합니다. 추가하는 방법은 Gradle에 들어가게 되면 최하단부에 dependencies{...}라는 부분이 있습니다.</p><pre>//안드로이드 스튜디오 3.0 버전 이상<br>implementation &#39;<strong>com.android.support:design:25.0.0&#39;</strong></pre><p>Bottom Navigation이 25버전 이상부터 지원하기 때문에 위에 적혀있는 것을 추가해 줍니다. 혹시 빨간 줄이 표시 된다면 현재 프로젝트와 다른 버전으로 선언 되있는 것이니 그럴땐 추가한 곳에서 Alt+Enter로 자동으로 버전을 맞출 수 있으니 바꿔주고 Sync Now를 눌러주시면 빨간줄이 사라지게됩니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/750/1*1AqYAsoyR1a3eTbXY3ZR7A.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/760/1*NrHg6sNIuKtqu9EB8vKI8w.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/756/1*R6359KiMS_uqlb4RaX1ZeA.png" /><figcaption>Sync Now 완료 시</figcaption></figure><p>여기까지 하셨다면 이제 프로젝트에서 Bottom navigation을 사용할 수 있게 되었습니다.</p><h4>bottom_navigation.xml 작성하기</h4><p>xml을 작성하기 전 아이콘을 추가하고 진행하겠습니다. 아이콘을 넣을 땐 벡터이미지가 필요한데 안드로이드 스튜디오에서 <strong><em>Vector Asset</em></strong>으로 기본 벡터이미지를 지원해 줍니다. 사진을 참고하며 벡터 이미지를 추가해 줍시다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*clGemEUP_aUgzlG4LQXhww.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/702/1*TVRVEvw1_Cn-_bmjwKejRQ.png" /></figure><p>이제 Bottom Navigation에 사용할 xml을 만들어봅시다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/242/1*fEy8k1UVlnDjAVjNUxibgw.png" /></figure><p>res 폴더에 menu 폴더를 만들고 xml을 만들어줍시다.</p><pre><em>&lt;?</em>xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;<em>?&gt;<br></em>&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;<br><br>  &lt;item<br>    android:id=&quot;@+id/action_medium&quot;<br>    android:enabled=&quot;true&quot;<br>    android:icon=&quot;@drawable/ic_folder_shared_black_24dp&quot;<br>    android:title=&quot;Medium&quot;/&gt;<br><br>  &lt;item<br>    android:id=&quot;@+id/action_wasd&quot;<br>    android:enabled=&quot;true&quot;<br>    android:icon=&quot;@drawable/ic_laptop_windows_black_24dp&quot;<br>    android:title=&quot;Wasd&quot;/&gt;<br><br>  &lt;item<br>    android:id=&quot;@+id/action_android&quot;<br>    android:enabled=&quot;true&quot;<br>    android:icon=&quot;@drawable/ic_android_black_24dp&quot;<br>    android:title=&quot;Android&quot;/&gt;<br><br>&lt;/menu&gt;</pre><p>Bottom Navigation에 쓰일 item을 3개를 구성하였습니다. item에 사용된 4개의 속성을 알아봅시다.</p><ol><li>android:id 각 item에 id를 지정합니다.</li><li>android:enabled=&quot;true&quot; : 지정된 그룹에 있는 모든 메뉴들을 활성화 시킵니다.</li><li>android:title : item의 제목을 설정합니다.</li><li>android:icon : item의 아이콘에 사용할 이미지를 설정합니다. 아까 추가했던 vector이미지의 이름으로 설정해주면 되겠습니다.</li></ol><h4>activity_main.xml 구성하기</h4><p>위에서 말씀드렸다시피 Bottom Navigation은 아이콘의 색상과 텍스트의 색상, 배경색을 지정할 수 있습니다. 그래서 저는 activity_main.xml을 구성하기 전에 values/colors.xml에서 색상을 몇 개 추가하겠습니다.</p><pre>&lt;<strong>color name=&quot;iconText&quot;</strong>&gt;#e4f9f5&lt;/<strong>color</strong>&gt;<br>&lt;<strong>color name=&quot;background&quot;</strong>&gt;#11999e&lt;/<strong>color</strong>&gt;</pre><p>저는 위 코드의 색상을 추가하였습니다.</p><p>혹시 어울릴만한 색상을 고르기 어렵다면 아래 링크에서 색을 골라보세요. 저도 여기 나온 색으로 지정하였습니다.</p><p><a href="https://colorhunt.co/">Color Hunt - Color Palettes for Designers and Artists</a></p><p>이제 activity_main.xml 구성을 해봅시다.</p><pre><em>&lt;?</em>xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;<em>?&gt;<br></em>&lt;android.support.constraint.ConstraintLayout<br>  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<br>  xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;<br>  android:layout_width=&quot;match_parent&quot;<br>  android:layout_height=&quot;match_parent&quot;&gt;<br><br>  &lt;TextView<br>    android:id=&quot;@+id/textView&quot;<br>    android:layout_width=&quot;wrap_content&quot;<br>    android:layout_height=&quot;wrap_content&quot;<br>    android:text=&quot;Hello World!&quot;<br>    android:textSize=&quot;24sp&quot;<br>    app:layout_constraintBottom_toBottomOf=&quot;parent&quot;<br>    app:layout_constraintEnd_toEndOf=&quot;parent&quot;<br>    app:layout_constraintStart_toStartOf=&quot;parent&quot;<br>    app:layout_constraintTop_toTopOf=&quot;parent&quot;/&gt;<br><br>  &lt;android.support.design.widget.BottomNavigationView<br>    android:id=&quot;@+id/bottom_navigation&quot;<br>    android:layout_width=&quot;match_parent&quot;<br>    android:layout_height=&quot;wrap_content&quot;<br>    android:background=&quot;@color/background&quot;<br>    app:itemIconTint=&quot;@color/iconText&quot;<br>    app:itemTextColor=&quot;@color/iconText&quot;<br>    app:layout_constraintBottom_toBottomOf=&quot;parent&quot;<br>    app:layout_constraintStart_toStartOf=&quot;parent&quot;<br>    app:menu=&quot;@menu/bottom_navigation&quot;/&gt;<br>  <br>&lt;/android.support.constraint.ConstraintLayout&gt;</pre><p>BottomNavigationView를 어떻게 설정했는지 알아봅시다.</p><ul><li>android:background:&quot;@color/background” : 배경색을 설정함</li><li>app:itemIconTint=&quot;@color/iconText” : 아이콘의 색을 설정함</li><li>app:itemTextColor=”@color/iconText” : 글의 색을 설정함</li><li>app:menu=”@menu/bottom_navigation” : 설정한 menu의 이름을 가져와 설정을 해줌</li></ul><blockquote>아이콘과 Text는 위에서도 말씀드렸던 것처럼 <strong>같은 색</strong>이여야 하기때문에 똑같이 설정하였습니다.</blockquote><h4>MainActivity.java</h4><pre>package org.androidtown.newbottomnavigation;<br><br>import android.annotation.SuppressLint;<br>import android.os.Bundle;<br>import android.support.annotation.NonNull;<br>import android.support.design.widget.BottomNavigationView;<br>import android.support.v7.app.AppCompatActivity;<br>import android.view.MenuItem;<br>import android.widget.TextView;<br><br>import com.example.anhyunjin.brunch.R;<br><br>public class MainActivity extends AppCompatActivity {<br><br> BottomNavigationView bottomNavigationView;<br> TextView tv;<br><br> @SuppressLint(&quot;CutPasteId&quot;)<br> @Override<br> protected void onCreate(Bundle savedInstanceState) {<br>  super.onCreate(savedInstanceState);<br>  setContentView(R.layout.<strong><em>activity_main</em></strong>);<br><br>  bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottom_navigation);<br>  tv = (TextView) findViewById(R.id.textView);<br><br>  bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {<br>   @Override<br>   public boolean onNavigationItemSelected(@NonNull MenuItem item) {<br>    switch (item.getItemId()) {<br>     case R.id.action_medium:<br>      tv.setText(&quot;Medium!&quot;);<br>      break;<br>     case R.id.action_wasd:<br>      tv.setText(&quot;Wasd!&quot;);<br>      break;<br>     case R.id.action_android:<br>      tv.setText(&quot;Android!&quot;);<br>      break;<br>    }<br>    return true;<br>   }<br>  });<br> }<br>}</pre><p>코드를 설명하겠습니다. 먼저 BottomNavigationView와 TextView를 선언하고 findViewById로 연결시켜 줍니다.</p><p>다음으로 setOnNavigationItemSelectedListener() 메소드를 정의합니다. 이 메소드는 아이콘을 누르면 발생되는 메소드입니다. bottomNavigationView.을 입력하시면 자동완성되는 코드입니다.</p><p>리스너에 적힌 코드를 설명 드리면 제가 사용하기 편한 switch~case문으로 코딩을 하였습니다. 비교할 값은 item에 id값입니다. 그래서 item.getItemId() 메소드로 id값을 받아와 비교를 합니다. case의 menu에 있는 아이콘의 id값이 같으면 TextView의 Text를 각각의 Title의 이름으로 바꾸어주는 코드입니다.</p><h4>실행 결과</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/320/1*lhjMkrM3459dTjKt5gvKXA.gif" /></figure><p>실행하면 Hello World가 뜨고 아이콘을 누르면 TextView의 Text가 바뀌게 됩니다.</p><h3>번외</h3><p>어려울 수도 있었던 글 이였던 것 같아서 쉽게 만드는 법을 추가하고 마치려고 합니다. 안드로이드 프로젝트를 만들 때 템플릿을 설정하는 탭이 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/902/1*CGYco_AlKebGKmcs1FY4dg.png" /></figure><p>가운데있는 <strong><em>Bottom Navigation Activity</em></strong> 템플릿을 설정하고 프로젝트를 만들면 자동으로 지금까지 하신 것을 몇초만에 만들 수 있습니다.</p><blockquote>제가 만든 것과 똑같이 아이콘을 누르면 아이콘의 Text가 TextView에 들어가는 어플입니다.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/400/1*bFrkmAZYihAaHkenuy2aMw.png" /></figure><p>지금까지 Bottom Navigation에 대한 포스팅이였습니다. 감사합니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=330f2c0d9832" width="1" height="1"><hr><p><a href="https://medium.com/wasd/configure-bottom-navigation-330f2c0d9832">Configure Bottom Navigation</a> was originally published in <a href="https://medium.com/wasd">WASD</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Creating an Android Google STT application]]></title>
            <link>https://medium.com/wasd/creating-an-android-google-stt-application-4cea24ee97af?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/4cea24ee97af</guid>
            <category><![CDATA[android]]></category>
            <category><![CDATA[stt]]></category>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[speech-recognition]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Mon, 25 Jun 2018 16:20:59 GMT</pubDate>
            <atom:updated>2018-06-30T11:25:43.935Z</atom:updated>
            <content:encoded><![CDATA[<h4>STT(Speech to Text)로 음성인식 어플을 만들기</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*2fpkNV1AnOfNCbewaylflA.jpeg" /><figcaption>Photo by <a href="https://unsplash.com/photos/f4qyr3FWB1w?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Mark Tegethoff</a> on <a href="https://unsplash.com/search/photos/homepod?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></figcaption></figure><p>오늘은 구글의 API인 <strong><em>STT(Speech to Text)</em></strong>로 음성인식 어플을 만들어 <br>보겠습니다.</p><p>STT란 한국어로 <strong><em>음성인식</em></strong>이라고 생각하시면 편하실 거 같습니다.</p><p>어플 설명으로는 버튼을 누르고 말을 하면 TextView에 말했던 음성이 적히게 되는 보기엔 간단한 어플입니다.</p><p>자료는 아래 두 링크에서 주로 참고하였습니다.</p><ul><li><a href="http://kwon8999.tistory.com/entry/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EA%B5%AC%EA%B8%80-%EC%9D%8C%EC%84%B1APISpeechRecognizer-tutorial">안드로이드 구글 음성API[SpeechRecognizer tutorial]</a></li><li><a href="https://developer.android.com/">Android Developers</a></li></ul><h3>프로젝트 생성</h3><p>minSDK는 사용자들이 주로 사용하는 버전인 API 21(Android 5.0 Lollipop)로 설정 하였고 음성인식과 결과만 보여주면 되기 때문에 Empty Activity를 선택 하였습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/902/1*XlCsehdUJz4rXh_hhVh-tA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/902/1*x60QHUfs40NgSCR0yOC8Ow.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/902/1*Dw7P5DZ4BXvW4hgO7-KPWw.png" /></figure><p><strong>AndroidManifest.xml</strong></p><pre>&lt;<strong>uses-permission android:name=&quot;android.permission.INTERNET&quot;</strong>/&gt;<br>&lt;<strong>uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;</strong>/&gt;</pre><p>Google STT를 사용하기 위해서 <strong><em>인터넷</em></strong> 사용 권한과 <strong><em>오디오</em></strong> 사용 권한이 필요하므로 <strong><em>AndroidManifest.xml</em></strong>에 사용할<strong> </strong>퍼미션을 추가해줍시다.</p><p><strong>activity_main.xml</strong></p><pre><em>&lt;?</em><strong>xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;</strong><em>?&gt;<br></em>&lt;<strong>LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<br>    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;<br>    xmlns:tools=&quot;http://schemas.android.com/tools&quot;<br>    android:layout_width=&quot;match_parent&quot;<br>    android:layout_height=&quot;match_parent&quot;<br>    android:gravity=&quot;center&quot;<br>    android:orientation=&quot;vertical&quot;<br>    tools:context=&quot;.MainActivity&quot;</strong>&gt;</pre><pre>    &lt;<strong>TextView<br>        android:id=&quot;@+id/sttResult&quot;<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:text=&quot;음성인식 결과가 여기에 표시됩니다.&quot; </strong>/&gt;</pre><pre>    &lt;<strong>Button<br>        android:id=&quot;@+id/sttStart&quot;<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:text=&quot;음성인식 시작&quot; </strong>/&gt;</pre><pre>&lt;/<strong>LinearLayout</strong>&gt;</pre><p><strong>MainActivity.java</strong></p><h4>퍼미션 설정</h4><pre><strong>if </strong>( Build.VERSION.<strong><em>SDK_INT </em></strong>&gt;= 23 ){<br>            <em>// 퍼미션 체크<br>            </em>ActivityCompat.<em>requestPermissions</em>(<strong>this</strong>, <strong>new </strong>String[]{Manifest.permission.<strong><em>INTERNET</em></strong>,<br>                    Manifest.permission.<strong><em>RECORD_AUDIO</em></strong>},<strong>PERMISSION</strong>);<br>        }</pre><p>안드로이드 6.0버전 부터는 퍼미션을 따로 체크해줘야 합니다. <br>따라서 if 문으로 안드로이드 버전이 23 이상이면 퍼미션을 체크하는 알림 창을 띄어줍니다.</p><h4>음성인식 시 사용 될 intent 설정</h4><pre>//사용자에게 음성을 요구하고 음성 인식기를 통해 전송하는 활동을 시작합니다.<strong><br>intent </strong>= <strong>new </strong>Intent(RecognizerIntent.<strong><em>ACTION_RECOGNIZE_SPEECH</em></strong>);</pre><pre>//음성 인식을위한 음성 인식기의 의도에 사용되는 여분의 키입니다.<strong><br>intent</strong>.putExtra(RecognizerIntent.<strong><em>EXTRA_CALLING_PACKAGE</em></strong>,getPackageName());</pre><pre>//음성을 번역할 언어를 설정합니다. <br><strong>intent</strong>.putExtra(RecognizerIntent.<strong><em>EXTRA_LANGUAGE</em></strong>,<strong>&quot;ko-KR&quot;</strong>);</pre><h4>음성을 인식하게 하는 부분</h4><p>처음에는 이렇게 코드를 짤려고 했지만 별표 친 부분에서 오류가 납니다.</p><pre><strong>sttBtn</strong>.setOnClickListener(<strong>new </strong>View.OnClickListener() {<br>    <strong>@Override<br>    public void </strong>onClick(View v) {<br>      ★ <strong>mRecognizer</strong>=SpeechRecognizer.<em>createSpeechRecognizer</em>(<strong>this</strong>);<br>        <strong>mRecognizer</strong>.setRecognitionListener(<strong>listener</strong>);<br>        <strong>mRecognizer</strong>.startListening(<strong>intent</strong>);<br>    }<br>});</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/725/1*WZubHIOlAUU8X96wJAoafA.png" /></figure><p>그래서 람다식을 사용해서 클릭 리스너를 사용하니 오류가 수정되었습니다.</p><blockquote>람다식<strong> : </strong>식별자 없이 실행 가능한 함수 표현식</blockquote><pre><strong>sttBtn</strong>.setOnClickListener(v -&gt; {<br>    <strong>mRecognizer</strong>=SpeechRecognizer.<em>createSpeechRecognizer</em>(<strong>this</strong>);<br>    <strong>mRecognizer</strong>.setRecognitionListener(<strong>listener</strong>);<br>    <strong>mRecognizer</strong>.startListening(<strong>intent</strong>);<br>});</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/410/1*tOh9brr70WC3Gtpn-eFQGQ.png" /></figure><p>클릭 리스너 안에 있는 코드의 설명입니다.</p><pre><strong>mRecognizer</strong>=SpeechRecognizer.<em>createSpeechRecognizer</em>(<strong>this</strong>);<br>// 새 SpeechRecognizer를 만드는 팩토리 메서드입니다.</pre><pre><strong>mRecognizer</strong>.setRecognitionListener(<strong>listener</strong>);<br>// 모든 콜백을 수신하는 리스너를 설정합니다.listener은 아래에서 정의하였습니다.</pre><pre><strong>mRecognizer</strong>.startListening(<strong>intent</strong>);<br>// 듣기를 시작합니다.</pre><h4>음성인식 시 가장 핵심적인 부분인 RecognitionListener</h4><blockquote>팁<strong> </strong>: 메소드가 많지만,</blockquote><blockquote>private<strong> </strong>RecognitionListener listener<strong> </strong>= new RecognitionListener()</blockquote><blockquote>를 치시고 자동완성을 해주시면 아래의 코드는 자동으로 완성됩니다.</blockquote><pre><strong>private </strong>RecognitionListener <strong>listener </strong>= <strong>new </strong>RecognitionListener() {<br>    <strong>@Override<br>    public void </strong>onReadyForSpeech(Bundle params) {<br>        // 사용자가 말하기 시작할 준비가되면 호출됩니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onBeginningOfSpeech() {<br>        // 사용자가 말하기 시작했을 때 호출됩니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onRmsChanged(<strong>float </strong>rmsdB) {<br>        // 입력받는 소리의 크기를 알려줍니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onBufferReceived(<strong>byte</strong>[] buffer) {<br>        // 사용자가 말을 시작하고 인식이 된 단어를 buffer에 담습니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onEndOfSpeech() {<br>        // 사용자가 말하기를 중지하면 호출됩니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onError(<strong>int </strong>error) {<br>        // 네트워크 또는 인식 오류가 발생했을 때 호출됩니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onResults(Bundle results) {<br>        // 인식 결과가 준비되면 호출됩니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onPartialResults(Bundle partialResults) {<br>        // 부분 인식 결과를 사용할 수 있을 때 호출됩니다.<br>    }<br><br>    <strong>@Override<br>    public void </strong>onEvent(<strong>int </strong>eventType, Bundle params) {<br>        // 향후 이벤트를 추가하기 위해 예약됩니다.<br>    }<br>}</pre><h4>음성인식 준비</h4><p>저는 여기서 onReadyForSpeech() 메소드에 Toast 메시지를 띄워 음성인식을 시작하는 알림을 알려 줄 수 있도록 하였습니다.</p><pre><strong>@Override<br>public void </strong>onReadyForSpeech(Bundle params) {<br>    Toast.<em>makeText</em>(getApplicationContext(),<strong>&quot;음성인식을 시작합니다.&quot;</strong>,Toast.<strong><em>LENGTH_SHORT</em></strong>).show();<br>}</pre><h4><strong>음성인식 에러 처리</strong></h4><p>에러를 그냥 보내게 된다면 개발자가 테스트로 사용을 하다가 발생한 오류를 제대로 처리할 수 없게 되고, 추후 배포를 할 때 사용자가 극심하게 불편을 호소하게 됩니다. 그래서 작성자는 에러메시지를 처리하였습니다.</p><pre><strong>        @Override<br>        public void </strong>onError(<strong>int </strong>error) {<br>            String message;<br><br>            <strong>switch </strong>(error) {<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_AUDIO</em></strong>:<br>                    message = <strong>&quot;오디오 에러&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_CLIENT</em></strong>:<br>                    message = <strong>&quot;클라이언트 에러&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_INSUFFICIENT_PERMISSIONS</em></strong>:<br>                    message = <strong>&quot;퍼미션 없음&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_NETWORK</em></strong>:<br>                    message = <strong>&quot;네트워크 에러&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_NETWORK_TIMEOUT</em></strong>:<br>                    message = <strong>&quot;네트웍 타임아웃&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_NO_MATCH</em></strong>:<br>                    message = <strong>&quot;찾을 수 없음&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_RECOGNIZER_BUSY</em></strong>:<br>                    message = <strong>&quot;RECOGNIZER가 바쁨&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_SERVER</em></strong>:<br>                    message = <strong>&quot;서버가 이상함&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_SPEECH_TIMEOUT</em></strong>:<br>                    message = <strong>&quot;말하는 시간초과&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>default</strong>:<br>                    message = <strong>&quot;알 수 없는 오류임&quot;</strong>;<br>                    <strong>break</strong>;<br>            }<br><br>            Toast.<em>makeText</em>(getApplicationContext(), <strong>&quot;에러가 발생하였습니다. : &quot; </strong>+ message,Toast.<strong><em>LENGTH_SHORT</em></strong>).show();<br>        }</pre><p>먼저 String을 지역변수로 선언하여 오류를 잡았을 때 띄워줄 메시지를 넣어줍니다.</p><p>다음 switch-case문으로 에러가 생길 때 발생되는 메시지를 처리해줍니다. 발생된 에러에 따라 switch-case문으로 처리한 message를 Toast로 화면에 출력해 주었습니다.</p><p>에러에 대한 설명은 message를 보시면 어떨 때 어떠한 오류가 발생되는 지 알 수 있습니다. 에러 메시지를 원문으로 보고 싶은 분께서는 <a href="https://developer.android.com/reference/android/speech/SpeechRecognizer#ERROR_AUDIO">링크</a>를 클릭 해주세요.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/400/1*dX0gecaReNdV5rkbRbcPFg.png" /><figcaption>에러 처리를 하게 되면 이런 식으로 Toast가 뜨게 됩니다. (퍼미션 체크를 안함)</figcaption></figure><h4>음성인식 결과 출력</h4><pre><strong>@Override<br>public void </strong>onResults(Bundle results) {</pre><pre>// 아래 코드는 음성인식된 결과를 ArrayList로 모아옵니다.<br>ArrayList&lt;String&gt; matches = results.getStringArrayList(SpeechRecognizer.<strong><em>RESULTS_RECOGNITION</em></strong>);<br><br>// 이후 for문으로 textView에 setText로 음성인식된 결과를 수정해줍니다.<br><strong>for</strong>(<strong>int </strong>i = 0; i &lt; matches.size() ; i++){<br>        <strong>textView</strong>.setText(matches.get(i));<br>    }<br>}</pre><h3>Full Source</h3><pre><strong>package </strong>org.androidtptown.googlestt;<br><br><strong>import </strong>android.Manifest;<br><strong>import </strong>android.content.Intent;<br><strong>import </strong>android.os.Build;<br><strong>import </strong>android.speech.RecognitionListener;<br><strong>import </strong>android.speech.RecognizerIntent;<br><strong>import </strong>android.speech.SpeechRecognizer;<br><strong>import </strong>android.support.v4.app.ActivityCompat;<br><strong>import </strong>android.support.v7.app.AppCompatActivity;<br><strong>import </strong>android.os.Bundle;<br><strong>import </strong>android.widget.Button;<br><strong>import </strong>android.widget.TextView;<br><strong>import </strong>android.widget.Toast;<br><strong>import </strong>java.util.ArrayList;<br><br><strong>public class </strong>MainActivity <strong>extends </strong>AppCompatActivity {<br><br>    Intent <strong>intent</strong>;<br>    SpeechRecognizer <strong>mRecognizer</strong>;<br>    Button <strong>sttBtn</strong>;<br>    TextView <strong>textView</strong>;<br>    <strong>final int PERMISSION </strong>= 1;<br><br>    <strong>@Override<br>    protected void </strong>onCreate(Bundle savedInstanceState) {<br>        <strong>super</strong>.onCreate(savedInstanceState);<br>        setContentView(R.layout.<strong><em>activity_main</em></strong>);<br><br>        <strong>if </strong>( Build.VERSION.<strong><em>SDK_INT </em></strong>&gt;= 23 ){<br>            <em>// 퍼미션 체크<br>            </em>ActivityCompat.<em>requestPermissions</em>(<strong>this</strong>, <strong>new </strong>String[]{Manifest.permission.<strong><em>INTERNET</em></strong>,<br>                    Manifest.permission.<strong><em>RECORD_AUDIO</em></strong>},<strong>PERMISSION</strong>);<br>        }<br>        <br>        <strong>textView </strong>= (TextView)findViewById(R.id.<strong><em>sttResult</em></strong>);<br>        <strong>sttBtn </strong>= (Button) findViewById(R.id.<strong><em>sttStart</em></strong>);<br>        <br>        <strong>intent</strong>=<strong>new </strong>Intent(RecognizerIntent.<strong><em>ACTION_RECOGNIZE_SPEECH</em></strong>);<br> <strong>intent</strong>.putExtra(RecognizerIntent.<strong><em>EXTRA_CALLING_PACKAGE</em></strong>,getPackageName());<br>        <strong>intent</strong>.putExtra(RecognizerIntent.<strong><em>EXTRA_LANGUAGE</em></strong>,<strong>&quot;ko-KR&quot;</strong>);</pre><pre><strong>sttBtn</strong>.setOnClickListener(v -&gt;{<br>          <strong>mRecognizer</strong>=SpeechRecognizer.<em>createSpeechRecognizer</em>(<strong>this</strong>);<br>            <strong>mRecognizer</strong>.setRecognitionListener(<strong>listener</strong>);<br>            <strong>mRecognizer</strong>.startListening(<strong>intent</strong>);<br>        });<br>    }<br><br>    <strong>private </strong>RecognitionListener <strong>listener </strong>= <strong>new </strong>RecognitionListener() {<br>        <strong>@Override<br>        public void </strong>onReadyForSpeech(Bundle params) {<br>            Toast.<em>makeText</em>(getApplicationContext(),<strong>&quot;음성인식을 시작합니다.&quot;</strong>,Toast.<strong><em>LENGTH_SHORT</em></strong>).show();<br>        }<br><br>        <strong>@Override<br>        public void </strong>onBeginningOfSpeech() {}<br><br>        <strong>@Override<br>        public void </strong>onRmsChanged(<strong>float </strong>rmsdB) {}<br><br>        <strong>@Override<br>        public void </strong>onBufferReceived(<strong>byte</strong>[] buffer) {}<br><br>        <strong>@Override<br>        public void </strong>onEndOfSpeech() {}<br><br>        <strong>@Override<br>        public void </strong>onError(<strong>int </strong>error) {<br>            String message;<br><br>            <strong>switch </strong>(error) {<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_AUDIO</em></strong>:<br>                    message = <strong>&quot;오디오 에러&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_CLIENT</em></strong>:<br>                    message = <strong>&quot;클라이언트 에러&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_INSUFFICIENT_PERMISSIONS</em></strong>:<br>                    message = <strong>&quot;퍼미션 없음&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_NETWORK</em></strong>:<br>                    message = <strong>&quot;네트워크 에러&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_NETWORK_TIMEOUT</em></strong>:<br>                    message = <strong>&quot;네트웍 타임아웃&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_NO_MATCH</em></strong>:<br>                    message = <strong>&quot;찾을 수 없음&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_RECOGNIZER_BUSY</em></strong>:<br>                    message = <strong>&quot;RECOGNIZER가 바쁨&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_SERVER</em></strong>:<br>                    message = <strong>&quot;서버가 이상함&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>case </strong>SpeechRecognizer.<strong><em>ERROR_SPEECH_TIMEOUT</em></strong>:<br>                    message = <strong>&quot;말하는 시간초과&quot;</strong>;<br>                    <strong>break</strong>;<br>                <strong>default</strong>:<br>                    message = <strong>&quot;알 수 없는 오류임&quot;</strong>;<br>                    <strong>break</strong>;<br>            }<br><br>            Toast.<em>makeText</em>(getApplicationContext(), <strong>&quot;에러가 발생하였습니다. : &quot; </strong>+ message,Toast.<strong><em>LENGTH_SHORT</em></strong>).show();<br>        }<br><br>        <strong>@Override<br>        public void </strong>onResults(Bundle results) {<br>        // 말을 하면 ArrayList에 단어를 넣고 textView에 단어를 이어줍니다.<br>            ArrayList&lt;String&gt; matches =<br>results.getStringArrayList(SpeechRecognizer.<strong><em>RESULTS_RECOGNITION</em></strong>);<br><br>            <strong>for</strong>(<strong>int </strong>i = 0; i &lt; matches.size() ; i++){<br>                <strong>textView</strong>.setText(matches.get(i));<br>            }<br>        }<br><br>        <strong>@Override<br>        public void </strong>onPartialResults(Bundle partialResults) {}<br><br>        <strong>@Override<br>        public void </strong>onEvent(<strong>int </strong>eventType, Bundle params) {}<br>    };<br>}</pre><h3><strong>실행결과</strong></h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/320/1*AhkSF-JuV2DwZaRWB48Tyw.gif" /></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4cea24ee97af" width="1" height="1"><hr><p><a href="https://medium.com/wasd/creating-an-android-google-stt-application-4cea24ee97af">Creating an Android Google STT application</a> was originally published in <a href="https://medium.com/wasd">WASD</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Preview of Android P version update]]></title>
            <link>https://medium.com/wasd/preview-of-android-p-version-update-89813c47167b?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/89813c47167b</guid>
            <category><![CDATA[phone]]></category>
            <category><![CDATA[google-io-2018]]></category>
            <category><![CDATA[android]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Wed, 20 Jun 2018 11:38:59 GMT</pubDate>
            <atom:updated>2018-07-29T08:11:12.405Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*sY6LKfAfh8bSo6w0A8BDfw.jpeg" /></figure><h4>Google I/O Extended 2018 Seoul</h4><p><em>I/O Extended는 Google I/O 현장을 참석하지 못하였지만,<br>Google I/O의 현장 경험과 발표한 내용을 공유하는 자리입니다.<br>(서울 세종대학교, 2018 / 6 / 11)</em></p><p>작성자는 안드로이드에 관심이 있어 TRACK A에 있었습니다. <br>A Track에서 가장 흥미로웠던 것이 안드로이드 P버전 업데이트 였습니다.</p><h3>Android P 개발 일정</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*Zukz0wlo4lJNXN0v" /><figcaption>현재 개발 일정표.</figcaption></figure><blockquote><em>현재 DP3버전 업데이트로 api 추가는 끝났다고 합니다. 이 말은 앞으로 버그수정만 하겠다는 뜻이기도 하고</em><strong><em> P 버전으로 개발을 할 수도 있다는 것이죠!</em></strong></blockquote><p>이제 이번 P 업데이트로 추가된 사항을 알려 드리겠습니다.</p><h3>Wi-Fi RTT를 이용한 실내 위치추적</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/179/1*WWvqZL--Jpc1e7Hv-0Fpvw.png" /><figcaption>실내 위치추적</figcaption></figure><blockquote><strong>Android P</strong>에서는</blockquote><blockquote><em>Wi-Fi RTT(Round-Trip-Time)<br></em>라고도 불리는 IEEE 802.11mc Wi-Fi 프로토콜을 지원하므로, 앱에서 실내 위치추적을 활용할 수 있습니다.</blockquote><blockquote><strong><em>앞으로의 지도 어플들은 건물 위치뿐만 아니라 건물 내부에 어떤 것이 있는지까지 자세히 알 수 있겠군요.</em></strong></blockquote><h3>디스플레이 컷아웃 지원</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/660/0*D9Qa6whFwOjLCwD4.jpg" /><figcaption>LG G7</figcaption></figure><blockquote>최근에 LG에서 G7이라는 휴대폰을 선보였습니다. 이런 휴대폰처럼 <br><strong><em>디스플레이가 특이한 모양을 이번 업데이트로 보기 편하게 바꾸어 줍니다.</em></strong></blockquote><h3>개선된 메시지 알림</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*AjUuGSaAwuw2JX66.png" /><figcaption>P 업데이트로 바뀌는 메시지 알림</figcaption></figure><blockquote><strong><em>이번 업데이트로 문자와 같은 메시지 알림이 위와 같이 표시가 된다고 합니다.</em></strong></blockquote><h3>멀티 카메라 지원 및 카메라 업데이트</h3><blockquote><strong><em>휴대폰에 전후방 카메라를 동시에 사용하게 만들어서 혁신적인 기능을 구현할 수 있습니다.</em></strong></blockquote><h3>HDR VP9 동영상, HEIF 이미지 압축, 미디어 API</h3><blockquote><em>Android P에서는 HDR(High Dynamic Range) VP9 프로필 2를 기본적으로 지원하므로, 이제 HDR 가능 기기에서 사용자에게 YouTube, Play Movies 및 기타 소스의 HDR 가능 동영상을 제공할 수 있습니다. 그리고 HEIF(heic) 이미지 인코딩 지원을 플랫폼에 추가합니다. </em><br><strong><em>앞으로 jpeg보다 적은 용량으로 좋은 화질의 사진을 담을 수 있습니다.</em></strong></blockquote><h3>JobScheduler의 데이터 비용 민감도</h3><blockquote><em>JobScheduler는 Doze, 앱 대기 및 백그라운드 제한 변경사항에서 백그라운드 작업 혹은 예약된 작업을 관리해주는 안드로이드의 핵심 서비스입니다. </em><br><strong><em>이제 </em></strong><a href="https://developer.android.com/reference/android/app/job/JobInfo"><strong><em>jobinfo</em></strong></a><strong><em>로 예상 데이터 크기를 선언하고, 프리페칭 신호를 보내고, 상세한 네트워크 요구사항을 지정할 수 있습니다.</em></strong></blockquote><h3>Neural Networks API 1.1</h3><blockquote><em>Android에서 온디바이스 머신러닝을 가속화하기 위해 Android 8.1(API 레벨 27)에서 Neural Networks API가 도입되었습니다. </em><br><strong><em>Android P에서는 이 API를 확장하고 개선하는 중</em></strong><em>이며 9개의 새로운 연산(Pad, BatchToSpaceND, SpaceToBatchND, Transpose, Strided Slice, Mean, Div, Sub 및 Squeeze) 지원을 추가하는 중입니다.</em></blockquote><h3>자동 완성 프레임워크</h3><blockquote><em>Android 8.0(API 레벨 26)에서는 앱의 양식을 더욱 쉽게 작성할 수 있는 Autofill Framework가 도입되었습니다.</em></blockquote><blockquote><strong><em>추가적으로 보안 기능 향상, Android백업의 클라이언트측 암호화, 접근성 서비스 개선, 화면 회전을 수동으로 할 수 있는 기능이 추가되었습니다.</em></strong></blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*dpdtDeZfu3vxA4K-8q2weA.gif" /><figcaption>화면 회전을 수동으로 회전을 트리거 할 수 있게 되었습니다</figcaption></figure><p>이번 업데이트로 추가된 메소드 목록 중 일부 입니다.</p><pre><strong>아래 메서드는 안드로이드 스튜디오 3.2버전 업데이트 이후 사용할 수 있습니다.</strong></pre><pre><a href="https://developer.android.com/reference/android/view/WindowInsets.html#getDisplayCutout()">getDisplayCutout()</a>:컷아웃의 존재여부와 위치를 결정합니다.</pre><pre><a href="https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message#setData(java.lang.String,%20android.net.Uri)">setData()</a>:전화의 메시지에 사진을 첨부할 수 있습니다.</pre><pre><a href="https://developer.android.com/reference/android/app/Notification.MessagingStyle#setGroupConversation(boolean)">setGroupConversation()</a>:대화가 그룹대화인지를 알려줍니다.</pre><pre><a href="https://developer.android.com/reference/android/app/Notification.Action.Builder#setSemanticAction(int)">setSemanticAction()</a>:메시지에 읽기, 삭제, 회신 등을 표시할 수 있습니다.</pre><pre><a href="https://developer.android.com/reference/android/app/RemoteInput.Builder.html#setChoices(java.lang.CharSequence[])">RemoteInput.setChoices()</a>:메시지를 받았을 때 회신할 문장을 표시합니다.</pre><p>이렇게 간단하게 안드로이드 P버전을 살펴보았습니다. P버전이 빨리 업데이트 되어서 해당 버전 위주로 개발해보고 싶습니다.<br><em>(사진은 대부분 </em><a href="https://developer.android.com/preview/features"><em>developer.android.com</em></a><em> 에서 가져왔습니다.)</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=89813c47167b" width="1" height="1"><hr><p><a href="https://medium.com/wasd/preview-of-android-p-version-update-89813c47167b">Preview of Android P version update</a> was originally published in <a href="https://medium.com/wasd">WASD</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Customize the Android Action Bar]]></title>
            <link>https://medium.com/wasd/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%95%A1%EC%85%98%EB%B0%94-%EC%BB%A4%EC%8A%A4%ED%85%80-5657d3fc5257?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/5657d3fc5257</guid>
            <category><![CDATA[material-design]]></category>
            <category><![CDATA[android]]></category>
            <category><![CDATA[android-app-development]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Mon, 04 Jun 2018 23:31:06 GMT</pubDate>
            <atom:updated>2018-08-13T19:58:50.995Z</atom:updated>
            <content:encoded><![CDATA[<h4>안드로이드 액션 바를 없애거나 버튼을 추가해 보겠습니다.</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/751/1*84hpHXJnagEJkhXkbZjfZA.png" /><figcaption><a href="https://material.io/design/components/app-bars-top.html#usage">https://material.io/design/components/app-bars-top.html#usage</a></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/760/1*7ok6bobs5z9a8nbwoYTtrw.png" /><figcaption><a href="http://klutzy.nanabi.org/android-design-ko/patterns/actionbar.html">http://klutzy.nanabi.org/android-design-ko/patterns/actionbar.html</a></figcaption></figure><h4>액션바</h4><p>보통 액션 바는 안드로이드 애플리케이션 화면 상단에 위치해 있습니다.</p><p>액션바의 용도로는</p><ul><li>(<em>새로 만들기</em>나 <em>검색</em> 등과 같은) 중요한 동작을 눈에 띄게 하고 <br>기대했던대로 사용할 수 있게 합니다.</li><li>앱 내의 일관된 탐색과 뷰 전환을 지원합니다.</li><li>별로 사용하지 않는 액션을 액션 오버플로우로 제공하여 산만함을<br>줄입니다.</li><li>앱에 아이덴티티를 부여하는 전용 공간을 제공합니다.</li></ul><p>이 글에서는 이러한 액션바를 <strong>없애거나</strong> 액션바에 <strong>버튼을 추가</strong>해 간단하게 Toast 메시지를 띄워보는 것을 해보겠습니다.</p><h4>액션바 없애기</h4><p>안드로이드 스튜디오에서 새 프로젝트를 만들면 전체화면 같은 템플릿을<br>적용하지 않는 이상 액션바가 항상 화면상단에 위치하여 나타납니다. <br>하지만 애플리케이션을 개발하다 보면 <strong><em>디자인적으로</em></strong> 액션바가 필요하지 <br>않아 <strong><em>없애야 할 때도 있습니다.</em></strong> 그래서 없애 보겠습니다.</p><p>먼저 AndroidManifest.xml에 들어갑니다. android:theme=&quot;@style/AppTheme&quot;에 ctrl + 좌클릭으로<strong> </strong>style.xml에<br>들어갑니다.</p><pre>&lt;<strong>style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;</strong>&gt;<br>    <em>&lt;!-- Customize your theme here. --&gt;<br>    </em>&lt;<strong>item name=&quot;colorPrimary&quot;</strong>&gt;@color/colorPrimary&lt;/<strong>item</strong>&gt;<br>    &lt;<strong>item name=&quot;colorPrimaryDark&quot;</strong>&gt;@color/colorPrimaryDark&lt;/<strong>item</strong>&gt;<br>    &lt;<strong>item name=&quot;colorAccent&quot;</strong>&gt;@color/colorAccent&lt;/<strong>item</strong>&gt;<br>&lt;/<strong>style</strong>&gt;</pre><p>소스코드를 위 처럼 바꾸어 주면</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/200/1*BAjwM09skzy9R4yBBnlzqg.png" /></figure><h4>액션바에 버튼 추가</h4><p>이번에는 액션바에 버튼을 추가해보겠습니다. 다시 소스코드를 원래대로 <br>돌려주세요.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/200/1*FF6mCaq2zBSVBux0YoVYyQ.png" /></figure><p>먼저 res폴더에 menu폴더를 생성하고 menu폴더에 xml파일을 추가합니다.</p><pre><em>&lt;?</em><strong>xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;</strong><em>?&gt;<br></em>&lt;<strong>menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;<br>    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</strong>&gt;<br>&lt;/<strong>menu</strong>&gt;</pre><p>이런 식으로 기본코드가 생성 될 것입니다. 그러면 이제 버튼을 추가해야겠죠</p><pre>&lt;<strong>item android:id=&quot;@+id/action_search&quot;<br>android:icon=&quot;@drawable/ic_launcher_foreground&quot;<br>app:showAsAction=&quot;always&quot;</strong>/&gt;</pre><p>저는 이런식으로 코드를 작성하였습니다. 코드에 대한 설명은 아래와 같습니다.</p><pre>android:id : item의 아이디</pre><pre>android:icon : 액션바 버튼의 이미지</pre><pre>app:showAsAction : 액션바 버튼을 어떻게 보여줄지 결정합니다.</pre><pre>옵션: always(항상보여줌), never(오른쪽 끝에 숨김), ifRoom(공간이 있다면 보여주고 없으면 오른쪽 끝에 숨김), withText(텍스트와 함께 표시)</pre><pre>추가<br>android:title : 버튼에 text를 추가합니다.</pre><p>버튼을 액션바에 추가해봅시다. java파일로 들어가서 소스코드를 추가해줍시다.</p><pre><strong>public boolean </strong>onCreateOptionsMenu(Menu menu){<br>    getMenuInflater().inflate(R.menu.<strong><em>actionbar_actions</em></strong>, menu);<br>    <strong>return true</strong>;<br>}</pre><p>버튼을 만들었으니 버튼에 클릭리스너를 넣어봅시다.</p><p>간단하게 Toast 메세지를 띄어보겠습니다.</p><pre>@Override<br><strong>public boolean </strong>onOptionsItemSelected(MenuItem item) {<br>    <strong>switch </strong>(item.getItemId()){<br>        <strong>case </strong>R.id.<strong><em>action_search</em></strong>:<br>            Toast.<em>makeText</em>(getApplicationContext(),<strong>&quot;action_search 버튼이 눌렸습니다.&quot;</strong>,Toast.<strong><em>LENGTH_LONG</em></strong>).show();<br>            <strong>return true</strong>;<br>    }<br>    <strong>return super</strong>.onOptionsItemSelected(item);<br>}</pre><p>액션바의 버튼에 이벤트 처리를 하려면 onOptionsItemSelected() 메서드를 사용하여야합니다.</p><p>switch 문을 사용하여서 이벤트 처리를 해도되고 if문을 사용하여 이벤트 처리를 해도됩니다. 아까 액션바 버튼에 id를 넣지 않으셨다면 id 넣어야 <br>이벤트 처리를 할 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/200/1*43LyhXMbk-FFQHryGAPfWQ.png" /></figure><p>이렇게 해서 간단하게 액션바를 커스텀 해보았습니다.</p><h4>Another article by `신지웅`</h4><ul><li><a href="https://medium.com/wasd/daum-map-api-simple-example-4cb4130fcf30">Daum Map API를 이용해 지도에 마커 표시하기</a></li><li><a href="https://medium.com/wasd/configure-bottom-navigation-330f2c0d9832">Configure Bottom Navigation</a></li><li><a href="https://medium.com/wasd/creating-an-android-google-stt-application-4cea24ee97af">Creating an Android Google STT application</a></li><li><a href="https://medium.com/wasd/preview-of-android-p-version-update-89813c47167b">Preview of Android P version update</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=5657d3fc5257" width="1" height="1"><hr><p><a href="https://medium.com/wasd/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C-%EC%8A%A4%ED%8A%9C%EB%94%94%EC%98%A4-%EC%95%A1%EC%85%98%EB%B0%94-%EC%BB%A4%EC%8A%A4%ED%85%80-5657d3fc5257">Customize the Android Action Bar</a> was originally published in <a href="https://medium.com/wasd">WASD</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Replace many characters with strings using Excel]]></title>
            <link>https://medium.com/@shinjiwoong1656/tip-excel%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%A7%8E%EC%9D%80-%EB%AC%B8%EC%9E%90-%EB%AC%B8%EC%9E%90%EC%97%B4-%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0-8365a3495722?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/8365a3495722</guid>
            <category><![CDATA[excel]]></category>
            <category><![CDATA[programming-tips]]></category>
            <category><![CDATA[string]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Sun, 20 May 2018 15:46:36 GMT</pubDate>
            <atom:updated>2018-06-30T12:21:16.226Z</atom:updated>
            <content:encoded><![CDATA[<p>저는 현재 안드로이드 어플을 개발하고 있습니다. 어플을 만들던 도중 어떤 큰 문턱에 가로막히게 되었습니다. <strong>바로 3000개 가량의 문자열을 배열에 추가</strong> 시켜야 하는 것 이였습니다!</p><p>3천 개의 문자가 아닌 문자열을 다쓰고 있으면 손에 살이 붙어있지 않게 되겠죠. 그래서 구글링을 좀 하다가 Excel에 Concatenate함수를 사용하면 문자열을 연결 시켜서 배열에 넣을 수 있도록 만들 수 있지 않을까 하던 도중 찾아냈습니다.</p><p>말이 길어졌는데요. 바로 사진으로 설명드리겠습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/587/1*cwIlolXSCOMbOPMbGnVraQ.png" /><figcaption>기본적으로 <strong>CONCATENATE함수</strong>는 여러 개의 텍스트를 하나로 바꾸는 역할을 합니다.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/509/1*x077Tcx4u5SZkmM6al77TA.png" /><figcaption>먼저 배열에 넣을 값을 입력해둡니다.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/511/1*Wg0I3jiCA7LMCW3uVRvwJw.png" /><figcaption>배열에 값을 넣기 위해선 E4,E5처럼 “ ”가 필요합니다. 데이터가 몇 개 없으면 그냥 치겠지만 저는 위에서 말했다시피 3000개의 데이터를 다 바꾸어 주어야 했습니다.</figcaption></figure><p>그래서 <strong>CONCATENATE함수</strong>를 사용하였습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/228/1*752Org22DFhzuePMWYyCwg.png" /></figure><p>함수 설정을 위 사진과 같게 해주시면</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/510/1*KW6D3MYJQ3rQuBzVfl9d6Q.png" /><figcaption>E4와 같이 표현이 됩니다. 추가적으로 반점(,)을 넣고 싶으면</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/237/1*0kBn0K3JNOwoJmLer0MXlw.png" /><figcaption>이렇게 설정해 주어</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/511/1*kqiZB9ZIV1n5ZPfNO96jpQ.png" /><figcaption>사진과 같이 표현됩니다. 나머지도 설정해주면</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/510/1*klbC_7-LT5UaPDAWJqYu9w.png" /><figcaption>시간이 걸릴 작업을 빠른 시간 안에 해결할 수 있습니다.</figcaption></figure><p>이제 E4부터 E13까지 복사한 후 배열에 넣은 후 E13에 있는 반점(,)을 지우면 배열이 생성 되겠죠? 쌍따옴표(“”)말고도 다른 문자도 삽입할 수 있으니까 사용하시면서 찾아보세요.</p><p>오늘의 포스팅 마치겠습니다. 감사합니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8365a3495722" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[리눅스 마스터 2급 정복하기 <6>]]></title>
            <link>https://medium.com/@shinjiwoong1656/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%88%EC%8A%A4%ED%84%B0-2%EA%B8%89-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0-6-48e5b63007df?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/48e5b63007df</guid>
            <category><![CDATA[linux-tutorial]]></category>
            <category><![CDATA[linux]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Wed, 16 May 2018 14:35:29 GMT</pubDate>
            <atom:updated>2018-06-30T12:48:29.605Z</atom:updated>
            <content:encoded><![CDATA[<h4>오늘은 파일 찾기 명령어를 배워 보겠습니다.</h4><p>파일 찾기 명령어는 두 가지 정도로 나눌 수 있는데 ‘locate’와 ‘find’가 있습니다. 현재 저의 컴퓨터에서 updatedb설정이 오류가 나오는 관계로 locate설명은 이론적으로만 설명하고 사진설명은 못 드립니다. 양해 부탁드립니다.</p><h4>① locate 명령어</h4><p>locate [옵션] 패턴</p><h4>옵션</h4><blockquote>c : 관련 정보의 경로 출력 대신에 개수를 출력함.</blockquote><blockquote>i : 대소문자를 구분하지 않음.</blockquote><p>예를 들어서 linux 디렉토리를 찾을 때는</p><ul><li>locate linux 를 사용하면 되고</li></ul><p>linux와 LINUX의 디렉토리를 동시해 찾을 때는</p><ul><li>locate -i linux를 사용하면 된다.</li></ul><h4>② find 명령어</h4><p>find [옵션] 옵션에 맞는 대상</p><h4>옵션</h4><blockquote>name : 주어진 이름의 파일이나 디렉터리를 찾음.</blockquote><blockquote>user : 지정한 사용자의 파일이나 디렉터리를 찾음.</blockquote><blockquote>group : 지정한 그룹 소유의 파일이나 디렉터리를 찾음.</blockquote><blockquote>uid : 지정한 UID 소유의 파일이나 디렉터리를 찾음.</blockquote><blockquote>gid : 지정한 UID 소유의 파일이나 디렉터리를 찾음.</blockquote><blockquote>perm : 지정한 퍼미션 값으로 갖는 파일이나 디렉터리를 찾음.</blockquote><blockquote>type : 지정한 파일의 유형을 찾음.</blockquote><ul><li>d : 디렉터리</li><li>f :일반 파일</li><li>l : 링크 파일</li><li>b : 블록 디바이스</li><li>c : 캐릭터 디바이스</li><li>p : 파이프 파일</li><li>s : 소켓 파일</li></ul><blockquote>atime 설정일: 설정일 이전에 접근한 파일을 찾음.</blockquote><blockquote>ctime 설정시간 : Change Time 기준으로 찾음</blockquote><blockquote>mtime 설정시간 : Modify Time 기준으로 찾음</blockquote><blockquote>exec : 찾아진 파일 등과 연계하여 어떠한 명령을 내릴 있는 옵션임.</blockquote><blockquote>ok : 확인 메세지를 출력함</blockquote><pre>※더 많은 명령어가 있고 사용할 수 있지만 이정도까지 정리하도록 하겠습니다.</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*e9zJEUG0Qd5Fi_TnK8QpUg.png" /><figcaption><strong>/home 디렉토리에 linux가 있는 것을 확인하고</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*3Kl0VRYPI6KIHRWgZ5Iyjw.png" /><figcaption><strong>root(루트) 디렉토리로 와서 /home/linux디렉토리를 찾아보겠습니다.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*N-nnDNdAJ5j_fSvzfINkDQ.png" /><figcaption><strong>find -name linux </strong>로 현재 디렉토리 아래에 있는 모든<strong> linux </strong>디렉토리를 찾았습니다.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*Ob0rj6wDsqkr3oa8YsjqTw.png" /><figcaption>이번에는 퍼미션 값으로 <strong>linux1.txt</strong>를 찾아보겠습니다.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*G0DpnnJi5olHRw_qpGUXlw.png" /><figcaption><strong>linux1.txt</strong>의 퍼미션이 <strong>rwxr-xr-x</strong>이므로 <strong>755</strong>로 설정을 한 뒤 <strong>/home</strong>디렉토리에서 찾아보겠습니다.</figcaption></figure><pre>※root디렉토리에서 하려고 하였지만 같은 퍼미션 파일이 너무 많아서 home디렉토리에서 하였습니다 (--)(__)</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*albgECwnamHEXv5boJqx8Q.png" /><figcaption><strong>linux1.txt </strong>파일을 <strong>퍼미션 값</strong>으로 찾아보았습니다.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/723/1*2vmvq9k3UBfJ_P8GzvbZSA.png" /></figure><p>마지막으로 파일의 종류로 찾아보겠습니다. 저희 home 디렉토리에는 두 개의 디렉토리가 존재합니다. linux와 test 디렉토리를 찾아보겠습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*fxahAkVlke3VW1mn-LjFsA.png" /><figcaption><strong>find -type d</strong>로 디렉토리를 찾아보았습니다. 잘 이용하면 편하게 사용 가능하겠죠?</figcaption></figure><p>저의 오늘 포스팅은 여기까지 하겠습니다. 감사합니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=48e5b63007df" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[리눅스 마스터 2급 정복하기 <5>]]></title>
            <link>https://medium.com/@shinjiwoong1656/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%88%EC%8A%A4%ED%84%B0-2%EA%B8%89-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0-5-b67fc0a72542?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/b67fc0a72542</guid>
            <category><![CDATA[linux-tutorial]]></category>
            <category><![CDATA[linux]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Tue, 08 May 2018 08:35:01 GMT</pubDate>
            <atom:updated>2018-06-16T19:31:06.028Z</atom:updated>
            <content:encoded><![CDATA[<h4><a href="https://medium.com/wasd/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%88%EC%8A%A4%ED%84%B0-2%EA%B8%89-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0-4-3845c70dd44e">리눅스 마스터 2급 정복하기 &lt;4&gt;</a>에 이어 그룹변경 명령어와 퍼미션 설정 명령어에 대해 알아보자.</h4><h4>① 그룹변경 명령어</h4><p>chgrp [옵션][그룹][파일] : 파일의 그룹을 변경하는 명령어이다.</p><h4>옵션</h4><blockquote>c : 변경된 정보 출력</blockquote><blockquote>f : 중요한 오류 메세지가 아니면 출력하지 않음</blockquote><blockquote>v : 명령 진행 결과에 대한 정보를 자세히 출력</blockquote><blockquote>--help : 도움말을 출력</blockquote><blockquote>--version : 명령어의 버전 정보를 출력</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*0fywmCg-OiXu_I4ENZ5G9A.png" /></figure><p><strong>팬으로 블록을 해놓은 곳이 그룹이라고 전에 포스팅하였다. 이번에는 그룹을 다른 그룹으로 옮기는 것을 해볼 것이다.</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*J1mfRcntCUCFoYN8y5lk7w.png" /><figcaption><strong>linux1의 그룹을 root에서 test로 바꾸었다.</strong></figcaption></figure><p>다른 옵션은 사용에 큰 차이가 없으므로 필요하면 알아서 사용하도록 하자</p><h4>② 퍼미션 설정 명령어</h4><p>umask [설정] : 퍼미션을 확인하거나, 퍼미션을 변경할 때 사용하게 된다.</p><p>설정값 : 8진수와 같이 r = 4, w= 2, x =1로 설정이 된다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*P2Kqch6BgR1Fi62R2NUCfw.png" /></figure><p>umask를 아무 설정 값 없이 사용하면 현재 적용된 퍼미션을 알 수 있는데 현재 필자는 0022로 777에 디렉토리 최대값에서 022를 빼면 755가 나온다. 755를 설정값으로 풀어보면 rwxr-xr-x로 설정되게 된다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*7PbSzkxg8wCZIMoJ9aNNDA.png" /><figcaption><strong>위 내용처럼 파일 생성 시 기본 퍼미션은 rwxr-xr-x로 설정되어 있는 것을 알 수 있다.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*aZNFZRFSy_Q7AHQ05J5DJg.png" /><figcaption><strong>이제 퍼미션을 수정해보도록 하겠다. umask 0000으로 수정하겠다.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*4pBLzvGvz2aey1KHJQQbiw.png" /></figure><p>퍼미션 수정 후 파일을 생성하니 디렉토리 이름에 초록색 블록이 칠해져 있는 것을 알 수 있다. 최대 퍼미션 777에서 000을 빼면 777이라는 최대 퍼미션이 나오므로 디렉토리 이름이 초록색 블록이 칠해진 것을 알 수 있다.</p><p>이런 식으로 chmod를 사용하여 파일의 퍼미션을 바꿀 수도 있지만 umask로 퍼미션을 바꿀 수 있다. 편한 방법을 사용하여서 퍼미션 설정을 하는 것을 추천한다.</p><p>오늘 설명은 여기까지 하도록 하겠습니다. 글을 읽어 주셔서 감사합니다.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fupscri.be%2F7890b0%3Fas_embed%3Dtrue&amp;dntp=1&amp;url=https%3A%2F%2Fupscri.be%2F7890b0%2F&amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;type=text%2Fhtml&amp;schema=upscri" width="800" height="400" frameborder="0" scrolling="no"><a href="https://medium.com/media/3dff84a60f5c2800486faf73a08e2e7f/href">https://medium.com/media/3dff84a60f5c2800486faf73a08e2e7f/href</a></iframe><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b67fc0a72542" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[리눅스 마스터 2급 정복하기 <4>]]></title>
            <link>https://medium.com/@shinjiwoong1656/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%88%EC%8A%A4%ED%84%B0-2%EA%B8%89-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0-4-3845c70dd44e?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/3845c70dd44e</guid>
            <category><![CDATA[linux-tutorial]]></category>
            <category><![CDATA[linux]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Mon, 30 Apr 2018 00:13:23 GMT</pubDate>
            <atom:updated>2018-06-16T19:29:55.192Z</atom:updated>
            <content:encoded><![CDATA[<h4><strong>소유권과 허가권에 대하여 알아보자.</strong></h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*B6iI6Q4X5cmFu4MCicN7xg.png" /><figcaption><strong>흰색 밑줄은 허가권, 노란색 밑줄은 소유권, 청록색 밑줄은 그룹을 나타낸다.</strong></figcaption></figure><ul><li>추가 정보 : 흰색 밑줄의 drwxr-xr-x는 권한을 나타낸다.</li><li>r : 파일의 내용을 볼 수 있는 권한, 숫자모드 : 4</li><li>w : 파일의 내용을 수정할 수 있는 권한, 숫자모드 : 2</li><li>x : 실행 파일을 실행시킬 수 있는 권한, 숫자모드 : 1</li></ul><h4>①허가권(권한) 설정 명령어</h4><p>chmod [옵션][파일이름] : 파일이나 디렉터리에 접근할 수 있는 허가권을 설정하는 명령이다. 문자 모드와 숫자모드로 지정한다. 사용자 지정은 u, g, o, a를 사용하고, 설정 기호는 +, -, =을 사용한다.</p><h4>옵션</h4><blockquote>R : 디렉터리 내부의 모든 파일의 권한 변경</blockquote><blockquote>c : 변경된 정보 출력</blockquote><blockquote>f : 중요한 오류 메세지가 아니면 출력하지 않음</blockquote><blockquote>v : 명령 진행 결과에 대한 정보를 자세히 출력</blockquote><blockquote>--version : 명령어의 버전 정보를 출력</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*n9kgEPwJQnGPc9BwIdfJVA.png" /><figcaption><strong>미리 디렉토리를 만들어 주자.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*hejbLHmdCZgdnu-VxOMA0Q.png" /><figcaption><strong>chmod -c 777로 권한을 최대로 바꾸고 ‘c’ 명령어로 변경된 정보를 출력해 보았다.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*wgtbIAl9IsXRtH5UN44lUg.png" /><figcaption><strong>위 사진과 비교해 보았을 때 디렉토리에 초록색으로 칠해져 있다.</strong></figcaption></figure><h4>② 소유권 및 그룹 소유권 설정 명령어</h4><p>chown [옵션] [사용자, 그룹명] [파일이름] : 파일이나 디렉토리의 소유권과 그룹 소유권을 변경하는 명령어이다.</p><h4>옵션</h4><blockquote>R : 디렉터리 내부의 모든 파일의 권한 변경</blockquote><blockquote>c : 변경된 정보 출력</blockquote><blockquote>f : 중요한 오류 메세지가 아니면 출력하지 않음</blockquote><blockquote>v : 명령 진행 결과에 대한 정보를 자세히 출력</blockquote><blockquote>--version : 명령어의 버전 정보를 출력</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*mzY-JSDkz8pVAyfs24YRiA.png" /><figcaption><strong>chown test linux1 명령어로 linux1의 사용자를 test로 바꾸었다.</strong></figcaption></figure><h4><strong>오늘은 chomod와 chown 명령어를 사용해 보았다. 다음 시간엔 chgrp와 umask에 대해 알아보자.</strong></h4><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fupscri.be%2F7890b0%3Fas_embed%3Dtrue&amp;dntp=1&amp;url=https%3A%2F%2Fupscri.be%2F7890b0%2F&amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;type=text%2Fhtml&amp;schema=upscri" width="800" height="400" frameborder="0" scrolling="no"><a href="https://medium.com/media/3dff84a60f5c2800486faf73a08e2e7f/href">https://medium.com/media/3dff84a60f5c2800486faf73a08e2e7f/href</a></iframe><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3845c70dd44e" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[리눅스 마스터 2급 정복하기 <3>]]></title>
            <link>https://medium.com/@shinjiwoong1656/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%88%EC%8A%A4%ED%84%B0-2%EA%B8%89-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0-3-7b4ef0420cde?source=rss-ab5bedee73a5------2</link>
            <guid isPermaLink="false">https://medium.com/p/7b4ef0420cde</guid>
            <category><![CDATA[linux-tutorial]]></category>
            <category><![CDATA[linux]]></category>
            <dc:creator><![CDATA[신지웅]]></dc:creator>
            <pubDate>Mon, 16 Apr 2018 13:38:53 GMT</pubDate>
            <atom:updated>2018-06-30T12:50:23.931Z</atom:updated>
            <content:encoded><![CDATA[<h4>디렉토리 삭제 명령어와 파일 생성 명령어에 대해서 알아보자.</h4><h4>① 폴더 삭제 명령어</h4><p><strong>rmdir [옵션] [디렉토리] : 디렉토리를 삭제할 때 사용되는 명령어이다. 빈 디렉토리만 삭제할 수 있다는 단점이 있다. [옵션] : p(상위 디렉토리 삭제)</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*LPRjxpD1AhBucwEybFKBgg.png" /><figcaption><strong>rmdir 명령어로 linux1 디렉토리를 지워보겠다.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*rB9enntutyYwLfq8Dkp8Kw.png" /><figcaption><strong>사용 결과 linux1 디렉토리가 삭제된 것을 확인 할 수 있다.</strong></figcaption></figure><p><strong>rm [옵션] [파일이름]: 파일, 디렉토리를 삭제할 때 사용되는 명령어이다. [옵션] : r(디렉토리 삭제시 하위 경로와 파일 삭제), f(삭제 확인 물음 없이 강제 삭제), v(파일 삭제 정보를 자세히 보여준다.), *(현재 디렉토리 파일 전체 선택)</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*rVofGsb7-aP-OBiEVaknrA.png" /><figcaption><strong>현재 linux2에는 linux3이라는 디렉토리가 들어가 있다.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*7dZ5NcKJV9O02pnAhQntCw.png" /><figcaption><strong>home디렉토리에서 rmdir로 linux2를 지울려고 하면 디렉토리가 비어있지 않다는 에러메세지 표시</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*ulRrOVr5o0OgBXASKgOXdQ.png" /><figcaption><strong>rm명령어 사용시 하위 파일을 지우겠냐는 메시지 출력, y/n로 선택가능</strong></figcaption></figure><h4>② 파일 생성 명령어</h4><p><strong>touch [옵션][파일이름] : 파일 생성과 추가적으로 파일의 수정 시간을 고칠 수 있다. [옵션] : r(시간 동기화), t(지정 시간으로 변경)</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*ZYvfUfQ9o1pWsaM111qTkA.png" /><figcaption><strong>필자가 바꿀 파일의 이름은 linux5 디렉토리이다. 노란색으로 표시를 해둔 부분을 잘 보자.</strong></figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/722/1*lJ4w1ncQWBBqFlBsr1pYBw.png" /><figcaption><strong>touch 명령어로 파일 수정시간을 바꾸어 보았다.</strong></figcaption></figure><p><strong>추가적으로 touch [파일명].확장자를 하면 파일을 만들 수 있다.</strong></p><blockquote>이후 추가 옵션은 알아서 해보자.</blockquote><h4>이전 과정에서 알려주지 않은 명령어</h4><p>ll : 현재 디렉토리에 있는 파일을 모두 보여줌</p><p>ls -l : 위 내용과 동일함</p><h3>긴 글 읽어 주셔서 감사합니다 ㅎㅎ</h3><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=7b4ef0420cde" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>