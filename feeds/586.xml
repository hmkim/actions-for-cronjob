<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-31528299</id><updated>2018-09-17T20:05:32.515+10:00</updated><category term="swift"/><category term="스위프트"/><category term="스칼라"/><category term="scala"/><category term="actor"/><category term="akka"/><category term="class"/><category term="struct"/><category term="구조체"/><category term="액터"/><category term="클래스"/><category term="array"/><category term="dictionary"/><category term="map"/><category term="scala excercise"/><category term="딕셔너리"/><category term="맵"/><category term="배열"/><category term="스칼라 연습"/><category term="외부이름"/><category term="자바스크립트"/><category term="철학자의 만찬"/><category term="함수"/><category term="3항연산자"/><category term="BLOB"/><category term="Blogger"/><category term="FRP"/><category term="Newton method"/><category term="Oracle"/><category term="PIS"/><category term="Partial Function"/><category term="SICP"/><category term="SQL"/><category term="StackEdit"/><category term="Traversable"/><category term="YAML"/><category term="akka routing"/><category term="akka 라우팅"/><category term="anonymous function"/><category term="argument"/><category term="arithmetic operator"/><category term="capture"/><category term="character replace"/><category term="closure"/><category term="commandline"/><category term="computed property"/><category term="cygwin"/><category term="dspace"/><category term="enumeration"/><category term="external name"/><category term="final"/><category term="function"/><category term="implicit"/><category term="inheritence"/><category term="javascript"/><category term="lazy"/><category term="lens"/><category term="let"/><category term="linux"/><category term="literal"/><category term="logical operator"/><category term="memory_limit"/><category term="method"/><category term="mutating"/><category term="nested data structure"/><category term="operator"/><category term="option"/><category term="override"/><category term="parameter"/><category term="php"/><category term="php-cli"/><category term="property"/><category term="range operator"/><category term="reactive"/><category term="reactive programming"/><category term="return type"/><category term="sbt"/><category term="stored property"/><category term="subclass"/><category term="subscript"/><category term="subscript overloading"/><category term="superclass"/><category term="ternary operator"/><category term="tr"/><category term="tuple"/><category term="type"/><category term="type method"/><category term="type property"/><category term="utility"/><category term="var"/><category term="값 중심의 프로그래밍"/><category term="계산프로퍼티"/><category term="곱집합"/><category term="글쓰기"/><category term="내부이름"/><category term="내포구조"/><category term="내포함수"/><category term="논리연산자"/><category term="뉴튼법"/><category term="데카르트곱"/><category term="도사티비"/><category term="디스페이스"/><category term="렌즈"/><category term="리눅스"/><category term="리터럴"/><category term="마크다운"/><category term="매개변수"/><category term="메모리"/><category term="메서드"/><category term="명령행"/><category term="무명함수"/><category term="문자"/><category term="문자열"/><category term="문자열 함수"/><category term="문자치환"/><category term="반응형"/><category term="반응형 프로그래밍"/><category term="반환타입"/><category term="범위연산자"/><category term="변수"/><category term="부분함수"/><category term="블로그"/><category term="블롭"/><category term="산술연산자"/><category term="상속"/><category term="상수"/><category term="서브클래스"/><category term="수퍼클래스"/><category term="스위프트 언어"/><category term="아카"/><category term="암시클래스"/><category term="엑셀"/><category term="연산"/><category term="연산자"/><category term="열거형"/><category term="오라클"/><category term="오버라이드"/><category term="옵션"/><category term="인자"/><category term="일등객체"/><category term="저장프로퍼티"/><category term="지연계산"/><category term="첨자"/><category term="첨자 오버로딩"/><category term="커맨드라인"/><category term="클로저"/><category term="타입"/><category term="타입메서드"/><category term="타입프로퍼티"/><category term="튜플"/><category term="파라미터"/><category term="파이널"/><category term="포획"/><category term="프로그래밍기초"/><category term="프로퍼티"/><category term="함수형 프로그래밍"/><title type='text'>士別三日卽當刮目相對</title><subtitle type='html'>어제보다 더 나은 오늘</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://www.enshahar.me/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default?start-index=26&amp;max-results=25'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>31</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-31528299.post-6413828930656402464</id><published>2016-08-05T21:10:00.001+10:00</published><updated>2016-08-05T21:13:59.448+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="Partial Function"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="부분함수"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="함수"/><title type='text'>용어로 살펴보는 스칼라 - 부분함수(PartialFunction)</title><content type='html'>&lt;p&gt;스칼라를 처음 시작하는 사람들은 다양한 용어에 곤란을 겪곤 합니다. 그래서 용어 중심으로 하나씩 스칼라 내용을 풀어가는 작업을 해보려 합니다. 그 첫번째는 부분함수입니다.&lt;/p&gt; &lt;p&gt;제 생각에는 스칼라에서 &lt;code&gt;PartialFunction&lt;/code&gt;이 커링이나 &lt;code&gt;for&lt;/code&gt; 내장 정도로 중요한 개념은 아닙니다. 개념이 생소할 뿐이죠. 필요성보다는 그게 뭐고, 어떤 용례가 있는지 이해하고 넘어가면 될 것 같습니다.&lt;/p&gt; &lt;h1 id=&quot;부분함수의-정의&quot;&gt;부분함수의 정의(?)&lt;/h1&gt; &lt;p&gt;&lt;code&gt;PartialFunction&lt;/code&gt;은 함수입니다. 따라서, &lt;code&gt;Function&lt;/code&gt;을 대신할 수 있습니다. 함수를 호출할 수 있는 곳에서는 &lt;code&gt;PartialFunction&lt;/code&gt;을 대신 사용할 수 있겠죠. &lt;/p&gt; &lt;p&gt;다만, &lt;code&gt;PartialFunction&lt;/code&gt;은 &lt;code&gt;isDefinedAt(value)&lt;/code&gt;을 제공해야 합니다. 이 메서드는 &lt;code&gt;value&lt;/code&gt;에 대해 함수값이 정의돼 있으면 참 , 그렇지 않으면 거짓을 반환합니다.&lt;/p&gt;   &lt;h2 id=&quot;부분함수가-필요한-이유&quot;&gt;부분함수가 필요한 이유&lt;/h2&gt; &lt;p&gt;어떤 함수를 호출하면 결과가 정상적으로 나오지 않을 때가 있다면, 그런 경우를 어떻게 처리해야 할까요? 몇가지 방법이 있겠죠. 대충 생각나는걸 적어보면…&lt;/p&gt; &lt;ol&gt;&lt;li&gt;예외를 던진다. 굳이 자세한 설명이 필요 없겠죠?&lt;/li&gt;&lt;li&gt;정상적이지 않은 경우를 표현하는 다른 반환값을 사용한다. 예를 들어 스칼라의 &lt;code&gt;Option&lt;/code&gt;이나 &lt;code&gt;Either&lt;/code&gt; 등을 사용하면 정상적인 값과 그렇지 않은 값을 처리할 수 있습니다. 자바라면 &lt;code&gt;null&lt;/code&gt;을 던지는 것도 한가지 방법이긴 하겠다(그렇다고 그렇게 해도 된다는 이야기는 아님)&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;자바의 경우 메서드 뒤에 &lt;code&gt;throws&lt;/code&gt;를 붙여서 꼭 발생할 수 있는 예외를 명시해야 하므로 어떤 함수가 예외를 발생시킬지 알 수 있습니다. 하지만 스칼라에서는 예외를 반드시 명시할 필요가 없으므로(&lt;code&gt;@throws&lt;/code&gt; 애노테이션이 있지만 쓰기 싫으면 안써도 되죠), 2번처럼 &lt;code&gt;Option&lt;/code&gt;이나 &lt;code&gt;Either&lt;/code&gt;, &lt;code&gt;Try&lt;/code&gt; 등을 활용할 것을 권장합니다. 함수의 반환 타입만 봐도 “아.. 이 함수는 예외를 발생시킬 수 있구나”하고 감이 오니까요.&lt;/p&gt; &lt;p&gt;반대로 어떤 함수가 특정한 값에 대해서만 작동하거나, 특정한 값에 대해서만 올바른 결과값을 반환할 것을 보장한다면 이를 어떻게 표현할 수 있을까요? 이때는 다음과 같은 방법이 있겠죠.&lt;/p&gt; &lt;ol&gt;&lt;li&gt;&lt;code&gt;InvalidArgumentException&lt;/code&gt;을 던진다.&lt;/li&gt;&lt;li&gt;입력오류를 표현하는 결과값을 반환한다.&lt;/li&gt;&lt;li&gt;&lt;code&gt;PartialFunction&lt;/code&gt;으로 함수를 만들고, &lt;code&gt;isDefinedAt&lt;/code&gt;으로 먼저 함수가 정상적인 값을 반환할지를 물어본다. &lt;code&gt;isDefinedAt&lt;/code&gt;이 참을 반환하는 경우에만 함수를 호출한다.&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;1번 방식은 자바식 방법이겠죠. 2번은 별로 바람직한 방법은 아닐겁니다. 미리 오류를 표현하는 결과값이 뭔지 알야아 하고, 함수를 호출한 다음 결과값을 체크해야 하니까요. 3번은 &lt;code&gt;PartialFunction&lt;/code&gt;라는 &lt;strong&gt;함수의 타입만 보고, 그 함수가 정해진 몇가지 값에 대해서만 정의된 함수라는 것을 알 수 있습니다.&lt;/strong&gt; &lt;/p&gt; &lt;p&gt;이렇게 표현했을 때 얻을 수 있는 잇점 한가지는, &lt;code&gt;PartialFunction&lt;/code&gt;끼리 조합해서 새로운 &lt;code&gt;PartialFunction&lt;/code&gt;을 만들 수 있다는 점입니다. &lt;code&gt;PartialFunction&lt;/code&gt;에 있는 다음 메서드를 봅시다.&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;code&gt;def andThen[C](k: (B) ⇒ C): PartialFunction[A, C]&lt;/code&gt; &lt;/li&gt;&lt;li&gt;&lt;code&gt;def orElse[A1 &amp;lt;: A, B1 &amp;gt;: B](that: PartialFunction[A1, B1]): PartialFunction[A1, B1]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;code&gt;andThen&lt;/code&gt;은 부분함수가 정의된 경우에, 그 결과에 다른 함수를 적용해서 반환합니다. 반면, &lt;code&gt;orElse&lt;/code&gt;는 인자로 들어온 값에 대해 부분함수가 정의된 경우에는 그냥 결과값을 반환하고, 그렇지 않은 경우에는 다른 부분함수를 호출합니다. 그 부분함수가 원래의 인자에 대해 정의돼 있다면 그 결과값이 반환되게죠. &lt;code&gt;andThen&lt;/code&gt;은 &lt;code&gt;isDefinedAt()&lt;/code&gt;이 참인 범위가 확장되지 않고 그대로 유지되지만, &lt;code&gt;orElse&lt;/code&gt;는 두 부분함수의 정의역의 합집합이 새로운 정의역이 되겠죠.&lt;/p&gt;   &lt;h2 id=&quot;부분함수가-지켜야-할-사항&quot;&gt;부분함수가 지켜야 할 사항&lt;/h2&gt; &lt;p&gt;&lt;code&gt;PartialFunction&lt;/code&gt;은 &lt;code&gt;isDefinedAt&lt;/code&gt;을 제공하며, &lt;code&gt;isDefinedAt&lt;/code&gt;이 참을 반환하는 경우에는 정상적인 동작과 반환값을 보장한다는 의미가 있습니다. 호출하는 쪽에서는 먼저 &lt;code&gt;isDefinedAt&lt;/code&gt;을 호출해서 함수가 정상 작동할지를 확인할 수 있기 때문에 정상작동할거라는 확신을 가지고 함수를 호출할 수 있습니다. 물론 컴파일러가 그런 약속을 강제하지는 않기 때문에, 부분함수를 작성하는 사람이 조심해 작성해야 하고, 쓰는 사람도 가급적 &lt;code&gt;isDefinedAt()&lt;/code&gt;을 호출해 호출시 제대로된 출력이 나올지 미리 검토를 해야 합니다.&lt;/p&gt;   &lt;h2 id=&quot;예&quot;&gt;예&lt;/h2&gt;   &lt;h3 id=&quot;간단한-예&quot;&gt;간단한 예&lt;/h3&gt; &lt;p&gt;예를 봅시다.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// 72법칙에 따라 복리계산시 2배 되는 기간을 계산한다.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; doublePeriod = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PartialFunction[Int, Int] {&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; apply(d: Int) = &lt;span class=&quot;hljs-number&quot;&gt;72&lt;/span&gt; / d&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; isDefinedAt(d: Int) = d &amp;gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; d &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot;&gt;// 너무 이율이 크면 72법칙이 맞지 않는다.&lt;/span&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이런 경우..&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;scala&amp;gt; doublePeriod(&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)&lt;br /&gt;res0: Int = &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; doublePeriod(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;br /&gt;java.lang.ArithmeticException: / by zero&lt;br /&gt;  at $anon$&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt;apply$mcII$sp(&amp;lt;console&amp;gt;:&lt;span class=&quot;hljs-number&quot;&gt;12&lt;/span&gt;)&lt;br /&gt;  ... &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt; elided&lt;br /&gt;&lt;br /&gt;scala&amp;gt; doublePeriod(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)&lt;br /&gt;res2: Int = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; doublePeriod.isDefinedAt(&lt;span class=&quot;hljs-number&quot;&gt;50&lt;/span&gt;)&lt;br /&gt;res3: Boolean = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; doublePeriod.isDefinedAt(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;br /&gt;res4: Boolean = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;보시면 아시겠지만, &lt;code&gt;isDefinedAt()&lt;/code&gt;이 거짓이라고 해서 해당 함수를 호출하지 못하는 것도 아니고, 예외가 발생하지 않는 것도 아닙니다. 그러니까, 호출하는 쪽에서 신경을 써줘야 합니다.&lt;/p&gt; &lt;p&gt;&lt;code&gt;andThen&lt;/code&gt;과 &lt;code&gt;orElse&lt;/code&gt;의 예를 봅시다.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; oddFt = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PartialFunction[Int, Int] {&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; apply(x: Int) = x + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; isDefinedAt(x: Int) = x%&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;}&lt;br /&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; evenFt = &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; PartialFunction[Int, Int] {&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; apply(x: Int) = x * &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; isDefinedAt(x: Int) = x%&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;&lt;br /&gt;} &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제 이 둘을 가지고 시험해 봅시다.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; range = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; to &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;&lt;br /&gt;range: scala.collection.immutable.Range.Inclusive = Range(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; range.map(oddFt.isDefinedAt)&lt;br /&gt;res5: scala.collection.immutable.IndexedSeq[Boolean] = Vector(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;)&lt;br /&gt;&lt;br /&gt;scala&amp;gt; range.map(evenFt.isDefinedAt)&lt;br /&gt;res6: scala.collection.immutable.IndexedSeq[Boolean] = Vector(&lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;)&lt;br /&gt;&lt;br /&gt;scala&amp;gt; oddFt(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;br /&gt;res9: Int = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; evenFt(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)&lt;br /&gt;res10: Int = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; composed = oddFt andThen evenFt&lt;br /&gt;composed: PartialFunction[Int,Int] = &amp;lt;function1&amp;gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; composed(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; merged = oddFt orElse evenFt&lt;br /&gt;merged: PartialFunction[Int,Int] = &amp;lt;function1&amp;gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; merged(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;br /&gt;res16: Int = &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; merged(&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;)&lt;br /&gt;res17: Int = &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; range.map(merged.isDefinedAt)&lt;br /&gt;res18: scala.collection.immutable.IndexedSeq[Boolean] = Vector(&lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;   &lt;h2 id=&quot;스칼라에서-사용중인-부분함수의-예&quot;&gt;스칼라에서 사용중인 부분함수의 예&lt;/h2&gt;   &lt;h3 id=&quot;액터의-receive&quot;&gt;액터의 &lt;code&gt;receive&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;스칼라에서 가장 &lt;code&gt;PartialFunction&lt;/code&gt;의 예로 유명한 것은 아마도 액터의 &lt;code&gt;receive&lt;/code&gt;일 것입니다. 액터는 임의의 메시지를 받을 수 있기 때문에, 액터시스템에서는 어떤 액터가 메시지를 처리할지 아닐지를 미리 알면 좋습니다. 아카 &lt;a href=&quot;http://doc.akka.io/api/akka/2.4/?_ga=1.69164370.255820194.1469671698#akka.actor.Actor&quot;&gt;액터의 API스칼라독&lt;/a&gt;을 보면: &lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;code&gt;type Receive = PartialFunction[Any, Unit]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;abstract def receive: Actor.Receive&lt;/code&gt; : 최초 액터의 행동을 결정한다. 액터의 동작 로직이 들어있는 부분 함수여야만 한다.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;여기서 &lt;code&gt;receive&lt;/code&gt;의 타입은 &lt;code&gt;PartialFunction[Any,Unit]&lt;/code&gt;입니다. 따라서, 액터 시스템은 어떤 액터가 메시지를 처리할 수 있는지 여부를 &lt;code&gt;receive&lt;/code&gt;의 &lt;code&gt;isDefinedAt()&lt;/code&gt;을 호출해서 알아낼 수 있습니다.&lt;/p&gt;   &lt;h3 id=&quot;파서-컴비네이터의&quot;&gt;파서 컴비네이터의 &lt;code&gt;^?&lt;/code&gt;&lt;/h3&gt; &lt;p&gt;스칼라 파서 컴비네이터의 &lt;a href=&quot;http://www.scala-lang.org/api/2.11.8/scala-parser-combinators/#scala.util.parsing.combinator.Parsers%24Parser&quot;&gt;Parser&lt;/a&gt;를 보면 다음과 같은 메서드가 있습니다.&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;code&gt;def ^?[U](f: PartialFunction[T, U]): Parser[U]&lt;/code&gt; : 이 메서드는 파서가 파싱에 성공하면 &lt;code&gt;f&lt;/code&gt;를 적용해주되, &lt;code&gt;f&lt;/code&gt;이 파싱 결과값에 대해 정의돼 있지 않거나, 파서가 실패했다면 오류 메시지를 표시하고 파싱을 중단하겠죠.&lt;/li&gt;&lt;li&gt;&lt;code&gt;def ^?[U](f: PartialFunction[T, U], error: (T) ⇒ String): Parser[U]&lt;/code&gt;: 이 메서드는 파서가 파싱에 성공하면 &lt;code&gt;f&lt;/code&gt;를 적용해주고, &lt;code&gt;f&lt;/code&gt;이 파싱 결과값에 대해 정의돼 있지 않으면 &lt;code&gt;error&lt;/code&gt;에 파싱 결과를 넘겨서 오류 메시지를 가져와 표시하고, 파서가 실패했다면 오류 메시지를 표시하고 파싱을 중단하겠죠.&lt;/li&gt;&lt;/ul&gt;   &lt;h2 id=&quot;부분함수를-정의하는-여러가지-방법&quot;&gt;부분함수를 정의하는 여러가지 방법&lt;/h2&gt; &lt;p&gt;앞에서 부분함수를 직접 &lt;code&gt;PartialFunction&lt;/code&gt;을 사용해 익명 클래스로 구현한 것을 봤습니다. 당연히 익명 클래스가 아닌 일반 클래스로 &lt;code&gt;PartialFunction&lt;/code&gt;을 상속하거나 믹스인해서도 구현할 수 있겠죠. 이에 대해서는 따로 설명하지 않겠습니다. 이외에도 몇가지 유용한 방법이 있습니다.&lt;/p&gt;   &lt;h2 id=&quot;match문을-활용하는-방법&quot;&gt;&lt;code&gt;match&lt;/code&gt;문을 활용하는 방법&lt;/h2&gt; &lt;p&gt;다음 프로그램을 봅시다.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// match.scala라는 이름으로 저장한다.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MatchTest&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; main(args: Array[String]):Unit = {&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; y = (x:Int) =&amp;gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;      }&lt;br /&gt;    println(y(x))&lt;br /&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;// 위 y와 완전히 같은 람다지만 타입만 다르게 선언&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; z:PartialFunction[Int,String] = (x:Int) =&amp;gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;      }&lt;br /&gt;    println(z.isDefinedAt(x))&lt;br /&gt;  }&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이 프로그램을 &lt;code&gt;scalac -Xprint:all .\match.scala&lt;/code&gt;로 컴파일해보면 다음과 같습니다.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;[[syntax trees at end of                    parser]] &lt;span class=&quot;hljs-comment&quot;&gt;// match.scala&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; &amp;lt;empty&amp;gt; {&lt;br /&gt;  &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MatchTest&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;scala&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AnyRef&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &amp;lt;init&amp;gt;() = {&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.&amp;lt;init&amp;gt;();&lt;br /&gt;      ()&lt;br /&gt;    };&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; main(args: Array[String]): Unit = {&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; y = ((x: Int) =&amp;gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;      });&lt;br /&gt;      println(y(x));&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; z: PartialFunction[Int, String] = ((x: Int) =&amp;gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;      });&lt;br /&gt;      println(z.isDefinedAt(x))&lt;br /&gt;    }&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;[[syntax trees at end of                     namer]] &lt;span class=&quot;hljs-comment&quot;&gt;// match.scala: tree is unchanged since parser&lt;/span&gt;&lt;br /&gt;[[syntax trees at end of            packageobjects]] &lt;span class=&quot;hljs-comment&quot;&gt;// match.scala: tree is unchanged since parser&lt;/span&gt;&lt;br /&gt;[[syntax trees at end of                     typer]] &lt;span class=&quot;hljs-comment&quot;&gt;// match.scala&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; &amp;lt;empty&amp;gt; {&lt;br /&gt;  &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MatchTest&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;scala&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AnyRef&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &amp;lt;init&amp;gt;(): MatchTest.&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; = {&lt;br /&gt;      MatchTest.&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.&amp;lt;init&amp;gt;();&lt;br /&gt;      ()&lt;br /&gt;    };&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; main(args: Array[String]): Unit = {&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x: Int = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; y: Int =&amp;gt; String = ((x: Int) =&amp;gt; x &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;      });&lt;br /&gt;      scala.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Predef.println(y.apply(x));&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; z: PartialFunction[Int,String] = ({&lt;br /&gt;        &lt;span class=&quot;hljs-annotation&quot;&gt;@SerialVersionUID&lt;/span&gt;(value = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &amp;lt;synthetic&amp;gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; $&lt;span class=&quot;hljs-title&quot;&gt;anonfun&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;scala&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;runtime&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AbstractPartialFunction&lt;/span&gt;[&lt;span class=&quot;hljs-title&quot;&gt;Int&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;String&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &amp;lt;init&amp;gt;(): &amp;lt;$anon: Int =&amp;gt; String&amp;gt; = {&lt;br /&gt;            $anonfun.&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.&amp;lt;init&amp;gt;();&lt;br /&gt;            ()&lt;br /&gt;          };&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; applyOrElse[A1 &amp;lt;: Int, B1 &amp;gt;: String](x: A1, &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;: A1 =&amp;gt; B1): B1 = (x: A1 &lt;span class=&quot;hljs-annotation&quot;&gt;@unchecked&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; (defaultCase$ @ _) =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;.apply(x)&lt;br /&gt;          };&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; isDefinedAt(x: Int): Boolean = (x: Int &lt;span class=&quot;hljs-annotation&quot;&gt;@unchecked&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; (defaultCase$ @ _) =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;br /&gt;          }&lt;br /&gt;        };&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; $anonfun()&lt;br /&gt;      }: PartialFunction[Int,String]);&lt;br /&gt;      scala.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Predef.println(z.isDefinedAt(x))&lt;br /&gt;    }&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;[[syntax trees at end of                    patmat]] &lt;span class=&quot;hljs-comment&quot;&gt;// match.scala&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;package&lt;/span&gt; &amp;lt;empty&amp;gt; {&lt;br /&gt;  &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;MatchTest&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;scala&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AnyRef&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &amp;lt;init&amp;gt;(): MatchTest.&lt;span class=&quot;hljs-keyword&quot;&gt;type&lt;/span&gt; = {&lt;br /&gt;      MatchTest.&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.&amp;lt;init&amp;gt;();&lt;br /&gt;      ()&lt;br /&gt;    };&lt;br /&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; main(args: Array[String]): Unit = {&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x: Int = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;;&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; y: Int =&amp;gt; String = ((x: Int) =&amp;gt; {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &amp;lt;synthetic&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x1: Int = x;&lt;br /&gt;        x1 &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; _ =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; MatchError(x1)&lt;br /&gt;        }&lt;br /&gt;      });&lt;br /&gt;      scala.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Predef.println(y.apply(x));&lt;br /&gt;      &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; z: PartialFunction[Int,String] = ({&lt;br /&gt;        &lt;span class=&quot;hljs-annotation&quot;&gt;@SerialVersionUID&lt;/span&gt;(value = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &amp;lt;synthetic&amp;gt; &lt;span class=&quot;hljs-class&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt; $&lt;span class=&quot;hljs-title&quot;&gt;anonfun&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;scala&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;runtime&lt;/span&gt;.&lt;span class=&quot;hljs-title&quot;&gt;AbstractPartialFunction&lt;/span&gt;[&lt;span class=&quot;hljs-title&quot;&gt;Int&lt;/span&gt;,&lt;span class=&quot;hljs-title&quot;&gt;String&lt;/span&gt;] &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;Serializable&lt;/span&gt; {&lt;/span&gt;&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; &amp;lt;init&amp;gt;(): &amp;lt;$anon: Int =&amp;gt; String&amp;gt; = {&lt;br /&gt;            $anonfun.&lt;span class=&quot;hljs-keyword&quot;&gt;super&lt;/span&gt;.&amp;lt;init&amp;gt;();&lt;br /&gt;            ()&lt;br /&gt;          };&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; applyOrElse[A1 &amp;lt;: Int, B1 &amp;gt;: String](x: A1, &lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;: A1 =&amp;gt; B1): B1 = {&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &amp;lt;synthetic&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x1: A1 = (x: A1 &lt;span class=&quot;hljs-annotation&quot;&gt;@unchecked&lt;/span&gt;);&lt;br /&gt;            case7(){&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;1.&lt;/span&gt;==(x1))&lt;br /&gt;                matchEnd6(&lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;)&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;&lt;br /&gt;                case8()&lt;br /&gt;            };&lt;br /&gt;            case8(){&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;2.&lt;/span&gt;==(x1))&lt;br /&gt;                matchEnd6(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;)&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;&lt;br /&gt;                case9()&lt;br /&gt;            };&lt;br /&gt;            case9(){&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;hljs-number&quot;&gt;3.&lt;/span&gt;==(x1))&lt;br /&gt;                matchEnd6(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;)&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt;&lt;br /&gt;                case10()&lt;br /&gt;            };&lt;br /&gt;            case10(){&lt;br /&gt;              matchEnd6(&lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;.apply(x))&lt;br /&gt;            };&lt;br /&gt;            matchEnd6(x: B1){&lt;br /&gt;              x&lt;br /&gt;            }&lt;br /&gt;          };&lt;br /&gt;          &lt;span class=&quot;hljs-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;def&lt;/span&gt; isDefinedAt(x: Int): Boolean = {&lt;br /&gt;            &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &amp;lt;synthetic&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; x1: Int = (x: Int &lt;span class=&quot;hljs-annotation&quot;&gt;@unchecked&lt;/span&gt;);&lt;br /&gt;            x1 &lt;span class=&quot;hljs-keyword&quot;&gt;match&lt;/span&gt; {&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;true&lt;/span&gt;&lt;br /&gt;              &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; _ =&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;br /&gt;            }&lt;br /&gt;          }&lt;br /&gt;        };&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;new&lt;/span&gt; $anonfun()&lt;br /&gt;      }: PartialFunction[Int,String]);&lt;br /&gt;      scala.&lt;span class=&quot;hljs-keyword&quot;&gt;this&lt;/span&gt;.Predef.println(z.isDefinedAt(x))&lt;br /&gt;    }&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;... 이하 생략 ...&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;잘 보시면 &lt;code&gt;typer&lt;/code&gt;가 타입체킹을 하면서 &lt;code&gt;PartialFunction&lt;/code&gt;에 해당하는 경우에는 &lt;code&gt;isDefinedAt&lt;/code&gt;과 &lt;code&gt;applyOrElse&lt;/code&gt;를 자동으로 넣어준다는 것을 알 수 있습니다. 바로 이 부분이 &lt;code&gt;match&lt;/code&gt;로 부분함수를 만드는 마법에 해당합니다. 우리가 사용한 형태 &lt;code&gt;val z: PartialFunction[Int, String] = ((x: Int) =&amp;gt; x match { ... }&lt;/code&gt;에서 &lt;code&gt;((x: Int) =&amp;gt; x match&lt;/code&gt; 부분의 &lt;code&gt;x&lt;/code&gt;는 실제로는 전혀 프로그램의 의미에 영향을 끼치지 못하고, 단지 인자가 1개인 함수를 만들어주는 역할만을 합니다. (참고로 이런 형태로 &lt;code&gt;x&lt;/code&gt;가 전혀 들어있지 않은 어떤 식 &lt;code&gt;expr&lt;/code&gt;을 &lt;code&gt;(x:Type) =&amp;gt; expr&lt;/code&gt;과 같이 함수 형식으로 확장하는 것을 에타확장이라고 부릅니다.) 따라서, 스칼라는 불필요하게 에타 확장을 할 필요 없이 직접 &lt;code&gt;match&lt;/code&gt;식의 &lt;code&gt;case&lt;/code&gt; 부분들만을 쓸 수 있게 허용합니다. 그에 따라 앞의 &lt;code&gt;z&lt;/code&gt;를 다음과 같이 정의할 수도 있습니다.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot; hljs php&quot;&gt;    val z2:PartialFunction[Int,String] = {&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Three&quot;&lt;/span&gt;&lt;br /&gt;      }&lt;br /&gt;    println(z2.isDefinedAt(x))&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이 코드를 앞의 &lt;code&gt;match.scala&lt;/code&gt;에 넣고 컴파일해보면 람다의 인자 부분을 제외하면 동일한 코드를 만들어준다는 사실을 알 수 있습니다. 이런 케이스 블럭은 &lt;code&gt;PartialFunction&lt;/code&gt; 역할을 할 수 있고, &lt;code&gt;PartialFunction&lt;/code&gt;은 &lt;code&gt;Function&lt;/code&gt;이기도 하기 때문에, 함수가 필요한 곳에 람다 대신 케이스블럭을 넣을 수도 있습니다. 다만, 그런 경우에는 케이스 블럭에서 처리하지 않는 값에 대해서는 &lt;code&gt;MatchError&lt;/code&gt;가 발생할 수 있음에 유의해야겠죠. &lt;/p&gt; &lt;p&gt;이런 이유로, 매치문을 (부분함수인 케이스 블럭을 사용해) 쉽게 고차함수에 넘길 수 있습니다. &lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot; hljs php&quot;&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) map { &lt;br /&gt;     | &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;&lt;br /&gt;     | &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt;&lt;br /&gt;     | &lt;span class=&quot;hljs-keyword&quot;&gt;case&lt;/span&gt; _ =&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Other&quot;&lt;/span&gt; }&lt;br /&gt;res2: &lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;[String] = &lt;span class=&quot;hljs-keyword&quot;&gt;List&lt;/span&gt;(One, Two, Other)&lt;/code&gt;&lt;/pre&gt;   &lt;h2 id=&quot;부분함수와-컬렉션&quot;&gt;부분함수와 컬렉션&lt;/h2&gt; &lt;p&gt;대표적인 스칼라 컬렉션 &lt;code&gt;List&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;에 대해 생각해 봅시다. &lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; family = List(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Frank&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Kevin&quot;&lt;/span&gt;,&lt;span class=&quot;hljs-string&quot;&gt;&quot;Joshua&quot;&lt;/span&gt;)&lt;br /&gt;family: List[String] = List(Frank, Kevin, Joshua)&lt;br /&gt;&lt;br /&gt;scala&amp;gt; family(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;br /&gt;res6: String = Frank&lt;br /&gt;&lt;br /&gt;scala&amp;gt; family(&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;)&lt;br /&gt;java.lang.IndexOutOfBoundsException: &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;&lt;br /&gt;  at scala.collection.LinearSeqOptimized$&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.apply(LinearSeqOptimized.scala:&lt;span class=&quot;hljs-number&quot;&gt;65&lt;/span&gt;)&lt;br /&gt;  at scala.collection.immutable.List.apply(List.scala:&lt;span class=&quot;hljs-number&quot;&gt;84&lt;/span&gt;)&lt;br /&gt;  ... &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt; elided&lt;br /&gt;&lt;br /&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; familyMap = Map( &lt;span class=&quot;hljs-string&quot;&gt;&quot;dad&quot;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Frank&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&quot;mum&quot;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;hljs-string&quot;&gt;&quot;Joyce&quot;&lt;/span&gt;)&lt;br /&gt;familyMap: scala.collection.immutable.Map[String,String] = Map(dad -&amp;gt; Frank, mum -&amp;gt; Joyce)&lt;br /&gt;&lt;br /&gt;scala&amp;gt; familyMap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;dad&quot;&lt;/span&gt;)&lt;br /&gt;res8: String = Frank&lt;br /&gt;&lt;br /&gt;scala&amp;gt; familyMap(&lt;span class=&quot;hljs-string&quot;&gt;&quot;mistress&quot;&lt;/span&gt;)&lt;br /&gt;java.util.NoSuchElementException: key not found: mistress&lt;br /&gt;  at scala.collection.MapLike$&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.&lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;(MapLike.scala:&lt;span class=&quot;hljs-number&quot;&gt;228&lt;/span&gt;)&lt;br /&gt;  at scala.collection.AbstractMap.&lt;span class=&quot;hljs-keyword&quot;&gt;default&lt;/span&gt;(Map.scala:&lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;)&lt;br /&gt;  at scala.collection.MapLike$&lt;span class=&quot;hljs-keyword&quot;&gt;class&lt;/span&gt;.apply(MapLike.scala:&lt;span class=&quot;hljs-number&quot;&gt;141&lt;/span&gt;)&lt;br /&gt;  at scala.collection.AbstractMap.apply(Map.scala:&lt;span class=&quot;hljs-number&quot;&gt;59&lt;/span&gt;)&lt;br /&gt;  ... &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt; elided&lt;br /&gt;&lt;br /&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; arr = Array(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)&lt;br /&gt;arr: Array[Int] = Array(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;)&lt;br /&gt;&lt;br /&gt;scala&amp;gt; arr(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;)&lt;br /&gt;res10: Int = &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; arr(-&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&lt;br /&gt;java.lang.ArrayIndexOutOfBoundsException: -&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;  ... &lt;span class=&quot;hljs-number&quot;&gt;32&lt;/span&gt; elided&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;List&lt;/code&gt;나 &lt;code&gt;Array&lt;/code&gt;의 &lt;code&gt;i&lt;/code&gt;번째 원소를 가져오는 연산(실제로는 &lt;code&gt;apply()&lt;/code&gt; 메서드)의 특징은 뭘까요? &lt;br&gt;- &lt;code&gt;i&lt;/code&gt;가 &lt;code&gt;0&lt;/code&gt; 이상 배열이나 리스트의 원소개수 미만이라면 해당 위치에 있는 원소를 반환한다. &lt;br&gt;- 그 이외의 경우에는 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;이나 &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt;를 던진다.&lt;/p&gt; &lt;p&gt;마찬가지로, &lt;code&gt;Map&lt;/code&gt;의 경우는 다음과 같습니다. &lt;br&gt;- 인자가 &lt;code&gt;Map&lt;/code&gt;에 들어있는 키중 하나와 같으면, 그 키에 대응하는 값을 반환한다. &lt;br&gt;- 인자와 일치하는 키가 없다면,  &lt;code&gt;NoSuchElementException&lt;/code&gt;을 반환한다.&lt;/p&gt; &lt;p&gt;어디서 많이 보던 패턴 아닌가요? 맞습니다. 그래서, 스칼라의 컬렉션들은 &lt;code&gt;PartialFunction&lt;/code&gt;을 믹스인 합니다. &lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;scala&amp;gt; family.isDefinedAt(&lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt;)&lt;br /&gt;res12: Boolean = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; familyMap.isDefinedAt(&lt;span class=&quot;hljs-string&quot;&gt;&quot;Hoho&quot;&lt;/span&gt;)&lt;br /&gt;res13: Boolean = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;scala&amp;gt; arr.isDefinedAt(Int.MaxValue)&lt;br /&gt;res14: Boolean = &lt;span class=&quot;hljs-keyword&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;따라서, 스칼라에서 케이스 블럭을 사용하지 않고, &lt;code&gt;PartialFunction&lt;/code&gt;을 정의하는 간단한 방법 중 하나는 &lt;code&gt;Map&lt;/code&gt;을 만드는 것입니다. &lt;code&gt;List&lt;/code&gt;나 &lt;code&gt;Array&lt;/code&gt;는 &lt;code&gt;0&lt;/code&gt;부터 시작하고, &lt;code&gt;1&lt;/code&gt;씩 인덱스가 증가하는 연속된 범위에 대한 &lt;code&gt;PartialFunction[Int, 어떤타입]&lt;/code&gt;만을 만들 수 있기 때문에 아무래도 쓸모가 좀 덜하겠죠.&lt;/p&gt;   &lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;language-scala hljs &quot;&gt;scala&amp;gt; &lt;span class=&quot;hljs-keyword&quot;&gt;val&lt;/span&gt; y:PartialFunction[Int, String] = Map( &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;One&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;-&amp;gt;&lt;span class=&quot;hljs-string&quot;&gt;&quot;Two&quot;&lt;/span&gt; )&lt;br /&gt;y: PartialFunction[Int,String] = Map(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt; -&amp;gt; One, &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt; -&amp;gt; Two)&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;부분함수(partial function)과 흔히 혼동하는 것이 부분 적용한 함수(partially applied function)입니다. 다음에 기회가 되면 그에 대해 다뤄볼까 합니다.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6413828930656402464/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6413828930656402464' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6413828930656402464'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6413828930656402464'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2016/08/hello.html' title='용어로 살펴보는 스칼라 - 부분함수(PartialFunction)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-6453871919646352060</id><published>2015-11-07T23:49:00.001+10:00</published><updated>2015-11-07T23:49:37.798+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="값 중심의 프로그래밍"/><category scheme="http://www.blogger.com/atom/ns#" term="도사티비"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="엑셀"/><category scheme="http://www.blogger.com/atom/ns#" term="자바스크립트"/><category scheme="http://www.blogger.com/atom/ns#" term="함수형 프로그래밍"/><title type='text'>[도사티비] 함수형 프로그래밍 맛보기</title><content type='html'>&lt;h1 id=&quot;[도사티비]-함수형-프로그래밍-맛보기&quot;&gt;&lt;a name=&quot;[도사티비]-함수형-프로그래밍-맛보기&quot; href=&quot;#[도사티비]-함수형-프로그래밍-맛보기&quot;&gt;&lt;/a&gt;[도사티비] 함수형 프로그래밍 맛보기&lt;/h1&gt;&lt;h2 id=&quot;함수형-프로그래밍이란?&quot;&gt;&lt;a name=&quot;함수형-프로그래밍이란?&quot; href=&quot;#함수형-프로그래밍이란?&quot;&gt;&lt;/a&gt;함수형 프로그래밍이란?&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;오래된 글이지만 참고: “Why Functional Programming Matters”, John Hughes&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;사전적 의미(위키백과)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;함수형 프로그래밍은 자료 처리를 &lt;strong&gt;수학적 함수의 계산&lt;/strong&gt;으로 취급하고 &lt;strong&gt;상태와 가변 데이터를 멀리하는&lt;/strong&gt; 프로그래밍 패러다임의 하나이다. 명령형 프로그래밍에서는 상태를 바꾸는 것을 강조하는 것과는 달리, 함수형 프로그래밍은 함수의 응용을 강조한다. 함수형 프로그래밍은 1930년대에 계산가능성, 결정문제, 함수정의, 함수응용과 재귀를 연구하기 위해 개발된 형식체계인 람다 대수에 근간을 두고 있다. 다수의 함수형 프로그래밍 언어들은 람다 연산을 발전시킨 것으로 볼 수 있다.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;질문:-상태와-가변-데이터가-없는-프로그래밍이-정말-가능한가?&quot;&gt;&lt;a name=&quot;질문:-상태와-가변-데이터가-없는-프로그래밍이-정말-가능한가?&quot; href=&quot;#질문:-상태와-가변-데이터가-없는-프로그래밍이-정말-가능한가?&quot;&gt;&lt;/a&gt;질문: 상태와 가변 데이터가 없는 프로그래밍이 정말 가능한가?&lt;/h3&gt;&lt;h3 id=&quot;답:-그렇다!&quot;&gt;&lt;a name=&quot;답:-그렇다!&quot; href=&quot;#답:-그렇다!&quot;&gt;&lt;/a&gt;답: 그렇다!&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;충분히 복잡한 계산을 변수 없이 할 수 있다! 엑셀을 보라.&lt;br&gt;— 엑셀에서 셀간의 의존성을 DAG로 표현할 수 있으며, 연산순서는 각 셀간의 의존관계에 의해 자동 계산된다.&lt;br&gt;— 엑셀에서 한 셀의 값이 정해지고 나면, 사용자가 그 셀의 값을 변경하거나, 입력 역할을 하는 셀(계산 의존성 DAG에서 다른 셀에는 의존하지 않으면서, 다른 셀에 값을 제공하기만 하는 셀들)을 변경하지 않는 이상 결코 그 셀의 값이 바뀌지 않는다.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;엑셀의-단점:-스프레드-시트-수준에서-추상화가-불가능하다.&quot;&gt;&lt;a name=&quot;엑셀의-단점:-스프레드-시트-수준에서-추상화가-불가능하다.&quot; href=&quot;#엑셀의-단점:-스프레드-시트-수준에서-추상화가-불가능하다.&quot;&gt;&lt;/a&gt;엑셀의 단점: 스프레드 시트 수준에서 추상화가 불가능하다.&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;저수준 추상화는 copy &amp;amp; paste시 엑셀이 자동으로 해준다고 볼 수도 있다.&lt;br&gt;— 예: x(t+1) = x(t) - f(x(t))/f’(x(t))를 입력시 셀 위치를 가지고 잘 공식을 정의한 다음, 셀의 복사시 상대 주소 자동 조정 기능을 활용함)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;이런 셀 복사시 상대 주소 자동 변경만으로 적절한 추상화가 어렵다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;만들어진 스프레드 시트에서 공통적인 추상 패턴을 알아보기가 힘들다. 즉, 코딩은 비주얼하게 편하게 가능하지만, 스프레드 시트를 보고 공통 패턴을 파악하는 것은 어렵다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;그럼에도 불구하고, 우리는 엑셀을 통해 불변 값 위주의 계산이 유용함을 알 수 있고, 불변 값 중심의 코딩이 결코 어렵지 않음도 알 수 있다(자바 프로그래머 숫자 &amp;lt;&amp;lt;&amp;lt; 엑셀 프로그래머 숫자)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;그럼,-엑셀-코드를-프로그래밍-언어로-표현해-보자.&quot;&gt;&lt;a name=&quot;그럼,-엑셀-코드를-프로그래밍-언어로-표현해-보자.&quot; href=&quot;#그럼,-엑셀-코드를-프로그래밍-언어로-표현해-보자.&quot;&gt;&lt;/a&gt;그럼, 엑셀 코드를 프로그래밍 언어로 표현해 보자.&lt;/h2&gt;&lt;h3 id=&quot;자바스크립트-콘솔---우리의-놀이터&quot;&gt;&lt;a name=&quot;자바스크립트-콘솔---우리의-놀이터&quot; href=&quot;#자바스크립트-콘솔---우리의-놀이터&quot;&gt;&lt;/a&gt;자바스크립트 콘솔 - 우리의 놀이터&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;REPL(read-eval-print-loop, 레플이라고 읽음): 입력을 받아(read), 평가/계산하고(eval), 결과를 출력(print)하는 과정을 반복한다.&lt;br&gt;— 자바스크립트 콘솔이 우리의 REPL이라 할 수 있다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;엑셀에서 12개월 만기 이율 5% 정기적금의 1년후 만기 금액을 계산하는 식을 변수 값을 한번 설정한 다음에는 바꾸지 않는 자바스크립트로 옮겨보자.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;var i_year = 0.05;         // 5% 이율&lt;br /&gt;var i_month = i_year / 12; // 월이율&lt;br /&gt;var installment = 30000.0;   // 불입금&lt;br /&gt;var pi_0 = installment + installment * (12-0) * i_month; // 첫 불입금의 최종 원리금&lt;br /&gt;var pi_1 = installment + installment * (12-1) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_2 = installment + installment * (12-2) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_3 = installment + installment * (12-3) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_4 = installment + installment * (12-4) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_5 = installment + installment * (12-5) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_6 = installment + installment * (12-6) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_7 = installment + installment * (12-7) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_8 = installment + installment * (12-8) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_9 = installment + installment * (12-9) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_10 = installment + installment * (12-10) * i_month; // 2번째 불입금의 최종 원리금&lt;br /&gt;var pi_11 = installment + installment * (12-11) * i_month; // 12번째 불입금의 최종 원리금&lt;br /&gt;var sum = pi_0 + pi_1 + pi_2 + pi_3 + pi_4 + pi_5 + pi_6 + pi_7 + pi_8 + pi_9 + pi_10 + pi_11; // 12번의 불입에 대한 원금+이자의 총 합&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;var i_year = 0.05;         // 5% 이율 var i_month = i_year / 12; // 월이율 var installment = 30000.0;   // 불입금 var pi_0 = installment + installment * (12-0) * i_month; // 첫 불입금의 최종 원리금 var pi_1 = installment + installment * (12-1) * i_month; // 2번째 불입금의 최종 원리금 var pi_2 = installment + installment * (12-2) * i_month; // 2번째 불입금의 최종 원리금 var pi_3 = installment + installment * (12-3) * i_month; // 2번째 불입금의 최종 원리금 var pi_4 = installment + installment * (12-4) * i_month; // 2번째 불입금의 최종 원리금 var pi_5 = installment + installment * (12-5) * i_month; // 2번째 불입금의 최종 원리금 var pi_6 = installment + installment * (12-6) * i_month; // 2번째 불입금의 최종 원리금 var pi_7 = installment + installment * (12-7) * i_month; // 2번째 불입금의 최종 원리금 var pi_8 = installment + installment * (12-8) * i_month; // 2번째 불입금의 최종 원리금 var pi_9 = installment + installment * (12-9) * i_month; // 2번째 불입금의 최종 원리금 var pi_10 = installment + installment * (12-10) * i_month; // 2번째 불입금의 최종 원리금 var pi_11 = installment + installment * (12-11) * i_month; // 12번째 불입금의 최종 원리금 var sum = pi_0 + pi_1 + pi_2 + pi_3 + pi_4 + pi_5 + pi_6 + pi_7 + pi_8 + pi_9 + pi_10 + pi_11; // 12번의 불입에 대한 원금+이자의 총 합 &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;추상화(abstraction): 별것 아니고, 코드에서 공통 패턴을 하나로 묶고 부르기 편하게 이름을 붙이는 것임&lt;/li&gt;&lt;li&gt;반복되는 패턴이 무엇일까? &lt;code&gt;installment + installment * (12-&amp;lt;불입회차&amp;gt;) * i_month;&lt;/code&gt;이 반복된다. &lt;/li&gt;&lt;li&gt;이 패턴은  &lt;code&gt;installment&lt;/code&gt;, &lt;code&gt;ith&lt;/code&gt;, &lt;code&gt;i_month&lt;/code&gt;에 따른 불입금과 최종이자의 합을 표현한다.&lt;/li&gt;&lt;li&gt;반복되는 부분은 불입금과 그 불입금에 대한 이자의 합계를 계산하는 식 부분이다.&lt;/li&gt;&lt;li&gt;매번 달라지는 부분은 &lt;code&gt;installment&lt;/code&gt;, &lt;code&gt;ith&lt;/code&gt;, &lt;code&gt;i_month&lt;/code&gt;이다(사실은 12도 만기 개월수에 따라 바뀐다).&lt;/li&gt;&lt;li&gt;전체 식에 이름을 붙이되, 매번 달라지는 부분을 입력(함수의 입력을 다른 말로 매개변수라 한다)으로 만들고, 계산 결과를 돌려주게 하자.&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;// 코드 읽는 방법: &lt;br /&gt;//    getPIValue라는 이름은 함수(function)인데, &lt;br /&gt;//    인자로 installment, i_month, t_month, ith를 받아서&lt;br /&gt;//    installment + installment * (t_month-ith) * i_month를 반환한다.&lt;br /&gt;var getPIValue = function(installment, i_month, t_month, ith) {&lt;br /&gt;  return installment + installment * (t_month-ith) * i_month;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;// 코드 읽는 방법:  //    getPIValue라는 이름은 함수(function)인데,  //    인자로 installment, i_month, t_month, ith를 받아서 //    installment + installment * (t_month-ith) * i_month를 반환한다. var getPIValue = function(installment, i_month, t_month, ith) {   return installment + installment * (t_month-ith) * i_month; } &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;여기서 &lt;code&gt;function(매개변수) { ... }&lt;/code&gt; 부분을 익명함수(anonymous)라고 함.&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;내가 그 함수에 var로 이름을 붙이기 전에는 그는 다만 익명함수에 지나지 않았다 - 익명함수 by 익명작가&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;생각해보면 이 함수는 적금 계산 엑셀 워크시트의 테이블의 각 행을 getPTValue라는 함수로 바꾼 것이다. 사실 함수값을 식으로 계산하는 것과, 표로 만들어 놓은 입력값과 출력값 사이의 관계를 해석하는 데는 일맥상통하는 부분이 있다. 다만, 표는 유한하지만, 함수는 입력이 무한한 경우 출력도 무한할 수 있다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;여기서, 함수 내부는 외부에 대해 닫힌 세상이다.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;외부에서 주입되는 매개변수는 함수의 결과를 변화시키지만, 함수가 외부를 변화시키는 일은 없다.&lt;/li&gt;&lt;li&gt;외부에서 함수의 결과를 바꾸는 유일한 방법은 매개변수에 다른 값을 전달하는 것 뿐이며, 매개변수가 같은 경우엔 함수의 결과도 항상 같다.&lt;/li&gt;&lt;li&gt;1,2를 다른말로 하자면, 함수의 결과가 어떤 상태에 의존하지 않고 매개변수에만 의존하며, 함수의 실행으로 인해 반환값 외에 다른 어떤 상태가 바뀌는 일도 없다. 이를 &lt;em&gt;부수효과(side effect)가 없다&lt;/em&gt;고 말한다.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;— 이런 경우, 매개변수가 같으면 함수의 결과도 같고, 함수가 함수 바깥에 영향을 끼치지 못하기 때문에, 같은 매개변수로 함수를 호출하는 경우가 여러번 있다면, 그 모든 호출을 결과값으로 바꿔치기 해도 안전하고, 함수를 호출해 계산한 것이나, 호출하는 대신 결과값으로 바꿔치기 해서 계산한 것이나 그 결과는 동일하다. 이를 &lt;em&gt;참조 투명성(referential transparency)&lt;/em&gt;이라 한다.&lt;br&gt;— 이렇게 부수효과가 없으며, 입력이 같으면 출력이 같은 함수를 순수함수(pure function)라고 부른다. &lt;/p&gt;&lt;h4 id=&quot;개선한-프로그램&quot;&gt;&lt;a name=&quot;개선한-프로그램&quot; href=&quot;#개선한-프로그램&quot;&gt;&lt;/a&gt;개선한 프로그램&lt;/h4&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;var i_year = 0.05;         // 5% 이율&lt;br /&gt;var i_month = i_year / 12; // 월이율&lt;br /&gt;var installment = 30000.0;   // 불입금&lt;br /&gt;&lt;br /&gt;// installment를 월이율 i_month로 불입하는 t_month 만기 적금에서, ith번째(ith는 0부터 t_month-1 까지) 불입금에서 얻을 수 있는 이자와 원금의 합을 구한다.&lt;br /&gt;var getPIValue = function(installment, i_month, t_month, ith) {&lt;br /&gt;  return installment + installment * (t_month-ith) * i_month;&lt;br /&gt;}&lt;br /&gt;var pi_0 = getPIValue(installment, i_month, 12, 0);&lt;br /&gt;var pi_1 = getPIValue(installment, i_month, 12, 1);&lt;br /&gt;var pi_2 = getPIValue(installment, i_month, 12, 2);&lt;br /&gt;var pi_3 = getPIValue(installment, i_month, 12, 3);&lt;br /&gt;var pi_4 = getPIValue(installment, i_month, 12, 4);&lt;br /&gt;var pi_5 = getPIValue(installment, i_month, 12, 5);&lt;br /&gt;var pi_6 = getPIValue(installment, i_month, 12, 6);&lt;br /&gt;var pi_7 = getPIValue(installment, i_month, 12, 7);&lt;br /&gt;var pi_9 = getPIValue(installment, i_month, 12, 8);&lt;br /&gt;var pi_10 = getPIValue(installment, i_month, 12, 9);&lt;br /&gt;var pi_11 = getPIValue(installment, i_month, 12, 10);&lt;br /&gt;&lt;br /&gt;var sum = pi_0 + pi_1 + pi_2 + pi_3 + pi_4 + pi_5 + pi_6 + pi_7 + pi_8 + pi_9 + pi_10 + pi_11; // 12번의 불입에 대한 원금+이자의 총 합&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;var i_year = 0.05;         // 5% 이율 var i_month = i_year / 12; // 월이율 var installment = 30000.0;   // 불입금  // installment를 월이율 i_month로 불입하는 t_month 만기 적금에서, ith번째(ith는 0부터 t_month-1 까지) 불입금에서 얻을 수 있는 이자와 원금의 합을 구한다. var getPIValue = function(installment, i_month, t_month, ith) {   return installment + installment * (t_month-ith) * i_month; } var pi_0 = getPIValue(installment, i_month, 12, 0); var pi_1 = getPIValue(installment, i_month, 12, 1); var pi_2 = getPIValue(installment, i_month, 12, 2); var pi_3 = getPIValue(installment, i_month, 12, 3); var pi_4 = getPIValue(installment, i_month, 12, 4); var pi_5 = getPIValue(installment, i_month, 12, 5); var pi_6 = getPIValue(installment, i_month, 12, 6); var pi_7 = getPIValue(installment, i_month, 12, 7); var pi_9 = getPIValue(installment, i_month, 12, 8); var pi_10 = getPIValue(installment, i_month, 12, 9); var pi_11 = getPIValue(installment, i_month, 12, 10);  var sum = pi_0 + pi_1 + pi_2 + pi_3 + pi_4 + pi_5 + pi_6 + pi_7 + pi_8 + pi_9 + pi_10 + pi_11; // 12번의 불입에 대한 원금+이자의 총 합 &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;행복한가? 조금…. 왜? 그래도 노가다. 머리가 나쁘면 몸이 고생&lt;/li&gt;&lt;li&gt;현재까지 우리가 아는 언어 요소(순수함수 + 불변 값 + 기본 산술연산) 만으로 해결이 불가능함&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;반복적인-작업을-프로그램이-하게-만들기&quot;&gt;&lt;a name=&quot;반복적인-작업을-프로그램이-하게-만들기&quot; href=&quot;#반복적인-작업을-프로그램이-하게-만들기&quot;&gt;&lt;/a&gt;반복적인 작업을 프로그램이 하게 만들기&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;함수가 자기 자신을 호출할 수 있다면 반복이 가능하다!&lt;/li&gt;&lt;li&gt;어떻게 하면 함수안에서 자기 자신을 부르게 할 수 있을까?&lt;/li&gt;&lt;li&gt;결국, 함수를 정의하면서 내부에서 자신을 부를 이름을 지정하게 해야 한다.&lt;/li&gt;&lt;li&gt;예: n이 10보다 작은 동안 루프 돌기&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;// 여기서 loopUntil10은 만들어진 익명함수에 부여한 이름이고,&lt;br /&gt;/  function 다음에 있는 loop는 함수 안에서 자기 자신을 부를 때 쓰기 위한 &lt;br /&gt;// 이름이다.&lt;br /&gt;var loopUntil10 = function loop(n) {&lt;br /&gt;  if(n&amp;amp;lt;10) {&lt;br /&gt;    loop(n+1);&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;// 여기서 loopUntil10은 만들어진 익명함수에 부여한 이름이고, /  function 다음에 있는 loop는 함수 안에서 자기 자신을 부를 때 쓰기 위한  // 이름이다. var loopUntil10 = function loop(n) {   if(n&amp;lt;10) {     loop(n+1);   } } &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;이제, 이런 재귀를 사용해 적금 총액을 계산하자.&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;// 적금 합계를 구하는 재귀 함수&lt;br /&gt;// sum_so_far에 합계를 누적해 나감&lt;br /&gt;var getJukgumSum = function loop(i, sum_so_far) {&lt;br /&gt;  if(i&amp;amp;lt;12) {&lt;br /&gt;    return loop(i+1, sum_so_far + getPIValue(installment, i_month, 12, i));&lt;br /&gt;  } else {&lt;br /&gt;    return sum_so_far;&lt;br /&gt;  }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// 사용법&lt;br /&gt;var sum = getJukgumSum(0, 0);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;// 적금 합계를 구하는 재귀 함수 // sum_so_far에 합계를 누적해 나감 var getJukgumSum = function loop(i, sum_so_far) {   if(i&amp;lt;12) {     return loop(i+1, sum_so_far + getPIValue(installment, i_month, 12, i));   } else {     return sum_so_far;   } }  // 사용법 var sum = getJukgumSum(0, 0); &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;단점: 사용할 때 0, 0을 지정해야 함. 호출하면서 실수하기도 쉬울 뿐 아니라, 외부에 불필요한 인터페이스를 노출하는 것임.&lt;/li&gt;&lt;li&gt;함수 안에서 함수를 정의해 써먹고, 밖에는 최소의 인터페이스만 제공하자.&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;var getJukgumSum = function loop() {&lt;br /&gt;  function loopInner(i, sum_so_far) {&lt;br /&gt;    if(i&amp;amp;lt;12) {&lt;br /&gt;      return loop(i+1, sum_so_far + getPIValue(installment, i_month, 12, i));&lt;br /&gt;    }&lt;br /&gt;    else {&lt;br /&gt;      return sum_so_far;&lt;br /&gt;    }&lt;br /&gt;  }&lt;br /&gt;&lt;br /&gt;  loopInner(0,0);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// 사용법&lt;br /&gt;var sum = getJukgumSum();&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;var getJukgumSum = function loop() {   function loopInner(i, sum_so_far) {     if(i&amp;lt;12) {       return loop(i+1, sum_so_far + getPIValue(installment, i_month, 12, i));     }     else {       return sum_so_far;     }   }    loopInner(0,0); }  // 사용법 var sum = getJukgumSum(); &lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;지금까지-중간-정리&quot;&gt;&lt;a name=&quot;지금까지-중간-정리&quot; href=&quot;#지금까지-중간-정리&quot;&gt;&lt;/a&gt;지금까지 중간 정리&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;값 중심 코딩 -&amp;gt; 추상화 -&amp;gt; 함수&lt;/li&gt;&lt;li&gt;함수 -&amp;gt; 추상화 -&amp;gt; 함수를 입력으로 받는 함수&lt;h4 id=&quot;함수-프로그래밍이라도-특별히-다른-원칙이-적용되는-것이-아니다.&quot;&gt;&lt;a name=&quot;함수-프로그래밍이라도-특별히-다른-원칙이-적용되는-것이-아니다.&quot; href=&quot;#함수-프로그래밍이라도-특별히-다른-원칙이-적용되는-것이-아니다.&quot;&gt;&lt;/a&gt;함수 프로그래밍이라도 특별히 다른 원칙이 적용되는 것이 아니다.&lt;/h4&gt;&lt;/li&gt;&lt;li&gt;인터페이스를 깔끔하게 하기&lt;/li&gt;&lt;li&gt;공통 부분을 추상화하기&lt;/li&gt;&lt;li&gt;다만, 대입을 사용하지 않고 최대한 함수를 활용하기&lt;/li&gt;&lt;/ul&gt;&lt;h4 id=&quot;왜-절차지향을-지양하는가?&quot;&gt;&lt;a name=&quot;왜-절차지향을-지양하는가?&quot; href=&quot;#왜-절차지향을-지양하는가?&quot;&gt;&lt;/a&gt;왜 절차지향을 지양하는가?&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;Alan Perlis: “A programming language is low level when its programs require attention to the irrelevant”&lt;/li&gt;&lt;li&gt;앨런 펠리스: 어떤 프로그래밍 언어가 프로그램을 하면서 중요하지 않은 요소에 관심을 기울이게 만든다면 저수준이라 할 수 있다.&lt;/li&gt;&lt;li&gt;절차는 사실은 문제 해결에 있어 핵심 관심 대상이 아님.&lt;br&gt;— 그럼 재귀는 중요하지 않은 요소에 관심을 기울이게 만드는 것 아니란 말인가? -&amp;gt; 글쎄… ^^&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;다른-방식---스트림-활용&quot;&gt;&lt;a name=&quot;다른-방식---스트림-활용&quot; href=&quot;#다른-방식---스트림-활용&quot;&gt;&lt;/a&gt;다른 방식 - 스트림 활용&lt;/h2&gt;&lt;h3 id=&quot;정기적금&quot;&gt;&lt;a name=&quot;정기적금&quot; href=&quot;#정기적금&quot;&gt;&lt;/a&gt;정기적금&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;이번엔 스칼라를 사용하자. 스칼라 REPL이나 워크시트를 실행한다.&lt;/li&gt;&lt;li&gt;정기적금 문제 매 단계를 살펴보면:&lt;br&gt;— 각 행의 결과는 개월수와만 관계 있음(이율 등 다른 요소는 행이 바뀐다고 해도 그대로임)&lt;br&gt;— 엑셀을 그대로 인코딩한다면:&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;[0부터 11까지 개월을 표현하는 어떤것] &lt;br /&gt;  ===(getPIValue를 모든 원소에 적용한 결과)===&amp;amp;gt;&lt;br /&gt;[(불입금 * 원금)의 배열] &lt;br /&gt;  ===(배열의 모든 원소의 합을 구함)===&amp;amp;gt;&lt;br /&gt;합계&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;[0부터 11까지 개월을 표현하는 어떤것]    ===(getPIValue를 모든 원소에 적용한 결과)===&amp;gt; [(불입금 * 원금)의 배열]    ===(배열의 모든 원소의 합을 구함)===&amp;gt; 합계 &lt;/code&gt;&lt;/pre&gt;라는 식으로 파이프라이닝이 가능함&lt;/li&gt;&lt;li&gt;일단, &lt;code&gt;getPIValue&lt;/code&gt; 정의 및 다른 값의 정의를 REPL에서 하자.&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;val i_year = 0.05         // 5% 이율&lt;br /&gt;val i_month = i_year / 12 // 월이율&lt;br /&gt;val installment = 30000.0   // 불입금&lt;br /&gt;&lt;br /&gt;def getPIValue(installment:Double, i_month:Double, t_month:Int, ith:Int):Double = installment + installment * (t_month-ith) * i_month&lt;br /&gt;&lt;br /&gt;// getPIValue에서 항상 같은 installment, i_month, 12를 지정해서 만든 새로운 함수. 인자를 ith만 받기 때문에 편리함.&lt;br /&gt;def getPIValue2(ith:Int):Double = getPIValue(installment, i_month, 12, ith)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;val i_year = 0.05         // 5% 이율 val i_month = i_year / 12 // 월이율 val installment = 30000.0   // 불입금  def getPIValue(installment:Double, i_month:Double, t_month:Int, ith:Int):Double = installment + installment * (t_month-ith) * i_month  // getPIValue에서 항상 같은 installment, i_month, 12를 지정해서 만든 새로운 함수. 인자를 ith만 받기 때문에 편리함. def getPIValue2(ith:Int):Double = getPIValue(installment, i_month, 12, ith) &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;0부터 11까지 개월을 표현하는 어떤것&lt;/p&gt;&lt;ul&gt;&lt;li&gt;원소나열법: &lt;code&gt;Seq(0,1,2,3,4,5,6,7,8,9,10,11)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;범위 사용: &lt;code&gt;(0 to 11)&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;code&gt;===(getPIValue를 모든 원소에 적용한 결과)===&amp;gt;&lt;/code&gt; : 어떤 컬렉션의 모든 원소에 같은 함수를 적용: &lt;code&gt;컬렉션 map (함수)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;   Seq(0,1,2,3,4,5,6,7,8,9,10,11) map (getPIValue2)&lt;br /&gt;   (0 to 11) map (getPIValue2)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;   Seq(0,1,2,3,4,5,6,7,8,9,10,11) map (getPIValue2)    (0 to 11) map (getPIValue2) &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;만들어진 결과의 합계를 구함&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;// 직접 만든 재귀 합계 함수&lt;br /&gt;def calcSum(c:Seq[Double], sum_so_far:Double):Double = {&lt;br /&gt;  if(c.isEmpty)&lt;br /&gt;    sum_so_far&lt;br /&gt;  else&lt;br /&gt;    calcSum(c.tail, sum_so_far + c.head)&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// 사용법&lt;br /&gt;calcSum(Seq(0,1,2,3,4,5,6,7,8,9,10,11) map (getPIValue2), 0)&lt;br /&gt;calcSum(((0 to 11) map (getPIValue2)).toList, 0)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;// 직접 만든 재귀 합계 함수 def calcSum(c:Seq[Double], sum_so_far:Double):Double = {   if(c.isEmpty)     sum_so_far   else     calcSum(c.tail, sum_so_far + c.head) }  // 사용법 calcSum(Seq(0,1,2,3,4,5,6,7,8,9,10,11) map (getPIValue2), 0) calcSum(((0 to 11) map (getPIValue2)).toList, 0) &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;한번 더 추상화&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;   ((0 to 11) map (getPIValue2)).reduce(_+_)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;   ((0 to 11) map (getPIValue2)).reduce(_+_) &lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&lt;p&gt;“It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.” - Alan Perils&lt;br&gt;&lt;a href=&quot;http://www.cs.yale.edu/homes/perlis-alan/quotes.html&quot;&gt;http://www.cs.yale.edu/homes/perlis-alan/quotes.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&quot;뉴튼법&quot;&gt;&lt;a name=&quot;뉴튼법&quot; href=&quot;#뉴튼법&quot;&gt;&lt;/a&gt;뉴튼법&lt;/h3&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;def f = (x:Double) =&amp;amp;gt; x*x - 2.0&lt;br /&gt;def df = (x:Double) =&amp;amp;gt; 2*x&lt;br /&gt;&lt;br /&gt;val x0 = 2&lt;br /&gt;val x1 = x0 - f(x0)/df(x0)&lt;br /&gt;val x2 = x1 - f(x1)/df(x1)&lt;br /&gt;...&lt;br /&gt;x_n = x_n-1 - f(x_n-1)/df(x_n-1)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;def f = (x:Double) =&amp;gt; x*x - 2.0 def df = (x:Double) =&amp;gt; 2*x  val x0 = 2 val x1 = x0 - f(x0)/df(x0) val x2 = x1 - f(x1)/df(x1) ... x_n = x_n-1 - f(x_n-1)/df(x_n-1) &lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;재귀를 사용한 스트림 정의&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code data-origin=&quot;&lt;pre&gt;&lt;code&gt;lazy val x:Stream[Double] = 2.0 #:: x.map(&lt;br /&gt;  (x) =&amp;amp;gt; x - f(x)/df(x)&lt;br /&gt;)&lt;br /&gt;&lt;br /&gt;x.zipWithIndex.dropWhile( &lt;br /&gt;  tuple =&amp;amp;gt; tuple._1 - x(tuple._2+1) &amp;amp;gt;= 0.0001 || tuple._1 - x(tuple._2+1) &amp;amp;lt;= -0.0001&lt;br /&gt;)(0)._1&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&quot;&gt;lazy val x:Stream[Double] = 2.0 #:: x.map(   (x) =&amp;gt; x - f(x)/df(x) )  x.zipWithIndex.dropWhile(    tuple =&amp;gt; tuple._1 - x(tuple._2+1) &amp;gt;= 0.0001 || tuple._1 - x(tuple._2+1) &amp;lt;= -0.0001 )(0)._1 &lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6453871919646352060/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6453871919646352060' title='1개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6453871919646352060'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6453871919646352060'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2015/11/taste-of-functional-programming.html' title='[도사티비] 함수형 프로그래밍 맛보기'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-1539297498052089776</id><published>2014-07-24T13:33:00.001+10:00</published><updated>2014-07-24T13:34:49.815+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="implicit"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="Traversable"/><category scheme="http://www.blogger.com/atom/ns#" term="곱집합"/><category scheme="http://www.blogger.com/atom/ns#" term="데카르트곱"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="암시클래스"/><title type='text'>[Scala] Traversable의 데카르트 곱 - implicit 클래스 사용</title><content type='html'>&lt;h1 id=&quot;scala-traversable의-데카르트-곱-implicit-클래스사용&quot;&gt;[Scala] Traversable의 데카르트 곱 - implicit 클래스사용&lt;/h1&gt; &lt;p&gt;모든것은 구구단에서 출발했다. 스칼라 리스트에는 &lt;code&gt;tabulate&lt;/code&gt;라는 메서드가 있고, 이를 활용하면 다음과 같이 구구단을 구현할 수 있다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;tabulate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;$x%02d * $y%02d = ${x*y}%02d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;filterNot&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;00&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;물론, for문 두개를 사용하거나 이와 동치인 map/flatMap을 사용해도 가능하다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// yield를 해서 foreach를 해도 되지만 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;$x%02d * $y%02d = ${x*y}%02d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// flatMap과 map 사용&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${x._1}%02d * ${x._2}%02d = ${x._1 * x._2}%02d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;어느쪽이던 좋다. 이제 원하는 것은 둘 이상의 시퀀스(아마도 &lt;code&gt;Traversable&lt;/code&gt;이면 될 것 같다)에 대해 자동으로 카테시안 곱(cartesian product)을 해주는 방법은 없을까 하는 것이다. 예를 들어 어떤 암시적 변환(implicit conversion)이 있어서 자동으로 시퀀스에 cartesianProduct(other:Traversable)라는 메서드를 더해줄 수 있다면 구구단을 다음과 같이 만들 수 있다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${x._1}%02d * ${x._2}%02d = ${x._1 * x._2}%02d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;인터넷을 찾아보니 이에 대한 해답은 &lt;a href=&quot;http://stackoverflow.com/questions/16219545/scala-cross-cartesian-product-with-multiple-sources-and-heterogeneous-types&quot;&gt;스택오버플로우&lt;/a&gt;에 이미 있긴 하다. 한번 그냥 좀더 쉽고 간단한 방법을 써보고, 언제 쓸지 모르는 다음 글에서 스택오버플로우의 접근방법을 논의해 보겠다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h2 id=&quot;시퀀스가-두개인-경우&quot;&gt;시퀀스가 두개인 경우&lt;/h2&gt; &lt;p&gt;시퀀스가 두개인 경우 첫 시퀀스에 cartesianProduct 메서드를 추가해주는 암시적 변환만 만들면 큰 문제 없이 바로 처리 가능하다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이 클래스를 정의하고 나면 다음과 같은 위 예제와 같은 코드를 사용할 수 있다. REPL에서 테스트해보자.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;paste&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// Entering paste mode (ctrl-D to finish)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${x._1}%02d * ${x._2}%02d = ${x._1 * x._2}%02d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// Exiting paste mode, now interpreting.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(생략)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h2 id=&quot;세-시퀀스의-데카르트-곱&quot;&gt;세 시퀀스의 데카르트 곱&lt;/h2&gt; &lt;p&gt;이제 세가지 시퀀스의 데카르트 곱을 만들고 싶다. 한번 시험삼아 [1,3], [4,6], [7,9](수학의 구간 표기법 사용함)의 정수의 데카르트 곱을 출력해보자.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${x._1}%02d * ${x._2}%02d * ${x._3}%02d = ${x._1 * x._2 * x._3}%03d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&amp;lt;console&amp;gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value _3 &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; a member of &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;              &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${x._1}%02d * ${x._2}%02d * ${x._3}%02d = ${x._1 * x._2 * x._3}%03d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;타입 오류가 난다. 타입을 보면 ((Int, Int), Int)이다. 왜냐하면 첫 cartesionProduct의 곱이 (Int, Int)의 시퀀스이기 때문에, 그 시퀀스를 cProductable로 암시적 변환하시 타입 파라미터인 X가 튜플(Int,Int)이 되어, 결과 타입은 튜플과 정수 튜플의 시퀀스 타입(Traversable[((Int, Int), Int))이 되어버린다. 일단 다음과 같이 하면 출력은 할 수 있지만 뭔가 찜찜하다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${x._1._1}%02d * ${x._1._2}%02d * ${x._2}%02d = ${x._1._1 * x._1._2 * x._2}%03d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;028&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;032&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;036&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;035&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;040&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;045&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;042&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;048&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;054&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;056&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;064&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;072&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;070&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;080&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;090&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;084&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;096&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;084&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;096&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;108&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;105&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;05&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;135&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;126&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;144&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;162&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;결과 프로덕트를 평평하게 펼쳐주고 싶다. 즉, &lt;code&gt;(1 to 3).cartesianProduct(4 to 6).cartesianProduct(7 to 9)&lt;/code&gt;의 결과가 &lt;code&gt;Traversable[(Int, Int, Int)]&lt;/code&gt;가 되었으면 한다.&lt;/p&gt; &lt;p&gt;결국, 이를 해결하려면 Traversable[(Int, Int)]에 대해 cartesianProduct를 제공해주는 암시 변환을 추가하면 될것 같다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7.3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;필요한 만큼 이런 클래스를 추가하면 가능할 것이다. 이를 모두 묶어서 한 객체에 넣자. 9개까지만 추가했다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; com&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;enshahar&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;cartesian&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;CartesianProducts&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cProductable9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;X8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cartesianProduct&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ys&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Traversable&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; ys &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; y&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;사용하려면 import com.enshahar.cartesian.CartesianProducts._라고 하고 쓰면 된다.&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/1539297498052089776/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=1539297498052089776' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1539297498052089776'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1539297498052089776'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/scala-traversable.html' title='[Scala] Traversable의 데카르트 곱 - implicit 클래스 사용'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-5897135274899438611</id><published>2014-07-15T01:18:00.001+10:00</published><updated>2014-07-15T01:18:51.142+10:00</updated><title type='text'>[scala][codejam] Rational Number Tree - 우아한 막코딩</title><content type='html'>&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h1 id=&quot;코드잼-rational-number-tree&quot;&gt;코드잼-Rational Number Tree&lt;/h1&gt; &lt;p&gt;코드잼 문제중 스칼라 스트림을 사용하면 우아하고 무식하게(?) 풀 수 있는 문제가 있어서 한번 풀어본다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h2 id=&quot;문제정의-rational-number-tree&quot;&gt;문제정의: Rational Number Tree&lt;/h2&gt; &lt;p&gt;이 트리는 다음과 같이 이뤄지는 분수의 트리이다.&lt;/p&gt; &lt;ol&gt;&lt;li&gt;루트는 1/1이다.&lt;/li&gt;&lt;li&gt;p/q라는 분수가 있으면, 그 분수의 두 자녀는 p/(p+q), (p+q)/q 이다.&lt;/li&gt;&lt;/ol&gt; &lt;p&gt;따라서, 루트에서부터 3번째 레벨까지 나열해 보면 다음과 같다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이 트리에는 모든 양의 유리수가 단 한번씩만 들어있다는 사실을 증명할 수 있단다(난 그 증명을 모른다).&lt;/p&gt; &lt;p&gt;어쨌든 이 트리를 레벨순서순회(level-order traversal)하면 다음과 같은 수열을 얻을 수 있다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;코드잼 문제는 입력을 받아서 &lt;/p&gt; &lt;ol&gt;&lt;li&gt;1번 케이스는 n을 받아서 이 트리 수열에서 n번째 원소가 뭔지 출력&lt;/li&gt;&lt;li&gt;2번 케이스는 p q를 받아서 p/q가 트리 수열에서 몇번째 원소인지 출력&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h2 id=&quot;문제-해결-설계&quot;&gt;문제 해결 설계&lt;/h2&gt; &lt;p&gt;여러 방법이 있겠지만, 우아하게 무식하게 스트림을 사용해 짤 것이다.&lt;/p&gt; &lt;p&gt;&lt;code&gt;p/q&lt;/code&gt;를 나타내는 방법은 다양한 것이 있겠지만, &lt;code&gt;(Int,Int)&lt;/code&gt; 튜플로 표현할 것이다.&lt;/p&gt; &lt;p&gt;매 레벨을 &lt;code&gt;List[(Int, Int)]&lt;/code&gt; 타입으로 나타낸다면, 전체 트리는 &lt;code&gt;Stream[List[(Int,Int)]]&lt;/code&gt; 타입이며, 전체 트리의 첫 원소는 &lt;code&gt;List((1,1))&lt;/code&gt;일 것이다.&lt;/p&gt; &lt;p&gt;스트림으로 나타낼 경우 &lt;code&gt;lazy val&lt;/code&gt;로 표현하면서 지금까지 있는 것을 가지고 어떻게 다음 원소를 구할지 표현하면 된다. 어떤 한 레벨이 있다면, 그 레벨의 각 &lt;code&gt;(p,q)&lt;/code&gt;쌍은 &lt;code&gt;(p, p+q) (p+q, q)&lt;/code&gt;으로 바뀐다. 따라서 한 레벨을 변환하는 규칙은 다음과 같다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; transLevel&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;flatMap &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;lazy val tree:Stream[List[(Int,Int)]]&lt;/code&gt;가 있다면 이 트리의 각 레벨(즉, &lt;code&gt;List[(Int, Int)]&lt;/code&gt;타입의 원소)마다 &lt;code&gt;transLevel&lt;/code&gt;을 적용하면 된다. 이를 그대로 쓰면 다음과 같다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;lazy val tree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#:: tree.map(transLevel)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제, 이 트리의 각 레벨을 펼치면 된다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;val flattree &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; tree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;flatten&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;함수를 없애고 합치면 다음과 같이 두줄로 표현 가능하다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;lazy val tree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#:: tree.map( _.flatMap { case (x,y) =&amp;gt; List((x,x+y), (x+y, y)) } )&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val flattree &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; tree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;flatten&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt; &lt;p&gt;이 &lt;code&gt;flattree&lt;/code&gt;에서 n번째를 찾으려면 다음과 같이 인덱스를 사용한다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; flattree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;res12&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; flattree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;res13&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; flattree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;res14&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이 &lt;code&gt;flattree&lt;/code&gt;에서 &lt;code&gt;(p,q)&lt;/code&gt;를 찾으려면 &lt;code&gt;find&lt;/code&gt;를 쓰면 된다. 예를 들어 (8,5) 즉, 8/5를 찾아보자.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; flattree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;find &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; q &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;res16&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;문제는 인덱스를 못찾는다는 것. 인덱스를 찾으려면 루프를 돌면서 찾아도 되고, &lt;code&gt;zip&lt;/code&gt;을 사용해 두 무한시퀀스를 조합하는 방법도 있을 것이다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;lazy val nat&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#:: nat.map(_+1)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val flatTreeWithIdx &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; flattree&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nat&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이를 사용하면 다음과 같이 인덱스를 구할 수 있다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; flatTreeWithIdx&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;find &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; q &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;res19&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[((&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/5897135274899438611/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=5897135274899438611' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/5897135274899438611'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/5897135274899438611'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/scalacodejam-rational-number-tree.html' title='[scala][codejam] Rational Number Tree - 우아한 막코딩'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-2469000646372560374</id><published>2014-07-13T17:18:00.001+10:00</published><updated>2014-07-13T17:18:55.042+10:00</updated><title type='text'>[GIT] 삭제한 파일 커밋하기</title><content type='html'>&lt;h1 id=&quot;git-삭제한-파일-커밋하기&quot;&gt;[GIT] 삭제한 파일 커밋하기&lt;/h1&gt; &lt;p&gt;GIT를 쓰다 보면 파일을 삭제하고 이를 커밋해야 할 경우가 있다. 물론 파일이름을 일일히 치면 되긴 하지만, 귀찮다.&lt;/p&gt; &lt;h2 id=&quot;자동-트래킹-사용&quot;&gt;자동 트래킹 사용&lt;/h2&gt; &lt;p&gt;&lt;code&gt;git add -u&lt;/code&gt;를 하면 삭제한 파일도 일괄적용한다.&lt;/p&gt; &lt;p&gt;&lt;code&gt;git commit -a&lt;/code&gt;를 하면 모든 변경 파일을 커미한다.&lt;/p&gt; &lt;h2 id=&quot;수동추가&quot;&gt;수동추가&lt;/h2&gt; &lt;p&gt;가끔 삭제한 파일만 커밋하고 싶을 수도 있다. 그런 경우 다음과 같이 한다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;git ls&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;files &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;deleted &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;z &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; xargs &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; git rm&lt;br /&gt;git commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/2469000646372560374/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=2469000646372560374' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2469000646372560374'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2469000646372560374'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/git.html' title='[GIT] 삭제한 파일 커밋하기'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-3606947760021540812</id><published>2014-07-12T02:01:00.001+10:00</published><updated>2014-07-12T12:20:13.516+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="lazy"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="scala excercise"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라 연습"/><category scheme="http://www.blogger.com/atom/ns#" term="지연계산"/><title type='text'>[스칼라] [연습] 스파이럴 출력 문제 - 2</title><content type='html'>&lt;h1 id=&quot;스칼라연습-스파이럴-출력-문제&quot;&gt;[스칼라][연습] 스파이럴 출력 문제&lt;/h1&gt; &lt;h2 id=&quot;문제정의&quot;&gt;문제정의&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;https://fbcdn-sphotos-e-a.akamaihd.net/hphotos-ak-xfp1/t1.0-9/p526x296/10533271_698139383555472_3784405498673265491_n.jpg&quot; alt=&quot;스파이럴 문제정의&quot; title=&quot;&quot;&gt;&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt; &lt;h3 id=&quot;기본착상&quot;&gt;기본착상&lt;/h3&gt; &lt;p&gt;일단 기본 착상을 보자.&lt;/p&gt; &lt;ul&gt;&lt;li&gt;m x n 배열이 있다면 시작은 왼쪽 맨 위에서 시작해 n개를 차례로 0부터 n-1까지 배열한다. &lt;br&gt;&lt;ul&gt;&lt;li&gt;그러면 남는것은 (m-1) x n 배열이다.&lt;/li&gt;&lt;li&gt;이 (m-1) x n 배열을 90도 회전시키면, n x (m-1) 배열이다. 이 배열을 다시 재귀적으로 이 처리방법을 따라 처리하면 된다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h4 id=&quot;구체적-예&quot;&gt;구체적 예&lt;/h4&gt; &lt;p&gt;구체적 예를 보자. 3 x 5 배열이 있다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;맨 처음에, &lt;code&gt;1 2 3 4 5&lt;/code&gt;를 차례로 &lt;code&gt;0 1 2 3 4&lt;/code&gt;를 채워넣고 나면, 다음 배열이 남는다. (5개의 원소를 처리했다)&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이 배열을 90도 회전(왼쪽으로) 시키면 다음과 같이 2 x 5 배열이 생긴다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제, 다시 재귀적으로 &lt;code&gt;10 15&lt;/code&gt;를 &lt;code&gt;5 6&lt;/code&gt;으로 채워놓고 나면 나머지는 다음과 같다. (2개를 처리했다)&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이를 회전하면 다음과 같다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;다음으로 &lt;code&gt;14 13 12 11&lt;/code&gt;에 &lt;code&gt;7 8 9 10&lt;/code&gt;을 채워넣고, 남은 배열을 회전시키면 다음과 같다. (4개를 처리했다)&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제, &lt;code&gt;6&lt;/code&gt;에 &lt;code&gt;11&lt;/code&gt;을 채워넣고, 나머지를 회전시킨다. (1개를 처리했다)&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제, &lt;code&gt;7 8 9&lt;/code&gt;에 &lt;code&gt;12 13 14&lt;/code&gt;를 채워넣으면 나머지는 없다. (3개를 처리했다)&lt;/p&gt; &lt;p&gt;지금까지 채워넣은 순서대로 값을 순서쌍으로 적고 배열 크기를 정리해 보자.&lt;/p&gt; &lt;ul&gt;&lt;li&gt;3 x 5 : (1, 0) (2, 1) (3, 2) (4, 3) (5, 4)&lt;/li&gt;&lt;li&gt;5 x 2 : (10, 5) (15, 6)&lt;/li&gt;&lt;li&gt;2 x 4 : (14, 7) (13, 8) (12, 9) (11, 10)&lt;/li&gt;&lt;li&gt;4 x 1 : (6, 11)&lt;/li&gt;&lt;li&gt;1 x 3 : (7, 12) (8, 13) (9, 14)&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;순서쌍에 있는 첫 값은 위치고 두번째 값은 채워넣어야 할 값이다. 이를 채워넣어 보면 다음과 같은 매트릭스가 생긴다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h3 id=&quot;구현-1&quot;&gt;구현 1&lt;/h3&gt; &lt;p&gt;일단 위 재귀호출을 잘 살펴보면, m x n크기의 배열을 처리하면 n개를 채워넣고, 다시 n x (m-1) 배열을 재귀적으로 처리한다. &lt;/p&gt; &lt;p&gt;입력은 물론 m, n일 것이고, 출력을 뭘로 해야 할까? 좌표에 대한 값을 정해야 하는데 회전을 고려하고 방향을 고려하려면 간단하지 않다. &lt;/p&gt; &lt;p&gt;물론 여러가지 방법이 있겠지만, 여기서는 매 재귀 단계마다 몇개의 원소를 채워넣어야 하는지를 리스트로 만들어내는 함수를 먼저 정의했다. &lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제, 매 재귀 단계마다 가로 세로 좌표 변화를 표현해야 한다. 좌표 변화는 (0, 1), (1, 0), (0, -1), (-1, 0)을 무한반복한다. 무한반복은 &lt;code&gt;lazy val&lt;/code&gt;로 표현하면 된다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;lazy val direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제 generate한것과 direction을 묶으면 몇개를 어떤 좌표변화로 만들어내야 하는지 구할 수 있다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genRun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  lazy val direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;br /&gt;  generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;genRun&lt;/code&gt;이 만들어내는 리스트는 (크기, (row증분, col증분))이 모인 것이다. 이를 (row증분, col증분)이 크기만큼 반복하고, 다시 이런 모든 리스트를 flatMap으로 하나로 모으자.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genIncList&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))]):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l flatMap &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;run &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;padTo&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;이제, 이 리스트를 실제 좌표계산에 활용하는 다음과 같은 함수를 만들 수 있다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genPosVal&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genPosValInner&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l match &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; h&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;t &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;genPosValInner&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  genPosValInner&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h3 id=&quot;구현-종합&quot;&gt;구현 종합&lt;/h3&gt; &lt;p&gt;지금까지를 다 종합하면 다음과 같다.&lt;/p&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generateSpiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genPosVal&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genPosValInner&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l match &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; h&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;t &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;genPosValInner&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; pos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; v&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    genPosValInner&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genIncList&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))]):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; l flatMap &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;run &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;padTo&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genRun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    lazy val direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;br /&gt;    generate&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  genPosVal&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;genIncList&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;genRun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;정렬은 리스트의 sorted를 그냥 사용하면 된다. 출력은 n개로 나눠서 출력하면 된다. 정렬후에는 좌표가 필요 없으므로, map을 사용해 좌표를 없애고 값만 남긴다. 그리고 나서 리스트를 m개씩 나눠서 출력면 될 것이다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; printSpiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    val spiralSorted &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; generateSpiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sorted&lt;br /&gt;    val valueOnly &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; spiralSorted&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;toList&lt;br /&gt;    val mBynLists &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; valueOnly&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sliding&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;mBynLists&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;mkString&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;mkString&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;h3 id=&quot;generatespiral-다른-버전&quot;&gt;generateSpiral 다른 버전&lt;/h3&gt; &lt;p&gt;위에서 genRun 부분은 다음과 같이도 만들 수 있다.&lt;/p&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genRun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    val runs &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; zip &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;toList&lt;br /&gt;    lazy val direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Stream&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::(-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)#::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;br /&gt;    runs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/3606947760021540812/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=3606947760021540812' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/3606947760021540812'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/3606947760021540812'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/2_12.html' title='[스칼라] [연습] 스파이럴 출력 문제 - 2'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-2806695107881174126</id><published>2014-07-11T22:27:00.001+10:00</published><updated>2014-07-11T22:29:20.103+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="scala excercise"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라 연습"/><title type='text'>[스칼라] [연습] 스파이럴 출력 문제</title><content type='html'>&lt;h1 id=&quot;스칼라연습-스파이럴-출력-문제&quot;&gt;[스칼라][연습] 스파이럴 출력 문제&lt;/h1&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;h2 id=&quot;문제정의&quot;&gt;문제정의&lt;/h2&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt; &lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-UKg-ZEu_6H0/U7_YggWOcfI/AAAAAAAAD0Y/2pIl59ewelo/s1600/spiral.gif&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;http://3.bp.blogspot.com/-UKg-ZEu_6H0/U7_YggWOcfI/AAAAAAAAD0Y/2pIl59ewelo/s320/spiral.gif&quot; /&gt;&lt;/a&gt;&lt;/div&gt; &lt;h2 id=&quot;풀이1-무식풀이&quot;&gt;풀이1 : 무식풀이&lt;/h2&gt; &lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; spiral&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// m x n 매트릭스에서 m은 row수, n은 column수임. &lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// Array[Array[Int]]로 매트릭스를 표현하고, arr(1)(2)는 1번째 row의 2번째 column에 있는 원소임&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// sprial의 한 RUN을 나타냄.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// start : 시작 인덱스&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// end : 끝 인덱스&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// step : 증분&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// sz : 런 길이&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; step&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sz&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// m, n 배열에 대해 RUN 리스트를 만든다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genSpiralPairs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 왼쪽 -&amp;gt; 오른쪽 이동 &lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 이 메서드만 알면 나머지는 그냥 케이스 분리한 것임&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// s : 시작 좌표&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// nRow, nCol : 채워야 할 매트릭스 세로(행서), 가로(열수) 길이(한 RUN이 지날 때마다 이 수는 점점 줄어든다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; LR&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nCol &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 가로(열)가 0이면 더이상 진행할 이유가 없다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;      &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// LR런에서는 행번호는 같고, 열만 nCol만큼 가로로 채워넣는다. 최종 컬럼 좌표는 s._2(시작컬럼좌표) + nCol - 1이다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val lastPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// nCol개만큼 RUN을 채우고 나면 다음 행으로 1 증가해서 UD(위에서 아래로) 채워넣기 시도해야 한다. 그에 따른 시작점 계산&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val nextStartPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// LR RUN의 증분값은 (0, 1)로 행은 변화없고 열만 1씩 증가한다. LR -&amp;gt; UD -&amp;gt; RL -&amp;gt; DU -&amp;gt; 다시 LR ... 순으로 RUN이 움직인다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; UD&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nextStartPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; UD&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nRow &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;      &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val lastPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val nextStartPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; RL&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nextStartPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; RL&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nCol &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;      &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val lastPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val nextStartPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; DU&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nextStartPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; DU&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nRow &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Nil&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;      &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val lastPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      val nextStartPos &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; lastPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; LR&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nextStartPos&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nRow&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; nCol&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  LR&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 완전 초 무식 프린트 함수. 런 리스트를 받고, 배열을 초기화해서 배열에 채워넣어서 프린트한다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 당연히 함수형으로 바꿀 수 있다. 나중에 심심할때 해보자.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; printSpiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;spiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val arr &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; arr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 현재 배열에 채워 넣어야 하는 값. var로 해서 runRun에서 업데이트하게 만든다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; vv &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 한 RUN을 처리하는 함수&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; runRun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; row &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 좌표도 var로 업데이트해가면서 계산하자.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; col &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 무식하게 for루프 돌린다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      arr&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; vv   &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 배열 업데이트&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      vv &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      row &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_1&lt;br /&gt;      col &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; r&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_2&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 모든 런에 대해 차례로 적용&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  spiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;runRun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// m x n 행렬 프린트&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;j &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;until&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;${arr(i)(j)}%5d&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 스칼라의 f&quot;&quot; 문자열 인터폴레이션 사용. 5칸 간격으로 출력&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 도구 함수: RUN 리스트 만들어서 바로 출력&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; genAndPrint&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; printSpiral&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;genSpiralPairs&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; m&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; n&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;/*&lt;br /&gt;// 예제 배열들&lt;br /&gt;val arr5x5 = genSpiralPairs(5,5)&lt;br /&gt;printSpiral(arr5x5, 5, 5)&lt;br /&gt;&lt;br /&gt;// 예제 출력&lt;br /&gt;genAndPrint(1,1)&lt;br /&gt;genAndPrint(1,5)&lt;br /&gt;genAndPrint(5,1)&lt;br /&gt;genAndPrint(3,4)&lt;br /&gt;genAndPrint(5,5)&lt;br /&gt;*/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/2806695107881174126/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=2806695107881174126' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2806695107881174126'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2806695107881174126'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/blog-post.html' title='[스칼라] [연습] 스파이럴 출력 문제'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://3.bp.blogspot.com/-UKg-ZEu_6H0/U7_YggWOcfI/AAAAAAAAD0Y/2pIl59ewelo/s72-c/spiral.gif" height="72" width="72"/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-3053209471838481651</id><published>2014-07-09T10:45:00.001+10:00</published><updated>2014-07-09T19:13:16.677+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="lens"/><category scheme="http://www.blogger.com/atom/ns#" term="nested data structure"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="내포구조"/><category scheme="http://www.blogger.com/atom/ns#" term="렌즈"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><title type='text'>[스칼라] 복잡한 내포구조 깔끔하게 업데이트하기 - lens</title><content type='html'>&lt;h1 id=&quot;스칼라-내포구조-깊은-곳의-데이터-깔끔하게-업데이트하기-lens&quot;&gt;[스칼라] 내포구조 깊은 곳의 데이터 깔끔하게 업데이트하기 - lens&lt;/h1&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;내포구조를-케이스클래스-사용해-표현하기&quot;&gt;내포구조를 케이스클래스 사용해 표현하기&lt;/h2&gt;예를 들어 &lt;a href=&quot;http://docbook.kr/&quot;&gt;docbook&lt;/a&gt;프로세서를 만들고 있다고 치자. 간단하게 다음과 같은 책이 있다고 하자(&lt;a href=&quot;https://ko.wikipedia.org/wiki/%EB%8B%A5%EB%B6%81&quot;&gt;닥북 위키 한글 페이지&lt;/a&gt;에서 따옴).&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;book&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;simple_book&quot;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Very simple book&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;chapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot;&gt;&quot;simplechapter&quot;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Chapter 1&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;Hello world!&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/chapter&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/book&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이런 내포구조는 쉽게 스칼라 케이스클래스로 표현 가능하다. 케이스클래스를 사용하면 스칼라가 동반객체(companion object)에 자동으로 &lt;code&gt;apply()&lt;/code&gt;함수를 만들어주기 때문에 콤비네이터로 닥북 객체를 만들 수 있다. REPL에 복붙하고 싶다면 &lt;code&gt;:paste&lt;/code&gt;를 사용하라.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;앞에서 본 닥북 문서를 객체로 만들면 다음과 같다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;val mybook &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;simple book&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Very simple book&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;               &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;simplechapter&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Chapter 1&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;                 &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;             &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;REPL에서 테스트해보면 잘 된다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; val mybook &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;simple book&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Very simple book&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;                &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;simplechapter&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Chapter 1&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;                  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;              &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;mybook&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;simple book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Very&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; simple book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;simplechapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; world&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;내포구조-데이터-일부-갱신하기&quot;&gt;내포구조 데이터 일부 갱신하기&lt;/h2&gt;물론, 변경가능 객체로 만들면 쉽게 변경 가능하겠지만, 변경불가능 객체를 고집해 보자. 어쨌든 스칼라도 함수형 프로그래밍 언어 아니겠는가?&lt;br /&gt;책의 제목을 갱신하는 경우라면 문제는 그래도 간단하다. &lt;code&gt;changeTitle(book: Book, newTitle: Title)&lt;/code&gt;로 정의할 수도 있지만, 사용자 편의를 위해 &lt;code&gt;changeTitle(book: Book, newTitle: String)&lt;/code&gt;을 제공하기로 했다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changeTitle&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newTitle&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newTitle &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;복잡하지는 않지만, &lt;code&gt;book.id&lt;/code&gt;, &lt;code&gt;book.chapters&lt;/code&gt;등을 반복하는게 좋지 않다. 개발 십계명의 제 8계명에도 “너 자신을 반복하지 말라(Thou shalt not repeat yourself)”라고 써 있지 않은가?&lt;br /&gt;&lt;blockquote&gt;&lt;h3 id=&quot;ten-commandments-of-software-development여러-버전이-있음&quot;&gt;Ten Commandments of Software Development(여러 버전이 있음)&lt;/h3&gt;I. Thou shalt not disrupt the legacy system &lt;br /&gt;II. Thou shalt document early and while thy mind is fresh &lt;br /&gt;III. Thou shalt speak up early and often &lt;br /&gt;IV. Designeth not for complexity, but for simplicity; and wherever the Beast named Complex shall rear its ugly head, smiteth it with thy Sword named Modular, and let no Module be known by the Name of the Beast. &lt;br /&gt;V. Thou shalt not re-invent the wheel &lt;br /&gt;VI. Thou shalt commit often and your messages shalt be informative &lt;br /&gt;VII. Thou shalt not kill (maintainability) &lt;br /&gt;VIII. Thou shalt not repeat yourself &lt;br /&gt;IX. Fear not the Priests of Quality Assurance nor the Altar of Testability, though they be stained with the blood of thy brethren; for they are the Salvation of the Righteous, and the Servants of our Lord, the Customer. &lt;br /&gt;X. Thou shalt recognize and retain your top talent&lt;/blockquote&gt;그럼 어떻게 해야 반복을 피할 수 있을까? 다행히도 스칼라(2.8부터)에서는 &lt;code&gt;copy()&lt;/code&gt;메서드에 이름붙은 파라미터(named parameter)를 사용해 객체를 복사하면서 원하는 필드반 변경하는 것이 가능하다. 이를 사용하면 다음과 같이 구현을 바꿀 수 있다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changeTitle&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newTitle&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;  book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;title &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newTitle &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;간단하고 의도도 명확하다. 하지만, 내포속에 내포가 있을 땐 그리 좋지 않다. 문단을 바꾸는 &lt;code&gt;changePara(book: Book, newPara: String)&lt;/code&gt;을 정의해보자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changePara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;최종 변화대상까지 copy를 반복해가면서 &lt;code&gt;이름 = 필드경로.copy&lt;/code&gt;를 반복적용해야 한다. 이는 8계명 DRY(Don’t Repeat Yourself) 위반이다.&lt;br /&gt;&lt;h2 id=&quot;데이터-갱신-연산화-하기&quot;&gt;데이터 갱신 연산화 하기&lt;/h2&gt;예를 들어 설명하자. 앞의 &lt;code&gt;changePara&lt;/code&gt;함수에서 필요한 것은 무엇이었을까?&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Book에서 chapter를 얻는 방법(&lt;code&gt;book.chapter&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;Book에서 chapter만 변경하는 방법(&lt;code&gt;book.copy( chapter = ... )&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;Chapter에서 content만 변경하는 방법(&lt;code&gt;chapter.copy( content = ...)&lt;/code&gt;)&lt;/li&gt;&lt;/ul&gt;이를 다음과 같은 getWholePart와 putWholePart 함수로 변경할 수 있다. (Whole과 Part에 원하는 타입이나 필드 이름을 넣자)&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; getBookChapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; setBookChapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; setChapterContent&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;getChapterContent&lt;/code&gt;는 문단을 가져올 일이 없어서 사용정의하지는 않았다.&lt;br /&gt;이제 이를 조합하면 &lt;code&gt;changePara&lt;/code&gt;를 다음과 같이 정의할 수 있다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changePara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    setBookChapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;        setChapterContent&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;getBookChapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;동작이야 잘 한다만, 별로 줄어든것 같지도 않고 가독성이 더 좋은것 같지도 않다. 여기서 공통 패턴은 없는지 살펴보자.&lt;br /&gt;&lt;ol&gt;&lt;li&gt;맨처음 &lt;code&gt;getBookChapter(book)&lt;/code&gt;을 한다.&lt;/li&gt;&lt;li&gt;1의 결과에 대해 &lt;code&gt;setChapterContent&lt;/code&gt;를 한다.&lt;/li&gt;&lt;li&gt;다시 &lt;code&gt;setBookChapter(book)&lt;/code&gt;을 한다.&lt;/li&gt;&lt;/ol&gt;뭔가 감이 오지 않나? 만약 A,B,C,D순으로 내포구조가 있다면 다음과 같이 할 것이다.&lt;br /&gt;&lt;ol&gt;&lt;li&gt;맨 처음 A에 대해 getAB를 해서 B를 얻는다.&lt;/li&gt;&lt;li&gt;그 B에 대해 getBC를 해서 C를 얻는다.&lt;/li&gt;&lt;li&gt;그 C에 대해 setCD를 해서 D를 바꾼 C’을 얻는다.&lt;/li&gt;&lt;li&gt;2에서 쓴 B에 대해 setBC(C’)를 해서 다시 B’을 얻는다.&lt;/li&gt;&lt;li&gt;1에서 쓴 A에 대해 setAB(B’)을 해서 A’을 얻는다.&lt;/li&gt;&lt;/ol&gt;내포구조를 잘 따져보면 get -&amp;gt; get -&amp;gt; set -&amp;gt; set을 하면서 스택구조와 비슷하다. 이제 이를 어떻게 표현하고, 어떻게 조합할 것인가 하는 문제가 남는다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h3 id=&quot;갱신-콤비네이터-만들기&quot;&gt;갱신 콤비네이터 만들기&lt;/h3&gt;앞에서 이야기한 호출구조를 위한 콤비네이터의 기본이 되는 어떤 존재를 &lt;code&gt;GSPair&lt;/code&gt;(get/set pair)라고 이름붙이자. 일종의 유틸리티 클래스이므로 싱글턴 객체로 만들면 될 것이다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookChapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairChapterContent&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이를 바탕으로 조합해볼까? 해보니 별로 재미가 없다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changePara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookChapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairChapterContent&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookChapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;GSPair들을 조합하는 무언가가 필요하다. 개별 객체로 있어서는 어떻게 손 쓸 여지가 없으므로, 이를 트레이트나 클래스로 묶을 필요가 있을 것이다. 일단 클래스로 묶고, 공통 패턴을 빼내서 타입 파라미터화 하자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookChapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairChapterContent&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이제 뭔가 길이 보일것 같다. &lt;code&gt;compose&lt;/code&gt; 메서드를 &lt;code&gt;GSPair&lt;/code&gt;에 추가해주자. 주의할 것은 함수와 마찬가지로 &lt;code&gt;A compose B&lt;/code&gt; 하면 B를 먼저 하고 A를 그 다음에 한다는 것이다. 이는 수학적 함수의 합성 연산을 본딴 것이라 그렇다. 스칼라 관례를 따라, &lt;code&gt;compose&lt;/code&gt;를 반대로 적용해주는 &lt;code&gt;andThen&lt;/code&gt;도 정의해 주자.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; compose&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;WW&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;WW&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; W&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;WW&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        ww &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ww&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ww&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ww&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ww&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; andThen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;PP&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;PP&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; that compose &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookChapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairChapterContent&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPair&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookContent&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookChapter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; andThen &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairChapterContent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;compose&lt;/code&gt;를 생각해 보자. &lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;W=&amp;gt;P&lt;/code&gt;로 보내는 &lt;code&gt;GSPair[W,P] this&lt;/code&gt;와 &lt;code&gt;WW=&amp;gt;W&lt;/code&gt;로 보내는 &lt;code&gt;GSPair[WW,W] that&lt;/code&gt;를 조합한 &lt;code&gt;this compose that&lt;/code&gt;의 결과는 &lt;code&gt;GSPair[WW,P]&lt;/code&gt; 타입이어야 할 것이다.&lt;/li&gt;&lt;li&gt;타입을 생각해보면 조합한 결과의 &lt;code&gt;get&lt;/code&gt;이 뭐가 될지는 명확하다. &lt;code&gt;get&lt;/code&gt;의 타입은 &lt;code&gt;WW=&amp;gt;P&lt;/code&gt;여야 한다. 따라서 &lt;code&gt;WW=&amp;gt;W&lt;/code&gt;로 보내는 &lt;code&gt;get&lt;/code&gt;을 먼저 호출하고, 그 결과에 &lt;code&gt;W=&amp;gt;P&lt;/code&gt;로 보내는 &lt;code&gt;get&lt;/code&gt;을 호출한다. 그게 &lt;code&gt;ww =&amp;gt; this.get(that.get(ww))&lt;/code&gt;이 의미하는 것이다.&lt;/li&gt;&lt;li&gt;&lt;code&gt;GSPair[WW,P]&lt;/code&gt; 타입의 &lt;code&gt;set&lt;/code&gt;을 생각해 보자.  &lt;br /&gt;&lt;ul&gt;&lt;li&gt;WW에서 P부분만 바꿔치기 해야 한다. 즉, &lt;code&gt;set(원래WW값, 바꿀P값)&lt;/code&gt;을 하면, 원래WW값에서 W안의 P부분만 P값으로 바뀌어야 한다.&lt;/li&gt;&lt;li&gt;따라서 &lt;code&gt;that.set(원래WW값, 원래WW값에서W안의P부분만변경한값)&lt;/code&gt;을 호출해야 한다. &lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;원래WW값에서W안의P부분만변경한값&lt;/code&gt;을 보자. &lt;code&gt;원래WW값에서W&lt;/code&gt;는 &lt;code&gt;that.get(원래WW값)&lt;/code&gt;이다. 이 값에서 P만 변경하려면 &lt;code&gt;this.set&lt;/code&gt;을 사용한다. 결국 &lt;code&gt;원래WW값에서W안의P부분만변경한값&lt;/code&gt;은 &lt;code&gt;this.set(that.get(원래WW값), 바꿀 P값)&lt;/code&gt;이다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;이를 종합하면, &lt;code&gt;that.set(ww, this.set(that.get(ww), p))&lt;/code&gt;이다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;이를 사용하면 다음과 같이 비교적 간단하게 changePara 조합이 가능하다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changePara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;GSPairBookContent&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이게 뭐 하겠지만, 중요한 것은 이런 콤비네이터가 도구상자 안에 이미 들어가 있다면, 개별 GSPair를 묶어서 쉽게 무언가를 할 수 있다는 점에 있다. &lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;렌즈&quot;&gt;렌즈&lt;/h2&gt;&lt;code&gt;GSPair&lt;/code&gt;는 원래 &lt;code&gt;Lens&lt;/code&gt;라는 이름의 객체였다. Lens로 이름을 바꾸고 메서드를 두 가지 추가하자. 그리고, 이 클래스를 이미 여러분이 알고 있었다고 생각해 보자.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Lens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; A &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Function1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Immutable&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; apply&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; B   &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; updated&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; A &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;whole&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; part&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; mod&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; f&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; B &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; f&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; compose&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Lens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Lens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    c &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; b&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; b&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; andThen&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;that&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Lens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; that compose &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;updated&lt;/code&gt;는 그냥 &lt;code&gt;set&lt;/code&gt;을 호출해 주는 것이고, &lt;code&gt;mod&lt;/code&gt;는 &lt;code&gt;B&lt;/code&gt;타입의 값을 변환해주는 함수를 적용해 &lt;code&gt;set&lt;/code&gt;을 호출해 준다. 이 렌즈를 이미 알고 있었다면, 맨 앞의 문제를 본 순간 다음과 같은 코드가 자동으로 나올 수 있다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code class=&quot;language-scala&quot;&gt;&lt;span class=&quot;pln&quot;&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BookChapterLens&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Lens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chapter &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PairChapterLens&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Lens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chapter&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; w&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; content &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; p &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BookContentLens&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BookChapterLens&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; andThen &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PairChapterLens&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; changePara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BookContentLens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;newPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; mapPara&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; paraFun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Para&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BookContentLens&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; paraFun&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;한 가지 장점은 여러 깊이 처리를 기술하는 대신 한 단계 처리를 기술하고 이를 조합할 수 있다는 것이다. 또, 스칼라 2.11에서 시험 기능으로 현재 개발중인 매크로를 사용하거나, 리플렉션을 활용하면 자동으로 렌즈를 만들어내는 라이브러리도 구현 가능할 것이다. 그런 경우, 사용자가 직접 기술할 필요도 없기 때문에 코딩 편이성이 꽤 늘어날 것이다.&lt;br /&gt;&lt;a href=&quot;https://github.com/akisaarinen/rillit&quot;&gt;rillit&lt;/a&gt; 같은 경우 매크로를 사용해 렌즈를 만들어주는 &lt;code&gt;Lenser&lt;/code&gt;라는 기능을 제공한다. 관심있는 분은 한번 살펴보기 바란다.&lt;br /&gt;기타 렌즈에 대한 자료는 다음과 같다. 애석하게도 우리말/우리글 자료는 찾을 수가 없었다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://eed3si9n.com/learning-scalaz/Lens.html&quot;&gt;scalaz의 렌즈 페이지&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=efv0SQNde5Q&quot;&gt;렌즈소개 비디오&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1zW1Gm2M_x_cn9pGp6LQDwHDXQ4WSa4JTBQe1ADBtKjw/edit#slide=id.p&quot;&gt;스칼라데이즈 2013 렌즈소개 발표자료&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.cis.upenn.edu/~bcpierce/papers/newlenses-popl-slides.pdf&quot;&gt;렌즈에대한 POPL(ACM 프로그래밍 언어 학회) 슬라이드&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.cis.upenn.edu/~bcpierce/papers/lenses-etapsslides.pdf&quot;&gt;view-update문제에 대한 해결책으로 lens를 제시한 유펜 Benjamin C. Pierce 교수 발표자료&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://www.haskell.org/haskellwiki/Lens&quot;&gt;하스켈위키 렌즈 자료&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;틈날때마다 들여다보고 있는 중이라, 진도가 느리다. 하스켈 문서들은 다 좋은데 용어가 눈에 안들어와서 집중하기 힘들고..</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/3053209471838481651/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=3053209471838481651' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/3053209471838481651'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/3053209471838481651'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/lens.html' title='[스칼라] 복잡한 내포구조 깔끔하게 업데이트하기 - lens'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-7041893436525446621</id><published>2014-07-08T10:56:00.001+10:00</published><updated>2014-07-08T12:32:52.786+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="FRP"/><category scheme="http://www.blogger.com/atom/ns#" term="reactive"/><category scheme="http://www.blogger.com/atom/ns#" term="reactive programming"/><category scheme="http://www.blogger.com/atom/ns#" term="반응형"/><category scheme="http://www.blogger.com/atom/ns#" term="반응형 프로그래밍"/><title type='text'>[FRP] 함수형 반응형프로그래밍 - 개념 소개</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h1 id=&quot;frp-함수형-반응형프로그래밍-개념-소개&quot;&gt;[FRP] 함수형 반응형프로그래밍 - 개념 소개&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;역주: 이 글은 Conal Elliot가 스택오버플로에 함수적 리액티브 프로그래밍(RFP)에 대해 단 &lt;a href=&quot;http://stackoverflow.com/questions/1028250/what-is-functional-reactive-programming/1030631#1030631&quot;&gt;답변&lt;/a&gt;을 번역한 것입니다.&lt;/li&gt;&lt;/ul&gt;FRP 감을 잡으려면 1998 ICFP에서 발표했던 &lt;a href=&quot;http://conal.net/papers/icfp97/icfp97.pdf&quot;&gt;Fran 튜토리얼&lt;/a&gt;을 보라(사실은 이 글을 작성한 Conal이 바로 저 튜토리얼을 작성한 사람이다. 다른 한 사람은 Paul Hudak으로 이 사람도 FP계에서 유명한 아저씨이다). 논문을 보고 싶다면, Functional Reactive Animation(저 ICFP 98)부터 시작해서 &lt;a href=&quot;http://conal.net/&quot;&gt;내 홈페이지&lt;/a&gt;나 하스켈 위키의 &lt;a href=&quot;http://haskell.org/haskellwiki/FRP&quot;&gt;FRP 링크&lt;/a&gt;에 있는 것을 찾아보면 될것이다.&lt;br /&gt;개인적으로, FRP의 의미가 무엇인지 생각하는 것을 좋아한다. 구현하는 것보다 더 말이다. 따라서 FRP를 구현/표현 측면(그래프, 노드, 에지(edge), 이벤트 발생, 실행 등)에서 설명하지는 않겠다. 여러 구현 스타일이 있을 수 있고, 어떤 구현도 FRP가 무엇인지 이야기해 주지 않는다.&lt;br /&gt;나는 FRP가 “’시간에 따라 변하는’ 값을 표현하는 데이터타입’에 대한 것이라는 견해에 동조한다. 전통적인 명령형 프로그래밍은 이런 동적인 값을 간접적으로, 상태와 값의 변화를 통해 표현해왔다. 값의 완전한 이력(과거, 현재, 미래)에는 1급 계층(1st class) 표현이 없다. 더 나아가, 개별적으로 변한 값을 (간접적으로) 포획할 수만 있다. 왜냐하면 명령형 패러타임은 시간에 대해 이산적(temporally discrete)이기 때문이다. 반면, FRP는 이런 값의 변화를 직접 잡아내고 연속적으로 변하는 값을 잡아내는 데도 어려움이 없다(역주: 뭔 소리인지..).&lt;br /&gt;FRP는 명령형 동시성을 괴롭히는 이론적, 실용적 까치집(rat’s nest)으로 인한 방해를 받지 않고도 동시적일 수 있다는 점에서도 비범하다(역주: 어렵다..). 의미상(semantically), FRP의 동시성은 미세한 조정이 가능하고, 명료하면서 연속적이다. (난 의미에 대해 이야기하지 구현에 대해 이야기하고 있는게 아니다. 구현은 동시성이나 병렬성을 포함하지 않을 수도 있다.) 의미적 명료성은 추론(reasoning)에 있어 매우 중요하다. 엄격한 추론이건, 느슨한 추론이건 말이다. 동시성이 명령형 프로그래밍에는 엄청난 복잡성을 추가하지만(이는 비결정성이 서로 끼어들기 때문이다), FRP에서는 그런 노력을 들일 필요가 없다. 그렇다면, FRP는 무엇일까? 독자 여러분이 직접 만들었을 수도 있다. 이런 아이디어를 생각해 보자.&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;동적/변화하는 값(즉, “시간에 따른” 값)이 그 자체로 1급 계층 값이다. 이들을 정의하고 조합할 수 있으며, 함수에 넘기거나 함수에서 반환할 수 있다. 나는 이런 동작을 “행동(behavior)”이라 부른다.&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;행동은 여러 기본 요소(primitive)를 가지고 만들어진다. 그런 요소에는 상수(정적) 행동과 시간(시계와 같은)이 있고, 이에 대한 순차 조합이나 병렬 조합이 있다. n개의 행동을 정적인 값에 대한 n-항(n-ary) 함수로 조합하는 것은, 시간에 따라 “점별로(point-wise)” 연속적으로 조합하는 것이다.&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;이산적인 현상을 다루기 위해서는 다른 유형(무리)의 “이벤트(event)”가 있다. 이는 모든 발생(occurence)에 대한 스트림(무한 또는 유한)을 가진다. 각 발생은 시간과 값으로 이루어진다.&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;모든 행동과 이벤트를 구축할 수 있는 조합 언어를 만들기 위해서는, 많인 예를 다뤄봐야 한다. 각 요소를 더 일반적이거나 더 간단한 요소로 계속 분해해 보라.&lt;/b&gt;&lt;/li&gt;&lt;li&gt;이제 이런 조합을 기초로 전체 모델을 생각해 볼 때, 표기의미론(denotational semantics, 언어를 구성하는 각 요소를 상태 천이 함수로 정의하고, 이런 천이함수의 범함수(functional, 함수에 대한 함수)를 정의해서, 프로그램의 의미를 그 범함수의 최소부동점(minimal fixed point)으로 정의하는 접근 방법)을 사용하면 RFP란 다음과 같은 의미일 뿐이다.&lt;/li&gt;&lt;ul&gt;&lt;li&gt;(a) 각 타입은 그에 대한 단순하고 정확한 수학적인 “의미”가 있다.&lt;/li&gt;&lt;li&gt;(b) 각 구성요소나 연산자는 각각을 구성하는 요소에 대한 함수로 의미를 단순하고 정확하게 정할 수 있다.&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;이 과정을 구현상 고려 사항과 절대 혼용해서는 안된다. 방금 한 설명이 뭔 소리인지 모르겠다면, (a) &lt;a href=&quot;http://conal.net/papers/type-class-morphisms&quot;&gt;타입 클래스 사상(type class morphism)에 대한 표기적 설계(denotational design)&lt;/a&gt;, (b) &lt;a href=&quot;http://conal.net/papers/push-pull-frp&quot;&gt;푸시-풀(push-pull) FRP(구현부분은 무시하라)&lt;/a&gt;, (c) &lt;a href=&quot;http://en.wikibooks.org/wiki/Haskell/Denotational_semantics&quot;&gt;하스켈 위키북 페이지에 있는 표기의미론 페이지&lt;/a&gt;을 살펴보라(역주: 점입가경). 표기의미론에는 그 창시자인 크리스토퍼 스트라키(Christopher Strachey)와 다나 스코트(Dana Scott)에서 유래한 두 가지 부분이 있다는 것을 알아두라. 스트라키쪽이 더 쉽고 유용하며, 스코트쪽은 더 어렵고 (소프트웨어 설계시) 덜 유용하다.&lt;/li&gt;&lt;/ul&gt;이런 기본을 지킨다면, 어느정도 FRP의 핵심을 알 수 있으리라 본다.&lt;br /&gt;나는 어디서 이런 원칙을 배울 수 있었을까? 소프트웨어 설계시 나는 항상 같은 질문을 던진다. “대체 무슨 뜻이지?” 표기의미론은 이런 질문에 대해 정확한 프레임워크를 제공한다. 그리고 내 감각에도 잘 맞는다(동작의미론(operational semantics)이나 공리의미론(axiomatic semantics)도 봤지만 만족할 수 없었다). 그래서 난 스스로에게 물어봤다. “행동이란 무엇일까?” 그리고 난 곧 깨달았다. 명령형 계산에서 시간상 이산적인 특성은 실제로는 특정 유형의 기계에 맞춘 조정에 불과하다는 것을 말이다. 그런 개념은 실제 행동 자체를 자연적으로 설명하는 것과는 거리가 있다. 내가 생각해 낼 수 있는 행동에 대한 가장 단순하면서도 정확한 설명은 단지 “(연속적인) 시간에 대한 함수”이며, 그래서 난 그걸 내 모델로 택했다. 기쁘게도, 그렇게 정의한 모델을 사용하면 연속적이고 결정적인 동시성을 쉽고 우아하게 처리할 수 있다.&lt;br /&gt;물론 이 모델을 정확하고 효율적으로 구현하는 것은 아주 도전적인 일이다. 하지만 그건 완전히 다른 이야기이다.</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/7041893436525446621/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=7041893436525446621' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/7041893436525446621'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/7041893436525446621'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/frp.html' title='[FRP] 함수형 반응형프로그래밍 - 개념 소개'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-5669213108757935642</id><published>2014-07-07T14:04:00.001+10:00</published><updated>2014-07-07T14:11:18.968+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="actor"/><category scheme="http://www.blogger.com/atom/ns#" term="akka"/><category scheme="http://www.blogger.com/atom/ns#" term="akka routing"/><category scheme="http://www.blogger.com/atom/ns#" term="akka 라우팅"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="액터"/><category scheme="http://www.blogger.com/atom/ns#" term="철학자의 만찬"/><title type='text'>[스칼라] akka 버전 철학자의 만찬(Dining Philosopher) - 2</title><content type='html'>&lt;h1 id=&quot;스칼라-akka-버전-철학자의-만찬dining-philosopher-2&quot;&gt;[스칼라] akka 버전 철학자의 만찬(Dining Philosopher) - 2&lt;/h1&gt;&lt;a href=&quot;http://www.enshahar.me/2014/07/akka-dining-philosopher-1.html&quot;&gt;앞의글&lt;/a&gt;에서 만들었던 프로그램에서 두가지를 수정해 보자.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;상태를 변수에 넣어서 관리하던 것 - 상태를 변수에 넣고, 처리 로직은 case나 if문에 남아있으면 상태 전이시 상태 처리와 변수 값 업데이트등이 서로 달라질 수도 있고, 일목요연하게 상태별 동작을 이해하기 어려울 수 있다. 또한, 어떤 상태에서 처리해야 할 일을 추가하고 싶을 때도 어디 넣어야 할지 이해하기 어려울 수도 있다. GoF의 디자인 패턴 책에서는 이런 경우 사용할 &lt;a href=&quot;http://en.wikipedia.org/wiki/State_pattern&quot;&gt;상태 패턴&lt;/a&gt;이 있다. akka에서는 이런 경우를 대비해 &lt;code&gt;become&lt;/code&gt;/&lt;code&gt;unbecome&lt;/code&gt;이 있다.  &lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;become&lt;/code&gt;: &lt;code&gt;Actor.Receive&lt;/code&gt;타입의 함수값(function value)를 인자로 받으며, 이 함수를 호출하고 나면 그 이후로 도착하는 메시지는 모두 &lt;code&gt;become&lt;/code&gt;에 제공한 함수값에서 처리한다. &lt;code&gt;Actor.Receive&lt;/code&gt; 타입은 실제로는 &lt;code&gt;PartialFunction[Any, Unit]&lt;/code&gt;이며, 스칼라에서는 패턴 매칭이 이런 타입을 만들어낼 수 있다.&lt;/li&gt;&lt;li&gt;&lt;code&gt;unbecome&lt;/code&gt;: 액터 내부에 &lt;code&gt;become&lt;/code&gt;한 상태를 스택으로 유지한다. 따라서 직전 상태로 돌아가는게 목적이라면 &lt;code&gt;unbecome&lt;/code&gt;만으로 쉽게 이전 상태(이전 메시지 핸들러)로 돌아갈 수 있다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;코디네이터(&lt;code&gt;DiningRoom&lt;/code&gt;)가 라우팅을 직접 하던 부분: akka는 여러 라우팅 전략을 제공하며, 그 중에 브로드캐스팅 전략도 있다. 이를 활용해 보자.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;젓가락을-become-을-사용하도록-변경하기&quot;&gt;젓가락을 become() 을 사용하도록 변경하기&lt;/h2&gt;&lt;code&gt;become&lt;/code&gt;을 사용하기로 하면, 더이상 상태 변수가 필요 없다. 케이스문을 복사해서 두가지로 나누자. 하나는 미사용상태인 젓가락의 메시지 처리 함수이고 다른 하나는 사용상태인 젓가락의 메시지 처리 함수로 나눈다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;val index&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Chopstick ${index} on the table&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 기본 receive(미사용 상태)  &lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;occupiedReceive&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;occupiedReceive&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 사용중인 경우 receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; occupiedReceive&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unbecome&lt;br /&gt;      sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;unbecome&lt;br /&gt;      sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;occupiedReceive&lt;/code&gt;에 붙은 &lt;code&gt;Receive&lt;/code&gt; 타입은 액터에 있는 타입별명(alias)으로, 실제로는 &lt;code&gt;PartialFunction[Any, Unit]&lt;/code&gt;이다. &lt;br /&gt;&lt;code&gt;context.become(occupiedReceive, false)&lt;/code&gt;에서 두번째 인자 &lt;code&gt;false&lt;/code&gt;는 현재 메시지 핸들러를 스택에 남겨두라는 의미이다. &lt;code&gt;false&lt;/code&gt;를 지정하지 않으면 스택의 맨 위의 핸들러를 바꿔치기 해 버리기 때문에, unbecome하면 문제가 생긴다(잘 돌지만 메시지를 그냥 모두 무시하기 때문에 우리가 의도한 대로 동작하지 않는다).&lt;br /&gt;바꾸고 돌려보면 잘 돈다. 이제 철학자 클래스를 살펴볼 차례이다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;철학자-클래스-receive사용하게-바꾸기&quot;&gt;철학자 클래스 receive사용하게 바꾸기&lt;/h2&gt;상태 변수 status를 없애고 차근차근 become을 사용해 변경하면 클래스를 다음과 같이 정리할 수 있다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index}[${self.path}] entered. Given left(${leftChopStick}) and right(${rightChopStick}).&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  val STARVING_THRES &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val EATING_THRES &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val THINKING_THRES &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; STARVING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting for ${waitingTime} second. Starving!!!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting for ${waitingTime} second&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enterLeftWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;waitingLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting left chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enterThinkingOrGetLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; util&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;THINKING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      enterLeftWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enterThinkingOrGetLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        enterLeftWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waitingLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} got left chopstick.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;waitingRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking. (wait left chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waitingRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} got all chopsticks. start eating&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking. (wait right chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} eating. For ${eatingTime} seconds.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; EATING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;releasingRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} releasing right chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasingRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;become&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;releasingLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} releasing left chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasingLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Receive&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enterThinkingOrGetLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;변경 자체는 평이하다. 변경하고 난 코드가 더 깔끔한지는 잘 모르겠다. T.T 실행 결과는 따로 표시하지는 않겠다.&lt;br /&gt;문득 드는 의문은 다음과 같다.&lt;br /&gt;&lt;blockquote&gt;“tick” 메시지가 “tick”을 처리하지 않는 상태(releasingRight, releasingLeft 등)에 들어오면 어떻게 될까? 메시지를 잃어버리나, 아니면 그 다음 “tick”을 처리하는 메시지 핸들러가 해당 “tick”메시지를 처리하나?&lt;/blockquote&gt;또한, 출력에서 한가지 아쉬운점은 순서가 뒤죽박죽이라서 상황을 파악하기 힘들다는 것이다. 또한, 출력 부분과 로직부분이 섞여 있어서 이래저래 곤란하다. 이를 개선할 방법도 다음에 찾아보겠다. &lt;br /&gt;우선은 코디 액터(DinningRoom)를 akka 라우팅을 사용하게 바꾸자. &lt;br /&gt;&lt;h2 id=&quot;akka-라우팅-사용하기&quot;&gt;akka 라우팅 사용하기&lt;/h2&gt;라우팅을 위해서는 라우터(Router)를 만들어야 한다. 라우터 생성자 중 쓸만한 것이 뭐가 있을까 보면, &lt;code&gt;new &lt;br /&gt;Router(logic: RoutingLogic, routees: IndexedSeq[Routee] = ...)&lt;/code&gt;가 있다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;RoutingLogic&lt;/code&gt;은 메시지를 라우터가 받아서 어떤 routee에 전달할지 결정하는 로직이다. akka가 기본제공하는 로직으로는 다음과 같은 것이 있다. 이름이 대충 무슨 로직인지 설명해주므로 자세히는 안 쓸 것이다. &lt;br /&gt;&lt;ul&gt;&lt;li&gt;akka.routing.RoundRobinRoutingLogic&lt;/li&gt;&lt;li&gt;akka.routing.RandomRoutingLogic&lt;/li&gt;&lt;li&gt;akka.routing.SmallestMailboxRoutingLogic&lt;/li&gt;&lt;li&gt;akka.routing.BroadcastRoutingLogic&lt;/li&gt;&lt;li&gt;akka.routing.ScatterGatherFirstCompletedRoutingLogic&lt;/li&gt;&lt;li&gt;akka.routing.ConsistentHashingRoutingLogic&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;이 생성자의 두번째 인자는 &lt;code&gt;IndexedSeq[Routee]&lt;/code&gt;이다. &lt;code&gt;Routee&lt;/code&gt; 문서에서 서브클래스를 찾아보면 &lt;code&gt;ActorRefRoutee&lt;/code&gt;이 있다. 액터를 넣어야 하니까 이거면 될것 같다. &lt;code&gt;IndexedSeq&lt;/code&gt;는 벡터나 배열이면 된다. &lt;/li&gt;&lt;/ul&gt;일단 라우터를 만드는 부분을 빼서 살펴보면 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;  val router &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;routing&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;routing&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BroadcastRoutingLogic&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;br /&gt;                                  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;routing&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorRefRoutee&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이렇게 하면 모든 젓가락과 철학자를 포함하는 라우터를 만들 수 있다.&lt;br /&gt;이제 이를 사용해 메시지를 보내는 부분은 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sender&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;route&lt;/code&gt; 메서드는 첫번째 인자로 메시지, 두번째 인자로 송신객체를 받는다. 여기서는 코디가 받은 메시지를 송신했던 객체를 다시 송신객체로 보낸다. &lt;br /&gt;이를 반영한 &lt;code&gt;DiningRoom&lt;/code&gt; 전체 코드는 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;DinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;val noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;noOfMember &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  val chopSticks &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  val members &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;path &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;path&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  val router &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;routing&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Router&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;routing&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;BroadcastRoutingLogic&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;br /&gt;                                  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;routing&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorRefRoutee&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Room ${self.path} created&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;START!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      router&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sender&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; router&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sender&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;end&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;FINISH!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;전체-소스&quot;&gt;전체 소스&lt;/h2&gt;여기까지 모두 적용한 소스는 &lt;a href=&quot;https://github.com/enshahar/PISActors&quot;&gt;PISActors리포&lt;/a&gt;에 소스가 있다. 파일 이름은 DiningRandomWithBecomeAndBroadcast.scala이다.&lt;br /&gt;&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;&lt;code&gt;become&lt;/code&gt;를 사용해 상태 변경을 좀더 집중적으로 관리할 수 있다. 라우터(Router)를 사용하면 메시지 송신시 다양한 전략을 선택할 수 있다. 기회가 닿으면 한번 좀 더 복잡한 예제로 라우팅이 필요한 경우를 만들어 볼 것이다.&lt;br /&gt;다음에는 다음 문제를 한번 테스트해 보자. 구글링등을 통해 해답을 찾아보고 간단하게 학습용 클래스를 만들어서 시험해 볼 것이다. &lt;br /&gt;&lt;blockquote&gt;“tick” 메시지가 “tick”을 처리하지 않는 상태(releasingRight, releasingLeft 등)에 들어오면 어떻게 될까? 메시지를 잃어버리나, 아니면 그 다음 “tick”을 처리하는 메시지 핸들러가 해당 “tick”메시지를 처리하나?&lt;/blockquote&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/5669213108757935642/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=5669213108757935642' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/5669213108757935642'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/5669213108757935642'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/akka-dining-philosopher-2.html' title='[스칼라] akka 버전 철학자의 만찬(Dining Philosopher) - 2'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-772686209034246254</id><published>2014-07-06T23:56:00.001+10:00</published><updated>2014-07-07T11:34:26.033+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="actor"/><category scheme="http://www.blogger.com/atom/ns#" term="akka"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="액터"/><category scheme="http://www.blogger.com/atom/ns#" term="철학자의 만찬"/><title type='text'>[스칼라] akka 버전 철학자의 만찬(Dining Philosopher) - 1</title><content type='html'>&lt;h2&gt;[스칼라] akka 버전 철학자의 만찬(Dining Philosopher) - 1 마구마구 만들기&lt;/h2&gt;뭐니뭐니해도 가장 유명한 동시성 문제는 역시 철학자의 만찬일 것이다.&lt;br /&gt;이 문제는 다음과 같이 정의할 수 있다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;n명의 철학자가 있다.&lt;/li&gt;&lt;li&gt;n개의 젓가락(한쌍이 아니라 한짝)이 각 철학자 사이에 있다. 원래는 포크지만..&lt;/li&gt;&lt;li&gt;n개의 라멘(내가 라멘 팬이라서)그릇이 철학자 앞에 놓여있다. 원래는 스파게티이다.&lt;/li&gt;&lt;li&gt;각 철학자 사이에는 의사소통이 불가능하다.&lt;/li&gt;&lt;li&gt;각 철학자는 다음과 같은 순서로 라면을 먹는다. &lt;br /&gt;&lt;ol&gt;&lt;li&gt;왼쪽 젓가락을 집어든다. 왼쪽 젓가락을 누군가 사용중이라면, 그 젓가락이 사용가능해 질 때 까지 계속 생각한다(철학자니까!).&lt;/li&gt;&lt;li&gt;왼쪽 젓가락을 가졌다면, 오른쪽 젓가락을 집어든다. 오른쪽 젓가락을 누가 사용중이라면, 그 젓가락이 사용 가능해질 때까지 계속 생각한다.&lt;/li&gt;&lt;li&gt;왼쪽과 오른쪽 젓가락을 모두 가졌다면 정해진 시간동안 라멘을 먹는다.&lt;/li&gt;&lt;li&gt;라멘을 다 먹었으면 오른쪽 젓가락을 내려놓는다.&lt;/li&gt;&lt;li&gt;오른쪽 젓가락을 내려놓았으면, 왼쪽 젓가락도 내려놓는다.&lt;/li&gt;&lt;li&gt;다시 1부터 반복한다.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ul&gt;이 문제가 유명해진 이유는 다음과 같이 동시성 프로그래밍에서 발생할 수 있는  여러가지 문제를 잘 보여주는 쉬운 예제이기 때문이다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;젓가락은 공유자원이다. 이 문제는 공유자원에 대한 경합(contention)을 보여주는 좋은 예이다.&lt;/li&gt;&lt;li&gt;잘 생각해 보면 모든 철학자들이 젓가락을 기다리느라 아무도 라멘을 못 먹는 사태가 발생한다(모든 철학자가 우연히 왼쪽 젓가락을 집어들면 모두 다 누군가 젓가락을 내려놓기를 기다려야 한다. 그런데, 모두다 대기상태이기 때문에 결코 젓가락을 내려놓을 수가 없다). 이를 교착상태(deadlock)이라 한다.&lt;/li&gt;&lt;li&gt;운이 없는 철학자라면 계속해서 라멘을 못 먹는 사태가 발생할 수 있다. 이런 경우를 아사(starvation)이라 한다.&lt;/li&gt;&lt;/ul&gt;이 문제를 akka로 구현해 보자. 일단 오늘은 그냥 말 그대로 구현에만 중점을 둘 것이다. 최적화하거나 이런저런 akka 기능을 활용하는 것은 다음 단계에서 진행할 것이다.&lt;br /&gt;&lt;h2 id=&quot;젓가락-액터&quot;&gt;젓가락 액터&lt;/h2&gt;먼저 젓가락을 구현해보자. 여러가지 방법이 있겠지만, 젓가락 자신이 어느 철학자에게 속했는지를 표시하는 변수 하나를 사용하고, 메시지로는 젓가락 요청과 젓가락 내려놓기 메시지를 만든다. 다음 소스코드를 보라.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;val index&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Chopstick ${index} on the table&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; occupied &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 젓가락을 누군가 사용중인지 나타냄&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 철학자가 왼쪽에 있는 젓가락을 요청&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;occupied&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;            sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;            occupied &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 철학자가 오른쪽에 있는 젓가락을 요청&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;occupied&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;            sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;            occupied &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 철학자가 왼쪽 젓가락을 내려놓음&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;occupied&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        occupied &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 철학자가 오른쪽 젓가락을 내려놓음&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;occupied&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        sender &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        occupied &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;메시지가 중복이 있어 보이고, copy&amp;amp;paste한 코드라서 맘에 걸리긴 하지만 일단 넘어가자. 다음은 철학자를 만들어야 한다.&lt;br /&gt;&lt;h2 id=&quot;철학자-액터&quot;&gt;철학자 액터&lt;/h2&gt;철학자는 젓가락을 두개 받아야 한다. 젓가락을 두개 받으려면 여러가지 방법이 있겠지만, 생성자 인자로 만들었다. 이때 &lt;code&gt;ActorRef&lt;/code&gt;를 사용하는 것이 정석(?)이겠지만, 그냥 &lt;code&gt;ActorPath&lt;/code&gt;를 받게 만들어 보았다. 이렇게 만든 철학자 액터 시작부분은 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index}[${self.path}] entered. Given left(${leftChopStick}) and right(${rightChopStick}).&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;철학자는 앞에서 이야기한 각 단계를 거쳐야 한다. 각 단계를 상태로 만들기 위해 변수를 추가하고, 상태를 표시하기 위해 열거형(enumeration)을 하나 만든다. 처음 시작 상태는 왼쪽 젓가락을 기다리는 상태이다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Enumeration&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    type &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseLeft&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;원래는 별도 쓰레드에서 각 액터가 따로 움직여야 하지만, 여기서는 중앙에 클럭을 두고, 그 클럭이 보내는 틱에 따라 움직이게 했다. 다만, 젓가락을 집어들거나 내려 놓기 위한 요청을 젓가락에 보낸 다음, 젓가락에서 응답을 받는 것은 클럭과 관계 없이 수행한다. 그래서, 중앙 클럭에서 시작 메시지(“start”)와 틱 메시지(“tick”)를 받는 것으로 구현했다.&lt;br /&gt;먼저 시작 메시지를 받으면, 젓가락을 집어들기 위해 왼쪽 젓가락에 요청을 보낸다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 시작 메시지. 중앙 클럭(또는 코디)에게서 받음&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting left chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;틱을 받으면 현재 상태에 따라 적절히 다음 상태로 진행한다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 틱 메시지. 코디에게서 받음&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 왼쪽 대기상태에 시간만 속절없이...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking. (wait left chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 초 증가. 아사여부 체크&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 왼쯕을 집어들고, 오른쪽 젓가락을 기다리는 중&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking. (wait right chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 라멘먹기&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} eating. For ${eatingTime} seconds.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// EATING_THRES초 동안 먹고나면 젓가락을 내려놓는다.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; EATING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseRight&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} releasing right chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;                context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;   &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// do nothing while releasing chopsticks&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;       &lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;incWaiting()&lt;/code&gt;은 대기상태로 1초가 지날 때마다 카운터를 증가해 가면서 아사 여부를 판정하는 것이다. 아사판정 기준은 &lt;code&gt;STARVING_THRES&lt;/code&gt;라는 변수에 넣어둔다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; STARVING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting for ${waitingTime} second. Starving!!!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting for ${waitingTime} second&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;젓가락을 집어드는데 성공하는 경우나 내려놓는데 성공(내려놓는데 실패해서는 안되겠지만)에는 그에 따라 다음 상태로 이동한다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitRight&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} got left chopstick.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Eating&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} got all chopsticks. start eating&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseLeft&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} releasing left chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} released all chopsticks&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// receive의 끝&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 철학자 액터의 끝&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이제, 철학자나 젓가락은 다 만들었다. 이제 클럭(또는 코디네이터) 액터를 만들어야 한다. 이 액터가 할 일은 다음과 같다.&lt;br /&gt;&lt;ol&gt;&lt;li&gt;젓가락 액터들을 만든다&lt;/li&gt;&lt;li&gt;철학자 액터들을 만들면서 젓가락의 경로를 철학자의 생성자에 인자로 넘긴다&lt;/li&gt;&lt;li&gt;시간이 바뀌면 tick을 철학자들에게 브로드캐스팅한다.&lt;/li&gt;&lt;li&gt;시작시 start메시지를 철학자들에게 브로드캐스팅한다.&lt;/li&gt;&lt;/ol&gt;위 1,2는 꼭 코디에서 할 필요가 없기는 하지만, 코디가 브로드캐스팅하려면 어차피 모든 액터에 대한 참조를 보관해야 하므로, 코디에서 만드는 편이 좋다. 코디 액터의 이름은 DinningRoom이라고 붙였다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;DiningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;val noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;noOfMember &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  val chopSticks &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  val members &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;yield&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;noOfMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;path &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; chopSticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;path&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;))))&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Room ${self.path} created&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;START!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; x &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;end&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;FINISH!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;code&gt;chopSticks&lt;/code&gt;는 젓가락의 리스트이고, &lt;code&gt;members&lt;/code&gt;는 철학자의 리스트이다. 철학자의 리스트를 만들 때, &lt;code&gt;new Philosopher(i,&lt;/code&gt; 다음에 오는 if문은 오른쪽과 왼쪽 젓가락의 인덱스를 제대로 계산하기 위한 것이다. 4개의 젓가락과 4명의 철학자가 있다면 인덱스는 다음과 같이 만들어야 하기 때문이다.(맨 뒤의 C1은 맨 앞의 C1과 같다. []안은 chopSticks와 members에서의 인덱스이다)&lt;br /&gt;&lt;ul&gt;&lt;li&gt;P1 : 왼쪽 [0], 오른쪽 [1]&lt;/li&gt;&lt;li&gt;P2 : 왼쪽 [1], 오른쪽 [2]&lt;/li&gt;&lt;li&gt;P3 : 왼쪽 [2], 오른쪽 [3]&lt;/li&gt;&lt;li&gt;P4 : 왼쪽 [3], 오른쪽 [0]&lt;/li&gt;&lt;/ul&gt;&lt;code&gt;Random.shuffle(members)&lt;/code&gt;는 호출 순서를 뒤섞기 위한 것이다. 실험해본 결과로는 뒤섞지 않고 그냥 &lt;code&gt;members.foreach&lt;/code&gt;로 일정한 순서로 메시지를 보내면 결과가 고정적인 것 같아 보인다.&lt;br /&gt;이제 세 클래스를 다 만들었다. 전체를 연결해 akka 시스템을 만들고 실행할 애플리케이션이 필요하다.&lt;br /&gt;&lt;h2 id=&quot;애플리케이션&quot;&gt;애플리케이션&lt;/h2&gt;인자를 두개 받게 만들었다. 첫번째는 전체 철학자 인원수이고(3이상), 두번째 인자는 몇초동안 실행할 것인가(반복회수, 5이상)이다. 오류체크는 그냥 assert로 했고, 문자열 정수 변환시 발생하는 오류도 특별히 잡지 않았다. 더 친절하게 해 줄 수도 있지만 그게 목적이 아니니까.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;length &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val nMember &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; args&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;toInt&lt;br /&gt;  val nSecond &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; args&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;toInt&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nMember&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nSecond&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val system &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;system&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val room &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;DinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)),&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;dinningRoom&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  room &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;##### ${i} #####&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    room &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  room &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;end&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;기대에 차서 실행해 보면…&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; run &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Multiple&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; main classes detected&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; one to run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillySerious&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dinning&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Enter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; number&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Running&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dinning&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Room&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom created&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;START&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$f] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$b).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$g] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$c).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$i] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$d&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$e).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$h] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$d).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$j] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$a).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 1 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 2 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 3 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 4 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 5 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 6 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 7 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 8 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 9 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 10 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;FINISH&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; time&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; completed &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; PM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;좋지 않다. 모두 다 아사상태이다. 살펴보니 모두 다 왼쪽 젓가락을 부여잡고 굶어죽어 버렸다. 젓가락을 요청하는 시간을 약간씩 차이를 둬야 할 것 같다. 철학자 클래스를 좀 바꿔서 생각만 하는 시간을 좀 넣자. 즉, 초기상태를 생각상태로 두고 임의의 시간이 흐르고 나면 왼쪽 젓가락을 요청하게 하는 것이다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;임의-시간동안-생각하다-라멘을-먹는-철학자&quot;&gt;임의 시간동안 생각하다 라멘을 먹는 철학자&lt;/h2&gt;초기상태를 생각하는 상태로 만들기 위해 &lt;code&gt;Status&lt;/code&gt; 열거형에 &lt;code&gt;Thinking&lt;/code&gt;을 추가한다. 그리고, 그 상태에 진입할 때 최대 5초까지 생각하도록 난수를 넣었다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorPath&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index}[${self.path}] entered. Given left(${leftChopStick}) and right(${rightChopStick}).&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Enumeration&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    type &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    val &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseLeft&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;br /&gt;  val STARVING_THRES &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val EATING_THRES &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val THINKING_THRES &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thinking&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; STARVING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting for ${waitingTime} second. Starving!!!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting for ${waitingTime} second&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enterLeftWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} waiting left chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; enterThinkingOrGetLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; util&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;THINKING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      enterLeftWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thinking&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      enterThinkingOrGetLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;tick&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;thinkingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          enterLeftWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking. (wait left chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitRight&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} thinking. (wait right chopstick)&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        incWaiting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRequest&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} eating. For ${eatingTime} seconds.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; EATING_THRES&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          eatingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseRight&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} releasing right chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;          context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;rightChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;        &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// do nothing while releasing chopsticks&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;    &lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;WaitRight&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} got left chopstick.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightGot&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Eating&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      waitingTime &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} got all chopsticks. start eating&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;rightReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      status &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ReleaseLeft&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Philosopher ${index} releasing left chopstick&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      context&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorSelection&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;leftChopStick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftRelease&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;leftReleased&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      enterThinkingOrGetLeft&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이름이 겹치는걸 막기 위해 패키지 이름을 바꾸고 이제 실행해 보면…&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; run &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Multiple&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; main classes detected&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; one to run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillySerious&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dinning2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dinning&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Enter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; number&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Running&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dinning2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Chopstick&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; on the table&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Room&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom created&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;START&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$j] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$a).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$f] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$b).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$g] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$c).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$h] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$d).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$i] entered. Given left(akka://syst&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;em&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;dinningRoom&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$d&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; right&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//system/user/dinningRoom/$e).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 1 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got all chopsticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; start eating&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got all chopsticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; start eating&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 2 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 3 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 4 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing right chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing right chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing left chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing left chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 5 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got all chopsticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; start eating&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got all chopsticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; start eating&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 6 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 7 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 8 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing right chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing right chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing left chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; releasing left chopstick&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 9 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got all chopsticks&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; start eating&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; got left chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;##### 10 #####&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; eating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;For&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; seconds&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Starving&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!!!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;FINISH&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; thinking&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;wait right chopstick&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Philosopher&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; waiting &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; second&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; time&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; completed &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; PM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;대충 1차로는 완성했다. 스멜스멜 나쁜 코드 냄새가 너무 많이 나긴 하지만… 가장 핵심적인 냄새를 말하자면 다음과 같다.&lt;br /&gt;&lt;blockquote&gt;&lt;em&gt;상태의 변화를 체크하는 것과 상태를 바꾸는 것이 if/case문 안에 있어서 일목요연하게 상태와 상태가 변하는 조건, 상태 변경시 일어나야 하는 액션을 알기가 어렵다.&lt;/em&gt;&lt;/blockquote&gt;다음엔 akka에서 액터의 상태를 바꿀 때 사용할 수 있는 방법을 생각해 보고, 코디네이터 액터에서 메시지를 보내는 전략을 직접 구현(Random.shuffle사용)했던 것을 akka가 제공하는 메시지 라우팅 기능을 활용하도록 변경할 것이다.&lt;br /&gt;akka 액터관련 소스코드는 &lt;a href=&quot;https://github.com/enshahar/PISActors&quot;&gt;PISActors리포&lt;/a&gt;에 있다.</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/772686209034246254/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=772686209034246254' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/772686209034246254'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/772686209034246254'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/akka-dining-philosopher-1.html' title='[스칼라] akka 버전 철학자의 만찬(Dining Philosopher) - 1'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-1934505372285757918</id><published>2014-07-03T14:42:00.001+10:00</published><updated>2014-07-03T15:24:27.818+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="actor"/><category scheme="http://www.blogger.com/atom/ns#" term="akka"/><category scheme="http://www.blogger.com/atom/ns#" term="PIS"/><category scheme="http://www.blogger.com/atom/ns#" term="sbt"/><category scheme="http://www.blogger.com/atom/ns#" term="scala"/><category scheme="http://www.blogger.com/atom/ns#" term="스칼라"/><category scheme="http://www.blogger.com/atom/ns#" term="아카"/><category scheme="http://www.blogger.com/atom/ns#" term="액터"/><title type='text'>[스칼라] 프로그래밍 인 스칼라 액터 예제 - akka 버전(1)</title><content type='html'>&lt;h1 id=&quot;프로그래밍-인-스칼라-액터-예제-akka로-변환하기1-간단한-액터&quot;&gt;프로그래밍 인 스칼라 액터 예제 akka로 변환하기(1) - 간단한 액터&lt;/h1&gt;Programming in Scala(이하 PIS.. 이름 하고는…)에 나온 액터 예제는 2.10이전의 기존 액터 구현을 바탕으로 하기 때문에, 2.11이후 사용하는 akka 액터와 다르다. 책에 넣지는 못했지만, 한번 블로그에라도 정리해 보려 한다.&lt;br /&gt;&lt;h2 id=&quot;준비작업&quot;&gt;준비작업&lt;/h2&gt;일단 책에서 다뤘던 간단한 예제들부터 살펴보면서 akka로 어떻게 바꿀 수 있나 보자.&lt;br /&gt;&lt;h3 id=&quot;sbt-프로젝트-만들기&quot;&gt;sbt 프로젝트 만들기&lt;/h3&gt;일단 SBT로 프로젝트를 만들자. 꼭 만들 필요가 없겠지만, 그냥 공부삼아.. 그리고 의존성 관리등에서도 편할 것이다.&lt;br /&gt;아무 디렉터리나 만들고(난 PISActors라고 만들었음. 계속 뭐시기한 이름을 유지..), 그 안에 들어가 sbt를 실행한다. sbt설치는 구글을 찾아보시라. 최신버전은 0.13.5이다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sbt&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt directory &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; now versioned &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; located at C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Users\username\.sbt\0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; are seeing &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; warning because there &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; configuration &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Users\username\.sbt but &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Users\s&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2852886&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\.sbt\0&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;13.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt directory may be changed via the sbt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system property&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project to pisactors &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; about&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0.13&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pisactors &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SNAPSHOT&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; built against &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Scala&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2.10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Available&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Plugins&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;IvyPlugin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;JvmPlugin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;CorePlugin&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;JUnitXmlReportPlugin&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; sbt plugins&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build definitions are &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Scala&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2.10&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; name &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;PISActors&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Defining&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;name&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value will be used &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;normalizedName &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; others&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;`last`&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; details&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Reapplying&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; settings&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project to &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; scalaVersion &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;2.11.1&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Defining&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scalaVersion&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value will be used &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;allDependencies&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ivyScala &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; others&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;`last`&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; details&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Reapplying&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; settings&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project to &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; version &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;0.99&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Defining&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;version&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;The&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; value will be used &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;isSnapshot&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;*:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;projectId &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; others&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;`last`&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; details&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Reapplying&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; settings&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project to &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; session save&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Reapplying&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; settings&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project to &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이러고 나면 다음과 같은 디렉터리 트리가 생긴다(tree는 디렉터리 트리를 표시해주는 프로그램이다).&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;tree &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Folder&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; PATH listing &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; volume C_Drive&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Volume&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; serial number &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;96BB&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6F11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\DEV\SCALA\AKKA\PISACTORS&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;├───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;project&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;│&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;└───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;target&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;│&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;└───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;classes&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;└───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이제 &lt;a href=&quot;http://doc.akka.io/docs/akka/2.3.4/intro/getting-started.html&quot;&gt;akka 문서의 sbt 설정법&lt;/a&gt;에 있는대로 다음을 build.sbt에 추가하자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;resolvers &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Typesafe Repository&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; at &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;http://repo.typesafe.com/typesafe/releases/&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;libraryDependencies &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;com.typesafe.akka&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;akka-actor&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;2.3.4&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;소스파일-넣어서-컴파일-해보기&quot;&gt;소스파일 넣어서 컴파일 해보기&lt;/h3&gt;소스코드를 넣기 위해 sbt프로젝트 디렉터리 아래 src라는 디렉터리를 만들고, 다음과 같은 트리 구조를 만들어 놓자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;tree src&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Folder&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; PATH listing &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; volume C_Drive&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Volume&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; serial number &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;96BB&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;6F11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\DEV\SCALA\AKKA\PISACTORS\SRC&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;├───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;main&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;│&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;└───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;└───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;test&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;└───&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;테스트용으로 간단한 Hello, World 프로그램을 만들어 sbt로 돌려보자.(src/main/scala/Hello.scala로 저장)&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;type src\main\scala\Hello&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; main&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;c&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sbt&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; current project to &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; build file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; run&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Updating&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;/C:/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Dev&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;PISActors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;pisactors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-library;2.11.1 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; com&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;typesafe&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#akka-actor_2.11;2.3.4 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; com&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;typesafe&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#config;1.2.1 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-compiler;2.11.1 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-reflect;2.11.1 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-xml_2.11;1.0.2 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-parser-combinators_2.11;1.0.1 ..&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Resolving&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; jline&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#jline;2.11 ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; downloading http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//repo1.maven.org/maven2/org/scala-lang/scala-library/2.11.1/scala-library-2.11.1.jar ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SUCCESSFUL &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-library;2.11.1!scala-library.jar (14325ms)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; downloading http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.11.1/scala-compiler-2.11.1.jar ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SUCCESSFUL &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-compiler;2.11.1!scala-compiler.jar (32951ms)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; downloading http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.11.1/scala-reflect-2.11.1.jar ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SUCCESSFUL &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-reflect;2.11.1!scala-reflect.jar (11328ms)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; downloading http&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.11/1.0.2/scala-xml_2.11-1.0.2.jar ...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;SUCCESSFUL &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; org&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;#scala-xml_2.11;1.0.2!scala-xml_2.11.jar(bundle) (2234ms)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Done&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; updating&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compiling&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Scala&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; source to C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\target\scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2.11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\classes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;compiler-interface&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; yet compiled &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Scala&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2.11&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compiling&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compilation&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; completed &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12.592&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Running&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; time&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;83&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; completed &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; AM&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;sillyactor&quot;&gt;SillyActor&lt;/h2&gt;먼저 원래 스칼라 책에 있던 예제부터..&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; act&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;I&#39;m acting!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;원래는 실행 방법은 : &lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;혹시나 모르니 앞에서 만든 sbt 프로젝트에 넣어서 한번 그냥 시도나 해보자. sbt로 만든 프로젝트 디렉터리 아래 src/main/scala/ 디렉터리를 만들고, SillyActor.scala라는 파일을 만들어서 위 SillyActor 프로그램을 그대로 넣자. 그 후 sbt를 실행하고 console 명령을 사용해 혹시 콘솔에서 실행을 시킬 수 있나 테스트해보자..&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; console&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compiling&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Scala&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; source to C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\target\scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2.11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\classes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\src\main\scala\SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; actors &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; a member of &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; scala&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;              &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\src\main\scala\SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; found&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; type &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;                           &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; two errors found&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compilation&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; failed&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; time&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; completed &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;36&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; PM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;예상대로 문제가 있다. 오류를 잘 보면 일단 scala.actors가 없다는 것을 알 수 있다. 스칼라 2.10에서는 액터 라이브러리를 별도의 jar로 패키징해서 제공하고, 그나마도 2.11부터는 없어졌다. 대신 akka 라이브러리를 사용해야 한다.&lt;br /&gt;그럼, akka로 만들어 보자. &lt;a href=&quot;http://docs.scala-lang.org/overviews/core/actors-migration-guide.html&quot;&gt;스칼라의 액터 마이그레이션 가이드&lt;/a&gt;에 보면 이전 액터를 akka 액터로 바꾸는 법이 나와있다. 여기 있는 가이드 중에 우리가 적용해야 할 것을 찾아보자.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;scala.actors._를 임포트 하는 대신, akka.actor._를 임포트해야 한다.&lt;/li&gt;&lt;/ul&gt;위 사항을 적용하고 컴파일해봐도 역시 오류가 난다(심심하면 시도해 보시라). 문서에는 AMK(actor migration kit)을 사용한 방법이 있긴 하지만, 이 부분은 생략하고 바로 akka로 작성하는 쪽을 택할 것이다.&lt;br /&gt;&lt;h3 id=&quot;act-메서드-없애기&quot;&gt;act() 메서드 없애기&lt;/h3&gt;가이드의 &lt;code&gt;act()&lt;/code&gt; 메서드 없애기 부분을 보면 다음 절차를 거치라고 한다. &lt;code&gt;act()&lt;/code&gt;를 없애야 하는 이유는 akka에서는 글로벌 메시지 핸들러를 반드시 사용해야 하기 때문이란다. 가이드의 가이드라인은 다음과 같다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;한번에 한 액터씩 변경한다.&lt;/li&gt;&lt;li&gt;우선 &lt;code&gt;act()&lt;/code&gt; 안에서 최초의 &lt;code&gt;loop()&lt;/code&gt; 앞에 실행해야 하는 코드는 모두 &lt;code&gt;preStart()&lt;/code&gt;에 빼서 초기화를 담당하게 만든다.&lt;/li&gt;&lt;li&gt;&lt;code&gt;loop()&lt;/code&gt;안에 &lt;code&gt;react{ 본문 }&lt;/code&gt;이라는 문장만 있으면, 이를 &lt;code&gt;def receive = { 본문 }&lt;/code&gt;으로 바꿀 수 있다.&lt;/li&gt;&lt;/ul&gt;우리 예제에서는 &lt;code&gt;act()&lt;/code&gt;안에 &lt;code&gt;loop()&lt;/code&gt; 호출이 없다. 따라서 그냥 모든 코드를 &lt;code&gt;preStart()&lt;/code&gt;에 넣어야 한다. 그러고 나면 아무 동작이 없으므로, &lt;code&gt;loop&lt;/code&gt;안에서 아무것도 하지 않는것과도 같다. 그냥 더미 receive를 만들자. receive의 타입이 PartialFunction[Any,Unit]이므로, 간단한 case문 하나로 정의 가능하다. 이런 변경을 다 하고 나면 다음과 같은 코드가 나온다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// scala.actors대신 사용&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 초기화 시 필요한 코드&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;I&#39;m acting!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;com&quot;&gt;// 더미 메시지 처리 코드&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이제, 이걸 실행할 수 있어야 한다. 애석하게도 책의 예처럼 &lt;code&gt;SillyActor.start()&lt;/code&gt; 같은것은 불가능하다. 그런 메서드도 없고, 콘솔에서 SillyActor라고 쳐보면(싱글턴이니 어쨌든 객체는 있어야 하지 않겠는가?), 다음과 같은 오류가 나온다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorInitializationException&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; cannot create an instance of &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor$&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; explicitly &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;using&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the constructor &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;You&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; have to &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; one of the &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;actorOf&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; factory methods to create a &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;See&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the documentation&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  at akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorInitializationException$&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;165&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  at akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor$class&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;$init$&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;421&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  at &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor$&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  at &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor$&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;clinit&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; elided&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;힌트가 하나 있다. 새로 액터를 만들려면 &lt;code&gt;actorOf&lt;/code&gt; 팩토리 메서드 중 하나를 쓰란다.&lt;br /&gt;&lt;h3 id=&quot;akka-actorsystem-도입하기&quot;&gt;akka ActorSystem 도입하기&lt;/h3&gt;&lt;code&gt;actorOf&lt;/code&gt;를 akka문서에서 찾아보면 &lt;code&gt;ActorRefFactory&lt;/code&gt;에 있다. 그 하위 클래스로는 &lt;code&gt;ActorSystem&lt;/code&gt;과 &lt;code&gt;ActorContext&lt;/code&gt;가 있는데, 아무래도 System쪽이 더 크기도 하고, &lt;code&gt;ActorSystem&lt;/code&gt;은 클래스와 동반객체까지 있기 때문에, 팩토리 메서드가 분명 동반객체에 있을 것이라 예상할 수 있다. 예상대로 동반객체에 보면 apply() 메서드가 있다. (물론 이런식으로 찾아보지 않고, 그냥 “akka scala example” 같은걸 구글에서 찾아보는게 더 나을 것이다.) 관련 문서를 참조해 변경한 버전은 다음과 같다.&lt;br /&gt;여기서 &lt;code&gt;object SillyActor&lt;/code&gt;를 &lt;code&gt;class SillyActor&lt;/code&gt;로 바꿨다. 이유는 찾아봐야겠지만, &lt;code&gt;Props[SillyActor]&lt;/code&gt;라고 &lt;code&gt;actorOf()&lt;/code&gt;안에서 사용하면 오류가 난다. &lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compiling&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Scala&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; source to C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\target\scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2.11&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\classes&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; C&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\Dev\scala\akka\P&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ISActors&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;\src\main\scala\SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; found&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; type &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   val silly &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;sillyactor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;                                    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; one error found&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Compilation&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; failed&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Total&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; time&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; s&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; completed &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;07&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; PM&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이를 감안해 class로 바꾸고 나면 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;I&#39;m acting!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val system &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;silly&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val silly &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;sillyactor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;실행해보면 문제가 있다. &lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; run&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Running&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;I&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;m acting!&lt;br /&gt;I&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m acting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;I&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;m acting!&lt;br /&gt;I&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m acting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;I&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;m acting!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;여기서 실행이 안 끝난다. ActorSystem에 보니 &lt;code&gt;shutdown()&lt;/code&gt;이라는 메서드가 있다. 이를 사용해 액터시스템을 종료하자. 마지막 버전은 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;I&#39;m acting!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val system &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;silly&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val silly &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;sillyactor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;일단 제대로 도는 것 같아 보인다. 여기까지 마치고, 다음 예제를 살펴보자.&lt;br /&gt;&lt;h2 id=&quot;sillyactor-seriusactor&quot;&gt;SillyActor + SeriusActor&lt;/h2&gt;다음 예제는 두 액터를 동시에 실행해 보는 것이었다. 추가한 SeriusActor는 다음과 같다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SeriousActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; act&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;To be or not to be.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;앞에서본 SillyActor와 사실상 차이가 없다. 그냥 둘을 한데 넣고 한 액터 시스템에서 생성해 보자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;kwd&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillySerious&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;I&#39;m acting!&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SeriousActor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;override&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; preStart&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;To be or not to be.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;      &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; receive &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; _ &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;extends&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val system &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;system&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val silly &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillyActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;sillyactor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  val serious &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actorOf&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Props&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SeriousActor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;siriousactor&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;실행해 보면 잘 돈다. 두 액터가 동시에 실행되는 것 같아 보인다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; run&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Multiple&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; main classes detected&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; one to run&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;HelloWorld&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillySerious&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Enter&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; number&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Running&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;SillySerious&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorApp&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; be &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to be&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;I&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;m acting!&lt;br /&gt;To be or not to be.&lt;br /&gt;I&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m acting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; be &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to be&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;I&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;m acting!&lt;br /&gt;To be or not to be.&lt;br /&gt;I&#39;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;m acting&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; be &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to be&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;I&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&#39;m acting!&lt;br /&gt;[success] Total time: 7 s, completed 03/07/2014 1:55:37 PM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;actor-도구-메서드&quot;&gt;actor 도구 메서드&lt;/h2&gt;다음 예제는 &lt;code&gt;actor&lt;/code&gt; 도구 메서드를 사용하는 예제였다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actors&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; val seriousActor2 &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; actor &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;That is the question.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;akka문서에 보면 &lt;a href=&quot;http://doc.akka.io/docs/akka/2.3.4/scala/actordsl.html&quot;&gt;actor DSL&lt;/a&gt;이라는 부분이 있다. 이를 참고해 보자.&lt;br /&gt;콘솔을 sbt에서 열고, 일단 DSL과 액터 시스템을 임포트하자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorDSL&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorDSL&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;_&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;그 후, 디폴트 시스템을 하나 암시적 값으로 정의한다. 이 시스템이 DSL에서 만들 모든 액터가 들어갈 시스템이다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;implicit&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; val system &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;demo&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorSystem&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//demo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이제, DSL을 사용해 akka  액터를 만들어보자. &lt;code&gt;Act&lt;/code&gt; 트레이트에 있는 여러 메서드를 사용해 &lt;code&gt;Actor&lt;/code&gt;클래스에 정의해야 할 여러 메서드를 사용할 수 있다. 이에 대해선  &lt;a href=&quot;http://doc.akka.io/api/akka/2.3.4/?_ga=1.51772585.1264304699.1403148968#akka.actor.dsl.Creators%24Act&quot;&gt;Act&lt;/a&gt;문서를 참조하라. &lt;code&gt;seriousActor2&lt;/code&gt;의 경우 preStart()에서 루프를 도는게 좋을 것이므로, 이를 정의하려면 &lt;code&gt;Act&lt;/code&gt;의 &lt;code&gt;whenStarting&lt;/code&gt;을 사용해야 한다.&lt;br /&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; val a &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Act&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   whenStarting &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;i &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;       println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;That is the question.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;lit&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;a&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorRef&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//demo/user/$a#745601316]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;That&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; the question&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;의도대로 잘 동작한다. 이제 책에 있는 echo 액터를 만들어보자. echo액터를 변경한 것은 다음과 같다. 재미를 위해 &lt;code&gt;whenStarting&lt;/code&gt;과 &lt;code&gt;whenStopping&lt;/code&gt;도 같이 정의하자.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;val echo &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Act&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  become &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; msg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;msg = ${msg}&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  whenStarting &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;echo started.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;  whenStopping &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;echo stopped.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;  &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;이를 콘솔에서 입력하고, 다음과 같이 사용해 볼 수 있다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; val echo &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Act&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   become &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;kwd&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; msg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;msg = ${msg}&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   whenStarting &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;echo started.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;   whenStopping &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; println&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;echo stopped.&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;     &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;echo&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;ActorRef&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Actor&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;akka&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;com&quot;&gt;//demo/user/$a#513405333]&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; echo started&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; echo &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;str&quot;&gt;&quot;Hello!&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;msg &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;여기서 시스템을 멈추면 다음과 같은 결과를 볼 수 있다.&lt;br /&gt;&lt;pre class=&quot;prettyprint prettyprinted&quot;&gt;&lt;code&gt;&lt;span class=&quot;pln&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; system&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;shutdown&lt;br /&gt;&lt;br /&gt;scala&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt; echo stopped&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;다음 글에서는 좀 더 복잡한 예제를 살펴볼 것이다. 최종 목표는 본문에서 다뤘던 회로 시뮬레이터를 akka 액터로 만드는 것이다.</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/1934505372285757918/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=1934505372285757918' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1934505372285757918'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1934505372285757918'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/akka.html' title='[스칼라] 프로그래밍 인 스칼라 액터 예제 - akka 버전(1)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-6124035916286170</id><published>2014-07-03T10:46:00.002+10:00</published><updated>2014-07-03T10:46:52.281+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="memory_limit"/><category scheme="http://www.blogger.com/atom/ns#" term="php"/><category scheme="http://www.blogger.com/atom/ns#" term="php-cli"/><category scheme="http://www.blogger.com/atom/ns#" term="메모리"/><title type='text'>[PHP] CLI 실행시 메모리 최대값 조정</title><content type='html'>회사(griffith university)에서 CMS로 squiz_matrix라는걸 쓰는데 PHP이다.&lt;br /&gt;CLI에서 matrix내부 asset을 다뤄야 할 일이 있어서 php 스크립트를 만들고 php cli로 실행하는데 메모리가 부족하다고 자꾸 징징대서 찾아봤다.&lt;br /&gt;&lt;br /&gt;&amp;nbsp;php -d memory_limit=9000M ./gu_enumerateall.php mysource_matrix 87&lt;br /&gt;&lt;br /&gt;이런식으로 -d memory_limit=크기 라고 주면 된다. M은 메가바이트 단위.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6124035916286170/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6124035916286170' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6124035916286170'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6124035916286170'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/07/php-cli.html' title='[PHP] CLI 실행시 메모리 최대값 조정'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-6146295796074728295</id><published>2014-06-10T22:12:00.001+10:00</published><updated>2014-06-10T22:13:05.024+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="final"/><category scheme="http://www.blogger.com/atom/ns#" term="inheritence"/><category scheme="http://www.blogger.com/atom/ns#" term="override"/><category scheme="http://www.blogger.com/atom/ns#" term="subclass"/><category scheme="http://www.blogger.com/atom/ns#" term="superclass"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="상속"/><category scheme="http://www.blogger.com/atom/ns#" term="서브클래스"/><category scheme="http://www.blogger.com/atom/ns#" term="수퍼클래스"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="오버라이드"/><category scheme="http://www.blogger.com/atom/ns#" term="파이널"/><title type='text'>[스위프트 대충보기] 12. 상속(inheritence)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-12-상속inheritence&quot;&gt;[스위프트 대충보기] 12. 상속(inheritence)&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;클래스는 다른 클래스의 메서드, 프로퍼티, 또는 다른 특성을 이어받을(상속, inherit) 수 있다.&lt;/li&gt;&lt;li&gt;특성을 전해주는 클래스는 수퍼클래스(superclass), 이어받은 클래스는 서브클래스(subclass)라 한다.&lt;/li&gt;&lt;li&gt;서브클래스는 수퍼클래스의 메서드, 프로퍼티, 첨자를 호출하거나, 자신이 이를 재정의(오버라이드, override)할 수 있다. 스위프트는 수퍼 클래스 정의와 오버라이드한 정의가 일치하는지 검사해서 문제가 있으면 지적해 준다.&lt;/li&gt;&lt;li&gt;상속한 프로퍼티에 옵저버를 추가할 수 있다. 수퍼클래스이 옵저버 종류(저장 또는 계산)와 관계 없이 서브클래스에서는 옵저버 추가가 가능하다.&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;베이스-클래스-정의하기&quot;&gt;베이스 클래스 정의하기&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;아무 클래스도 상속하지 않은 클래스는 베이스 클래스(base class)라 한다. 클래스는 &lt;code&gt;class 이름 { 몸통 }&lt;/code&gt; 순서로 정의한다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;주의: 스위프트는 모든 클래스가 공통으로 상속해야 하는 루트 클래스가 없다. (뻘소리: 아마도 스위프트가 가능한 한 오브젝티브-C에 얇은 레이어를 제공하려는 의도에서 만든 언어라서 이런것 같음. 오브젝티브-C와 스위프트 클래스의 바이너리 레이아웃을 같게 만들려면 이게 최선의 선택이었을 것임.)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;예제: 운송수단&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class 운송수단 {&lt;br /&gt;    var 바퀴개수: Int&lt;br /&gt;    var 최대승객수: Int&lt;br /&gt;    func 설명() -&amp;gt; String {&lt;br /&gt;        return &quot;\(바퀴개수) 바퀴, 최대 \(최대승객수) 승객 탑승 가능&quot;&lt;br /&gt;    }&lt;br /&gt;    init() {&lt;br /&gt;        바퀴개수 = 0&lt;br /&gt;        최대승객수 = 1&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;초기화 함수(initializer): &lt;code&gt;init()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;프로퍼티: &lt;code&gt;바퀴개수&lt;/code&gt;, &lt;code&gt;최대승객수&lt;/code&gt;&lt;/li&gt;&lt;li&gt;메서드: &lt;code&gt;설명()&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;초기화 함수는 메서드와 형태가 비슷하며, 모든 프로퍼티를 초기화해준다.&lt;/li&gt;&lt;li&gt;새로 클래스의 인스턴스를 만들려면 클래스 이름 다음에 빈 괄호를 넣어준다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let 엉터리운송수단 = 운송수단()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;서브클래싱subclassing&quot;&gt;서브클래싱(subclassing)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;서브클래싱: 기존 클래스를 기반으로 새로운 클래스를 만드는 것. 기존 클래스에 새로운 특성을 부여한다.&lt;/li&gt;&lt;li&gt;새 클래스에 수퍼클래스가 있음을 알리기 위해 콜론(&lt;code&gt;:&lt;/code&gt;) 다음에 상속할 수퍼클래스 타입 이름을 적는다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class 자전거: 운송수단 {&lt;br /&gt;    init() {&lt;br /&gt;        super.init()&lt;br /&gt;        바퀴개수 = 2&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;예제에서, 초기화 함수를 정의 안에 있는 &lt;code&gt;super.init()&lt;/code&gt; 수퍼클래스의 &lt;code&gt;init()&lt;/code&gt;을 호출한다.&lt;/li&gt;&lt;li&gt;주의: 오브젝티브-C와 달리 초기화 함수를 자동으로 상속하지 않는다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;서브클래스도 일반 클래스와 마찬가지로 사용할 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let 새자전거 = 자전거()&lt;br /&gt;println(&quot;자전거: \(새자전거.설명())&quot;) // 자전거: 2 바퀴, 최대 1 승객 탑승 가능&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;주의: 서브클래스는 수퍼클래스의 var 프로퍼티만 변경 가능하다. 상속받은 상수 프로퍼티는 서브클래스에서 바꿀 수 없다.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;오버라이딩overriding&quot;&gt;오버라이딩(overriding)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;서브클래스에서 수퍼클래스가 정의한 인스턴스 메서드, 클래스 메서드, 인스턴스 프로퍼티, 첨자 등을 다시 정의할 수 있다(다시 정의하지 않으면 당연히 수퍼클래스의 것을 사용한다). 이를 오버라이딩이라 한다.&lt;/li&gt;&lt;li&gt;오바라이딩 하려면 정의 앞에 &lt;code&gt;override&lt;/code&gt; 키워드를 넣으면 된다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;override&lt;/code&gt;를 사용해 의도를 명확히 해야 한다. 만약 &lt;code&gt;override&lt;/code&gt;를 썼는데 타입이 안 맞으면 컴파일 오류가 나며, &lt;code&gt;override&lt;/code&gt;가 없는데 수퍼클래스에 이미 있는 메서드를 정의하는 것이라면 역시 컴파일 오류가 난다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;수퍼클래스의 메서드, 프로퍼티, 첨자를 액세스하려면 &lt;code&gt;super.&lt;/code&gt;를 앞에 붙여서 사용한다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;super.메서드이름()&lt;/code&gt; : 메서드사용&lt;/li&gt;&lt;li&gt;&lt;code&gt;super.프로퍼티이름&lt;/code&gt; : 프로퍼티 사용&lt;/li&gt;&lt;li&gt;&lt;code&gt;super[인덱스]&lt;/code&gt; : 첨자 사용&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;메서드 오버라이드하기&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class 자동차: 운송수단 {&lt;br /&gt;    var 속도: Double = 0.0&lt;br /&gt;    init() {&lt;br /&gt;        super.init()&lt;br /&gt;        최대승객수 = 5&lt;br /&gt;        바퀴개수 = 4&lt;br /&gt;    }&lt;br /&gt;    override func 설명() -&amp;gt; String {&lt;br /&gt;        return super.설명() + &quot;, 현재 속도: \(속도) km/h&quot;&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;오버라이드한 메서드 사용&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let 새자동차 = 자동차()&lt;br /&gt;println(&quot;자동차: \(새자동차.설명())&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;프로퍼티 오버라이드하기: 인스턴스 또는 클래스 프로퍼티의 게터나 세터를 변경하거나, 프로퍼티 옵저버를 추가할 수 있다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;게터와 세터 오버라이드하기: 상속한 프로퍼티는 종류와 관계 없이 모두 오버라이드할 수 있다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;서브클래스는 수퍼클래스의 구현 내용은 모르고 타입과 이름만 안다.&lt;/li&gt;&lt;li&gt;오버라이드를 하려면 타입과 이름을 모두 써야 한다.&lt;/li&gt;&lt;li&gt;수퍼클래스에서 읽기전용이었더라도 서브클래스에서 세터와 게터를 모두 제공할 수는 있지만, 수퍼클래스에서 게터와 세터가 있던 프로퍼티를 서브클라스에서 읽기전용으로 만들 수 없다.&lt;/li&gt;&lt;li&gt;주의: 프로퍼티 오버라이드시 세터를 제공한다면, 반드시 게터도 제공해야 한다. 할일이 없다면 &lt;code&gt;super.프로퍼티&lt;/code&gt; 라도 넣어라.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class 속도40제한자동차: 자동차 {&lt;br /&gt;    override var 속도: Double  {&lt;br /&gt;        get {&lt;br /&gt;            return super.속도&lt;br /&gt;        }&lt;br /&gt;        set {&lt;br /&gt;            super.속도 = min(newValue, 40.0)&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;// 아무리 밟아도 소용없음!&lt;br /&gt;let 느림보거북이 = 속도40제한자동차()&lt;br /&gt;느림보거북이.속도 = 60.0&lt;br /&gt;println(&quot;느림보거북이: \(느림보거북이.설명())&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;프로퍼티 옵저버 오버라이드하기: 상속한 프로퍼티에 옵저버를 정의할 수 있음. 따라서, 상속받은 값이 변할 때 원 구현과 관계 없이 이를 추적할 수 있음.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;주의: 상속받은 읽기 전용 프로퍼티나 상수 저장 프로퍼티에는 옵저버를 만들 수 없다. 실제로 이런 값은 변경 자체가 불가능하므로, &lt;code&gt;willSet&lt;/code&gt;이나 &lt;code&gt;didSet&lt;/code&gt;이란 것이 의미가 없다.&lt;/li&gt;&lt;li&gt;주의2: 서브클래스에서 세터와 옵저버를 동시에 오버라이드할 수 없다. 세터를 정의하면 세터 안에서 값 변동을 추적할 수 있기 때문이다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class 자동변속자동차: 자동차 {&lt;br /&gt;    var 기어 = 1&lt;br /&gt;    override var 속도: Double {&lt;br /&gt;        didSet {&lt;br /&gt;            기어 = Int(속도 / 10.0) + 1&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    override func 설명() -&amp;gt; String {&lt;br /&gt;        return super.설명() + &quot;, 현재 \(기어)단&quot;&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;let 새오토차 = 자동변속자동차()&lt;br /&gt;새오토차.속도 = 35.0&lt;br /&gt;println(&quot;새오토차: \(새오토차.설명())&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;오버라이드-방지하기-final&quot;&gt;오버라이드 방지하기 - @final&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;@final&lt;/code&gt; 애트리뷰트(attribute)를 정의 앞에 붙이면 오버라이드를 금지할 수 있다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;@final var&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;@final func&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;@final class func&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;@final subscript&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;@final&lt;/code&gt;인 대상을 오버라이드하면 컴파일 오류가 발생한다&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;전체 클래스 앞에 &lt;code&gt;@final&lt;/code&gt;을 붙이면(&lt;code&gt;@final class ...&lt;/code&gt;) 클래스 전체를 서브클래싱 할 수 없게 막는다.&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;감상: 일반적 OOP와 차이가 없음. 세터와 게터, 옵저버 오버라이딩 부분도 생각해 보면 언어 디자인 시 선택 가능성이 그리 많지는 않음. </content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6146295796074728295/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6146295796074728295' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6146295796074728295'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6146295796074728295'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/12-inheritence.html' title='[스위프트 대충보기] 12. 상속(inheritence)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-6056607251974305758</id><published>2014-06-09T11:51:00.001+10:00</published><updated>2014-06-09T11:52:23.050+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="subscript"/><category scheme="http://www.blogger.com/atom/ns#" term="subscript overloading"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="첨자"/><category scheme="http://www.blogger.com/atom/ns#" term="첨자 오버로딩"/><title type='text'>[스위프트 대충보기] 11. 첨자(subscript)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-10첨자subscript&quot;&gt;[스위프트 대충보기] 11.첨자(subscript)&lt;/h1&gt;&lt;h2 id=&quot;첨자&quot;&gt;첨자?&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;클래스, 구조체, 열거형 안에 첨자를 정의할 수 있음&lt;/li&gt;&lt;li&gt;첨자: &lt;code&gt;someArray[index]&lt;/code&gt;와 같이 &lt;code&gt;[]&lt;/code&gt;사이에 인덱스를 넣어서 인스턴스 정보를 액세스하는 연산&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;첨자-문법&quot;&gt;첨자 문법&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;subscript(입력 파라미터들) -&amp;gt; 반환타입 {}&lt;/code&gt;&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;subscript(index: Int) -&amp;gt; Int {&lt;br /&gt;    get {&lt;br /&gt;        // 적절한 값 반환&lt;br /&gt;    }&lt;br /&gt;    set(newValue) {&lt;br /&gt;        // 적절하게 설정&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;읽기전용 첨자인 경우 get을 생략하고, 첨자 본문에 바로 코드를 적는다&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;subscript(index: Int) -&amp;gt; Int {&lt;br /&gt;    // 적절한 값 반환&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;첨자를-어디에-쓸까&quot;&gt;첨자를 어디에 쓸까?&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;컬렉션 원소 액세스: 딕셔너리나 배열을 생각해 볼것&lt;/li&gt;&lt;li&gt;원한다면 다른 목적으로도 사용가능(예제는 없음)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;선택-사항&quot;&gt;선택 사항&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;첨자에서 가변길이 파라미터를 쓸 수 있고, var 파라미터도 쓸 수 있음&lt;/li&gt;&lt;li&gt;inout 파라미터는 쓸 수 없고, 파라미터의 디폴트 값도 지정할 수 없음&lt;/li&gt;&lt;li&gt;한 클/구/열(귀찮아서 앞으론 이렇게…) 안에 필요한 만큼 첨자를 넣을 수 있음: subscript overloading&lt;/li&gt;&lt;li&gt;파라미터를 2개 이상 받을 수도 있음&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;struct Matrix {&lt;br /&gt;    let rows: Int, columns: Int&lt;br /&gt;    var grid: Double[]&lt;br /&gt;    init(rows: Int, columns: Int) {&lt;br /&gt;        self.rows = rows&lt;br /&gt;        self.columns = columns&lt;br /&gt;        grid = Array(count: rows * columns, repeatedValue: 0.0)&lt;br /&gt;    }&lt;br /&gt;    func indexIsValidForRow(row: Int, column: Int) -&amp;gt; Bool {&lt;br /&gt;        return row &amp;gt;= 0 &amp;amp;&amp;amp; row &amp;lt; rows &amp;amp;&amp;amp; column &amp;gt;= 0 &amp;amp;&amp;amp; column &amp;lt; columns&lt;br /&gt;    }&lt;br /&gt;    subscript(row: Int, column: Int) -&amp;gt; Double {&lt;br /&gt;        get {&lt;br /&gt;            assert(indexIsValidForRow(row, column: column), &quot;Index out of range&quot;)&lt;br /&gt;            return grid[(row * columns) + column]&lt;br /&gt;        }&lt;br /&gt;        set {&lt;br /&gt;            assert(indexIsValidForRow(row, column: column), &quot;Index out of range&quot;)&lt;br /&gt;            grid[(row * columns) + column] = newValue&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6056607251974305758/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6056607251974305758' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6056607251974305758'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6056607251974305758'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/10-subscript.html' title='[스위프트 대충보기] 11. 첨자(subscript)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-3598701028548637380</id><published>2014-06-09T11:15:00.001+10:00</published><updated>2014-06-09T11:16:19.622+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="class"/><category scheme="http://www.blogger.com/atom/ns#" term="method"/><category scheme="http://www.blogger.com/atom/ns#" term="mutating"/><category scheme="http://www.blogger.com/atom/ns#" term="struct"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="type method"/><category scheme="http://www.blogger.com/atom/ns#" term="구조체"/><category scheme="http://www.blogger.com/atom/ns#" term="내부이름"/><category scheme="http://www.blogger.com/atom/ns#" term="메서드"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="외부이름"/><category scheme="http://www.blogger.com/atom/ns#" term="클래스"/><category scheme="http://www.blogger.com/atom/ns#" term="타입메서드"/><title type='text'>[스위프트 대충보기] 10.메서드(method)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-10메서드method&quot;&gt;[스위프트 대충보기] 10.메서드(method)&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;메서드: 특정 타입과 연관된 함수. 구조체, 클래스, 열겨형에 메서드가 들어갈 수 있음. 또한, 세 타입 모두 타입메서드(Objective C의 클래스 메서드)를 정의 가능.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;메서드-문법&quot;&gt;메서드 문법&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;인스턴스 메서드 : 문법은 함수와 동일&lt;/li&gt;&lt;li&gt;&lt;code&gt;func 함수이름(매개변수이름: 매개변수타입) -&amp;gt; 반환타입 { 함수 본문 }&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;매개변수-내부-이름과-외부-이름&quot;&gt;매개변수 내부 이름과 외부 이름&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;매개변수의 내부이름과 외부이름: 함수와 마찬가지로 내부이름과 외부이름을 사용할 수 있지만, 약간의 차이가 있음(Objective C객체와 맞추려다 보니 이런 선택을 한 것 같음).&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;메서드의 첫번째 매개변수 이름은 그냥 내부 이름으로만 취급&lt;/li&gt;&lt;li&gt;메서드의 두번째 매개변수 부터는 파라미터 이름을 그냥 지정해도 외부이름과 내부이름으로 동시에 그 이름을 사용&lt;/li&gt;&lt;li&gt;따라서, &lt;code&gt;func incrementBy(amount: Int, numberOfTimes: Int) {...}&lt;/code&gt; 라는 메서드(정확히는 반환값이 없으니 프로시져)가 있다면, 이 메서드는 &lt;code&gt;incrementBy:numberOfTimes:&lt;/code&gt;라는 Objective-C 메서드와 동일한 이름을 가짐(내 생각엔 컴파일러가 만들어내는 함수 이름도 아마도 동일해 지고, 그에 따라 Objecive-C와 자유롭게 링킹이 가능할 듯)&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;amount&lt;/code&gt;는 내부 이름으로만 작용&lt;/li&gt;&lt;li&gt;&lt;code&gt;numberOfTimes&lt;/code&gt;는 내부, 외부 이름으로 모두 사용&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;디폴트 외부 이름과 다르게 외부 이름을 지정하고 싶다면 외부 이름을 직접 지정하면 됨. 반대로 외부 이름을 없애고 싶다면 &lt;code&gt;_&lt;/code&gt;를 외부이름 부분에 넣으면 됨 &lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;self-프로퍼티&quot;&gt;self 프로퍼티&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;인스턴스 자신을 기리키는 참조 &lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class Counter {&lt;br /&gt;    var count: Int = 0&lt;br /&gt;&lt;br /&gt;    func increment() {&lt;br /&gt;        self.count++&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;실제로 self를 자주 쓸 일은 없음. self를 안 쓰더라도 메서드 안에서 변수/상수 이름을 사용하면 self 내의 변수/상수임을 가정함&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;예외: 파라미터이름과 인스턴스내의 프로퍼티 이름이 겹친 경우(자바도 동일)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;값-타입-내부의-프로퍼티-값-바꾸기&quot;&gt;값 타입 내부의 프로퍼티 값 바꾸기&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;기본적으로 구조체와 열겨형은 값 타입이기 때문에 메서드가 &lt;code&gt;self&lt;/code&gt;의 프로퍼티 값을 바꿀 수 없음&lt;/li&gt;&lt;li&gt;필요하다면 메서드 앞에 &lt;code&gt;mutating&lt;/code&gt;을 지정해 &lt;code&gt;self&lt;/code&gt;의 프로퍼티 값을 변경 가능&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;mutating&lt;/code&gt; 메서드라고 해도 let으로 정의한 상수 프로퍼티는 변경 불가&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;struct Point {&lt;br /&gt;    var x = 0.0, y = 0.0&lt;br /&gt;    mutating func moveByX(deltaX: Double, y deltaY: Double) {&lt;br /&gt;        x += deltaX&lt;br /&gt;        y += deltaY&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;var somePoint = Point(x: 1.0, y: 1.0)&lt;br /&gt;somePoint.moveByX(2.0, y: 3.0)&lt;br /&gt;println(&quot;The point is now at (\(somePoint.x), \(somePoint.y))&quot;)&lt;br /&gt;// &quot;The point is now at (3.0, 4.0)&quot; 출력&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;mutating&lt;/code&gt; 메서드에서 &lt;code&gt;self&lt;/code&gt; 자체에 대입을 해서 전체 인스턴스의 값을 변경 가능&lt;/li&gt;&lt;li&gt;구조체의 경우&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    struct Point {&lt;br /&gt;        var x = 0.0, y = 0.0&lt;br /&gt;        mutating func moveByX(deltaX: Double, y deltaY: Double) {&lt;br /&gt;            self = Point(x: x + deltaX, y: y + deltaY)&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;열거형의 경우&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    enum TriStateSwitch {&lt;br /&gt;        case Off, Low, High&lt;br /&gt;        mutating func next() {&lt;br /&gt;            switch self {&lt;br /&gt;            case Off:&lt;br /&gt;                self = Low&lt;br /&gt;            case Low:&lt;br /&gt;                self = High&lt;br /&gt;            case High:&lt;br /&gt;                self = Off&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    var ovenLight = TriStateSwitch.Low&lt;br /&gt;    ovenLight.next() // .High로 변함&lt;br /&gt;    ovenLight.next() // .Off로 변함&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;타입-메서드type-method&quot;&gt;타입 메서드(type method)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;인스턴스 메서드와 달리 특정 타입에도 메서드를 정의 가능&lt;/li&gt;&lt;li&gt;클래스의 타입 메서드는 &lt;code&gt;class&lt;/code&gt;라는 키워드로 정의.&lt;/li&gt;&lt;li&gt;구조체와 열겨형의 타입 메서드는 &lt;code&gt;static&lt;/code&gt; 사용&lt;/li&gt;&lt;li&gt;호출은 &lt;code&gt;타입이름.메서드이름()&lt;/code&gt;&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class SomeClass {&lt;br /&gt;    class func someTypeMethod() {&lt;br /&gt;        // 구현&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;SomeClass.someTypeMethod()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;타입 메서드 안의 &lt;code&gt;self&lt;/code&gt;는 그 타입을 가리킴. 따라서 타입 메서드 안에서는 해당 타입의 다른 타입 메서드나 타입 프로퍼티를 &lt;code&gt;self&lt;/code&gt;나 타입이름 표시 없이 직접 사용 가능함.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;struct LevelTracker {&lt;br /&gt;    static var highestUnlockedLevel = 1&lt;br /&gt;    static func unlockLevel(level: Int) {&lt;br /&gt;        if level &amp;gt; highestUnlockedLevel { highestUnlockedLevel = level }&lt;br /&gt;    }&lt;br /&gt;    static func levelIsUnlocked(level: Int) -&amp;gt; Bool {&lt;br /&gt;        return level &amp;lt;= highestUnlockedLevel&lt;br /&gt;    }&lt;br /&gt;    var currentLevel = 1&lt;br /&gt;    mutating func advanceToLevel(level: Int) -&amp;gt; Bool {&lt;br /&gt;        if LevelTracker.levelIsUnlocked(level) {&lt;br /&gt;            currentLevel = level&lt;br /&gt;            return true&lt;br /&gt;        } else {&lt;br /&gt;            return false&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/3598701028548637380/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=3598701028548637380' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/3598701028548637380'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/3598701028548637380'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/9-property_9.html' title='[스위프트 대충보기] 10.메서드(method)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-8956090518407445477</id><published>2014-06-09T11:12:00.001+10:00</published><updated>2014-06-09T11:14:33.879+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="class"/><category scheme="http://www.blogger.com/atom/ns#" term="computed property"/><category scheme="http://www.blogger.com/atom/ns#" term="property"/><category scheme="http://www.blogger.com/atom/ns#" term="stored property"/><category scheme="http://www.blogger.com/atom/ns#" term="struct"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="type property"/><category scheme="http://www.blogger.com/atom/ns#" term="계산프로퍼티"/><category scheme="http://www.blogger.com/atom/ns#" term="구조체"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="저장프로퍼티"/><category scheme="http://www.blogger.com/atom/ns#" term="클래스"/><category scheme="http://www.blogger.com/atom/ns#" term="타입프로퍼티"/><category scheme="http://www.blogger.com/atom/ns#" term="프로퍼티"/><title type='text'>[스위프트 대충보기] 9. 프로퍼티(property)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-9-프로퍼티property&quot;&gt;[스위프트 대충보기] 9. 프로퍼티(property)&lt;/h1&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;프로퍼티&quot;&gt;프로퍼티&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;프로퍼티: 클래스, 구조체, 열겨형에 들어있는 값. &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;저장(stored) 프로퍼티: 인스턴스의 일부분으로 메모리에 보관함&lt;/li&gt;&lt;li&gt;계산(computed) 프로퍼티: (인스턴스의 상태를 바탕으로) 계산해서 값을 내놓음&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;인스턴스의 프로퍼티가 있고, 타입의 프로퍼티가 있음&lt;/li&gt;&lt;li&gt;프로퍼티 값의 변화를 감시하는 프로퍼티 옵저버(property observer)를 만들 수 있음&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;저장-프로퍼티stored-property&quot;&gt;저장 프로퍼티(stored property)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;가장 간단한 저장 프로퍼티: 클래스/구조체 안에 들어있는 상수 또는 변수&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;디폴트 프로퍼티 값: 클래스/구조체 정의 내부에서 프로퍼티를 정의할 때 사용한 값&lt;/li&gt;&lt;li&gt;초기화 함수를 통해 프로퍼티의 값을 변경할 수 있음. 이때, 상수 프로퍼티의 값도 지정 가능(!). &lt;/li&gt;&lt;li&gt;변수 프로퍼티는 인스턴스 생애동안 변경 가능하지만, 상수 프로퍼티는 초기화 하고 나면 변경 불가&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;struct FixedLengthRange {&lt;br /&gt;    var firstValue: Int&lt;br /&gt;    let length: Int&lt;br /&gt;}&lt;br /&gt;var rangeOfThreeItems = FixedLengthRange(firstValue: 0, length: 3)&lt;br /&gt;rangeOfThreeItems.firstValue = 6&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;구조체 인스턴스를 상수 변수에 지정한 경우: 구조체 인스턴스를 상수 변수에 대입하면, 그 구조체의 프로퍼티는 절대 바꿀 수 없다(var로 선언한 프로퍼티 조차도!). 구조체가 값타입이어서 그렇다. 반면, 클래스는 레퍼런스기 때문에, 상수 레퍼런스는 바꿀 수 없지만, 인스턴스의 상태는 변경 가능하다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    let rangeOfFourItems = FixedLengthRange(firstValue: 0, length: 4)&lt;br /&gt;    rangeOfFourItems.firstValue = 6 // 오류!&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;지연저장-프로퍼티&quot;&gt;지연저장 프로퍼티&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;지연 저장 프로퍼티(lazy stored property): 초기값을 해당 프로퍼티를 실제 사용하기 전까지 계산하지 않는 프로퍼티. var만 lazy로 선언 가능.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;계산이 시간이 오래 걸리는 경우 사용하거나,&lt;/li&gt;&lt;li&gt;인스턴스 생성 시점에는 계산에 필요한 정보를 아직 다 얻을 수 없는 경우 사용한다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class DataImporter {&lt;br /&gt;    /* 외부 파일에서 데이터를 가져오는 시간이 무지하게 걸리는 클래스 */&lt;br /&gt;    var fileName = &quot;data.txt&quot;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;class DataManager {&lt;br /&gt;    @lazy var importer = DataImporter()&lt;br /&gt;    var data = String[]()&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;let manager = DataManager()&lt;br /&gt;manager.data += &quot;Some data&quot;&lt;br /&gt;manager.data += &quot;Some more data&quot;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Objective-C와 달리 인스턴스 변수와 프로퍼티가 동일하다. 스위프트에서는 프로퍼티만을 사용한다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;스위프트 프로퍼티는 내부 변수를 따로 만들 필요가 없다. 컴파일러가 알아서 처리한다.&lt;/li&gt;&lt;li&gt;프로퍼티의 특성을 소스코드의 여기저기 흩어놓지 않고 한군데 모아 놓는다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;계산-프로퍼티&quot;&gt;계산 프로퍼티&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;계산 프로퍼티: 실제로는 저장해 둔 값이 아니고, 게터(getter)에서 값을 계산해 반환하고, 세터(setter)를 통해 간접적으로 값 계산과 관련 있는 대상에 영향을 끼칠 수 있다&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    struct Point {&lt;br /&gt;        var x = 0.0, y = 0.0&lt;br /&gt;    }&lt;br /&gt;    struct Size {&lt;br /&gt;        var width = 0.0, height = 0.0&lt;br /&gt;    }&lt;br /&gt;    struct Rect {&lt;br /&gt;        var origin = Point()&lt;br /&gt;        var size = Size()&lt;br /&gt;        var center: Point {&lt;br /&gt;        get {&lt;br /&gt;            let centerX = origin.x + (size.width / 2)&lt;br /&gt;            let centerY = origin.y + (size.height / 2)&lt;br /&gt;            return Point(x: centerX, y: centerY)&lt;br /&gt;        }&lt;br /&gt;        set(newCenter) {&lt;br /&gt;            origin.x = newCenter.x - (size.width / 2)&lt;br /&gt;            origin.y = newCenter.y - (size.height / 2)&lt;br /&gt;        }&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    var square = Rect(origin: Point(x: 0.0, y: 0.0),&lt;br /&gt;        size: Size(width: 10.0, height: 10.0))&lt;br /&gt;    let initialSquareCenter = square.center&lt;br /&gt;    square.center = Point(x: 15.0, y: 15.0)&lt;br /&gt;    println(&quot;square.origin is now at (\(square.origin.x), \(square.origin.y))&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;세터(변수이름)처럼 변수이름을 지정하지 않고 기본 이름인 newValue를 사용해 더 짧게 작성 가능하다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    struct Rect {&lt;br /&gt;        var origin = Point()&lt;br /&gt;        var size = Size()&lt;br /&gt;        var center: Point {&lt;br /&gt;        get {&lt;br /&gt;            let centerX = origin.x + (size.width / 2)&lt;br /&gt;            let centerY = origin.y + (size.height / 2)&lt;br /&gt;            return Point(x: centerX, y: centerY)&lt;br /&gt;        }&lt;br /&gt;        set {&lt;br /&gt;            origin.x = newValue.x - (size.width / 2)&lt;br /&gt;            origin.y = newValue.y - (size.height / 2)&lt;br /&gt;        }&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;읽기전용 계산 프로퍼티: 세터가 필요 없는 경우 get이라고 쓰지 않고, 바로 게터 코드를 프로퍼티 본체에 넣을 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    struct Cuboid {&lt;br /&gt;        var width = 0.0, height = 0.0, depth = 0.0&lt;br /&gt;        var volume: Double {&lt;br /&gt;        return width * height * depth&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    let fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0)&lt;br /&gt;    println(&quot;the volume of fourByFiveByTwo is \(fourByFiveByTwo.volume)&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;프로퍼티-옵저버observer&quot;&gt;프로퍼티 옵저버(observer)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;프로퍼티 옵저버: 프로퍼티 값의 변화를 감지하고 대응한다. 스위프트는 프로퍼티 값이 변할(프로퍼티에 값을 대입할) 때마다 옵저버를 호출해 주며, 이전 값과 같은 값을 대입하는 경우에도 호출한다.&lt;/li&gt;&lt;li&gt;지연 저장 프로퍼티가 아닌 모든 저장 프로퍼티에 옵저버를 설정 가능하다. (계산 프로퍼티는 언제 계산이나 수정이 되는지 코드가 다 알 수 있으므로 옵저버를 제공하지 않는다.)&lt;/li&gt;&lt;li&gt;상속해 오버라이드한 프로퍼티는 계산이나 저장 여부와 관계 없이 옵저버 설정 가능하다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;willSet : 값 저장 직전 호출. 새로 변경할 값을 상수 인자로 받음. 이름을 지정하지 않으면 newValue라는 이름이 디폴트&lt;/li&gt;&lt;li&gt;didSet : 값 저장 직후 호출. 옛날 값을 상수 인자로 받음. 이름을 지정하지 않으면 oldValue라는 이름이 디폴트&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;class StepCounter {&lt;br /&gt;    var totalSteps: Int = 0 {&lt;br /&gt;    willSet(newTotalSteps) {&lt;br /&gt;        println(&quot;About to set totalSteps to \(newTotalSteps)&quot;)&lt;br /&gt;    }&lt;br /&gt;    didSet {&lt;br /&gt;        if totalSteps &amp;gt; oldValue  {&lt;br /&gt;            println(&quot;Added \(totalSteps - oldValue) steps&quot;)&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;let stepCounter = StepCounter()&lt;br /&gt;stepCounter.totalSteps = 200&lt;br /&gt;// About to set totalSteps to 200 출력&lt;br /&gt;// Added 200 steps 출력&lt;br /&gt;stepCounter.totalSteps = 360&lt;br /&gt;// About to set totalSteps to 360 출력&lt;br /&gt;// Added 160 steps 출력&lt;br /&gt;stepCounter.totalSteps = 896&lt;br /&gt;// About to set totalSteps to 896 출력&lt;br /&gt;// Added 536 steps 출력&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;전역변수와 지역변수에도 옵저버를 적용 가능&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;타입-프로퍼티&quot;&gt;타입 프로퍼티&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;타입 프로퍼티: 인스턴스 프로퍼티와 달리 클래스/구조체 등의 특정 타입의 프로퍼티(C의 static) : static을 붙여서 지정(구조체, 열거형)하거나 class를 붙여서 지정(클래스)&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    struct SomeStructure {&lt;br /&gt;        static var storedTypeProperty = &quot;Some value.&quot;&lt;br /&gt;        static var computedTypeProperty: Int {&lt;br /&gt;        // return an Int value here&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    enum SomeEnumeration {&lt;br /&gt;        static var storedTypeProperty = &quot;Some value.&quot;&lt;br /&gt;        static var computedTypeProperty: Int {&lt;br /&gt;        // return an Int value here&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    class SomeClass {&lt;br /&gt;        class var computedTypeProperty: Int {&lt;br /&gt;        // return an Int value here&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;타입 프로퍼티는 “타입이름.프로퍼티이름”으로 사용함&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    println(SomeClass.computedTypeProperty) // 42 출력&lt;br /&gt;    println(SomeStructure.storedTypeProperty) // &quot;Some value.&quot;출력&lt;br /&gt;    SomeStructure.storedTypeProperty = &quot;Another value.&quot;&lt;br /&gt;    println(SomeStructure.storedTypeProperty) // &quot;Another value.&quot; 출력&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;타입 프로퍼티에도 didSet, willSet 설정 가능&lt;/li&gt;&lt;li&gt;어떤 프로퍼티의 옵저버 안에서 그 프로퍼티의 값을 변경하는 경우에는 스위프트가 다시 옵저버를 호출하지 않음&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/8956090518407445477/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=8956090518407445477' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/8956090518407445477'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/8956090518407445477'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/9-property.html' title='[스위프트 대충보기] 9. 프로퍼티(property)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-2692574469855111274</id><published>2014-06-09T00:36:00.001+10:00</published><updated>2014-06-09T00:37:00.258+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="class"/><category scheme="http://www.blogger.com/atom/ns#" term="struct"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="구조체"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="클래스"/><title type='text'>[스위프트 대충보기] 8. 클래스(class)와 구조체(structure)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-8-클래스class와-구조체structure&quot;&gt;[스위프트 대충보기] 8. 클래스(class)와 구조체(structure)&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;클래스/구조체: 프로그램을 구축할 때 범용으로 유연하게 사용할 수 있는 프로그램 구성 요소&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;클래스와-구조체-공통점&quot;&gt;클래스와 구조체 공통점&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;안에 값을 저정할 프로퍼티(property)를 정의할 수 있다&lt;/li&gt;&lt;li&gt;안에 메서드를 정의할 수 있다&lt;/li&gt;&lt;li&gt;[]를 사용해 첨자(subscript) 문법으로 내부의 값을 액세스할 수 있는 첨자를 정의할 수 있다&lt;/li&gt;&lt;li&gt;초기 상태 설정을 위한 초기화 함수(initializer)를 정의할 수 있다&lt;/li&gt;&lt;li&gt;클래스/구조체 구현을 확장할 수 있다&lt;/li&gt;&lt;li&gt;어떤 조건의 기능을 제공하기 위한 프로토콜을 (conform) 만족시킬(conform) 수 있다&lt;/li&gt;&lt;li&gt;클래스만 더 가지는 특징&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;상속을 통해 다른 클래스의 특성을 이어받을 수 있다&lt;/li&gt;&lt;li&gt;타입 캐스팅을 통해 실행 시점에 클래스 인스턴스의 타입을 해석하고 검사할 수 있다&lt;/li&gt;&lt;li&gt;해제함수(deinitializer)를 사용해 사용한 자원을 반환할 수 있다&lt;/li&gt;&lt;li&gt;참조 카운팅을 통해 한 클래스 인스턴스를 여러 군데에서 참조(사용)할 수 있다&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;클래스구조체-정의하기&quot;&gt;클래스/구조체 정의하기&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;클래스 정의하기: class 이름 { … }&lt;/li&gt;&lt;li&gt;구조체 정의하기: struct 이름 { … }&lt;/li&gt;&lt;li&gt;클래스/구조체를 정의하면 새로운 타입을 정의하는 것이다&lt;/li&gt;&lt;li&gt;관습적으로 타입 이름에는 대문자 낙타등표기법(UpperCamelCase)를 사용한다. 클래스/구조체 안의 프로퍼티나 메서드는 소문자 낙타등표기법(lowerCamelCase)를 사용한다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    struct Resolution {&lt;br /&gt;        var width = 0&lt;br /&gt;        var height = 0&lt;br /&gt;    }&lt;br /&gt;    class VideoMode {&lt;br /&gt;        var resolution = Resolution()&lt;br /&gt;        var interlaced = false&lt;br /&gt;        var frameRate = 0.0&lt;br /&gt;        var name: String?&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;인스턴스-생성-및-프로퍼티-액세스&quot;&gt;인스턴스 생성 및 프로퍼티 액세스&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;인스턴스 생성: 타입이름() 형태로 생성한다&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    let someResolution = Resolution()&lt;br /&gt;    let someVideoMode = VideoMode()&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;프로퍼티 액세스: 인스턴스이름.프로퍼티이름&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    println(&quot;resolution=\(someResolution.width)&quot;)&lt;br /&gt;    someVideoMode.resolution.width = 1280&lt;br /&gt;    println(&quot;The width of someVideoMode is now \(someVideoMode.resolution.width)&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;구조체의 경우 디폴트 초기화 함수로 멤버별 초기화(memberwise initializer)를 자동 제공한다. 클래스의 경우 그런거 없다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    let vga = Resolution(width: 640, height: 480)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;구조체나 열겨형은 값 타입(value type)이다. 값 타입은 호출, 대입 등이 일어날 때 복사를 한다는 뜻이다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let hd = Resolution(width: 1920, height: 1080)&lt;br /&gt;var cinema = hd&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;위 예에서, cinema는 hd와 같은 인스턴스를 가리키는 것이 아니고, 내용을 복사한 새 인스턴스를 만들어 가리킨다. 따라서 cinema의 프로퍼티를 변경해도 hd에는 영향을 끼치지 못한다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;클래스는 참조 타입(reference type)이다. 따라서, 대입시 참조(주소라고 생각하면 됨)가 복사된다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let tenEighty = VideoMode()&lt;br /&gt;tenEighty.resolution = hd&lt;br /&gt;tenEighty.interlaced = true&lt;br /&gt;tenEighty.name = &quot;1080i&quot;&lt;br /&gt;tenEighty.frameRate = 25.0&lt;br /&gt;// alsoTenEighty는 tenEighty랑 같은 인스턴스를 가리킨다&lt;br /&gt;let alsoTenEighty = tenEighty&lt;br /&gt;alsoTenEighty.frameRate = 30.0&lt;br /&gt;// 따라서 tenEighty의 프로퍼티도 값이 30.0으로 바뀐다&lt;br /&gt;println(&quot;The frameRate property of tenEighty is now \(tenEighty.frameRate)&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;식별-연산&quot;&gt;식별 연산&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;식별(identity) 연산: 두 변수가 같은 인스턴스를 가리키는지 비교하는 연산&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;===, !===&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;두 변수/상수가 동일한 것(identity)과 같은 것(equality)은 다르다. 동일한 것은 대상 객체(참조 대상 또는 번지)가 같다는 뜻이고, 같은 것은 의미적으로 둘이 같다는 뜻이다.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;언제-사용할-것인가&quot;&gt;언제 사용할 것인가?&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;언제 클래스를 쓰고 언제 구조체를 쓰나?&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;기본적으로, 클래스는 참조타입, 구조체는 값 타입이란 것에 착안할 것&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;구조체는 간단한 데이터 값들을 한데 묶어서 사용하는 경우를 주로 다룬다.&lt;/li&gt;&lt;li&gt;전체 덩어리 크기가 작은 경우, 복사를 통해 전달해도 좋은 경우 구조체를 쓴다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;구조체는 기존 타입의 특성을 상속할 필요가 없다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;구조체를 쓰는게 좋은 경우(예제): “The C++ 프로그래밍 언어”의 10장 3절(3판기준)에서 이야기하듯, 어떤 프로그래밍 언어의 원시 타입(primitive type)과 다름없이 사용 가능한 작은 구체적 타입(small concrete type)을 목적으로 할 때 사용하면 좋음(물론 상속할 필요가 없는 경우에 구조체를 사용)&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;너비, 높이를 표현하는 기하학적 모양을 처리할 경우&lt;/li&gt;&lt;li&gt;시작값, 증분, 길이 등으로 순열을 표현할 경우&lt;/li&gt;&lt;li&gt;3차원 좌표 시스템의 각 좌표&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;컬렉션-타입의-대입과-복사&quot;&gt;컬렉션 타입의 대입과 복사&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Array와 Dictionary는 구조체임&lt;/li&gt;&lt;li&gt;하지만 배열은 딕셔너리나 다른 구조체와 다름&lt;/li&gt;&lt;li&gt;또한, Array와 NSArray, NSDictionary도 다름. NSArray, NSDictionary는 참조 타입임&lt;/li&gt;&lt;li&gt;의미상으로는 복사연산이지만 스위프트는 내부적으로는 복사가 꼭 필요할 때만 복사를 수행함(사족: copy on write등을 사용?)&lt;/li&gt;&lt;li&gt;딕셔너리 복사: &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;딕셔너리를 변수나 상수에 대입하거나 인자로 함수/메서드에 넘기면 그 딕셔너리를 복사함. 키/값들도 복사함. 물론 키나 값이 참조타입이면 참조만 복사함. &lt;br /&gt;  &lt;pre&gt;&lt;code&gt;var ages = [&quot;Peter&quot;: 23, &quot;Wei&quot;: 35, &quot;Anish&quot;: 65, &quot;Katya&quot;: 19]&lt;br /&gt;var copiedAges = ages&lt;br /&gt;copiedAges[&quot;Peter&quot;] = 24&lt;br /&gt;println(ages[&quot;Peter&quot;]) // &quot;23&quot; 출력&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;배열 복사: 특이함!&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;기존 배열을 다른 변수나 상수에 대입하면 참조를 복사하는 셈임. 한쪽의 변경사항(원소 변경)을 다른 참조에서도 관찰 가능&lt;/li&gt;&lt;li&gt;배열의 길이를 바꾸는 연산을 수행할 때 배열을 두 벌로 분리함. 즉, 원소를 삭제하거나, 일부분을 치환하거나 하면 그때 복사가 일어남. 이때는 딕셔너리와 마찬가지로 원소가 값 타입이면 원소를 전체 복사, 원소가 참조 타입이면 참조를 복사함&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;var a = [1, 2, 3]&lt;br /&gt;var b = a&lt;br /&gt;var c = a&lt;br /&gt;println(a[0]) // 1&lt;br /&gt;println(b[0]) // 1&lt;br /&gt;println(c[0]) // 1&lt;br /&gt;a[0] = 42&lt;br /&gt;println(a[0]) // 42&lt;br /&gt;println(b[0]) // 42&lt;br /&gt;println(c[0]) // 42&lt;br /&gt;a.append(4)&lt;br /&gt;a[0] = 777&lt;br /&gt;println(a[0]) // 777&lt;br /&gt;println(b[0]) // 42&lt;br /&gt;println(c[0]) // 42&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;별도의 배열 복사본을 확보한 다음 무언가를 실행하고 싶은 경우가 있을 것임. 그럴때는 unshare()를 사용&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    // 위의 배열 예제에서 이어서...&lt;br /&gt;    b.unshare()&lt;br /&gt;    b[0] = -105&lt;br /&gt;    println(a[0]) // 777&lt;br /&gt;    println(b[0]) // -105&lt;br /&gt;    println(c[0]) // 42&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;배열 비교시 ===를 사용하면 두 배열이 메모리상에서 동일한 인스턴스인지를 비교&lt;/li&gt;&lt;li&gt;원소가 같은지 알고 싶다면, 첨자에 …나 ..를 써서 부분배열을 비교 하면 됨&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    if b[0...1] === b[0...1] {&lt;br /&gt;        println(&quot;These two subarrays share the same elements.&quot;)&lt;br /&gt;    } else {&lt;br /&gt;        println(&quot;These two subarrays do not share the same elements.&quot;)&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;강제복사: copy() 메서드 사용. 얕은 복사(shallow copy)를 수행함.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    var names = [&quot;Mohsen&quot;, &quot;Hilary&quot;, &quot;Justyn&quot;, &quot;Amy&quot;, &quot;Rich&quot;, &quot;Graham&quot;, &quot;Vic&quot;]&lt;br /&gt;    var copiedNames = names.copy()&lt;br /&gt;    copiedNames[0] = &quot;Mo&quot;&lt;br /&gt;    println(names[0]) // names와 copiedNames는 무관하기 때문에, Mohsen을 출력&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;copy()는 무조건 복사를 수행하고, unshare()는 꼭 필요할 때까지 최대한 복사를 미룬다.&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/2692574469855111274/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=2692574469855111274' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2692574469855111274'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2692574469855111274'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/8-class-structure.html' title='[스위프트 대충보기] 8. 클래스(class)와 구조체(structure)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-1853634233400128488</id><published>2014-06-09T00:31:00.001+10:00</published><updated>2014-06-09T00:32:50.572+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="enumeration"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="열거형"/><title type='text'>[스위프트 대충보기] 7. 열거형(enumeration)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-7-열거형enumeration&quot;&gt;[스위프트 대충보기] 7. 열거형(enumeration)&lt;/h1&gt;&lt;h2 id=&quot;열거형-기초&quot;&gt;열거형 기초&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;열거형: 기본적으로는 식별자들을 한 타입으로 사용하고 싶을 때 이넘 타입을 선언&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;enum CompassPoint {&lt;br /&gt;    case North&lt;br /&gt;    case South&lt;br /&gt;    case East&lt;br /&gt;    case West&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;여러줄로도, 한줄로도 쓸 수 있음&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;enum CompassPoint {&lt;br /&gt;    case North, South, East, West&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;값은 이름.케이스이름으로 사용. 타입은 이름이 타입이 됨&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;var direction = CompassPoint.North // direction은 CompassPoint타입&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;변수 타입이 정해지면, 대입시 타입이 분명하기 때문에 굳이 열거형 이름을 적을 필요가 없음. 다만 열거값임을 표현하기 위해 &lt;code&gt;.&lt;/code&gt;는 앞에 찍어줌&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;direction = .East&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;switch&lt;/code&gt; 문으로 매치 가능&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let directionToHead2:CompassPoint = .North&lt;br /&gt;switch directionToHead2 {&lt;br /&gt;    case .North:&lt;br /&gt;        println(&quot;Lots of planets have a north&quot;)&lt;br /&gt;    case .South:&lt;br /&gt;        println(&quot;Watch out for penguins&quot;)&lt;br /&gt;    case .East:&lt;br /&gt;        println(&quot;Where the sun rises&quot;)&lt;br /&gt;    case .West:&lt;br /&gt;        println(&quot;Where the skies are blue&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;이넘의 &lt;code&gt;case&lt;/code&gt;에 값을 연결할수 있음(연관값, associated value라 부름)&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;enum Barcode {&lt;br /&gt;    case UPCA(Int, Int, Int)&lt;br /&gt;    case QRCode(String)&lt;br /&gt;}&lt;br /&gt;var productCode = Barcode.UPCA(8, 85909_51226,3)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;switch&lt;/code&gt;로 매치시 &lt;code&gt;case&lt;/code&gt; 이름을 사용해 각 성분을 분리해 낼 수 있음&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;switch productBarcode {&lt;br /&gt;    case .UPCA(let numberSystem, let identifier, let check):&lt;br /&gt;        println(&quot;UPC-A with value of \(numberSystem), \(identifier), \(check).&quot;)&lt;br /&gt;    case .QRCode(let productCode):&lt;br /&gt;        println(&quot;QR code with value of \(productCode).&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;열거형 뒤에 &lt;code&gt;:&lt;/code&gt;로 타입을 지정하고, 각 &lt;code&gt;case&lt;/code&gt; 식별자마다 기본값(로우(raw) 값)을 지정 가능. 로우값으로 지정가능한 타입은 문자열, 문자, 정수 또는 부동소수 타입 뿐임. 연관값은 &lt;code&gt;case&lt;/code&gt; 식별자마다 다 타입을 다르게 부여할 수 있고, 어떤 타입이건 가능하지만, 로우값은 그렇지 않음에 유의할 것.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;enum ASCIIControlCharacter: Character {&lt;br /&gt;    case Tab = &quot;\t&quot;&lt;br /&gt;    case LineFeed = &quot;\n&quot;&lt;br /&gt;    case CarriageReturn = &quot;\r&quot;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;로우값은 &lt;code&gt;toRaw&lt;/code&gt; 메서드로 얻을 수 있고, 거꾸로 &lt;code&gt;fromRow&lt;/code&gt; 메서드를 사용 하면 로우값에서 열거형 &lt;code&gt;case&lt;/code&gt; 식별자를 얻을 수 있음. &lt;code&gt;fromRow&lt;/code&gt;는 열거형? 타입(옵션타입)임&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let ascii = ASCIIControlCharacter.fromRaw(&quot;\r&quot;) // ASCIIControlCharacter? 타입&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;심심풀이: 이상한 expression 계산기&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;// 그냥 case안에 함수도 묶을 수 있나 보기 위해...&lt;br /&gt;enum Operator {&lt;br /&gt;    case ADD((Int,Int)-&amp;gt;Int)&lt;br /&gt;    case SUB((Int,Int)-&amp;gt;Int)&lt;br /&gt;    case MUL((Int,Int)-&amp;gt;Int)&lt;br /&gt;    case DIV((Int,Int)-&amp;gt;Int)&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;enum Expr {&lt;br /&gt;    case BINOP(Operator, Expr, Expr)&lt;br /&gt;    case NUMBER(Int)&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// 연산자를 잘 표현할 방법이...&lt;br /&gt;let ADDOP = Operator.ADD(+)&lt;br /&gt;let SUBOP = Operator.SUB(-)&lt;br /&gt;let MULOP = Operator.MUL(*)&lt;br /&gt;let DIVOP = Operator.DIV(/)&lt;br /&gt;&lt;br /&gt;func calc(e:Expr)-&amp;gt;Int {&lt;br /&gt;    switch(e) {&lt;br /&gt;        case BINOP(op, e1, e2):&lt;br /&gt;            switch(op) {&lt;br /&gt;                case ADD(f):&lt;br /&gt;                    return f(calc(e1), calc(e2))&lt;br /&gt;                case SUB(f):&lt;br /&gt;                    return f(calc(e1), calc(e2))&lt;br /&gt;                case MUL(f):&lt;br /&gt;                    return f(calc(e1), calc(e2))&lt;br /&gt;                case DIV(f):&lt;br /&gt;                    return f(calc(e1), calc(e2))&lt;br /&gt;            }&lt;br /&gt;        case NUMBER(v):&lt;br /&gt;            return v&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// (1*3) + (6/2)&lt;br /&gt;let testExp = Expr.BINOP(ADDOP,&lt;br /&gt;            Expr.BINOP(MULOP,.Number(1),.NUMBER(3)),&lt;br /&gt;            Expr.BINOP(DIVOP,.Number(6),.NUMBER(2))&lt;br /&gt;        )&lt;br /&gt;&lt;br /&gt;println(&quot;(1*3) + (6/2) = \(calc(testExp)))&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/1853634233400128488/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=1853634233400128488' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1853634233400128488'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1853634233400128488'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/7-enumeration.html' title='[스위프트 대충보기] 7. 열거형(enumeration)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-2714476305563505653</id><published>2014-06-09T00:22:00.001+10:00</published><updated>2014-06-09T00:23:06.994+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="anonymous function"/><category scheme="http://www.blogger.com/atom/ns#" term="capture"/><category scheme="http://www.blogger.com/atom/ns#" term="closure"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="무명함수"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="클로저"/><category scheme="http://www.blogger.com/atom/ns#" term="포획"/><title type='text'>[스위프트 대충보기] 6. 클로저</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-6-클로저closure&quot;&gt;[스위프트 대충보기] 6. 클로저(Closure)&lt;/h1&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;클로저&quot;&gt;클로저&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;클로저(closure)는 코드 안에서 여기저기 전달할 수 있고 사용할 수 있는 독립된 기능 블록이다. (흐미 이게 함수 정의랑 뭔 차이다냐?)&lt;/li&gt;&lt;li&gt;클로저는 자신이 정의되는 시점에 주변 환경(문맥, context)으로부터 여러 상수나 변수에 대한 참조를 잡아내서(capture) 저장한다&lt;/li&gt;&lt;li&gt;이렇게 문맥에서 참조를 잡아서 저장하는 과정을 클로징(closing)이라고 하고, 상수와 변수에 대해 그렇게 닫기 때문에 클로저(closure)라 부른다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;[사족: 굳이 따지자면 사실 클로저와 함수(내포함수나 무명함수)는 다르다. 클로저는 함수와 그 주변 환경에서 함수를 계산하는데 꼭 필요한 정보들을 묶어서 저장해 둔 덩어리를 부르는 것이다. 무명함수를 지원한다고 해도 클로저를 지원하지 않을 수 있고, 무명함수는 지원하지 않지만 클로저를 지원할 수는 있다. 그런 언어가 있는지는 잘 기억이 안나지만(왜냐하면 보통은 1등객체-무명함수-클로저를 언어에 세트로 넣곤 하니까). 하지만 그냥 혼용하곤 한다. 어차피 인간은 문맥에서 파악이 가능한 동물이니까.]&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;함수에서 언급한 내포 함수나 전역(global) 함수는 클로저의 특수한 경우이다. 차이를 보면 다음과 같다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;전역함수는 이름이 있고, 아무 값도 잡아두지 않는다. (잔소리: 전역변수는? 하고 생각하는 사람이 있을 지 모르겠지만, 전역변수가 왜 전역변수인가? 전역변수는 어디서든 액세스 가능하므로 굳이 잡아둘 이유가 없다.)&lt;/li&gt;&lt;li&gt;내포 함수는 이름이 있고, 자신을 포함하는 함수로 부터 값을 잡아둔다. (즉, 자신을 포함하는 함수에서 정의한 지역 변수나 자신을 포함하는 함수의 파라미터를 잡아둘 수 있다)&lt;/li&gt;&lt;li&gt;클로저 식은 가벼운 문법(lightweight syntax)으로 쓰여진 이름 없는 클로저로, 그 식이 들어있는 주변 문맥의 값(상수나 변수)을 잡아낼 수 있다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;클로저 식: &lt;code&gt;{ (매개변수들) -&amp;gt; 반환타입 in 본문 }&lt;/code&gt;&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let names = [&quot;Chris&quot;, &quot;Alex&quot;, &quot;Ewa&quot;, &quot;Barry&quot;, &quot;Daniella&quot;]&lt;br /&gt;let reversed = sort(names, { (s1: String, s2: String) -&amp;gt; Bool in return s1 &amp;gt; s2 })&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;스위프트는 클로저의 타입을 문맥으로부터 추론해 결정한다. 따라서, 위에서 &lt;code&gt;sort&lt;/code&gt;에 전달한 클로저에서 타입을 제고하고, 반환 타입을 제거한 다음, 인자 튜플 주변의 괄호도 제거할 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let reversed2 = sort(names, { s1, s2 in return s1 &amp;gt; s2 })&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;클로저-간단하게-쓰기&quot;&gt;클로저 간단하게 쓰기&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;클로저 본문의 문장이 오직 &lt;code&gt;return&lt;/code&gt; 밖에 없다면 &lt;code&gt;return&lt;/code&gt;을 적지 않고 식만 하나 적어도 그 식을 계산한 결과를 자동으로 반환해준다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let reversed3 = sort(names, { s1, s2 in s1 &amp;gt; s2 })&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;매개변수 이름을 사용하지 않고, 인자로 넘어오는 순서대로 &lt;span class=&quot;MathJax_Preview&quot;&gt;&lt;/span&gt;&lt;span aria-readonly=&quot;true&quot; class=&quot;MathJax&quot; id=&quot;MathJax-Element-23-Frame&quot; role=&quot;textbox&quot;&gt;&lt;nobr&gt;&lt;span class=&quot;math&quot; id=&quot;MathJax-Span-89&quot; style=&quot;display: inline-block; width: 0.974em;&quot;&gt;&lt;span style=&quot;display: inline-block; font-size: 125%; height: 0px; position: relative; width: 0.746em;&quot;&gt;&lt;span style=&quot;clip: rect(1.374em 1000.003em 2.574em -0.454em); left: 0.003em; position: absolute; top: -2.226em;&quot;&gt;&lt;span class=&quot;mrow&quot; id=&quot;MathJax-Span-90&quot;&gt;&lt;span class=&quot;mn&quot; id=&quot;MathJax-Span-91&quot; style=&quot;font-family: MathJax_Main;&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mo&quot; id=&quot;MathJax-Span-92&quot; style=&quot;font-family: MathJax_Main;&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display: inline-block; height: 2.231em; width: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;border-left-style: solid; border-left-width: 0.004em; display: inline-block; height: 1.218em; overflow: hidden; vertical-align: -0.282em; width: 0px;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/nobr&gt;&lt;/span&gt;&lt;script id=&quot;MathJax-Element-23&quot; type=&quot;math/tex&quot;&gt;0, &lt;/script&gt;1, …를 사용하면 in과 그 앞의 매개변수 목록도 없앨 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let reversed3 = sort(names, { $0 &amp;gt; $1 })&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;이렇게 두 인자를 받아서 연산자(&amp;gt;)에 넘기는 경우, &amp;gt; 자체가 저 클로저의 타입 (String, String) -&amp;gt; Bool 과 타입이 같다. 이런 경우 연산자를 바로 넘겨도 된다. (잡설: 함수 이름을 함수를 파라미터로 받는 함수에 넘길 수 있다면, 연산자를 넘기지 못할 이유도 딱히 없다.)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;클로저만-뒤로-빼기trailing-closure&quot;&gt;클로저만 뒤로 빼기(trailing closure)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;어떤 함수의 마지막 매개변수가 클로저인데, 그 함수에  넘길 클로저가 너무 길다면, 호출시 괄호 안에 클로저를 넣는 대신, 괄호를 닫은 뒤에 클로저를 붙일 수 있다. 이를 trailing closure라고 한다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func 클로저를받는함수(closure: () -&amp;gt; ()) { ... }&lt;br /&gt;클로저를받는함수({ ... }) // 클로저를 () 안에 넣기&lt;br /&gt;클로저를받는함수(){...} // 클로저를 () 다음에 넣기&lt;br /&gt;&lt;br /&gt;// 앞의 sort 예제를 더 깔끔하게 정리&lt;br /&gt;let reversed4 = sort(names) { $0 &amp;gt; $1 }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;클로저가 유일한 인자인 경우, trailing closure를 사용할 때 매개변수 목록의 ()를 생략 가능하다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;클로저를받는함수{...} // 유일한 인자로 클로저만 전달하는 경우&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;값-잡아내기&quot;&gt;값 잡아내기&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;값 잡아내기 예제&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func makeIncrementor(forIncrement amount: Int) -&amp;gt; () -&amp;gt; Int {&lt;br /&gt;    var runningTotal = 0&lt;br /&gt;    func incrementor() -&amp;gt; Int {&lt;br /&gt;        runningTotal += amount&lt;br /&gt;        return runningTotal&lt;br /&gt;    }&lt;br /&gt;    return incrementor&lt;br /&gt;}&lt;br /&gt;let incrementByTen = makeIncrementor(forIncrement: 10)&lt;br /&gt;let incrementBySeven = makeIncrementor(forIncrement: 7)&lt;br /&gt;incrementByTen() // 10 반환&lt;br /&gt;incrementBySeven() // 7 반환&lt;br /&gt;incrementByTen() // 20 반환&lt;br /&gt;incrementByTen() // 30 반환&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;위 예제에서 makeIncrementor를 매번 호출해 새로운 클로저를 생성할 때마다 새로 runningTotal 변수가 만들어지기 때문에, incrementByTen()과 incrementBySeven()은 각 클로저 내부의 runningTotal의 상태에 영향을 끼치지 못한다.&lt;/li&gt;&lt;li&gt;클로저는 참조 타입이다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;위 예에서처럼, incrementBySeven나 incrementByTen 자체는 상수(let으로 정의)였지만, 클로저에 잡혀있는 변수(runningTotal)는 호출할 때마다 변할 수 있다. 왜냐하면 incrementBySeven나 incrementByTen가 상수라서 가리키는 대상(참조)을 바꿀 수는 없지만, 그 대상 (클로저) 자체는 상태가 바뀔 수 있기 때문이다. &lt;/li&gt;&lt;li&gt;참조이기 때문에, 클로저를 다시 다른 상수나 변수에 대입하면, 같은 대상 클로저를 가리킨다.&lt;/li&gt;&lt;/ul&gt;let alsoIncrementByTen = incrementByTen &lt;br /&gt;alsoIncrementByTen() // 40 반환&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;감상: 역시나 무난</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/2714476305563505653/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=2714476305563505653' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2714476305563505653'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2714476305563505653'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/6.html' title='[스위프트 대충보기] 6. 클로저'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-6971511840947713910</id><published>2014-06-08T23:48:00.001+10:00</published><updated>2014-06-09T00:23:38.485+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="argument"/><category scheme="http://www.blogger.com/atom/ns#" term="external name"/><category scheme="http://www.blogger.com/atom/ns#" term="function"/><category scheme="http://www.blogger.com/atom/ns#" term="parameter"/><category scheme="http://www.blogger.com/atom/ns#" term="return type"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="내포함수"/><category scheme="http://www.blogger.com/atom/ns#" term="매개변수"/><category scheme="http://www.blogger.com/atom/ns#" term="반환타입"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="외부이름"/><category scheme="http://www.blogger.com/atom/ns#" term="인자"/><category scheme="http://www.blogger.com/atom/ns#" term="일등객체"/><category scheme="http://www.blogger.com/atom/ns#" term="파라미터"/><category scheme="http://www.blogger.com/atom/ns#" term="함수"/><title type='text'>[스위프트 대충보기] 5. 함수</title><content type='html'>[스위프트 대충보기] 5. 함수&lt;br /&gt;&lt;h1 id=&quot;함수-기초&quot;&gt;함수 기초&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;함수: 정해진 과업을 수행하는 독립적인 코드 덩어리로 함수에 이름을 부여해 두면, 나중에 이를 호출할 수 있다&lt;/li&gt;&lt;li&gt;함수 정의하기: &lt;code&gt;func 함수이름(매개변수이름: 매개변수타입) -&amp;gt; 반환타입 { 함수 본문 }&lt;/code&gt;&lt;/li&gt;&lt;li&gt;함수에서 값을 반환할 때는 return을 사용&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func sayHello(personName: String) -&amp;gt; String {&lt;br /&gt;    let greeting = &quot;Hello, &quot; + personName + &quot;!&quot;&lt;br /&gt;    return greeting&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;함수 호출하기: &lt;code&gt;함수이름(인자)&lt;/code&gt; &lt;code&gt;sayHello(&quot;예쁜이&quot;)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;함수 인자가 없으면 &lt;code&gt;()&lt;/code&gt;, 여럿 있으면 &lt;code&gt;(매개변수1:타입1, 매개변수2: 타입2)&lt;/code&gt; 식으로 &lt;code&gt;,&lt;/code&gt;로 구분&lt;/li&gt;&lt;li&gt;함수에 반환값이 없는 경우에는 반환 타입 부분(함수 인자 목록 다음의 &lt;code&gt;-&amp;gt; 반환타입&lt;/code&gt;)을 없앤다. 이경우 함수의 반환 타입은 &lt;code&gt;Void&lt;/code&gt;이며, &lt;code&gt;()&lt;/code&gt;라고 표현한다(빈 튜플).&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func sayGoodbye(personName: String) {&lt;br /&gt;    println(&quot;Goodbye, \(personName)!&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;함수가 값을 반환해도, 호출하는 쪽에서 이를 무시할 수 있다. 그렇지만 &lt;code&gt;Void&lt;/code&gt;를 반환하는 함수가 아닌 경우 반드시 값을 반환하는 &lt;code&gt;return&lt;/code&gt;문이 있어야만 한다.&lt;/li&gt;&lt;li&gt;여러 리턴 값을 반환하고 싶으면 튜플을 사용한다. 이때, 이름붙은 튜플을 사용하고 싶으면, 함수 리턴타입 부분에 명시하면 된다(!).&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func count(string: String) -&amp;gt; (vowels: Int, consonants: Int, others: Int) {&lt;br /&gt;    var v = 0, c = 0, o = 0&lt;br /&gt;    for character in string {&lt;br /&gt;        switch String(character).lowercaseString {&lt;br /&gt;        case &quot;a&quot;, &quot;e&quot;, &quot;i&quot;, &quot;o&quot;, &quot;u&quot;:&lt;br /&gt;            ++v&lt;br /&gt;        case &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;,&lt;br /&gt;        &quot;m&quot;, &quot;n&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;v&quot;, &quot;w&quot;, &lt;br /&gt;        &quot;x&quot;, &quot;y&quot;, &quot;z&quot;:&lt;br /&gt;            ++c&lt;br /&gt;        default:&lt;br /&gt;            ++o&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    return (v, c, o)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;튜플에서 이미 본대로, 위 함수의 리턴값은 각각 &lt;code&gt;.vowels&lt;/code&gt;, &lt;code&gt;.consonants&lt;/code&gt;, &lt;code&gt;.others&lt;/code&gt;로 액세스할 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let total = count(&quot;some arbitrary string!&quot;)&lt;br /&gt;println(&quot;\(total.vowels) vowels and \(total.consonants) consonants&quot;)&lt;br /&gt;// &quot;6 vowels and 13 consonants&quot; 출력&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;외부이름과-내부-이름&quot;&gt;외부이름과 내부 이름&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;objective C처럼 외부에서 호출시 매개변수 이름을 지정하게 하고 싶으면, 외부 이름을 지정해야 한다. &lt;code&gt;(외부이름 내부이름: 타입)&lt;/code&gt;과 같은 형태로 지정하며, 함수 내부에서는 내부이름으로 인자로 받은 값을 참조한다. 가능하면 외부이름을 지정하는걸 권장한다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func join(string s1: String, toString s2: String, withJoiner joiner: String)&lt;br /&gt;    -&amp;gt; String {&lt;br /&gt;        return s1 + joiner + s2&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;join(string: &quot;hello&quot;, toString: &quot;world&quot;, withJoiner: &quot;, &quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;매개변수의 외부이름을 따로 적지 않고, 내부이름 앞에 &lt;code&gt;#&lt;/code&gt;를 붙이면 내부이름과 외부이름을 같게 만들 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func containsCharacter(#string: String, #characterToFind: Character) -&amp;gt; Bool {&lt;br /&gt;    for character in string {&lt;br /&gt;        if character == characterToFind {&lt;br /&gt;            return true&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    return false&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;let containsAVee = containsCharacter(string: &quot;aardvark&quot;, characterToFind: &quot;v&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;함수 내부에서는 매개변수 이름을 자유롭게 사용 가능하다. 특별히 지정하지 않으면 매개변수는 상수이다. 내부에서 매개변수에 값을 대입할 수 없다.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;매개변수-디폴트-값-지정&quot;&gt;매개변수 디폴트 값 지정&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;디폴트 매개변수 값을 지정할 수 있다. 디폴트 값 지정은 매개변수의 맨 뒤에 있어야 한다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func join(string s1: String, toString s2: String,&lt;br /&gt;    withJoiner joiner: String = &quot; &quot;) -&amp;gt; String {&lt;br /&gt;        return s1 + joiner + s2&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;join(string: &quot;hello&quot;, toString: &quot;world&quot;) // &quot;hello-world&quot;&lt;br /&gt;join(string: &quot;hello&quot;, toString: &quot;world&quot;, withJoiner: &quot;-&quot;) // &quot;hello world&quot;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;디폴트 매개변수 값을 지정하는 경우 스위프트가 자동으로 해당 매개변수 이름을 외부 이름으로도 사용한다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func join(s1: String, s2: String, joiner: String = &quot; &quot;) -&amp;gt; String {&lt;br /&gt;    return s1 + joiner + s2&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;join(&quot;hello&quot;, &quot;world&quot;, joiner: &quot;-&quot;) // &quot;hello-world&quot;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;이 경우, 이 기능을 무력화시키려면 &lt;code&gt;_&lt;/code&gt;로 외부 이름을 적으면 강제로 외부이름이 없어진다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func join(s1: String, s2: String, _ joiner: String = &quot; &quot;) &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;가변길이-매개변수&quot;&gt;가변길이 매개변수&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;가변길이 매개변수(variadic parameter)도 지원한다. 가변길이 매개변수는 함수 매개변수 목록의 맨 뒤에 있어야 하며, 타입 뒤에 &lt;code&gt;...&lt;/code&gt;을 넣으면 된다. 함수 본문에는 &lt;code&gt;타입[]&lt;/code&gt; (즉, 타입이 원소인 배열)으로 전달받으므로 배열을 액세스하면 된다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;// 안돌려봤음. 오류 생기면 알아서 수정하삼.&lt;br /&gt;func sum(x:Double, y:Double) -&amp;gt; Double { return x + y }&lt;br /&gt;&lt;br /&gt;func arithmeticMean(numbers: Double...) -&amp;gt; Double {&lt;br /&gt;    val total = numbers.reduce(0, sum) // 심심하니 리듀스를...&lt;br /&gt;    return total / Double(numbers.count)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;가변길이 매개변수와 디폴트 값이 있는 매개변수가 함께 있는 함수는 맨 나중에 가변길이 매개변수, 그 바로 앞에 디폴트 매개변수 순으로 배치해야 한다. 즉, &lt;code&gt;func foo(s1: Int, s2: String, dfltArg: String = &quot; &quot;, arrArg: Int...) -&amp;gt; String&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;var-매개변수-inout-매개변수&quot;&gt;var 매개변수, inout 매개변수&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;기본적으로 함수 매개변수는 상수이며(본문 안에서 대입/변경 불가), 원하면 파라미터 이름 앞에 &lt;code&gt;var&lt;/code&gt;를 붙여서 변경 가능하게 바꿀 수 있음. 하지만, 변경 가능하다고 해도 함수 안에서만 작용함.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    // 잘못 만든 swap. 이런짓 하면 혼남&lt;br /&gt;    func swap(var x:Double, var y:Doube) {&lt;br /&gt;        let t = x&lt;br /&gt;        x = y&lt;br /&gt;        y = t&lt;br /&gt;    }&lt;br /&gt;    var w1 = 10, w2 = 20&lt;br /&gt;    println(&quot;w1=\(w1) w2=\(w2)&quot;)&lt;br /&gt;    swap(w1,w2)&lt;br /&gt;    println(&quot;w1=\(w1) w2=\(w2)&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;위 swap을 가능하게 하려면 매개변수 이름 앞에 &lt;code&gt;inout&lt;/code&gt;을 붙인다.&lt;/li&gt;&lt;li&gt;다만, &lt;code&gt;inout&lt;/code&gt; 매개변수에 값을 변경하기 위한 무언가를 넘기려면 &lt;code&gt;&amp;amp;&lt;/code&gt;를 앞에 붙여서, 그 값이 함수 실행 이후 변할 수 있음을 표시해야 한다. &lt;code&gt;inout&lt;/code&gt; 변수는 함수 리턴값과는 별개임에 유의하라.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    func swap(inout x:Double, inout y:Doube) {&lt;br /&gt;        let t = x&lt;br /&gt;        x = y&lt;br /&gt;        y = t&lt;br /&gt;    }&lt;br /&gt;    var w1 = 10, w2 = 20&lt;br /&gt;    println(&quot;w1=\(w1) w2=\(w2)&quot;)&lt;br /&gt;    swap(&amp;amp;w1,&amp;amp;w2)&lt;br /&gt;    println(&quot;w1=\(w1) w2=\(w2)&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;함수의-타입&quot;&gt;함수의 타입&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;함수의 타입은 &lt;code&gt;(매개변수타입들) -&amp;gt;&lt;/code&gt; 반환타입 이다. 다음 두 함수는 타입이 같다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    func addTwoInts(a: Int, b: Int) -&amp;gt; Int {&lt;br /&gt;        return a + b&lt;br /&gt;    }&lt;br /&gt;    func multiplyTwoInts(a: Int, b: Int) -&amp;gt; Int {&lt;br /&gt;        return a * b&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;매개변수가 없으면 &lt;code&gt;()&lt;/code&gt;, 반환값이 &lt;code&gt;Void&lt;/code&gt;면 반환값 부분이 &lt;code&gt;()&lt;/code&gt;이므로, 아무 인자도 안받고, 아무 반환값도 없는 함수의 타입은 &lt;code&gt;()-&amp;gt;()&lt;/code&gt;이다.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;함수-인자로-받기-함수-반환하기&quot;&gt;함수 인자로 받기, 함수 반환하기&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;함수는 1등객체이기 때문에, 함수를 &lt;code&gt;let&lt;/code&gt;이나 &lt;code&gt;var&lt;/code&gt;를 사용해 변수/상수에 대입 가능하다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;var mathFunction: (Int, Int) -&amp;gt; Int = addTwoInts&lt;br /&gt;println(&quot;10+20 = \(mathFunction(10,20))&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;1등객체니까 당연히 매개변수로 전달할 수도 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;func reduceIntArrayByIteration(a0:Int, arr: Int[], f: (Int,Int)-&amp;gt;Int) -&amp;gt; Int {&lt;br /&gt;    var result = a0&lt;br /&gt;    for x in arr {&lt;br /&gt;        result = f(result, x)&lt;br /&gt;    }&lt;br /&gt;    return result&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;당연히 함수를 반환할 수도 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    func stepForward(input: Int) -&amp;gt; Int { return input + 1 }&lt;br /&gt;    func stepBackward(input: Int) -&amp;gt; Int { return input - 1 }&lt;br /&gt;    func chooseStepFunction(backwards: Bool) -&amp;gt; (Int) -&amp;gt; Int {&lt;br /&gt;        return backwards ? stepBackward : stepForward&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;함수를 내포시킬 수도 있다. 위 chooseStepFunction 다음과 같이 바꿀 수 있다.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    func chooseStepFunction(backwards: Bool) -&amp;gt; (Int) -&amp;gt; Int {&lt;br /&gt;        func stepForward(input: Int) -&amp;gt; Int { return input + 1 }&lt;br /&gt;        func stepBackward(input: Int) -&amp;gt; Int { return input - 1 }&lt;br /&gt;        return backwards ? stepBackward : stepForward&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;감상: 할말 없음. 당연하지.. 그렇지.. 하고 넘어가게 해준게 스위프트의 장점인듯…</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6971511840947713910/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6971511840947713910' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6971511840947713910'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6971511840947713910'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/5.html' title='[스위프트 대충보기] 5. 함수'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-1225233908095217399</id><published>2014-06-08T23:23:00.001+10:00</published><updated>2014-06-09T00:24:09.754+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="array"/><category scheme="http://www.blogger.com/atom/ns#" term="dictionary"/><category scheme="http://www.blogger.com/atom/ns#" term="map"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="딕셔너리"/><category scheme="http://www.blogger.com/atom/ns#" term="맵"/><category scheme="http://www.blogger.com/atom/ns#" term="배열"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><title type='text'>[스위프트 대충보기] 4. 제어 흐름? 흐름 제어?(control flow)</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-4-제어-흐름-흐름-제어control-flow&quot;&gt;[스위프트 대충보기] 4. 제어 흐름? 흐름 제어?(control flow)&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;C 비슷한 흐름제어 제공&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;루프&quot;&gt;루프&lt;/h2&gt;&lt;h3 id=&quot;for-루프&quot;&gt;for 루프&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;for-in&lt;/code&gt; 루프: 컬렉션에 대해 이터레이션&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    for index in 1...5 {&lt;br /&gt;        println(&quot;\(index) times 5 is \(index * 5)&quot;)&lt;br /&gt;    } // 여기서 index는 {} 안에서는 상수임&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;range사용시 인덱스가 필요 없으면 _로 무시 가능&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    // 간단 피보나치 수열 출력&lt;br /&gt;    var sum1=1, sum2=0&lt;br /&gt;&lt;br /&gt;    for _ in 1...10 { &lt;br /&gt;      sum1 += sum2&lt;br /&gt;      sum2 = sum1&lt;br /&gt;      println(&quot;\(sum1)&quot;)&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;딕셔너리, 배열, 문자열에 대한 이터레이션 : 컬렉션 부분 참조&lt;/li&gt;&lt;li&gt;&lt;code&gt;for-조건-증분&lt;/code&gt; 루프: C의 for루프 (근데 왜 for-초기화-조건-증분이 아니고 for-조건-루프인거야?)&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    for var index = 0; index &amp;lt; 3; ++index {&lt;br /&gt;        println(&quot;index is \(index)&quot;)&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;for 초기화; 조건; 증분 { 본체 }&lt;/code&gt; 루프는 다음 &lt;code&gt;while&lt;/code&gt; 루프의 축약형&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    초기화&lt;br /&gt;    while 조건 {&lt;br /&gt;      본체&lt;br /&gt;      증분&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;while루프&quot;&gt;while루프&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;while&lt;/code&gt; 루프: 일반적인 while과 차이 없음&lt;/li&gt;&lt;li&gt;&lt;code&gt;do while&lt;/code&gt; 루프: 일반적인 do-while과 차이 없음&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;조건식&quot;&gt;조건식&lt;/h2&gt;&lt;h3 id=&quot;ifelse&quot;&gt;if/else&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;if 조건 { 문장들 } [ else { 문장들 } ]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;switchcase&quot;&gt;switch/case&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;switch 대상 { case 값: 문장 default: 문장 }&lt;/code&gt;&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;반드시 모든 스위치의 &lt;code&gt;case&lt;/code&gt;는 모든 경우를 커버해야 함!(exhaustive)&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;exhaustive하지 않으면 무조건 default를 지정해야함(!).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;case &#39;a&#39;:&lt;/code&gt;나 &lt;code&gt;default:&lt;/code&gt; 한 다음에 아무 문장도 안쓸 수는 없다(!)&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;안쓰면 컴파일 오류가 난다. &lt;/li&gt;&lt;li&gt;매치는 하되 실행할 것이 없으면, &lt;code&gt;break&lt;/code&gt;를 바로 넣어서 흐름을 스위치문장 다음으로 넘겨라&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;기본적으로는 fallthrough(&lt;code&gt;case&lt;/code&gt;문이 자동으로 다음번 &lt;code&gt;case&lt;/code&gt;문으로 진행하는 것)가 안된다. &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;따라서, 중간에 더 빨리 빠져나오고 싶은 경우이거나, 아무 일도 안하는 &lt;code&gt;case&lt;/code&gt;가 아니면 굳이 &lt;code&gt;break&lt;/code&gt;를 쓸 필요가 없다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;case&lt;/code&gt;문에서 조건부분이 단순한 상수 말고 ,로 구분해 여러 상수들을 나열해 매치하거나, 복잡한 패턴도 기술할 수 있다.&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;범위 매칭: &lt;code&gt;case 0..9: 실행할내용&lt;/code&gt;  또는 &lt;code&gt;case 10...20: 실행할 내용&lt;/code&gt;&lt;/li&gt;&lt;li&gt;튜플매칭: 튜플과 매칭 가능, 튜플 각 원소를 범위와 매치 가능&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let somePoint = (1, 1)&lt;br /&gt;switch somePoint {&lt;br /&gt;case (0, 0):&lt;br /&gt;    println(&quot;(0, 0) is at the origin&quot;)&lt;br /&gt;case (_, 0):&lt;br /&gt;    println(&quot;(\(somePoint.0), 0) is on the x-axis&quot;)&lt;br /&gt;case (0, _):&lt;br /&gt;    println(&quot;(0, \(somePoint.1)) is on the y-axis&quot;)&lt;br /&gt;case (-2...2, -2...2):&lt;br /&gt;    println(&quot;(\(somePoint.0), \(somePoint.1)) is inside the box&quot;)&lt;br /&gt;default:&lt;br /&gt;    println(&quot;(\(somePoint.0), \(somePoint.1)) is outside of the box&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;값 바인딩: &lt;code&gt;case&lt;/code&gt;의 패턴 안에서 &lt;code&gt;let&lt;/code&gt;이나 &lt;code&gt;var&lt;/code&gt;로 변수/상수 바인딩 가능&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let anotherPoint = (2, 0)&lt;br /&gt;switch anotherPoint {&lt;br /&gt;    case (let x, 0):&lt;br /&gt;        println(&quot;on the x-axis with an x value of \(x)&quot;)&lt;br /&gt;    case (0, let y):&lt;br /&gt;        println(&quot;on the y-axis with a y value of \(y)&quot;)&lt;br /&gt;    case let (x, y):&lt;br /&gt;        println(&quot;somewhere else at (\(x), \(y))&quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;조건 사용: &lt;code&gt;case&lt;/code&gt;의 패턴 안에 &lt;code&gt;where&lt;/code&gt;을 사용해 조건 체크 가능&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    let yetAnotherPoint = (1, -1)&lt;br /&gt;    switch yetAnotherPoint {&lt;br /&gt;    case let (x, y) where x == y:&lt;br /&gt;        println(&quot;(\(x), \(y)) is on the line x == y&quot;)&lt;br /&gt;    case let (x, y) where x == -y:&lt;br /&gt;        println(&quot;(\(x), \(y)) is on the line x == -y&quot;)&lt;br /&gt;    case let (x, y):&lt;br /&gt;        println(&quot;(\(x), \(y)) is just some arbitrary point&quot;)&lt;br /&gt;    }&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;제어-이동control-transfer-명령&quot;&gt;제어 이동(control transfer) 명령&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;제어 이동 명령에는 &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;fallthrough&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;이 있음 (&lt;code&gt;return&lt;/code&gt;은 함수부분에서 설명)&lt;/li&gt;&lt;li&gt;&lt;code&gt;continue&lt;/code&gt;: 루프 맨 앞으로 제어를 넘김(증분 문장이 있는 경우에는 그 문장을 실행)&lt;/li&gt;&lt;li&gt;&lt;code&gt;break&lt;/code&gt;: 루프에서 제어를 빠져나옴&lt;/li&gt;&lt;li&gt;&lt;code&gt;fallthrough&lt;/code&gt;: &lt;code&gt;case&lt;/code&gt;에서 다음 &lt;code&gt;case&lt;/code&gt;로 계속 실행을 이어나가고 싶을 때 이를 명시함. &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;(주의: &lt;code&gt;fallthrough&lt;/code&gt;로 제어가 넘어갈때는 다음번 &lt;code&gt;case&lt;/code&gt;문을 체크하지 않고 그 안으로 실행이 넘어간다. 즉, C &lt;code&gt;switch/case&lt;/code&gt;에서의 동작과 같다)&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let integerToDescribe = 5&lt;br /&gt;var description = &quot;The number \(integerToDescribe) is&quot;&lt;br /&gt;switch integerToDescribe {&lt;br /&gt;case 2, 3, 5, 7, 11, 13, 17, 19:&lt;br /&gt;    description += &quot; a prime number, and also&quot;&lt;br /&gt;    fallthrough&lt;br /&gt;default:&lt;br /&gt;    description += &quot; an integer.&quot;&lt;br /&gt;}&lt;br /&gt;println(description)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;라벨label&quot;&gt;라벨(Label)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;라벨: &lt;code&gt;식별자:&lt;/code&gt; (콜론을 식별자 뒤에 붙임) 형태&lt;/li&gt;&lt;li&gt;라벨 붙은 문장: 문장 앞에 라벨을 붙이고, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;에서 라벨을 지정해 그리로 이동 가능&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;    let finalSquare = 25&lt;br /&gt;    var board = Int[](count: finalSquare + 1, repeatedValue: 0)&lt;br /&gt;    board[03] = +08; board[06] = +11; board[09] = +09; board[10] = +02&lt;br /&gt;    board[14] = -10; board[19] = -11; board[22] = -02; board[24] = -08&lt;br /&gt;    var square = 0&lt;br /&gt;    var diceRoll = 0&lt;br /&gt;&lt;br /&gt;    // 아래 gameLoop: 부분이 라벨임&lt;br /&gt;    gameLoop: while square != finalSquare {&lt;br /&gt;        if ++diceRoll == 7 { diceRoll = 1 }&lt;br /&gt;        switch square + diceRoll {&lt;br /&gt;        case finalSquare:&lt;br /&gt;            // diceRoll을 더하니 마지막 칸으로 이동함. 끝!&lt;br /&gt;            break gameLoop&lt;br /&gt;        case let newSquare where newSquare &amp;gt; finalSquare:&lt;br /&gt;            // diceRoll을 더하니 마지막 칸보다 더 뒤로 가버림. 다시던지기&lt;br /&gt;            continue gameLoop&lt;br /&gt;        default:&lt;br /&gt;            // 정상 이동. 보드 업데이트.&lt;br /&gt;            square += diceRoll&lt;br /&gt;            square += board[square]&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;    println(&quot;Game over!&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/1225233908095217399/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=1225233908095217399' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1225233908095217399'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/1225233908095217399'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/4-control-flow.html' title='[스위프트 대충보기] 4. 제어 흐름? 흐름 제어?(control flow)'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-2203568850771217589</id><published>2014-06-08T22:45:00.001+10:00</published><updated>2014-06-08T22:45:33.956+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="array"/><category scheme="http://www.blogger.com/atom/ns#" term="dictionary"/><category scheme="http://www.blogger.com/atom/ns#" term="map"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="딕셔너리"/><category scheme="http://www.blogger.com/atom/ns#" term="맵"/><category scheme="http://www.blogger.com/atom/ns#" term="배열"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><title type='text'>[스위프트 대충보기] 3. 컬렉션타입</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-3-컬렉션타입&quot;&gt;[스위프트 대충보기] 3. 컬렉션타입&lt;/h1&gt;&lt;h2 id=&quot;기본-소개&quot;&gt;기본 소개&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;배열(array)과 딕셔너리(dictionary)라는 두 컬렉션 제공(두개만? 아님! generic collection을 지원함. 배열과 딕셔너리도 역시 그 일부임)&lt;/li&gt;&lt;li&gt;배열: 같은 타입의 원소를 저장하는 순서가 있는(ordered) 컬렉션&lt;/li&gt;&lt;li&gt;딕셔너리: 키(key)와 값(value)의 대응 관계(association)를 순서 없이 저장한 컬렉션. 키는 한 딕셔너리 안에서 유일함.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;배열&quot;&gt;배열&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;배열은 &lt;code&gt;NSArray&lt;/code&gt;나 &lt;code&gt;NSMutableArray&lt;/code&gt; 클래스와 다름(원소 타입이 있다는 점에서)&lt;/li&gt;&lt;li&gt;배열 타입은 &lt;code&gt;Array&amp;lt;SomeType&amp;gt;&lt;/code&gt;이라고 쓰나, 짧게 &lt;code&gt;SomeType[]&lt;/code&gt;이라고도 쓸 수 있음&lt;/li&gt;&lt;li&gt;배열 리터럴: [원소1,원소2,…]  예: &lt;code&gt;let x = [1,2,3,4,5]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;배열-연산&quot;&gt;배열 연산&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;배열 참조: &lt;code&gt;x[0]&lt;/code&gt; 0부터 인덱스 시작&lt;/li&gt;&lt;li&gt;원소갯수: &lt;code&gt;x.count&lt;/code&gt;&lt;/li&gt;&lt;li&gt;빈 배열여부 확인: &lt;code&gt;x.isEmpty&lt;/code&gt;&lt;/li&gt;&lt;li&gt;원소추가: &lt;code&gt;x.append&lt;/code&gt;&lt;/li&gt;&lt;li&gt;배열 붙이기: &lt;code&gt;x += [6,7,8]&lt;/code&gt;&lt;/li&gt;&lt;li&gt;원소변경: &lt;code&gt;x[0] = 0&lt;/code&gt;&lt;/li&gt;&lt;li&gt;원소변경(범위지정): &lt;code&gt;x[0...2] = [10,11]&lt;/code&gt; (3개의 원소를 2개로 대치했으므로 길이가 1 줄어듦)&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;변경이나 범위지정은 기존 인덱스 범위를 넘어서는 부분에 무언가를 넣는 용도로는 사용 불가. 예: x.count가 5인 배열에 x[5] = 10이라고 대입 불가.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;원소 삽입: &lt;code&gt;x.insert(0, atIndex: 0)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;원소 삭제: &lt;code&gt;x.removeAtIndex(1)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;마지막 원소 삭제: &lt;code&gt;x.removeLast&lt;/code&gt;&lt;/li&gt;&lt;li&gt;배열 이터레이션: &lt;code&gt;for i in x { ... }&lt;/code&gt;&lt;/li&gt;&lt;li&gt;배열 이터레이션(인덱스까지): &lt;br /&gt;  &lt;pre&gt;&lt;code&gt;// global enumerate 함수 사용&lt;br /&gt;for (index, value) in enumerate(x) { ... }  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;배열 생성: &lt;code&gt;var foo = Int[]()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;배열을 비우려면, &lt;code&gt;x = []&lt;/code&gt; 라고 해서 비울 수 있음(길이가 0인 배열이 됨. 타입은 그대로)&lt;/li&gt;&lt;li&gt;같은 원소를 반복해 초기화: &lt;code&gt;var threeDoubles = Double[](count: 3, repeatedValue: 0.0)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;배열 concatenation : &lt;code&gt;+&lt;/code&gt; 사용. &lt;code&gt;arr1 + arr2&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;딕셔너리&quot;&gt;딕셔너리&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;딕셔너리 : 역시 &lt;code&gt;NSDictionary&lt;/code&gt;, &lt;code&gt;NSMutableDictionary&lt;/code&gt; 와 달리 키, 값의 타입을 지정해야만 함&lt;/li&gt;&lt;li&gt;딕셔너리 타입은 &lt;code&gt;Dictionary&amp;lt;KeyType, ValueType&amp;gt;&lt;/code&gt;&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;KeyType&lt;/code&gt;은 해시가능한 타입이어야 함. 예: 기본타입들(&lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Bool&lt;/code&gt;), 열거형(enumuration type)… &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;딕셔너리 리터럴: &lt;code&gt;[ k1: v1, ..., kn: vn]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;딕셔너리-연산&quot;&gt;딕셔너리 연산&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;딕셔너리 원소갯수: &lt;code&gt;x.count&lt;/code&gt;&lt;/li&gt;&lt;li&gt;딕셔너리 원소 추가(변경) 1: &lt;code&gt;x[newKey] = newValue&lt;/code&gt;&lt;/li&gt;&lt;li&gt;딕셔너리 원소 추가(변경) 2: &lt;code&gt;x.updateValue(newValue, forKey: oldKey)&lt;/code&gt; &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;옛날 값을 &lt;code&gt;ValueType?&lt;/code&gt; 타입(옵션타입임!)으로 반환(즉, 없었다면 &lt;code&gt;null&lt;/code&gt;이고, 옛날 값이 있었다면 반환값 뒤에 !를 붙여서 원소를 찾거나 &lt;code&gt;if let v = ...&lt;/code&gt; 바인딩으로 원소를 찾아 처리 가능)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;딕셔너리 검색: &lt;code&gt;x[keyVal]&lt;/code&gt; : 역시 &lt;code&gt;ValueType?&lt;/code&gt; 타입임&lt;/li&gt;&lt;li&gt;딕셔너리 원소삭제 1: &lt;code&gt;x[keyVal] = nil&lt;/code&gt;&lt;/li&gt;&lt;li&gt;딕셔너리 원소삭제 2: &lt;code&gt;x.removeValueForKey(kevVal)&lt;/code&gt; &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;역시 기존 값을 &lt;code&gt;ValueType?&lt;/code&gt; 타입으로 리턴함&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;이터레이션: &lt;code&gt;for (key, value) in dict { ... }&lt;/code&gt;&lt;/li&gt;&lt;li&gt;키만 이터레이션: &lt;code&gt;for key in dict.keys { ... }&lt;/code&gt;&lt;/li&gt;&lt;li&gt;값만 이터레이션: &lt;code&gt;for value in dict.values { ... }&lt;/code&gt;&lt;/li&gt;&lt;li&gt;키만 배열로 가져오기: &lt;code&gt;Array(dict.keys)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;값만 배열로 가져오기: &lt;code&gt;Array(dict.values)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;주의: 이터레이션시 순서는 정해져 있지 않음&lt;/li&gt;&lt;li&gt;빈 딕셔너리 생성:  &lt;code&gt;Dictionary&amp;lt;Int, String&amp;gt;()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;기존 딕셔너리 모든 원소 삭제: &lt;code&gt;namesOfIntegers = [:]&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;컬렉션의-변경가능성mutability&quot;&gt;컬렉션의 변경가능성(mutability)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;var&lt;/code&gt;로 배열이나 딕셔너리를 만들면 변경가능 컬렉션이어서 컬렉션의 크기를 변경할 수 있음(즉, 원소를 자유롭게 추가 삭제 가능)&lt;/li&gt;&lt;li&gt;&lt;code&gt;let&lt;/code&gt;으로 배열이나 딕셔너리를 만들면, 변경불가능 컬렉션이기 때문에, 크기를 변경할 수는 없음(즉, 원소를 추가하거나 삭제할 수 없음)&lt;/li&gt;&lt;li&gt;(&lt;code&gt;let&lt;/code&gt;으로 선언한) 상수 딕셔너리의 경우에는 원소 업데이트도 금지됨. 즉, &lt;code&gt;dict[&quot;key&quot;] = &quot;value&quot;&lt;/code&gt; 하면 컴파일 안됨.&lt;/li&gt;&lt;li&gt;상수 배열에서는 원소 삭제나 삽입, 추가는 안되지만, 어떤 인덱스에 해당하는 원소를 바꿔치는 것은 가능. 즉, &lt;code&gt;arr[0] = 10&lt;/code&gt; 같은게 가능(물론 &lt;code&gt;arr&lt;/code&gt;의 &lt;code&gt;count&lt;/code&gt;에 따라 다름)&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;감상: 뭐.. ^^ 있을게 있음. 별다른 것 없음&lt;br /&gt;다른 언어 쓰던 사용자들도 상당히 쉽게 스위프트 언어 자체는 접근 가능할듯. 물론 코코아를 얼마나 잘 사용할 수 있는가는 또 다른 문제임.</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/2203568850771217589/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=2203568850771217589' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2203568850771217589'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/2203568850771217589'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/3.html' title='[스위프트 대충보기] 3. 컬렉션타입'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-8341084116607695526</id><published>2014-06-08T22:34:00.001+10:00</published><updated>2014-06-08T22:34:37.540+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="문자"/><category scheme="http://www.blogger.com/atom/ns#" term="문자열"/><category scheme="http://www.blogger.com/atom/ns#" term="문자열 함수"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><title type='text'>[스위프트 대충보기] 2. 문자열/문자</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-2-문자열문자&quot;&gt;[스위프트 대충보기] 2. 문자열/문자&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;문자열: &lt;code&gt;String&lt;/code&gt; 타입. &lt;code&gt;Character&lt;/code&gt; 타입의 컬렉션&lt;/li&gt;&lt;li&gt;유니코드&lt;/li&gt;&lt;li&gt;각 문자열은 인코딩에 무관한 유니코드 문자로 내부 구성하며, 필요에 따라 빠르게 여러 유니코드 표현을 만들어냄(뭐..그렇다네요..)&lt;/li&gt;&lt;li&gt;&lt;code&gt;NSString&lt;/code&gt;과(NS는 NextStep의 NS. 넷스케이프와는 관련 없음 ^^) 매끄럽게 연결(스칼라와 자바냐? 물론 안그랬다면 원성이 자자했겠지만). &lt;code&gt;NSString&lt;/code&gt; API 함수에 스위프트 문자열을 넘겨도 OK. 스위프트 스트링은 모든 &lt;code&gt;NSString&lt;/code&gt; 메서드를 지원&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;리터럴과-이스케이프&quot;&gt;리터럴과 이스케이프&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;스트링 리터럴: &lt;code&gt;&quot;당연히 큰따옴표사이에&quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;이스케이프: &lt;code&gt;\0&lt;/code&gt;, &lt;code&gt;\\&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\&quot;&lt;/code&gt;, &lt;code&gt;\&#39;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;8비트 유니코드: &lt;code&gt;\xnn&lt;/code&gt; (n:16진숫자 하나)&lt;/li&gt;&lt;li&gt;16비트 유니코드: &lt;code&gt;\unnnn&lt;/code&gt;&lt;/li&gt;&lt;li&gt;32비트 유니코드: &lt;code&gt;\Unnnnnnnn&lt;/code&gt;&lt;/li&gt;&lt;li&gt;빈 스트링: &lt;code&gt;&quot;&quot;&lt;/code&gt; 또는 &lt;code&gt;String()&lt;/code&gt; &lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;기본-문자열-연산&quot;&gt;기본 문자열 연산&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;str.isEmpty&lt;/code&gt; 로 비어있나 체크 가능&lt;/li&gt;&lt;li&gt;변수(var로 선언)인 스트링은 &lt;code&gt;+=&lt;/code&gt; 등으로 변경 가능, 상수(let으로 선언)인 스트링은 변경하면 컴파일타입 오류&lt;/li&gt;&lt;li&gt;문자열은 &lt;em&gt;값타입(Value Type)&lt;/em&gt;임: 즉, 기본적으로 문자열 전달시 복사에 의한 전달을 한다는 것에 유의. 따라서 함수에서 문자열을 받으면 그 문자열은 함수안에서만 쓰이는 복사본임. 물론 성능 문제가 있으므로, 컴파일러가 최적화해서 실제 복사가 꼭 필요할 때만 복사를 함.&lt;/li&gt;&lt;li&gt;&lt;code&gt;for c in &quot;문자열&quot; { println(c) }&lt;/code&gt; 처럼 문자열을 &lt;code&gt;Character&lt;/code&gt;의 시퀀스로 사용 가능&lt;/li&gt;&lt;li&gt;한문자짜리 문자열을 &lt;code&gt;Character&lt;/code&gt; 타입 변수에 대입할 수 있음. &lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let dot: Character = &quot;.&quot;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;문자열 길이는 &lt;code&gt;countElements&lt;/code&gt; 를 사용해 셀 수 있음.&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let helloWorld = &quot;헬로월드&quot;&lt;br /&gt;println(&quot;\&#39;헬로월드\&#39;는 = \(countElements(helloWorld)) 글자임.&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;(주의) 유니코드 특성상, 정확한 길이를 알기 위해서는 모든 문자를 이터레이션해야 하므로 긴 문자열을 시간이 오래걸릴 수 있음. 마찬가지로 &lt;code&gt;NSString&lt;/code&gt;의 &lt;code&gt;length&lt;/code&gt;(UTF-16으로 인코딩한 스트링의 16비트 문자 개수)와 스위프트 문자열의 &lt;code&gt;countElements&lt;/code&gt;의 결과도 다를 수 있음&lt;/li&gt;&lt;li&gt;&lt;code&gt;+&lt;/code&gt;로 &lt;code&gt;문자열+문자열&lt;/code&gt;, &lt;code&gt;문자열+문자&lt;/code&gt;, &lt;code&gt;문자+문자&lt;/code&gt;, &lt;code&gt;문자+문자열&lt;/code&gt; 붙이기(concatenation) 가능&lt;/li&gt;&lt;li&gt;인터폴레이션: &lt;code&gt;\()&lt;/code&gt;안에 식을 넣으면 됨. 다만 괄호 사이에 이스케이프 없는 큰따옴표(“)나 백슬래시(), 뉴라인문자(CR,LF)를 넣을 수 없음&lt;/li&gt;&lt;li&gt;문자열 비교는 &lt;code&gt;strVar1 == strVar2&lt;/code&gt; 과 같은 식으로 함&lt;/li&gt;&lt;li&gt;&lt;code&gt;hasPrefix&lt;/code&gt;, &lt;code&gt;hasSuffix&lt;/code&gt;&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;let x = &quot;프레픽스본문자열서픽스&quot;&lt;br /&gt;let y = &quot;프레픽스&quot;&lt;br /&gt;let z = &quot;서픽스&quot;&lt;br /&gt;&lt;br /&gt;x.hasPrefix(y) // true&lt;br /&gt;x.hasPrefix(z) // false&lt;br /&gt;x.hasSuffix(y) // false&lt;br /&gt;x.hasSuffix(z) // true&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;str.uppercaseString&lt;/code&gt;, &lt;code&gt;str.lowercaseString&lt;/code&gt; : 대문자화, 소문자화. 기존 문자열을 업데이트 하는게 아니라, 새 문자열 반환&lt;/li&gt;&lt;li&gt;유니코드 처리(제대로 설명하고 싶지만 빈칸이 부족… ^^)&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;&lt;code&gt;str.utf8&lt;/code&gt; : utf8&lt;/li&gt;&lt;li&gt;&lt;code&gt;str.utf16&lt;/code&gt; : utf16&lt;/li&gt;&lt;li&gt;&lt;code&gt;str.unicodeScalars&lt;/code&gt; : 21비트 유니코드 스칼라(&lt;code&gt;UnicodeScala&lt;/code&gt; 타입).     &lt;/li&gt;&lt;li&gt;&lt;code&gt;UnicodeScala&lt;/code&gt;에 있는 &lt;code&gt;value&lt;/code&gt;프로퍼티를 사용해 21비트 값을 읽을 수 있음(&lt;code&gt;UInt32&lt;/code&gt;)&lt;br /&gt;  &lt;pre&gt;&lt;code&gt;for scalar in dogString.unicodeScalars {&lt;br /&gt;    print(&quot;\(scalar.value) &quot;)&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;감상: 그냥그냥. 어차피 여기서도 그리 뭔가 딴짓을 할 여지는 적음. 유니코드는 편해 보이긴 함. 우리나라 같은 경우 EUC-KR처리가 문제인데 이건 결국 NSString에다가 구겨넣어서 다시 String으로 가져와야 할려나?</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/8341084116607695526/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=8341084116607695526' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/8341084116607695526'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/8341084116607695526'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/2.html' title='[스위프트 대충보기] 2. 문자열/문자'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-31528299.post-6410837137889743707</id><published>2014-06-08T22:25:00.001+10:00</published><updated>2014-06-08T22:26:48.820+10:00</updated><category scheme="http://www.blogger.com/atom/ns#" term="3항연산자"/><category scheme="http://www.blogger.com/atom/ns#" term="arithmetic operator"/><category scheme="http://www.blogger.com/atom/ns#" term="logical operator"/><category scheme="http://www.blogger.com/atom/ns#" term="operator"/><category scheme="http://www.blogger.com/atom/ns#" term="range operator"/><category scheme="http://www.blogger.com/atom/ns#" term="swift"/><category scheme="http://www.blogger.com/atom/ns#" term="ternary operator"/><category scheme="http://www.blogger.com/atom/ns#" term="논리연산자"/><category scheme="http://www.blogger.com/atom/ns#" term="범위연산자"/><category scheme="http://www.blogger.com/atom/ns#" term="산술연산자"/><category scheme="http://www.blogger.com/atom/ns#" term="스위프트"/><category scheme="http://www.blogger.com/atom/ns#" term="연산"/><category scheme="http://www.blogger.com/atom/ns#" term="연산자"/><title type='text'>[스위프트 대충보기] 1. 연산자</title><content type='html'>&lt;h1 id=&quot;스위프트-대충보기-1-연산자-기본&quot;&gt;[스위프트 대충보기] 1. 연산자 기본&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;C연산자는 대충 다 지원&lt;/li&gt;&lt;li&gt;=는 대입에만 쓰며, 값을 반환하지 않음 &lt;br /&gt;따라서, (if(a=b) {…} 금지)&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;산술연산&quot;&gt;산술연산&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;산술연산은 오버플로 금지. 오버플로 지원 연산자는 따로 도입 &lt;br /&gt;(&amp;amp;-,&amp;amp;+,&amp;amp;/,&amp;amp;*,&amp;amp;%)&lt;/li&gt;&lt;li&gt;% 의미를 정의:  &lt;br /&gt;a % b라고 할때,  &lt;br /&gt;a = b * (b와 곱했을 때 절대값이 a의 절대값보다 작은 몫) + 나머지.  &lt;br /&gt;b의 부호는 나머지의 부호에 영향을 못 끼침&lt;br /&gt;  &lt;ul&gt;&lt;li&gt;예1: -9%4 = (4*-2) + -1로 계산하지, (4*-3)+3으로 계산하지 않음. &lt;/li&gt;&lt;li&gt;예2: a%b = a%-b임&lt;/li&gt;&lt;li&gt;실수의 나머지도 지원 8%2.5 = 0.5&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;++i, –i : 증가,감소연산자(당연히 전위/후위 가능)&lt;/li&gt;&lt;li&gt;&lt;ul&gt;&lt;li&gt;: 단항 부호 연산자&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;+=, -=, /=, *= …&lt;/li&gt;&lt;li&gt;이진연산: ~, &amp;amp;, |, ^, &amp;lt;&amp;lt;, &amp;gt;&amp;gt;(시프트는 피연산자의 부호에 따라 동작이 다름) &lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;논리연산&quot;&gt;논리연산&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;논리연산: !, &amp;amp;&amp;amp;, ||&lt;/li&gt;&lt;li&gt;비교연산자: ==, !=, &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, ===, !== &lt;br /&gt;(!==와 ===는 identity operator. 객체 인스턴스가 같은지를 id(아마도 메모리 주소)로 체크)&lt;/li&gt;&lt;li&gt;3항연산 : C 3항연산자(?:) &lt;br /&gt;  &lt;ul&gt;&lt;li&gt;(문서만 봐서는 var x = if exp {} else {} 이렇게 완전히 함수형인 언어의 특징인 모든 문장이 식인 언어는 아님)&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;se-section-delimiter&quot;&gt;&lt;/div&gt;&lt;h2 id=&quot;범위연산&quot;&gt;범위연산&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;닫힌 범위 연산: (a…b) (a,b를 모두 포함)&lt;/li&gt;&lt;li&gt;반만열린범위연산: (a..b) (a이상 b미만)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;기타&quot;&gt;기타&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;당연히 괄호 사용 가능&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;감상: 별거 없음. 오버플로 연산정도?(이건 책에서 별도의 장에서 설명함) 나머진 뭐 그냥그냥. 예전거 그대로. 뭐 여기서 이상한짓 하긴 어렵겠지만..</content><link rel='replies' type='application/atom+xml' href='http://www.enshahar.me/feeds/6410837137889743707/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=31528299&amp;postID=6410837137889743707' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6410837137889743707'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/31528299/posts/default/6410837137889743707'/><link rel='alternate' type='text/html' href='http://www.enshahar.me/2014/06/1.html' title='[스위프트 대충보기] 1. 연산자'/><author><name>Hyunsok Oh</name><uri>http://www.blogger.com/profile/01408999472890865034</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry></feed>