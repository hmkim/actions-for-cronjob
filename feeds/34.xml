<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>모르니깐 할 수 있는거지</title>
<link>https://blog.r-bertko.com/</link>
<description>AlbertKo의 개발자 일상 블로그</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 16:07:08 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>AlbertKo</managingEditor>
<image>
<title>모르니깐 할 수 있는거지</title>
<url>https://tistory2.daumcdn.net/tistory/2894605/attach/a49bf89d5b1d41509b519b19b60f15d2</url>
<link>https://blog.r-bertko.com</link>
<description>AlbertKo의 개발자 일상 블로그</description>
</image>
<item>
<title>[글] 굳은 살</title>
<link>https://blog.r-bertko.com/42</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;실패는 성공의 어머니&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;⌜실패는 성공의 어머니⌟,&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;누구나 알법한 명언 중 하나이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;난 정말 이 명언이 옳다고 생각을 하지만, 조건부라고 생각을 한다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;질문을 하나 하고싶다. '실패를 하면 다음 번엔 성공을 할 수 있는가요?'&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;뭐라고 대답을 할까, '실패를 했기 때문에 다음 번엔 같은 실패를 피해갈 수 있기 때문에 가능하다'라고 답할 것 같다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;반은 맞고, 반은 틀렸다고 생각한다. 이 전제가 참이라면 사업을 두 번 해본 사람은 무조건 성공할 수 있을까???&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;실패를 했다는건 기회가 한 번 더 주어지는거다. 그 기회를 잡는 방법은 실패를 한 원인인 자신의 부족함을 받아드리고,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;다음 번에 같은 상황을 상시 대비하는 것이다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;만약, 실패하고 나서 &quot;다음엔 잘 되겠지&quot;라는 뇌내 자위만 한다면 그 사람은 나아갈 수 없을거다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;갑자기 이런 생각이 든 이유는 나는 개발자이고 누군가 질문을 했을 때,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;모른다고 그냥 넘어가는 것이 아니라 모르는 걸 찾아보고 공부하게 되면 다음엔 대답할 수 있게된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;만약, 해당 질문이 나의 삶에 영향을 줄 수 있을지라도 대답 못함을 나는 후회되지 않는다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;다음엔 더 잘 할 수 있으니깐, 그리고 그 대답을 할 수 있을 때에는 그 사람의 지식을 내가 따라잡은 거&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;니깐.&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>나의 어록</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/42</guid>
<comments>https://blog.r-bertko.com/42#entry42comment</comments>
<pubDate>Fri, 30 Nov 2018 01:23:58 +0900</pubDate>
</item>
<item>
<title>[etc] 개발자들이 읽으면 좋은 책들 정리 (JS 위주)</title>
<link>https://blog.r-bertko.com/41</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/990A544F5BCB39DF34&quot; filemime=&quot;image/jpeg&quot; filename=&quot;시작이미지.png&quot; height=&quot;463&quot; style=&quot;text-align: center;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;안녕하세요, 늘 부족하지만 아는 것을 공유하는&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;AlbertKo&lt;/span&gt;&lt;/b&gt;입니다!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;제가 구입한 책들을 목록으로 정리해보는 시간을 가졌습니다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt; color: rgb(0, 85, 255);&quot;&gt;&lt;/span&gt;&lt;a href=&quot;https://github.com/AlbertKo827/R-bertKo_Books&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;font-size: 14pt; color: rgb(0, 85, 255);&quot;&gt;책 추천 보러가기(주인장 깃헙)&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-size: 14pt; color: rgb(0, 85, 255);&quot;&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;깃허브에 간단하게 일단 정리를 해놨으며, 계속 업데이트 할 생각이니 참고했으면 좋겠습니다 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;감사합니다.&lt;/p&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Programming</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/41</guid>
<comments>https://blog.r-bertko.com/41#entry41comment</comments>
<pubDate>Sat, 20 Oct 2018 23:23:09 +0900</pubDate>
</item>
<item>
<title>[ES] Arrow Fucntion</title>
<link>https://blog.r-bertko.com/40</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9975DC365BC439052F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;시작이미지.png&quot; height=&quot;463&quot; style=&quot;text-align: center;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;안녕하세요, 늘 부족하지만 아는 것을 공유하는&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;AlbertKo&lt;/span&gt;&lt;/b&gt;입니다!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번 시간에는 ES6에 추가된 Arrow Function에 대해서 알아보도록 하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;화살표 함수를 알기 전에 람다 표현식에 대해서 알아보도록 하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;람다 표현식&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;람다 표현식이란 익명 함수를 표현하는 방법이라고 생각하시면 됩니다.&lt;/p&gt;&lt;p&gt;Javascript의 Arrow Function이 이러한 표현 방법입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div style=&quot;line-height: 18px;&quot;&gt;&lt;div style=&quot;line-height: 18px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;array&lt;/span&gt; = [&lt;span style=&quot;color: #b5cea8;&quot;&gt;10&lt;/span&gt;, &lt;span style=&quot;color: #b5cea8;&quot;&gt;20&lt;/span&gt;, &lt;span style=&quot;color: #b5cea8;&quot;&gt;30&lt;/span&gt;]&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;//None-Lambda Expression&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;function&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa;&quot;&gt;none&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;value&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;value&lt;/span&gt;);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;array&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;map&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;none&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;//Lambda Expression &amp;lt;Anonymous Function&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;array&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;map&lt;/span&gt;(&lt;span style=&quot;color: #569cd6;&quot;&gt;function&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;value&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;value&lt;/span&gt;)&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;//Lambda Expression &amp;lt;Arrow Function&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;array&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;map&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;value&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;=&amp;gt;&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;value&lt;/span&gt;)&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일반적인 함수 사용&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;none 이라는 이름을 가진 함수를 일반적인 방법으로 선언해 map 오퍼레이터에 전달해줬습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;콜백함수로 익명 함수 전달&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같지만, 따로 함수를 선언 후 전달한 것이 아닌, 익명 함수로 전달을 해줬습니다.&lt;/p&gt;&lt;p&gt;람다 표현식은 익명성을 요구하므로, 람다 표현식이라고 할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;콜백함수로 화살표 함수 표현식을 이용하여 전달&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;화살표 함수 역시 익명 / 무명 함수입니다.&lt;/p&gt;&lt;p&gt;단지 화살표 함수 표현식을 통해 기존 익명함수 표현을 축약할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 헷갈렸던게, 람다식이라고 치면 각 각의 언어마다의 익명함수를 축약형으로 표현하는 방법들이 나옵니다.&lt;/p&gt;&lt;p&gt;대게는 화살표 모양이 대표적이죠, 그래서 저는 람다 표현식 = 화살표 함수 표현식 인줄 알았습니다만, 틀린 생각이였습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서, 제가 정확하게&amp;nbsp;이해한대로 따지면,&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;txc-formula&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99E277385BC460133B&quot; historydata=&quot;%3Cflashrichtext%20version%3D%221%22%3E%0A%20%20%3Ctextformat%20font%3D%22Dotum%22%20size%3D%2216%22%20color%3D%222236962%22%20bold%3D%22false%22%20italic%3D%22false%22%20underline%3D%22false%22%20url%3D%22%22%20target%3D%22transparent%22%20align%3D%22left%22%20leftMargin%3D%2225%22%20rightMargin%3D%2225%22%20indent%3D%220%22%20leading%3D%220%22%20blockIndent%3D%220%22%20kerning%3D%22true%22%20letterSpacing%3D%220%22%20display%3D%22block%22%3E%28%uD654%uC0B4%uD45C%uD568%uC218%5Csubset%20%uC775%uBA85%uD568%uC218%5Csubset%20%uB78C%uB2E4%uC2DD%29%3C/textformat%3E%0A%3C/flashrichtext%3E%2C%0A14%2C%0A0xFFFFFF&quot; width=&quot;265&quot; height=&quot;31&quot;&gt;&lt;/p&gt;&lt;p&gt;이런 느낌이라고 생각합니다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;return 방법&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;화살표 함수에서는 return을 어떤 식으로 하는지봅시다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #9cdcfe;&quot;&gt;x&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&quot;color: #b5cea8;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #dcdcaa;&quot;&gt;a&lt;/span&gt;()) &lt;span style=&quot;color: #6a9955;&quot;&gt;// 1&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa;&quot;&gt;b&lt;/span&gt; = &lt;span style=&quot;color: #9cdcfe;&quot;&gt;x&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;=&amp;gt;&lt;/span&gt; ({ &lt;span style=&quot;color: #6a9955;&quot;&gt;// Object 리턴시,       소괄호안에 넣어준다.   ex)   x =&amp;gt; ({})&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;value :&lt;/span&gt; &lt;span style=&quot;color: #b5cea8;&quot;&gt;123&lt;/span&gt;&lt;/div&gt;&lt;div&gt;})&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #dcdcaa;&quot;&gt;b&lt;/span&gt;()[&lt;span style=&quot;color: #ce9178;&quot;&gt;'value'&lt;/span&gt;]) &lt;span style=&quot;color: #6a9955;&quot;&gt;// 123&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa;&quot;&gt;c&lt;/span&gt; = &lt;span style=&quot;color: #9cdcfe;&quot;&gt;x&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;=&amp;gt;&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #c586c0;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #b5cea8;&quot;&gt;456&lt;/span&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #dcdcaa;&quot;&gt;c&lt;/span&gt;()) &lt;span style=&quot;color: #6a9955;&quot;&gt;// 456&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같이 방법들이 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;첫 번째 방법과 두 번째 방법은 return을 생략한 방법입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;첫 번째는 단순 Value 반환할 때, return을 생략한 방법입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;화살표 바로 뒤에 값을 반환해줍니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;두 번째는 객체를 반환할 때입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;옆에 예시에 나와있듯이, 소괄호를 씌어주면 반환이 가능합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;단, return 생략시 해당 줄을 분리하면 SyntaxError 가 발생합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막은 그냥 일반적으로 블록 안에 return 키워드를 사용하여 반환을 해줬습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이상으로 Arrow Function에 대해서 마치겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 외에도 몇가지 내용이 더 있으나, 나중에 좀 더 자세하게 정리하여 자료를 공유하도록 하겠습니다 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>ECMAScript</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/40</guid>
<comments>https://blog.r-bertko.com/40#entry40comment</comments>
<pubDate>Mon, 15 Oct 2018 18:59:43 +0900</pubDate>
</item>
<item>
<title>[etc] Babel사용과 Webpack에 로더 셋업하기</title>
<link>https://blog.r-bertko.com/38</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99F778475BC0327424&quot; width=&quot;820&quot; height=&quot;463&quot; filename=&quot;시작이미지.png&quot; filemime=&quot;image/jpeg&quot; style=&quot;text-align: center;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;안녕하세요, 늘 부족하지만 아는 것을 공유하는&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;AlbertKo&lt;/span&gt;&lt;/b&gt;입니다!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번엔 저번에 쓴 Webpack 글에 이어서&amp;nbsp; babel-loader 에 대해서 써보도록 하겠습니다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;babel이란&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9943704F5BC03E390C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;babel.png&quot; height=&quot;372&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;바벨&lt;/span&gt;이란 Javascript의 컴파일러이며, ES 버전에 따른 트랜스파일러 (&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;Transpiler&lt;/span&gt;) 입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ECMAScript 2015+ 에 버전을 ES5로 변경해주므로서, 브라우저에서 최신 ES Spec을 지원하지 않는 문제를 해결할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;babel과 babel-loader 설치하기&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;webpack을 글로벌로 설치했다고 생각하고 프로젝트에서 npm으로 다음과 같이 설치해줍시다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;npm i -D babel-loader @babel/core @babel/preset-env&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;설치하셨으면 webpack.config.js 에 loader 설정을 해줍시다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt; = &lt;span style=&quot;color: #dcdcaa;&quot;&gt;require&lt;/span&gt;(&lt;span style=&quot;color: rgb(206, 145, 120);&quot;&gt;'path'&lt;/span&gt;);&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;module&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;exports&lt;/span&gt; = {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;entry :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;output :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path :&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;resolve&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;__dirname&lt;/span&gt; + &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;dist&quot;&lt;/span&gt;), &lt;span style=&quot;color: #6a9955;&quot;&gt;// 현 위치에 dist 디렉토리에 위치&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;filename :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;webpack.bundle.js&quot;&lt;/span&gt; &lt;span style=&quot;color: #6a9955;&quot;&gt;// 번들링 된 파일 이름&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    },&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;module :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;rules :&lt;/span&gt; [&lt;/div&gt;&lt;div&gt;            {&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe;&quot;&gt;test:&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;color: #d7ba7d;&quot;&gt;\.&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;color: #d7ba7d;&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;js&lt;/span&gt;&lt;span style=&quot;color: #dcdcaa;&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;/&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe;&quot;&gt;exclude:&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;color: #ce9178;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;node_modules&lt;/span&gt;&lt;span style=&quot;color: #dcdcaa;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;bower_components&lt;/span&gt;&lt;span style=&quot;color: #ce9178;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;/&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe;&quot;&gt;use:&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;                    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;loader:&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'babel-loader'&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;                    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;options:&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;                        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;presets:&lt;/span&gt; [&lt;span style=&quot;color: #ce9178;&quot;&gt;'@babel/preset-env'&lt;/span&gt;]&lt;/div&gt;&lt;div&gt;                    }&lt;/div&gt;&lt;div&gt;                }&lt;/div&gt;&lt;div&gt;            },&lt;/div&gt;&lt;div&gt;        ]&lt;/div&gt;&lt;div&gt;    }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같이 해주시면 loader 설정 완료입니다 ㅎㅎ 바벨 설정 옵션을 추가하고 싶으시다면 presets 밑에 plugins : [] 형대로 추가해주시면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 babel에 대한 설정을 해줘야하는데, 웹팩을 쓰지 않을시에는 .babelrc 에서 해줍니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;'rc의 의미는&amp;nbsp;명령문이 실행될 때 어떻게 실행되어야 하는지 설정해주는 파일을 의미하는거같아요, rc의 풀네임은 명확하게 정의되어있는거 같진 않지만 Runtime Configuration과 같은 의미로 사용된다고' 프론트엔드 개발자 오픈톡에 Jhon님이 친절하게 설명해 주셨어요!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;babel-loader을 보면 .babelrc에 설정을 안하고 options 내에 설정해준 것을 볼 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 저도 헷갈리는 부분이, .babelrc 에 설정 부분을 온전히 options 내에서 작성해 .babelrc 작성을 안해도 되는 것인지가 헷갈리더군요&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일단 babel-loader 내에 설명을 읽어보면 ' .babelrc를 사용했을 경우'라는 문구를 봤을 때 .babelrc에 설정을 작성하는 것은 선택인걸로 보여요.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;확실하게 아시는 분 계신다면 알려주시면 감사하겠습니다 ㅋㅋ (&lt;strike&gt;설명글에서 질문하는 클라스... ㅜ&lt;/strike&gt;)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여튼 결론은 당장에 options 내에 설정을 해도 이상이 없습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Polyfill&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;하지만, 위에대로만 한다면&amp;nbsp;문제가 있습니다. 문법적인 부분은 이정도로도 해결이 가능하지만, ES 최신 spec에 추가된 built-in 내장 객체를 사용하려고 한다면 문제가 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;es5엔 이를 대체해줄 객체가 없기 때문이죠.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그를 위해서 &lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;Polyfill&lt;/span&gt;을 사용하면 됩니다. 우선 설치를 해줍니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;npm i -D @babel/polyfill&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 후에, 간단합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;webpack 설정에 entry 부분을 다음과 같이 변경해주면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt; = &lt;span style=&quot;color: #dcdcaa;&quot;&gt;require&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt;);&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;module&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;exports&lt;/span&gt; = {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;entry :&lt;/span&gt; [&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;@babel/polyfill&quot;&lt;/span&gt;, &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;],&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;output :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path :&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;resolve&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;__dirname&lt;/span&gt; + &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;dist&quot;&lt;/span&gt;), &lt;span style=&quot;color: #6a9955;&quot;&gt;// 현 위치에 dist 디렉토리에 위치&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;filename :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;webpack.bundle.js&quot;&lt;/span&gt; &lt;span style=&quot;color: #6a9955;&quot;&gt;// 번들링 된 파일 이름&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    },&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;module :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;rules :&lt;/span&gt; [&lt;/div&gt;&lt;div&gt;            {&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe;&quot;&gt;test:&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;color: #d7ba7d;&quot;&gt;\.&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;m&lt;/span&gt;&lt;span style=&quot;color: #d7ba7d;&quot;&gt;?&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;js&lt;/span&gt;&lt;span style=&quot;color: #dcdcaa;&quot;&gt;$&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;/&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe;&quot;&gt;exclude:&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt; /&lt;/span&gt;&lt;span style=&quot;color: #ce9178;&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;node_modules&lt;/span&gt;&lt;span style=&quot;color: #dcdcaa;&quot;&gt;|&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;bower_components&lt;/span&gt;&lt;span style=&quot;color: #ce9178;&quot;&gt;)&lt;/span&gt;&lt;span style=&quot;color: #d16969;&quot;&gt;/&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe;&quot;&gt;use:&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;                    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;loader:&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'babel-loader'&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;                    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;options:&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;                        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;presets:&lt;/span&gt; [&lt;span style=&quot;color: #ce9178;&quot;&gt;'@babel/preset-env'&lt;/span&gt;]&lt;/div&gt;&lt;div&gt;                    }&lt;/div&gt;&lt;div&gt;                }&lt;/div&gt;&lt;div&gt;            },&lt;/div&gt;&lt;div&gt;        ]&lt;/div&gt;&lt;div&gt;    }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 해주면 웹팩에 바벨에 대한 셋업이 끝납니다 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음번에는 웹팩 사용에 대해 좀 더 Depth 있는 자료를 들고오도록 노력하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;읽어주셔서 감사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Web</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/38</guid>
<comments>https://blog.r-bertko.com/38#entry38comment</comments>
<pubDate>Fri, 12 Oct 2018 18:29:49 +0900</pubDate>
</item>
<item>
<title>[etc] Webpack 시작하기</title>
<link>https://blog.r-bertko.com/37</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/990E963A5BC01A590A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;시작이미지.png&quot; height=&quot;463&quot; style=&quot;text-align: center;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;안녕하세요, 늘 부족하지만 아는 것을 공유하는&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;AlbertKo&lt;/span&gt;&lt;/b&gt;입니다!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;오늘은 웹팩을 셋업하는 방법에 대해서 다뤄볼까합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;&lt;b&gt;&lt;a href=&quot;https://webpack.js.org/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;웹팩 공식 홈페이지&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;제 글 제외 좀 더 자세한 내용은 웹팩 공식 홈페이지에서 확인해주세요!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://ifyoudontknow-youcandothis.tistory.com/9&quot; target=&quot;_blank&quot;&gt;2018/07/03 - [Programming/React] - Typescript를 사용하여 React 시작하기 - Setting 및 알고 넘어가기&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;제가 작성한 글인데 웹팩에 대한 설명이 포함되어 있으니 한 번 확인해보세요 ^^&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Webpack 설치하기&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;웹팩 설치하는 방법은 로컬도 두가지 방법이있어요!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;프로젝트 내에 설치&lt;/span&gt;와 &lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;글로벌로 설치&lt;/span&gt;하는 방법 두가지가 있는데 저는 후자로 진행하도록 하겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;npm i -g webpack webpack-cli&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;이렇게 하면 글로벌로 웹팩의 설치가 끝나요.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Webpack 셋업하기&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지옥같은 셋업의 시작입니다 ㅜㅜㅜ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;strike&gt;(그)&lt;/strike&gt;Root 디렉토리에 webpack.config.js 파일을 만들어줍시다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;touch webpack.config.js&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;&lt;div&gt;그 후 module.export 로 감싸줍시다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;div&gt;Tip )&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;ES Module 은&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;export Name&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;으로 해결 되지만, commonjs는&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;module.exports = Name&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;라는 점&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;module&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;exports&lt;/span&gt; = {&lt;/div&gt;&lt;br /&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Entry&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Entry option은 말 그대로 시작점을 뜻합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 root 디렉토리에 index.js로 하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;module&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;exports&lt;/span&gt; = {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;entry :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;output&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;output은 빌드시 번들링 된 파일들이 출력되는 곳을 말합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt; = &lt;span style=&quot;color: #dcdcaa;&quot;&gt;require&lt;/span&gt;(&lt;span style=&quot;color: rgb(206, 145, 120);&quot;&gt;'path'&lt;/span&gt;);&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;module&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;exports&lt;/span&gt; = {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;entry :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;output :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path :&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;resolve&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;__dirname&lt;/span&gt; + &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;dist&quot;&lt;/span&gt;), &lt;span style=&quot;color: #6a9955;&quot;&gt;// 현 위치에 dist 디렉토리에 위치&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;filename :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;webpack.bundle.js&quot;&lt;/span&gt; &lt;span style=&quot;color: #6a9955;&quot;&gt;// 번들링 된 파일 이름&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;p&gt;Tip )&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;path는 Nodejs에서 제공되는 모듈입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;파일이나 디렉토리 관련 주소의 처리에 대해 기능을 제공합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;resolve 메서드는 지정된 경로에 대해 절대 경로를 제공합니다.&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;Loader&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;제가 웹팩을 설명한 글이나 웹팩의 공식 설명을 보면 Javascript에 대한 번들링을 default로 제공합니다.&lt;/p&gt;&lt;p&gt;즉, 다른 확장자에 대해서는 번들링은 가능하나 따로 추가적인 설정이 필요한데, 해당 파일들을 웹팩으로 읽어주는 역할을 하는 것이 Loader 입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Loader들은 정말 다양하게 존재하며, 자신의 프로젝트 진행에 필요한 로더들을 그에 맞게 세팅해줘야합니다!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;당연히 저희는 babel에 대한 로더를 셋업해줄겁니다. 물론 다음시간에... ㅋㅋㅋㅋㅋㅋ ㅜ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;당장에는 Loader에 대한 개념만 잡고갑시다!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;const&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt; = &lt;span style=&quot;color: #dcdcaa;&quot;&gt;require&lt;/span&gt;(&lt;span style=&quot;color: rgb(206, 145, 120);&quot;&gt;'path'&lt;/span&gt;);&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;module&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;exports&lt;/span&gt; = {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;entry :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;./index.js&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;output :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path :&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;resolve&lt;/span&gt;(&lt;span style=&quot;color: #9cdcfe;&quot;&gt;__dirname&lt;/span&gt; + &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;dist&quot;&lt;/span&gt;), &lt;span style=&quot;color: #6a9955;&quot;&gt;// 현 위치에 dist 디렉토리에 위치&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;filename :&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;webpack.bundle.js&quot;&lt;/span&gt; &lt;span style=&quot;color: #6a9955;&quot;&gt;// 번들링 된 파일 이름&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    },&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe;&quot;&gt;module :&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #9cdcfe;&quot;&gt;rules :&lt;/span&gt; [&lt;/div&gt;&lt;div&gt;            &lt;span style=&quot;color: #6a9955;&quot;&gt;//여기에 여러가지 로더들을 설정해 줍니다.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        ]&lt;/div&gt;&lt;div&gt;    }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;Plugin&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Plugin은 웹팩에서 제공하는 내장 된 additional 기능들을 설정하는 옵션입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;플러그인은 아직 잘 사용해보지 못해서 뭐라 못하겠네요 ㅎㅎ;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;핫로더 관련 &lt;a href=&quot;https://webpack.js.org/plugins/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(9, 0, 255);&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;플러그인 등 여러&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/a&gt; 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&lt;b&gt;Mode&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;모드는 말 그대로 모드인데, development / production / none 의 세가지 옵션이 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;제가 이해한 것으로는 Mode 설정에 따라 위 플러그인을 자동으로 알맞게 사용합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;default 값은 production으로 되어 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;none으로 설정하게되면 플러그인을&amp;nbsp; 하나도 일체 사용하지 않습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;모드에 따른 플러그인 사용은 &lt;b&gt;&lt;a href=&quot;https://webpack.js.org/concepts/mode/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(0, 85, 255);&quot;&gt;여기&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;서 한 번 확인해보세요 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이상 웹팩 설정에대한 간단한 설명이였습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음 글에서 babel-loader를 추가해보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Web</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/37</guid>
<comments>https://blog.r-bertko.com/37#entry37comment</comments>
<pubDate>Fri, 12 Oct 2018 14:34:11 +0900</pubDate>
</item>
<item>
<title>[ES] var 키워드와  let, const.</title>
<link>https://blog.r-bertko.com/36</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99DF9C395BBA68002F&quot; width=&quot;820&quot; height=&quot;463&quot; filename=&quot;시작이미지.png&quot; filemime=&quot;image/jpeg&quot; style=&quot;text-align: center;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;안녕하세요, 늘 부족하지만 아는 것을 공유하는&lt;/span&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;&amp;nbsp;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;AlbertKo&lt;/span&gt;&lt;/b&gt;입니다!&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;드디어, ECMAScript 강의에 한 걸을음 내딛었습니다! 박수!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;블로그 운영을 본격적으로 시작한지 얼마 지나지 않았는데, 글 올리는 주기가 너무 불규칙했네요 ㅜㅜ&lt;/p&gt;&lt;p&gt;앞으로는 부지런히 운영할테니, 많은 관심 부탁드립니다!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저도 블로그를 유명하게 키워보고싶네요 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;자, 그럼 본론으로 가시~ 기 전에, 제 &lt;a href=&quot;http://ifyoudontknow-youcandothis.tistory.com/notice/35&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;&lt;b&gt;계획에 대한 공지&lt;/b&gt;&lt;/span&gt;&lt;/a&gt;를 한 번 읽고 오시면 도움이 되지 않을까합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;흠흠, 그럼 정말 본론으로 들어가 보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우선 글의 제목을 보시면 &lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;var키워드와 let, const 키워드&lt;/span&gt;에 대한 설명을 드릴려고합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사전에 &lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;var키워드&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;에 대한 사전지식을 요구&lt;/span&gt;로하니, 한 번 훑어보고 오시길바랍니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;그래도 간단하게 집고 넘어가자! var는 뭔가요?&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;네~ 그래도 var에 대해서 간단하게 집고는 넘어가야겠죠??&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;var는 Javascript에서 변수 선언을 위해 쓰이는 키워드입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Javascript는 다른 일반적인 언어와는 다르게 변수에 &lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;동적 할당&lt;/span&gt;을 하게됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(86, 156, 214);&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: rgb(156, 220, 254);&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: rgb(181, 206, 168);&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;b&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;a의 타입 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #569cd6;&quot;&gt;typeof&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt;)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;b의 타입 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #569cd6;&quot;&gt;typeof&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;b&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// &amp;lt; 출력 &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// a의 타입 : number&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// b의 타입 : string&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같이, 따로 형을 지정해주지 않았지만, 타입을 출력해보면 타입이 지정되있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;엔진에서 값에 따라 타입을 동적으로 지정해주는 것 입니다.&lt;/p&gt;&lt;p&gt;이것은 양날의 칼이겠죠??? 타입을 따로 지정을 안해도되니 생산성이 올라가겠지만, 타입을 사전에 지정하지 않았기 때문에 오류가 생길 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;개인적으로 코딩할 때 타입을 지정해주는 정적 할당을 선호하기 때문에 (신뢰도 적으로나, 유지 보수 적으로나 정적 할당이 우수하다고 생각) 이에 대해서는 후에 Typescript를 공부하면서 배워보도록 합시다 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또, var 키워드는 다른 일반적인 언어에서는 상상도 못 할 행동도 가능합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #b5cea8;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;b&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;AlbertKo&quot;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;a의 타입 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #569cd6;&quot;&gt;typeof&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt;)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;b의 타입 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #569cd6;&quot;&gt;typeof&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;b&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// &amp;lt; 출력 &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// a의 타입 : string&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// b의 타입 : string&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;띠용???&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:699px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9943603F5BBA6CB92F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;8K2J6WEI741L247K0Q6H.jpg&quot; height=&quot;389&quot; width=&quot;699&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사전에 다른 언어들을 공부하신 분들은 심기가 불-편 하실겁니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&quot;아니? a 변수를 앞에 선언했는데 또 선언하고 에러가 안나요????&quot;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;네... 안나요!&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&amp;lt;그 외, 심기불편한 코드 &amp;gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;a 출력 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #b5cea8;&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// &amp;lt; 출력 &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// a 출력 : undefined&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;응??? 에러가 아니라 undefined가 출력이 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 var가 말썽인 이유들은,&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;hoisting&lt;/li&gt;&lt;li&gt;함수 단위 스코프&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;위 두가지를 크게 원인으로 말 할 수 있습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;호이스팅과 스코프에 대한 것은 간간히 나오겠지만, 자세한 설명은 넘어가겠습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;스코프는 말 그대로 '범위'를 말합니다. 변수에 접근 할 수 있는 범위라고 이해하시면 됩니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;위 코드에는 안나와있지만, var 는 '함수 단위 스코프'이기 때문에 여러가지 문제가 발생할 수 있습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;호이스팅은 역시 말 그대로 '끌어올리는 것'을 말합니다.&lt;/div&gt;&lt;div&gt;이로인해 var는 어느 위치에 있든 스코프에 최상위에 선언한 것과 마찬가지인 것이 되는 것이고 그래서, console.log 를 상단에 두고 a를 출력했을 때 에러가 발생하지 않은 것입니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;이러한 문제를 해결하고자 나온 것이 let과 const입니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;div&gt;let 키워드&lt;br /&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;let의 특징&lt;/span&gt; 보자면,&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;var는 함수스코프인 반면, let은 블록스코프입니다.&lt;/li&gt;&lt;li&gt;같은 스코프 안에서 같은 이름의 let 변수는 선언할 수 없습니다.&lt;/li&gt;&lt;li&gt;let 변수는 호이스팅의 대상이 아닙니다.&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;위의 세개 정도의 특징으로 볼 수 있겠습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;우선 let은 블록 단위 스코프라고 했습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;world&quot;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;a 출력 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// &amp;lt; 출력 &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// a 출력 : hello&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;위를 보면 hello가 출력이 됐습니다.&lt;/div&gt;&lt;div&gt;만약에 키워드를 var로 했다면 출력 값은 world가 됬겠지요???&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;또, let 키워드는 같은 스코프 안에서 같은 이름의 변수를 선언하지 못 한다고 하였죠??&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #b5cea8;&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;a 출력 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// &amp;lt; 출력 &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// SyntaxError: Identifier 'a' has already been declared&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;a 라는 이름의 변수가 이미 선언되었다고 에러가 납니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막으로 let은 호이스팅의 대상이 아닌 점이 있다고했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;console&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa;&quot;&gt;log&lt;/span&gt;(&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;a 출력 : &quot;&lt;/span&gt; + &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt;)&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;let&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;a&lt;/span&gt; = &lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// &amp;lt; 출력 &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #6a9955;&quot;&gt;// ReferenceError: a is not defined&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;a 변수가 스코프에 최상단으로 끌어올려지지 않았기 때문에 not defined 에러가 발생한 모습을 보실 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;const 키워드&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;그렇다면, &lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;const 키워드&lt;/span&gt;는 무엇 일까요?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;let이 '&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;변수&lt;/span&gt;'를 선언할 때 쓰이는 키워드라면, const 키워드는 '&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;상수&lt;/span&gt;'를 뜻합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 외에는 let과 차이점이 없다고 보시면됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;즉, const로 선언한 변수는 let과 똑같으나, 상수이기때문에, 할당 된 값을 변경할 수 없습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;주의할 점&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;var는 함수 단위 스코프, let은 블록 단위 스코프입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;만약에 for문을 돌린다고 하면, for 문안에서 var 키워드로 변수를 선언하면 크게 문제가 되지않지만,&lt;/p&gt;&lt;p&gt;let 키워드로 변수 선언을 한다면, 매 반복마다 해당 변수를 재선언하는 꼴이기 때문에 엔진마다 다르지만 let을 쓰면 대체적으로 성능이&lt;/p&gt;&lt;p&gt;크롬에서는 최소 3~4배, 사파리에서는 심각할 정도로 성능 차이가 난다고하니 참고해보세요.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;https://gomugom.github.io/let-vs-var-performance-compare/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;let과 var의 성능 비교&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;-&amp;gt; 여기 들어가셔서 한 번 참고해보시면 좋을 것 같네요.&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;간단한 내용이지만, 이렇게 글을 쓰려고하니 확실히 힘이드네요...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;늘 생각하는 것인데, 내가 아는 내용을 사용만 하려는 목적으로&amp;nbsp;그냥 공부한다면&amp;nbsp;사용하고 틀리면 고치면 되서 어렵다고 생각이 들지 않습니다만,&lt;/p&gt;&lt;p&gt;내가 아는 내용을 작은 것이라도 누군가에게 전달하는 것이 목적일 때에는, 저의 말에 따라 잘못된 정보를 알려줄 수 있다는 점에서 글을 작성할 때 항상 긴장하며 쓰게되네요.&lt;/p&gt;&lt;p&gt;뭐, 그만큼 신뢰도있는 정보를 전달을 하려면 저 역시 확실한 공부를 해야하기 때문에 저에게 돌아오는 것 역시 많을 것 같지만요 ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;앞으로도 글을 쓰려면 더 더욱 노력해야겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;안녕하세요. 현재 산업기능요원 회사 구직 중에 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;혹시 IT산업기능요원으로 유능한 웹개발자를 찾으시고 계신다면 감히 저를 추천해드립니다!!&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;댓글 혹은 myeongsku@gmail.com 으로 메일 주시면 감사하겠습니다!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99BB3D425BC2D65F15&quot; width=&quot;820&quot; height=&quot;463&quot; filename=&quot;시작이미지.png&quot; filemime=&quot;image/jpeg&quot; style=&quot;&quot;&quot;&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>ECMAScript</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/36</guid>
<comments>https://blog.r-bertko.com/36#entry36comment</comments>
<pubDate>Mon, 08 Oct 2018 16:35:31 +0900</pubDate>
</item>
<item>
<title>일을 해보고, 기술블로그를 운영하며, 여러 사람을 만나고 뼈저리게 느낀 점</title>
<link>https://blog.r-bertko.com/34</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;안녕하세요. AlbertKo입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;기술 블로그 글을 안쓴지 많은 시간이 흘렀네요.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;시간이라는게 생겨 다시 공부하며 운영을 하려고했는데,&lt;/p&gt;&lt;p&gt;js에 대해 스스로 빈 곳이 많음을 알고서도 React에 대해 글을 썼다는 점에서 굉장히&lt;/p&gt;&lt;p&gt;커리큘럼이 어긋났다는 것을 느꼈습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;흔히 &lt;b&gt;요즘 웹개발을 하면 UI Lib / Framework 중 하나를 잡고 가는 것이 당연하다고&lt;/b&gt; 생각을 하였고,&lt;/p&gt;&lt;p&gt;지금도 그렇다고 생각은하나, 그건 &lt;b&gt;기본에 대한 이해도가 높은 사람들의 수준&lt;/b&gt;이란 것을 몰랐었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 고등학교에서 간단하게 C 를 배웠고, 프로그래밍에서 뭐가 중요한지 정확히 이해를 못했던 것 같습니다.&lt;/p&gt;&lt;p&gt;그렇게 3학년 때 취업을 나오며 객체지향이란 것을 접해보지도 못했던 제가 거의 홀로서기 식으로&lt;/p&gt;&lt;p&gt;C# 개발을 주로 맡게됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;당연히 저는 기초부터가 아닌 &lt;b&gt;자료를 찾고 사용 및 응용에 중점&lt;/b&gt;이 맞춰져있었고,&lt;/p&gt;&lt;p&gt;그 습관이 뭐가 문제인지도 모르고, 그냥 결과만 나오면 옳은 줄 알고 진행을 했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그렇게 작은 회사를 다니다가 웹 개발자로 전향을 하고자했을 때,&lt;/p&gt;&lt;p&gt;때마침 정말 별로였던, 인생 최악에 첫 직장에 사정이 힘들어져서 그것을 핑계로 그만두고 공부를 진행함을 결심을 했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아무것도 몰랐던 저는 역시 전에 습관대로 우선 부딛히며 찾아보니 MEAN 스택이라는 것을 알았고,&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;당연히 Angular를 구글에서 개발을 했으니 큰 믿을음 갖고 시작을 했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:647px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9906AC385B96300505&quot; filemime=&quot;image/jpeg&quot; filename=&quot;0ab80cd88f0f8362d7d5e18e35d5fb4c_I1bx9OngC9En7gAPaFpnRZpW6pnSJKSX.jpg&quot; height=&quot;313&quot; width=&quot;647&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;strike&gt;Angular를 시작해서는 안됐었다&lt;/strike&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 말은 Angular가 안 좋다는 것이아니라 위에서 말했듯이&lt;b&gt; React든... Vue든, Angular든 시작할 레벨이 아니였던 것&lt;/b&gt;인데&lt;/p&gt;&lt;p&gt;특히 러닝커브가 큰 Angular를 처음으로 시작했던 부분에서 SPA에 이해 정도나 뭐나... 욕심이 굉장히 컸었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;js..???? node.js 를 진행하면서 당연히 같이 익혀질 줄 알았다 ㅎㅎㅎㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;물론 이조차도 도움이 전혀 안 됐다는 것이 아니라, 레벨이 아니였다고 생각을한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러면서 웹에 전반적인 이해도나 SPA를 어떤식으로 아키텍쳐를 해야하는지... 전혀 모르는 상태로 만든 포트폴리오는&lt;/p&gt;&lt;p&gt;만든 당시에는 나름 만족했으나 지금은 보여주기도 싫다. &lt;strike&gt;(왜냐면 너무 쪽팔리니깐... 개발자한테 흑역사란게 이런거겠죠)&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;&lt;strike&gt;&lt;br /&gt;&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;그러는 도중에 웹 개발자 실무를 경험해볼 좋은 기회가 생겨 한 달간 인턴을 진행을하였고,&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;정확하게 커리큘럼 없이 무작정 부딛히는 독학은 경력자 분들에게 동작 결과로 숨길려 숨겨지지 않은다는 것을 느꼈습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그렇게 인턴이 끝나고 정규직은 되지 못했지만 여러 깨닫음을 느낄 수 있던 한 달이 되었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;현재 저는 다시 한 번 고개 숙이는 법을 느끼고 스스로 부족함을 아주 뼈저리게 느끼며&lt;/p&gt;&lt;p&gt;기초부터 다시 전부 다지고있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 이 글을 작성한 이유는 기술 블로그에 글을 하나 잡고 쓰고자하는데&lt;/p&gt;&lt;p&gt;커리큘럼을 어찌 잡아야하나 고민하던도중 제 어린 지인중에 저와 같은 행동을 하고있는 친구가 있어서&lt;/p&gt;&lt;p&gt;분명 저나 이 친구 말고도 처음에 시작을 어떻게 해야하는지 고민하는 분들이 계실거라고 생각해서 작성해봤습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;3줄 요약&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;1. 혼자 프론트엔드를 공부&lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&amp;nbsp;하며 &lt;/span&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;어떻게 시작을 해야하는지 고민하는 분들께, 당연히 React, Vue 나 Angular같은 라이브러리, 프레임워크도 중요합니다.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;2. 근데 그전에 본인이 Javascript에 대해 어떤 질문이 들어와도 (js 코드가 실행되고 어떤 과정을 거치는지부터 하여 아주 기초부터) 대답을 할 수 있는지, 여러 자료구조와 알고리즘, 디자인패턴에 확실한 학습이 안됬다면 1번은 당장에 순서가 아닌 것 같습니다. &lt;strike&gt;(저도 마찬가지...ㅎ;)&lt;/strike&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;3. 개발자는 계속 겸손해야하는 직업같습니다.&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.8;&quot;&gt;&lt;span style=&quot;font-size: 12pt;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;위에 말했듯이 저는 지금 기초적인 부분을 다시 한 번 공부하며 스스로에 부족함을 되새기고 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;React에 대한 공부는 일단 이에 맞게 짜놓은 커리큘럼을 어느정도 마치고 들어가는 것이 맞다고 생각을해서 늦출 생각입니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;열심히 공부하는 분들 부디 좋은 결과가 있기를 바랍니다 ㅎㅎ&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Programming</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/34</guid>
<comments>https://blog.r-bertko.com/34#entry34comment</comments>
<pubDate>Mon, 10 Sep 2018 18:22:40 +0900</pubDate>
</item>
<item>
<title>[React] react-router 사용하기</title>
<link>https://blog.r-bertko.com/33</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;안녕하세요. AlbertKo입니다.&lt;/p&gt;&lt;p&gt;오늘은 React-Router 라는 React의 ThirdParty Library를 사용해보도록 하겠습니다.&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;h1&gt;react-router란?&lt;/h1&gt;&lt;/blockquote&gt;&lt;h2&gt;react-router&lt;/h2&gt;&lt;div&gt;React는 다른 UI Framework 들과 다르게 Library인건 다들 알고 계실겁니다.&lt;/div&gt;&lt;div&gt;그러다 보니 웹을 개발하기 위한 전체적인 구성보다는 React는 Declarative View부분만 담당해줍니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그래서 SPA 안에서 redirect 없는 routing을 위해 나온 것이 react-router입니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;react-router는 facebook에서 만든 것은 아니지만, react를 쓰면서 routing을 해야한다면&lt;/div&gt;&lt;div&gt;대부분의 사람들이 react-router lib를 사용하지 않을까싶네요 :)&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원래 해당 라이브러리는 Angular / Express 등을 사용해보신 분들은 알듯이 '정적 라우팅 (static routing)을 어느정도 따라왔었어요&lt;/p&gt;&lt;p&gt;하지만, V4 이후 부터는 dynamic routing을 채택했다고합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;배경을 읽어보면&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;솔직하게 V2에서 (미카엘과 라이언 -&amp;gt; 개발자분들)은 많은 좌절을 겪었다고합니다.&lt;/p&gt;&lt;p&gt;API가 제한적이고, React의 일부들(LifeCycle과 그 외에)를 다시 구현해야한다고 느꼈고,&lt;/p&gt;&lt;p&gt;React가 지향하는 것과는 거리가 멀다고 생각을 했다고합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 결과 지금의 react-router가 되었고 만족할거라고 합니다 ㅋㅋ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지금의 react-router에서 static과 dynamic의 차이는 앱 외부에서 작업을 하는 것이 아닌 앱이 렌더링 될 때 진행된다고 보시면됩니다.&lt;/p&gt;&lt;p&gt;자세한건 밑에서 살펴보시죠.&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;h1&gt;설치&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt; 및 사용법&lt;/span&gt;&lt;/h1&gt;&lt;/blockquote&gt;&lt;p&gt;react-router을 사용할 프로젝트 안에서 설치를 진행하주면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;NPM은 'yarn add' 를 'npm i --save' 로 바꿔주시면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;txc-textbox&quot; style=&quot;border-style: solid; border-width: 1px; border-color: rgb(234, 234, 234); background-color: rgb(234, 234, 234); padding: 10px;&quot;&gt;&lt;p&gt;yarn add react-router react-router-dom @types/react-router @types/react-router/dom&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;바로 들어가도록 하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우선, 'BrowserRouter'를 import 해줍시다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;*&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;React&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'react'&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'./App.css'&lt;/span&gt;;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; { &lt;span style=&quot;color: #9cdcfe;&quot;&gt;BrowserRouter&lt;/span&gt; } &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'react-router-dom'&lt;/span&gt;;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 후, Componnent를 작성해 주실 때,&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Router를 이용할 곳을 BrowerRouter로 감싸줍시다&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div style=&quot;line-height: 18px;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;*&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;React&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'react'&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'./App.css'&lt;/span&gt;;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; { &lt;span style=&quot;color: #9cdcfe;&quot;&gt;BrowserRouter&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Router&lt;/span&gt;, &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Route&lt;/span&gt;, &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Link&lt;/span&gt;} &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'react-router-dom'&lt;/span&gt;;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Exroute&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'./components/exroute/exroute'&lt;/span&gt;; &lt;span style=&quot;color: #608b4e;&quot;&gt;// MyComponnent&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #4ec9b0;&quot;&gt;App&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;extends&lt;/span&gt; &lt;span style=&quot;color: #4ec9b0;&quot;&gt;React&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Component&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;  &lt;span style=&quot;color: #569cd6;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa;&quot;&gt;render&lt;/span&gt;() {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #c586c0;&quot;&gt;return&lt;/span&gt; (&lt;/div&gt;&lt;div&gt;      &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Router&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;className&lt;/span&gt;=&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;App&quot;&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;      &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Router&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    );&lt;/div&gt;&lt;div&gt;  }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;export&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;App&lt;/span&gt;;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같이 진행해주시면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 클릭시 해당 path로 이동하도록 nav를 추가해 주고,&lt;/p&gt;&lt;p&gt;해당 path시 Exroute를 Render 할 수 있도록 코드를 추가해보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; line-height: 18px; white-space: pre;&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;*&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;React&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'react'&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'./App.css'&lt;/span&gt;;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; { &lt;span style=&quot;color: #9cdcfe;&quot;&gt;BrowserRouter&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Router&lt;/span&gt;, &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Route&lt;/span&gt;, &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Link&lt;/span&gt;} &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'react-router-dom'&lt;/span&gt;;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;Exroute&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;from&lt;/span&gt; &lt;span style=&quot;color: #ce9178;&quot;&gt;'./components/exroute/exroute'&lt;/span&gt;; &lt;span style=&quot;color: #608b4e;&quot;&gt;// MyComponnent&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #4ec9b0;&quot;&gt;App&lt;/span&gt; &lt;span style=&quot;color: #569cd6;&quot;&gt;extends&lt;/span&gt; &lt;span style=&quot;color: #4ec9b0;&quot;&gt;React&lt;/span&gt;.&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Component&lt;/span&gt; {&lt;/div&gt;&lt;div&gt;  &lt;span style=&quot;color: #569cd6;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa;&quot;&gt;render&lt;/span&gt;() {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #c586c0;&quot;&gt;return&lt;/span&gt; (&lt;/div&gt;&lt;div&gt;      &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Router&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;div&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;className&lt;/span&gt;=&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;App&quot;&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;          &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;nav&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;            &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Link&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;to&lt;/span&gt;=&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;/hello&quot;&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;hello&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Link&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;          &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;nav&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;          &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;            &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Route&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;path&lt;/span&gt;=&lt;span style=&quot;color: #ce9178;&quot;&gt;&quot;/hello&quot;&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;component&lt;/span&gt;=&lt;span style=&quot;color: #569cd6;&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe;&quot;&gt;Exroute&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;}&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;          &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #569cd6;&quot;&gt;div&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;      &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0;&quot;&gt;Router&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;    );&lt;/div&gt;&lt;div&gt;  }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0;&quot;&gt;export&lt;/span&gt; &lt;span style=&quot;color: #c586c0;&quot;&gt;default&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe;&quot;&gt;App&lt;/span&gt;;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러면 동작을 한 번 봐볼까요??&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/994458485B73B7B934&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-08-15 오후 2.17.51.png&quot; height=&quot;674&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;위에 nav가 있네요! 한 번 눌러봅시다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/999DA0485B73B7BA25&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-08-15 오후 2.16.47.png&quot; height=&quot;674&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;지정해둔 path로 redirect없이 이동 후 밑에 제가 Routing 해둔 Component를 Render해줬네요!&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;h1&gt;자세하게 알아가기&lt;br /&gt;&lt;/h1&gt;&lt;/blockquote&gt;&lt;h2&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;Router&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;모든 Router Component의 로우레벨 Interface입니다.&lt;/h3&gt;&lt;h3&gt;Router는 단 하나의 자식만을 Render해줍니다.&lt;/h3&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;Route&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;Route Component는 가장 중요한 Component입니다!!&lt;/h3&gt;&lt;h3&gt;위치에 맞게 UI를 Render하기에 가장 기본적으로 알아야합니다.&lt;/h3&gt;&lt;h3&gt;주요 Props&lt;/h3&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;exact : Component에 지정된 path가 현재 location에 자식이면 정확히 일치하는 주소가 아니라도 Render가 되는데, 이 옵션이 true시 path prop과 url이 정확히 일치해야 렌더됩니다.&lt;/li&gt;&lt;li&gt;path : 어느 location에서 Render를 할지 위치를 정해주는 prop입니다.&lt;/li&gt;&lt;li&gt;component : 외부에 Component를 넣어주면 Render시 해당 Component가 렌더됩니다.&lt;/li&gt;&lt;li&gt;render : 따로 렌더할 DOM을 정의해두지 않고 해당 prop에 하드코딩해 넣으면 해당 값이 Render됩니다.&lt;/li&gt;&lt;li&gt;props : Component에 아래의 props들을 전달합니다.&lt;/li&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;match : url path 에 대한 내용이 있습니다.&lt;/li&gt;&lt;li&gt;history : url 이동과 관련된 내용이 있습니다. (same : window.history , 하지만 SPA에 맞게되있음)&lt;/li&gt;&lt;li&gt;location : url을 다룰 수 있도록 구성되있습니다. (same : window.location) : 쿼리 스트링&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h2&gt;&lt;span style=&quot;color: rgb(255, 94, 0);&quot;&gt;Link&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;특정 위치로의 redirect 없이 이동을 하기위해 필요한 Component입니다.&lt;/h3&gt;&lt;h3&gt;Render시 &amp;lt;a&amp;gt;태그로 Render 됩니다.&lt;/h3&gt;&lt;h3&gt;주요 Props&lt;/h3&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;to&amp;lt;string&amp;gt; : 이동할 path&lt;/li&gt;&lt;li&gt;to&amp;lt;object&amp;gt; : to에 json 리터럴 형식으로 입력해서 좀 더 상세하게 다룰 수 있습니다.&lt;/li&gt;&lt;li&gt;others : a태그에 관련된 props Attribute를 넣어줄 수 있습니다.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음에 react-router을 좀 더 자세하게 써보도록 하겠습니다ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>React</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/33</guid>
<comments>https://blog.r-bertko.com/33#entry33comment</comments>
<pubDate>Wed, 15 Aug 2018 15:55:09 +0900</pubDate>
</item>
<item>
<title>ts-lint 불필요한 옵션</title>
<link>https://blog.r-bertko.com/32</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p&gt;안녕하세요. AlbertKo입니다.&lt;/p&gt;&lt;p&gt;create-react-app으로 프로젝트를 만들면&lt;/p&gt;&lt;p&gt;ts-lint가 옵션이 죄다켜져있어서 좀 빡박한 면이 많아서 개인적으로&lt;/p&gt;&lt;p&gt;필요없는 옵션을 알려드릴테니 false 해주시면 될 것 같습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;형식 :&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;lt;where&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;- error message&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;: &quot;Option-Name&quot; : false,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;lt;tslint-react&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;- JSX elements with no children must be self-closing&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;:&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;&quot;jsx-self-close&quot;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;&amp;lt;tslint&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 12px; white-space: pre;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; - Calls to 'console.log' are not allowed.&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 12px; white-space: pre;&quot;&gt;&lt;font face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt; : &lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;&quot;no-console&quot;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; - &lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;The key is not sorted alphabetically&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt; : &quot;object-literal-sort-keys&quot;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; background-color: rgb(255, 255, 255);&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; background-color: rgb(255, 255, 255);&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;-&amp;nbsp;Class name must be in pascal case&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;:&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;&quot;class-name&quot;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; - &lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: Menlo, Monaco, Consolas, monospace; font-size: 14px;&quot;&gt;interface name must start with a capitalized I&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; : &lt;/span&gt;&lt;font color=&quot;#ce9178&quot; face=&quot;Menlo, Monaco, Courier New, monospace&quot;&gt;&lt;span style=&quot;font-size: 12px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;“interface-name”: {&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;
        options: [“never-prefix”],
    },&lt;/span&gt;&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;-&amp;nbsp;variable name must be in lowerCamelCase, PascalCase or UPPER_CASE&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;:&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: Menlo, Monaco, Consolas, monospace;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;&quot;variable-name&quot;&lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, monospace; font-size: 12px; white-space: pre;&quot;&gt; - &lt;/span&gt;&lt;font face=&quot;Menlo, Monaco, Consolas, monospace&quot;&gt;&lt;span style=&quot;font-size: 12px; white-space: pre;&quot;&gt;Array type using 'Array&amp;lt;T&amp;gt;' is forbidden for simple types. Use 'T[]' instead.&lt;/span&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&amp;nbsp;:&amp;nbsp;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, monospace; font-size: 12px; white-space: pre;&quot;&gt;&quot;array-type&quot;&lt;/span&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt; : false&lt;/span&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Programming</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/32</guid>
<comments>https://blog.r-bertko.com/32#entry32comment</comments>
<pubDate>Sat, 11 Aug 2018 14:16:30 +0900</pubDate>
</item>
<item>
<title>[잡담]Trello를 쓰면 점점 뿌듯해지는 것 같습니다</title>
<link>https://blog.r-bertko.com/29</link>
<description>&lt;div class=&quot;tt_adsense_top&quot; style=&quot;margin-bottom:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;text-align:center;margin:0 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_상단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2539319730&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9970FD375B66E9BC2A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2018-08-05 오후 9.11.51.png&quot; height=&quot;513&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2;&quot;&gt;&lt;span style=&quot;color: rgb(189, 189, 189); font-size: 14pt;&quot;&gt;스터디_진행_프로세스.jpg&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; line-height: 2;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;Trello를 쓰다보면 뭔가 마음이 편해질 때가 있는 것 같습니다.&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; line-height: 2;&quot;&gt;뭐랄까 점들이 머리 여기저기 굴러다니는데 그것들을 하나로 모아 선을 만들고 선들이 점점 그림같아지는 느낌&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;clear:both&quot;&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;div style=&quot;display:inline;text-align:center;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- PC_하단 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:336px;height:280px&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;2084449193&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;tt_adsense_bottom&quot; style=&quot;margin-top:30px&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 반응형 --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:block&quot;
     data-ad-client=&quot;ca-pub-5219190716272227&quot;
     data-ad-slot=&quot;8311904054&quot;
     data-ad-format=&quot;auto&quot;
     data-full-width-responsive=&quot;true&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>잡담</category>
<author>AlbertKo AlbertKo</author>
<guid>https://blog.r-bertko.com/29</guid>
<comments>https://blog.r-bertko.com/29#entry29comment</comments>
<pubDate>Sun, 05 Aug 2018 21:16:41 +0900</pubDate>
</item>
</channel>
</rss>