<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[김선철님의 블로그]]></title>
			<link>http://blog.naver.com/sckim007</link>
			
				<image>
					<url><![CDATA[http://blogpfthumb.phinf.naver.net/20150119_296/sckim007_1421677186178xNiFl_JPEG/PHOTO_0075_resized.jpg?type=m2]]></url>
					<title><![CDATA[김선철님의 블로그]]></title>
					<link>http://blog.naver.com/sckim007</link>
				</image>
			
			<description><![CDATA[김선철입니다]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Sun, 12 May 2019 23:51:23 +0900</pubDate>

			
				<item>
					<author>sckim007</author>
					<category><![CDATA[리눅스&#160;활용]]></category>
					<title><![CDATA[ubuntu SNAT 설정 및 삭제]]></title>
					<link>http://blog.naver.com/sckim007/221407354972</link>
					<guid>http://blog.naver.com/sckim007/221407354972</guid>
					<description><![CDATA[아래와 같은 구성에서 ens8에 연결된 사설 네트워크 1.1.1.0/24 에 연결된 단말들이 인터넷으로 통신을 가능하게 하기 위하여는 SNAT 설정이 필요한다. 설정하는 명령은 아래와 같다. iptables -t nat -A POSTROUTING -o ens3 -j SNAT --to 192.168.122.101 삭제 하는 명령은 아래와 같다. iptables -t nat -D POSTROUTING -o ens3 -j SNAT --to 192.168.122.101]]></description>
					<pubDate>Tue, 27 Nov 2018 17:22:57 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[리눅스&#160;활용]]></category>
					<title><![CDATA[ubuntu DNAT 설정방법]]></title>
					<link>http://blog.naver.com/sckim007/221404766943</link>
					<guid>http://blog.naver.com/sckim007/221404766943</guid>
					<description><![CDATA[&lt;설정&gt;아래와 같이 DNAT를 위해 iptable 명령을 실행한다. iptables -t nat -I PREROUTING -p tcp --dport 8000 -j DNAT --to 192.168.122.11:22 iptables -t nat -I PREROUTING -p tcp --dport 8001 -j DNAT --to 192.168.122.12:22 iptables -t nat -I PREROUTING -p tcp --dport 8002 -j DNAT --to 192.168.122.21:22 iptables -t nat -I PREROUTING -p tcp --dport 8003 -j DNAT --to 192.168.122.22:22 iptables -I FORWARD -p tcp -d 192.168.122.0/24 -j ACCEPT &lt;삭제&gt;iptables -t nat -D PREROUTING -p tcp --dport 8000 -j DNAT --to 192.168.122.11:22 &lt;재부팅시 적용방법&gt;1. iptables-persistent 패키지를 설치한다.......]]></description>
					<pubDate>Fri, 23 Nov 2018 17:53:43 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[리눅스&#160;활용]]></category>
					<title><![CDATA[ubuntu 18.04 hostname 설정]]></title>
					<link>http://blog.naver.com/sckim007/221396675918</link>
					<guid>http://blog.naver.com/sckim007/221396675918</guid>
					<description><![CDATA[* /etc/hostname 에 hostname 설정 * hostnamectl로 hostname 설정한다. hostnamectl set-hostname &lt;HOST-NAME&gt; * reboot 한다. * reboot 후에도 변경되지 않으면, 다음의 파일을 확인한다. /etc/cloud/cloud.cfg * 파일이 존재 하면 아래와 같이 변경한다. FROM:preserve_hostname: falseTO:preserve_hostname: true * 파일 수정 후 reboot 한다.]]></description>
					<pubDate>Mon, 12 Nov 2018 11:01:40 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[TUNNEL]]></category>
					<title><![CDATA[socat UDP tunnel 설정방법]]></title>
					<link>http://blog.naver.com/sckim007/221390496444</link>
					<guid>http://blog.naver.com/sckim007/221390496444</guid>
					<description><![CDATA[터널 구조 [IP][UDP][IP] 터널을 설정하기 위하여 먼저 TUN 인터페이스를 생성해야 한다. TUN은 유저영역 프로그램에 의해 관리되는 네트워크 디바이스이다.커널이 TUN 디바이스로 IP 패킷을 전송할 때, TUN 디바이스는 유저영역 프로그램으로 전달한다. 정반대로, 유서영역 프로그램은 TUN 디바이스를 통하여 커널로 패킷을 전송할 수 있다.TUN Device 확인 방법아래와 같이 /dev/net에 tun 인터페이스가 존재하면 된다. # ls /dev/nettun 이제 UDP 소켓 위에서 Encapsulating 함으로서 TUN 디바이스를 관리하는 하나의 단순한 프로그램을 갖고자 한다. socat 을 사용하기On the first host: sudo socat UDP:192.0.2.2:9000,bind=192.0.2.1:9000.......]]></description>
					<pubDate>Fri, 02 Nov 2018 21:49:55 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[리눅스&#160;활용]]></category>
					<title><![CDATA[ubuntu 18.04 static ip 주소 설정 방법]]></title>
					<link>http://blog.naver.com/sckim007/221390174901</link>
					<guid>http://blog.naver.com/sckim007/221390174901</guid>
					<description><![CDATA[ubuntu 17.10 부터는 /etc/network/interfaces 파일을 /etc/netplan/*.yaml 로 변경하였다. 1. static ip 주소를 설정하기 위하여 아래와 같이 *.yaml 파일을 수정한다. # vi /etc/netplan/50-cloud-init.yaml...network: ethernets: ens3: addresses: [192.168.122.11/24] gateway4: 192.168.122.1 nameservers: addresses: [192.168.122.1] dhcp4: no version: 2 2. 설정된 ip 주소를 반영하기 위하여 아래의 명령을 실행한다. # netplan apply 3. ip 주소를 확인한다. # ifconfigens3: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 192.168.122.11 netmask 255.255.255.0 broadcast 192.168.122.255 inet6 fe80::5054:ff:.......]]></description>
					<pubDate>Fri, 02 Nov 2018 13:41:21 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[raspberry&#160;pi]]></category>
					<title><![CDATA[02. Raspberry-pi 3에 apparmor 활성화를 위한 kernel build 절차 ]]></title>
					<link>http://blog.naver.com/sckim007/220818122160</link>
					<guid>http://blog.naver.com/sckim007/220818122160</guid>
					<description><![CDATA[Raspberry pi 3에 ubuntu 16.04 mate를 설치한 후 snap install hello-world를 수행하면 아래와 같은 메시지가 출력되며 snap 패키지가 설치되지 않는다. root@RaspBerry2:~# snap find hello Name Version Developer Notes Summary hello 2.10 canonical - GNU Hello, the "hello world" snap hello-world 6.3 canonical - The 'hello-world' of snaps root@RaspBerry2:~# snap install hello-world0 B / 20.00 KB [_______________________________________________________] 0.00 % error: cannot perform the following tasks:- Setup snap "hello-world" (27) security profiles (cannot setup apparmor for snap "hello-world": cannot loa.......]]></description>
					<pubDate>Thu, 22 Sep 2016 14:01:32 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[raspberry&#160;pi]]></category>
					<title><![CDATA[01. Raspberry-pi 3에 ubuntu-mate 16.04 설치 및 주변 장치 활성화 절차]]></title>
					<link>http://blog.naver.com/sckim007/220811674596</link>
					<guid>http://blog.naver.com/sckim007/220811674596</guid>
					<description><![CDATA[raspberry-pi 3(Model B)에 ubuntu-mate 16.04를 설치 하는 절차를 기술한다. 다른 버전이나 모델에서는 설정방법이 다를 수 있다. 1. raspberry-pi 에 해당하는 이미지를 다운 받는다. https://ubuntu-mate.org/download/ 로 이동한다. ubuntu Mate 16.04.1 LTS 링크를 클릭한다. Raspberry Pi 킹크를 클릭한다. ubuntu-mate-16.04-desktop-armhf-raspberry-pi.img.xz.torrent &lt;== 토렌트 파일로 다운로드 2. 다운로드 받은 이미지를 microSD 카드를 부팅 이미지로 생성한다. GUI 기반으로 작업하는 것이 편리하기 때문에 아래와 같이 디스크 유틸리티를 생성한다. apt-get install gnome-disk-utility 디스크 유틸리티를 실행 -&gt; microSD.......]]></description>
					<pubDate>Tue, 13 Sep 2016 10:58:16 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[리눅스&#160;활용]]></category>
					<title><![CDATA[인터페이스 이름 변경 in ubuntu 16.04]]></title>
					<link>http://blog.naver.com/sckim007/220719738809</link>
					<guid>http://blog.naver.com/sckim007/220719738809</guid>
					<description><![CDATA[ubuntu 16.04 설치 후에 인터페이스 이름이 ens33, ens38, ... 등으로 설정된다.원하는 인터페이스 이름을 eth, 또는 swp, 으로 변경하고자 하는 경우 아래와 같은 절차로 바꿀수 있다. 1. 인터페이스 이름 규칙 변경(여기서는 ens33, ens38을 swp0, swp1으로 변경) vi /etc/udev/rules.d/10-network.rules SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="00:0c:29:b6:eb:86",KERNEL=="ens33", NAME="swp0"SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="00:0c:29:b6:eb:90",KERNEL=="ens38", NAME="swp1" 2. 변경하고자 하는 이름 기반으로 고정 IP 설정vi /etc/network/interfaces...# The primary network interfaceauto swp0iface sw.......]]></description>
					<pubDate>Thu, 26 May 2016 13:31:27 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[영어회화]]></category>
					<title><![CDATA[리얼패턴 500]]></title>
					<link>http://blog.naver.com/sckim007/220699908054</link>
					<guid>http://blog.naver.com/sckim007/220699908054</guid>
					<description><![CDATA[01. want 02. get 03. gonna 04. have 05. have to 06. think 07. know 08. say 09. tell/talk 10. need 11. feel/see/sound 72. I feel like + 주어 + 동사 ~하다는 생각이 들어/ ~같은 기분이야. &lt;유사패턴&gt; I feel as if ... || I feel as though || I think ... 뭔가 잘못된 것 같은 기분이야. 나 바가지 썼다는 생각이 들어. 난 소외된 것 같은 기분이야. 미쳐 버리는 것 같은 기분이야. I feel like something's not right. I feel like I got ripped off. I feel like I'm left out. I feel like I'm going out of mind. 73. I feel bad about/(that)... ~때문에 속상해/~때문에 기분이 안 좋아. 네가 면접을 잘 못 봤다니 나도 속.......]]></description>
					<pubDate>Tue, 03 May 2016 11:09:00 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[리눅스&#160;활용]]></category>
					<title><![CDATA[apt 사용법]]></title>
					<link>http://blog.naver.com/sckim007/220690294298</link>
					<guid>http://blog.naver.com/sckim007/220690294298</guid>
					<description><![CDATA[패키지들은 패키지 툴을 이용해 설치하게 되는데 우분투에서 사용하는 패키지 툴에는 apt, dpkg, aptitude가 있다.먼저 apt는 온라인 리포지토리에서 패키지를 다운로드받고 설치하는데 사용 된다. 이 때 보통 로컬환경(오프라인)상에서도 사용할 수 있지만 정상적으로 사용하기 위해서는 온라인 환경에서 사용하는 것이 좋다.dpkg는 cd-rom이나 다른 디스크장치에 있는 .deb 파일을 제어하는 경우에 일반적으로 사용되며, dpkg 명령어는 시스템 소프트웨어에 대한 설정이나 설치 및 정보를 얻는데 사용되는 옵션을 가진다.이제 각 패키지 툴에서 사용하는 명령어들을 하나하나 살펴보자.1. apt 실질적으로 apt는 dpkg와 함께 동작한다. 하지만 필.......]]></description>
					<pubDate>Fri, 22 Apr 2016 11:58:42 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[Deep dive to Resource]]></title>
					<link>http://blog.naver.com/sckim007/220687585280</link>
					<guid>http://blog.naver.com/sckim007/220687585280</guid>
					<description><![CDATA[https://docs.chef.io/resources.html]]></description>
					<pubDate>Tue, 19 Apr 2016 15:19:03 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[Deep dive to Template]]></title>
					<link>http://blog.naver.com/sckim007/220687584872</link>
					<guid>http://blog.naver.com/sckim007/220687584872</guid>
					<description><![CDATA[https://docs.chef.io/resource_template.html]]></description>
					<pubDate>Tue, 19 Apr 2016 15:18:37 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[운영체제 버젼별 파일 배포]]></title>
					<link>http://blog.naver.com/sckim007/220686491212</link>
					<guid>http://blog.naver.com/sckim007/220686491212</guid>
					<description><![CDATA[우분투, CentOS, Fedora 등 서로 다른 운영체제가 설치된 노드가 있다면 각 운영체제별로 다른 파일을 배포해야 할 때가 있다. 운영체제별로 설정 파일에 필요한 옵션 등이 다를 수 있다. 예를 들어 우분투의 경우 "apt-get", Fedora의 경우 "yum"으로 패키지를 설치하기 때문이다. chef 에서는 노드의 플랫폼에 따라 알맞은 파일이나 템플릿을 선택할 수 있는 방법을 제공한다. 1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create version_test_cookbook** Creating cookbook version_test_cookbook in /root/chef-repo/cookbooks** Creating README for cookbook: version_test_cookbook** Creating CHANGELOG for cook.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:44:33 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[노드 파일 삭제]]></title>
					<link>http://blog.naver.com/sckim007/220686490880</link>
					<guid>http://blog.naver.com/sckim007/220686490880</guid>
					<description><![CDATA[노드에서 패키지를 삭제하는 경우, chef 가 자동으로 파일을 지워주지 않는다. cookbook에서 리소스를 지운다고 해서 세프가 해당 노드에서 해당 리소스를 실제로 삭제하지 않는다. 따라서, 직접삭제해야 한다. 1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create dir_delete_cookbook** Creating cookbook dir_delete_cookbook in /root/chef-repo/cookbooks** Creating README for cookbook: dir_delete_cookbook** Creating CHANGELOG for cookbook: dir_delete_cookbook** Creating metadata for cookbook: dir_delete_cookbook 2. 노드의 run-list 정보를 수정한다(여기서는 node01 편집). root@chefworks:~/chef-re.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:44:12 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[디렉토리 트리 배포]]></title>
					<link>http://blog.naver.com/sckim007/220686490662</link>
					<guid>http://blog.naver.com/sckim007/220686490662</guid>
					<description><![CDATA[정적인 웹사이타나 백업 데이터 등 디렉토리 구조를 통째로 노드에 업로드해야 하는 경우 셰프의 remote_directory 리소스를 이용하면 모든 파일과 디렉토리를 노드로 복사 할 수 있다. cookbook으로 부터 복사된 디렉토리는 "COOKBOOK_NAME/files/default/REMOTE_DIRECTORY"에 위치해야 한다. "remote_directory" 리소스는 파일 속성을 따른다. 1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create dir_copy_cookbook** Creating cookbook dir_copy_cookbook in /root/chef-repo/cookbooks** Creating README for cookbook: dir_copy_cookbook** Creating CHANGELOG for cookbook: dir_copy_cookbook** Creating metadata.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:43:58 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[파일이 변경될 때 명령어 수행]]></title>
					<link>http://blog.naver.com/sckim007/220686490351</link>
					<guid>http://blog.naver.com/sckim007/220686490351</guid>
					<description><![CDATA[ㅇㅇ]]></description>
					<pubDate>Mon, 18 Apr 2016 13:43:41 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[소스코드를 이용한 소프트웨어 설치]]></title>
					<link>http://blog.naver.com/sckim007/220686489882</link>
					<guid>http://blog.naver.com/sckim007/220686489882</guid>
					<description><![CDATA[패키지 형태로 제공되지 않은 소프트웨어를 설치하려면 소스코드를 직접다운로드 받아 컴파일 해야 한다. [ Case I ]패키지 배포 서버로부터 원하는 패키지를 다운 받는 기능에 대한 cookbook을 만들고 각 노드에서 자동으로 해당되는 패키지를 설치하는 절차를 기술한다. 1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create n2os-pre-pkg... 2. 노드의 run-list 정보를 수정한다(여기서는 node01 편집). root@chefworks:~/chef-repo# knife node edit node01{ "name": "node01", "chef_environment": "_default", "normal": { "tags": [ ] }, "run_list": [ "recipe[n2os-pre-pkg]"] } 3. cookbook의 default recipe를 편.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:43:12 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[Third-party 저장소의 패키지 설치]]></title>
					<link>http://blog.naver.com/sckim007/220686489604</link>
					<guid>http://blog.naver.com/sckim007/220686489604</guid>
					<description><![CDATA[1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create mycookbook** Creating cookbook mycookbook in /root/chef-repo/cookbooks** Creating README for cookbook: mycookbook** Creating CHANGELOG for cookbook: mycookbook** Creating metadata for cookbook: mycookbook 2. 노드의 run-list 정보를 수정한다(여기서는 node01 편집). root@chefworks:~/chef-repo# knife node edit node01{ "name": "node01", "chef_environment": "_default", "normal": { "tags": [ ] }, "run_list": [ "recipe[nginx]", "recipe[mycookbook]"] } 3. apt 쿡북을 설치한다. root@chefworks:~/chef-repo# knife cookbook site install a.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:42:53 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[루비 조건문과 반복문을 활용한 템플릿 작성]]></title>
					<link>http://blog.naver.com/sckim007/220686489049</link>
					<guid>http://blog.naver.com/sckim007/220686489049</guid>
					<description><![CDATA[1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create mycookbook** Creating cookbook mycookbook in /root/chef-repo/cookbooks** Creating README for cookbook: mycookbook** Creating CHANGELOG for cookbook: mycookbook** Creating metadata for cookbook: mycookbook 2. 노드의 run-list 정보를 수정한다(여기서는 node01 편집). root@chefworks:~/chef-repo# knife node edit node01{ "name": "node01", "chef_environment": "_default", "normal": { "tags": [ ] }, "run_list": [ "recipe[nginx]", "recipe[mycookbook]"] } 3. cookbook의 default recipe를 수정한다. root@chefworks:~/chef-repo# vi cookbooks.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:42:17 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[템플릿을 이용한 설정 파일 생성]]></title>
					<link>http://blog.naver.com/sckim007/220686469382</link>
					<guid>http://blog.naver.com/sckim007/220686469382</guid>
					<description><![CDATA[1. cookbook 생성한다. root@chefworks:~/chef-repo# knife cookbook create mycookbook** Creating cookbook mycookbook in /root/chef-repo/cookbooks** Creating README for cookbook: mycookbook** Creating CHANGELOG for cookbook: mycookbook** Creating metadata for cookbook: mycookbook 2. 노드의 run-list 정보를 수정한다(여기서는 node01 편집).root@chefworks:~/chef-repo# knife node edit node01{ "name": "node01", "chef_environment": "_default", "normal": { "tags": [ ] }, "run_list": [ "recipe[nginx]", "recipe[mycookbook]"] } 3. cookbook의 default recipe를 수정한다. root@chefworks:~/chef-repo# vi cookbooks/.......]]></description>
					<pubDate>Mon, 18 Apr 2016 13:20:19 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[Python - Thread example]]></title>
					<link>http://blog.naver.com/sckim007/220683953195</link>
					<guid>http://blog.naver.com/sckim007/220683953195</guid>
					<description><![CDATA[1. 기본 - Thread 호출 및 실행 예제 코드import threadingimport datetime class ThreadClass(threading.Thread): def run(self): now = datetime.datetime.now() print '{0} says Hello World at time : {1}'.format(self.getName(), now) #print 'hello' for i in range(2): t = ThreadClass() t.start() 실행결과root@chefnode03:~/exam_python# python hello_threads.py Thread-1 says Hello World at time : 2016-04-15 10:58:21.338704Thread-2 says Hello World at time : 2016-04-15 10:58:21.338901 2. URL 가져오기 예제 코드import urllib2import time hosts = ["http://yahoo.com", "http://google.com", "http://amazon.com","http.......]]></description>
					<pubDate>Fri, 15 Apr 2016 12:16:16 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[Python - JSON example]]></title>
					<link>http://blog.naver.com/sckim007/220683316600</link>
					<guid>http://blog.naver.com/sckim007/220683316600</guid>
					<description><![CDATA[1. 기본 소스 json_string = '{"first_name": "Guido", "last_name":"Rossum"}' # import json libraryimport json # It can be parsed like thisparsed_json = json.loads(json_string) # and can now be used as a normal dictionaryprint(parsed_json['first_name']) # You can also convert the following to JSONd = { 'first_name': 'Guido', 'second_name': 'Rossum', 'titles': ['BDFL', 'Developer'],} print(json.dumps(d)) 실행결과root@chefnode03:~/exam_python# python json_basic.py Guido{"first_name": "Guido", "titles": ["BDFL", "Developer"], "second_name": "Rossum"} 2. Dictionary 를 json으로 변환 출력하기. &gt;&gt;.......]]></description>
					<pubDate>Thu, 14 Apr 2016 17:51:29 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[14. More - Functional Programing]]></title>
					<link>http://blog.naver.com/sckim007/220681427946</link>
					<guid>http://blog.naver.com/sckim007/220681427946</guid>
					<description><![CDATA[출처 : https://docs.python.org/3/howto/functional.html Introduction이번 글은 functional 프로그래밍의 원리를 설명한다. 만약 Python 언어를 배우는데 관심이 있다면 이번 글을 뛰어넘고, 다음 섹션의 Iterators 부분부터 읽으면 된다. 프로그래밍 언어는 몇가지 상이한 방법으로 문제들을 해소한다. Most programming languages are procedural: programs are lists of instructions that tell the computer what to do with the program’s input. C, Pascal, and even Unix shells are procedural languages. In declarative languages, you write a specification that describes the problem to be solved, and the language implement.......]]></description>
					<pubDate>Tue, 12 Apr 2016 16:42:16 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[13. 더 많은 것들]]></title>
					<link>http://blog.naver.com/sckim007/220677996392</link>
					<guid>http://blog.naver.com/sckim007/220677996392</guid>
					<description><![CDATA[Python의 유용한 추가 기능 및 유용한 정보를 알아보자 1. 튜플 넘기기 함수의 실행 결과로 두 개 이상의 값을 반환하고 싶을 때가 있다. 파이썬에서는 할 수 있다. 단순히 튜플을 넘겨 주기만 하면 된다. &gt;&gt;&gt; def get_error_details():... return (2, 'details')... &gt;&gt;&gt; errnum, errstr = get_error_details()&gt;&gt;&gt; errnum2&gt;&gt;&gt; errstr'details' 위와 같이 a, b = &lt;계산식&gt; 과 같이 해 주면 계산식의 결과로 넘어온 튜플이 자동으로 두 값에 알맞게 들어가게 된다. 이것을 이용하여 두 변수의 값을 바꾸어야 할 때 다음과 같이 할 수 있다: &gt;&gt;&gt; a = 5; b = 8&gt;&gt;&gt; a, b(5, 8)&gt;&gt;&g.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:32:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[12. 표준 라이브러리]]></title>
					<link>http://blog.naver.com/sckim007/220677995945</link>
					<guid>http://blog.naver.com/sckim007/220677995945</guid>
					<description><![CDATA[파이썬 표준 라이브러리는 파이썬을 설치할 때 항상 함께 설치되는 많은 수의 유용한 모듈들을 말한다. 파이썬 표준 라이브러리에 익숙해지면 이를 이용해 해결할 수 있는 많은 문제들을 좀 더 빠르고 쉽게 해결할 수 있다.지금부터 표준 라이브러리에 포함된 많은 모듈 중에서 자주 사용되는 몇가지 모듈에 대해 알아보자. 파이썬 표준 라이브러리에 포함된 모든 모듈에 대한 자세한 설명은 파이썬과 함께 설치되는 설명서의 '라이브러리 레퍼런스' 섹션1 에서 확인해 보실 수 있다. 1. sys 모듈 sys 모듈에는 시스템의 기능을 다루는 여러 함수들이 들어 있다. 예를 들어 sys.argv 리스트에는 명령줄 인수들이 들어 있다. 또 sys 모듈을 통해 현.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:31:40 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[11. 예외처리]]></title>
					<link>http://blog.naver.com/sckim007/220677995622</link>
					<guid>http://blog.naver.com/sckim007/220677995622</guid>
					<description><![CDATA[예외란 말 그대로 프로그램에서 벌어지는 예외적인 상황을 뜻한다. 예를 들자면 파일을 읽고자 할 때 그 파일이 존재하지 않는 경우라던지, 또는 프로그램이 한참 실행중인데 그 파일을 갑자기 지워버렸다던지 하는 경우 등이다. 이러한 상황을 처리해 주는 것을 예외 처리 라고 한다. 프로그램에 존재하지 않는 명령문이 있을 경우 어떻게 될까? 이런 경우 파이썬은 손을 들고(raise) 프로그램에 오류(error)가 있다고 알려 준다. 1. 오류간단한 print 함수를 호출하는 상황을 생각해 보자. 이 때 print 를 Print 라고 잘못 쳤을 경우 어떻게 될까? 대/소문자 구분에 주의하자. 이 경우, 파이썬은 구문 오류를 발생 시킨다. root@chefnode03:~/e.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:31:22 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[10. 입력과 출력]]></title>
					<link>http://blog.naver.com/sckim007/220677995015</link>
					<guid>http://blog.naver.com/sckim007/220677995015</guid>
					<description><![CDATA[프로그램을 만들다 보면 간혹 프로그램이 사용자와 상호 작용을 해야 할 때가 있을 것이다. 예를 들어, 사용자로부터 뭔가를 입력받고 처리 결과를 출력해 주는 것 같은 일이 필요할 때이다. 파이썬에서는 이를 위해 각각 raw_input() 함수와 print 문을 사용합니다.결과를 출력해주기 위해서는 str (문자열) 클래스가 제공하는 여러 메소드를 사용할 수도 있다. 예를 들면, rjust 메소드를 사용하여 출력될 문자열이 특정 폭의 문자열 안에서 오른쪽 정렬되도록 할 수 있다.help(str) 을 실행하여 이들에 대해 자세히 알아보자.또 다른 입/출력의 형식은 파일을 다루는 것이다. 파일을 생성하고, 읽고, 쓰는 것은 많은 프로그램에서 중요한 부분.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:30:47 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[9. 객체 지향 프로그래밍]]></title>
					<link>http://blog.naver.com/sckim007/220677994623</link>
					<guid>http://blog.naver.com/sckim007/220677994623</guid>
					<description><![CDATA[지금까지 프로그램을 작성할 때, 우리는 데이터를 다루는 명령들의 블록인 함수들의 조합으로 프로그램을 구성하였다. 이러한 설계 방식을 절차 지향 프로그래밍 기법이라고 부른다. 이와 달리 데이터와 기능을 객체라고 불리우는 것으로 묶어서 프로그램을 구성하는 또 다른 기법이 있다. 이것을 객체 지향 프로그래밍 기법이라고 부른다. 아마도 여러분의 대부분의 시간 동안 절차 지향 프로그래밍 기법을 통해 프로그램을 작성하게 되겠지만, 큰 프로그램을 작성할 때 나 이 기법을 이용하는 것이 더 편리한 문제를 해결해야 할 경우 객체 지향 프로그래밍 기법을 활용할 수 있다.객체 지향 프로그래밍에서는 클래스와 객체라는 두 가지 주인.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:30:25 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[8. 실생활 문제 해결]]></title>
					<link>http://blog.naver.com/sckim007/220677994122</link>
					<guid>http://blog.naver.com/sckim007/220677994122</guid>
					<description><![CDATA[지금까지 파이썬이라는 언어의 여러 가지 구성 요소에 대해 알아 보았다. 이제는 지금까지 배운 것들을 토대로, 뭔가 유용한 것을 하는 프로그램을 만들어 보도록 하자. 이 챕터의 목표는 여러분이 직접 파이썬 스크립트를 만들고 사용하는 법을 배우는 것이다. 1. 문제 다음과 같은 문제를 해결해 보자:내 중요한 파일들을 백업해두는 프로그램을 만들고 싶어요. 이것은 간단한 문제이지만, 아직 어떻게 접근하면 좋을지 정보가 부족하다. 따라서 약간 분석을 해 보도록 하자. 예를 들어, 어떤 파일을 백업할지 어떻게 지정해 줄요? 파일들은 어떻게 저장되어야 하며 또 어디에 저장되어야 할까? 문제에 대해 분석한 이후에는, 프로그램을 설계.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:29:57 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[7. 자료구조]]></title>
					<link>http://blog.naver.com/sckim007/220677993651</link>
					<guid>http://blog.naver.com/sckim007/220677993651</guid>
					<description><![CDATA[개요자료 구조란 간단하게, 어떤 자료를 담는 구조를 말한다. 다른 말로 하면, 서로 연관있는 어떤 자료들의 집합을 저장하는 데 사용된다.파이썬에는 네 종류의 자료 구조가 있는데, 각각 _리스트, 튜플, 사전, 집합 이다. 이제 앞으로 각각의 사용법에 대해 알아보고 또 각각이 얼마나 편리한지 확인해보도록 하자. 1. 리스트 리스트란 순서대로 정리된 항목들을 담고 있는 자료 구조이다. 즉, 리스트에는 항목의 목록을 저장할 수 있다. 이것은 쉽게 말하자면 장 보러 갈 때 적는 일종의 장바구니 목록 같은 것인데, 아마도 여러분은 각 품목들을 한줄 한줄 적겠지만 파이썬에서는 쉼표로 각 항목을 구분한 다는 것만 다르다.리스트를 정의할.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:29:31 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[6. 모듈]]></title>
					<link>http://blog.naver.com/sckim007/220677993355</link>
					<guid>http://blog.naver.com/sckim007/220677993355</guid>
					<description><![CDATA[앞에서 함수를 통해 여러분의 프로그램 안에서 코드를 재사용하는 방법에 대해서 배워 보았다. 그러면 여러 함수들을 한꺼번에 불러들여 재사용하는 방법은 없을까요? 네, 이럴 때 모듈을이용한다.모듈을 작성하는 데에는 여러가지 방법이 있지만, 가장 간단한 방법은 .py 확장자를 가진 파일을 하나 만들고 그 안에 함수들과 변수들을 정의해 두는 것이다.모듈을 작성하는 또 한 가지 방법은 여러분이 현재 사용중인 파이썬 인터프리터를 만드는데 사용되는 프로그래밍 언어로 모듈을 작성하는 것이다. 예를 들어, 표준 파이썬 인터프리터를 사용 중인 경우 C 언어1 를 이용하여 모듈을 작성하고 컴파일하면 파이썬에서 이것을 불러와 사용할 수.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:29:14 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[5. 함수]]></title>
					<link>http://blog.naver.com/sckim007/220677993076</link>
					<guid>http://blog.naver.com/sckim007/220677993076</guid>
					<description><![CDATA[함수는 재사용 가능한 프로그램의 조각을 말한다. 이것은 특정 블록의 명령어 덩어리를 묶어 이름을 짓고, 그 이름을 프로그램 어디에서건 사용함으로써 그 블록에 포함된 명령어들을 몇번이고 다시 실행할 수 있게 하는 것이다. 이를 보고 함수를 호출한다 라고 한다. 사실 우리는 이미 앞 에서 len 이나 range 와 같은 많은 내장 함수들을 사용해 왔다.이러한 함수라는 것은 프로그램을 작성할 때 아마도 가장 중요한 단위가 될 것이다 (어떤 프로그래밍 언어에서라도). 따라서 이 챕터에서는 함수라는 것을 다양한 관점에서 살펴보도록 하자.함수는 def 키워드를 통해 정의된다. def 뒤에는 함수의 식별자 이름을 입력하고, 괄호로 감싸여진 함.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:28:55 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[4. 흐름제어]]></title>
					<link>http://blog.naver.com/sckim007/220677992837</link>
					<guid>http://blog.naver.com/sckim007/220677992837</guid>
					<description><![CDATA[흐름제어 1. if 문 if 문은 조건을 판별할 때 사용된다. if (만약) 조건이 참이라면, _if 블록_의 명령문을 실행하며 else (아니면) _else 블록_의 명령문을 실행한다. 이 때 else 조건절은 생략이 가능하다. number = 23guess = int(raw_input('Enter an integer : ')) if guess == number:# New block starts hereprint 'Congratulations, you guessed it.'print '(but you do not win any prizes!)'# New block ends hereelif guess &lt; number:# Another blockprint 'No, it is a little higher than that'# You can do whatever you want in a block ...else:print 'No, it is a little lower than that'# you must have guessed &gt; numb.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:28:41 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[3. 연산자와 수식]]></title>
					<link>http://blog.naver.com/sckim007/220677992537</link>
					<guid>http://blog.naver.com/sckim007/220677992537</guid>
					<description><![CDATA[1. 연산자와 수식 파이썬 인터프리터 프롬프트 상에서도 수식을 계산할 수 있다. 다음과 같이 파이썬 인터프리터 프롬프트 상에서 `2 + 3`이라는 수식을 입력해 보자. &gt;&gt;&gt; 2 + 35&gt;&gt;&gt; 3 * 515 &gt;&gt;&gt; 이제 파이썬에서 사용 가능한 연산자들의 종류에 대해 간단히 알아보자.+ (덧셈 연산자)두 객체를 더한다.3 + 5 는 8 을 반환한다. 'a' + 'b' 는 'ab' 를 반환한다. - (뺄셈 연산자)한 숫자에서 다른 숫자를 뺀다. 첫 번째 피연산자가 주어지지 않으면, 0으로 간주된다.-5.2 는 음수를 표현한다. 50 - 24 는 26 을 반환한다. * (곱셈 연산자)두 숫자의 곱 혹은 지정된 숫자만큼 반복된 문자열을 반환한다.2 * 3 은 6 을 반.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:28:24 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[2. 기초]]></title>
					<link>http://blog.naver.com/sckim007/220677992221</link>
					<guid>http://blog.naver.com/sckim007/220677992221</guid>
					<description><![CDATA[1. 주석 print 'hello world' # Note that print is a statement 또는 # Note that print is a statementprint 'hello world' 2. 리터럴 상수 리터럴 상수는 5 , 1.23 과 같은 숫자나, 'This is a string' 혹은 "It’s a string!" 과 같은 문자열 등을 말한다. 3. 숫자형 숫자형에는 정수형(Integer)과 부동 소수점 숫자형(Float)의 두 가지 종류가 있다. 정수형 숫자의 예는 2 입니다. 이것은 단순히 2 라는 숫자를 의미한다. 부동 소수점 숫자의 예는 3.23 , 52.3E-4`와 같은 값이다. E 표기법은 E뒤의 값이 10의 지수임을 나타낸다. 예를 들어 `52.3E-4 는 +52.3 * 10-4+라는 값을 의미한다. 4. 문자열 문자열이란 _문자_의 _나열_을 뜻한다. .......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:28:05 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[1. 설치 및 프롬프트기반 기능 확인]]></title>
					<link>http://blog.naver.com/sckim007/220677974238</link>
					<guid>http://blog.naver.com/sckim007/220677974238</guid>
					<description><![CDATA[[설치]우선 설치부터 해보자! Ubuntu 14.04에서 파이썬 3.4를 사용한다. 1. 패키지 설치 root~# apt-get update root~# apt-get install python3.4 2. 버전 확인 root@chefworks:~/chef-repo# python3 --version Python 3.4.0 [파이썬 프롬프트]1. 연산 root@chefworks:~/chef-repo# python3 Python 3.4.0 (default, Jun 19 2015, 14:20:21) [GCC 4.8.2] on linux Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; 2 + 3 5 &gt;&gt;&gt; 4 * 5 20 &gt;&gt;&gt; -1 - 40 / 2 -21.0 &gt;&gt;&gt; (-1 - 40) / 2 -20.5 &gt;&gt;&gt; exit() 2. 문자열 &gt;&gt;&gt; "Hello !!" + "Mr Kim" 'Hello !!Mr Kim' &g.......]]></description>
					<pubDate>Fri, 08 Apr 2016 16:10:44 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[시스템 자동화 도구 - 단순한 Cookbook 생성 및 Node에 적용하기]]></title>
					<link>http://blog.naver.com/sckim007/220677664453</link>
					<guid>http://blog.naver.com/sckim007/220677664453</guid>
					<description><![CDATA[[개요]Chef workstation에서 cookbook을 생성하고, Chef server로 Cookbook을 upload하여 각 Node에서 chef-client 명령을 통하여 nginx 패키지를 설치하는 방법을 알아보자. [Cookbook 생성 절차] 1. Cookcook 생성knife를 이용하여 "nginx" Cookbook을 생성한다. root@chefworks:~# cd ~/chef-repo root@chefworks:~/chef-repo# knife cookbook create nginx ** Creating cookbook nginx in /root/chef-repo/cookbooks ** Creating README for cookbook: nginx ** Creating CHANGELOG for cookbook: nginx ** Creating metadata for cookbook: nginx root@chefworks:~/chef-repo# cd cookbooks/nginx/ root@chefworks:~/chef-repo/cookbooks/ng.......]]></description>
					<pubDate>Fri, 08 Apr 2016 10:39:13 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[자동화도구]]></category>
					<title><![CDATA[시스템 자동화 도구 - Chef Server/Workstation/Node 설치 on Ubuntu 14.04]]></title>
					<link>http://blog.naver.com/sckim007/220671570206</link>
					<guid>http://blog.naver.com/sckim007/220671570206</guid>
					<description><![CDATA[[Chef 서비스 구성도] [설치 기본사양]Chef 설치 가이드에 따르면 버전별로 설정절차가 매우 다를 수 있으며, Chef Server를 설치할 시스템의 사양은 적어도 4G RAM 과 4 Core를 만족해야 하고, 64-bit 운영체제이어야 한다. 본 글에서는 성능이 중요하지 않기 때문에 64-bit Ubuntu 14.04 Virtual Machine 을 이용하여 설정해 보았다. [네크워크 구성] vi root@chefserver:~# cat /etc/hosts...127.0.0.1 chefserver.example.com chefserver localhost 192.168.1.61 chefserver.example.com chefserver192.168.1.62 chefworks.example.com chefworks192.168.1.63 chefnode01.example.com chefnode01192.168.1.64 chefnode02.example.com chefnod.......]]></description>
					<pubDate>Fri, 01 Apr 2016 16:49:41 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[모니터링도구]]></category>
					<title><![CDATA[	시스템 모니터링 도구 - Ubuntu 14.04에 Graphite 와 Grafana 연동]]></title>
					<link>http://blog.naver.com/sckim007/220670542231</link>
					<guid>http://blog.naver.com/sckim007/220670542231</guid>
					<description><![CDATA[[Apache, Python Tool, Graphite 설치] 아래와 같이 패키지 배포 서버 정보를 갱신한다. sudo apt&#8208;get update 필요한 패지지를 아래와 같이 설치한다. sudo apt-get install build-essential graphite-web graphite-carbon python-dev apache2 libapache2-mod-wsgi libpq-dev python-psycopg2 * graphite-carbon 설치과정에서 Whisper database 파일 삭제관련 팝업창에서 "No"를 선택한다. [Carbon 설정]이전 글에서와 같이 "/etc/carbon/storage&#8208;schemas.conf" 가 아래와 같음을 확인한다. [carbon]pattern = ^carbon\.retentions = 60:90d [test]pattern = ^test\.retentions = 5s:3h,1m:1d [default_1min_for_1day]pattern = .*re.......]]></description>
					<pubDate>Thu, 31 Mar 2016 15:53:17 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[모니터링도구]]></category>
					<title><![CDATA[시스템 모니터링 도구 - Ubuntu 14.04에 StatsD 설치 및 Graphite 연동 ]]></title>
					<link>http://blog.naver.com/sckim007/220668723334</link>
					<guid>http://blog.naver.com/sckim007/220668723334</guid>
					<description><![CDATA[[StatsD 설치] 설치전 필요한 관련 패키지들을 아래와 같이 설치한다. sudo apt-get install git nodejs devscripts debhelper 디렉토리를 생성한다. mkdir ~/build 디렉토리로 이동하여 statsd 소스를 다운받는다. cd ~/buildgit clone https://github.com/etsy/statsd.git statsd 소스를 컴파일하고 설치한다. cd statsddpkg-buildpackage ~/build 디렉토리에 ".deb"파일이 생성됨을 확인하고 ~/build 디렉토리로 이동한다. cd .. statsd를 설치하기전에 Carbon 서비스를 stop 한다. sudo service carbon-cache stop statsd를 설치한다. sudo dpkg -i statsd*.deb statsd 를 설치하면 자동으로 start 하기 때문에 이후 설정을 위하여 stop 하고.......]]></description>
					<pubDate>Tue, 29 Mar 2016 18:22:45 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[모니터링도구]]></category>
					<title><![CDATA[	시스템 모니터링 도구 - Ubuntu 14.04에 Collectd 설치 및 Graphite 연동]]></title>
					<link>http://blog.naver.com/sckim007/220668631882</link>
					<guid>http://blog.naver.com/sckim007/220668631882</guid>
					<description><![CDATA[Collectd는 시스템 통계를 모으고 metric들을 정형화된 형태로 수집하는 툴이다. [Collectd 설치]아래의 명령으로 패키지 배포 서버 정보를 업데이트 한 후 관련 패키지들을 설치한다. sudo apt-get updatesudo apt-get install collectd collectd-utils [Collectd 설정]설정파일을 아래와 같이 수정한다. sudo vi /etc/collectd/collectd.conf...Hostname "GraphServer"...LoadPlugin apacheLoadPlugin cpuLoadPlugin dfLoadPlugin entropyLoadPlugin interfaceLoadPlugin loadLoadPlugin memoryLoadPlugin processesLoadPlugin rrdtoolLoadPlugin usersLoadPlugin write_graphite...&lt;Plugin apache&gt;&lt;Instance "Graphite"&gt;URL "http.......]]></description>
					<pubDate>Tue, 29 Mar 2016 16:52:12 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[모니터링도구]]></category>
					<title><![CDATA[시스템 모니터링 도구 - Ubuntu 14.04에 Graphite 설치]]></title>
					<link>http://blog.naver.com/sckim007/220668566646</link>
					<guid>http://blog.naver.com/sckim007/220668566646</guid>
					<description><![CDATA[[Graphite 설치]패키지 배포 서버 정보를 업데이트 한후 필요한 패키지를 아래와 같이 설치한다. sudo apt-get updatesudo apt-get install graphite-web graphite-carbon 패키지를 설지 과정에서 향후 해당 패키지를 삭제하는 경우 이전에 생성한 데이터베이스 파일을 Carbon이 삭제 할 것인가를 묻는 화면이 팝업되며, "No"를 선택했을때 데이터베이스 파일을 삭제하지 않느다. 데이터베이스는 "/var/lib/graphite/whisper" 이하 디렉토리에 저장되어 있기 때문에 필요에 따라 수동으로 삭제할 수 있다. [Django를 위한 데이터베이스 설정]기본적으로 SQLite3를 데이터베이스로 설정되어 있으나 보다 안정적인 ProstgreSQL 데이터베이스를 사용.......]]></description>
					<pubDate>Tue, 29 Mar 2016 15:50:01 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[모니터링도구]]></category>
					<title><![CDATA[NetFlow - NFDUMP 및 NFSEN]]></title>
					<link>http://blog.naver.com/sckim007/220665142940</link>
					<guid>http://blog.naver.com/sckim007/220665142940</guid>
					<description><![CDATA[NFDUMP nfdump 설치에 필요한 각 모듈 및 패키지를 설치한다. apt-get update &amp;&amp; apt-get install gcc flex librrd-dev make nfdump 소스를 다운 받아 압축을 푼다. cd /usr/src/wget http://sourceforge.net/projects/nfdump/files/stable/nfdump-1.6.8p1/nfdump-1.6.8p1.tar.gztar zxvf nfdump-1.6.8p1.tar.gzcd nfdump-1.6.8p1 NfSen에 NFDUMP를 사용하기 위하여 nfprofile 옵션을 ./configure에서 활성화 한다. 이후 make, make install 한다. ./configure --enable-nfprofilemake &amp;&amp; make install NfSennfsen 설치에 필요한 각 모듈 및 패키지를 설치한다. apt-get install apache2 libapache2-mod-php5 php5-common libmai.......]]></description>
					<pubDate>Fri, 25 Mar 2016 16:48:57 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[모니터링도구]]></category>
					<title><![CDATA[NetFlow - fprobe 및 flow-tools 사용법]]></title>
					<link>http://blog.naver.com/sckim007/220665082973</link>
					<guid>http://blog.naver.com/sckim007/220665082973</guid>
					<description><![CDATA[[환경]Ubuntu 14.04 [개념]Pcap =&gt; NetFlowProbe =&gt; NetFlow Collector [설치 패키지]$sudo apt-get install fprobe flow-tools [설정 절차]1. 모니터링 포트로 부터 패킷을 수신하여 netflow 생성 /usr/sbin/fprobe -ieth0 -f 'ip host 192.168.1.100 or 192.168.1.101' -d 30 -e 30 localhost:9000 -ieth0 : eth0로 수신되는 패킷을 모니터링 함-f 'ip host 192.168.1.100 or 192.168.1.101' : IP가 192.168.1.100 또는 101인 패킷을 모니터링 대상으로 함-d 30 : idle flow 생명주기로써 30초 동안 패킷이 없으면 플로우 종료-e 30 : active flow 생명주기로써 실제 플로우가 30초를 넘으면 플로우로 계산함localhost:9000 : 패킷에서 N.......]]></description>
					<pubDate>Fri, 25 Mar 2016 15:50:30 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[영어회화]]></category>
					<title><![CDATA[여행회화 단어장]]></title>
					<link>http://blog.naver.com/sckim007/220637356422</link>
					<guid>http://blog.naver.com/sckim007/220637356422</guid>
					<description><![CDATA[갸게가구가능성가다가득찬(만원의)가르치다가방가벼운가수가슴가위가을가이드가장 까까운 역가정가정부가족가죽가지고 오다간단한간장간호사갈색(의)감기감기약감사하다값값을 깍다갓난아이강강도갖고있다같다개개인적인개찰구거리거스름돈거주자거짓말건강]]></description>
					<pubDate>Thu, 25 Feb 2016 00:27:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[영어회화]]></category>
					<title><![CDATA[여행 회화]]></title>
					<link>http://blog.naver.com/sckim007/220637352791</link>
					<guid>http://blog.naver.com/sckim007/220637352791</guid>
					<description><![CDATA[[도착] * 기내에서 제 자리는 어디입니까 ?짐은 여기에 놓아도 될까요 ?좀 지나가도 될까요 ?뭘 드시겠습니까 ?(음료수는) 어떤 것이 있습니까 ?식사는 쇠고기, 닭고기, 생선 어떤 것으로 하시겠습니까?쇠고기를 주십시요.배개와 모포를 주십시요.한국어 신문(잡지) 있습니까 ?속이 안 좋은데, 약을 좀 주십시요. Where is my seat ?Can I put my baggage here ?Excuse me, May I go through ?What would you like to drink ?Which would you like for dinner : beef, chicken, or fish ?Beef, please.May I have a pillow and blanket, please ?Do you have any korean newspapers(magazines)?I have a little sick, can I have some medicine ?.......]]></description>
					<pubDate>Thu, 25 Feb 2016 00:22:32 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[가족일상]]></category>
					<title><![CDATA[2015년 베트남 출장에서 상진이와 만나다]]></title>
					<link>http://blog.naver.com/sckim007/220623850013</link>
					<guid>http://blog.naver.com/sckim007/220623850013</guid>
					<description><![CDATA[]]></description>
					<pubDate>Thu, 11 Feb 2016 16:48:17 +0900</pubDate>
					<tag><![CDATA[iPhone_6]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[단어숙어]]></category>
					<title><![CDATA[Idioms]]></title>
					<link>http://blog.naver.com/sckim007/220561443888</link>
					<guid>http://blog.naver.com/sckim007/220561443888</guid>
					<description><![CDATA[abide by (=keep, be faithful to) 지키다&#65517; You must abide by your promise. abound in(or with) (=be plentiful, be rich in) ~이 풍부하다&#65517; Fish abound in the sea. &#65517; The sea abounds with(or in) fish. above all (=more than anything else) 무엇보다도 &#65517; He was loved by all and above all by the children. according as (=in proportion as) ~에 따라서&#65517; According as the demand increases, prices go up. according to (=on the authority of) ~에 의하면&#65517; According to the weather report, it will rain tomorrow. account for (=explain) 설명하다&#65517; He is ill; that account f.......]]></description>
					<pubDate>Mon, 07 Dec 2015 18:22:36 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[영어회화]]></category>
					<title><![CDATA[생활영어]]></title>
					<link>http://blog.naver.com/sckim007/220557820155</link>
					<guid>http://blog.naver.com/sckim007/220557820155</guid>
					<description><![CDATA[---------- 인사 ----------안녕하세요. / 만나서 반가워요.Hello.Hello. Nice to meet you. 어떻게 지내세요? / 잘 지내고 있어요. 당신은요?How are you doing ?I'm fine. How about you ? 만나서 만가웠어요. 다음에 또 만나요. / 당신도요.It was nice meeting you. Take care.You. too.* Good to see you. * Please to see you.* Nice to meet you.* Happy to see you. 이곳이 처음인가요 ? / 네. 처음이예요.Is this your first time here ?Yes. It is. 이름이 뭐예요 ? / 형순이라고 불러주세요.What your name ?Please call me Hyeungsoon. / My name is Hyeungsoon. 말씀많이 들었어요.I heard so much about you. 만나뵙고 싶었어요.I'.......]]></description>
					<pubDate>Thu, 03 Dec 2015 17:40:16 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>sckim007</author>
					<category><![CDATA[영어회화]]></category>
					<title><![CDATA[테마별 영어회화]]></title>
					<link>http://blog.naver.com/sckim007/220557747017</link>
					<guid>http://blog.naver.com/sckim007/220557747017</guid>
					<description><![CDATA[---------- 전화로 숙소예약하기 ----------방을 예약하고 싶어요.I would like to make a reservation.I would like to book(reserve) a room for O people.I would like to make reservatioins for 2 rooms. 어떤 종류의 방을 원하시나요 ? 싱글룹(더블룸) 주세요.What kind of room would you like ?What sort of room would you like ? I would like a single room.I would like a double room. 12월 21일 부터 23일까지 방을 예약하고 싶어요.Do you have any rooms available from December twenty-first to twenty-third ?I would like to reserve(book) a room from December twenty-first to twenty-third.I want to reserve(book) a ro.......]]></description>
					<pubDate>Thu, 03 Dec 2015 16:39:32 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
