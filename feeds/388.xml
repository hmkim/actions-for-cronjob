<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>BlessingDev의 개발일지</title>
	<atom:link href="https://blessingdev.wordpress.com/feed/" rel="self" type="application/rss+xml" />
	<link>https://blessingdev.wordpress.com</link>
	<description></description>
	<lastBuildDate>
	Tue, 18 Dec 2018 02:58:22 +0000	</lastBuildDate>
	<language>ko-KR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>http://wordpress.com/</generator>

<image>
	<url>https://blessingdev.files.wordpress.com/2017/09/cropped-cropped-blessingdev1.png?w=32</url>
	<title>BlessingDev의 개발일지</title>
	<link>https://blessingdev.wordpress.com</link>
	<width>32</width>
	<height>32</height>
</image> 
<cloud domain='blessingdev.wordpress.com' port='80' path='/?rsscloud=notify' registerProcedure='' protocol='http-post' />
<atom:link rel="search" type="application/opensearchdescription+xml" href="https://blessingdev.wordpress.com/osd.xml" title="BlessingDev의 개발일지" />
	<atom:link rel='hub' href='https://blessingdev.wordpress.com/?pushpress=hub'/>
	<item>
		<title>matplotlib 사용기 3:축 편집하기</title>
		<link>https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/</link>
				<comments>https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/#comments</comments>
				<pubDate>Thu, 15 Nov 2018 08:37:34 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Data Science]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[matplotlib]]></category>
		<category><![CDATA[Python]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1148</guid>
				<description><![CDATA[연재목록 사용기 1:그래프 그리기의 기본 사용기 2:여러 가지 그래프 이번 사용기에서는 축의 내용을 편집하는 방법을 알아보고자 합니다. 어떤 경우에 축의 &#8230; <a class="more-link" href="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/">더</a>]]></description>
								<content:encoded><![CDATA[<h3>연재목록</h3>
<ul>
<li><a href="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/">사용기 1:그래프 그리기의 기본</a></li>
<li><a href="https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/">사용기 2:여러 가지 그래프</a></li>
</ul>
<p>이번 사용기에서는 축의 내용을 편집하는 방법을 알아보고자 합니다. 어떤 경우에 축의 내용을 편집할 필요가 있을까요?</p>
<h3>예를 들어 단어의 길이가 너무 길어서 글자가 겹친다던가</h3>
<p><img data-attachment-id="1150" data-permalink="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/%ea%b8%80%ec%9e%90%ea%b2%b9%ec%b9%a8/" data-orig-file="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="글자겹침" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png?w=1140?w=640" class="alignnone size-full wp-image-1150" src="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png?w=1140" alt="글자겹침" srcset="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png 640w, https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<pre>plt.title('각 태그별 오답자 수 변화')
plt.bar([i * 2 for i in range(len(all_tags))], y_bef, label='사전테스트 오답수')
plt.bar([i * 2 + 1 for i in range(len(all_tags))], y_af, label='사후테스트 오답수')
plt.xticks([i * 2 + 0.5 for i in range(len(all_tags))], all_tags)

plt.xlabel('태그')
plt.ylabel('오답 수')
plt.legend()
plt.show()</pre>
<p>보시다시피 각 범주의 단어가 너무 길어 서로 겹치고 있습니다. 이런 현상을 해결하는 법에 대해 알아보겠습니다.</p>
<h3>두 개의 막대 그래프를 붙여서 표시할 때 등이 있을 수 있습니다.</h3>
<p><img data-attachment-id="1152" data-permalink="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/%eb%91%90%ec%a4%84-%ed%91%9c%ed%98%84/" data-orig-file="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="두줄 표현" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=1140?w=1024" class="alignnone size-full wp-image-1152" src="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=1140" alt="두줄 표현" srcset="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<pre style="padding-left:30px;">x = ["{}월".format(i + 1) for i in range(12)]
y_bef = [1000, 1154, 924, 1064, 1265, 1278, 1384, 1532, 1456, 1487, 1365, 1265]
y_af = [1134, 1165, 1265, 1273, 1253, 1467, 1556, 1642, 1563, 1435, 1332, 1154]

plt.bar([i * 2 for i in range(len(x))], y_bef, label='2017년')
plt.bar([i * 2 + 0.5 for i in range(len(x))], y_af, label='2018년')
plt.xlabel('월')
plt.ylabel('금액(만)')
plt.title('전년대비 월 매출')
plt.legend()

plt.show()</pre>
<p>.legend로 범주를 표시해 줄 수 있고, 이미 알고계신 분들도 계시겠지만 .bar 함수에서 x로 넘기는 배열은 주로 라벨의 역할을 하지만, 각 막대의 x좌표를 지정해주는 역할도 합니다.</p>
<p>이런 경우에 원래는 x열의 각 범주 이름의 의미도 갖고 있어야할 x인자가 좌표를 표현하기 위해 쓰이게 됩니다. 이 경우에 x열에 별도로 범주를 표시하는 법에 대해 알아봅시다.</p>
<h3>또는 그래프의 양쪽 끝 범위가 마음에 안 들 때도 있겠죠.</h3>
<p><img data-attachment-id="1153" data-permalink="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/%eb%b2%94%ec%9c%84%ec%a1%b0%ec%a0%95/" data-orig-file="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="범위조정" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=1140?w=1024" class="alignnone size-full wp-image-1153" src="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=1140" alt="범위조정" srcset="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<pre style="padding-left:30px;">x= np.array(range(-1000, 1000))
y = np.sin(x)

plt.plot(x, y)
plt.title('sin(x) 그래프')
plt.grid(True)

plt.show()</pre>
<p>위 예시는특수한 예이긴 합니다만, x축의 범위와 y 축의 범위를 특정 값으로 지정해 주고 싶을 때도 있을 것입니다.</p>
<p>하나씩 해결법을 찾아볼까요?</p>
<p>&nbsp;</p>
<h2>단어 길이가 너무 길다</h2>
<p>단어의 길이가 너무 길 때는 글자를 45도로 눕히면 글자가 서로 겹치는 일이 없어집니다.</p>
<p><img data-attachment-id="1154" data-permalink="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/%ea%b8%80%ec%9e%90%ea%b2%b9%ec%b9%a8_%ed%95%b4%ea%b2%b0/" data-orig-file="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="글자겹침_해결" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png?w=1140?w=640" class="alignnone size-full wp-image-1154" src="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png?w=1140" alt="글자겹침_해결" srcset="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png 640w, https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<p>label의 각도를 바꾸는 데에는 아래와 같은 코드가 사용됩니다.</p>
<pre style="padding-left:30px;"><em><strong>fig = plt.figure()
ax = plt.subplot(1, 1, 1)</strong></em>

plt.title('각 태그별 오답자 수 변화')
<em><strong>ax.bar([i * 2 for i in range(len(all_tags))], y_bef, label='사전테스트 오답수')
ax.bar([i * 2 + 1 for i in range(len(all_tags))], y_af, label='사후테스트 오답수')</strong></em>
plt.xticks([i * 2 + 0.5 for i in range(len(all_tags))], all_tags)



<em><strong>for label in ax.xaxis.get_ticklabels() :
    label.set_rotation(45)</strong></em>

plt.xlabel('태그')
plt.ylabel('오답 수')
plt.legend()
plt.show()</pre>
<p>새로 등장한 subplot과 figure에 대해서는 다음 사용기에서 설명할 생각입니다.</p>
<p>x의 xaxis(x축)에 접근하여 ticklabel을 받아와 set_rotation 해주는 부분이 중요한 부분입니다.</p>
<h2>두 개의 막대그래프로 변화 표현하기</h2>
<p><img data-attachment-id="1156" data-permalink="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/%eb%91%90%ec%a4%84-%ed%91%9c%ed%98%84_%ed%95%b4%ea%b2%b0/" data-orig-file="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="두줄 표현_해결" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=1140?w=1024" class="alignnone size-full wp-image-1156" src="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=1140" alt="두줄 표현_해결" srcset="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>각 범주에 올바른 값을 달아주기 위해서는 아래와 같은 코드가 사용됩니다.</p>
<pre style="padding-left:30px;">x = ["{}월".format(i + 1) for i in range(12)]
y_bef = [1000, 1154, 924, 1064, 1265, 1278, 1384, 1532, 1456, 1487, 1365, 1265]
y_af = [1134, 1165, 1265, 1273, 1253, 1467, 1556, 1642, 1563, 1435, 1332, 1154]

plt.bar([i * 2 for i in range(len(x))], y_bef, label='2017년')
plt.bar([i * 2 + 0.5 for i in range(len(x))], y_af, label='2018년')
<em><strong>plt.xticks([i * 2 + 0.25 for i in range(len(x))], x)</strong></em>
plt.xlabel('월')
plt.ylabel('금액(만)')
plt.title('전년대비 월 매출')
plt.legend()
plt.show()</pre>
<p>이렇게 plt.xticks를 이용해 각 범주의 좌표와 범주 라벨을 다시 지정해줄 수 있습니다.</p>
<h2>그래프 범위 바꾸기</h2>
<p><img data-attachment-id="1157" data-permalink="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/%eb%b2%94%ec%9c%84%ec%a1%b0%ec%a0%95_%ed%95%b4%ea%b2%b0/" data-orig-file="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="범위조정_해결" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=1140?w=1024" class="alignnone size-full wp-image-1157" src="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=1140" alt="범위조정_해결" srcset="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>어라 np.array가 정수만 표현해서 그래프 모양이 의도했던 바가 아니기는 하지만 범위가 바뀐 것은 알아채셨으리라고 생각합니다.</p>
<pre style="padding-left:30px;">x= np.array(range(-1000, 1000))
y = np.sin(x)

plt.plot(x, y)
plt.title('sin(x) 그래프')
plt.grid(True)
<em><strong>plt.xlim(-np.pi, np.pi)
plt.ylim(-2.0, 2.0)</strong></em>

plt.show()</pre>
<p>이렇게 plt.xlim, plt.ylim으로 x축, y축의 최솟값과 최댓값을 직접 지정해 줄 수 있습니다.</p>
<p>이상이었습니다. 다음 사용기는 다중 그래프 사용으로 돌아오겠습니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8.png" medium="image">
			<media:title type="html">글자겹침</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced98841.png" medium="image">
			<media:title type="html">두줄 표현</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095.png" medium="image">
			<media:title type="html">범위조정</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/11/eab880ec9e90eab2b9ecb9a8_ed95b4eab2b0.png" medium="image">
			<media:title type="html">글자겹침_해결</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/11/eb9190eca484-ed919ced9884_ed95b4eab2b0.png" medium="image">
			<media:title type="html">두줄 표현_해결</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/11/ebb294ec9c84eca1b0eca095_ed95b4eab2b0.png" medium="image">
			<media:title type="html">범위조정_해결</media:title>
		</media:content>
	</item>
		<item>
		<title>matplotlib 사용기 2:여러 가지 그래프</title>
		<link>https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/</link>
				<comments>https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/#comments</comments>
				<pubDate>Thu, 04 Oct 2018 10:34:40 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Data Science]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[matplotlib]]></category>
		<category><![CDATA[Python]]></category>
		<category><![CDATA[stack_plot]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1134</guid>
				<description><![CDATA[연재목록 사용기 1:그래프 그리기의 기본 사용기 3:축 편집하기 지난 사용기에서는 그래프 그리기의 기본과 꺾은선 그래프, 그리고 한글 표시하기를 해봤습니다. 그러나 &#8230; <a class="more-link" href="https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/">더</a>]]></description>
								<content:encoded><![CDATA[<h3>연재목록</h3>
<ul>
<li><a href="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/">사용기 1:그래프 그리기의 기본</a></li>
<li><a href="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/">사용기 3:축 편집하기</a></li>
</ul>
<p>지난 사용기에서는 그래프 그리기의 기본과 꺾은선 그래프, 그리고 한글 표시하기를 해봤습니다.</p>
<p>그러나 그래프의 세계에는 상황에 따라서 유용하게 사용할 수 있는 그래프가 아주 많이 있으니 그런 여러가지 그래프와, 그것을 그리는 방법에 대해서 이야기해볼까 합니다.</p>
<h2>막대 그래프</h2>
<p>막대 그래프는 <strong>항목간의 차이</strong>를 볼 때 사용하는 그래프입니다.<br />
예를 들자면 자동차 A 모델과 B 모델의 9월 판매량 차이라는 식입니다.</p>
<p><img data-attachment-id="1135" data-permalink="https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/%eb%a7%89%eb%8c%80_%ea%b8%b0%eb%b3%b8/" data-orig-file="https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="막대_기본" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=1140?w=1024" class="alignnone size-full wp-image-1135" src="https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=1140" alt="막대_기본" srcset="https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>아래와 같은 코드를 이용합니다.</p>
<pre style="padding-left:30px;">x = ['A', 'B']
y = [10, 40]

plt.bar(x, y)
plt.xlabel('모델명')
plt.ylabel('판매량(천)')
plt.title('자동차의 9월 판매량')

plt.show()</pre>
<p>막대 그래프를 사용할 때는 plt.plot 대신에 plt.bar를 사용한다는 것이 다른 점입니다.</p>
<h2>스택 그래프</h2>
<p>스택 그래프는 비중의 변화를 확인하고자 할 때 사용하는 그래프입니다.<br />
예를 들어, 어떤 회사가 있는데 지출 내역을 세금, 인건비, 시설비로 나누어 그 <strong>비중의 변화</strong>를 살펴보고자 합니다.</p>
<p><img data-attachment-id="1136" data-permalink="https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/%ec%8a%a4%ed%83%9d/" data-orig-file="https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="스택" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=1140?w=1024" class="alignnone size-full wp-image-1136" src="https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=1140" alt="스택" srcset="https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>아래와 같은 코드를 사용합니다.</p>
<pre style="padding-left:30px;">x = ["{}월".format(i + 1) for i in range(6)]
y = [[100, 140, 110, 150, 130, 160], [330, 450, 350, 450, 380, 480], [50, 50, 50, 50, 50, 50]]

plt.stackplot(x, y, labels=['세금', '인건비', '시설비'])
plt.xlabel('월')
plt.ylabel('금액(만)')
plt.title('회사의 5개월간 지출 변화')

plt.show()</pre>
<p>&nbsp;</p>
<p>위와 같이 스택 그래프로는 비중의 변화에 전체 값의 변화까지도 확인할 수 있습니다.</p>
<p>스택 그래프는 plt.stackplot을 이용해서 부르는데 기본적으로 세 가지 배열을 입력으로 받습니다. 첫번째로 x줄로 쓸 x 배열, 두번째로 [[y1의 x1값, x2값, x3값,…,xn값], [y2의 x1값, x2값, x3값,…,xn값],…]형태의 y 배열, 그리고 마지막으로 각 항목에 대한 이름을 입력해주는 labels입니다.</p>
<p>&nbsp;</p>
<p>아직 위의 그래프밖에 써보지 않았지만 더 많은 그래프를 사용해보고 추가할 예정입니다.</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/10/eba789eb8c80_eab8b0ebb3b8.png" medium="image">
			<media:title type="html">막대_기본</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/10/ec8aa4ed839d.png" medium="image">
			<media:title type="html">스택</media:title>
		</media:content>
	</item>
		<item>
		<title>matplotlib 사용기 1:그래프 그리기의 기본, 그래프에 한글 넣기</title>
		<link>https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/</link>
				<comments>https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/#comments</comments>
				<pubDate>Wed, 08 Aug 2018 07:05:16 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Data Science]]></category>
		<category><![CDATA[Programming]]></category>
		<category><![CDATA[꺾은선_그래프]]></category>
		<category><![CDATA[matplotlib]]></category>
		<category><![CDATA[matplotlib_한글_넣기]]></category>
		<category><![CDATA[Python]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1119</guid>
				<description><![CDATA[연재목록 사용기 2:여러 가지 그래프 사용기 3:축 편집하기 데이터를 시각화하는 도구에는 여러 가지가 있습니다. R, MATLAB, SPSS 등이 있지요. 저는 &#8230; <a class="more-link" href="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/">더</a>]]></description>
								<content:encoded><![CDATA[<h3>연재목록</h3>
<ul>
<li><a href="https://blessingdev.wordpress.com/2018/10/04/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-2%ec%97%ac%eb%9f%ac-%ea%b0%80%ec%a7%80-%ea%b7%b8%eb%9e%98%ed%94%84/">사용기 2:여러 가지 그래프</a></li>
<li><a href="https://blessingdev.wordpress.com/2018/11/15/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0-3%ec%b6%95-%ed%8e%b8%ec%a7%91%ed%95%98%ea%b8%b0/">사용기 3:축 편집하기</a></li>
</ul>
<p>데이터를 시각화하는 도구에는 여러 가지가 있습니다.</p>
<p>R, MATLAB, SPSS 등이 있지요. 저는 그 중에서 Python과 matplotlib의 조합을 주로 사용하고 있습니다.</p>
<p>그 중에서 제가 사용했던 기능을 여기에 잘 정리해 놓으려고 합니다.</p>
<h2>그래프 그리기의 기본</h2>
<p style="padding-left:30px;">가장 기초적인 그래프들은 2차원에서 그려집니다. 즉, x 축과 y 축 값을 주면 그릴 수 있는 그래프가 다수를 차지합니다.</p>
<p style="padding-left:30px;">matplotlib에서 가장 기본이 되는 그래프는 <strong>꺾은선 그래프</strong>입니다.</p>
<p><img data-attachment-id="1121" data-permalink="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/%ea%ba%be%ec%9d%80%ec%84%a0/" data-orig-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="꺾은선" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=1140?w=1024" class=" size-full wp-image-1121 aligncenter" src="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=1140" alt="꺾은선" srcset="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p style="padding-left:30px;">어떤 수치의 변화 추이를 나타내는데 사용되는 그래프입니다. 위의 그래프를 그린다면 아래와 같은 코드를 작성하면 됩니다.</p>
<pre style="padding-left:30px;">import matplotlib.pyplot as plt

plt.plot(range(5), [5, 2, 2, 3, 9])

plt.show()</pre>
<p style="padding-left:30px;">matplotlib에서 그래프는 matplotlib.pyplot을 호출해서 그립니다. pyplot(이하 plt)의 plot(도표를 그린다는 뜻이다) 함수는 꺾은선 그래프를 그립니다. 만약 다른 타입의 그래프를 그리고 싶다면 plt.plot이 아닌 다른 함수를 호출하고, 그에 맞는 값들을 넘겨주면 됩니다.</p>
<p style="padding-left:30px;">plt.plot 함수의 두 인자는 각각 x 좌표의 값과 y 좌표의 값입니다. 그리고 plt.show()는 지금까지 입력한 그래프를 출력하기 위해 호출하는 함수입니다.</p>
<p style="padding-left:30px;">matplotlib는 이처럼 그래프에 값을 집어넣어 주고, 설명을 넣고 꾸민 후에, 출력하는 과정으로 이루어집니다.</p>
<h2>그래프에 설명 넣기</h2>
<p style="padding-left:30px;">그래프를 그리기만 해서는 소용없겠지요. 그래프에 설명을 집어넣는 방법에 대해 간단히 설명해 드리겠습니다.</p>
<p><img data-attachment-id="1122" data-permalink="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/%ea%ba%be%ec%9d%80%ec%84%a0_%ec%84%a4%eb%aa%85/" data-orig-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="꺾은선_설명" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=1140?w=1024" class=" size-full wp-image-1122 aligncenter" src="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=1140" alt="꺾은선_설명.png" srcset="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p style="padding-left:30px;">방금전과 같은 그래프입니다만, 글자가 적혀있습니다. 그래프의 제목, x축에 대한 설명, 그리고 y축에 대한 설명입니다.</p>
<pre style="padding-left:30px;">import matplotlib.pyplot as plt

x = range(5)
y = [5, 2, 2, 3, 9]

plt.plot(x, y)
plt.xlabel('Plot Number')
plt.ylabel('Random #')
plt.title('Epic Graph')

plt.show()</pre>
<p style="padding-left:30px;">설명을 위한 글자를 넣기 위해서는 위와 같이 plt에서 각각에 대한 함수를 호출해서 표시할 글자를 지정해 주기만 하면 됩니다.</p>
<p style="padding-left:30px;">matplotlib에서 문자열을 표시하는 방법에는 xticks 등 여러 가지가 있지만 그에 관해서는 이후에 다루도록 하겠습니다.</p>
<h2>그래프에 한글 넣기</h2>
<p style="padding-left:30px;">matplotlib는 python에서 그래프를 그릴 때 더할나위 없이 좋은 라이브러리이기는 합니다만, 한 가지 결점을 꼽자면 기본 폰트가 한글을 지원하지 않는다는 것입니다.</p>
<pre style="padding-left:30px;">import matplotlib.pyplot as plt

x = range(5)
y = [5, 2, 2, 3, 9]

plt.plot(x, y)
plt.xlabel('x 좌표')
plt.ylabel('랜덤값')
plt.title('멋진 그래프!')

plt.show()</pre>
<p><img data-attachment-id="1123" data-permalink="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/%ea%ba%be%ec%9d%80%ec%84%a0_%ed%95%9c%ea%b8%80_%ea%b9%a8%ec%a7%90/" data-orig-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="꺾은선_한글_깨짐" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=1140?w=1024" class=" size-full wp-image-1123 aligncenter" src="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=1140" alt="꺾은선_한글_깨짐" srcset="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p style="padding-left:30px;">아무런 설정도 하지 않은 상태에서 한글을 표시하려고 하면 위와 같이 ㅁㅁ 모양으로 깨져서 나옵니다. 이런 상태를 해결하기 위해서는 한글을 지원하는 폰트를 출력 폰트로 설정해 주어야 합니다.</p>
<p style="padding-left:30px;">먼저 사용하고 싶은 폰트의 .ttf 파일을 찾아서 경로를 찾아둡니다. Windows에서는 &#8216;C:/Windows/Fonts/*.ttf&#8217; 경로에 폰트가 있습니다. 그렇게 찾은 폰트를 적용하려면 아래와 같은 코드를 추가합니다.</p>
<pre style="padding-left:30px;">import matplotlib.font_manager as fm
import matplotlib

font_location = ".ttf 경로"
font_name = fm.FontProperties(fname = font_location).get_name()
matplotlib.rc('font', family=font_name)</pre>
<p style="padding-left:30px;"><img data-attachment-id="1124" data-permalink="https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/%ea%ba%be%ec%9d%80%ec%84%a0_%ed%95%9c%ea%b8%80/" data-orig-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=1140" data-orig-size="1536,807" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="꺾은선_한글" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=1140?w=1024" class="alignnone size-full wp-image-1124" src="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=1140" alt="꺾은선_한글.png" srcset="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png 1536w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p style="padding-left:30px;">코드를 추가하면 이렇게 한글도 잘 출력되는 것을 보실 수 있습니다.</p>
<p>&nbsp;</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2018/08/08/matplotlib-%ec%82%ac%ec%9a%a9%ea%b8%b0%eb%a1%9d-1%ea%b7%b8%eb%9e%98%ed%94%84-%ea%b7%b8%eb%a6%ac%ea%b8%b0%ec%9d%98-%ea%b8%b0%eb%b3%b8-%ea%b7%b8%eb%9e%98%ed%94%84%ec%97%90-%ed%95%9c%ea%b8%80-%eb%84%a3/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0.png" medium="image">
			<media:title type="html">꺾은선</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ec84a4ebaa85.png" medium="image">
			<media:title type="html">꺾은선_설명.png</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880_eab9a8eca790.png" medium="image">
			<media:title type="html">꺾은선_한글_깨짐</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/08/eababeec9d80ec84a0_ed959ceab880.png" medium="image">
			<media:title type="html">꺾은선_한글.png</media:title>
		</media:content>
	</item>
		<item>
		<title>잡학 데이터 사이언스 1:애자일 데이터 사이언스 방법론</title>
		<link>https://blessingdev.wordpress.com/2018/05/11/agile-or-scrum-case-study-in-data-science-%ec%95%a0%ec%9e%90%ec%9d%bc-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%82%ac%ec%9d%b4%ec%96%b8%ec%8a%a4-%eb%b0%a9%eb%b2%95%eb%a1%a0-%eb%b2%88%ec%97%ad%eb%ac%b8/</link>
				<comments>https://blessingdev.wordpress.com/2018/05/11/agile-or-scrum-case-study-in-data-science-%ec%95%a0%ec%9e%90%ec%9d%bc-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%82%ac%ec%9d%b4%ec%96%b8%ec%8a%a4-%eb%b0%a9%eb%b2%95%eb%a1%a0-%eb%b2%88%ec%97%ad%eb%ac%b8/#respond</comments>
				<pubDate>Fri, 11 May 2018 14:34:23 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Data Science]]></category>
		<category><![CDATA[agile_data_science]]></category>
		<category><![CDATA[번역]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1102</guid>
				<description><![CDATA[개인적으로 번역한 내용입니다. 원문:https://www.oreilly.com/ideas/a-manifesto-for-agile-data-science(Russell Jurney, 2017) Agile or Scrum case study in data science &#160; 애자일 데이터 사이언스 개발선언 반복, &#8230; <a class="more-link" href="https://blessingdev.wordpress.com/2018/05/11/agile-or-scrum-case-study-in-data-science-%ec%95%a0%ec%9e%90%ec%9d%bc-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%82%ac%ec%9d%b4%ec%96%b8%ec%8a%a4-%eb%b0%a9%eb%b2%95%eb%a1%a0-%eb%b2%88%ec%97%ad%eb%ac%b8/">더</a>]]></description>
								<content:encoded><![CDATA[<p>개인적으로 번역한 내용입니다.<br />
원문:<a href="https://www.oreilly.com/ideas/a-manifesto-for-agile-data-science">https://www.oreilly.com/ideas/a-manifesto-for-agile-data-science(Russell Jurney, 2017)</a><span style="display:inline !important;float:none;background-color:transparent;color:#3d596d;cursor:text;font-family:'Noto Serif', Georgia, 'Times New Roman', Times, serif;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;line-height:19.2px;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;"><br />
</span></p>
<p>Agile or Scrum case study in data science</p>
<p>&nbsp;</p>
<p><b>애자일 데이터 사이언스 개발선언</b></p>
<p><b>반복</b><b>, </b><b>반복</b><b>, </b><b>반복</b></p>
<p>데이터는 파싱 되고, 포매팅 되고, 정렬되고, 집계되고, 요약된 후에 이해되어야 한다. 의미 있는 도표는 보통 서너 번째 시도 후에야 나온다. 정확한 예측 모델은 특성 모델화(Feature Engineering, 도메인 지식을 이용해 데이터에서 기계학습 모델에 사용할 수 있는 특성을 찾는 것)와 하이퍼 파라미터 튜닝(hyper parameter tuning)을 여러 차례 반복해야 만들 수 있다. 데이터 사이언스에서 반복하는 것은 추출, 시각화, 통찰을 통한 제품화를 하는 데 있어 매우 중요하다.</p>
<p><img class=" aligncenter" style="background-color:transparent;color:#3d596d;font-family:&amp;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;height:343.4px;letter-spacing:normal;max-width:680px;orphans:2;outline-color:#777777;outline-style:solid;outline-width:1px;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;" src="https://d3ansictanv2wj.cloudfront.net/Iterate-de8447f11b0974867c24cec0758ee221.png" alt="iterate" width="1600" height="808" /></p>
<p><b>개발 도중인 모델도 출시하라</b></p>
<p>반복은 분석 애플리케이션을 만드는 데 있어 필수적인 작업으로, 이는 곧 우리가 종종 스프린트가 끝나고 완전하지 않은 결과물을 남기는 것을 의미한다. 만약에 이런 완전하지 않은 결과물을 출시하지 않는다면 우리의 프로젝트 대부분은 아무것도 출시하지 않은 채 끝나게 될 것이다. 그리고 그런 것은 애자일이 아니다. 나는 이런 식으로 아무도 원치 않는 완벽을 위해 영원한 시간을 쓰는 것을 “죽음의 고리(Death loop)”라고 부른다.</p>
<p>스스로 문서를 만드는 것이 좋은 시스템을 만든다. 그리고 애자일 데이터 사이언스에서 우리는 프로젝트 중에 만들어내는 불완전한 결과물을 문서화하고, 공유한다. 소스 컨트롤러에 모든 작업을 커밋한다. 우리는 이 모든 작업을 팀원과, 가능하다면 유저들과도, 함께한다. 이 원칙이 모두에게 설득력 있게 다가오지는 않을 것이다. 많은 데이터 과학자는 다년간의 격렬한 연구 끝에 얻어낸 학위논문을 배경으로 하는 자신만의 지론을 갖고 있기 때문이다.</p>
<p><img class=" aligncenter" src="https://d3ansictanv2wj.cloudfront.net/Under_construction-8cd211593027009f0457616d3a51dc13.jpg" alt="under construction" /></p>
<p><b>작업이 아니라 실험을 하라</b></p>
<p>소프트웨어 공학적인 관점에서, 프로덕트 매니저는 개발자에게 표를 스프린트 중에 넘겨줄 것이다. 개발자는 넘겨받은 표를 SQL GROUP BY로 Data Base에 저장하고, 그것을 표시할 웹페이지를 만든다. 이걸로 할 일이 끝난 것이냐고? 아니다. 그런 식으로 저장된 표는 가치를 가지지 못한다. 데이터 사이언스는 반은 공학이지만 반은 과학이라는 점이 소프트웨어 공학과는 다르다.</p>
<p><img class=" aligncenter" src="https://d3ansictanv2wj.cloudfront.net/Experiment-72a89d212fa622b1f0e838b343c6fc52.png" alt="experiment" /></p>
<p>주어진 모든 작업에서, 우리는 반복을 통한 통찰력을 얻어야 한다. 그리고 이러한 반복은 실험이라고도 바꿔 말할 수 있다. 데이터 사이언스 팀을 관리한다는 것은 작업을 관리하는 것이 아니라, 동시다발적으로 일어나는 실험들을 감독하는 일이다. 좋은 자료(표, 도표, 보고, 예측)는 데이터 탐사 분석에 이정표가 된다. 따라서 우리는 작업보다는 실험이라는 관점에서 생각해야 한다.</p>
<p><b>데이터에 귀를 기울여라</b></p>
<p>무엇이 가능한가 하는 것은 무엇을 의도했는가만큼 중요하다. 무엇이 어렵고 무엇이 쉬운가 하는 것은 무엇을 만들고 싶은가 하는 것만큼 알아 두어야 할 부분이다. 소프트웨어 애플리케이션 개발에 있어 고려해야 할 세 가지 관점이 있다: 소비자, 개발자, 기업. 그리고 분석 애플리케이션 개발에는 또 다른 관점이 있다: 데이터. 데이터가 자신의 특징에 대해 말해주는 것들에 대한 이해 없이는 제품 이용자가 만족스러운 결과를 얻을 수 없다. 제품 회의에는 항상 데이터에 관한 의견이 포함되어 있어야 한다. 즉, 제품은 항상 우리 노력의 중심이 되는 데이터 분석을 통한 시각화에 기반을 두고 있어야 한다는 의미다.</p>
<p><img class=" aligncenter" src="https://d3ansictanv2wj.cloudfront.net/Listen-7ecbea18b9086409c65a78ace37590d5.png" alt="listen" /></p>
<p><b>데이터 가치 피라미드를 명심하라</b></p>
<p>데이터 가치 피라미드는 마슐로의 수요 체계도에 따라 5개의 계층으로 구성되어 있다. 피라미드는 로우 데이터가 도표, 보고, 예측으로 정제됨으로써 증가하는 가치를 표현하고 있다. 데이터를 이용해 새로운 접근을 하거나 존재하고 있는 것을 향상하기 위해서 이 과정을 거친다.</p>
<ul>
<li>첫 번째 계층은 기반에 관한 내용이다. 어디서 데이터를 모아 와서 애플리케이션의 어느 부분에서 보여줄지가 그 부분이다.</li>
<li>도표와 표 계층은 데이터에 대한 개량과 분석이 시작되는 계층이다.</li>
<li>보고 계층은 데이터에 몰입할 수 있게 해줌으로써 데이터의 이치를 찾고, 알아갈 수 있게 한다.</li>
<li>예측 계층은 가장 많은 가치가 창출되는 곳으로, 좋은 예측을 만든다는 것은 더 낮은 계층에서 모인 것들을 통해 특성 모델화(Feature Engineering)하는 것을 의미한다.</li>
<li>가장 마지막 계층인 행동(Action) 계층은 요즘 유행을 타고 있는 AI가 위치하는 곳이다. 만약 당신이 데이터를 통해 얻은 통찰력이 새로운 행동을 가능케 하거나, 존재하는 것을 발전시키지 못한다면, 당신의 통찰력은 그렇게 가치 있는 것이 아니라는 뜻이다.</li>
</ul>
<p>&nbsp;</p>
<figure style="width: 1302px" class="wp-caption aligncenter"><img class=" aligncenter" src="https://d3ansictanv2wj.cloudfront.net/pyramid-af326273fc483542da476defc8f0b684.png" alt="data-value pyramid" width="1302" height="758" /><figcaption class="wp-caption-text"><span class="label">Figure 1. </span>The data-value pyramid. Figure courtesy of Russell Jurney.</figcaption></figure>
<p>&nbsp;</p>
<p>데이터 가치 피라미드는 우리에게 데이터 사이언스의 구조를 보여준다. 이 피리미드는 꼭 따라야 할 규칙은 아니지만, 명심하고 있어야 할 물건이다. 어떤 때는 단계를 건너뛰기도 하고, 또 어떤 때는 이전 단계로 뒷걸음질 치기도 할 것이다. 만약 당신이 어떤 데이터를 곧바로 예측 모델에 집어넣어 버린다면, 낮은 계층에서 데이터를 투명하고 접근할 수 있게 만들어두지 않는다면, 기술적인 문제가 발생할 것이다. 이런 점을 명심하고, 가능하다면 생길 수 있는 문제를 미리 예방하자.</p>
<p><b>중요한 경로를 찾아라</b></p>
<p>성공 가능성을 높이기 위해서는 애플리케이션이 성공하는데 가장 필수적인 부분에 초점을 맞추어야 한다. 하지만 그런 부분은 어디일까? 그것은 실험을 통해서 발견해야 한다. 분석 프로그램 개발은 움직이는 목표를 수색하고, 쫓아가는 일과 같다.</p>
<p><img class=" aligncenter" src="https://d3ansictanv2wj.cloudfront.net/Critical_path-d302a20441be7e3a38627e20c817d542.png" alt="critical path" /></p>
<p>예를 들어, ‘어떤 예측을 해야 한다.’ 하는 목표가 정해졌다면, 우선 구현하는 데 있어 중요한 경로를 찾아야 한다. 그것이 가치 있다고 판명된다면 향상하는 데도 그런 경로를 찾아야 한다. 데이터는 작업이 진행됨에 따라 점진적으로 정제된다. 분석 프로그램은 종종 광범위한 데이터 추출, 변환, ETL 프로세스, 통계학적 기술, 정보 접근, 기계학습, AI, 그래픽 분석 등과 같은 여러 차례의 정제 과정을 요구한다.</p>
<p>이런 단계 간의 상호작용은 매우 복잡한 형태의 의존 요소(dependencies)를 만들 수 있다. 팀 리더는 이러한 의존 요소를 항상 기억하고 있어야 한다. 팀원이 중요한 경로를 발견해 그 경로를 따라갈 수 있도록 이끄는 것도 리더가 해야 할 일이다. 프로덕트 매니저가 탑다운 형식으로 이런 과정을 이끄는 것은 불가능한 일이다. 그보다는 프로덕트 과학자가 보텀업 형식으로 발견하는 편이 낫다.</p>
<p><b>메타를 얻어라</b></p>
<p>만약에 일반적인 애플리케이션을 개발할 때랑 비슷한 일정으로 좋은 제품을 출시하기가 쉽지 않다면 어떻게 하면 좋을까? 출시하지 않는다면 그것은 애자일이라고 부를 수 없다. 애자일 데이터 사이언스에서는 이런 문제를 해결하기 위해서 “메타를 얻는다.” 초점은 최종 단계나 원하는 제품을 만드는 것과는 정반대에 있는 분석 프로세스 문서화에 맞추어져 있다. 이것은 애자일이 가능하게 해주고, 멋진 제품을 만들기 위한 중요한 경로를 찾기 위해 계속해서 데이터 가치 피라미드를 오름으로써 불완전한(intermediate) 제품을 출시할 수 있게 해준다. 그러면 제품은 어디서 오는 것일까? 팔레트에서, 우리가 데이터 탐사 분석을 문서화함으로서 창조해 내야 한다.</p>
<p><img class=" aligncenter" src="https://d3ansictanv2wj.cloudfront.net/Meta-66349977973348e6eac4db0d365c56c6.png" alt="Meta" /></p>
<p><b>결론</b></p>
<p>위에서 말한 일곱 개의 원칙이 함께하여 애자일 데이터 사이언스 방법론을 가능하게 해준다. 그들은 데이터 탐사 분석과 이를 분석 프로그램으로 만들어내는 과정을 구조화하고, 문서화하는 것을 도와줄 것이다.</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2018/05/11/agile-or-scrum-case-study-in-data-science-%ec%95%a0%ec%9e%90%ec%9d%bc-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%82%ac%ec%9d%b4%ec%96%b8%ec%8a%a4-%eb%b0%a9%eb%b2%95%eb%a1%a0-%eb%b2%88%ec%97%ad%eb%ac%b8/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/Iterate-de8447f11b0974867c24cec0758ee221.png" medium="image">
			<media:title type="html">iterate</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/Under_construction-8cd211593027009f0457616d3a51dc13.jpg" medium="image">
			<media:title type="html">under construction</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/Experiment-72a89d212fa622b1f0e838b343c6fc52.png" medium="image">
			<media:title type="html">experiment</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/Listen-7ecbea18b9086409c65a78ace37590d5.png" medium="image">
			<media:title type="html">listen</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/pyramid-af326273fc483542da476defc8f0b684.png" medium="image">
			<media:title type="html">data-value pyramid</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/Critical_path-d302a20441be7e3a38627e20c817d542.png" medium="image">
			<media:title type="html">critical path</media:title>
		</media:content>

		<media:content url="https://d3ansictanv2wj.cloudfront.net/Meta-66349977973348e6eac4db0d365c56c6.png" medium="image">
			<media:title type="html">Meta</media:title>
		</media:content>
	</item>
		<item>
		<title>Python unittest를 이용한 TDD</title>
		<link>https://blessingdev.wordpress.com/2018/05/10/python-unittest%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-tdd/</link>
				<comments>https://blessingdev.wordpress.com/2018/05/10/python-unittest%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-tdd/#respond</comments>
				<pubDate>Thu, 10 May 2018 10:01:52 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[Python]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1099</guid>
				<description><![CDATA[TDD는 Test-Drive-Development의 약자입니다. 소프트웨어 블록을 개발할 때 미리 그 소프트웨어가 만족해야할 입력과 출력 집합을 정의해놓고 개발하는 것을 말합니다. TDD의 장점은 &#8230; <a class="more-link" href="https://blessingdev.wordpress.com/2018/05/10/python-unittest%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-tdd/">더</a>]]></description>
								<content:encoded><![CDATA[<p>TDD는 Test-Drive-Development의 약자입니다. 소프트웨어 블록을 개발할 때 미리 그 소프트웨어가 만족해야할 입력과 출력 집합을 정의해놓고 개발하는 것을 말합니다.</p>
<p>TDD의 장점은 한마디로 정의할 수 있습니다.</p>
<blockquote>
<h3>요구사항을 탄탄하게 정의하고 소프트웨어를 개발할 수 있다!</h3>
</blockquote>
<p>TDD의 Test Case, 즉 소프트웨어가 만족해야할 입력과 출력의 목록은 그 자체만으로 훌륭한 요구사항입니다. 프로그래머는 그 요구사항에 맞추어서 개발하면 되고, 이는 말로 설명된 요구사항보다 훨씬 명료할 것입니다.</p>
<p>Python 언어는 이러한 TDD 개발 방식을 Standard Library의 일부로 제공하고 있습니다. 그 모듈의 이름은 <strong>unittest</strong>입니다.</p>
<p>간단하게 용례를 살펴보겠습니다.</p>
<pre>import unittest

class NaverSearchTest(unittest.TestCase) :

 def test_normal_set1(self) :
     book = BookData()
     sc = NaverBookSearcher()
     sc.book = book
     sc.from_title('바보와 시험과 소환수 10')
     self.assertEqual("바보와 시험과 소환수 10", book.title)

if __name__ == "__main__" :
    unittest.main()</pre>
<p>unittest를 사용하는데 있어 중요한 부분은 세 곳입니다.</p>
<pre><span style="display:inline !important;float:none;background-color:transparent;color:#3d596d;cursor:text;font-family:'Noto Serif', Georgia, 'Times New Roman', Times, serif;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;">class NaverSearchTest(unittest.TestCase) :</span></pre>
<p>먼저 클래스를 정의해서 unittest.TestCase를 상속받습니다.</p>
<pre><span style="display:inline !important;float:none;background-color:transparent;color:#3d596d;cursor:text;font-family:'Noto Serif', Georgia, 'Times New Roman', Times, serif;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;">self.assertEqual("바보와 시험과 소환수 10", book.title)</span></pre>
<p>임의의 함수를 정의해서 내부에서 테스트 코드를 돌린 후에 unittest.TestCase에서 상속받은 함수 assertEqual로 두 내용을 비교해 줍니다.</p>
<pre><span style="display:inline !important;float:none;background-color:transparent;color:#3d596d;cursor:text;font-family:'Noto Serif', Georgia, 'Times New Roman', Times, serif;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;">unittest.main()</span></pre>
<p>그리고 unittest.main 함수를 호출해 주면 unittest 모듈이 정의된 클래스의 TestCase를 실행해 보고 결과를 출력해줍니다.</p>
<pre>----------------------------------------------------------------------
Ran 3 tests in 1.913s

FAILED (failures=1)</pre>
<p>이렇게요!</p>
<p>Python 프로젝트에 TDD를 적용하는 것은 어렵지 않으니 여러분도 시도해보세요.</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2018/05/10/python-unittest%eb%a5%bc-%ec%9d%b4%ec%9a%a9%ed%95%9c-tdd/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>
	</item>
		<item>
		<title>pycuda 설치방법/How to install and build pycuda with your own pc</title>
		<link>https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/</link>
				<comments>https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/#comments</comments>
				<pubDate>Tue, 16 Jan 2018 12:03:26 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[pycuda]]></category>
		<category><![CDATA[Python]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1074</guid>
				<description><![CDATA[python 3.6.x, vs2017, cuda toolkit 9.x, Jetbrain Pycharm을 이용해 pycuda를 다운받고 빌드하는 법]]></description>
								<content:encoded><![CDATA[<p>cuda를 python 상에서 돌리는데 anaconda를 사용할 수 없다면 쓸 수 있는 개발환경이 pycuda 밖에 없는데 이걸 까는게 굉장히 까다롭습니다.</p>
<p><a href="https://wiki.tiker.net/PyCuda/Installation/Windows">pycuda wiki</a>에는 boost-python에 visual studio 2008에 난잡하고 오래된 방법밖에 없습니다.</p>
<p>그래서 제가 찾아낸 <strong>python 3.6.x, visual studio 2017 community, cuda toolkit 9.1, Jetbrain Pycharm</strong>을 이용해 pycuda를 설치하는 방법을 포스팅합니다.</p>
<p>pycuda 버전은 <strong>2017.1.1</strong>입니다.</p>
<h2>1. visual studio 2017을 설치합니다</h2>
<p>그냥 설치하면 안되고 옵션을 선택해야합니다.</p>
<p><img data-attachment-id="1075" data-permalink="https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/vs2017-1/" data-orig-file="https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=1140" data-orig-size="1614,900" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="vs2017 1" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=1140?w=1024" class="alignnone size-full wp-image-1075" src="https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=1140" alt="vs2017 1" srcset="https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png 1614w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>제일 위 영역에 있는 C++을 사용한 데스크톱 개발, 그리고 Python 개발을 체크해 설치합니다.</p>
<p>이렇게 설치하면 C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64 안에 Python이 설치되는데 나중에 pycharm에서 인터프리터로 이 친구를 선택하면 됩니다.</p>
<h2>2. cuda toolkit 9.1을 설치합니다</h2>
<p><img data-attachment-id="1076" data-permalink="https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/cuda-toolket/" data-orig-file="https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=1140" data-orig-size="1920,1080" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cuda toolket" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=1140?w=1024" class="alignnone size-full wp-image-1076" src="https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=1140" alt="cuda toolket" srcset="https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png 1920w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>cuda toolkit의 가장 최신 버전을 다운받은 후에</p>
<h2>4. Pycharm을 통해 pycuda를 설치합니다.</h2>
<p><img data-attachment-id="1077" data-permalink="https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/pychram/" data-orig-file="https://blessingdev.files.wordpress.com/2018/01/pychram.png?w=1140" data-orig-size="581,477" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="pychram" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/01/pychram.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/01/pychram.png?w=1140?w=581" class="alignnone size-full wp-image-1077" src="https://blessingdev.files.wordpress.com/2018/01/pychram.png?w=1140" alt="pychram" srcset="https://blessingdev.files.wordpress.com/2018/01/pychram.png 581w, https://blessingdev.files.wordpress.com/2018/01/pychram.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/01/pychram.png?w=300 300w" sizes="(max-width: 581px) 100vw, 581px"   /></p>
<p>시키는대로 잘 설치하고 난 후에 설정&gt;Project Interpreter에 들어갑니다.</p>
<p><img data-attachment-id="1079" data-permalink="https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/%ed%8c%8c%ec%9d%b4%ec%b0%b8-%eb%aa%a8%eb%93%88/" data-orig-file="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=1140" data-orig-size="1384,992" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="파이참 모듈" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=1140?w=1024" class="alignnone size-full wp-image-1079" style="background-color:transparent;color:#3d596d;font-family:&amp;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;height:487.39px;letter-spacing:normal;max-width:680px;orphans:2;outline-color:#777777;outline-style:solid;outline-width:1px;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;" src="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=1140" alt="파이참 모듈" srcset="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png 1384w" sizes="(max-width: 1140px) 100vw, 1140px"   /><b></b><i></i><u></u></p>
<p>처음에 따로 Python을 설치하지 않았다면 상단의 Project Interpreter: 란이 비어있을텐데 이 경우에는 아까 말한 <span style="display:inline !important;float:none;background-color:transparent;color:#3d596d;cursor:text;font-family:'Noto Serif', Georgia, 'Times New Roman', Times, serif;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;">C:\Program Files (x86)\Microsoft Visual Studio\Shared\Python36_64</span> 경로로 Python Interpreter를 직접 지정해 주어야 합니다.</p>
<p>지정한 후에는 오른쪽의 <strong>+</strong>를 눌러 새로운 모듈을 설치할 수 있습니다.</p>
<p><img data-attachment-id="1080" data-permalink="https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/%ed%8c%8c%ec%9d%b4%ec%bf%a0%eb%8b%a4-%ec%84%a4%ec%b9%98/" data-orig-file="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=1140" data-orig-size="1384,992" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="파이쿠다 설치" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=1140?w=1024" class="alignnone size-full wp-image-1080" src="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=1140" alt="파이쿠다 설치" srcset="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=1140 1140w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=150 150w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=300 300w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=768 768w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png?w=1024 1024w, https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png 1384w" sizes="(max-width: 1140px) 100vw, 1140px"   /></p>
<p>나머지는 pycuda를 이렇게 검색한 후에 하단의 Install Package 버튼을 누르면 문제없이 다운, 빌드됩니다.</p>
<h2>5. 2015 VC++ build tool을 설치합니다</h2>
<p><a href="https://www.visualstudio.com/ko/vs/older-downloads/">https://www.visualstudio.com/ko/vs/older-downloads/</a></p>
<p>해당 url로 들어가서 스크롤을 내려보면 <span style="display:inline !important;float:none;background-color:transparent;color:#3f3f3f;font-family:'MS-Font-Segoe';font-size:15px;font-style:normal;font-variant:normal;font-weight:bold;letter-spacing:0;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;">Microsoft Build Tools 2015 업데이트 3 </span>라는 항목이 있습니다. 그곳에서 다운받은 설치 프로그램으로 build tools를 깔아줍니다.</p>
<h2>6. 직접 msvc 지정해주기</h2>
<p>pycuda 모듈은 새로운 cuda 코드가 들어오면 SourceEngine에서 command line 명령문을 통해 빌드합니다. 이 과정에서 pycuda는 Visual C++ 컴파일러를 찾습니다. 그러나 VS2017의 VC++ 컴파일러는 사용하지 못하는데, 때문에 방금 설치한 2015년 버전의 VC++ 빌드툴의 컴파일러 경로를 cmd 명령문에 직접 적어줄 필요가 있습니다.</p>
<p>정확히는 <strong>\Python36_64\lib\site-packages\pycuda\compiler.py</strong> 파일에 들어있는 <strong>compile</strong> 함수의 내부 코드를 수정해야 합니다.</p>
<p>254줄에 코드를 집어넣습니다.</p>
<pre>include_dirs = include_dirs + [_find_pycuda_include_path()]

for i in include_dirs:
    options.append("-I"+i)

return compile_plain(source, options, keep, nvcc, cache_dir, target)</pre>
<p>이 부분이 cmd 명령어의 옵션을 설정한 후에 컴파일에 들어가는 부분입니다. 이 부분에 아래와 같이 코드를 삽입합니다.</p>
<pre>include_dirs = include_dirs + [_find_pycuda_include_path()]

for i in include_dirs:
    options.append("-I"+i)

options.extend(['-ccbin', 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\cl.exe'])

return compile_plain(source, options, keep, nvcc, cache_dir, target)</pre>
<p>위 경로는 Microsoft Build Tools 2015를 기본으로 설치하였을 때의 경로입니다.</p>
<p>&nbsp;</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2018/01/16/pycuda-%ec%84%a4%ec%b9%98%eb%b0%a9%eb%b2%95-how-to-install-and-build-pycuda-with-your-own-pc/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/01/vs2017-1.png" medium="image">
			<media:title type="html">vs2017 1</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/01/cuda-toolket.png" medium="image">
			<media:title type="html">cuda toolket</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/01/pychram.png" medium="image">
			<media:title type="html">pychram</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecb0b8-ebaaa8eb9388.png" medium="image">
			<media:title type="html">파이참 모듈</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2018/01/ed8c8cec9db4ecbfa0eb8ba4-ec84a4ecb998.png" medium="image">
			<media:title type="html">파이쿠다 설치</media:title>
		</media:content>
	</item>
		<item>
		<title>Term-Project: 최종 데모</title>
		<link>https://blessingdev.wordpress.com/2017/12/10/term-project-%ec%b5%9c%ec%a2%85-%eb%8d%b0%eb%aa%a8/</link>
				<comments>https://blessingdev.wordpress.com/2017/12/10/term-project-%ec%b5%9c%ec%a2%85-%eb%8d%b0%eb%aa%a8/#comments</comments>
				<pubDate>Sun, 10 Dec 2017 07:33:02 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Data Science]]></category>
		<category><![CDATA[Term-Project]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=1050</guid>
				<description><![CDATA[텀프로젝트 최종 데모]]></description>
								<content:encoded><![CDATA[<h1>이름: 라노베 분석기</h1>
<p>&nbsp;</p>
<h2>개발결과 요약(중간 데모 이후)</h2>
<ol>
<li><strong>신경망을 이용한 장르 자동 분류</strong>
<ul>
<li>&#8216;밑바닥부터 시작하는 데이터  과학'(조엘 그루스)의 예제코드를 이용해서 feed-forward 신경망 코드를 작성</li>
<li>성능 향상을 위해 CUDA를 이용한 GPU 병렬 컴퓨팅 공부</li>
<li>pycuda를 이용해 개발환경을 구축한 후에 python에서 cuda 코드를 돌림</li>
<li>정확도는 아직 유의(有意)하지 않음</li>
</ul>
</li>
<li><strong>자동으로 분류된 장르를 이용해 책 사이의 거리 계산(컨텐츠 기반 거리 계산)</strong>
<ul>
<li>학습된 신경망으로 장르를 자동으로 분류, 그리고 이를 이용하여 책 사이의 거리를 계산</li>
<li>이를 2차원으로 차원 축소하여 11000*11000 크기의 이미지로 표현. 실제 거리와 투영된 거리의 차이는 매우 큼.(3차원으로 투영해볼 계획)</li>
<li>단어와 숫자를 색인(indexing)하여 책을 검색하는 기능을 만듬</li>
<li>책을 검색하여 그 책과 거리가 가까운 책의 리스트를 반환하는 함수를 만듬</li>
</ul>
</li>
<li><strong>GUI 제작</strong>
<ul>
<li>pyqt5를 이용해 Window Form 형태의 GUI를 제작</li>
<li>데이터 시각화/책검색과 장르 자동 분류, 거리가 가까운 책 찾기/제목 크롤하기의 기능을 이용할 수 있다.</li>
</ul>
</li>
</ol>
<h2>소스코드</h2>
<p>소스오픈: <a href="https://github.com/BlessingDev/Korean-Light-Novel-Analyzer" target="_blank" rel="noopener">BlessingDev/Korean-Light-Novel-Analyzer</a></p>
<h2>실행파일</h2>
<p>빌드 불가&amp;빌드 불필요(Web 서비스 형태로 구축 계획)</p>
<h2>동영상</h2>
<div class="jetpack-video-wrapper"><iframe class='youtube-player' type='text/html' width='1140' height='642' src='https://www.youtube.com/embed/mUgoB2vnMAo?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></div>
<p>&nbsp;</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2017/12/10/term-project-%ec%b5%9c%ec%a2%85-%eb%8d%b0%eb%aa%a8/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						
		<media:thumbnail url="https://blessingdev.files.wordpress.com/2017/12/sddefault.png" />
		<media:content url="https://blessingdev.files.wordpress.com/2017/12/sddefault.png" medium="image">
			<media:title type="html">sddefault</media:title>
		</media:content>

		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>
	</item>
		<item>
		<title>Term-Project 개발일지: 장르별 단어 등장 빈도수 분석, 왜 Bayes 분류에 실패했는가</title>
		<link>https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/</link>
				<comments>https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/#respond</comments>
				<pubDate>Sat, 18 Nov 2017 03:45:43 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Data Science]]></category>
		<category><![CDATA[Term-Project]]></category>
		<category><![CDATA[경과보고]]></category>
		<category><![CDATA[분석]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=970</guid>
				<description><![CDATA[개발일지 4 Bayes 분류기는 어째서 실패했는가]]></description>
								<content:encoded><![CDATA[<p>지난 중간 데모에서 만든 Bayes 분류기를 통한 예측이 매우 정확도가 낮은 것을 보고 샘플 데이터를 늘리는 대신에 현재까지 제작된 샘플의 장르별 단어 빈도수를 분석해 보기로 했습니다.</p>
<p>Bayes 분류기에 대해서 언젠가 포스팅하겠지만 Bayes 분류기는 기본적으로 각 단어의 등장이 독립 사건이라고 전제합니다. 따라서 각 장르 군(群)별로 단어 등장 수준에서 확연한 차이가 없다면 Bayes 분류기는 올바른 예측을 할 수  없다고 볼 수 있습니다.</p>
<p>이 사실을 간과하고 Bayes 분류기를 만드려고 했으니 이 무슨 일인지 한심하네요.</p>
<p>많이 등장한 장르를 두 그룹으로 추려 단어의 등장 추이를 그래프로 살펴봤습니다.</p>
<h2>판타지</h2>
<p><img data-attachment-id="985" data-permalink="https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/%ed%8c%90%ed%83%80%ec%a7%80-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="판타지 figure_특성" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png?w=1140?w=640" class="alignnone size-full wp-image-985" src="https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png?w=1140" alt="판타지 figure_특성" srcset="https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png 640w, https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<h2>이세계</h2>
<p><img data-attachment-id="984" data-permalink="https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/%ec%9d%b4%ec%84%b8%ea%b3%84-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="이세계 figure" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png?w=1140?w=640" class="alignnone size-full wp-image-984" src="https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png?w=1140" alt="이세계 figure" srcset="https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png 640w, https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<h2>배틀</h2>
<p><img data-attachment-id="983" data-permalink="https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/%eb%b0%b0%ed%8b%80-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="배틀 figure" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png?w=1140?w=640" class="alignnone size-full wp-image-983" src="https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png?w=1140" alt="배틀 figure" srcset="https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png 640w, https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<p>이렇게 세 가지 장르를 놓고 보면 &#8216;<strong>판타지</strong>&#8216;, &#8216;<strong>세계</strong>&#8216;, &#8216;<strong>소녀</strong>&#8216;, &#8216;<strong>이야기</strong>&#8216; 등의 단어가 공통적으로 많이 등장하는 것을 알 수 있습니다. 그 이외에 무슨 의미인지 알 수 없는 한 음절짜리 단어가 많이 보이는 것도 문제입니다.</p>
<p>이들 장르는 Bayes 분류기로 쉽게 분류하지 못할 것이라 생각됩니다. 또한 다른 장르에 비해 많은 종류, 개수의 단어를 가지는 <strong>판타지</strong> 장르로 쉽게 확률이 몰릴 것이라고 예측할 수 있습니다.</p>
<h2>러브코미디</h2>
<p><img data-attachment-id="982" data-permalink="https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/%eb%9f%ac%eb%b8%8c%ec%bd%94%eb%af%b8%eb%94%94-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="러브코미디 figure" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png?w=1140?w=640" class="alignnone size-full wp-image-982" src="https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png?w=1140" alt="러브코미디 figure" srcset="https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png 640w, https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<h2>학원</h2>
<h2><img data-attachment-id="987" data-permalink="https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/%ed%95%99%ec%9b%90-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="학원 figure" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png?w=1140?w=640" class="alignnone size-full wp-image-987" src="https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png?w=1140" alt="학원 figure" srcset="https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png 640w, https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></h2>
<h2>하렘</h2>
<p><img data-attachment-id="986" data-permalink="https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/%ed%95%98%eb%a0%98-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="하렘 figure" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png?w=1140?w=640" class="alignnone size-full wp-image-986" src="https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png?w=1140" alt="하렘 figure" srcset="https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png 640w, https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<p>이 세 가지 장르는 공통적으로 &#8216;<strong>소녀</strong>&#8216;, &#8216;<strong>미소녀</strong>&#8216;, &#8216;<strong>러브</strong>&#8216;, &#8216;<strong>학교</strong>&#8216;, &#8216;<strong>시작</strong>&#8216; 등의 단어가 매우 높은 빈도로 나타납니다.</p>
<p>그뿐만 아니라 두 장르 그룹간의 차이도 절대적이지 않아 장르별로 비슷한 단어가 나타나는 경우도 있습니다. 예를 들어 <strong>하렘</strong> 장르 같은 경우는 <strong>판타지</strong> 그룹과는 &#8216;<strong>소녀</strong>&#8216;, &#8216;<strong>세계</strong>&#8216; 같은 단어가 공통적으로 나타나고, <strong>하렘</strong>에는 자주 등장하지 않은 &#8216;<strong>사람</strong>&#8216;이라는 단어는 그 이외의 장르에서는 모두 순위권에 들어 있습니다.</p>
<h2>결론</h2>
<p>직접 살펴본 결과 제가 얻은 데이터는 장르간의 특성 차이가 적고, 장르에 상관없이 공통적으로 등장하는 단어들이 많습니다. 따라서 각 단어의 등장을 독립적으로 판단하는 Bayes 분류기를 이용한 분류는 적절하지 못하다는 결론을 내렸습니다.</p>
<p>여담이지만 자연어 분석기의 성능이 아쉬운 것도 고민입니다. 한 음절씩 떨어져서 통계에 등장하는 단어들은 도대체 어디서 나온건지 감이 안 잡히네요.</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2017/11/18/term-project-%ec%9e%a5%eb%a5%b4%eb%b3%84-%eb%8b%a8%ec%96%b4-%eb%93%b1%ec%9e%a5-%eb%b9%88%eb%8f%84%ec%88%98-%eb%b6%84%ec%84%9d-%ec%99%9c-bayes-%eb%b6%84%eb%a5%98%ec%97%90-%ec%8b%a4%ed%8c%a8%ed%96%88/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/ed8c90ed8380eca780-figure1-e1510977017603.png" medium="image">
			<media:title type="html">판타지 figure_특성</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/ec9db4ec84b8eab384-figure.png" medium="image">
			<media:title type="html">이세계 figure</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/ebb0b0ed8b80-figure.png" medium="image">
			<media:title type="html">배틀 figure</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/eb9facebb88cecbd94ebafb8eb9494-figure.png" medium="image">
			<media:title type="html">러브코미디 figure</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/ed9599ec9b90-figure.png" medium="image">
			<media:title type="html">학원 figure</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/ed9598eba098-figure.png" medium="image">
			<media:title type="html">하렘 figure</media:title>
		</media:content>
	</item>
		<item>
		<title>Term-Project: 중간 데모</title>
		<link>https://blessingdev.wordpress.com/2017/11/10/term-project-%ec%a4%91%ea%b0%84-%eb%8d%b0%eb%aa%a8/</link>
				<comments>https://blessingdev.wordpress.com/2017/11/10/term-project-%ec%a4%91%ea%b0%84-%eb%8d%b0%eb%aa%a8/#respond</comments>
				<pubDate>Fri, 10 Nov 2017 06:43:28 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[Term-Project]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=911</guid>
				<description><![CDATA[Term-Project 중간데모]]></description>
								<content:encoded><![CDATA[<blockquote>
<h2 style="text-align:left;"><strong><a href="https://blessingdev.wordpress.com/2017/12/10/term-project-%ec%b5%9c%ec%a2%85-%eb%8d%b0%eb%aa%a8/">최종 데모</a></strong></h2>
</blockquote>
<p>&nbsp;</p>
<h2>개발결과 요약</h2>
<ul>
<li>나무위키 문서에서 모든 라노베 제목을 크롤링</li>
<li>네이버 API에서 제목을 검색</li>
<li>자연어 분석으로 검색된 제목과 책 제목을 정확도 검사, 0.0~1.0의 정확도 부여</li>
<li>검색 여부, 정확도 산포도를 시각화
<ul>
<li>책 검색 부분적 실패, 실패 비율 확인</li>
</ul>
</li>
<li>책 데이터에 장르를 붙인 샘플 데이터를 약 300개 제작</li>
<li>이를 이용해 Naive Bayes 분류기를 제작, 학습, 그리고 책 장르를 분류</li>
<li>Bayes 분류기를 이용한 책 장르 분류 완전히 실패
<ul>
<li>원인은 샘플 데이터의 절대적인 부족,<br />
장르의 편중,<br />
Bayes 모델의 한계로 책들의 단어 셋을 독립된 것으로 보았을 때 장르를 특정할 수 있는 단어 부족하기 때문으로 사료됨(장르에 상관없이 공통적으로 등장하는 단어들의 영향)</li>
<li>이를 보충할 수 있는 방법으로 신경망을 이용한 장르 분류를 고려 중 또는 샘플 데이터를 500권으로 늘린 후 다시 학습</li>
</ul>
</li>
</ul>
<h2>소스코드</h2>
<p>소스오픈: <a href="https://github.com/BlessingDev/Korean-Light-Novel-Analyzer">GitHub 페이지</a></p>
<ul>
<li>main.py
<ul>
<li>main loop를 돌리는 python 파일: main</li>
</ul>
</li>
<li>crawaler.py
<ul>
<li>크롤링하는데 필요한 함수를 선언한 python 파일</li>
</ul>
</li>
<li>book_data.py
<ul>
<li>책에 관련된 정보들을 저장하고, 파일 입출력을 담당하는 클래스들을 선언한 python 파일</li>
</ul>
</li>
<li>nlp_module.py
<ul>
<li>자연어 처리와 관련된 함수(제목 선처리, 검색 정확도 검사 등)를 선언한 python 파일</li>
</ul>
</li>
<li>visualization.py
<ul>
<li>시각화와 관련된 함수를 선언한 python 파일</li>
</ul>
</li>
<li>GenreClassifier.py
<ul>
<li>Bayes 분류기의 클래서와 함수를 선언한 python 파일</li>
</ul>
</li>
</ul>
<h2>실행파일(.exe)</h2>
<p>pyinstaller를 이용해 빌드했으나 konlpy 모듈을 지원하지 않아 오류 발생-&gt;실패</p>
<p>py2exe는 Python 3.2까지 밖에 지원하지 않음</p>
<h2>동영상</h2>
<div class="jetpack-video-wrapper"><iframe class='youtube-player' type='text/html' width='1140' height='642' src='https://www.youtube.com/embed/WRb3LTC7vx4?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></div>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2017/11/10/term-project-%ec%a4%91%ea%b0%84-%eb%8d%b0%eb%aa%a8/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>
	</item>
		<item>
		<title>Term-Project 개발일지: 검색된 책과 관련된 통계치</title>
		<link>https://blessingdev.wordpress.com/2017/11/03/term-project-%ea%b2%bd%ea%b3%bc%eb%b3%b4%ea%b3%a01/</link>
				<comments>https://blessingdev.wordpress.com/2017/11/03/term-project-%ea%b2%bd%ea%b3%bc%eb%b3%b4%ea%b3%a01/#respond</comments>
				<pubDate>Fri, 03 Nov 2017 11:30:00 +0000</pubDate>
		<dc:creator><![CDATA[blessingdev]]></dc:creator>
				<category><![CDATA[주저리 주저리]]></category>
		<category><![CDATA[Term-Project]]></category>
		<category><![CDATA[네이버 미친]]></category>
		<category><![CDATA[경과보고]]></category>

		<guid isPermaLink="false">http://blessingdev.wordpress.com/?p=870</guid>
				<description><![CDATA[Term-Project 경과보고1
책과 관련된 통계치
]]></description>
								<content:encoded><![CDATA[<p>이쯤해서 경과보고를 한 번 할까 합니다.</p>
<p>저의 현재 개발 상황은</p>
<ul>
<li>책 제목을 크롤링</li>
<li>네이버 API로 검색</li>
<li>json 파일로 저장해서 불러오기</li>
</ul>
<p>까지 진행되었습니다.</p>
<p>이제 베이지안 분류기를 만들 예정인데 그 전에 검색 내용이 얼마나 유용한지 알아본 통계치를 좀 보여드릴까 합니다.</p>
<h2>책 검색 성공률</h2>
<p><img data-attachment-id="878" data-permalink="https://blessingdev.wordpress.com/2017/11/03/term-project-%ea%b2%bd%ea%b3%bc%eb%b3%b4%ea%b3%a01/error-code-figure/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="error code Figure" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png?w=1140?w=640" class="alignnone size-full wp-image-878" src="https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png?w=1140" alt="error code Figure" srcset="https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png 640w, https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<p>먼저 error_code 그래프입니다. 0은 아무런 문제없이 책이 검색된 경우, 1은 책의 자세한 내용이 검색되지 않은 경우, 2는 책 검색에 결과가 없었던 경우<span style="display:inline !important;float:none;background-color:transparent;color:#3d596d;cursor:text;font-family:'Noto Serif', Georgia, 'Times New Roman', Times, serif;font-size:16px;font-style:normal;font-variant:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-decoration:none;text-indent:0;text-transform:none;white-space:normal;word-spacing:0;">(네이버 책검색에서 크롤링된 제목에 맞는 책을 검색할 수 없었을 때)</span>입니다.</p>
<p>크롤링된 전체 권수는 약 4100권으로 이 중 문제없이 검색된 책은 3675권이었습니다. 검색할 수 없었던 책은 약 500권.</p>
<p>&nbsp;</p>
<h2>책 검색 정확도</h2>
<p>이번에는 책 검색 정확도입니다. 원 데이터 값은 1.0~0.0 사이의 확률값으로 이를 다섯개의 범위로 나누었습니다.</p>
<pre>def devide_range(pro) :
    if pro &gt;= 0.8 :
        return 1
    elif pro &gt;= 0.6 :
        return 2
    elif pro &gt;= 0.4 :
        return 3
    elif pro &gt;= 0.2 :
        return 4
    else :
        return 5</pre>
<p>정확도 검사는 검색된 제목, 크롤링된 제목을 자연어 처리한 후에 단어만을 뽑아 앞뒤 한 인덱스 안에 같은 단어가 있으면 정확도를 1/(단어의 개수)만큼 증가시키도록 했습니다. 굉장히 원시적인 정확도 측정법이지만 의미없는 결과는 걸러낼 수 있었다고 생각합니다.</p>
<p><img data-attachment-id="877" data-permalink="https://blessingdev.wordpress.com/2017/11/03/term-project-%ea%b2%bd%ea%b3%bc%eb%b3%b4%ea%b3%a01/figure_1/" data-orig-file="https://blessingdev.files.wordpress.com/2017/11/figure_1.png?w=1140" data-orig-size="640,480" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Figure_1" data-image-description="" data-medium-file="https://blessingdev.files.wordpress.com/2017/11/figure_1.png?w=1140?w=300" data-large-file="https://blessingdev.files.wordpress.com/2017/11/figure_1.png?w=1140?w=640" class="alignnone size-full wp-image-877" src="https://blessingdev.files.wordpress.com/2017/11/figure_1.png?w=1140" alt="Figure_1" srcset="https://blessingdev.files.wordpress.com/2017/11/figure_1.png 640w, https://blessingdev.files.wordpress.com/2017/11/figure_1.png?w=150 150w, https://blessingdev.files.wordpress.com/2017/11/figure_1.png?w=300 300w" sizes="(max-width: 640px) 100vw, 640px"   /></p>
<p>통계 결과, 0.8 이상의 정확도를 보이는 검색이 약 3275건으로 문제없이 검색된 결과 중에서는 89%의 정확도를 얻었습니다.</p>
<p>전체 권수 중에서는 약 79% 정도의 유용한 결과를 얻었다고 볼 수 있겠습니다.</p>
<p>만족스러운 수치는 아니지만 약 3200개의 데이터는 통계학적으로 접근하는데 문제 없다고 보여져 이 부분에 대한 개선은 나중으로 미루기로 합니다.</p>
<p>솔직히 79%밖에 안 된다니 가슴이 아프네요. 정말 네이버 책 검색은 쓰래기입니다. 흑흑</p>
]]></content:encoded>
							<wfw:commentRss>https://blessingdev.wordpress.com/2017/11/03/term-project-%ea%b2%bd%ea%b3%bc%eb%b3%b4%ea%b3%a01/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						
		<media:content url="https://0.gravatar.com/avatar/0f04ccc708ba67d1edb4d74743a409e9?s=96&#38;d=identicon&#38;r=G" medium="image">
			<media:title type="html">blessingdev</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/error-code-figure.png" medium="image">
			<media:title type="html">error code Figure</media:title>
		</media:content>

		<media:content url="https://blessingdev.files.wordpress.com/2017/11/figure_1.png" medium="image">
			<media:title type="html">Figure_1</media:title>
		</media:content>
	</item>
	</channel>
</rss>
