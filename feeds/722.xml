<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>LeeCreation! Media &amp; Robot</title>
<link>https://leestation.tistory.com/</link>
<description>미디어와 로봇에 관심이 많은 아이 그 영역을 넓혀보려 합니다.
 '영상 제작'과 '감정 로봇'이 블로그의 주소재입니다. 자유로운 답글 환영합니다!</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 08:00:35 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>이원형</managingEditor>
<image>
<title>LeeCreation! Media &amp; Robot</title>
<url>http://cfile3.uf.tistory.com/image/1878AC0E49C338A301936E</url>
<link>https://leestation.tistory.com</link>
<description>미디어와 로봇에 관심이 많은 아이 그 영역을 넓혀보려 합니다.
 '영상 제작'과 '감정 로봇'이 블로그의 주소재입니다. 자유로운 답글 환영합니다!</description>
</image>
<item>
<title>게임과 윤리, 로봇과 윤리. 서로 닮았지만...</title>
<link>https://leestation.tistory.com/779</link>
<description>&lt;p&gt;2016년 1월 15일에 페이스북에 썼던 글.&lt;/p&gt;&lt;p&gt;(&lt;a href=&quot;https://www.facebook.com/notes/wonhyong-lee/%EA%B2%8C%EC%9E%84%EA%B3%BC-%EC%9C%A4%EB%A6%AC-%EB%A1%9C%EB%B4%87%EA%B3%BC-%EC%9C%A4%EB%A6%AC-%EC%84%9C%EB%A1%9C-%EB%8B%AE%EC%95%98%EC%A7%80%EB%A7%8C/10206649010558999/?fref=gs&amp;amp;dti=363477150662443&amp;amp;hc_location=group&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;링크&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&amp;lt;게임과 윤리, 로봇과 윤리. 서로 닮았지만...&amp;gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;폭력성을 요소로 한 대표적인 게임 GTA, 개인적으로 이런 게임을 즐기는데 거부감이 있다. 그러나 플레이어가 특수요원이 되어 상대편을 총으로 쏘는 여러 종류의 FPS 게임은 별 거부반응 없이 즐긴다. 그리고 스타크래프트에서 해병 유닛을 사지로 몰아넣거나 상대 유닛을 죽이는 것은? 전혀 윤리적 고민을 하지 않는다. 전쟁 상황에서 살인은 정당방위라는 프레임 안에 속하기 때문인 걸까? 아니면 그냥 게임은 게임일 뿐이기 때문일까?&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;이러한 게임 속 윤리적 가치에 대한 흥미로운 글이 올라왔다. 해당 글에서는 독자들에게 다음과 같은 질문을 던진다. &quot;게임이 과연 윤리적일 필요가 있을까. 그렇다면 어디까지 윤리적이어야 할까.&quot;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;해당 글 링크: &lt;a href=&quot;https://l.facebook.com/l.php?u=http%3A%2F%2Fpost.naver.com%2Fviewer%2FpostView.nhn%3FvolumeNo%3D3361486%26memberNo%3D11710666%26mainMenu%3DGAMEAPP%26fbclid%3DIwAR1e62_n1OjPPLyDBlxz5ttaZ1oFfpO0v9ZSukRBjS0EobauQinq_4hF7L8&amp;amp;h=AT1WaaaTBh7dwPeZik3SKXaNVJcQ1rQfiFGve8a1NGtkyeEN3UX_TslFzFNvh0vFlWow9ZJ0bqnO5CWVWLWInxUNL5Z291Bf4OC7kPf-5KgEhZmtkvgxZT1xlQnkP-EbeWM&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot; data-lynx-mode=&quot;asynclazy&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;http://post.naver.com/viewer/postView.nhn?volumeNo=3361486&amp;amp;memberNo=11710666&amp;amp;mainMenu=GAMEAPP&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;게임 속 폭력성과 현실 속 폭력성은 그다지 연관관계가 없다고 받아들여지기도 한다. 그러나 부모의 입장에서 자녀가 '능동적으로' 살인 행위를 해야 하는 게임을 한다면 그다지 마음이 편할 것 같지는 않다. 굳이 부모-자녀 관계에서뿐이랴, 게임 속 상대방이 되어 서로를 죽이며 미소를 짓는 친구의 모습을 볼 때 섬뜩함을 느끼는 것이 그리 이상한 기분인 걸까?&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;다른 프레임에서 봐야 하는 문제이기도 하지만 게임 속 성폭행은 어떻게 바라봐야 할까? 게임 속에서 마음대로 성폭행을 할 수 있다면, 게임이기 때문에 별다른 제재를 할 필요가 없다고 이야기할 수 있을까? 앞에서 공유해온 글에서는 성폭력뿐 아니라 사생활 침해에 대한 내용까지 언급했다. 이러한 다양한 비윤리적 상황들은 게임 속에서 얼마든지 구현될 수 있다.&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;그럼에도 불구하고 게임 속 폭력성을 옹호(?)하는 목소리가 있는 것은 1) 게임 속은 엄연히 '가상'현실이기 때문이고, 2) 인간의 폭력성의 모든 책임을 게임에 돌리는 실수를 범하지 않게 하기 위함도 있다.&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;게임 속 폭력성의 현실 반영 가능성에 대한 판단은 각자의 몫으로 남겨두기로 하고(필자는 무책임하다 ㅋㅋ;;), 이제 좀 더 논의를 확장하여 게임을 '로봇'으로 치환해보자.&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;로봇산업이 아직 게임산업만큼 대중적으로 발달하지는 않았고 복잡한 윤리문제를 맞닥뜨리고 있는 것은 아니라고 본인은 생각하지만, 그렇다고 마냥 무시할 수는 없는 것이 로봇과 윤리 문제다. (공장 속 자동화 로봇이나 무인자동차에 이르기까지 다양한 종류의 로봇들이 있지만, 이 글에서는 '사람을 닮은' 로봇이라는 범위 안에서 이야기하고자 한다.)&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;로봇은 게임 속 사람 캐릭터만큼 정교하지도 않고 투박하게 움직인다. 하지만 가상 공간이 아닌 '현실' 공간상에 존재하기 때문일까... 많은 연구자들은 로봇을 사람의 연장선상에 있는 존재로 가정하고, 로봇과 사람의 교류가 사람과 사람 간의 관계처럼 많은 의미를 가져올 것이라는 바탕 하에 연구를 진행하고 있다. 대표적인 연구가 자폐아의 심리치료다. 자폐아와 로봇의 교류를 통해 실제 사람과의 교감능력을 발달시킬 수 있을 것이라는 가정이다. 실제로 어느 정도 효과가 있음이 조금씩 밝혀지고 있다. 얼마 전에 소개했던 연구도 &quot;사람들은 상대가 로봇이더라도 사람을 상대할 때와 비슷한 심리적, 정서적 영향을 받는다.&quot;는 내용이었다.&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;해당 글 링크: &lt;a href=&quot;https://www.facebook.com/leestation/posts/10206592241819816&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.facebook.com/leestation/posts/10206592241819816&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;참고로 로봇을 대하는 사람의 폭력성, 윤리적 인식 변화에 대해서 필자가 썼던 다른 글도 공유...&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;해당 글 링크: &lt;a href=&quot;https://l.facebook.com/l.php?u=http%3A%2F%2Fwww.irobotnews.com%2Fnews%2FarticleView.html%3Fidxno%3D4667%26fbclid%3DIwAR1RpyAM3ykzGiWDsvmuWQG33XSoeCPXD0ZoV15oHw2X_KriA59mpshasuQ&amp;amp;h=AT0EjN-4-1AK3xRlQ8B-xuuAxG1RTGbx8etTw6D0iCd3r6DMoS-3dyDB5AAi61Q8C_kngBeYPgDy3jPuCoPrNppFFoaGBz6e7V86arR061hRv1VgA8Fw7UpVlFTu8B_CywQ&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot; data-lynx-mode=&quot;asynclazy&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;http://www.irobotnews.com/news/articleView.html?idxno=4667&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;그 수준이 사람과 사람 사이에서 일어나는 영향력만큼은 아니더라도 로봇의 존재가 사람에게 심리적 영향을 주고 있고, 그렇기에 더욱이 로봇을 대상으로 하는 폭력성 오락(드라마 '리얼로봇' 시즌2 1화 참고)이나 섹스 로봇에 대한 개발을 조심해야 한다는 목소리가 커지고 있다. 걷거나 무게중심을 잡는 로봇을 테스트하기 위해 로봇을 발로 차는 영상이 올라오면 &quot;너무한 것 같다&quot;는 반응이 속속 올라온다. 재치 있게 영상 마지막에 &quot;이 영상에서 어떤 로봇도 다치지 않았습니다.&quot;라는 메시지까지 띄울 정도다. 얼마 전 '히치봇'이 무차별적으로 파괴되었을 때는 의외로 많은 사람들과 언론이 로봇에 동정심을 표했다.&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;히치봇 관련 기사: &lt;a href=&quot;https://l.facebook.com/l.php?u=http%3A%2F%2Fwww.irobotnews.com%2Fnews%2FarticleView.html%3Fidxno%3D5424%26fbclid%3DIwAR1_6698y49EafcD2p_O4pIEEm0gY6JOAqQaWWzLx8ubCFmMEjt78PyA8Qw&amp;amp;h=AT0EZ1HFqcOIxokfRGEIXUloopBWj75IF1CLctsOXDNoZznqlvLJhEtnP-mLW7EO8uD4kP15TBws2lwRzFasGMxj9dRXhWFoUO60l17hF2tU-CfoHK2mFeEXDYM4uCmw1l8&quot; target=&quot;_blank&quot; rel=&quot;noopener nofollow&quot; data-lynx-mode=&quot;asynclazy&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;http://www.irobotnews.com/news/articleView.html?idxno=5424&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;_2cuy _3dgx _2vxa&quot; style=&quot;white-space: pre-wrap; direction: ltr; box-sizing: border-box; margin: 0px auto 28px; width: 700px; overflow-wrap: break-word; font-family: Georgia, serif; color: rgb(29, 33, 41); font-size: 17px;&quot;&gt;여전히 로봇은 로봇이지 사람이 아니다. 로봇을 발로 찬다고 경찰서에 잡혀가지는 않는다. 그것이 (아직은) 로봇이 갖는 존재적 한계일지도 모르겠다. 하지만 찬찬히 생각해보면 로봇은 실제 공간 안에서 사람의 행동과 심리적 변화를 유발한다. 그렇다면 로봇의 폭력적, 비윤리적 활용에 대해 대수롭지 않게만 생각하는 날이 얼마나 남았을까. 필자는 그 날이 얼마 남지 않았다고 생각한다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>연구관련</category>
<author>이원형</author>
<guid>https://leestation.tistory.com/779</guid>
<comments>https://leestation.tistory.com/779#entry779comment</comments>
<pubDate>Wed, 06 Mar 2019 19:44:43 +0900</pubDate>
</item>
<item>
<title>주피터 노트북 Jupyter Notebook 관련 자료</title>
<link>https://leestation.tistory.com/778</link>
<description>&lt;p&gt;설치&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;1) 아나콘다를 설치했다면 이미 깔려있음&lt;/p&gt;&lt;p&gt;2) 그게 아니라면&lt;/p&gt;&lt;p&gt;pip install notebook&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;(notebook을 포함하여 이것저것 더 깔고 싶다면 메타패키지인 jupyter를 설치한다)&lt;/p&gt;&lt;p&gt;pip install&amp;nbsp;jupyter&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;실행&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;터미널을 켜고 작업하고자 하는 폴더로 이동&lt;/p&gt;&lt;p&gt;jupyter&amp;nbsp;notebook&lt;/p&gt;&lt;p&gt;위 명령어로 실행&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;관련자료&lt;/p&gt;&lt;p&gt;- Jupyter Notebook의 역사&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://youtu.be/VbbXUKigVfs&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/VbbXUKigVfs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;- 파이선 및&amp;nbsp;Jupyter Notebook 설치&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://youtu.be/gYzod9NOGMk&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/gYzod9NOGMk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;- 사용법 (기초)&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://youtu.be/SLPo0o_HArs&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/SLPo0o_HArs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원격설정&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://breath91.tistory.com/entry/%EC%A3%BC%ED%94%BC%ED%84%B0-%EB%85%B8%ED%8A%B8%EB%B6%81jupyter-notebook-%EC%84%A4%EC%B9%98%EB%B6%80%ED%84%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%9B%90%EA%B2%A9-%EC%84%A4%EC%A0%95-%EA%B9%8C%EC%A7%80#recentComments&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://breath91.tistory.com/entry/%EC%A3%BC%ED%94%BC%ED%84%B0-%EB%85%B8%ED%8A%B8%EB%B6%81jupyter-notebook-%EC%84%A4%EC%B9%98%EB%B6%80%ED%84%B0-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%9B%90%EA%B2%A9-%EC%84%A4%EC%A0%95-%EA%B9%8C%EC%A7%80#recentComments&lt;/a&gt;&lt;/p&gt;&lt;p&gt;위 설정에서 open browser를 false로 바꿀 필요는 없어보인다.&lt;/p&gt;</description>
<category>연구관련</category>
<author>이원형</author>
<guid>https://leestation.tistory.com/778</guid>
<comments>https://leestation.tistory.com/778#entry778comment</comments>
<pubDate>Sat, 11 Aug 2018 02:35:13 +0900</pubDate>
</item>
<item>
<title>[번역+약간해설] 케라스(Keras) 모델 만들기: Sequential vs. Functional</title>
<link>https://leestation.tistory.com/777</link>
<description>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;*번역은 검은 글자로, 제 의견은 푸른 글자로 구분지어 놓았습니다. 의역이 다소 포함되어 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;Keras로 예제 네트워크 구조를 공부해본 사람들이라면, 네트워크를 디자인하는 방법이 두 가지가 있다는 걸 발견할 수 있었을 것이다. 가장 기본적인 방법으로는 sequential 방법을 이용해서 직관적으로 레이어를 층층이 쌓아가는 것일텐데, 이 방법이 갖는 한계점이 있어서, functional 방법으로 네트워크 구조를 디자인하는 방법도 꽤나 사용되고 있었다. 우선, 그 둘 간의 차이가 무엇인지 검색해보던 중 간단한 글이 있어 공부도 할 겸 해당 글에 대한 번역을 시도해보았다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원글 &lt;a href=&quot;https://jovianlin.io/keras-models-sequential-vs-functional/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://jovianlin.io/keras-models-sequential-vs-functional/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Keras 모델을 만드는데는 sequential 방법과 functional 방법이 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;먼저, sequential 방법은 층층이(layer-by-layer) 쌓아 올릴 수 있게 하는 방법으로 대부분 문제를 해결할 수 있다. 하지만, 이 방법은 layer를 공유하는 구조나, 다중 입력/출력을 사용하지는 못한다는 한계가 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;대신, functional 방법을 사용하면, layer가 앞/뒤 layer에만 연결된 구조뿐 아니라 훨씬 더 자유자재로 그 구조를 정의하여 사용할 수 있게된다. layer들을 어떤 layer에든지 연결해서 사용할 수 있는 것이다. 그래서 siamese 네트워크와 residual 네트워크 같은 복잡한 구조의 네트워크를 만들 수 있게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;예제 코드를 보면서 확인해보자.&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Sequential Models&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/998A963E5B576FD214&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Capture.PNG&quot; height=&quot;155&quot; width=&quot;350&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;위 예제 코드를 보면, layer들이 각각 하나씩 Sequential object인 model에 추가되고 있음을 알 수 있다. &lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;입력 크기가 1이고 node 개수가 2인 중간 layer를 거쳐서 출력 크기가 1인 네트워크 구조다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Sequential 모델을 이용하면 대부분의 딥러닝 모델을 만드는데 큰 무리는 없지만, 다음과 같은 한계점이 있다.&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;여러 소스의 입력을 받아오지 못한다.&lt;/li&gt;&lt;li&gt;여러 곳에 사용될 수 있는 다중 출력을 만들지 못한다.&lt;/li&gt;&lt;li&gt;layer를 재사용할 수가 없다.&lt;/li&gt;&lt;/ol&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Functional Models&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;예제 코드에 주석이 한참 달려있어서 주석 해석도 포함하였다&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99EFF7375B57714F14&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Capture.PNG&quot; height=&quot;276&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;# 입력 정의하기&lt;/p&gt;&lt;p&gt;# Sequential 모델과는 달리, 여기서는 독립적인 &quot;입력&quot; layer를 만들어주어야 한다. 그리고 그 입력 데이터의 shape도 지정해 주어야 한다. 그래서 입력 layer는 tuple 형태의 shape 인수를 넘겨 받아 입력 데이터의 차원을 결정한다. 만약 입력 데이터가 1차원이더라도(&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;1차원의 값이 아니라&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;1차원 벡터와 같은&lt;/span&gt;), 입력 shape에는 batch 크기를 설정하기 위해 한 차원을 더 지정해두어야 한다. 따라서, tuple 형태의 shape은 항상 마지막에 한 차원을 더해서 정의되어 사용된다. 위 코드에서도 shape을 (2)가 아니라 쉼표를 더해 (2,)라고 사용하고 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9922F74C5B57743017&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Capture.PNG&quot; height=&quot;154&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;# Layer 연결하기&lt;/p&gt;&lt;p&gt;# 여기서 layer들은 짝맞춤(pairwise)으로 연결되어진다. 새 layer가 추가될 때, 어떤 입력을 사용할 건지 명확히 지정해주어야 한다. 예제 코드를 보면 괄호를 이용해서 Dense layer 뒤에 어떤 입력 layer가 연결되는지를 지정해주었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99B2CB4F5B5775551A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Capture.PNG&quot; height=&quot;168&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;# 모델 생성&lt;/p&gt;&lt;p&gt;# 모든 layer들이 다 만들어졌다면, 마지막으로 전체 모델을 정의해야 한다. Sequential 방법에서와 했던 것과 같이, 여기서도&amp;nbsp;summarize, fit, evaluate, prediction을 다 사용할 수 있다. 모델을 만들려면 Keras에서 제공하는 Model()함수에 입력과 출력만 정의해주면 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;참고로 앞서 sequential 방법의 예제코드에서는 입력 크기 1, node가 두개인 중간 layer, 출력 크기 1의 네트워크 모델의 예시였는데, fuctional 방법 예제코드에서는 입력 크기 1, 그리고 중간 layer 없이 출력크기 2인 네트워크 모델의 예시다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Keras의 functional 방법은 훨씬 더 유연한 모델 정의 방법을 제공한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;특별히, layer들을 공유할 수 있을 뿐만 아니라, 입력과 출력의 모델을 여러개로 정의할 수도 있다. 더 나아가서,&amp;nbsp;ad hoc acyclic network 그래프도 만들 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#003399&quot;&gt;Ad hoc acyclic network를 여기서 굳이 자세하게 다룰 필요는 없을 것 같다. 사실 본인도 잘 모르겠다. 짧게 검색하니 아래 글[1]이 나오는데 대충 이런거구나 알고 넘어가면 될 것 같다. 여러 개가 다중으로 연결된 망 같은 거라고 하면 되려나..? 어쨌든 이러한 구조도 functional 방법으로 디자인이 가능하다는 이야기다.&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color=&quot;#003399&quot;&gt;[1]&amp;nbsp;&lt;a href=&quot;http://blog.acronym.co.kr/128&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://blog.acronym.co.kr/128&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 모델들은 layer들의 instance들을 입출력 쌍으로 연결함으로써 만들어지게 되고, Model()함수에 입력과 출력을 파라미터로 지정해줌으로써 구현된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;Functional 방법에 대해 장점을 이토록 입이 마르도록 이야기하는 걸 보니, 다음 번 공부 자료는 functional API에 대해 더 설명한 [2, 3] 자료를 공부하는 것으로 해야겠다.&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;[2]&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#003399&quot;&gt;&lt;a href=&quot;https://keras.io/getting-started/functional-api-guide/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://keras.io/getting-started/functional-api-guide/&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 51, 153);&quot;&gt;[3]&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#003399&quot;&gt;&lt;a href=&quot;https://machinelearningmastery.com/keras-functional-api-deep-learning/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://machinelearningmastery.com/keras-functional-api-deep-learning/&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>연구관련</category>
<author>이원형</author>
<guid>https://leestation.tistory.com/777</guid>
<comments>https://leestation.tistory.com/777#entry777comment</comments>
<pubDate>Wed, 25 Jul 2018 04:48:54 +0900</pubDate>
</item>
<item>
<title>쌩(?!)초보자의 Python 케라스(Keras) GAN 코드 분석 (draft)</title>
<link>https://leestation.tistory.com/776</link>
<description>&lt;p&gt;본 글은 [1]의 영어 원문에 나온 코드를 이해하기 위해 공부 용으로 정리한 글이다. 원래는 번역도 함께 진행하려고 했는데, 이미 번역본[2]이 있어서 이 글은 코드에 대한 분석만 진행한다.&lt;/p&gt;&lt;p&gt;[1] 원문 &lt;a href=&quot;https://towardsdatascience.com/gan-by-example-using-keras-on-tensorflow-backend-1a6d515a60d0&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://towardsdatascience.com/gan-by-example-using-keras-on-tensorflow-backend-1a6d515a60d0&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[2] 한글 번역&amp;nbsp;&lt;a href=&quot;https://brunch.co.kr/@rapaellee/18&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://brunch.co.kr/@rapaellee/18&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;전체 코드(약 200줄)&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/roatienza/Deep-Learning-Experiments/blob/master/Experiments/Tensorflow/GAN/dcgan_mnist.py&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/roatienza/Deep-Learning-Experiments/blob/master/Experiments/Tensorflow/GAN/dcgan_mnist.py&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;*주의: 본문은 아주아주 기초적인 코드 내용 분석까지 시도하기 때문에 기본적인 것들을 이미 아시는 분들은 지루하실 수 있습니다. 딥러닝 자체는 말할 것도 없고 개인적으로 케라스는 몇주 전에 설치했고, 파이썬 자체도 아주 잘 알고 있는 게 아니기 때문에,&amp;nbsp;파라미터를 하나하나 뜯어내서 공부했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Discriminator 정의 함수&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/998C103A5B49313926&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_QHMGABbwL04x5VGYc_UWSA.png&quot; height=&quot;115&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우선 구조를 보고, 몇가지 생각해보자. 28x28 크기의 gray 이미지를 2D convolution을 이용해 각 단계를 거칠 때마다 해상도는 가로 절반, 세로 절반씩 줄어드는데, 깊이(? 코드 상에서 depth라고 정의해서 쓰고 있다)는 64부터 128, 256, 512로 두배씩 증가하고 있다. 아 그러고 보니 세번째에서 네번째는 해상도는 그대로네. 그리고 마지막에 바로 시그모이드 함수로 확률 값을 얻어낸단다. 왜 이런 구조를 생각해냈을까... 코드를 다 공부해보고 다시 질문해보자. 어쩌면 코드 말고 논문을 봐야 할지도 모르겠다. 그리고 마지막에 4x4x512 차원에서 어떻게 1차원으로 넘어갈 수 있는지 궁금하다. 코드를 보면 알겠지. 다른 CNN 코드를 보면 마지막에 fully connected layer를 쓰는데 그걸 안 쓰는 걸까. 아.. 뒤에 코드를 더 보고 알았다. 4x4x512 차원을 Flatten 함수로&amp;nbsp;8,192길이의 1차원으로 만든 후에 그걸&amp;nbsp;8,192&amp;nbsp;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;→ 1로 만드는 fully connected(? 이것도 이렇게 부르는 게 맞나 모르겠는데 틀린 말도 아닌듯)가 있었다. 그림에 딱히 이걸 표현 안해 놓은듯.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;이제 코드를 하나씩 보자. (진짜 한 줄씩 볼 예정임)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;참고로 전체 코드(약 200줄)는 아래 링크에서 볼 수 있다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/roatienza/Deep-Learning-Experiments/blob/master/Experiments/Tensorflow/GAN/dcgan_mnist.py&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/roatienza/Deep-Learning-Experiments/blob/master/Experiments/Tensorflow/GAN/dcgan_mnist.py&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지금부터 설명하는 코드는 Discriminator model을 만들어 주는 함수의 코드다.&lt;/p&gt;&lt;pre name=&quot;71c5&quot; id=&quot;71c5&quot; class=&quot;graf graf--pre graf-after--figure&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 52px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D = Sequential()&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;시작부터 self.D라는 이상한 놈이 나타났다. python에서 self에 대한 것이 궁금하다면 아래 링크 [3]을 참고하기로 하자. 저 self가 어디서부터 왔고. self에 속한 D는 뭘 의미하는지 알아보자.&lt;/p&gt;&lt;p&gt;[3]&amp;nbsp;&lt;a href=&quot;https://wikidocs.net/1742&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://wikidocs.net/1742&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;일단 이 코드는 discriminator라는 함수 안에 있는 코드로 self는 이 함수를 맴버함수로 가지고 있는 class를 가리키는 것일 것이다. 전체 코드를 확인해보면 이 class는 DCGAN이라는 이름의 클래스이고, 거기에 있는 맴버 변수 D는 DCGAN class에서 discriminator를 가리키는 변수로 정의되어 있다. 그러니깐 DCGAN이라는 class에서 사용할 discriminator model의 이름을 discriminator라는 함수 내에서 사용하기 위해 저렇게 표현되는 것이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럼 이제 self.D가 discriminator model이라는 것을 알았고, Sequential()은 위 그림에서 봤던 구조를 '순서대로' 이어 붙일 것이기 때문에 사용된 코드다. Sequential을 이용해서 모델을 만드는 경우와 Functional한 방법으로 모델을 만드는 경우가 있는데 이는 링크만 남겨두고 나중에 더 공부해봐야겠다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;(&lt;a href=&quot;https://jovianlin.io/keras-models-sequential-vs-functional/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://jovianlin.io/keras-models-sequential-vs-functional/&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;*위 링크의 글을 번역하게 되어 추가로 아래에 링크를 남겨놓는다.&lt;/p&gt;&lt;p&gt;(&lt;a href=&quot;http://leestation.tistory.com/777&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://leestation.tistory.com/777&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;후... 첫줄 이해하는 것부터 이렇게 오래 걸리다니... 물론 200줄의 코드는 짧은 편이지만 이렇게 시간이 걸려서야... ㅋㅋ 그래도 어쩌겠나.. 공부해야지.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;00f3&quot; id=&quot;00f3&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;depth = 64&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음은 depth. 이건 위 그림을 보면 어떤 의미인지 알 수 있다. 그러나 나는 여전히 의문이다. 왜 64인가?! ㅋㅋ 지금 단계에서 이해하긴 어려울듯. 코드 해석이 다 끝나고 다시 한 번 퇴고하면서 설명을 보완해놔야겠다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;b551&quot; id=&quot;b551&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;dropout = 0.4&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;overfitting을 막기 위해 dropout의 비율을 40%로 한다. dropout이 꼭 필요한 건지는 모르겠지만 해보니깐 더 좋더라... 그러니 쓰자. 뭐 이런 건데... 사공이 많으면 배가 산으로 가니깐 사공을 줄이자는 의미인데, 뭐 아주 틀린 말은 아니다.&lt;/p&gt;&lt;p&gt;[4] dropout과 관련된 설명&amp;nbsp;&lt;a href=&quot;http://doorbw.tistory.com/147&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://doorbw.tistory.com/147&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;4f98&quot; id=&quot;4f98&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;input_shape = (self.img_rows, self.img_cols, self.channel)&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;입력 이미지는&amp;nbsp;DCGAN class에 img_rows와 img_cols에 정의된 대로 28x28의 해상도이고, gray 이미지라서 channel은 1이다. 곧 input의 shape은 (28, 28, 1). list&amp;nbsp;형태인 [28, 28, 1]이 아니라 tuple 형태다. 그리고 channel이 맨 마지막에 오는데, 찾아보니 별 말 없으면 data_format에 channels_last라는 옵션을 기본으로 사용하는 듯하다.&lt;/p&gt;&lt;p&gt;[5] list와 tuple의 차이&amp;nbsp;&lt;a href=&quot;https://blog.naver.com/ijoos/221263485291&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://blog.naver.com/ijoos/221263485291&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;90c9&quot; id=&quot;90c9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;p&gt;self.D.add(Conv2D(depth*1, 5, strides=2, input_shape=input_shape, padding='same', activation=LeakyReLU(alpha=0.2)))&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;드디어 본격적인 structure 추가가 시작됐다. Conv2D함수로로 만들어지는 2D convolution을 discriminator model에 추가하는 코드다. add 함수는 사실 저렇게 하면 되는 거구나... 알고 넘어가면 되는데, 뒤에 보면 Conv2D를 사용할 때 input_shape을 따로 알려주지 않는다. 즉, 처음 add하는 layer에만 input_shape을 알려주는데, 이게 아마도 자동으로 입출력 shape을 알고 매칭시켜주는 것 같다. Sequential이랑 functional 공부할 때 더 살펴봐야겠다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 Conv2D 함수는 어떤 변수들을 파라메터로 받는지 확인해보자. [6]의 문서를 확인해보면,&amp;nbsp;&lt;/p&gt;&lt;p&gt;[6]&amp;nbsp;&lt;a href=&quot;https://keras.io/layers/convolutional/#conv2d&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://keras.io/layers/convolutional/#conv2d&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;- 첫번째 파라메터는 integer 값으로 몇개의 filter를 쓸 것인가에 해당한다. 하나의 filter로 입력 이미지를 한 번 쭉 훑을 때마다 (convolution 할 때마다) 한 장의 output image가 생성되기 때문에 filter의 개수만큼 출력되는 output image가 생긴다. 이 숫자를 Channel이라고 부른다.&lt;/p&gt;&lt;p&gt;- 두번째 파라메터는 filter의 크기를 결정하는 건데, filter의 차원이 2D이기 때문에 (3, 3) 이런식으로 적기도 하는데 그냥 하나의 값만 적혀있으면 가로 세로 길이가 그 값으로 동일하다는 의미. 여기는 5라고 적혀있으므로 filter의 크기는 5x5가 된다. 그리고 많은 경우 3x3 filter를 쓰는데, 여기서는 strides를 2로(픽셀을 두 칸씩 건너뜀) 할 예정이기 때문에 5x5 filter를 써야 스킵되는 픽셀이 없게 된다.&lt;/p&gt;&lt;p&gt;- strides는 filter를 훑을 때 픽셀을 몇개씩 건너뛰며 convolution 계산을 시킬 건지 결정한다. 1이면 한칸씩 이동하는 거라서 입력과 같은 해상도의 출력이 나오고, 예제 코드에 쓰인 대로 2칸씩 이동하면 가로 세로 길이는 절반이 된다. 이거 때문에 28x28 해상도의 입력 이미지가 14x14 해상도의 출력으로 나오게 된다. 이 이유 때문에 strides를 1로 설정한 CNN 코드에서 처럼 pooling 같은 걸 따로 할 필요가 없던 것이다.&lt;/p&gt;&lt;p&gt;- input_shape은 앞에서 이미 설명했다.&lt;/p&gt;&lt;p&gt;- padding은 filter가 입력 이미지 가장자리 부분에 걸치게 될 때 빈 공간을 어떻게 채울 것인지 설정해주는 것이다. same인 걸 보니 가장자리 값을 그대로 복사해서 채우나보다. 그러고 보니 코너에서는 대각선 빈공간에는 어떤 값으로 채우나 모르겠다. 뭐 크게 중요하지는 않을듯.&lt;/p&gt;&lt;p&gt;- activation은 LeakyReLU를 썼는데 그냥 ReLU는 입력이 음수값일 때 그냥 0으로 만들어버리는데 얘는 입력이 음수값일 때 alpha 값을 곱해주어 아주 0으로 버리지는 않는 함수다. [7]&lt;/p&gt;&lt;p&gt;[7]&amp;nbsp;&lt;a href=&quot;https://keras.io/layers/advanced-activations/#leakyrelu&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://keras.io/layers/advanced-activations/#leakyrelu&lt;/a&gt;&lt;/p&gt;&lt;p&gt;- 출력은 14x14x64의 차원을 갖는다. shape은 (None, 14, 14, 64) 형태. None에 해당하는 건 여러 개의 sample data를 한꺼번에 집어넣을 수 있도록 잡아둔 공간인데 (batch라고 부르기도 함), 지금은 모델을 디자인하는 단계이기 때문에 None이라고 표현했다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;0985&quot; id=&quot;0985&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Dropout(dropout))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Dropout의 개념은 앞에서 설명했는데, fully connected layer에서의 dropout이 아니라 Conv2D에서의 dropout은&amp;nbsp;어떻게 적용되는 건지 궁금하다. 그냥 filter들을 하나씩 끄는 건가. 아니면 filter 내에 weight들을 따로 확률적으로 0으로 만들어 주는 건가. 나중에 더 찾아봐야겠다. 일단 기본적으로는 어떤 역할인지는 아니깐 넘어가자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;14bf&quot; id=&quot;14bf&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;p&gt;self.D.add(Conv2D(depth*2, 5, strides=2, padding='same', activation=LeakyReLU(alpha=0.2)))&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;두번째 2D convolution에 해당하는 코드. depth에 곱해지는 숫자가 두배가 된 것 빼고는 앞에서 다 이미 설명했다. 다만 입력의 shape에서 channel의 수가 64개가 되었기 대문에 filter의 shape은 그냥 (5, 5)가 아니라 (5, 5, 64)가 된다. 여러 channel에 대해 convolution이 어떻게 이루어지는가는 아래 링크의 영상을 보면 이해가 쉽다. 그리고 이 layer의 출력은 7x7x128의 차원을 갖는다. 출력 shape은 (None, 7, 7, 128)&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://youtu.be/KTB_OFoAQcc&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/KTB_OFoAQcc&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;928d&quot; id=&quot;928d&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Dropout(dropout))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또 한 번 dropout.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;fb38&quot; id=&quot;fb38&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;p&gt;self.D.add(Conv2D(depth*4, 5, strides=2, padding='same',  activation=LeakyReLU(alpha=0.2)))&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;세번째 2D convolution. 이번에는 depth에 4가 곱해졌다. 깊다... ㄷㄷ&amp;nbsp;출력은 4x4x256의 차원을 갖는다. 여기서 잠깐. 7x7이 왜 4x4가 되었는가?! 그것은 3.5x3.5가 될 수 없기 때문이다;; 가로 길이가 7인데, 1부터 시작해서 2칸씩 움직인다면, &lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;1&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: small;&quot;&gt;→ 3&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: small;&quot;&gt;→ 5&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif; font-size: small;&quot;&gt;→ 7 총 4칸을 거쳐가게 된다. 세로도 마찬가지. 그래서 4x4가 된다. 출력 shape은&amp;nbsp;&lt;/span&gt;(None, 4, 4, 256)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;9843&quot; id=&quot;9843&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Dropout(dropout))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 또 dropout.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;db93&quot; id=&quot;db93&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;p&gt;self.D.add(Conv2D(depth*8, 5, strides=1, padding='same', activation=LeakyReLU(alpha=0.2)))&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막 2D convolution. 여기서는 strides가 1이기 때문에 depth만 깊어지고 출력의 해상도는 입력과 같다. 이로써 이 Conv2D까지 거치게 되면 출력은 4x4x512의 차원이 된다.&amp;nbsp;&lt;span style=&quot;font-size: small; color: rgb(34, 34, 34);&quot;&gt;출력 shape은&amp;nbsp;&lt;/span&gt;(None, 4, 4, 512)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;49e7&quot; id=&quot;49e7&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Dropout(dropout))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;마지막으로 dropout 한 번 더.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;d9ad&quot; id=&quot;d9ad&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Flatten())&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;4x4x512 차원을&amp;nbsp;8,192 길이의 1차원으로 만들어주는 함수다. 출력 shape은 (None, 8192) 참고로 여기서도 data_format의 default 조건은 channel_last다. 그러니깐 가로줄부터 읽고, 세로줄 순서로 넘어가고, channel 순서로 데이터를 읽어서 1차원으로 나열한다는 것.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;fa59&quot; id=&quot;fa59&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Dense(1))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다음으로 우리는 최종 출력이 0에서 1 사이의 값을 갖는 하나의 변수만 가지고 있으면 되기 때문에, 8,192&amp;nbsp;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;→ 1로 만드는 가장 기본적인 neural network 형태[8]를 만들어 주었다. 출력 shape은 (None, 1)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;[8]&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#222222&quot; size=&quot;2&quot;&gt;&lt;a href=&quot;https://keras.io/layers/core/#dense&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://keras.io/layers/core/#dense&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;af5b&quot; id=&quot;af5b&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.add(Activation('sigmoid'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;끝이 보인다!. 마지막으로 activation 함수를 넣어준다. sigmoid 함수는 실수값을 갖는 모든 입력 값을 0에서 1 사이 값으로 만들어 준다. [9] Activation layer의 출력 shape은 입력의 shape과 같다. 그래서&amp;nbsp;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;(None, 1)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;[9]&amp;nbsp;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sigmoid_function&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://en.wikipedia.org/wiki/Sigmoid_function&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;f05f&quot; id=&quot;f05f&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.D.summary()&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;summary() 함수는 D라는 model이 어떻게 디자인되어있는지를 출력해서 보여준다. 꼭 필요한 코드는 아니지만 내가 디자인 한 구조가 잘 반영되었는지 확인해볼 수 있기 때문에 유용한 코드다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/998C103A5B49313926&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_QHMGABbwL04x5VGYc_UWSA.png&quot; height=&quot;115&quot; style=&quot;text-align: center;&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 우리는 위와 같은 Discriminator를 만드는 코드를 살펴보았다! 파라메터 하나하나 분석하는 건 조금 귀찮은 일이었지만, 막상 다 살펴보고 나니 자신감이 생기는 것 같은 느낌적 느낌이다?!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Generator 정의 함수&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;지금부터 설명하는 코드는 Generator model을 만들어 주는 함수의 코드다.&lt;/div&gt;&lt;div&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E8E44D5B52201207&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_gvBT3h4JD7eUN0GexHwx2w.png&quot; height=&quot;114&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제는 이미지를 생성하는 generator에 대해 살펴보자! 입력단이 100차원의 노이즈인데, 각 element들은 -1에서 1 사이의 고르게 퍼져있는 랜덤값들이라고 한다. 진짜 노이즈다. 다만 -1부터 1 범위의 100차원 공간 상에 고루 퍼진 노이즈라서, 해당 100차원 공간상의 어떤 곳이든 출력되는 이미지가 손글씨처럼 나오도록 학습시키는 입력이라고 생각하면 되겠다. 근데, 100차원인 이유는 무엇일까... 뇌피셜에 의하면 VAE에서 손글씨를 학습할 때 latent space가 100차원 정도면 잘 학습이 되었나보지... ㅎㅎ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 다음 convolution의 반대&amp;nbsp;역할을 하는 구조가 보인다. 이미지의 해상도는 점점 올라가고, 깊이(채널?)는 점점 작아진다. discriptor를 뒤집어 놓은듯한 구조이면서도 차이점이 있다. 왜 그런지는 역시 논문을 보거나... 노하우(?)가 생겨야 알 수 있겠지. 그리고 원문에 보면 원래 DCGAN은&amp;nbsp;fractionally-strided convolution을 사용하는 것으로 제안되었는데, upsampling이라는 기법을 사용했다고 한다. 그러면 더 그럴듯한 손글씨가 나온다나... 이유야 뭐 지금 수준에서 알긴 어렵다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;자 이제 코드로 들어가보자. 앞서 대충 코드를 익혀두었으니 이제는 조금 더 수월하게 보드를 이해할 수 있으리라!&lt;/p&gt;&lt;pre name=&quot;cf56&quot; id=&quot;cf56&quot; class=&quot;graf graf--pre graf-after--figure&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 52px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G = Sequential()&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Sequential 방법으로 generator의 모델을 만들기로 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;57eb&quot; id=&quot;57eb&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;dropout = 0.4&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서도 dropout은 0.4다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;c7be&quot; id=&quot;c7be&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;depth = 64+64+64+64&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;으잉? depth가 64가 아닌 64가 4개 더해진 256? 아 뒤에 코드를 보니 깊이가 하나씩 바뀔 때마다 나누기를 하네...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;b2c3&quot; id=&quot;b2c3&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;dim = 7&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아마 이미지 정보를 만들 때 시작하는 해상도가 7x7인가보다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;32f5&quot; id=&quot;32f5&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Dense(dim*dim*depth, input_dim=100))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;입력 100&amp;nbsp;&lt;span style=&quot;font-size: small; color: rgb(34, 34, 34);&quot;&gt;→ 출력&amp;nbsp;&lt;/span&gt;&lt;font color=&quot;#222222&quot; size=&quot;2&quot;&gt;12,544(=&lt;/font&gt;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;7x7x256)이 되는 가장 기본적인 fully connected neural network을 만든다.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;c503&quot; id=&quot;c503&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(BatchNormalization(momentum=0.9))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;함수 이름부터 무섭게 생긴 녀석이 나타났다... 일단 관련 문서[10]를 찾아보자. 근데 뭐 개념을 이해하는데는 큰 도움이 안된다.&lt;/p&gt;&lt;p&gt;[10]&amp;nbsp;&lt;a href=&quot;https://keras.io/layers/normalization/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://keras.io/layers/normalization/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사실 batch normalization은 딥러닝을 공부한 사람이면 한 번 쯤 들어봤을 법도 한데, 실제 개념은 이 글 쓰면서 다시 공부했다. -ㅁ- 기본적인 개념은 [11]에서 이해할 수 있고, 좀 더 구체적인 수식설명까지 보려면 [12]를 보면 된다. 혹시 한국어로 듣고 싶다면 [13] 여기로! 개인적으로는 [11]과 [12]를 본 후에 [13]을 보기를 권장한다.&lt;/p&gt;&lt;p&gt;[11]&amp;nbsp;&lt;a href=&quot;https://youtu.be/nUUqwaxLnWs&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/nUUqwaxLnWs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[12]&amp;nbsp;&lt;a href=&quot;https://youtu.be/5qefnAek8OA&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/5qefnAek8OA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[13]&amp;nbsp;&lt;a href=&quot;https://youtu.be/TDx8iZHwFtM&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/TDx8iZHwFtM&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러나! 저 링크를 다 들어가서 보고 싶지 않을테니 (ㅋㅋ;) 요약을 하자면 (근데 각 영상이 15분 미만만 보면 되기 때문에 그리 부담이 되는 것은 아니다.), 입력 데이터의 분포가 학습시에 계속 바뀌면서 들어오게 되면, 중간 layer들에서는 값들이 생각 이상으로 많이 출렁이게 되기 때문에(internal covariate shift라고 부름), 샘플 묶음(batch)마다의 평균과 분산을 계산해서 업데이트하고 이를 이용해 데이터를 정규화시켜서 사용하겠다는 개념이다. 그러면 각 layer마다 출력되는 값들의 분포가 안정적으로 유지되기 때문에 학습시에 효율이 올라간다고 한다. 모평균(population mean)과 모분산(population vaiance)으로 정규화 시키지 않는 이유는 학습할 때 모든 데이터를 다 가져다가 계산해서 쓰기에는 시간이 너무 오래걸리기 때문일 것이다. 어쨌든 이 방법을 쓰면&amp;nbsp;weights 값들의 초기화가 그다지 필요 없고, 학습 속도에도 도움이 되며, overfitting도 어느정도 막아준다고 한다(이거는 batch를 사용하기 때문인 것도 있을듯).&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;자 이제 그러면 다시 코드로 돌아와서, momentum 저 녀석은 뭔지 살펴보자. 이건 찾아보니, 현재 batch에서 계산된 평균과 분산을 기존까지 계산해온 평균과 분산에 어떻게 업데이트 시키느냐를 의미하는 것이다. 평균을 예로 들면, (새평균) = (기존평균)*0.9 + (현재 batch의 평균)*(1-0.9) 이렇게 하겠다는 의미. 코드 상에서 0.9로 설정되어 있어서 예시 수식에도 0.9를 썼다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;cb34&quot; id=&quot;cb34&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Activation('relu'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Activation 함수로는 ReLU를 쓴다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;2924&quot; id=&quot;2924&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Reshape((dim, dim, depth)))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;앞서 출력은 12,544(=7x7x256) 길이의 1차원이었기 때문에, 이를 (7, 7, 256) shape으로 바꾸어준다. 더 정확하게는 batch를 고려해서 (None, 7, 7, 256)이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;44b1&quot; id=&quot;44b1&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Dropout(dropout))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;앞서 batch normalization을 하면 overfitting을 줄일 수 있다고 하던데... 여기에서 dropout을 또 추가한 건.... 아마도 개발자 마음이겠지...?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;b462&quot; id=&quot;b462&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(UpSampling2D())&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;UpSampling2D 함수는, 2차원 데이터를 두번씩 반복해서 해상도를 두 배 늘리는 함수다. 가로와 세로에 따라서 반복하는 횟수를 지정할 수도 있는데 기본 값은&amp;nbsp;두 배 씩 늘리는 것이다. data_format의 기본값은 channel_last. 결론적으로 이 함수를 통해 얻어지는 출력은 (None, 14, 14, 256)이 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;8e59&quot; id=&quot;8e59&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Conv2DTranspose(int(depth/2), 5, padding='same'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Conv2DTranspose는 직관적으로는 convolution이 하는 역할의 반대라고 생각하면 된다. 근데 실제 계산 과정은 뭔가 조금 다르다. 정상적인 방향의 convolution에서 filter가 한 번 계산될 때, 여러개 input 데이터가 filter와 곱해져서 하나의 output 데이터를 만든다. 반면 이를 역으로 생각한다면, 하나의 데이터로 여러 개의 데이터를 만들어야 하고, 그에 해당하는 여러 개의 데이터는 또 다른 데이터로부터 구해지는 것들과 병합돼야 한다. 이게 말로 설명하기 너무 어려운데, 기본 convolution은 many to one&amp;nbsp;계산의 반복이었다면, deconvolution은 many to many의 계산이 이루어져야 한다. 개념을 돕기 위해 영상[14]을 하나 첨부한다. 사실 근데 영상을 봐도 나는 잘 이해를 못했다. ㅋㅋ; zero padding 후에 일반 convolution 하듯이 deconvolution 하는 영상[15]도 있어서 가져와 본다. 다만 다중 channel일 때는 일반 convolution에서의 다중 channel을 다루는 것과는 다를 것이다.&lt;/p&gt;&lt;p&gt;[14] &lt;a href=&quot;https://youtu.be/8DiqJj5tPlA&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/8DiqJj5tPlA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[15] &lt;a href=&quot;https://youtu.be/uOKvea5pATM&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/uOKvea5pATM&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;입력 파라미터는 출력될 channel의 수, filter의 크기, padding의 종류가 표시되어 있다. 개념적으로 정의되어 사용되는 것들은 Conv2D와 크게 다른 건 없다. (deconvolution 알고리즘은 위에서 말했듯이 좀 다르겠지만) 그리고 한가지 더 봐야할 점은 strider를 따로 지정하지 않았는데 default 값이 1이다. 그래서 입력과 출력의 dimension이 같게 된다. 앞서 UpSampling2D로 차원을 뿔려놨으니, 여기서 출력도 뿔려진 상태로 유지가 된다. 다만 channel은 절반이 된다. 출력의 shape은&amp;nbsp;(None, 14, 14, 128)이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;530b&quot; id=&quot;530b&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(BatchNormalization(momentum=0.9))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서도 batch normalization을 붙여 준다. 아무래도 차원을 뻥튀기 하는 구조다보니 batch normalization이 유용하게 사용되나보다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;efb9&quot; id=&quot;efb9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;padding-top: 4px; background: rgba(0, 0, 0, 0.05); overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Activation('relu'))&lt;/pre&gt;&lt;pre name=&quot;9388&quot; id=&quot;9388&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;padding-top: 4px; background: rgba(0, 0, 0, 0.05); overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(UpSampling2D())&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;함수 설명은 중복이므로 최종 출력의 shape만 언급하고 넘어가겠다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;(None, 14, 14, 128)&amp;nbsp;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;→&amp;nbsp;&lt;/span&gt;(None, 28, 28, 128)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;efb9&quot; id=&quot;efb9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;padding-top: 4px; background: rgba(0, 0, 0, 0.05); overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Conv2DTranspose(int(depth/4), 5, padding='same'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;(None, 28, 28, 128)&amp;nbsp;&lt;span style=&quot;color: rgb(34, 34, 34); font-size: small;&quot;&gt;→&lt;/span&gt;&amp;nbsp;(None, 28, 28, 64)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;efb9&quot; id=&quot;efb9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(BatchNormalization(momentum=0.9))&lt;/pre&gt;&lt;pre name=&quot;0bb9&quot; id=&quot;0bb9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Activation('relu'))&lt;/pre&gt;&lt;pre name=&quot;2c8d&quot; id=&quot;2c8d&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Conv2DTranspose(int(depth/8), 5, padding='same'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;(None, 28, 28, 64)&amp;nbsp;&lt;span style=&quot;font-size: small; color: rgb(34, 34, 34);&quot;&gt;→&lt;/span&gt;&amp;nbsp;(None, 28, 28, 32)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;1bce&quot; id=&quot;1bce&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;padding-top: 4px; background: rgba(0, 0, 0, 0.05); overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(BatchNormalization(momentum=0.9))&lt;/pre&gt;&lt;pre name=&quot;c4e6&quot; id=&quot;c4e6&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;padding-top: 4px; background: rgba(0, 0, 0, 0.05); overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Activation('relu'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;65a3&quot; id=&quot;65a3&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Conv2DTranspose(1, 5, padding='same'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;드디어 마지막 단계까지 왔다. 이 과정을 거치면 28x28x1의 데이터가 얻어진다. 한 장의 이미지가 생성된 것이다. 다만 아직 데이터 값의 범위가 실수 값의 범위이다.&lt;/p&gt;&lt;p&gt;(None, 28, 28, 32)&amp;nbsp;&lt;span style=&quot;font-size: small; color: rgb(34, 34, 34);&quot;&gt;→&lt;/span&gt;&amp;nbsp;(None, 28, 28, 1)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;0a25&quot; id=&quot;0a25&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.G.add(Activation('sigmoid'))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;sigmoid 함수를 이용해서, 이제 각 픽셀값이 0에서 1의 값을 갖는 28x28의 이미지가 나왔다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E8E44D5B52201207&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_gvBT3h4JD7eUN0GexHwx2w.png&quot; height=&quot;114&quot; style=&quot;text-align: center;&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 discriminator와 generator의 modeling을 위한 함수 정의가 완료되었다. 이제는 각 모델을 불러와서 optimer와 loss function등을 정의하여 compile하고, 학습시키는 일이 남았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Discriminator Model 생성&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre name=&quot;f0f2&quot; id=&quot;f0f2&quot; class=&quot;graf graf--pre graf-after--p&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 43px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;optimizer = RMSprop(lr=0.0008, clipvalue=1.0, decay=6e-8)&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;코드만 보고 1차원적으로 생각했을 때는, optimizer를 RMSprop이라는 녀석으로 설정하는 코드다. 사실 좀 고민이 된다. optimizer의 깊은(?) 의미까지 다 들여다보아야 할까. 사실 어느 정도는 이해를 하고 있어야 내가 풀고자 하는 문제에서 어떤 optimizer가 적절한지를 선택할 수는 있을텐데... 일단, 간단하게라도 알아보고 가자. Optimizer는&amp;nbsp;우리가 모델링한 network의 weights 들이 어떤 값이 되어야만, 가장 최적화된 성능을 가지는지를 찾아주는 방법론이다. 가장 많이 들어봤을 방법으로는 gradient descent optimization[16]이 있다. 현재 weights 들을 조금씩 바뀌게 해서&amp;nbsp;어떻게 weights가 바뀔 때 목적한 성능에 더 가까워지느냐(혹은 loss function이 작아지느냐)를 미분 계산을 통해 찾아가는 방법으로, 몇몇 가정(assumption)들이 필요하기는 하지만, 어지간히 잘 동작하는 방법이다. 여기에도 몇몇 트릭들을 더 추가해서 여러 방법들이 존재할텐데, 사실 내가 그 정도까지 다 알고있지는 못하고, 예제 코드를 따라가는 수준에서 다 알 수는 없을 것 같다. 그래도 궁금하다면 [17]을 참고하면 좋을듯. (사실 나도 안 읽어봤다. 검색하다 찾은 글인데 그림이 직관적으로 잘 그려져 있기에... ㅎㅎ) 내가 다른 예제 코드에서 본 방법 중에는 Adam이라는 방법이 많이 보였었다. Keras에서 사용할 수 있는 다른 여러 optimizer들은 [18]에서 확인해볼 수 있다.&lt;/p&gt;&lt;p&gt;[16]&amp;nbsp;&lt;a href=&quot;http://ruder.io/optimizing-gradient-descent/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://ruder.io/optimizing-gradient-descent/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[17]&amp;nbsp;&lt;a href=&quot;http://ruder.io/deep-learning-optimization-2017/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://ruder.io/deep-learning-optimization-2017/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[18]&amp;nbsp;&lt;a href=&quot;https://keras.io/optimizers/#usage-of-optimizers&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://keras.io/optimizers/#usage-of-optimizers&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;다시 코드로 돌아와서, 본 예제에서는 RMSprop이라는 함수로 realistic한 이미지를 만들어내는 데에는 좋은 성능을 갖기 때문에 채용했다고 본문에서는 밝히고 있다. 참고로 RNN학습에도 좋은 성능을 보인다고 한다. 방법론은 [19]에서 발표자료로 설명해두었으니 참고해보자. 함수 파라미터로 lr은 learning rate에 해당하는 값으로 0.0008이라는 꽤나 작은 값을 사용했는데, 이 값은 아마도 이 예제 코드를 만든 사람들이 휴리스틱하게 찾은 값일테다. learning rate가 너무 크면 optimizer가 최적의 값을 찾지 못하고 이리 저리 방황하는 성능을 보이게 될테고, 너무 작으면 학습이 전혀 느리게 되는 단점이 있다. 우리가 앞서 디자인한 discriminator의 구조는 꽤나 복잡하기 때문에 이정도 작은 값은 써야 optimizer가 괜찮은 성능을 내는가보다. clipvalue는 gradients들의 절대 값이 여기서 설정한 값들보다 클 때 잘리도록(clipped) 하는 값이라고 한다. 그런데! 이게 Keras가 최신버젼으로 업데이트 되면서부터 이 값은 입력 파라미터 값이 더이상 아니다. ㅎㅎ 그래서 그냥 넘어가도록 하자. 실제 예제 코드에서도 clipvalue가 빠진 채로 함수가 불러지고있다. decay 값은 학습이 진행되면서 learning rate를 줄여나가는 비율이다. 앞서 learning rate가 클 수록 optimizer가 방황한다고 표현을 해놨는데, learning rate가 작다고 하더라도 마지막 정말 정확한 최적값을 찾고자 한다면 learning rate가 학습이 진행될 때마다 더 작아지게 하는 것도 방법 중 하나다.&lt;/p&gt;&lt;p&gt;[19]&amp;nbsp;&lt;a href=&quot;http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위에서 실컷 설명 파라미터를 설명했는데, 최신 버젼 소스코드를 보면 파라미터 값이 좀 다르게 아래와 같이 구현되어 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;optimizer &lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt; RMSprop(&lt;/span&gt;&lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;0.0001&lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;decay&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;3e-8&lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;9a8f&quot; id=&quot;9a8f&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.DM = Sequential()&lt;/pre&gt;&lt;pre name=&quot;7fcd&quot; id=&quot;7fcd&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.DM.add(self.discriminator())&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 DCGAN 클래스에 DM이라는 이름의 discriminator model을 앞서 설명한 discriminator 함수로 만들어 줬다. 근데 D를 그냥 써도 되는데 왜 또 DM이라는 모델을 또 정의해서 거기에 D를 집어 넣어서 쓰는 걸까. 그건 discriminator만 학습 시킬 때와 generator와 함께 붙어서 학습될 때 각각 다른 compilation을 필요로 하기 때문일 것이다. 그래서 DM을 따로 정의해 compile을 하고, 뒤에서 보면 AM을 따로 정의해서 또 다른 compile을 넣어 놓는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;dce8&quot; id=&quot;dce8&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;p&gt;self.DM.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=['accuracy'])&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 discriminator model을 어떻게 학습시킬지 설정해주자. loss는 loss function을 무엇을 쓸 지를 설정해주는 것으로 여기서는 cross entropy를 사용했다. discriminator model은 목표값과 유사한 값을 출력하도록&amp;nbsp;학습시키는 것이 아니고, 맞냐/아니냐(0 또는 1)의 값을 확실하게 이야기해주도록 학습시키기 때문에 cross entropy를 쓰는 것이 유리하다. cross entropy와 mse의 차이점이 궁금하다면, 아래 영상[20]의 29분 30초경부터의 설명을 보면 좋다. optimizer는 앞서 설명한 RMSprop를 사용하고, metrics은 학습시 한 epoch이 끝날 때마다 training set과 validation set(주어진 경우)에 대해 그 결과를 확인해볼 수 있게 어떤 걸 기록할지 알려주는 것이다. 여기서는 정확도를 확인해볼 수 있는 가장 기본적인 'accuracy'를 썼다. metrics 설정은 학습에 영향을 주는 것은 아니고 성능을 평가하기 위한 것으로만 사용된다. 참고 설명 [21]&lt;/p&gt;&lt;p&gt;[20]&amp;nbsp;&lt;a href=&quot;https://youtu.be/o_peo6U7IRM?t=29m35s&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://youtu.be/o_peo6U7IRM?t=29m35s&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[21]&amp;nbsp;&lt;a href=&quot;https://machinelearningmastery.com/custom-metrics-deep-learning-keras-python/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://machinelearningmastery.com/custom-metrics-deep-learning-keras-python/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Adversarial Model 생성&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 generator와 discriminator가 어떻게 아래 그림과 같이 엮여서 동작하게 할지를 구현해보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/999E80505B56346929&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_PIpd1jHbPc2QrTOPhvxoaw.png&quot; height=&quot;135&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Generator와 discriminator도 회상해볼 겸 다시 살펴보자.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E8E44D5B52201207&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_gvBT3h4JD7eUN0GexHwx2w.png&quot; height=&quot;114&quot; style=&quot;text-align: center;&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/998C103A5B49313926&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_QHMGABbwL04x5VGYc_UWSA.png&quot; height=&quot;115&quot; style=&quot;text-align: center;&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;기본적으로 generator에서 생성되는 모든&amp;nbsp;이미지는 noise로부터 생긴 이미지이 때문에&amp;nbsp;가짜 이미지다. discriminator는 가짜인지를 밝혀내는 역할을 하니, 이 adversarial model에 있는 discriminator가 가짜이미지를 걸러내지 못할 수록 generator가 이미지를 잘 만들고 있다는 이야기가 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위 구조는 아래와 같은 코드로 구성되고, discriminator model을 만들 때와 learning rate과 decay 값이 좀 다를 뿐 구현 과정은 동일하다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;c9fb&quot; id=&quot;c9fb&quot; class=&quot;graf graf--pre graf-after--figure&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 52px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;optimizer = RMSprop(lr=0.0004, clipvalue=1.0, decay=3e-8)&lt;/pre&gt;&lt;pre name=&quot;e2b1&quot; id=&quot;e2b1&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.AM = Sequential()&lt;/pre&gt;&lt;pre name=&quot;e74a&quot; id=&quot;e74a&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.AM.add(self.generator())&lt;/pre&gt;&lt;pre name=&quot;c8ff&quot; id=&quot;c8ff&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.AM.add(self.discriminator())&lt;/pre&gt;&lt;pre name=&quot;c292&quot; id=&quot;c292&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;&lt;p&gt;self.AM.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=['accuracy'])&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아 참고로 여기서도 최신 코드에는 RMSprop를 위 예제가 아니라 아래와 같이 쓰고 있다. Adverarial model은 DCGAN 클래스에서 AM이라는 이름을 갖는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;optimizer &lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt; RMSprop(&lt;/span&gt;&lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;0.0001&lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;decay&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;3e-8&lt;/span&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;근데 난 여기서 한가지 궁금한 점이 생겼다. DM에도 discriminator가 학습되고 있고, AM에서도 disriminator가 들어가있는데, 그러면 한 discriminator에 optimizer가 두번 쓰이는 거고, 학습시에 충돌이 생기지 않을까?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;역시나, 원글에서 그 다음 내용을 읽으니 추가 설명이 있었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;b&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;Training 방법&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:510px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9961D93B5B5654581B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1_N3nT9AXVnsFBta2R1eEMjg.png&quot; height=&quot;347&quot; style=&quot;text-align: center;&quot; width=&quot;510&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;학습 부분이 가장 어려운 파트라고 한다. 일단 discriminator model(DM)이 진짜 이미지와 가짜 이미지를 구별할 수 있도록 먼저 학습시킨다. 위 이미지에서 generator에서 나오는 이미지에 label을 0이라고(가짜 이미지라고) 알려준 상태로 학습을 시키는 것이다. 그러니깐 아직은 generator를 학습시키는 게 아니고 discriminator만 학습시키는 거다. 그리고 나중에 DM과 AM을 번갈아가면서 학습을 시킨다고 한다. 그니깐 DM과 AM이 동시에 학습되는 게 아니었다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;학습을 어떤 식으로 시키는지 코드를 보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;54dd&quot; id=&quot;54dd&quot; class=&quot;graf graf--pre graf-after--figure&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 52px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;images_train = self.x_train[np.random.randint(0,&lt;/pre&gt;&lt;pre name=&quot;7300&quot; id=&quot;7300&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;self.x_train.shape[0], size=batch_size), :, :, :]&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;코드가 조금 복잡하다. 조금 들여다보면, x_train은 DCGAN 클래스에서 이미 MNIST 데이터를 불러온 애들이다. 데이터를 불러오는 코드를 보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;from tensorflow.examples.tutorials.mnist import input_data&lt;/p&gt;&lt;p&gt;(중략)&lt;/p&gt;&lt;p&gt;self.x_train = input_data.read_data_sets(&quot;mnist&quot;, one_hot=True).train.images&lt;/p&gt;&lt;p&gt;self.x_train = self.x_train.reshape(-1, self.img_rows, self.img_cols, 1).astype(np.float32)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;x_train은 텐서플로우에서 기본으로 제공하는 MINIST 데이터에서 training 이미지에 해당하는 데이터를 불러와서 (-1, 이미지의 세로크기, 이미지의 가로크기, 채널수)의 형태로 reshape된 녀석들이다. -1은&amp;nbsp;전체 데이터 갯수에 맞춰서 이미지의 세로크기, 가로크기, 채널 수가 결정되면 자동으로 유추될 수 있는 총 이미지의 갯수라고 생각하면 된다. 예를 들어 1,000 길이의 data가 있었고, 이미지의 크기가 10x10이라면, (-1, 10, 10, 1)로 reshape하면 -1에 해당하는 값은 10이라고 생각하면 되고, 이는 총 이미지의 개수와 같다. 이걸 일반화 시키기 위해 -1이라고 한 것.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 이 x_train 데이터의 순서를 섞기 위해 numpy의 함수인 random.randint()를 썼다. random.randint() 함수는 중복된 index도 만들어낸다는 점이 있어서 한 데이터가 여러번 학습에 사용될 수도 있다. 여튼 randint() 함수의 첫 파라미터는 생성할 숫자의 최소값, 그 다음 파라미터는 최대값(이지만 포함하지 않는), 생성할 갯수(size)의 의미를 갖는다. 그러므로 현재 x_train에 들어있는 데이터 중에서&amp;nbsp;batch_size 갯수만큼을 임의로 뽑아서 하나의 images_train batch를 만들겠다는 의미다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;사실 이 코드는 keras도 아니고 numpy와 기본 python array 관련 코드인데 괜히 설명이 길어졌다;; 그래도 쌩초보인 나로서는 일일이 다 공부해서 확인해보는 수밖에...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;2da9&quot; id=&quot;2da9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;noise = np.random.uniform(-1.0, 1.0, size=[batch_size, 100])&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 노이즈를 만들 차례. -1부터 1 사이에 고르게 분포된 100차원의 랜덤 값을 batch_size 갯수만큼 만드는 코드다. noise 변수의 shape은 (batch_size, 100)이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;01e9&quot; id=&quot;01e9&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;images_fake = self.generator.predict(noise)&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;우선 generator에 noise를 넣어서 만들어진 이미지는 생성된 가짜 이미지이므로 images_fake라고 이름을 지정해 놓는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;d50d&quot; id=&quot;d50d&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;x = np.concatenate((images_train, images_fake))&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;concatenate는 말 그대로 두 데이터를 잇는다는 내용이다. 위 코드를 통해 x에는 MNIST 데이터로부터 읽어온 진짜 손글씨 이미지와, generator로부터 만들어진 가짜 손글씨 이미지가 모두 포함되게 된다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre name=&quot;1920&quot; id=&quot;1920&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;y = np.ones([2*batch_size, 1])&lt;/pre&gt;&lt;pre name=&quot;6dae&quot; id=&quot;6dae&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;y[batch_size:, :] = 0&lt;/pre&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;label로 사용될 y의 전반부에는 진짜 이미지 갯수만큼 0으로, 후반부는 (즉, 가짜 이미지 갯수만큼은) 1로 설정해놓는다. 우리는 앞서 코드에서 진자 이미지 갯수와 가짜 이미지 갯수가 모두 batch_size였으므로 y의 길이는 총 2*batch_size가 된다. 위 코드는 일단 2*batch_size 길이 만큼 1로 가득찬 y를 만들고, 전반부 batch-size 갯수만큼을 0으로 다시 덮어 씌운 코드다. 두번째 줄에서 batch_size 뒤에 :이 더 붙은 것은 처음 인덱스부터 batch_size갯수만큼의 모든 element를 가리키는 의미다. :가 없으면 batch_size 번째의 element만 0이 되어 의도와 다르게 된다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;white-space: pre-wrap;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre name=&quot;851f&quot; id=&quot;851f&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;d_loss = self.discriminator.train_on_batch(x, y)&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 우리가 만든 x와 y로 discriminator를 학습시키고, 출력 loss 값을 d_loss로 받아오는 코드다. 보통 하나의 모델을 여러번의 epoch을 통해 학습시키는 게 일반적이었지만, 여기서는 한 번에 한 batch 만을 통과 시켜서 학습시키는 모양이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;2dbd&quot; id=&quot;2dbd&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;y = np.ones([batch_size, 1])&lt;/pre&gt;&lt;pre name=&quot;86bd&quot; id=&quot;86bd&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;noise = np.random.uniform(-1.0, 1.0, size=[batch_size, 100])&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이번에는 AM을 학습시키기 위한 입력과 출력을 만든다. 입력은 모두 noise고, 따라서 y는 모두 가짜라고 이야기하도록 1로 세팅한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre name=&quot;702b&quot; id=&quot;702b&quot; class=&quot;graf graf--pre graf-after--pre&quot; style=&quot;overflow: auto; font-family: Menlo, Monaco, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 16px; margin-top: 0px; margin-bottom: 0px; background: rgba(0, 0, 0, 0.05); padding-top: 4px; white-space: pre-wrap; color: rgba(0, 0, 0, 0.84);&quot;&gt;a_loss = self.adversarial.train_on_batch(noise, y)&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그리고 AM을 noise와 y로 한 번 업데이트 시킨다. 출력 loss 값은 a_loss 로받아온다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 구현된&amp;nbsp;training 과정(discriminator model과 adversarial model을 번갈아 가며 학습시키는 과정)을 계속 반복한다. 원글에 의하면 1000번 이상 반복하면 꽤 괜찮은 결과가 나온다고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;코드 분석 끝!&lt;/p&gt;</description>
<category>연구관련</category>
<author>이원형</author>
<guid>https://leestation.tistory.com/776</guid>
<comments>https://leestation.tistory.com/776#entry776comment</comments>
<pubDate>Sat, 14 Jul 2018 08:34:15 +0900</pubDate>
</item>
<item>
<title>[요약 번역] 케라스(Keras)로 구현하는 오토인코더(AutoEncoder)</title>
<link>https://leestation.tistory.com/775</link>
<description>&lt;p&gt;오토인코더를 비롯하여 여러 변형들의 구현과 간략 설명이 있는 케라스 블로그 글을 읽는 중에 공부도할 겸 그 내용을 아주 간략하게 한글로 요약해보았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.keras.io/building-autoencoders-in-keras.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://blog.keras.io/building-autoencoders-in-keras.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;예제 코드는 다음의 모델들을 포함하고 있다.&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;흔히 보는 CNN을 사용하는 autoencoder가 아니라 걍 fully-connected layer&lt;/li&gt;&lt;li&gt;Sparse autoencoder&lt;/li&gt;&lt;li&gt;Deep fully-connected autoencoder&lt;/li&gt;&lt;li&gt;CNN을 사용한 autoencoder&lt;/li&gt;&lt;li&gt;이미지에서 노이즈 제거하는 모델&lt;/li&gt;&lt;li&gt;Sequence-to-sequence autoencoder&lt;/li&gt;&lt;li&gt;VAE (variational autoencoder)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;*다시 한 번 이야기하지만 이 글은 요약을 한 것이지, 전체 번역은 아니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;Autoencoder는 무엇인가?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;데이터를 압축하고 다시 압축을 푸는 알고리즘이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;특징으로는 1) 데이타 맞춤적(data-specific)이다. 2) 무손실 압축 형태가 아니다. 3) 데이터로부터 자동적으로 학습된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;데이터 압축에 좋은 방법인가?&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;딱히 그렇지는 않다. 기존 압축 방법인 JPEG나 MP3 같은 것보다 효율적이지 않다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;그럼 뭐가 좋은데?&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;딱 맞는 분야를 찾아가는 중이다. 일단 데이터의 노이즈를 제거하는데 좋고, 데이터의 시각화를 위한 차원 축소(dimensionality reduction)에 좋다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;근데 왜 이렇게 난리냐?&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;일단 비지도학습(unsupervised learning)으로 학습이 된다는 게 매력적이다. 아주 엄밀하게는 self-supervised 학습이라고 하는 것이 맞겠다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;가장 간단한 fully-connected layer 버젼의 autoencoder&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;코드는 홈페이지에서 참고하자.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;학습을 시켜보면 loss 값이 0.1 근처에 머무는 걸 볼 수 있다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;압축된 정보에 희박함(sparsity) 조건 추가하기&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;앞서 예제는 hidden layer의 크기(앞 예제에서는 32차원으로 설정)만이 학습 조건이었다. 근데 이건 사실 PCA(principal component analysis)랑 크게 다를 것이 없다. 그래서 조금 더 효율적인 압축을 위해서 희박함(sparsity)이라는 추가 조건을 더해주는 방법을 추가한다.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원문 홈페이지 코드 참고.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;regularization을 추가하여 학습시키는 건데 overfit을 줄일 수 있다고 한다. 근데 결과를 보면 성능이 뭐 딱히 더 좋아졌는지 티가 나지는 않는다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;Deep fully-connected autoencoder&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;앞서 예제는 단일 layer를 갖는 encoder와 decoder로 구현된 것이었고, layer를 몇 개 더 추가해보자.&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;원문 홈페이지 코드 참고.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;약간 더 좋아졌다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;CNN을 사용한 autoencoder&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;MNIST 데이터는 손글씨 이미지이기 때문에 CNN을 쓰는 게 더 적합해보인다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;세번의 2D convolution 세번의 MaxPooling으로 총 128차원의 정보로 데이터를 압축시켰다가, 다시 이미지를 복원하는 코드로 구성되어 있다. 원문 코드 참고.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;참고로, 모델을 학습시키기 전에, 학습 과정의 결과들을 시각화하기 위해 TensorBoard를 사용한다. 터미널 창을 하나 켜고 아래 명령을 실행시키고 학습을 시작하면, /tmp/autoencoder 폴더에 값들이 기록된다.&lt;/p&gt;&lt;p&gt;&quot;tensorboard --logdir=/tmp/autoencoder&quot;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;결과를 보면 확실히 좋아졌다. 앞서서는 압축한 데이터가 32차원의 데이터였는데, 여기서는 128차원(8x4x4)의 데이터이기 때문에 loss 값이 큰 차이 없어 보여도 성능은 좋아진 것이라고 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;*visualization code에 오타가 있다. for loop 안에 suplot에 쓰이는 i가 i+1이어야 한다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;이미지에서 노이즈 제거하는 모델&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;MNIST 데이터에 가우시안 노이즈를 섞어서 노이즈가 있는 이미지 데이터를 만든다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 데이터를 학습하는 autoencoder는 약간 다른 구조를 썼다. 두번의 2D convolution과 두번의 MaxPooling으로&amp;nbsp;1,568차원(7x7x32)으로 정보를 압축시켰다가 이미지를 복원함. (아마도 노이즈가 포함되서 그런지 압축차원을 이전 모델이 갖던 128차원보다 더 크게 설정한듯 하다. 이건 뭐 개발자의 느낌적 느낌인 건가)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;Sequence-to-sequence autoencoder&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;이번에는 이미지가 아닌 시퀀스 데이터에 대한 학습. LSTM과 같은 구조를 이용하여서 입력 시퀀스를 하나의 벡터로 만들고, 이를 다시 LSTM decoder에 n번 입력해서 원하는 길이(n)의 출력을 얻는 방법이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아닛?! 근데 여기서는 그냥 어떻게 코딩이 이루어질 수 있는지 예제 코드만 있다. 코드는 간단하긴 한데, 아무런 입력 데이터 예제 없이 그냥 코드만 보여주다니. ㅠㅠ&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;VAE (variational autoencoder)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;대망의 VAE&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Autoencoder랑 다른 점이 뭐냐하면, autoencoder는 latent vector를 찾아주는 반면에, VAE는 latent variable(평균과 표준편차)을 찾아준다. 이렇게 하면 latent 공간 상에서 데이터가 어떠한 분포를 갖고있는지 알 수 있고 이 분포로부터 얻어진 샘플로 decoder를 통해 입력을 다시 생성해낼 수 있다. (이게 꽤나 유용하다) 그래서 VAE가 '생성 모델(generative model)'이다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;VAE가 어떻게 동작하는가?&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;먼저, encoder는 입력 x를 받아와 latent 공간 상에서 어떤 평균과 표준편차를 갖는지 출력하는 역할을 한다. 그리고 이 평균과 표준편차로 decoder에 넘겨줄 z를 만든다. z = 평균 + 표준편차 x&amp;nbsp;랜덤값(0~1사이) 마지막으로 decoder는 x와 동일한 이미지를 만든다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;평균과 표준편차들은 두개의 loss function으로 학습된다. 하나는 재생성 loss function으로 기존 autoencoder에서 decoder가 입력과 동일한 데이터를 재생성하도록&amp;nbsp;학습시키는 것이다. 다른 하나는 학습된 latent 분포와 기존 분포 사이의 KL divergence를 계산하는 것으로 regularization처럼 동작한다. KL divergence는 사실 더 좋은 학습을 위한 것이라서 없어도 된다. (앞서 sparsity 조건을 추가할 때도 regularization에 대한 언급이 있었다.)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;전체 코드는 Github 링크로 되어있고, 각 단계별 코드 설명이 되어있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;먼저 입력을 어떻게 latent 공간의 변수로 매핑시키는지를 보자.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;*여기부터는 코드 해석을 조금 더 추가해보았다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;x를 h라는 중간 레이어를 통과하게 하고, h로부터 latent 공간(z)의 평균값과, 표준편차를 얻을 수 있는 구조다. z의 차원수 만큼 평균과 표준편차가 존재하게 된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그 다음 정의된 sampling이라는 함수는, z 공간상의 평균과 표준편차를 파라미터로 받아서 decoder로 넘겨줄 z 값을 만들어준다.&amp;nbsp; z = 평균 + 표준편차 x&amp;nbsp;랜덤값(0~1사이) 입력은 하나의 값이 아니라 batch_size의 길이만큼 들어오기 때문에 함수 중간에 랜덤값(epsilon) 생성시에도 shape 설정을 길이에 맞게 해주었다. Lambda 함수는 keras에서 정의된 함수로 수식과 같은 임의의 함수를 layer 형태로 변환시켜주는 함수다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이제 decoder_h layer를 이용해 z로부터 intermediate_dim 차원의 중간 vector인 h_decoded를 얻고, 이를 다시 decoder_mean layer를 통해 원본 데이타 크기의 출력을 만든다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여기서 VAE전체, encoder만 따로, decoder(generator)만 따로 분리해서 정의해둔다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Loss function은 VAE 전체 모델의 입출력이 같아지도록 하는 xent_loss와 KL divergence regularization을 이용하는 kl_loss의 합으로 정의된다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;본 예제 코드에서는 latent space를 2차원으로 설정했기 때문에, encoded된 입력들이 어떻게 분포되어 있는지를 그림으로 쉽게 나타낼 수 있다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;자 이제 기존에 학습된 입력이 아니더라도 우리는 데이터의 분포를 알 수 있기 때문에 새로운 출력을 생성해낼 수도 있다!&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2차원 공간상에서 값들을 상하좌우로 옮겨가며 interpolated 된 z들을 decoder(generator)에 입력으로 넣어 얻은 출력들을 원문에서 볼 수 있다. 여기에 epsilon_std라는 변수가 어떤 값인지 안 정해지고 사용되었는데, 아마 시험적으로 출력이 가장 변화무쌍하게 보일 수 있는 값을 찾은 게 아닌가 싶다. 아! 예제코드를 직접 가서 보니 -4에서 4 범위 내로 되어있다. 그렇다면 설명문에 적힌 epsilon_std는 4/15 였는듯. 뭐 어차피 그냥 예제코드대로 돌릴 거면 큰 상관 없을듯.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;덧)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;VAE가 CNN이 아니고 fully connected leyer로 구현된 예제이기 때문에 CNN을 썼을 때는 어떨지 궁금하다. 근데 CNN 안써도 결과가 괜찮네.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;덧2)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;예제 코드를 혹시나 Windows에서 돌린다면 GraphViz가 제대로 동작하지 않을 수 있다. 나는 그냥 plot_model이 들어간 line들을 다 주석처리하고 돌렸다.&lt;/p&gt;</description>
<category>연구관련</category>
<author>이원형</author>
<guid>https://leestation.tistory.com/775</guid>
<comments>https://leestation.tistory.com/775#entry775comment</comments>
<pubDate>Wed, 11 Jul 2018 07:25:27 +0900</pubDate>
</item>
<item>
<title>Keras 참고자료</title>
<link>https://leestation.tistory.com/774</link>
<description>&lt;div&gt;(tensorflow&amp;nbsp;backend)&lt;/div&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;설치&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;pip install keras&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;import&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;import tensorflow as tf&lt;/p&gt;&lt;p&gt;import keras&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;버젼 확인&lt;/p&gt;&lt;p&gt;tf.__version__&lt;/p&gt;&lt;p&gt;keras.__version__&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;추가로 함께 import 하면 좋은 것들&lt;/p&gt;&lt;p&gt;import numpy as np&lt;/p&gt;&lt;p&gt;import matplotlib.pyplot as plt&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;공부자료&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;모델링 방법 Sequential API, Functional API&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://leestation.tistory.com/777&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://leestation.tistory.com/777&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;간단한 NN&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://pinkwink.kr/1119?category=580892&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://pinkwink.kr/1119?category=580892&lt;/a&gt; (타이타닉 생존)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;CNN&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://pinkwink.kr/1121&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://pinkwink.kr/1121&lt;/a&gt; (MNIST)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;학습된 모델 불러오기&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://pinkwink.kr/1122&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://pinkwink.kr/1122&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;RNN&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://datascienceschool.net/view-notebook/1d93b9dc6c624fbaa6af2ce9290e2479/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://datascienceschool.net/view-notebook/1d93b9dc6c624fbaa6af2ce9290e2479/&lt;/a&gt; (싸인 그래프 예측)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;LSTM&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://tykimos.github.io/2017/04/09/RNN_Layer_Talk/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://tykimos.github.io/2017/04/09/RNN_Layer_Talk/&lt;/a&gt; (나비야 노래)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;AutoEncoder&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.keras.io/building-autoencoders-in-keras.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://blog.keras.io/building-autoencoders-in-keras.html&lt;/a&gt; (기본 AE부터 VAE까지)&lt;/p&gt;&lt;p&gt;위 글 요약번역&amp;nbsp;&lt;a href=&quot;http://leestation.tistory.com/775&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://leestation.tistory.com/775&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://d2.naver.com/news/0956269&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://d2.naver.com/news/0956269&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://lilianweng.github.io/lil-log/2018/08/12/from-autoencoder-to-beta-vae.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://lilianweng.github.io/lil-log/2018/08/12/from-autoencoder-to-beta-vae.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;GAN&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://leestation.tistory.com/776&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://leestation.tistory.com/776&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;미리 구현된 함수형태 코드&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Machine-Learning-Tokyo/DL-workshop-series/blob/master/ConvNets.ipynb?fbclid=IwAR3BASdXssKc-CHuqMHx39DYfwnDZP6wUDqhyOdHXgoRQFZ5r4-NVgytOE8&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/Machine-Learning-Tokyo/DL-workshop-series/blob/master/ConvNets.ipynb?fbclid=IwAR3BASdXssKc-CHuqMHx39DYfwnDZP6wUDqhyOdHXgoRQFZ5r4-NVgytOE8&lt;/a&gt;&lt;/p&gt;</description>
<category>연구관련</category>
<author>이원형</author>
<guid>https://leestation.tistory.com/774</guid>
<comments>https://leestation.tistory.com/774#entry774comment</comments>
<pubDate>Tue, 10 Jul 2018 01:44:14 +0900</pubDate>
</item>
<item>
<title>[번역] 진정한 쌍방향 상호작용(Interactivity)은 인공지능(AI)을 필요로 한다</title>
<link>https://leestation.tistory.com/773</link>
<description>&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;진정한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt;&amp;nbsp;쌍방향&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;상호작용&lt;/span&gt;(Interactivity)&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;인공지능&lt;/span&gt;(AI)&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;필요로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;한다*&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;*본&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;글은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;Stephane Bura&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;쓴&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;글&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&quot;True Interactivity Requires Artificial Intelligence”&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;번역한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것입니다&lt;/span&gt;.&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;원글&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;출처&lt;/span&gt;: &lt;a href=&quot;https://becominghuman.ai/true-interactivity-requires-artificial-intelligence-7f37ddd45e62&quot;&gt;https://becominghuman.ai/true-interactivity-requires-artificial-intelligence-7f37ddd45e62&lt;/a&gt;
&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;머지&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;않은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;미래에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;사람의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;뇌와&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;매우&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;긴밀하게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;연관될&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;것이며&lt;/span&gt;, &lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;그&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;동반&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;관계는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;사람의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;뇌가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;그동안&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;생각해왔던&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;방식이나&lt;/span&gt;, &lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;오늘날&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;우리가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;알고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;있는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;정보처리&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;기계가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;데이터를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;접근하던&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;방식과는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;다르게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;동작할&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;것이다&lt;/span&gt;. – J.C.R Licklider, “&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;인간&lt;/span&gt;-&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;공생&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;(1960&lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;년&lt;/span&gt;)” &lt;/i&gt;&lt;i&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;중에서&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;진정한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;의미에서&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;쌍방향적&lt;/span&gt;(interactive)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;이지&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;않으며&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;의도적으로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;그렇게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;디자인&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;되지도&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;않았다&lt;/span&gt;.&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;처음에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;기계는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;무언가를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;위해&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;완전히&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;숙달되고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;제어되는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;도구로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;인식되었었다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;이후&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;등장으로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;우리가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;사용하는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;도구들은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;점점&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;복잡해지게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;되었고&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;이에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;완전한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;제어라는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;어려운&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;되었고&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;이러한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;도구들을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;다루는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;힘든&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;일이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;되었다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;이러한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;문제를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;해결하기&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;위해&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;개발자들은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;꼼수&lt;/span&gt;(trick)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;쓰기&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;시작했는데&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;그것은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;사용자들이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;기계들을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;동작시킬&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;때&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;그들의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;행동을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;제한&lt;/span&gt;(constrain)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;하는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;것이었다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;생각해보자&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;당신이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;ATM &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;기계를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;사용할&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;때&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;자율적인&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;행동을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;한다고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;느낀&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;적이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;있는가&lt;/span&gt;? &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;기계를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;제어하기보다&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;사용자들은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;기계에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;의해&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;주어진&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;정확한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;순서들을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;따라야&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;한다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;그&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;주어진&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;순서를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;그대로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;완수하거나&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;아니면&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;그만두는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;선택지밖에는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;없다&lt;/span&gt;.&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터와&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;상호작용하는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;세상에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;있는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;다른&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것과는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;뭔가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;다르다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;사람과&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;상호작용하는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것과는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;더욱&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;확실하게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;전혀&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;다른&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;느낌이다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;컴퓨터는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;우리를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;컴퓨터에게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;맞춰지도록&lt;/span&gt;(subservient)
&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;하기&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;때문이다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;우리는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;맞게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;순응해야&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;하고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;예상가능하게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;행동해야&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;한다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터들은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;우리가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;그들만의&lt;/span&gt; (&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;때로는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;숨겨진&lt;/span&gt;) &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;방식을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;따르지&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;않으면&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;우리를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;꾸짖기까지&lt;/span&gt;(scold) &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;한다&lt;/span&gt;.&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;하지만&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;이러한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;관계가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;지속되어온지&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;50&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;년이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;지나고&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;컴퓨터는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;이제&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;사람과&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;함께&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;일&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;할&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;수&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;있을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;정도로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;강력해졌고&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;쌍방향&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;상호작용에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;대한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;우리의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;생각을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;급진적으로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;바꿔놓고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;있다&lt;/span&gt;. &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;변화의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;핵심에는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;인공지능과&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;새로운&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;종류의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;인터페이스가&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;있다&lt;/span&gt;.&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;쌍방향&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;상호작용&lt;/span&gt;(Interactivity)&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;이란&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;/b&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;무엇인가&lt;/span&gt;?&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;책&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&amp;lt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;모든&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;것의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;디자인&lt;/span&gt;(The Design of Everyday Things)&amp;gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;에서&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;저자&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;도널드&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;노만&lt;/span&gt;(Donald
A. Norman)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;
mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:
minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;은&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;한명의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;사람&lt;/span&gt;(&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;또는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;행위자&lt;/span&gt;, actor)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;어떻게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;세상&lt;/span&gt;(&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;또는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;상호작용이&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;가능한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;어떠한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;시스템&lt;/span&gt;)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;맞게&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;행동을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;하며&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;살아가는지를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;8&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;가지&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;절차의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;반복적인&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;과정으로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;설명하고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;있다&lt;/span&gt;.&lt;/p&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;ol style=&quot;list-style-type: decimal;&quot;&gt;&lt;li&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;목표&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;설정한다&lt;/span&gt;. (&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;예&lt;/span&gt;: “&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;나는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;중국&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;음식을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;먹고&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;싶다&lt;/span&gt;.”)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;목표를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;향해가고자&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;하는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;의도&lt;/span&gt;&lt;/b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;를&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;형성한다&lt;/span&gt;. (&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;예&lt;/span&gt;: “&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;중국&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;음식에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;대한&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;나의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;갈망을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;만족시키기&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;위해&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;여러&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;가지&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;방법&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;중&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;중국&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;음식점에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;가기로&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;결정했다&lt;/span&gt;.”)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;margin-bottom:0cm;margin-bottom:.0001pt&quot;&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;그&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;의도에&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;맞는&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;b&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;계획&lt;/span&gt;&lt;/b&gt;(&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;즉&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;일련의&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;행동&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;과정&lt;/span&gt;)&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;세운다&lt;/span&gt;. (&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;예&lt;/span&gt;: “Yelp &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;
mso-hansi-theme-font:minor-latin&quot;&gt;앱을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;통해&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;가까운&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;중국&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:
Calibri;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;
mso-fareast-theme-font:minor-fareast;mso-hansi-font-family:Calibri;mso-hansi-theme-font:
minor-latin&quot;&gt;음식점을&lt;/span&gt;&lt;span lang=&quot;KO&quot;&gt; &lt;/span&gt;&lt;span lang=&quot;KO&quot; style=&quot;font-family:
&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:minor-latin;
mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-latin&quot;&gt;찾아보고&lt;/span&gt;, &lt;span lang=&quot;KO&quot; style=&quot;font-family:&amp;quot;맑은 고딕&amp;quot;;mso-ascii-font-family:Calibri;mso-ascii-theme-font:
minor-latin;mso-fareast-font-family:&amp;quot;맑은 고딕&amp;quot;;mso-fareast-theme-font:minor-fareast;
mso-hansi-font-family:Calibri;mso-hansi-theme-font:minor-la