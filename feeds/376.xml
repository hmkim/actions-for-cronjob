<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">
<channel>
        <title>Tabula rasa</title>
        <description>Tabula rasa - corazzon</description>
        <link>http://corazzon.github.io</link>
        <link>http://corazzon.github.io</link>
        <lastBuildDate>2019-04-12T10:47:37+00:00</lastBuildDate>
        <pubDate>2019-04-12T10:47:37+00:00</pubDate>
        <ttl>1800</ttl>


        <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/github/GgbQ" /><feedburner:info uri="github/ggbq" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><item>
                <title>[도서 리뷰] 엑셀만 알아도 할 수 있는 데이터 과학</title>
                <description>&lt;p&gt;엑셀만 알아도 할 수 있는 데이터 과학&lt;/p&gt;

&lt;p&gt;책 제목에서부터 쉽게 풀어썼을 것 같은 느낌에 이 책에 관심이 갔다. 
막상 실무에서 데이터 과학을 한다 하더라도 엑셀을 많이 사용하는 편이고 꼭 복잡한 기술을 써야하는게 아니기 때문에 책 제목이 마음에 들었다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/SRn8giY.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;이 책 앞 부분에 있는 옮긴이의 말 처럼 데이터 과학은 꼭 대용량 컴퓨터가 필요하고 복잡한 기술이 없어도 가능한게 데이터과학이라 생각한다.
이 책의 초반에 나오는 이 얘기를 통해 이 책이 쉽게 쓰여졌음을 그리고 기본적인 통계기능과 엑셀의 몇 가지 수식만으로도 데이터과학을 할 수 있음을 얘기해 준다.&lt;/p&gt;

&lt;p&gt;또, 이 책은 일본어로 된 책을 번역한 책이라 공공데이터를 사용했다 하더라도 일본의 데이터를 그대로 사용했겠다 생각했는데 일본 공공 데이터와 함께 국내 공공데이터를 활용하는 사례도 함께 나와있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/7VEAoFm.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;데이터의 척도와 종류에 따라 분석하는 방법이 달라지는데 질적자료, 양적자료에 대해 자세하게 설명이 되어 있다.
데이터를 바라볼 때 질적자료인지 양적자료인지 수치형인지 범주형인지 연속적인지 비연속적인지에 따라 분석과 시각화가 달라지는데 이런 부분도 예제와 실습을 적절하게 구성되어 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/liwbtrk.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;데이터 클리닝, 새로운 변수의 작성 등 데이터를 전처리 하거나 분석을 해서 새로운 변수를 추가해주는 이유에 대해 설명하고 그 방법을 구체적으로 설명하고 있다.
이 책에서는 인구데이터를 주로 예제로 사용하는데
연령을 20대, 30대, 40대 처럼 숫자의 특성의 데이터를 범주화 하는 기법에 대해서도 설명과 함께 시각화가 되어 있어 이해하기 쉽게 되어 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/lXFK2JG.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;연령의 binning 혹은 bucketing 예제&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/GUwzL6W.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;막대그래프의 종류&lt;/p&gt;

&lt;p&gt;막대그래프를 그릴 때 다양한 종류로 그릴 수 있는 예제와 쌓아올린 막대그래프와 쌓아올리지 않은 막대그래프의 차이를 시각화 하여 잘 설명하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/AXqiPZ6.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;표준오차, 첨도, 왜도
데이터 과학을 다루며 기본적으로 배우게 되는 이론적인 내용에 대해서 수학공식과 함께 이해할 수 있도록 되어있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/stc6CA6.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;국내통계
일본 서적이라 일본의 공공데이터만 다루지 않을까 했는데 역자가 국내데이터로 이 부분을 따로 만든것 같다. 국내에서 사용할 수 있는 인구데이터를 가져와 우리나라에 맞게 실습할 수 있도록 가이드를 주고 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/TnfkGIc.jpg" width="400" /&gt;&lt;/p&gt;

&lt;p&gt;전체적으로 쉽게 설명하려고 노력한 흔적이 많이 보이는 책이다. 통계학에 대한 기초적인 지식을 이해할 수 있고, 데이터 요약과 시각화를 인구데이터를 통해 실질적인 예제로 이해할 수 있도록 구성되어 있다. 통계는 수식이 많고 복잡해서 실제 데이터로 이해해보고 공식을 적용해 보지 않으면 개념을 이해하기가 쉽지 않은데 이런부분을 최대한 쉽게 설명하려고 노력한 책인 것 같다.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/1E7t8BelA9U" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/1E7t8BelA9U/excel-data-science</link>
                <guid isPermaLink="false">http://corazzon.github.io/excel-data-science</guid>
                <pubDate>2019-04-12T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/excel-data-science</feedburner:origLink></item>

        <item>
                <title>Mac OSX python ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed</title>
                <description>&lt;p&gt;Mac OSX python ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:749)&lt;/p&gt;

&lt;p&gt;NLTK data를 다운로드 할 때 SSL 오류메시지가 나와서 nltk data downloader 에 문제가 있는건가 생각했었다.
결국 nltk 데이터를 깃헙에서 다운로드 받아 썼는데&lt;/p&gt;

&lt;p&gt;파이썬으로 크롤링을 하다보니 https 프로토콜로 통신을 하려고 하면 같은 오류가 발생해서 무슨 문제일까 고민했었다.
구글링을 해보니 https를 사용하지 않는 방법으로 해결했다는 답변들이 대부분이라 http 통신으로 우회하는 방법을 사용했다.&lt;/p&gt;

&lt;p&gt;그런데 알고보니 너무나 간단한 방법으로 이 이슈를 해결할 수 있었다.
아래의 글을 보고 Finder로 Applications/Python 3.6 폴더를 열었다.
그리고 아래 파일을 더블클릭해서 설치했다.&lt;/p&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;Install Certificates.command&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/9YSiPiq.png" alt="9YSiPiq.png (1764×1096)" /&gt;&lt;/p&gt;

&lt;p&gt;그리고 파이썬에서 SSL 오류는 더 이상 발생하지 않았다.
이 문제를 해결하기 위해 셀프 인증서를 발급받는 방법 이라든지 여러 삽질을 했다.&lt;/p&gt;

&lt;p&gt;간단한 문제였는데 너무 허무하게 해결되었다.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/42098126/mac-osx-python-ssl-sslerror-ssl-certificate-verify-failed-certificate-verify"&gt;macos - Mac OSX python ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:749) - Stack Overflow&lt;/a&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/VYrdsTmL9fc" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/VYrdsTmL9fc/python_ssl_error</link>
                <guid isPermaLink="false">http://corazzon.github.io/python_ssl_error</guid>
                <pubDate>2018-07-07T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/python_ssl_error</feedburner:origLink></item>

        <item>
                <title>[NDC후기] 소프트웨어 2.0을 활용한 게임 어뷰징 검출</title>
                <description>&lt;p&gt;소프트웨어 2.0 소개&lt;/p&gt;

&lt;iframe src="//www.slideshare.net/slideshow/embed_code/key/Ag4ySi7GGiuKbk" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""&gt; &lt;/iframe&gt;
&lt;div style="margin-bottom:5px"&gt; &lt;strong&gt; 
&lt;a href="//www.slideshare.net/ssuser163469/20-95081863" title="소프트웨어 2.0을 활용한 게임 어뷰징 검출" target="_blank"&gt;소프트웨어 2.0을 활용한 게임 어뷰징 검출&lt;/a&gt; &lt;/strong&gt; 
&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;그간 NDC에 가고 싶었지만 매번 늦게 신청해서 못 갔는데, 
이번에는 첫 날 신청을 해서! 드디어 처음으로 NDC에 가보게 되었다.
NDC에서 가장 듣고 싶었던 세션인 소프트웨어 2.0에 대한 발표를 듣고 정리한 내용이다.
발표자 분은 예전에 같은 회사에서 일했던 롤모델같은 분이기도 하다.
NDC뿐만 아니라 파이콘에서도 좋은 발표를 많이 해주셨었다.
이번에도 역시나 너무 좋은 발표로 자연어 처리에 관심이 많은 내게 도움이 되는 발표였다.
발표를 들으며 빠르게 타이핑한 내용을 남겨본다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="발표를-듣기-전에-미리-읽어-볼-것"&gt;발표를 듣기 전에 미리 읽어 볼 것&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://gist.github.com/haje01/d2518ea998ab2de102b072fed600c0a4"&gt;소프트웨어 2.0.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="마르코프-연쇄로-랜덤-이름-찾기"&gt;마르코프 연쇄로 랜덤 이름 찾기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;게임을 만들다가 좋은 성과를 거두지 못해 이유를 생각해 봤다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="운영의-중요성"&gt;운영의 중요성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;운영은 유저와의 소통이 중요하다. 유저는 디데일하게 친절하게 왜 접었는지 재미없는지 얘기해 주지 않는다.&lt;/li&gt;
  &lt;li&gt;이걸 보는 방법은 데이터를 보는 것이다.&lt;/li&gt;
  &lt;li&gt;그래서 데이터 엔지니어링부터 시작했다.&lt;/li&gt;
  &lt;li&gt;로그를 중앙으로 모으고 기계학습으로 어뷰징 검출을 시도해 보고 제작년 NDC에서 발표를 한 적이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="로그-수집"&gt;로그 수집&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;수집 된 로그를 하둡을 통해 정제&lt;/li&gt;
  &lt;li&gt;수작업으로 개발한 특성(Feature)을 이용해&lt;/li&gt;
  &lt;li&gt;스패머 검출하는 로직에 대한 소개&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="2016년-발표에서-몇-가지-달라진-것"&gt;2016년 발표에서 몇 가지 달라진 것&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;하둡에서 스파크를 사용하는 것으로 바뀌었다.
    &lt;ul&gt;
      &lt;li&gt;무엇보다 빠르고 사용하기 편하다.&lt;/li&gt;
      &lt;li&gt;하둡보다 월등하게 좋아진 플랫폼이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수작업된 특성에서 데이터에서 학습된 특성으로
    &lt;ul&gt;
      &lt;li&gt;데이터에서 컴퓨터가 스스로 학습을 해서 스스로 어뷰저를 찾도록 하고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수동 제재에서 자동 제재로
    &lt;ul&gt;
      &lt;li&gt;제재를 하기 전에 GM과 협의를 해서 제재를 했지만 이제 어느정도 안정화 단계에 이르러서 사람을 거치지 않고 로그를 중앙에 모으고 기계학습을 하고 사람의 손을 거치지 않고 자동으로 제재한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="기존에도-여러-방법을-통해-게임어뷰저를-제재하고-있을텐데"&gt;기존에도 여러 방법을 통해 게임어뷰저를 제재하고 있을텐데&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;이걸 기계학습으로 하는 이유는 게임 본래 데이터의 특성 때문이다.
    &lt;ul&gt;
      &lt;li&gt;내용이 굉장이 많다. 아이템, 강화, 퀘스트 등 하나의 이벤트로 보고 관련 정보를 쓰다보면 종류와 용량이 많아지고 기획 내용에 따라 포맷이 달라진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다양한 특성을 동시에 고려해야
    &lt;ul&gt;
      &lt;li&gt;여러 특성을 같이 봐야 한다. 아이피 대역이 중국인가? 플레이 한지 며칠이 되었나? 플레이 시간은 얼마고&lt;/li&gt;
      &lt;li&gt;사람은 동시에 몇 개의 특성이 늘어나면 판단하기가 점점 힘들어 진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;24시간 모니터링 &amp;amp; 자동 제재
    &lt;ul&gt;
      &lt;li&gt;기계학습을 통해 어뷰징 제재를 하고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="사용중인-어뷰징-검출-특성들일부"&gt;사용중인 어뷰징 검출 특성들(일부)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;플레이시간, 스킬사용, 던전 클리어 유료결제 한 적이 있는가 여러 가지 특성을 종합적으로 살펴보고 있다.&lt;/li&gt;
  &lt;li&gt;피처엔지니어링을 통해 뽑아낸 특성들을 포함해서 모든 특성들을 종합적으로 판단하고 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="소프트웨어-20-소개"&gt;소프트웨어 2.0 소개&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;최근 인공지능이나 기계학습이 화두가 되고 있다. 여러 학문 분야 중에 자기의 입장에 따라 기계학습을 다양하게 이해하고 학습하고 있다.&lt;/li&gt;
  &lt;li&gt;연결주의자는 기계학습은 사람의 뇌를 모사함 그래서 뉴럴넷으로 구현&lt;/li&gt;
  &lt;li&gt;베이즈 주의자는 베이즈 정리로 설명&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;논리학 쪽에서는 심볼릭 로직인 기호주의자는 기호로 사회현상을 귀납적으로 추론한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;진화주의자나 유추주의자도 기계학습을 바라보고 해석하고 있다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마스터 알고리즘이라는 책에서 이미지를 가져와서 몇 가지를 추가함&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;개발자의 관점에서는 데이터에서 학습되는 코드로 볼 수 있지 않나? 생각됨&lt;/li&gt;
  &lt;li&gt;코드 베이스로 서비스까지 이루어지니까 기존의 소프트웨어와 다른 것일까? 혼자만의 생각을 하게 되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="소프트웨어-20-andrej-karpathy라는-딥러닝계의-연구자"&gt;소프트웨어 2.0 &lt;code class="highlighter-rouge"&gt;Andrej Karpathy&lt;/code&gt;라는 딥러닝계의 연구자&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://cs.stanford.edu/people/karpathy/"&gt;Andrej Karpathy Academic Website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;뉴럴넷은 또 다른 분류기가 아니라 근본적인 변화다. 그것은 소프트웨어 2.0이다. 메니페스토처럼 선언했다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;실세계의 문제들중 많은 것이 프로그래머가 프로그램을 짜기 보다 모으는 것이 훨씬 더 쉬운 속성을 가지고 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;미래의 프로그래머 중 많은 이들은 뉴럴넷에 공급할 데이터를 수집, 정리, 조작, 라벨링하고 분석 및 시각화 하는 일을 할 것이다.&lt;/li&gt;
  &lt;li&gt;넓게 보면 뉴럴넷만이 SW2.0을 뜻하지는 않으며, 조심스럽지만 개발자의 관점에서 기계학습대신 소프트웨어2.0으로 발표제목을 걸었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="소프트웨어-10과-20의-흐름"&gt;소프트웨어 1.0과 2.0의 흐름&lt;/h2&gt;

&lt;h3 id="10"&gt;1.0&lt;/h3&gt;
&lt;p&gt;구현된 서비스가 동작하고 데이터가 나온다.
서버가 다루는 다량의 로그&lt;/p&gt;

&lt;h3 id="20"&gt;2.0&lt;/h3&gt;
&lt;p&gt;이미 구현이 되어있고 그 구현에서 동작을 하고 있다. 그 동작에서 데이터가 뽑아짐
우리가 원하는 기능을 구현하게 진행된다.&lt;/p&gt;

&lt;h3 id="sw20에-필요한-스킬들"&gt;SW2.0에 필요한 스킬들&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 특성 파악 - 탐색적 데이터 분석(EDA)&lt;/li&gt;
  &lt;li&gt;대용량 데이터 다루기 - 빅데이터 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="sw-20을-위한-도구"&gt;SW 2.0을 위한 도구&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;프로그래밍 언어(전처리 분야에는 이 부분이 꼭 필요)&lt;/li&gt;
  &lt;li&gt;시각화 도구&lt;/li&gt;
  &lt;li&gt;기계학습 라이브러리&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="spark"&gt;Spark&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;꼭 빅데이터가 아니어도 가능하지만…&lt;/li&gt;
  &lt;li&gt;규모 가변성&lt;/li&gt;
  &lt;li&gt;많은 데이터가 영리한 알고리즘을 이긴다.&lt;/li&gt;
  &lt;li&gt;최고의 빅데이터 플랫폼&lt;/li&gt;
  &lt;li&gt;또한, 범용 분산 처리 플랫폼&lt;/li&gt;
  &lt;li&gt;머신하나에 의존하는 플랫폼을 쓰면 빅데이터에 적용이 어렵다. 스파크를 쓰면 클러스터를 키우면 되기 때문에 규모 가변성이 가장 큰 장점이다.&lt;/li&gt;
  &lt;li&gt;범용 분산처리 플랫폼 게임을 만들면서도 분산처리에 응용할 수도 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="spark-분산처리의-예"&gt;Spark 분산처리의 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;사례1) 대용량 텍스트 로그 정리&lt;/li&gt;
  &lt;li&gt;중복 및 오류가 있는 원천 로그 파일의 정리 과제&lt;/li&gt;
  &lt;li&gt;한 달 에상 -&amp;gt; 30대 클러스터 분산으로 하루에 완료&lt;/li&gt;
  &lt;li&gt;아마존 EMR로 분산처리, 로컬에서 코드 최적화도 하고 팁을 만들어낼 수도 있었겠지만 비용을 써서 빨리 해결할 수 있었음&lt;/li&gt;
  &lt;li&gt;사례2) 기계학습된 모델로 대량 검출&lt;/li&gt;
  &lt;li&gt;학습된 랜덤포레스트 모델을 분산해 검출&lt;/li&gt;
  &lt;li&gt;10배 이상의 속도 향상&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="분산-검출의-예"&gt;분산 검출의 예&lt;/h4&gt;

&lt;h4 id="spark-환경-추천"&gt;Spark 환경 추천&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;아마존 같은 온디맨드 서비스를 사용&lt;/li&gt;
  &lt;li&gt;높은 가성비, 설치, 유지보수 등의 비용을 생각한다면 추천함&lt;/li&gt;
  &lt;li&gt;일반적으로 CSV, JSON 사용하는데 Parque, ORC 포맷을 이용하면 10배의 속도가 나온다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="딥러닝-라이브러리"&gt;딥러닝 라이브러리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;소프트웨어 2.0의 핵심&lt;/li&gt;
  &lt;li&gt;텐서플로우 : 넓은 레퍼런스 + 빠른 속도 -&amp;gt; 실제 서비스에 적합&lt;/li&gt;
  &lt;li&gt;PyTorch : 간결함 + 디버깅 용이 -&amp;gt; 연구에 적합&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="자동-미분--임의의-연산이-미분-가능"&gt;자동 미분 : 임의의 연산이 미분 가능&lt;/h4&gt;
&lt;p&gt;방정식 풀이, 파라메터 처리 등 다양한 용도로 사용할 수 있다.&lt;/p&gt;

&lt;h3 id="참고--사용-중인-분석-시스템-구조"&gt;참고 : 사용 중인 분석 시스템 구조&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;리얼타임 모니터링을 엘라스틱서치&lt;/li&gt;
  &lt;li&gt;사이킷런과 파이토치를 사용해서 분산 검출하고 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="사례"&gt;사례&lt;/h2&gt;

&lt;h3 id="마르코프-이론"&gt;마르코프 이론&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;어뷰징 캐릭터(계정)는 소모품이다.&lt;/li&gt;
  &lt;li&gt;이름을 대충 랜덤하게 짓습니다.&lt;/li&gt;
  &lt;li&gt;이것을 정량화 할 수 있다면? 어뷰징 검출에 도움이 되지 않을까?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="기존-랜덤-이름-검출-방식"&gt;기존 랜덤 이름 검출 방식&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;자/모음의 패턴&lt;/li&gt;
  &lt;li&gt;수작업된 코드&lt;/li&gt;
  &lt;li&gt;데이터로 학습할 수 없을까?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="마르코프-연쇄"&gt;마르코프 연쇄&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;마르코프 성질 - 과거는 현재, 현재는 미래에 영향을 줌&lt;/li&gt;
  &lt;li&gt;날씨의 예 - SSSCRS 맑다가 흐리다 비가오는 일, 비가 오면 날씨가 갠다. 갠 날씨에서 갑자기 비가오는 확률은 적다.&lt;/li&gt;
  &lt;li&gt;일종의 전이확률로 파악할 수 있다.&lt;/li&gt;
  &lt;li&gt;영어 단어의 마르코프 연쇄&lt;/li&gt;
  &lt;li&gt;확률을 학습하기 위해 큰 코퍼스&lt;/li&gt;
  &lt;li&gt;문자를 2개씩 추출해서 어떤 문자 다음에 어떤 문자가 오더라는 것을 확률로 평균을 구함&lt;/li&gt;
  &lt;li&gt;문자간 전이 확률&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;d 다음에 스페이스가 많이 나오는 것은 과거형이 많아서 일듯&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;이 확률을 계산해 랜덤한 확률을 구함&lt;/li&gt;
  &lt;li&gt;산출된 랜덤 점수의 예 : 이것을 분류기의 특성 중 하나로 하여 어뷰저 검출에 참고하여 정확도가 향상 됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="text-cnn으로-스팸-검출"&gt;Text CNN으로 스팸 검출&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;예전 정규식으로 스팸을 검출하면 창과 방패의 싸움이 이어짐&lt;/li&gt;
  &lt;li&gt;2016년 발표자료에서 통계적 스팸 검출방식은 임계치를 파악하여 어뷰저가 우회하기도 함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="cnn"&gt;CNN&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이미지를 분류하기 위해 특징을 추출하는 방식&lt;/li&gt;
  &lt;li&gt;이미지 분류를 위해 만들어지기는 했지만 소리나 텍스트에도 많이 사용됨&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="목표"&gt;목표&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;기본 스팸 메시지에서 학습&lt;/li&gt;
  &lt;li&gt;빈번한 모델 갱신이 필요 없게 - 잦은 유지보수 힘듦&lt;/li&gt;
  &lt;li&gt;빠른 검출 시간&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="학습-준비"&gt;학습 준비&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;눈으로 직접 확인하며 학습 데이터를 수집했다.&lt;/li&gt;
  &lt;li&gt;스팸메시지는 빈도가 높으나 다양하지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="메시지를-임베딩"&gt;메시지를 임베딩&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;뉴럴넷는 숫자만 다룰 수 있기 때문에 적절하게 벡터화&lt;/li&gt;
  &lt;li&gt;대표적으로 원핫인코딩&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="단어-레벨-vs-캐릭터-레벨"&gt;단어 레벨 vs 캐릭터 레벨&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;일반적으로는 단어(Word) 레벨 임베딩이 많이 쓰임&lt;/li&gt;
  &lt;li&gt;채팅은 변칙적인 단어가 많아 임베딩이 곤란&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="다양한-크기의-커널-이용"&gt;다양한 크기의 커널 이용&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;다른 크기의 커널&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="합친-결과를-역전파로-학습"&gt;합친 결과를 역전파로 학습&lt;/h3&gt;

&lt;h3 id="문제점"&gt;문제점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;기본 스팸 메시지수는 극히 적음&lt;/li&gt;
  &lt;li&gt;일반 메시지 수는 아주 많음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="변종-스팸-대응-문제"&gt;변종 스팸 대응 문제&lt;/h3&gt;

&lt;h3 id="데이터-증강--드랍아웃으로-해결"&gt;데이터 증강 + 드랍아웃으로 해결&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;데이터 증강 : 스팸 문자열 내 임의로 기호/공백 문자 섞기&lt;/li&gt;
  &lt;li&gt;드랍아웃 : 학습된 뉴런을 임의 삭제&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="기본-스팸-메시지들"&gt;기본 스팸 메시지들&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;영문자 대소문자는 구분하지 않는 것&lt;/li&gt;
  &lt;li&gt;대상 문자와 원핫인코딩 캐릭터 단위로&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="textcnn-모듈-정의"&gt;TextCNN 모듈 정의&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;커널을 3, 4, 5, 6 다양하게 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="학습-후-적용-결과"&gt;학습 후 적용 결과&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;변형을 가한 문자에 대해서도 스팸을 판단한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="주의점"&gt;주의점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;일반 메시지라도 주요 단어가 들어가면 스팸 점수 상승&lt;/li&gt;
  &lt;li&gt;적절한 임계값과 빈도로 스패머 여부 판다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="향상된-점"&gt;향상된 점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;잦은 모델 업데이트 없이 변형 스팸 대응&lt;/li&gt;
  &lt;li&gt;일단위가 아닌 메시지 당 검출 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="이동-변위-cnn으로-오토-검출"&gt;이동 변위 CNN으로 오토 검출&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;파밍 어뷰저의 가장 큰 특성?&lt;/li&gt;
  &lt;li&gt;반복적인 행동(오토)&lt;/li&gt;
  &lt;li&gt;이것이 어뷰징의 시작&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="기존-반복적-행동-검출-방법"&gt;기존 반복적 행동 검출 방법&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;몇 가지 통계적 수치를 조합해 판단&lt;/li&gt;
  &lt;li&gt;임계치에 민감&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="선례--자기-유사도를-이용한-탐지"&gt;선례 : 자기 유사도를 이용한 탐지&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이동 위치는 너무 엄밀, 우회가 용이&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="이동-경로가-아닌-이동-변위로-동작의-반복성을-살펴보면"&gt;이동 경로가 아닌 이동 변위로 동작의 반복성을 살펴보면?&lt;/h3&gt;

&lt;h3 id="어뷰저의-변이-그래프-vs-정상-유저의-변이-그래프"&gt;어뷰저의 변이 그래프 vs 정상 유저의 변이 그래프&lt;/h3&gt;

&lt;h3 id="왜-이런-패턴을-보일까-학습-및-검출"&gt;왜 이런 패턴을 보일까? 학습 및 검출&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;어뷰저 데이터 수작업 선별(150개) 정상 샘플은 전체에서 임의 추출&lt;/li&gt;
  &lt;li&gt;고정 윈도우(1000개 변위)로 미니매치&lt;/li&gt;
  &lt;li&gt;학습 시작 위치를 다양하게 해 클래스 불균형 완화
하나의 변위 데이터도 시작 위치에 따라 다름&lt;/li&gt;
  &lt;li&gt;조기종료(오버피팅 방지)&lt;/li&gt;
  &lt;li&gt;검출시는 윈도우 단위 판정값을 평균내어 판정(시계열)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="초기-문제점"&gt;초기 문제점&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;정확도가 향상되지 않음
    &lt;ul&gt;
      &lt;li&gt;이동 병위값이 너무 크다. 정규화(Normalization) 적용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가끔 손실 값이 튀는 현상
    &lt;ul&gt;
      &lt;li&gt;배치 Normalization 사용 후 완화&lt;/li&gt;
      &lt;li&gt;레이어와 레이어 사이의 값을 정규화 하는 방식&lt;/li&gt;
      &lt;li&gt;BN적용 후 개선된 손실&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="초기-학습시-오탐한-데이터는-수작업-분류-후-학습"&gt;초기 학습시 오탐한 데이터는 수작업 분류 후 학습&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;어뷰저로 오탐된 변이의 예&lt;/li&gt;
  &lt;li&gt;쉬는 시간이 있음, 어뷰저는 이것을 파악하기 어려움&lt;/li&gt;
  &lt;li&gt;오탐 대응, 이동 변위 + 시간 변위 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="미니-배치-순회"&gt;미니 배치 순회&lt;/h3&gt;

&lt;h3 id="테스트셋으로-검증결과-정확도-97-최종-제재는-다른-특성도-함께-고려"&gt;테스트셋으로 검증결과 정확도 97% 최종 제재는 다른 특성도 함께 고려&lt;/h3&gt;

&lt;h3 id="검출-결과"&gt;검출 결과&lt;/h3&gt;

&lt;h3 id="향상된-점-1"&gt;향상된 점&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;수작업 없는 빠른 검출&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="살펴본점"&gt;살펴본점&lt;/h3&gt;

&lt;h3 id="서비스-적용-현황"&gt;서비스 적용 현황&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;자동 제재 이후 지역별 검출 어뷰저 수 추세&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="앞으로의-과제"&gt;앞으로의 과제&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;영어 외의 이름 스팸 검출은 까다로움&lt;/li&gt;
  &lt;li&gt;모바일 게임으로의 오토 검출&lt;/li&gt;
  &lt;li&gt;게임 데이터 라벨링 수단 - 전용 툴, &lt;a href="https://www.mturk.com/"&gt;Amazon Mechanical Turk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;GAN 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="sw-20을-시도하려면"&gt;SW 2.0을 시도하려면&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;이론 공부와 다양한 실험&lt;/li&gt;
  &lt;li&gt;도메인 전문가와 이야기&lt;/li&gt;
  &lt;li&gt;인프라 구축은 필요한 만큼만&lt;/li&gt;
  &lt;li&gt;반복 학습 전에 데이터 확인과 코드리뷰 먼저&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;소프트웨어 1.0과 2.0의 미래&lt;/p&gt;

&lt;h3 id="참고-fizzbuzz-문제"&gt;참고 FizzBuzz 문제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;딥러닝 공부를 너무 많이 하다가 텐서플로우로 구현&lt;/li&gt;
  &lt;li&gt;그러나 불합격되었다는 짤방&lt;/li&gt;
  &lt;li&gt;모든 문제가 2.0 대상은 아니다.&lt;/li&gt;
  &lt;li&gt;1.0과 2.0의 앙상블로 문제를 해결&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="참고-링크"&gt;참고 링크&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://machinelearningmastery.com/hands-on-big-data-by-peter-norvig/"&gt;Hands on Big Data by Peter Norvig&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html#sphx-glr-beginner-blitz-autograd-tutorial-py"&gt;Autograd: automatic differentiation — PyTorch Tutorials 0.4.0 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://ridibooks.com/v2/Detail?id=1780000048"&gt;마스터 알고리즘 (머신러닝은 우리의 미래를 어떻게 바꾸는가) - 리디북스&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rrenaud/Gibberish-Detector"&gt;rrenaud/Gibberish-Detector: A small program to detect gibberish using a Markov Chain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.dbpia.co.kr/Journal/ArticleDetail/NODE06617217"&gt;자기 유사도를 이용한 MMORPG 게임봇 탐지 시스템 - 정보보호학회논문지 - 한국정보보호학회 : 전자저널 논문 - DBpia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/ZaKJ8l7iRt4" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/ZaKJ8l7iRt4/software-20</link>
                <guid isPermaLink="false">http://corazzon.github.io/software-20</guid>
                <pubDate>2018-04-26T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/software-20</feedburner:origLink></item>

        <item>
                <title>[도서 리뷰] 처음 배우는 딥러닝 수학</title>
                <description>&lt;p&gt;&lt;img src="https://i.imgur.com/VXsaLtK.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;이 책은 제목에서 &lt;code class="highlighter-rouge"&gt;처음 배우는&lt;/code&gt;이라는 문구에서 알 수 있듯이 딥러닝 입문자를 위한 수학책이다.
딥러닝 책이지만 이 책은 수학책이기 때문에 코드가 나오지 않고 수학 공식, 도표 그리고 엑셀로 수학을 설명하고 있다.&lt;/p&gt;

&lt;p&gt;딥러닝 책 중에는 수학 공식을 거의 다루지 않은 책도 있고, 나 또한 딥러닝을 공부하며 수학에 대한 이해는 뒤로 미루고 코드로 이해하려고 애를 썼다.&lt;/p&gt;

&lt;p&gt;수포자이기도 하고 수많은 수학 공식과 낯선 수학 용어와 확률 통계를 이해하는데 많은 어려움이 있었다.
그래서 그간 봐왔던 머신러닝과 딥러닝에 등장하는 수학 공식은 낯선 수학기호로 되어있고 기본적인 대학수학을 이해하고 있다는 전제하에 쓰여 있기 때문에 설명도 자세하지 않아 그림을 보듯 지나치기를 반복해 왔다. 이렇게 여러 알고리즘에 등장하는 수학을 제대로 이해하지 못하고 넘어가는 것이 늘 마음에 부담으로 남곤했다.
그래서 수학을 공부해 봐야겠다는 생각으로 여러 수학책이나 위키피디아의 수학 공식들을 찾아보기도 했지만 정리되지 않은 수학 기호와 공식들이 머릿속에 떠다니는 느낌이었다.&lt;/p&gt;

&lt;p&gt;늘 쉽게 수학을 공부할 수 있는 책을 찾았는데 기초부터 차근차근 설명하는 책이 많지 않았다.&lt;/p&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;처음 배우는 딥러닝 수학&lt;/code&gt;은 이런 어려움을 겪던 내게 그나마 지금까지 봐온 데이터 사이언스와 관련된 수학책 중 가장 부담이 적었다. 
이 책에 나오는 수학 공식 또한 수포자로서 이해하기 쉬운 건 아니다.
하지만 되도록이면 고등학교 수학 수준의 기호를 사용하였고 복잡한 코드 대신 엑셀을 통해 설명하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/ro5rxbV.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;딥러닝 책이지만 코드가 나오지 않는다는 것도 이 책의 큰 특징일 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/fSEvl2E.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/rNtgmub.jpg" /&gt;
가장 단순한 뉴런의 모습을 수학적으로 구현한 것부터 시작해서 악마라는 캐릭터를 도입해서 신경망을 이해할 수 있도록 하고 있다.&lt;/p&gt;

&lt;p&gt;엑셀도 책 후반부에서 오차역전파법을 설명하며 나오고 그 전에는 대부분 기초 수학을 그림을 통해 쉽게 설명하려고 노력하고 있다.
딥러닝 책이기 때문에 당연히 코드를 통해 설명하리라 생각했던 예측이 완전히 빗나갔다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/QUUD6nW.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/hcFLneX.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/oF66Oqq.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;경사하강법의 편미분에 들어가기 전까지는 벡터, 행렬, 내적, 시그마 등 딥러닝뿐만 아니라 머신러닝에도 꼭 필요한 기초수학을 설명하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/1UuGgHE.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/7HOb8i4.jpg" /&gt;
그래서 중학교 이후의 수학이 잘 기억나지 않더라도 이 책의 친절한 행렬과 미분에 대한 설명을 통해 기억을 더듬어 볼 수 있었다.&lt;/p&gt;

&lt;p&gt;머신러닝에 입문하며 Numpy를 통해 행렬의 기초 연산을 이해하고 수학을 넘파이로 다시 배웠다는 생각이 들었다.
스칼라, 벡터, 행렬, 텐서 등 여러 용어들이 난무해서 이 용어들에 익숙해지는데도 시간이 걸렸는데 이 책을 보며 중학교때 모눈지에 1,2차 방정식을 그려 이해하던 기억이 떠올랐다.&lt;/p&gt;

&lt;p&gt;좀 더 쉬운내용이나 확률 통계와 관련된 기초 수학 내용도 좀 더 있었으면 아쉬움도 있지만
그래도 근래에 봤던 수학책 중에는 가장 이해가 잘되는 책이었다.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/I91dgTa3wQ8" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/I91dgTa3wQ8/deep-learning-math</link>
                <guid isPermaLink="false">http://corazzon.github.io/deep-learning-math</guid>
                <pubDate>2018-04-15T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/deep-learning-math</feedburner:origLink></item>

        <item>
                <title>Google Colaboratory의 무료 GPU로 Keras 사용해 보기</title>
                <description>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/UKujX90xLHo" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h2 id="colab의-gpu로-keras-사용해-보기"&gt;Colab의 GPU로 Keras 사용해 보기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;참고 : 케라스 공식문서에서 멀티GPU 사용하기 예제를 Colab에서 돌아가도록 수정 https://keras.io/utils/#multi_gpu_model&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Colab 의 성능은 나쁘지 않은 편이다. 현재 메모리 13기가와 CPU는 Intel(R) Xeon(R) CPU @ 2.30GHz을 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;GPU는 Tesla K80 으로 멀티GPU는 지원하지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="colaboratory의-메모리-정보보기"&gt;Colaboratory의 메모리 정보보기&lt;/h3&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;!cat /proc/meminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;MemTotal:       13341960 kB
MemFree:         8533256 kB
MemAvailable:   12413480 kB
Buffers:          592664 kB
Cached:          3106704 kB
SwapCached:            0 kB
Active:          2154112 kB
Inactive:        1833004 kB
Active(anon):     457024 kB
Inactive(anon):   114432 kB
Active(file):    1697088 kB
Inactive(file):  1718572 kB
Unevictable:           0 kB
Mlocked:               0 kB
SwapTotal:             0 kB
SwapFree:              0 kB
Dirty:               380 kB
Writeback:             0 kB
AnonPages:        287764 kB
Mapped:           164784 kB
Shmem:            283716 kB
Slab:             746368 kB
SReclaimable:     717980 kB
SUnreclaim:        28388 kB
KernelStack:        3184 kB
PageTables:         4448 kB
NFS_Unstable:          0 kB
Bounce:                0 kB
WritebackTmp:          0 kB
CommitLimit:     6670980 kB
Committed_AS:    1548724 kB
VmallocTotal:   34359738367 kB
VmallocUsed:           0 kB
VmallocChunk:          0 kB
AnonHugePages:         0 kB
HugePages_Total:       0
HugePages_Free:        0
HugePages_Rsvd:        0
HugePages_Surp:        0
Hugepagesize:       2048 kB
DirectMap4k:      384972 kB
DirectMap2M:    10100736 kB
DirectMap1G:     5242880 kB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="colaboratory의-cpu-정보보기"&gt;Colaboratory의 CPU 정보보기&lt;/h3&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;!cat /proc/cpuinfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;processor&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;vendor_id&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;GenuineIntel&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;
&lt;span class="k"&gt;model&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;63&lt;/span&gt;
&lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Xeon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt; &lt;span class="m"&gt;2.30&lt;/span&gt;&lt;span class="n"&gt;GHz&lt;/span&gt;
&lt;span class="n"&gt;stepping&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;microcode&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0x1&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;MHz&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2300.000&lt;/span&gt;
&lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;46080&lt;/span&gt; &lt;span class="n"&gt;KB&lt;/span&gt;
&lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;siblings&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;core&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;cores&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;apicid&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="n"&gt;apicid&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;fpu&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;fpu_exception&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;cpuid&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;
&lt;span class="n"&gt;wp&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;flags&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fpu&lt;/span&gt; &lt;span class="n"&gt;vme&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;pse&lt;/span&gt; &lt;span class="n"&gt;tsc&lt;/span&gt; &lt;span class="n"&gt;msr&lt;/span&gt; &lt;span class="n"&gt;pae&lt;/span&gt; &lt;span class="n"&gt;mce&lt;/span&gt; &lt;span class="n"&gt;cx8&lt;/span&gt; &lt;span class="n"&gt;apic&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="n"&gt;mtrr&lt;/span&gt; &lt;span class="n"&gt;pge&lt;/span&gt; &lt;span class="n"&gt;mca&lt;/span&gt; &lt;span class="n"&gt;cmov&lt;/span&gt; &lt;span class="n"&gt;pat&lt;/span&gt; &lt;span class="n"&gt;pse36&lt;/span&gt; &lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;mmx&lt;/span&gt; &lt;span class="n"&gt;fxsr&lt;/span&gt; &lt;span class="n"&gt;sse&lt;/span&gt; &lt;span class="n"&gt;sse2&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="n"&gt;ht&lt;/span&gt; &lt;span class="n"&gt;syscall&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt; &lt;span class="n"&gt;pdpe1gb&lt;/span&gt; &lt;span class="n"&gt;rdtscp&lt;/span&gt; &lt;span class="n"&gt;lm&lt;/span&gt; &lt;span class="n"&gt;constant_tsc&lt;/span&gt; &lt;span class="n"&gt;rep_good&lt;/span&gt; &lt;span class="n"&gt;nopl&lt;/span&gt; &lt;span class="n"&gt;xtopology&lt;/span&gt; &lt;span class="n"&gt;nonstop_tsc&lt;/span&gt; &lt;span class="n"&gt;eagerfpu&lt;/span&gt; &lt;span class="n"&gt;pni&lt;/span&gt; &lt;span class="n"&gt;pclmulqdq&lt;/span&gt; &lt;span class="n"&gt;ssse3&lt;/span&gt; &lt;span class="n"&gt;fma&lt;/span&gt; &lt;span class="n"&gt;cx16&lt;/span&gt; &lt;span class="n"&gt;sse4_1&lt;/span&gt; &lt;span class="n"&gt;sse4_2&lt;/span&gt; &lt;span class="n"&gt;x2apic&lt;/span&gt; &lt;span class="n"&gt;movbe&lt;/span&gt; &lt;span class="n"&gt;popcnt&lt;/span&gt; &lt;span class="n"&gt;aes&lt;/span&gt; &lt;span class="n"&gt;xsave&lt;/span&gt; &lt;span class="n"&gt;avx&lt;/span&gt; &lt;span class="n"&gt;f16c&lt;/span&gt; &lt;span class="n"&gt;rdrand&lt;/span&gt; &lt;span class="n"&gt;hypervisor&lt;/span&gt; &lt;span class="n"&gt;lahf_lm&lt;/span&gt; &lt;span class="n"&gt;abm&lt;/span&gt; &lt;span class="n"&gt;fsgsbase&lt;/span&gt; &lt;span class="n"&gt;tsc_adjust&lt;/span&gt; &lt;span class="n"&gt;bmi1&lt;/span&gt; &lt;span class="n"&gt;avx2&lt;/span&gt; &lt;span class="n"&gt;smep&lt;/span&gt; &lt;span class="n"&gt;bmi2&lt;/span&gt; &lt;span class="n"&gt;erms&lt;/span&gt; &lt;span class="n"&gt;xsaveopt&lt;/span&gt;
&lt;span class="n"&gt;bugs&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;bogomips&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4600.00&lt;/span&gt;
&lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;cache_alignment&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;sizes&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;46&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="n"&gt;physical&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="n"&gt;virtual&lt;/span&gt;
&lt;span class="n"&gt;power&lt;/span&gt; &lt;span class="n"&gt;management&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;processor&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;vendor_id&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;GenuineIntel&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt;
&lt;span class="k"&gt;model&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;63&lt;/span&gt;
&lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Xeon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt; &lt;span class="m"&gt;2.30&lt;/span&gt;&lt;span class="n"&gt;GHz&lt;/span&gt;
&lt;span class="n"&gt;stepping&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;microcode&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0x1&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;MHz&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2300.000&lt;/span&gt;
&lt;span class="n"&gt;cache&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;46080&lt;/span&gt; &lt;span class="n"&gt;KB&lt;/span&gt;
&lt;span class="n"&gt;physical&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;siblings&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;core&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;cpu&lt;/span&gt; &lt;span class="n"&gt;cores&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;apicid&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;initial&lt;/span&gt; &lt;span class="n"&gt;apicid&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;fpu&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;fpu_exception&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;cpuid&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;
&lt;span class="n"&gt;wp&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;flags&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fpu&lt;/span&gt; &lt;span class="n"&gt;vme&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;pse&lt;/span&gt; &lt;span class="n"&gt;tsc&lt;/span&gt; &lt;span class="n"&gt;msr&lt;/span&gt; &lt;span class="n"&gt;pae&lt;/span&gt; &lt;span class="n"&gt;mce&lt;/span&gt; &lt;span class="n"&gt;cx8&lt;/span&gt; &lt;span class="n"&gt;apic&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt; &lt;span class="n"&gt;mtrr&lt;/span&gt; &lt;span class="n"&gt;pge&lt;/span&gt; &lt;span class="n"&gt;mca&lt;/span&gt; &lt;span class="n"&gt;cmov&lt;/span&gt; &lt;span class="n"&gt;pat&lt;/span&gt; &lt;span class="n"&gt;pse36&lt;/span&gt; &lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;mmx&lt;/span&gt; &lt;span class="n"&gt;fxsr&lt;/span&gt; &lt;span class="n"&gt;sse&lt;/span&gt; &lt;span class="n"&gt;sse2&lt;/span&gt; &lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="n"&gt;ht&lt;/span&gt; &lt;span class="n"&gt;syscall&lt;/span&gt; &lt;span class="n"&gt;nx&lt;/span&gt; &lt;span class="n"&gt;pdpe1gb&lt;/span&gt; &lt;span class="n"&gt;rdtscp&lt;/span&gt; &lt;span class="n"&gt;lm&lt;/span&gt; &lt;span class="n"&gt;constant_tsc&lt;/span&gt; &lt;span class="n"&gt;rep_good&lt;/span&gt; &lt;span class="n"&gt;nopl&lt;/span&gt; &lt;span class="n"&gt;xtopology&lt;/span&gt; &lt;span class="n"&gt;nonstop_tsc&lt;/span&gt; &lt;span class="n"&gt;eagerfpu&lt;/span&gt; &lt;span class="n"&gt;pni&lt;/span&gt; &lt;span class="n"&gt;pclmulqdq&lt;/span&gt; &lt;span class="n"&gt;ssse3&lt;/span&gt; &lt;span class="n"&gt;fma&lt;/span&gt; &lt;span class="n"&gt;cx16&lt;/span&gt; &lt;span class="n"&gt;sse4_1&lt;/span&gt; &lt;span class="n"&gt;sse4_2&lt;/span&gt; &lt;span class="n"&gt;x2apic&lt;/span&gt; &lt;span class="n"&gt;movbe&lt;/span&gt; &lt;span class="n"&gt;popcnt&lt;/span&gt; &lt;span class="n"&gt;aes&lt;/span&gt; &lt;span class="n"&gt;xsave&lt;/span&gt; &lt;span class="n"&gt;avx&lt;/span&gt; &lt;span class="n"&gt;f16c&lt;/span&gt; &lt;span class="n"&gt;rdrand&lt;/span&gt; &lt;span class="n"&gt;hypervisor&lt;/span&gt; &lt;span class="n"&gt;lahf_lm&lt;/span&gt; &lt;span class="n"&gt;abm&lt;/span&gt; &lt;span class="n"&gt;fsgsbase&lt;/span&gt; &lt;span class="n"&gt;tsc_adjust&lt;/span&gt; &lt;span class="n"&gt;bmi1&lt;/span&gt; &lt;span class="n"&gt;avx2&lt;/span&gt; &lt;span class="n"&gt;smep&lt;/span&gt; &lt;span class="n"&gt;bmi2&lt;/span&gt; &lt;span class="n"&gt;erms&lt;/span&gt; &lt;span class="n"&gt;xsaveopt&lt;/span&gt;
&lt;span class="n"&gt;bugs&lt;/span&gt;		&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;bogomips&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4600.00&lt;/span&gt;
&lt;span class="n"&gt;clflush&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;cache_alignment&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;address&lt;/span&gt; &lt;span class="n"&gt;sizes&lt;/span&gt;	&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;46&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="n"&gt;physical&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;48&lt;/span&gt; &lt;span class="n"&gt;bits&lt;/span&gt; &lt;span class="n"&gt;virtual&lt;/span&gt;
&lt;span class="n"&gt;power&lt;/span&gt; &lt;span class="n"&gt;management&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="케라스-설치하고-불러오기"&gt;케라스 설치하고 불러오기&lt;/h3&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;# https://keras.io/
!pip install -q keras
import keras
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="케라스는-tensorflow나-theano를-백엔드로-사용한다"&gt;케라스는 TensorFlow나 Theano를 백엔드로 사용한다.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Colaboratory는 구글 제품이기 때문에 텐서플로우를 사용하는 듯 하다.
    &lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;  Using TensorFlow backend.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="케라스의-예제코드-실행"&gt;케라스의 예제코드 실행&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Colaboratory 2018년 3월 5일 현재 멀티 GPU를 지원하지 않는다. 그렇기 때문에 케라스의 multi_gpu_model은 사용할 수 없다.&lt;/li&gt;
  &lt;li&gt;그럼 어떻게 GPU를 사용해야 될까?&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;import tensorflow as tf
from keras.applications import Xception
from keras.utils import multi_gpu_model
import numpy as np

# 원래 예제는 샘플이 1000개 이지만 빨리 돌려보기 위해 100개로 줄였다.
# 가로세로도 224에서 최소 사이즈인 71로 줄였다.
# 원래 예제로 돌리면 메모리와 CPU가 지쳐버려서 끝까지 실행되지 않는다.
num_samples = 100
height = 71
width = 71
num_classes = 100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Instantiate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;"template"&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;recommend&lt;/span&gt; &lt;span class="n"&gt;doing&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;under&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="s1"&gt;'s weights are hosted on CPU memory.
# Otherwise they may end up hosted on a GPU, which would
# complicate weight sharing.
with tf.device('&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cpu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="s1"&gt;'):
    model = Xception(weights=None,
                     input_shape=(height, width, 3),
                     classes=num_classes)

# Replicates the model on 8 GPUs.
# This assumes that your machine has 8 available GPUs.
parallel_model = multi_gpu_model(model, gpus=1)
parallel_model.compile(loss='&lt;/span&gt;&lt;span class="n"&gt;categorical_crossentropy&lt;/span&gt;&lt;span class="s1"&gt;',
                       optimizer='&lt;/span&gt;&lt;span class="n"&gt;rmsprop&lt;/span&gt;&lt;span class="s1"&gt;')

# Generate dummy data.
x = np.random.random((num_samples, height, width, 3))
y = np.random.random((num_samples, num_classes))

# This `fit` call will be distributed on 8 GPUs.
# Since the batch size is 256, each GPU will process 32 samples.
parallel_model.fit(x, y, epochs=20, batch_size=256)

# Save model via the template model (which shares the same weights):
model.save('&lt;/span&gt;&lt;span class="n"&gt;my_model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h5&lt;/span&gt;&lt;span class="s1"&gt;')
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;---------------------------------------------------------------------------

ValueError                                Traceback (most recent call last)

&amp;lt;ipython-input-6-4353c6d558e3&amp;gt; in &amp;lt;module&amp;gt;()
      6 # Replicates the model on 8 GPUs.
      7 # This assumes that your machine has 8 available GPUs.
----&amp;gt; 8 parallel_model = multi_gpu_model(model, gpus=1)
      9 parallel_model.compile(loss='categorical_crossentropy',
     10                        optimizer='rmsprop')


/usr/local/lib/python3.6/dist-packages/keras/utils/training_utils.py in multi_gpu_model(model, gpus)
    121             raise ValueError('For multi-gpu usage to be effective, '
    122                              'call `multi_gpu_model` with `gpus &amp;gt;= 2`. '
--&amp;gt; 123                              'Received: `gpus=%d`' % gpus)
    124         num_gpus = gpus
    125         target_gpu_ids = range(num_gpus)


ValueError: For multi-gpu usage to be effective, call `multi_gpu_model` with `gpus &amp;gt;= 2`. Received: `gpus=1`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="텐서플로우로-해당-장비의-cpu와-gpu정보를-가져온다"&gt;텐서플로우로 해당 장비의 CPU와 GPU정보를 가져온다.&lt;/h3&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;from tensorflow.python.client import device_lib

print(device_lib.list_local_devices())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;[name: "/device:CPU:0"
device_type: "CPU"
memory_limit: 268435456
locality {
}
incarnation: 4221312434634366830
, name: "/device:GPU:0"
device_type: "GPU"
memory_limit: 356515840
locality {
  bus_id: 1
}
incarnation: 11454811533186484289
physical_device_desc: "device: 0, name: Tesla K80, pci bus id: 0000:00:04.0, compute capability: 3.7"
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Instantiate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;"template"&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;recommend&lt;/span&gt; &lt;span class="n"&gt;doing&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;under&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;CPU&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="s1"&gt;'s weights are hosted on CPU memory.
# Otherwise they may end up hosted on a GPU, which would
# complicate weight sharing.
import datetime

start = datetime.datetime.now()
with tf.device('&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gpu&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="s1"&gt;'):
  model = Xception(weights=None,
                   input_shape=(height, width, 3),
                   classes=num_classes)
  model.compile(loss='&lt;/span&gt;&lt;span class="n"&gt;categorical_crossentropy&lt;/span&gt;&lt;span class="s1"&gt;',
                     optimizer='&lt;/span&gt;&lt;span class="n"&gt;rmsprop&lt;/span&gt;&lt;span class="s1"&gt;')

  # Generate dummy data.
  x = np.random.random((num_samples, height, width, 3))
  y = np.random.random((num_samples, num_classes))

  # This `fit` call will be distributed on 8 GPUs.
  # Since the batch size is 256, each GPU will process 32 samples.
  # model.fit(x, y, epochs=10, batch_size=256)
  model.fit(x, y, epochs=3, batch_size=16)

  # Save model via the template model (which shares the same weights):
  model.save('&lt;/span&gt;&lt;span class="n"&gt;my_model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h5&lt;/span&gt;&lt;span class="s1"&gt;')
  
  
end = datetime.datetime.now()
time_delta = end - start
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Epoch 1/3
100/100 [==============================] - 7s 66ms/step - loss: 235.2676
Epoch 2/3
100/100 [==============================] - 1s 11ms/step - loss: 231.3431
Epoch 3/3
100/100 [==============================] - 1s 11ms/step - loss: 228.3584
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;print('GPU 걸린시간: {}초'.format(time_delta.seconds))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;GPU 걸린시간: 29초
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/cpu:0'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Xception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="n"&gt;input_shape&lt;/span&gt;&lt;span class="p"&gt;=(&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;num_classes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'categorical_crossentropy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'rmsprop'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Generate&lt;/span&gt; &lt;span class="n"&gt;dummy&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;random&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;random&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;num_samples&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_classes&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

  &lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="p"&gt;`&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;`&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;distributed&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="n"&gt;GPUs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Since&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="n"&gt;GPU&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;process&lt;/span&gt; &lt;span class="m"&gt;32&lt;/span&gt; &lt;span class="n"&gt;samples&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="p"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Save&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="n"&gt;via&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="k"&gt;model&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;shares&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'my_model.h5'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  
  
&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;time_delta&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Epoch 1/3
100/100 [==============================] - 25s 248ms/step - loss: 271.1356
Epoch 2/3
100/100 [==============================] - 19s 187ms/step - loss: 258.8897
Epoch 3/3
100/100 [==============================] - 19s 186ms/step - loss: 247.9633
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;print('CPU 걸린시간: {}초'.format(time_delta.seconds))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;CPU 걸린시간: 88초
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;결론: 싱글 CPU와 GPU 환경에서 GPU를 사용했을 때 훨씬 빠르게 실행 되는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/GbLRNyTfC1A" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/GbLRNyTfC1A/keras-gpu</link>
                <guid isPermaLink="false">http://corazzon.github.io/keras-gpu</guid>
                <pubDate>2018-03-05T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/keras-gpu</feedburner:origLink></item>

        <item>
                <title>Mac OSX에서 XGBoost 설치하기</title>
                <description>&lt;ul&gt;
  &lt;li&gt;2016년 논문에서 소개 됨 : &lt;a href="http://dmlc.cs.washington.edu/data/pdf/XGBoostArxiv.pdf"&gt;XGBoostArxiv.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;분산형 그래디언트 부스팅 알고리즘&lt;/li&gt;
  &lt;li&gt;결정트리(Decision Tree) 알고리즘의 연장선에 있음&lt;/li&gt;
  &lt;li&gt;여러 개의 결정트리를 묶어 강력한 모델을 만드는 앙상블 방법&lt;/li&gt;
  &lt;li&gt;분류와 회귀에 사용할 수 있음&lt;/li&gt;
  &lt;li&gt;랜덤포레스트와는 다르게 이전 트리의 오차를 보완하는 방식으로 순차적으로 트리를 만듦&lt;/li&gt;
  &lt;li&gt;무작위성이 없으며 강력한 사전 가지치기를 사용&lt;/li&gt;
  &lt;li&gt;캐글 상위 랭커들이 많이 사용하고 있음&lt;/li&gt;
  &lt;li&gt;타이타닉 경진대회에 사용 예제가 있음 : &lt;a href="https://www.kaggle.com/datacanary/xgboost-example-python/"&gt;XGBoost example (Python) Kaggle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="공식문서대로-설치하기"&gt;공식문서대로 설치하기&lt;/h2&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;
pip로는 잘 설치되지 않을 수 있다.
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;일단 github에서 해당 프로젝트를 다운로드 혹은 클론 받아 놓는다.&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
git clone --recursive https://github.com/dmlc/xgboost.git  
&lt;/pre&gt;

&lt;ol&gt;
  &lt;li&gt;일단 설치하려고 보니 clang, make가 필요했다. 이건 xcode설치로 대체했다.&lt;/li&gt;
  &lt;li&gt;그리고 다시 공식문서로 돌아갔다. =&amp;gt; &lt;a href="https://xgboost.readthedocs.io/en/latest/build.html"&gt;Installation Guide — xgboost 0.6 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;brew install gcc –without-multilib 을 설치했다.&lt;/li&gt;
  &lt;li&gt;cd xgboost; cp make/minimum.mk ./config.mk; make -j4 &lt;code class="highlighter-rouge"&gt;이 방법으로 설치하게 되면 멀티스레드를 지원하지 않는다.&lt;/code&gt; 시행착오로 겪은 것을 적은 것이기 때문에 이 글을 보고 설치하는 분은 6번을 참고해 주시면 된다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이렇게 해주었는데도 아래의 오류가 발생했다.&lt;/p&gt;

    &lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt; XGBoostLibraryNotFound: Cannot find XGBoost Library in the candidate path, did you install compilers and run build.sh in root path?
 List of candidates:
 mypath/xgboost/python-package/xgboost/libxgboost.dylib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그래서 공식 문서로 다시 돌아가서 보니 최신버전의 gcc를 사용하고 있다면 make 파일을 변경해 주어야 한단다.
&lt;code class="highlighter-rouge"&gt;아래 방법으로 설치해야 멀티스레드를 지원한다. GPU Support는 공식 문서의 하단을 참고한다.&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class="highlighter-rouge"&gt;cd xgboost; cp make/config.mk ./config.mk; make -j4&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;그리고 다시 빌드 했더니 성공했다.
    &lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;./build.sh
Makefile:31: MAKE [/Applications/Xcode.app/Contents/Developer/usr/bin/make] - checked OK
make: Nothing to be done for `all'.
Successfully build multi-thread xgboost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;마지막으로 &lt;code class="highlighter-rouge"&gt;pip3 install -e python-package&lt;/code&gt;로 설치했다.
    &lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Obtaining file:///Users/corazzon/codes/xgboost/python-package
Requirement already satisfied: numpy in /my_venv_path/lib/python3.6/site-packages (from xgboost==0.6)
Requirement already satisfied: scipy in /my_venv_path/lib/python3.6/site-packages (from xgboost==0.6)
Installing collected packages: xgboost
  Running setup.py develop for xgboost
Successfully installed xgboost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="pip로-겪은-시행착오"&gt;pip로 겪은 시행착오&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;pip로 설치가 되지 않아 다음의 방법으로 설치했다.&lt;/li&gt;
  &lt;li&gt;하지만 아래 방법으로도 설치가 안 될때가 있으니 공식 문서를 참고하는것을 추천한다.&lt;/li&gt;
  &lt;li&gt;장비를 바꾸고 이 방법대로 되지 않아 이 블로그글 앞의 공식문서대로 설치하기로 설치했다.&lt;/li&gt;
  &lt;li&gt;아래 내용은 설치하며 겪은 시행착오로 참고삼아 적어둔다.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/dmlc/xgboost/issues/463"&gt;pip install failure · Issue #463 · dmlc/xgboost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;
git clone --recursive https://github.com/dmlc/xgboost.git  
cd xgboost  
./build.sh
pip3 install -e python-package  
&lt;/pre&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;pip3&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;xgboost&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Name: xgboost
Version: 0.6
Summary: XGBoost Python Package
Home-page: https://github.com/dmlc/xgboost
Author: Hongliang Liu
Author-email: phunter.lau@gmail.com
License: Apache-2.0
Location: /data/xgboost/python-package
Requires: numpy, scipy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치는 되었지만 Jupyter Notebook에서 실행되지 않는 문제가 있었다.&lt;/p&gt;

&lt;p&gt;다음 글을 참고하여 노트북에서 불러오기에 성공했다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/44856105/jupyter-notebook-xgboost-import"&gt;python - Jupyter notebook xgboost import - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="설치-및-동작확인"&gt;설치 및 동작확인&lt;/h2&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;jupyter notebook에서 제대로 설치되었는지 확인해 본다.&lt;/code&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pip&lt;/span&gt;
&lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'install'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'xgboost'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Requirement already satisfied: xgboost in /data/xgboost/python-package
Requirement already satisfied: numpy in /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages (from xgboost)
Requirement already satisfied: scipy in /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages (from xgboost)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;jupyter notebook에서 xgboost를 실행해 본다.&lt;/code&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xgboost&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;xgb&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xgb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XGBClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_estimators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nthread&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1111&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;    XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
           colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,
           max_depth=3, min_child_weight=1, missing=None, n_estimators=15,
           n_jobs=1, nthread=-1, objective='binary:logistic', random_state=0,
           reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=1111,
           silent=True, subsample=1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/0nQerEVC_Zw" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/0nQerEVC_Zw/xgboost-install-mac-osx</link>
                <guid isPermaLink="false">http://corazzon.github.io/xgboost-install-mac-osx</guid>
                <pubDate>2018-01-30T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/xgboost-install-mac-osx</feedburner:origLink></item>

        <item>
                <title>[도서 리뷰]딥러닝 부트캠프 with 케라스</title>
                <description>&lt;p&gt;&lt;code class="highlighter-rouge"&gt;길벗출판사의 개발자 리뷰어 이벤트를 통해 작성된 리뷰입니다.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/3kKkqab.jpg" alt="index_image" width="400px" /&gt;
&lt;img src="https://i.imgur.com/QPEJdJR.jpg" alt="index_image" width="400px" /&gt;&lt;/p&gt;

&lt;p&gt;최근 케라스에 관심을 갖게 된건 캐글 경진대회에서 상위권에 든 사람들이 케라스를 사용한 것을 보고 부터다. 하지만 케라스로 출판된 책이 많지 않아 책으로 정리 된 내용을 학습하고 싶었는데 최근 케라스 책이 몇 권 출판 되었다. 이 책도 그 중 하나로 딥러닝에 대한 이론 소개와 함께 칼텍의 데이터셋을 통해 사물인식을 해볼 수 있는 예제와 삼목게임을 통한 강화학습으로 이루어져 있다. 케라스는 공식문서의 튜토리얼에서 30초만에 시작할 수 있다고 소개하는 만큼 쉽게 시작할 수 있다고 한다. 이 책은 케라스를 통해 딥러닝을 실험해 볼 수 있도록 어려운 수식보다는 코드를 통해 이해할 수 있도록 구성되어 있다. 4장은 이 책에서 가장 많은 비중을 차지하고 있으며 공통 데이터를 구축하고 9층, 16층, 152층의 네트워크로 학습과 예측을 하여 예측 정확도를 비교한다. 2단계 일반화와 자기 학습을  실행해서 모델 평균의 정답률을 올려본다.
그리고 6장에서는 딥러닝을 이용한 강화학습도 다루고 있다. 딥러닝을 시작한지 얼마 되지 않은 초보자로서 딥러닝 내부의 이론과 논문 자료들은 아직도 이해하기 어렵고 복잡하다. 방대한 딥러닝 이론을 깊이있게 알지는 못하더라도 코드를 통해 직접 딥러닝으로 이미지를 판별하고 예측해 볼 수 있다. 모델의 층을 늘려가면서 정답률을 올려볼 수 있는 예제를 돌려보면 케라스의 활용방법에 대해서는 어느정도 이해할 수 있는 책이다.
예제의 소스코드는 파이썬2로 작성되어 있으며 백엔드로는 Theano를 사용한다. 또 GPU를 통해 학습한다는 것을 전제로 하고 있기 때문에 CPU환경에서 돌리려면 성능을 비롯한 제약이 있다. 케라스를 학습하는 것 뿐만 아니라 케라스를 통해 무언가를 구현하고 직접 실험해 보고자 하는 목적에 충실한 책이다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/dP3iaKer.jpg" alt="index_image" width="500px" /&gt;
&lt;img src="https://i.imgur.com/sUi9mRar.jpg" alt="index_image" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;그리고 아래는 책을 읽으며 정리한 내용이다.&lt;/p&gt;

&lt;h3 id="1장"&gt;1장&lt;/h3&gt;

&lt;p&gt;1장에서는 딥러닝의 성과로 시작한다. 음성인식의 경우 딥러닝을 사용함으로 과거에 비해 오답률이 20~30% 낮아졌다고 한다. 
이 책에서는 이미지의 클래스 분류, 물체 검출, 강화학습을 다룬다. 이미지처리에서는 사진 속에 있는 사물을 검출하는 물체 검출을 다루며 엑스레이에서 암세포의 위치와 형태를 예측하는 것도 할 수 있다.
데이터를 다룰 때 예측의 정확도를 높이는 데이터의 확장, 전처리에 대한 사전처리 기법을 다룬다.
그리고 이 책에서 다루는 데이터셋은 칼텍에서 제공하는 머신러닝 이미지 Caltech 101을 사용한다.
그리고 이 이미지들은 101개의 카테고리로 분류하여 각각의 레이블을 붙여놓았다.&lt;/p&gt;

&lt;p&gt;케라스는 Theano, 텐서플로우용 라이브러리로 간단하게 딥러닝을 실행할 수 있다.&lt;/p&gt;

&lt;p&gt;그리고 GPU를 활용할 수 있는 방법에 대한 안내도 있다. GPU는 3차원 그래픽 계산을 처리하는 프로세서이지만 딥러닝의 방대한 행렬연산을 수행할 때 학습과 예측에 걸리는 시간을 10배 이상 줄여줄 수 있다. 여기에서는 게임용PC를 딥러닝용으로 셋팅하는 방법에 대해서도 소개하는데 우분투설치와 셋팅 방법까지 소개하고 있다.&lt;/p&gt;

&lt;h3 id="2장-네트워크의-구성"&gt;2장 네트워크의 구성&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/3dUUTcL.jpg" alt="chapter02" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/wE3zOQZ.jpg" alt="chapter02" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/yme2EBc.jpg" alt="chapter02" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;2장은 네트워크 구성으로 이미지 인식 분야에서 이용되는 네트워크와 층의 기본 구조를 설명한다.
FFNN, FNN, CNN을 합성곱 이미지와 함께 설명해 준다.&lt;/p&gt;

&lt;h3 id="3장"&gt;3장&lt;/h3&gt;
&lt;p&gt;3장은 기본 용어로 과학습을 제어하여 예측정확도를 높이는 방법을 설명한다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/UsgvWFO.jpg" alt="chapter03" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/FIXnUEz.jpg" alt="chapter03" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;1) 딥러닝에는 입력데이터와 그 입력데이터의 지도학습 데이터가 있으며 예측 된 출력 데이터와 지도 학습 데이터의 오차를 이용하여 각 층의 가중치를 업데이트 해서 최적의 가중치를 구한다.&lt;/p&gt;

&lt;p&gt;2) 활성화 함수는 뇌의 시냅스가 어떤 임계값을 초과하면 활성화하는 것처럼 움직임을 모방하기 때문에 활성화 함수(전달 함수 또는 출력 함수)라고도 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/OKMlKG1.jpg" alt="chapter03" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;3) 손실문제는 예측한 출력 데이터와 지도 학습 데이터를 비교하여 오차를 계산하는 함수다. 여기에서는 평균 제곱 오차(mean squared error), 크로스 엔트로피(cross-entropy)는 클래스를 분류하는 오차함수를 소개한다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/T6gQvjG.jpg" alt="chapter03" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;4) 확률적 경사 하강법(Stochastic Gradient Descent, SGD)은 가중치w에 대한 오차 E의 경사를 구해 경사가 양의 부호이면 w를 음의 방향으로 업데이트 하고 반대로 경사가 음의 부호면 w를 양의 방향으로 업데이트 한다. 모멘텀은 가중치의 업데이트양(벡터)이 이전 가중치의 업데이트양(벡터)과 방향이 크게 변하지 않게 하는 기능이다. 예를 들어 자동차의 핸들을 급하게 크게 틀어도 타이어의 각도는 서서히 변하는 것과 같은 이치다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/C8qQPlj.jpg" alt="chapter03" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;5) 오차역전파법(back propagation) 출력층에서 역방향으로 진행해서 오차 신호를 입력층 쪽으로 점차 전파하여 가는 산출방법이다.&lt;/p&gt;

&lt;p&gt;6) 트레이닝 데이터셋에 특화 된 파라미터가 나오는 것을 과잉 적합 또는 과학습이라 한다.
이를 통제하기 위해 K분할 교차 검증, 홀드아웃 검증을 사용한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;정규화 :  딥러닝 네트워크에는 많은 가중치(파라미터)가 있다. 학습할 때 이 파라미터 값에 제약을 주어서 과학습을 억제하는 방법을 정규화라고 한다.
정규화 중 하나로 가중치 감쇠 방법이 있는데 기존 손실 함수에 가중치의 제곱합을 더한 것을 새로운 손실 함으로 한다. 손실 함수의 값이 작을 수록 가중치를 업데이트하는데 가중치를 업데이트 할 때 각 가중치의 값이 극단적으로 큰 값 또는 작은 값을 갖지 않도록 파라미터에 제약을 가하는 방법이다.&lt;/li&gt;
  &lt;li&gt;드롭아웃 : 층의 유닛을 드롭아웃하면서 학습하는 것으로 과학습을 억제하는 방법이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;7) 데이터 확장과 전처리 
데이터 확장은 트레이닝 데이터셋을 기초로 변형된 데이터셋을 만들어 데이터의 양을 증가시키다.
트레이닝 데이터셋과 테스트 데이터셋이 한쪽으로 치우쳐져 있다면 전처리를 해서 보정할 수 있다. 트레이닝 데이터셋에서 하는 전처리는 테스트 데이터셋에서도 해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/X1qG3qI.jpg" alt="chapter03" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;8) 사전 학습된 모델
사전 학습된 모델을 이용하는 바법을 전이 학습이라고 한다.
파인튜닝은 사전 학습된 모델의 가중치를 신경망 가중치의 초깃값으로 설정하고, 새로운 트레이닝 데이터셋을 사용하여 재학습하는 방법이다. 파인튜닝을 하면 작은 에폭 수로도 높은 성능을 얻을 수 있다.&lt;/p&gt;

&lt;p&gt;9) 학습 계수 조정&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;AdaGrad&lt;/li&gt;
  &lt;li&gt;RMSProp&lt;/li&gt;
  &lt;li&gt;Adam&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="4장-이미지-클래스의-분류"&gt;4장 이미지 클래스의 분류&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/obJBpX4.jpg" alt="chapter04" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/S3MDcFf.jpg" alt="chapter04" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/aoVGfvj.jpg" alt="chapter04" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;이 책에서 가장 많은 비중을 차지하고 있는 챕터로 실제 딥러닝PC를 사용해 학습과 예측을 하는 것을 설명한다. 공통 데이터를 구축한 후 9층, 16층, 152층의 네트워크로 학습과 예측을 실행하여 예측의 정확도를 비교한다. CUDA환경에서 실행해 보는 것을 가정하고 있기 때문에 환경이 다르면 성능에 제약이 있고 사소하지만 가상환경 설정 내용이 pip freeze 되어 있으면 구성이 좀 더 편할 거 같다. 그리고 imagemagicK 같은 일부 라이브러리에 대한 설치 안내가 좀 부족한 편이다. 백엔드로 돌아가는 텐서플로우와 Theano에 대한 버전도 맞춰주어야 하는 데 환경설정에 관련 된 부분이 좀 더 친절했으면 하는 아쉬움이 있다.&lt;/p&gt;

&lt;h3 id="5장-물체-검출--26층의-네트워크"&gt;5장 물체 검출 : 26층의 네트워크&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/ZMvlSJj.jpg" alt="chapter05" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/kvFEivW.jpg" alt="chapter06" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;Yolo(You only look once) : 물체의 의치, 크기, 종류 예측에 사용되며 동영상에서 실시간으로 물체를 검출하는 기능도 있지만 이 책에서는 정지 이미지에 물체를 검출하는 기능을 사용한다. 신경망을 이용하는 물체 검출에는 R-CNN과 Fast R-CNN이 있다. Yolo처럼 물체 검출 성능이 있고 R-CNN의 1000배, Fast R-CNN의 100배 정도 고속으로 처리할 수 있다고 알려져 있다.&lt;/p&gt;

&lt;h3 id="6장-강화-학습--삼목-게임에-강한-컴퓨터-키우기"&gt;6장 강화 학습 : 삼목 게임에 강한 컴퓨터 키우기&lt;/h3&gt;

&lt;p&gt;강화 학습은 이세돌과 알파고의 바둑대결에서 영국의 구글 딥마인드가 개발한 컴퓨터 바둑 프로그램으로 강화 학습 방법으로 만들었다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Q러닝 : 강화학습에는 각 행동에 지도 학습 데이터가 붙어있지 않다. 지도 학습 데이터 대신에 각 행동에 Q값의 지표를 예측하여 부여한다. 바둑과 장기에서 도중에 한 수는 좋은지 나쁜지 알 수 없지만, 최후에 승리하면 그때까지 둔 일련의 수가 좋다고 생각하게 되는게 강화 학습의 특성이며 지도 학습 데이터를 단순하게 구현할 수 없는 복잡한 행동에서도 학습이 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DQN : Q러닝에서 모든 상태, 행동을 망라할 수는 없지만 딥러닝을 이용하여 근사적인 Q값을 구한 것으로 보상받을 가능성이 높은 다음 한 수를 예상하는 것은 가능하다. Q러닝과 딥러닝을 이용한 모델을 DQN이라 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="정리"&gt;정리&lt;/h2&gt;

&lt;p&gt;케라스에 대한 책이 많지 않아 정리 된 내용을 보고 싶었는데 최근에 출간 된 책으로 케라스를 학습할 수 있었다. 아직 케라스를 많이 사용해 보지는 않았지만 백엔드를 Theano나 텐서플로우를 사용하고 다른 딥러닝 알고리즘에 비해쉽게 사용할 수 있기 때문에 앞으로도 케라스를 계속 사용해 볼 예정이다. 이 책을 통해 케라스의 기본 개념과 딥러닝 이론에 대해 정리할 수 있었다.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/TgQBmzfF9QE" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/TgQBmzfF9QE/review_keras_book</link>
                <guid isPermaLink="false">http://corazzon.github.io/review_keras_book</guid>
                <pubDate>2018-01-14T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/review_keras_book</feedburner:origLink></item>

        <item>
                <title>Mac OSX에서 NLTK Data 설치하기</title>
                <description>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/kjInASI9GGE" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h1 id="mac-osx에서-nltk-data-설치하기"&gt;Mac OSX에서 &lt;a href="http://www.nltk.org/nltk_data/"&gt;NLTK Data&lt;/a&gt; 설치하기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬을 이용한 자연어 처리 툴깃&lt;/li&gt;
  &lt;li&gt;분류, 토큰 화, 형태소 분석, 태깅, 구문 분석 및 의미 추론을 위한 텍스트 처리 라이브러리, WordNet을 제공&lt;/li&gt;
  &lt;li&gt;아나콘다를 사용하면 한 번에 다운로드를 받을 수 있으나, 아나콘다 환경이 아닐 때 직접 설치하려고 하면 CERTIFICATE_VERIFY_FAILED 로 설치가 되지 않는다.&lt;/li&gt;
  &lt;li&gt;nltk.download() 에서 SSL오류가 발생해 설치를 못하고 고생하다 결국 nltk_data 를 일일이 내려받았다.&lt;/li&gt;
  &lt;li&gt;한 번에 받는 방법도 있다. 하지만 그 방법도 SSL 오류가 발생한다.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/nltk/nltk_data"&gt;nltk/nltk_data: NLTK Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;일일이 다운받는 게 귀찮다면 위의 깃헙 패키지 폴더를 nltk_data에 한번에 옮겨놓고 필요한 패키지들의 압축을 해당 위치에서 풀어 사용해도 된다.&lt;/li&gt;
  &lt;li&gt;일단 nltk부터 설치한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;nltk&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;pip3&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;nltk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Name: nltk
Version: 3.2.5
Summary: Natural Language Toolkit
Home-page: http://nltk.org/
Author: Steven Bird
Author-email: stevenbird1@gmail.com
License: Apache License, Version 2.0
Location: /Users/corazzon/codes/jupyter/lib/python3.6/site-packages
Requires: six
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"""At eight o'clock on Thursday morning Arthur didn't feel very good."""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nltk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word_tokenize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tokens&lt;/span&gt; 
&lt;span class="c"&gt;# nltk.download('punkt')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;['At',
 'eight',
 "o'clock",
 'on',
 'Thursday',
 'morning',
 'Arthur',
 'did',
 "n't",
 'feel',
 'very',
 'good',
 '.']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;tagged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nltk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pos_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tagged&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;[('At', 'IN'),
 ('eight', 'CD'),
 ("o'clock", 'NN'),
 ('on', 'IN'),
 ('Thursday', 'NNP'),
 ('morning', 'NN'),
 ('Arthur', 'NNP'),
 ('did', 'VBD'),
 ("n't", 'RB'),
 ('feel', 'VB'),
 ('very', 'RB'),
 ('good', 'JJ'),
 ('.', '.')]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# nltk.download('averaged_perceptron_tagger')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# [nltk_data] Error loading wordnet: &amp;lt;urlopen error [SSL:&lt;/span&gt;
&lt;span class="c"&gt;# [nltk_data]     CERTIFICATE_VERIFY_FAILED] certificate verify failed&lt;/span&gt;
&lt;span class="c"&gt;# [nltk_data]     (_ssl.c:749)&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;# 위와 같은 오류가 나서 스택오버플로우를 검색해 봤더니 SSL 링크가 깨져서 직접 다운로드 받아야 한다고 한다.&lt;/span&gt;
&lt;span class="c"&gt;# 다음의 폴더에 넣어주면 작동을 한다. 첫줄에 있는 Resource에 있는 하위 경로도 같이 맞춰주어야 한다.&lt;/span&gt;
&lt;span class="c"&gt;# **********************************************************************&lt;/span&gt;
&lt;span class="c"&gt;#   Resource 'corpora/wordnet.zip/wordnet/' not found.  Please use&lt;/span&gt;
&lt;span class="c"&gt;#   the NLTK Downloader to obtain the resource:  &amp;gt;&amp;gt;&amp;gt; nltk.download()&lt;/span&gt;
&lt;span class="c"&gt;#   Searched in:&lt;/span&gt;
&lt;span class="c"&gt;#     - '/usr/share/nltk_data'&lt;/span&gt;
&lt;span class="c"&gt;#     - '/usr/local/share/nltk_data'&lt;/span&gt;
&lt;span class="c"&gt;#     - '/usr/lib/nltk_data'&lt;/span&gt;
&lt;span class="c"&gt;#     - '/usr/local/lib/nltk_data'&lt;/span&gt;
&lt;span class="c"&gt;# **********************************************************************&lt;/span&gt;
&lt;span class="c"&gt;#   &amp;gt;&amp;gt;&amp;gt; import nltk&lt;/span&gt;
&lt;span class="c"&gt;#   &amp;gt;&amp;gt;&amp;gt; nltk.download('averaged_perceptron_tagger')&lt;/span&gt;
&lt;span class="c"&gt;# 오류 내용을 보니 다음의 경로에서 파일을 찾을 수 없는 것으로 보인다.&lt;/span&gt;
&lt;span class="c"&gt;# 위의 nltk_data폴더에 아래 경로의 폴더를 만들어 넣어주어야지 읽어올 수 있다.&lt;/span&gt;
&lt;span class="c"&gt;# 오류 로그에 나오는 아래의 경로를 확인해서 다운로드 받은 averaged_perceptron_tagger를 nltk_data/taggers 경로에 넣어준다.&lt;/span&gt;
&lt;span class="c"&gt;#  AP_MODEL_LOC = 'file:'+str(find('taggers/averaged_perceptron_tagger/'+PICKLE))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 다음의 항목을 추가로 설치해야 했으나 링크가 깨져 직접 다운로드 받음&lt;/span&gt;
&lt;span class="c"&gt;# from nltk.corpus import brown&lt;/span&gt;
&lt;span class="c"&gt;# brown.words()&lt;/span&gt;
&lt;span class="c"&gt;# nltk.download('punkt')&lt;/span&gt;
&lt;span class="c"&gt;# nltk.download('averaged_perceptron_tagger')&lt;/span&gt;

&lt;span class="c"&gt;# nltk.download('treebank')&lt;/span&gt;
&lt;span class="c"&gt;# nltk.download('wordnet')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;nltk.download()를 하면 다음과 같은 창과 함께 오류메시지가 출력되고 다운로드가 되지 않는다.
&lt;img src="nltk_download.png" alt="'image'" /&gt;
터미널로 다운로드를 시도해도 같은 오류가 발생한다.&lt;/p&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;$ sudo python -m nltk.downloader -d /usr/local/share/nltk_data all&lt;/code&gt;&lt;/p&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py:125: RuntimeWarning: 'nltk.downloader' found in sys.modules after import of package 'nltk', but prior to execution of 'nltk.downloader'; this may result in unpredictable behaviour
  warn(RuntimeWarning(msg))
[nltk_data] Error loading all: &amp;lt;urlopen error [SSL:
[nltk_data]     CERTIFICATE_VERIFY_FAILED] certificate verify failed
[nltk_data]     (_ssl.c:749)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;링크가 깨져서 http://www.nltk.org/nltk_data/ 에서 직접 다운로드 후 다음의 링크에 넣어 둠&lt;/li&gt;
  &lt;li&gt;nltk_data 경로에 punkt 폴더를 추가해도 읽어오지 못해서 무슨 문제인지 찾아보았더니 tokenizers 폴더를 생성하고 그 안에 punkt를 넣어주어야 로드해 올 수 있다.&lt;/li&gt;
  &lt;li&gt;/usr/local/share/nltk_data/tokenizers/punkt
&lt;a href="https://stackoverflow.com/questions/38916452/nltk-download-ssl-certificate-verify-failed"&gt;NLTK download SSL: Certificate verify failed - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# nltk.download()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="결론"&gt;결론&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;다음의 경로에 nltk_data 폴더를 만든다. &lt;code class="highlighter-rouge"&gt;/usr/local/share/nltk_data/&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;필요한 패키지를 nltk_data에 직접 다운로드 받아 옮겨놔도 동작하는 패키지도 있지만, 위치정보에 맞게 새로운 폴더를 생성하고 다운로드 받은 패키지를 옮겨야 하기도 한다.&lt;/li&gt;
      &lt;li&gt;nltk_data에 패키지를 옮겨도 동작하지 않으면 다음의 github 경로를 참고하여 폴더를 만들어 준다. https://github.com/nltk/nltk_data/tree/gh-pages/packages&lt;/li&gt;
      &lt;li&gt;아니면 위의 깃헙 패키지 폴더를 nltk_data에 한번에 옮겨놓고 필요한 패키지들의 압축을 해당 위치에서 풀어 사용해도 된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/BLdJYaULZdk" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/BLdJYaULZdk/nltk_data_install</link>
                <guid isPermaLink="false">http://corazzon.github.io/nltk_data_install</guid>
                <pubDate>2017-12-11T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/nltk_data_install</feedburner:origLink></item>

        <item>
                <title>scikit-learn 핵심개발자 안드레아 뮐러가 쓴 머신러닝 책 - 파이썬 라이브러리를 활용한 머신러닝</title>
                <description>&lt;h1 id="파이썬-라이브러리를-활용한-머신러닝"&gt;파이썬 라이브러리를 활용한 머신러닝&lt;/h1&gt;

&lt;p&gt;이 리뷰는 한빛미디어의 “나는 리뷰어다” 이벤트를 통해 책을 제공받아 작성했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/jEd50yE.jpg" alt="표지" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;이 책은 싸이킷런의 핵심 개발자가 참여해 집필했다는 것만으로도 매력적으로 다가왔다. 파이썬 머신러닝을 얘기할 때 사이킷런이 핵심을 차지하고 있기 때문에 출간 때부터 눈여겨 왔는데, 한빛미디어의 &lt;code class="highlighter-rouge"&gt;나는 리뷰어다&lt;/code&gt;를 통해 읽을 수 있게 되어 행운이었다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/yttwK1W.jpg" alt="저자역자소개" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;이 책은 그간 여러 경로로 머신러닝을 배워 온 내게 머신러닝의 개념을 머릿속에 정리할 수 있도록 도움을 주었다.&lt;/p&gt;

&lt;p&gt;또 그동안 읽었던 머신러닝 관련 책들에 있는 수식들은 수포자인 내게 자연스럽게 위축되고 갑자기 머릿속이 하얗게 타버리는 경험을 주었다. 하지만 이 책은 어려운 수식 대신 친절한 코드로 그 설명을 대신하고 있다. 
어려운 수식을 이해하고 있지 못하더라도 싸이킷런에 구현 된 코드 몇 줄이면 머신러닝을 그럴듯 하게 구현하고 비교/실험해 볼 수 있다.&lt;/p&gt;

&lt;p&gt;게다가 소스코드는 깃헙 저장소에 친절하게 한글로 번역되어 공개되어 있다. 그리고 역자의 블로그를 통해서 2장까지 무료로 읽어볼 수 있도록 공개 되어 있기도 하다.&lt;/p&gt;

&lt;p&gt;이 책의 저자는 mglearn이라는 이 책을 위한 라이브러리를 만들어 그래프나 데이터 적재와 관련한 세세한 코드를 일일이 쓰지 않아도 되게끔 유틸리티 함수를 만들기 까지 했다. 이 라이브러리와 함께 친절한 설명은 싸이킷런을 처음 시작하는 초보자들에게 진입장벽을 낮춰주려는 노력이 보이는 책이다.&lt;/p&gt;

&lt;p&gt;그리고 대부분의 데이터는 싸이킷런에 내장된 데이터셋을 사용했다. 그래서 대부분 import만으로 데이터를 로드해서 사용할 수 있도록 구성되어 있다.&lt;/p&gt;

&lt;p&gt;기술서적을 읽을 때 코드를 실행해 보지 않고 눈으로만 읽으면 잘 이해가 되지 않는 편인데 이 책은 친절하게 소스코드 주석도 번역이 되어 있어 소스코드를 실행해 보는 것만으로도 쉽게 이해할 수 있도록 구성되어있다. 그래서 책을 읽기 전에 소스코드를 먼저 실행해 보는 것만으로도 책의 흐름을 잡는데 도움이 되었다. 또, 다양한 머신러닝의 여러 알고리즘을 비교해볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/IB20XjE.jpg" alt="텍스트다루기목차" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;그리고 7장의 텍스트데이터 다루기에서는 KoNLPy를 사용한 영화분석을 별도로 추가해서 한국어 텍스트를 다루는 방법까지 친절하게 안내되어 있다.&lt;/p&gt;

&lt;h3 id="지도-학습"&gt;지도 학습&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/FUAJ8xs.jpg" alt="지도 학습요약" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;이 책을 구매하지 않더라도 지도 학습까지는 역자의 블로그에 공개가 되어 있어 무료로 볼 수 있다. 2장은 지도 학습과 관련 된 모델의 장단점을 자세한 코드와 결과로 비교해 볼 수가 있다. 또 싸이킷런에 내장되어 있는 데이터셋을 통해 다양한 모델을 실험해 볼 수 있어 분류 데이터인지 회귀 데이터인지에 따라 어떤 모델을 사용해야 할지 비교해 볼 수가 있다.&lt;/p&gt;

&lt;h3 id="비지도-학습"&gt;비지도 학습&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/ZnBl8PP.jpg" alt="PCA" height="500" /&gt;&lt;/p&gt;

&lt;p&gt;비지도 학습에서는 PCA와 t-SNE를 사용한 결과비교를 얼굴데이터셋을 통해 비교해 볼 수 있도록 설명하고 있다. 그리고 이미지 데이터셋을 다루는 방법과   다양한 알고리즘에 대한 비교를 해준다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/p0kVzzX.jpg" alt="비지도 학습요약" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;레이블이 없는 데이터를 다루는 비지도 학습에서는 분해, 매니폴드, 군집을 통해 데이터의 이해도를 높일 수 있는 방법을 제시해 준다.&lt;/p&gt;

&lt;h3 id="범주형-변수-다루기-one-hot-encoding"&gt;범주형 변수 다루기 One-hot-Encoding&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/PH2JTXY.jpg" alt="범주형변수" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;머신러닝에서 피처엔지니어링을 할 때 범주형 변수를 다루는 원핫인코딩을 이해하기 쉽게 자세히 설명하고 있다. 처음 캐글에서 타이타닉 예제를 다루며 원핫인코딩을 알게 되었는데 get_dummies와 OneHotEncoder를 통해 원핫인코딩을 하는 방법 또한 소개하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/kO996Yb.jpg" alt="원핫인코딩" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;원핫인코딩을 자전거 대여 데이터셋의 시간-요일에 적용한 예&lt;/p&gt;

&lt;h3 id="한국어-자연어처리-konlpy"&gt;한국어 자연어처리 KoNLPy&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.imgur.com/X4PfPqp.jpg" alt="KoNLPy" width="500px" /&gt;&lt;/p&gt;

&lt;p&gt;NLTK만으로는 한국어 데이터를 다루기 어려운데 부록으로 한국어 자연어처리 패키지인 KoNLPy부분까지 다루고 있다. 그리고 네이버 영화리뷰 20만개를 묶은 말뭉치 데이터를 활용하여 학습시키는 것도 알려주고 있다.&lt;/p&gt;

&lt;p&gt;이 책은 머신러닝(기계학습)을 처음 시작하는 사람들에게 머신러닝이 어떤 것이고 지도 학습과 비지도 학습의 차이, 레이블이란 무엇이고 레이블이 있고 없고의 차이를 알게 해준다. 그리고 데이터셋에 따라 어떤 모델을 사용하고 평가하는 방법, 그리고 성능향상을 위한 방법도 제시하고 있다. 또 파이프라인을 통해 교차검증을 사용하여 모델을 평가하고 그리드서치를 사용해서 매개변수를 엮는 과정에서 발생할 수 있는 실수를 줄여줄 수 있도록 안내하고 있다.&lt;/p&gt;

&lt;p&gt;다만, 이 책은 입문서이고 제목에서 라이브러리를 활용한 머신러닝이기 때문에 책 소개에서처럼 밑바닥부터 다루고 있지 않다. 그래서 각 알고리즘의 구현철학이나 내부 동작에 대해서는 좀 더 깊게 볼 필요가 있다.&lt;/p&gt;

&lt;p&gt;이 책은 머신러닝이라는 큰 그림을 이해하고 문제를 풀기위한 큰 맥락을 제공한다. 그간 여러 경로로 학습하고 이해했던 머신러닝에 대해 정리하고 놓치고 있었던 부분들을 챙겨서 앞으로 학습할 방향을 잡는데 도움이 되었다.&lt;/p&gt;

&lt;h3 id="관련-링크"&gt;관련 링크&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B6119391002"&gt;파이썬 라이브러리를 활용한 머신러닝 - 한빛출판네트워크&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://tensorflow.blog/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D/"&gt;역자 블로그&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/rickiepark/introduction_to_ml_with_python"&gt;역자 github 주피터 노트북과 코드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/LF2gNz6BArs" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/LF2gNz6BArs/review_ml_with_python_by_andreas</link>
                <guid isPermaLink="false">http://corazzon.github.io/review_ml_with_python_by_andreas</guid>
                <pubDate>2017-11-26T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/review_ml_with_python_by_andreas</feedburner:origLink></item>

        <item>
                <title>MAC OSX에서 konlpy 설치 시 ImportError: No module named 'jpype' 오류 해결</title>
                <description>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/yUImPXmYO7M" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://konlpy.org/ko/v0.4.3/install/"&gt;설치하기 — KoNLPy 0.4.3 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 일단, 내 MAC OSX 버전은 다음과 같다.&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;platform&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"""
system: &lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;s
mac_ver: &lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;s
"""&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="n"&gt;platform&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;platform&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mac_ver&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;system: Darwin
mac_ver: ('10.13.1', ('', '', ''), 'x86_64')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;konlpy를 &lt;code class="highlighter-rouge"&gt;pip install konlpy&lt;/code&gt;로 설치하고 노트북에서 import 했더니 다음과 같은 오류가 나서 몇 시간을 헤멨다.&lt;/p&gt;

&lt;h2 id="jpype"&gt;JPype&lt;/h2&gt;
&lt;p&gt;JPype는 Python 프로그램이 Java 클래스 라이브러리에 접근하고자 할 때 필요하다고 한다.&lt;/p&gt;

&lt;h2 id="1-pip-install-konlpy-로-깔끔하게-설치가-완료된-듯-하여-노트북에서-konlpy-를-불러왔다"&gt;1. pip install konlpy 로 깔끔하게 설치가 완료된 듯 하여, 노트북에서 konlpy 를 불러왔다.&lt;/h2&gt;

&lt;p&gt;import konlpy&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nb"&gt;ImportError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s"&gt;'jpype'&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="2-jpype-가-필요한-듯-하여-이-때부터-설치-삽질이-시작-되었다"&gt;2. jpype 가 필요한 듯 하여, 이 때부터 설치 삽질이 시작 되었다.&lt;/h2&gt;

&lt;p&gt;pip install jpype를 하니 오류가 나서 찾아보니 공식문서에 소스코드를 받아 직접 설치하는 방법이 나와서 깃헙에서 해당 소스를 다운로드 받았다.&lt;br /&gt;
처음에는 깃헙에 있는 소스코드를 다운로드 받아 설치했는데, 설치가 잘 되지 않아 최신소스 보다는 배포판이 좀 더 안정적이지 않을까 하여, 배포판을 다시 다운로드 받았다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://pypi.python.org/pypi/JPype1"&gt;JPype1 0.6.2 : Python Package Index&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;github : &lt;a href="https://github.com/originell/jpype"&gt;originell/jpype: Friendly jpype fork with focus on easy installation.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;공식 문서 : &lt;a href="http://jpype.readthedocs.io/en/latest/index.html"&gt;JPype documentation — JPype 0.6.2 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="3-자바-설치-및-환경변수-설정"&gt;3. 자바 설치 및 환경변수 설정&lt;/h2&gt;
&lt;p&gt;여러 문서를 뒤적거리다가 자바 jdk 버전문제인가 생각이 되어 설치 된 버전을 삭제하고 예전 버전을 설치해 주고 환경변수까지 설정해 주었다.&lt;br /&gt;
그리고 맥에서 레거시용 자바를 다운로드 받을 수 있는 페이지가 있어서 해당 페이지에 가서 해당 자바를 다운로드 받아 설치했다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://support.apple.com/kb/dl1572?locale=ko_KR"&gt;다운로드 - OS X용 Java 2015-001&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;터미널에서 java -version 으로 설치 정보를 봤다.
    &lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;java version "1.8.0_151"
Java(TM) SE Runtime Environment (build 1.8.0_151-b12)
Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="4-그런데도-python-setuppy-build를-해주었더니-다음과-같은-오류가-나왔다"&gt;4. 그런데도 &lt;code class="highlighter-rouge"&gt;python setup.py build&lt;/code&gt;를 해주었더니 다음과 같은 오류가 나왔다.&lt;/h2&gt;

&lt;div class="language-c highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nl"&gt;cc1plus:&lt;/span&gt; &lt;span class="nl"&gt;warning:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wstrict&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;prototypes&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;valid&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ObjC&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;included&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jpype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;native&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jp_method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Library&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Java&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;JavaVirtualMachines&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jdk1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;_151&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jdk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Contents&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;jni&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fatal&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stdio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;
 &lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;^~~~~~~~~&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="5-c나-c과-관련-된-문제는-xcode-관련-문제일거-같아-다음의-명령어로-다시-설치를-해주었다"&gt;5. c나 c++과 관련 된 문제는 Xcode 관련 문제일거 같아 다음의 명령어로 다시 설치를 해주었다.&lt;/h2&gt;
&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다시 다운로드 받은 프로젝트 폴더로 갔다.&lt;/p&gt;
&lt;div class="language-sh highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python setup.py build
&lt;span class="nv"&gt;$ &lt;/span&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id="설치-성공"&gt;설치 성공!&lt;/h2&gt;

&lt;p&gt;pip install JPype1-py3 로 설치해도 잘 된다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;konlpy.tag&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Kkma&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;konlpy.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;
&lt;span class="n"&gt;kkma&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Kkma&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kkma&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sentences&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;u'JPype 설치 너무 까다롭습니다. 몇 시간을 날렸어요.'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;['JPype 설치 너무 까다롭습니다.', '몇 시간을 날렸어요.']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kkma&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nouns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;u'JPype 설치 너무 까다롭습니다. 몇 시간을 날렸어요.'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;['설치', '시간']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kkma&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;u'JPype 설치 너무 까다롭습니다. 몇 시간을 날렸어요.'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;[('JPype', 'OL'), ('설치', 'NNG'), ('너무', 'MAG'), ('까다롭', 'VA'), ('습니다', 'EFN'), ('.', 'SF'), ('몇', 'MDT'), ('시간', 'NNG'), ('을', 'JKO'), ('날리', 'VV'), ('었', 'EPT'), ('어요', 'EFN'), ('.', 'SF')]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/k6L2rmX4rFM" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/k6L2rmX4rFM/Konlpy_JPype_install_struggle</link>
                <guid isPermaLink="false">http://corazzon.github.io/Konlpy_JPype_install_struggle</guid>
                <pubDate>2017-11-22T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/Konlpy_JPype_install_struggle</feedburner:origLink></item>

        <item>
                <title>캐글러 설문조사의 응답을 파이썬 데이터 시각화 툴로 살펴보기</title>
                <description>&lt;ul&gt;
  &lt;li&gt;캐글을 시작한지 두 달정도 된 초보자로, 이 설문조사의 결과를 바탕으로 데이터사이언스와 머신러닝과 관련 된 인사이트를 얻어볼 수 있지 않을까 가설을 세워본다.&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5hzB54yFvnw" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;p&gt;참고 URL :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.kaggle.com/rounakbanik/data-science-faq"&gt;Data Science FAQ  Kaggle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.kaggle.com/ash316/novice-to-grandmaster"&gt;Novice to Grandmaster Kaggle&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="캐글러를-대상으로-한-설문조사"&gt;캐글러를 대상으로 한 설문조사&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;설문기간 : 2017년 8월 7일부터 8월 25일까지&lt;/li&gt;
  &lt;li&gt;평균 응답 시간은 16.4 분&lt;/li&gt;
  &lt;li&gt;171 개 국가 및 지역에서 16,716 명의 응답자&lt;/li&gt;
  &lt;li&gt;특정 국가 또는 지역에서 응답자가 50 명 미만인 경우 익명을 위해 그룹을 ‘기타’그룹으로 그룹화&lt;/li&gt;
  &lt;li&gt;설문 조사 시스템에 신고 된 응답자를 스팸으로 분류하거나 취업 상태에 관한 질문에 답변하지 않은 응답자는 제외(이 질문은 첫 번째 필수 질문이기에 응답하지 않으면 응답자가 다섯 번째 질문 이후 진행되지 않음)&lt;/li&gt;
  &lt;li&gt;대부분의 응답자는 이메일 목록, 토론 포럼 및 소셜 미디어 Kaggle 채널을 통해 설문을 알게 됨&lt;/li&gt;
  &lt;li&gt;급여데이터는 일부 통화에 대해서만 받고 해당 되는 통화에 기준하여 작성하도록 함&lt;/li&gt;
  &lt;li&gt;미국 달러로 급여를 계산할 수 있도록 USD로 환산 한 csv를 제공&lt;/li&gt;
  &lt;li&gt;질문은 선택적&lt;/li&gt;
  &lt;li&gt;모든 질문이 모든 응답자에게 보여지는 것은 아님&lt;/li&gt;
  &lt;li&gt;취업을 한 사람과 학생을 나누어 다른 질문을 함&lt;/li&gt;
  &lt;li&gt;응답자의 신원을 보호하기 위해 주관식과 객관식 파일로 분리&lt;/li&gt;
  &lt;li&gt;객관식과 자유 형식 응답을 맞추기 위한 키를 제공하지 않음&lt;/li&gt;
  &lt;li&gt;주관식 응답은 같은 행에 나타나는 응답이 반드시 동일한 설문 조사자가 제공하지 않도록 열 단위로 무작위 지정&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="데이터-파일"&gt;데이터 파일&lt;/h1&gt;
&lt;p&gt;5 개의 데이터 파일을 제공&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;schema.csv : 설문 스키마가있는 CSV 파일입니다. 이 스키마에는 multipleChoiceResponses.csv 및 freeformResponses.csv의 각 열 이름에 해당하는 질문이 포함되어 있습니다.&lt;/li&gt;
  &lt;li&gt;multipleChoiceResponses.csv : 객관식 및 순위 질문에 대한 응답자의 답변, 각 행이 한 응답자의 응답&lt;/li&gt;
  &lt;li&gt;freeformResponses.csv : Kaggle의 설문 조사 질문에 대한 응답자의 주관식 답변입니다. 임의로 지정되어 각 행이 같은 응답자를 나타내지 않음&lt;/li&gt;
  &lt;li&gt;conversionRates.csv : R 패키지 “quantmod”에서 2017 년 9 월 14 일에 액세스 한 통화 변환율 (USD)&lt;/li&gt;
  &lt;li&gt;RespondentTypeREADME.txt : schema.csv 파일의 “Asked”열에 응답을 디코딩하는 스키마입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 노트북 안에서 그래프를 그리기 위해&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="c"&gt;# Import the standard Python Scientific Libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;stats&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;

&lt;span class="c"&gt;# Suppress Deprecation and Incorrect Usage Warnings &lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt;
&lt;span class="n"&gt;warnings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filterwarnings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'ignore'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;question&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data/schema.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(290, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Question&lt;/th&gt;
      &lt;th&gt;Asked&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;285&lt;/th&gt;
      &lt;td&gt;JobFactorRemote&lt;/td&gt;
      &lt;td&gt;How are you assessing potential job opportunit...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;286&lt;/th&gt;
      &lt;td&gt;JobFactorIndustry&lt;/td&gt;
      &lt;td&gt;How are you assessing potential job opportunit...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;287&lt;/th&gt;
      &lt;td&gt;JobFactorLeaderReputation&lt;/td&gt;
      &lt;td&gt;How are you assessing potential job opportunit...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;288&lt;/th&gt;
      &lt;td&gt;JobFactorDiversity&lt;/td&gt;
      &lt;td&gt;How are you assessing potential job opportunit...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;289&lt;/th&gt;
      &lt;td&gt;JobFactorPublishingOpportunity&lt;/td&gt;
      &lt;td&gt;How are you assessing potential job opportunit...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 판다스로 선다형 객관식 문제에 대한 응답을 가져 옴&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data/multipleChoiceResponses.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                  &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"ISO-8859-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;low_memory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(16716, 228)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Index(['GenderSelect', 'Country', 'Age', 'EmploymentStatus', 'StudentStatus',
       'LearningDataScience', 'CodeWriter', 'CareerSwitcher',
       'CurrentJobTitleSelect', 'TitleFit',
       ...
       'JobFactorExperienceLevel', 'JobFactorDepartment', 'JobFactorTitle',
       'JobFactorCompanyFunding', 'JobFactorImpact', 'JobFactorRemote',
       'JobFactorIndustry', 'JobFactorLeaderReputation', 'JobFactorDiversity',
       'JobFactorPublishingOpportunity'],
      dtype='object', length=228)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;GenderSelect&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;Age&lt;/th&gt;
      &lt;th&gt;EmploymentStatus&lt;/th&gt;
      &lt;th&gt;StudentStatus&lt;/th&gt;
      &lt;th&gt;LearningDataScience&lt;/th&gt;
      &lt;th&gt;CodeWriter&lt;/th&gt;
      &lt;th&gt;CareerSwitcher&lt;/th&gt;
      &lt;th&gt;CurrentJobTitleSelect&lt;/th&gt;
      &lt;th&gt;TitleFit&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;JobFactorExperienceLevel&lt;/th&gt;
      &lt;th&gt;JobFactorDepartment&lt;/th&gt;
      &lt;th&gt;JobFactorTitle&lt;/th&gt;
      &lt;th&gt;JobFactorCompanyFunding&lt;/th&gt;
      &lt;th&gt;JobFactorImpact&lt;/th&gt;
      &lt;th&gt;JobFactorRemote&lt;/th&gt;
      &lt;th&gt;JobFactorIndustry&lt;/th&gt;
      &lt;th&gt;JobFactorLeaderReputation&lt;/th&gt;
      &lt;th&gt;JobFactorDiversity&lt;/th&gt;
      &lt;th&gt;JobFactorPublishingOpportunity&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Non-binary, genderqueer, or gender non-conforming&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;DBA/Database Engineer&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;30.0&lt;/td&gt;
      &lt;td&gt;Not employed, but looking for work&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Somewhat important&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;Canada&lt;/td&gt;
      &lt;td&gt;28.0&lt;/td&gt;
      &lt;td&gt;Not employed, but looking for work&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;56.0&lt;/td&gt;
      &lt;td&gt;Independent contractor, freelancer, or self-em...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Operations Research Practitioner&lt;/td&gt;
      &lt;td&gt;Poorly&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;Taiwan&lt;/td&gt;
      &lt;td&gt;38.0&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Computer Scientist&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;Brazil&lt;/td&gt;
      &lt;td&gt;46.0&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Data Scientist&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;35.0&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Computer Scientist&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;22.0&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;Software Developer/Software Engineer&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Somewhat important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Somewhat important&lt;/td&gt;
      &lt;td&gt;Somewhat important&lt;/td&gt;
      &lt;td&gt;Not important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Very Important&lt;/td&gt;
      &lt;td&gt;Somewhat important&lt;/td&gt;
      &lt;td&gt;Somewhat important&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;43.0&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Business Analyst&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;33.0&lt;/td&gt;
      &lt;td&gt;Employed full-time&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;Software Developer/Software Engineer&lt;/td&gt;
      &lt;td&gt;Fine&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;10 rows × 228 columns&lt;/p&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# missingno는 NaN 데이터들에 대해 시각화를 해준다.&lt;/span&gt;
&lt;span class="c"&gt;# NaN 데이터의 컬럼이 많아 아래 그래프만으로는 내용을 파악하기 어렵다.&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;missingno&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;msno&lt;/span&gt;

&lt;span class="n"&gt;msno&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_7_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;16,716 명의 데이터와 228개의 선다형 객관식문제와 62개의 주관식 질문에 대한 응답이다. (총 290개의 질문) 응답하지 않은 질문이 많음&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="설문통계"&gt;설문통계&lt;/h1&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 성별&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x113bfa5f8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_9_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;여성보다는 남성의 비율이 훨씬 높은 편이다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 국가별 응답수&lt;/span&gt;
&lt;span class="n"&gt;con_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Country'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c"&gt;# print(con_df)&lt;/span&gt;
&lt;span class="c"&gt;# 'country' 컬럼을 인덱스로 지정해 주고&lt;/span&gt;
&lt;span class="n"&gt;con_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'국가'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;con_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;
&lt;span class="c"&gt;# 컬럼의 순서대로 응답 수, 국가로 컬럼명을 지정해 줌&lt;/span&gt;
&lt;span class="n"&gt;con_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'응답 수'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'국가'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c"&gt;# index 컬럼을 삭제하고 순위를 알기위해 reset_index()를 해준다.&lt;/span&gt;
&lt;span class="c"&gt;# 우리 나라는 18위이고 전체 52개국에서 참여했지만 20위까지만 본다. &lt;/span&gt;
&lt;span class="n"&gt;con_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;con_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;con_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;응답 수&lt;/th&gt;
      &lt;th&gt;국가&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;4197&lt;/td&gt;
      &lt;td&gt;United States&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2704&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1023&lt;/td&gt;
      &lt;td&gt;Other&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;578&lt;/td&gt;
      &lt;td&gt;Russia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;535&lt;/td&gt;
      &lt;td&gt;United Kingdom&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;471&lt;/td&gt;
      &lt;td&gt;People 's Republic of China&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;465&lt;/td&gt;
      &lt;td&gt;Brazil&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;460&lt;/td&gt;
      &lt;td&gt;Germany&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;442&lt;/td&gt;
      &lt;td&gt;France&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;440&lt;/td&gt;
      &lt;td&gt;Canada&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;421&lt;/td&gt;
      &lt;td&gt;Australia&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;320&lt;/td&gt;
      &lt;td&gt;Spain&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;277&lt;/td&gt;
      &lt;td&gt;Japan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;254&lt;/td&gt;
      &lt;td&gt;Taiwan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;Italy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;Netherlands&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;196&lt;/td&gt;
      &lt;td&gt;Ukraine&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;194&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;184&lt;/td&gt;
      &lt;td&gt;Poland&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;184&lt;/td&gt;
      &lt;td&gt;Singapore&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 연령에 대한 정보를 본다.&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;count    16385.000000
mean        32.372841
std         10.473487
min          0.000000
25%         25.000000
50%         30.000000
75%         37.000000
max        100.000000
Name: Age, dtype: float64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x113c21048&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_13_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;응답자의 대부분이 어리며, 
20대부터 급격히 늘어나며, 30대가 가장 많다. 
평균 나이는 32세다.&lt;/p&gt;

&lt;h2 id="학력"&gt;학력&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'FormalEducation'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x1139e3eb8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_16_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;학사 학위를 가진 사람보다 석사 학위를 가지고 있는 사람이 많으며, 박사학위를 가지고 있는 사람들도 많다.&lt;/p&gt;

&lt;h2 id="전공"&gt;전공&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# value_counts 를 사용하면 그룹화 된 데이터의 카운트 값을 보여준다. &lt;/span&gt;
&lt;span class="c"&gt;# normalize=True 옵션을 사용하면, &lt;/span&gt;
&lt;span class="c"&gt;# 해당 데이터가 전체 데이터에서 어느정도의 비율을 차지하는지 알 수 있다.&lt;/span&gt;
&lt;span class="n"&gt;mcq_major_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MajorSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;mcq_major_percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MajorSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mcq_major_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq_major_count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq_major_percent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mcq_major_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'응답 수'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'비율'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;mcq_major_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;응답 수&lt;/th&gt;
      &lt;th&gt;비율&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Computer Science&lt;/th&gt;
      &lt;td&gt;4397&lt;/td&gt;
      &lt;td&gt;0.331074&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Mathematics or statistics&lt;/th&gt;
      &lt;td&gt;2220&lt;/td&gt;
      &lt;td&gt;0.167156&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Engineering (non-computer focused)&lt;/th&gt;
      &lt;td&gt;1339&lt;/td&gt;
      &lt;td&gt;0.100821&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Electrical Engineering&lt;/th&gt;
      &lt;td&gt;1303&lt;/td&gt;
      &lt;td&gt;0.098110&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Other&lt;/th&gt;
      &lt;td&gt;848&lt;/td&gt;
      &lt;td&gt;0.063851&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Physics&lt;/th&gt;
      &lt;td&gt;830&lt;/td&gt;
      &lt;td&gt;0.062495&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Information technology, networking, or system administration&lt;/th&gt;
      &lt;td&gt;693&lt;/td&gt;
      &lt;td&gt;0.052180&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;A social science&lt;/th&gt;
      &lt;td&gt;531&lt;/td&gt;
      &lt;td&gt;0.039982&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Biology&lt;/th&gt;
      &lt;td&gt;274&lt;/td&gt;
      &lt;td&gt;0.020631&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Management information systems&lt;/th&gt;
      &lt;td&gt;237&lt;/td&gt;
      &lt;td&gt;0.017845&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;A humanities discipline&lt;/th&gt;
      &lt;td&gt;198&lt;/td&gt;
      &lt;td&gt;0.014909&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;A health science&lt;/th&gt;
      &lt;td&gt;152&lt;/td&gt;
      &lt;td&gt;0.011445&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Psychology&lt;/th&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;0.010315&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;I never declared a major&lt;/th&gt;
      &lt;td&gt;65&lt;/td&gt;
      &lt;td&gt;0.004894&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Fine arts or performing arts&lt;/th&gt;
      &lt;td&gt;57&lt;/td&gt;
      &lt;td&gt;0.004292&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;컴퓨터 전공자들이 33%로 가장 많으며, 다음으로 수학, 공학, 전기 공학 순이다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 재학중인 사람들의 전공 현황&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'MajorSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x1139f4160&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_21_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;h2 id="취업-여부"&gt;취업 여부&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq_es_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;mcq_es_percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mcq_es_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq_es_count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq_es_percent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mcq_es_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'응답 수'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'비율'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;mcq_es_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;응답 수&lt;/th&gt;
      &lt;th&gt;비율&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Employed full-time&lt;/th&gt;
      &lt;td&gt;10897&lt;/td&gt;
      &lt;td&gt;0.651890&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Not employed, but looking for work&lt;/th&gt;
      &lt;td&gt;2110&lt;/td&gt;
      &lt;td&gt;0.126226&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Independent contractor, freelancer, or self-employed&lt;/th&gt;
      &lt;td&gt;1330&lt;/td&gt;
      &lt;td&gt;0.079564&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Not employed, and not looking for work&lt;/th&gt;
      &lt;td&gt;924&lt;/td&gt;
      &lt;td&gt;0.055276&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Employed part-time&lt;/th&gt;
      &lt;td&gt;917&lt;/td&gt;
      &lt;td&gt;0.054858&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;I prefer not to say&lt;/th&gt;
      &lt;td&gt;420&lt;/td&gt;
      &lt;td&gt;0.025126&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Retired&lt;/th&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;0.007059&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x115e71ba8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_24_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;응답자의 대부분이 65%가 풀타임으로 일하고 있으며, 그 다음으로 구직자가 12%다.&lt;/p&gt;

&lt;h2 id="프로그래밍-경험"&gt;프로그래밍 경험&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;‘Tenure’항목은 데이터사이언스 분야에서 코딩 경험이 얼마나 되는지에 대한 질문이다. 대부분이 5년 미만이며, 특히 1~2년의 경험을 가진 사람들이 많다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Tenure'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x115e83978&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_27_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;korea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Country'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;'South Korea'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'The number of interviewees in Korea: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Korean'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;The number of interviewees in Korea: 194
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_28_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;GenderSelect&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Male&lt;/th&gt;
      &lt;td&gt;156&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Female&lt;/th&gt;
      &lt;td&gt;37&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;A different identity&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Korean'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Text(0.5,1,'Korean')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_30_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ncols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_size_inches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;'Female'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; 
             &lt;span class="n"&gt;norm_hist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color_palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Paired"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'korean Female'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;'Male'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; 
             &lt;span class="n"&gt;norm_hist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color_palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Paired"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'korean Male'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Text(0.5,1,'korean Male')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_31_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'right'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Employment status of the korean'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_32_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'StudentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'StudentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'No'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'StudentStatus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'korean'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_33_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;full_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Employed full-time'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;full_time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;looking_for_job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Not employed, but looking for work'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;looking_for_job&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(10897, 228)
(2110, 228)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/p3msv18FIyQ" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h2 id="자주-묻는-질문-faq"&gt;자주 묻는 질문 FAQ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;초보자들이 묻는 가장 일반적인 질문에 대한 답을 시각화 해본다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="q1-python과-r중-어떤-언어를-배워야-할까요"&gt;Q1. Python과 R중 어떤 언어를 배워야 할까요?&lt;/h3&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'LanguageRecommendationSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x113b5e5c0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_36_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;파이썬을 명확하게 선호하고 있는 것으로 보여지며, 전문가와 강사들이 선호하는 언어를 알아본다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 현재 하고 있는 일&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CurrentJobTitleSelect'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x105b45a58&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_38_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 현재 하고 있는 일에 대한 전체 응답수&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CurrentJobTitleSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()][&lt;/span&gt;&lt;span class="s"&gt;'CurrentJobTitleSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(11830,)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 현재 하고 있는 일에 대한 응답을 해준 사람 중 Python과 R을 사용하는 사람&lt;/span&gt;
&lt;span class="c"&gt;# 응답자들이 실제 업무에서 어떤 언어를 주로 사용하는지 볼 수 있다.&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CurrentJobTitleSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'LanguageRecommendationSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'LanguageRecommendationSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'R'&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'CurrentJobTitleSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'LanguageRecommendationSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(7158, 228)





&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x105b30e80&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_40_2.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;데이터사이언티스트들은 Python을 주로 사용하지만 R을 사용하는 사람들도 제법 된다. 하지만 소프트웨어 개발자들은 Python을 훨씬 더 많이 사용하며, Python보다 R을 더 많이 사용하는 직업군은 통계 학자들이다.&lt;/p&gt;

&lt;h2 id="q2-데이터-사이언스-분야에서-앞으로-크게-주목받을-것은-무엇일까요"&gt;Q2. 데이터 사이언스 분야에서 앞으로 크게 주목받을 것은 무엇일까요?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;관련 분야의 종사자가 아니더라도 빅데이터, 딥러닝, 뉴럴네트워크 같은 용어에 대해 알고 있다. 응답자들이 내년에 가장 흥미로운 기술이 될 것이라 응답한 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="데이터사이언스-툴"&gt;데이터사이언스 툴&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq_ml_tool_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MLToolNextYearSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;mcq_ml_tool_percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MLToolNextYearSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mcq_ml_tool_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq_ml_tool_count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;mcq_ml_tool_percent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;left_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;right_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mcq_ml_tool_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'응답 수'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'비율'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;mcq_ml_tool_df&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;응답 수&lt;/th&gt;
      &lt;th&gt;비율&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;TensorFlow&lt;/th&gt;
      &lt;td&gt;2621&lt;/td&gt;
      &lt;td&gt;0.238316&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;td&gt;1713&lt;/td&gt;
      &lt;td&gt;0.155756&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;td&gt;910&lt;/td&gt;
      &lt;td&gt;0.082742&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Spark / MLlib&lt;/th&gt;
      &lt;td&gt;755&lt;/td&gt;
      &lt;td&gt;0.068649&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Hadoop/Hive/Pig&lt;/th&gt;
      &lt;td&gt;417&lt;/td&gt;
      &lt;td&gt;0.037916&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Other&lt;/th&gt;
      &lt;td&gt;407&lt;/td&gt;
      &lt;td&gt;0.037007&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Amazon Machine Learning&lt;/th&gt;
      &lt;td&gt;392&lt;/td&gt;
      &lt;td&gt;0.035643&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Jupyter notebooks&lt;/th&gt;
      &lt;td&gt;358&lt;/td&gt;
      &lt;td&gt;0.032551&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;I don't plan on learning a new tool/technology&lt;/th&gt;
      &lt;td&gt;341&lt;/td&gt;
      &lt;td&gt;0.031006&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Google Cloud Compute&lt;/th&gt;
      &lt;td&gt;296&lt;/td&gt;
      &lt;td&gt;0.026914&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Amazon Web services&lt;/th&gt;
      &lt;td&gt;273&lt;/td&gt;
      &lt;td&gt;0.024823&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Julia&lt;/th&gt;
      &lt;td&gt;222&lt;/td&gt;
      &lt;td&gt;0.020185&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;DataRobot&lt;/th&gt;
      &lt;td&gt;220&lt;/td&gt;
      &lt;td&gt;0.020004&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Microsoft Azure Machine Learning&lt;/th&gt;
      &lt;td&gt;220&lt;/td&gt;
      &lt;td&gt;0.020004&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IBM Watson / Waton Analytics&lt;/th&gt;
      &lt;td&gt;194&lt;/td&gt;
      &lt;td&gt;0.017640&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;C/C++&lt;/th&gt;
      &lt;td&gt;186&lt;/td&gt;
      &lt;td&gt;0.016912&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Tableau&lt;/th&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;0.013639&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;SQL&lt;/th&gt;
      &lt;td&gt;138&lt;/td&gt;
      &lt;td&gt;0.012548&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Java&lt;/th&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;0.010547&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MATLAB/Octave&lt;/th&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;0.010456&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MLToolNextYearSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x105bc98d0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_44_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;구글의 딥러닝 프레임워크 텐서플로우가 23%로 가장 많은 관심을 받을 것이라 응답했다.
그리고 Python이 15%, R은 8% 로 따르고 있다.&lt;/p&gt;

&lt;p&gt;클라우드는 Amazon ML, GCP, AWS, MS Azure ML, IBM Watson 순으로 응답되었다.&lt;/p&gt;

&lt;h3 id="데이터사이언스-방법-data-science-methods"&gt;데이터사이언스 방법 Data Science Methods&lt;/h3&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'MLMethodNextYearSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x105bcd668&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_46_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;응답에 대한 통계를 보면 딥러닝과 뉴럴넷이 엄청나게 인기가 있을 것이고 시계열 분석, 베이지안, 텍스트 마이닝 등의 내용이 있다. 중간 쯤에 부스팅과 배깅 같은 앙상블 메소드도 있다.&lt;/p&gt;

&lt;h2 id="q3-어디에서-데이터-사이언스를-배워야-할까요"&gt;Q3. 어디에서 데이터 사이언스를 배워야 할까요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'LearningPlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'LearningPlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'str'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'LearningPlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'platform'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'nan'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11e84e0b8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_49_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Kaggle은 우리 응답자들 사이에서 가장 인기있는 학습 플랫폼&lt;/li&gt;
  &lt;li&gt;그러나 이 설문 조사를 실시한 곳이 Kaggle이기 때문에 응답이 편향되었을 수 있음&lt;/li&gt;
  &lt;li&gt;온라인 코스, 스택 오버플로 및 유튜브 (YouTube) 상위 5 대 최우수 학습 플랫폼은 대학 학위나 교과서의 중요도보다 높다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 설문내용과 누구에게 물어봤는지를 찾아봄&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Column'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'LearningCategory'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(7, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Question&lt;/th&gt;
      &lt;th&gt;Asked&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;91&lt;/th&gt;
      &lt;td&gt;LearningCategorySelftTaught&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;92&lt;/th&gt;
      &lt;td&gt;LearningCategoryOnlineCourses&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;93&lt;/th&gt;
      &lt;td&gt;LearningCategoryWork&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;94&lt;/th&gt;
      &lt;td&gt;LearningCategoryUniversity&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;95&lt;/th&gt;
      &lt;td&gt;LearningCategoryKaggle&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;96&lt;/th&gt;
      &lt;td&gt;LearningCategoryOther&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;97&lt;/th&gt;
      &lt;td&gt;LearningCategoryOtherFreeForm&lt;/td&gt;
      &lt;td&gt;What percentage of your current machine learni...&lt;/td&gt;
      &lt;td&gt;All&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;use_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'LearningPlatformUsefulness'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 학습플랫폼과 유용함에 대한 연관성을 살펴본다.&lt;/span&gt;
&lt;span class="n"&gt;fdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;use_features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;fdf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'LearningPlatformUsefulness'&lt;/span&gt;&lt;span class="p"&gt;):]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="n"&gt;fdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'Very useful'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 학습플랫폼들이 얼마나 유용한지에 대한 상관관계를 그려본다.&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;fdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;"Very useful"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;annot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11e82d2e8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_53_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 유용함의 정도를 각 플랫폼별로 그룹화 해서 본다.&lt;/span&gt;
&lt;span class="n"&gt;fdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Usefullness of Learning Platforms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11e331208&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_54_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;실제로 프로젝트를 해보는 것에 대해 74.7%의 응답자가 응답했고 매우 유용하다고 표시했다. SO는 스택오버플로우가 아닐까 싶고, 캐글, 수업, 책이 도움이 많이되는 편이다. 팟캐스트는 매우 유용하지 않지만 때때로 유용하다는 응답은 가장 많았다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;cat_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'LearningCategory'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;cat_features&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;['LearningCategorySelftTaught',
 'LearningCategoryOnlineCourses',
 'LearningCategoryWork',
 'LearningCategoryUniversity',
 'LearningCategoryKaggle',
 'LearningCategoryOther']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;cdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cat_features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cdf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'LearningCategory'&lt;/span&gt;&lt;span class="p"&gt;):]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# 파이차트를 그리기 위해 평균 값을 구해와서 담아준다.&lt;/span&gt;
&lt;span class="n"&gt;cdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Kaggle            5.531434
OnlineCourses    27.375514
Other             1.795940
SelftTaught      33.366771
University       16.988607
Work             15.217593
dtype: float64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 학습 플랫폼 별 도움이 되는 정도를 그려본다.&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;autopct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%1.1&lt;/span&gt;&lt;span class="s"&gt;f&lt;/span&gt;&lt;span class="si"&gt;%%&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;startangle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;140&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'equal'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Contribution of each Platform to Learning"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_58_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;개인프로젝트를 해보는 것이 가장 많은 도움이 되었으며, 온라인코스와 대학, 업무 그 다음으로 캐글을 통해 배웠다고 응답되었다.&lt;/p&gt;

&lt;h2 id="q4-데이터과학을-위해-높은-사양의-컴퓨터가-필요한가요"&gt;Q4. 데이터과학을 위해 높은 사양의 컴퓨터가 필요한가요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 설문내용과 누구에게 물어봤는지를 찾아봄&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Column'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'HardwarePersonalProjectsSelect'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(1, 3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Question&lt;/th&gt;
      &lt;th&gt;Asked&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;74&lt;/th&gt;
      &lt;td&gt;HardwarePersonalProjectsSelect&lt;/td&gt;
      &lt;td&gt;Which computing hardware do you use for your p...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'HardwarePersonalProjectsSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()][&lt;/span&gt;
    &lt;span class="s"&gt;'HardwarePersonalProjectsSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(4206,)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'HardwarePersonalProjectsSelect'&lt;/span&gt;
   &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'HardwarePersonalProjectsSelect'&lt;/span&gt;
          &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'str'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
              &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'HardwarePersonalProjectsSelect'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
              &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'hardware'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'nan'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;hardware&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Basic laptop (Macbook)&lt;/th&gt;
      &lt;td&gt;2246&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Laptop + Cloud service (AWS&lt;/th&gt;
      &lt;td&gt;669&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;GCE ...)&lt;/th&gt;
      &lt;td&gt;669&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Azure&lt;/th&gt;
      &lt;td&gt;669&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Gaming Laptop (Laptop + CUDA capable GPU)&lt;/th&gt;
      &lt;td&gt;641&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Traditional Workstation&lt;/th&gt;
      &lt;td&gt;527&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Laptop or Workstation and local IT supported servers&lt;/th&gt;
      &lt;td&gt;445&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;GPU accelerated Workstation&lt;/th&gt;
      &lt;td&gt;416&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Workstation + Cloud service&lt;/th&gt;
      &lt;td&gt;174&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Other&lt;/th&gt;
      &lt;td&gt;147&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;맥북을 사용하는 응답자가 가장많고, 랩탑과 함께 클라우드를 사용하는 사람들이 그 다음이고 적당한 GPU를 가진 게임용 노트북을 사용하는 사례가 그 다음이다.&lt;/p&gt;

&lt;h2 id="q5-데이터-사이언스-공부에-얼마나-많은-시간을-사용-하는지"&gt;Q5. 데이터 사이언스 공부에 얼마나 많은 시간을 사용 하는지?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'TimeSpentStudying'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;
             &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'center left'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;bbox_to_anchor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0x116d17390&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_68_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;풀타임으로 일하는 사람들은 2~10시간 일하는 비율이 높으며, 풀타임으로 일하는 사람보다 일을 찾고 있는 사람들이 더 많은 시간을 공부하는 편이다.&lt;/p&gt;

&lt;p&gt;하지만 응답자 중 대부분이 풀타임으로 일하고 있는 사람들이라는 것을 고려할 필요가 있다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ncols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_size_inches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'TimeSpentStudying'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;full_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax1&lt;/span&gt;
             &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'center right'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;bbox_to_anchor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'TimeSpentStudying'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;looking_for_job&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'EmploymentStatus'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax2&lt;/span&gt;
             &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'center right'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;bbox_to_anchor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0x118f36fd0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_70_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/2C7wtfqulx8" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h2 id="q6-블로그-팟캐스트-수업-기타-등등-추천할만한-것이-있는지"&gt;Q6. 블로그, 팟캐스트, 수업, 기타 등등 추천할만한 것이 있는지?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'BlogsPodcastsNewslettersSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'BlogsPodcastsNewslettersSelect'&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'str'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'BlogsPodcastsNewslettersSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;0    [Becoming a Data Scientist Podcast, Data Machi...
1    [Becoming a Data Scientist Podcast, Siraj Rava...
2    [FastML Blog, No Free Hunch Blog, Talking Mach...
3                                     [KDnuggets Blog]
4    [Data Machina Newsletter, Jack's Import AI New...
Name: BlogsPodcastsNewslettersSelect, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'BlogsPodcastsNewslettersSelect'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
              &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'platforms'&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;0    Becoming a Data Scientist Podcast
0              Data Machina Newsletter
0             O'Reilly Data Newsletter
0         Partially Derivative Podcast
0           R Bloggers Blog Aggregator
Name: platforms, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'nan'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Most Popular Blogs and Podcasts"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x123c7b978&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_75_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;KDNuggets Blog, R Bloggers Blog Aggregator 그리고 O’Reilly Data Newsletter 가 가장 유용하다고 투표를 받았다.
데이터 사이언스 되기라는 팟캐스트도 유명한 듯 하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.kdnuggets.com/"&gt;Machine Learning, Data Science, Big Data, Analytics&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCfxnrdBM1YRV9j2MB8aiy4Q"&gt;Becoming a Data Scientist - YouTube - YouTube&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A"&gt;Siraj Raval - YouTube - YouTube&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CoursePlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'CoursePlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'str'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CoursePlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;0              [nan]
1              [nan]
2    [Coursera, edX]
3              [nan]
4              [nan]
Name: CoursePlatformSelect, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CoursePlatformSelect'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
              &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'courses'&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;0          nan
1          nan
2     Coursera
2          edX
3          nan
4          nan
5          nan
6          nan
7     Coursera
8          nan
9          nan
10    Coursera
11         nan
12    Coursera
12    DataCamp
12         edX
13         nan
14         nan
15         nan
16         nan
Name: courses, dtype: object
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'nan'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Most Popular Course Platforms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x122e1ec88&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_80_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;Coursera와 Udacity가 가장 인기있는 플랫폼이다.&lt;/p&gt;

&lt;h2 id="q7-데이터-사이언스-직무에서-가장-중요하다고-생각되는-스킬은"&gt;Q7. 데이터 사이언스 직무에서 가장 중요하다고 생각되는 스킬은?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;job_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s"&gt;'JobSkillImportance'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; 
    &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'JobSkillImportanceOther'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;job_features&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;['JobSkillImportanceBigData',
 'JobSkillImportanceDegree',
 'JobSkillImportanceStats',
 'JobSkillImportanceEnterpriseTools',
 'JobSkillImportancePython',
 'JobSkillImportanceR',
 'JobSkillImportanceSQL',
 'JobSkillImportanceKaggleRanking',
 'JobSkillImportanceMOOC',
 'JobSkillImportanceVisualizations']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;jdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;job_features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;jdf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'JobSkillImportance'&lt;/span&gt;&lt;span class="p"&gt;):]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="n"&gt;jdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;{'BigData': Nice to have    0.574065
 Necessary       0.379929
 Unnecessary     0.046006
 Name: JobSkillImportanceBigData, dtype: float64,
 'Degree': Nice to have    0.598107
 Necessary       0.279867
 Unnecessary     0.122026
 Name: JobSkillImportanceDegree, dtype: float64,
 'EnterpriseTools': Nice to have    0.564970
 Unnecessary     0.290200
 Necessary       0.144829
 Name: JobSkillImportanceEnterpriseTools, dtype: float64,
 'KaggleRanking': Nice to have    0.677261
 Unnecessary     0.203876
 Necessary       0.118863
 Name: JobSkillImportanceKaggleRanking, dtype: float64,
 'MOOC': Nice to have    0.606994
 Unnecessary     0.285752
 Necessary       0.107255
 Name: JobSkillImportanceMOOC, dtype: float64,
 'Python': Necessary       0.645994
 Nice to have    0.327214
 Unnecessary     0.026792
 Name: JobSkillImportancePython, dtype: float64,
 'R': Nice to have    0.513945
 Necessary       0.414807
 Unnecessary     0.071247
 Name: JobSkillImportanceR, dtype: float64,
 'SQL': Nice to have    0.491778
 Necessary       0.434224
 Unnecessary     0.073998
 Name: JobSkillImportanceSQL, dtype: float64,
 'Stats': Necessary       0.513889
 Nice to have    0.457576
 Unnecessary     0.028535
 Name: JobSkillImportanceStats, dtype: float64,
 'Visualizations': Nice to have    0.490820
 Necessary       0.455392
 Unnecessary     0.053788
 Name: JobSkillImportanceVisualizations, dtype: float64}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;jdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;jdf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Necessary&lt;/th&gt;
      &lt;th&gt;Nice to have&lt;/th&gt;
      &lt;th&gt;Unnecessary&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;BigData&lt;/th&gt;
      &lt;td&gt;0.379929&lt;/td&gt;
      &lt;td&gt;0.574065&lt;/td&gt;
      &lt;td&gt;0.046006&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Degree&lt;/th&gt;
      &lt;td&gt;0.279867&lt;/td&gt;
      &lt;td&gt;0.598107&lt;/td&gt;
      &lt;td&gt;0.122026&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EnterpriseTools&lt;/th&gt;
      &lt;td&gt;0.144829&lt;/td&gt;
      &lt;td&gt;0.564970&lt;/td&gt;
      &lt;td&gt;0.290200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;KaggleRanking&lt;/th&gt;
      &lt;td&gt;0.118863&lt;/td&gt;
      &lt;td&gt;0.677261&lt;/td&gt;
      &lt;td&gt;0.203876&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;MOOC&lt;/th&gt;
      &lt;td&gt;0.107255&lt;/td&gt;
      &lt;td&gt;0.606994&lt;/td&gt;
      &lt;td&gt;0.285752&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Python&lt;/th&gt;
      &lt;td&gt;0.645994&lt;/td&gt;
      &lt;td&gt;0.327214&lt;/td&gt;
      &lt;td&gt;0.026792&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;R&lt;/th&gt;
      &lt;td&gt;0.414807&lt;/td&gt;
      &lt;td&gt;0.513945&lt;/td&gt;
      &lt;td&gt;0.071247&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;SQL&lt;/th&gt;
      &lt;td&gt;0.434224&lt;/td&gt;
      &lt;td&gt;0.491778&lt;/td&gt;
      &lt;td&gt;0.073998&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Stats&lt;/th&gt;
      &lt;td&gt;0.513889&lt;/td&gt;
      &lt;td&gt;0.457576&lt;/td&gt;
      &lt;td&gt;0.028535&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Visualizations&lt;/th&gt;
      &lt;td&gt;0.455392&lt;/td&gt;
      &lt;td&gt;0.490820&lt;/td&gt;
      &lt;td&gt;0.053788&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Necessary"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                            &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;annot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x116e0b080&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_86_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;jdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
         &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Skill Importance in Data Science Jobs"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x116cd4ba8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_87_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;꼭 필요한 것으로 Python, R, SQL, 통계, 시각화가 있다.&lt;/p&gt;

&lt;p&gt;있으면 좋은 것은 빅데이터, 학위, 툴 사용법, 캐글랭킹, 무크가 있다.&lt;/p&gt;

&lt;h2 id="q8-데이터-과학자의-평균-급여는-얼마나-될까"&gt;Q8. 데이터 과학자의 평균 급여는 얼마나 될까?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(5224, 228)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# 환율계산을 위한 정보 가져오기&lt;/span&gt;
&lt;span class="n"&gt;rates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data/conversionRates.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Unnamed: 0'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'CompensationCurrency'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s"&gt;'Country'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s"&gt;'CurrentJobTitleSelect'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;salary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;left_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'CompensationCurrency'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="n"&gt;right_on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'originCountry'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'CompensationAmount'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'exchangeRate'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;CompensationAmount&lt;/th&gt;
      &lt;th&gt;CompensationCurrency&lt;/th&gt;
      &lt;th&gt;GenderSelect&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;CurrentJobTitleSelect&lt;/th&gt;
      &lt;th&gt;originCountry&lt;/th&gt;
      &lt;th&gt;exchangeRate&lt;/th&gt;
      &lt;th&gt;Salary&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;250000&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;United States&lt;/td&gt;
      &lt;td&gt;Operations Research Practitioner&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;250000.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;80000&lt;/td&gt;
      &lt;td&gt;AUD&lt;/td&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;Australia&lt;/td&gt;
      &lt;td&gt;Business Analyst&lt;/td&gt;
      &lt;td&gt;AUD&lt;/td&gt;
      &lt;td&gt;0.802310&lt;/td&gt;
      &lt;td&gt;64184.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;1200000&lt;/td&gt;
      &lt;td&gt;RUB&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;Russia&lt;/td&gt;
      &lt;td&gt;Software Developer/Software Engineer&lt;/td&gt;
      &lt;td&gt;RUB&lt;/td&gt;
      &lt;td&gt;0.017402&lt;/td&gt;
      &lt;td&gt;20882.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;95000&lt;/td&gt;
      &lt;td&gt;INR&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Data Scientist&lt;/td&gt;
      &lt;td&gt;INR&lt;/td&gt;
      &lt;td&gt;0.015620&lt;/td&gt;
      &lt;td&gt;1483.9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;1100000&lt;/td&gt;
      &lt;td&gt;TWD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;Taiwan&lt;/td&gt;
      &lt;td&gt;Software Developer/Software Engineer&lt;/td&gt;
      &lt;td&gt;TWD&lt;/td&gt;
      &lt;td&gt;0.033304&lt;/td&gt;
      &lt;td&gt;36634.4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Maximum Salary is USD $'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Minimum Salary is USD $'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Median Salary is USD $'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Maximum Salary is USD $ 28297400000
Minimum Salary is USD $ 0
Median Salary is USD $ 53812.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가장 큰 수치는 여러 국가들의 GDP보다 크다고 한다. 가짜 응답이며, 평균급여는 USD $ 53,812 이다. 그래프를 좀 더 잘 표현하기 위해 50만불 이상의 데이터만 distplot으로 그려봤다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;500000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axvline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;linestyle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'dashed'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Salary Distribution'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Text(0.5,1,'Salary Distribution')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_94_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;sal_coun&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'Country'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)[:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_frame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
            &lt;span class="n"&gt;sal_coun&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sal_coun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'RdYlGn'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axvline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;linestyle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'dashed'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Highest Salary Paying Countries'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Text(0.5,1,'Highest Salary Paying Countries')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_95_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boxplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x117f34630&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_96_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;salary_korea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Country'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;'South Korea'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boxplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;salary_korea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11aae1710&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_97_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;salary_korea&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(26, 8)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;salary_korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;salary_korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Female'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;CompensationAmount&lt;/th&gt;
      &lt;th&gt;CompensationCurrency&lt;/th&gt;
      &lt;th&gt;GenderSelect&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;CurrentJobTitleSelect&lt;/th&gt;
      &lt;th&gt;originCountry&lt;/th&gt;
      &lt;th&gt;exchangeRate&lt;/th&gt;
      &lt;th&gt;Salary&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;479&lt;/th&gt;
      &lt;td&gt;30000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Data Analyst&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;26.58&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2903&lt;/th&gt;
      &lt;td&gt;800000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;708.80&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4063&lt;/th&gt;
      &lt;td&gt;60000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Female&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;53160.00&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;salary_korea_male&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;salary_korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;salary_korea&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'GenderSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Male'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;salary_korea_male&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Salary'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;count        23.000000
mean      43540.617217
std       37800.608484
min           0.886000
25%       17500.000000
50%       37212.000000
75%       59238.000000
max      177200.000000
Name: Salary, dtype: float64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;salary_korea_male&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;CompensationAmount&lt;/th&gt;
      &lt;th&gt;CompensationCurrency&lt;/th&gt;
      &lt;th&gt;GenderSelect&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;CurrentJobTitleSelect&lt;/th&gt;
      &lt;th&gt;originCountry&lt;/th&gt;
      &lt;th&gt;exchangeRate&lt;/th&gt;
      &lt;th&gt;Salary&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;85&lt;/th&gt;
      &lt;td&gt;40000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Business Analyst&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;35440.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;147&lt;/th&gt;
      &lt;td&gt;80000&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;80000.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;314&lt;/th&gt;
      &lt;td&gt;60000&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Business Analyst&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;60000.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;333&lt;/th&gt;
      &lt;td&gt;60000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;53160.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;562&lt;/th&gt;
      &lt;td&gt;50000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;44300.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;769&lt;/th&gt;
      &lt;td&gt;42000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Software Developer/Software Engineer&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;37212.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;799&lt;/th&gt;
      &lt;td&gt;1000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Machine Learning Engineer&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;0.886&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1060&lt;/th&gt;
      &lt;td&gt;75000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Scientist/Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;66450.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1360&lt;/th&gt;
      &lt;td&gt;30000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Statistician&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;26580.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1568&lt;/th&gt;
      &lt;td&gt;90000&lt;/td&gt;
      &lt;td&gt;SGD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Computer Scientist&lt;/td&gt;
      &lt;td&gt;SGD&lt;/td&gt;
      &lt;td&gt;0.742589&lt;/td&gt;
      &lt;td&gt;66833.010&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1576&lt;/th&gt;
      &lt;td&gt;10800000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Data Scientist&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;9568.800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1905&lt;/th&gt;
      &lt;td&gt;20000&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;20000.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1945&lt;/th&gt;
      &lt;td&gt;50000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Machine Learning Engineer&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;44.300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1949&lt;/th&gt;
      &lt;td&gt;80000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Software Developer/Software Engineer&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;70880.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2322&lt;/th&gt;
      &lt;td&gt;200000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Other&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;177200.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2334&lt;/th&gt;
      &lt;td&gt;60000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Machine Learning Engineer&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;53160.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2557&lt;/th&gt;
      &lt;td&gt;7200000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;6379.200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2924&lt;/th&gt;
      &lt;td&gt;15000&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;15000.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3394&lt;/th&gt;
      &lt;td&gt;66000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Programmer&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;58476.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3832&lt;/th&gt;
      &lt;td&gt;30000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Data Scientist&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;26580.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3979&lt;/th&gt;
      &lt;td&gt;35000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;31010.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4300&lt;/th&gt;
      &lt;td&gt;60000000&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Scientist/Researcher&lt;/td&gt;
      &lt;td&gt;KRW&lt;/td&gt;
      &lt;td&gt;0.000886&lt;/td&gt;
      &lt;td&gt;53160.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4366&lt;/th&gt;
      &lt;td&gt;10000&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;Male&lt;/td&gt;
      &lt;td&gt;South Korea&lt;/td&gt;
      &lt;td&gt;Data Scientist&lt;/td&gt;
      &lt;td&gt;USD&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;10000.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h2 id="q9-개인프로젝트나-학습용-데이터를-어디에서-얻나요"&gt;Q9. 개인프로젝트나 학습용 데이터를 어디에서 얻나요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'PublicDatasetsSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'PublicDatasetsSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'str'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;','&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'PublicDatasetsSelect'&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'courses'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'nan'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;courses&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Dataset aggregator/platform (i.e. Socrata/Kaggle Datasets/data.world/etc.)&lt;/th&gt;
      &lt;td&gt;6843&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Google Search&lt;/th&gt;
      &lt;td&gt;3600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;University/Non-profit research group websites&lt;/th&gt;
      &lt;td&gt;2873&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;I collect my own data (e.g. web-scraping)&lt;/th&gt;
      &lt;td&gt;2560&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;GitHub&lt;/th&gt;
      &lt;td&gt;2400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Government website&lt;/th&gt;
      &lt;td&gt;2079&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Other&lt;/th&gt;
      &lt;td&gt;399&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Most Popular Dataset Platforms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11900df60&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_107_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;Kaggle 및 Socrata는 개인 프로젝트나 학습에 사용하기 위한 데이터를 얻는데 인기있는 플랫폼이다. Google 검색 및 대학 / 비영리 단체 웹 사이트는 각각 2위와 3위에 있다. 그리고 직접 웹스크래핑 등을 통해 데이터를 수집한다고 한 응답이 4위다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 주관식 응답을 읽어온다.&lt;/span&gt;
&lt;span class="n"&gt;ff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'data/freeformResponses.csv'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                 &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"ISO-8859-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;low_memory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(16716, 62)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 설문내용과 누구에게 물어봤는지를 찾아봄&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Column'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PersonalProjectsChallengeFreeForm'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(1, 3)





'What is your biggest challenge with the public datasets you find for personal projects?'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id="개인프로젝트에서-공개-된-데이터셋을-다루는-데-가장-어려운-점은-무엇일까"&gt;개인프로젝트에서 공개 된 데이터셋을 다루는 데 가장 어려운 점은 무엇일까?&lt;/h4&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;ppcff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'PersonalProjectsChallengeFreeForm'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ppcff&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'응답 수'&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ppcff&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;응답 수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;None&lt;/th&gt;
      &lt;td&gt;23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Cleaning the data&lt;/th&gt;
      &lt;td&gt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Cleaning&lt;/th&gt;
      &lt;td&gt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Dirty data&lt;/th&gt;
      &lt;td&gt;16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Data Cleaning&lt;/th&gt;
      &lt;td&gt;14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;none&lt;/th&gt;
      &lt;td&gt;13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;dirty data&lt;/th&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Data cleaning&lt;/th&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;-&lt;/th&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Size&lt;/th&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;cleaning&lt;/th&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Missing data&lt;/th&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Incomplete data&lt;/th&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Lack of documentation&lt;/th&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Quality&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;대부분 데이터를 정제하는일이라고 응답하였고 그 다음이 데이터 크기다.&lt;/p&gt;

&lt;h2 id="q11-데이터-사이언스-업무에서-가장-많은-시간을-필요로-하는-일은"&gt;Q11. 데이터 사이언스 업무에서 가장 많은 시간을 필요로 하는 일은?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;time_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Time'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;tdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;time_features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;tdf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Time'&lt;/span&gt;&lt;span class="p"&gt;):]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;tdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pie&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tdf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;autopct&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%1.1&lt;/span&gt;&lt;span class="s"&gt;f&lt;/span&gt;&lt;span class="si"&gt;%%&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shadow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;startangle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;140&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'equal'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Percentage of Time Spent on Each DS Job"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;FindingInsights    13.094776
GatheringData      36.144754
ModelBuilding      21.268066
OtherSelect         2.396247
Production         10.806372
Visualizing        13.869372
dtype: float64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_116_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 수집하는 일이 37%로 업무의 가장 큰 비중을 차지하고 그 다음으로 모델을 구축하고 시각화, 인사이트를 찾는 순이다.&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/I5iNG4M533c" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h2 id="q11-데이터사이언스-직업을-찾는데-가장-고려해야-할-요소는-무엇일까요"&gt;Q11. 데이터사이언스 직업을 찾는데 가장 고려해야 할 요소는 무엇일까요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 설문내용과 누구에게 물어봤는지를 찾아봄&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Column'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'JobFactor'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(16, 3)





array([ 'How are you assessing potential job opportunities? - Opportunities for professional development',
       'How are you assessing potential job opportunities? - The compensation and benefits offered',
       "How are you assessing potential job opportunities? - The office environment I'd be working in",
       "How are you assessing potential job opportunities? - The languages, frameworks, and other technologies I'd be working with",
       "How are you assessing potential job opportunities? - The amount of time I'd have to spend commuting",
       'How are you assessing potential job opportunities? - How projects are managed at the company or organization',
       'How are you assessing potential job opportunities? - The experience level called for in the job description',
       "How are you assessing potential job opportunities? - The specific department or team I'd be working on",
       "How are you assessing potential job opportunities? - The specific role or job title I'd be applying for",
       'How are you assessing potential job opportunities? - The financial performance or funding status of the company or organization',
       "How are you assessing potential job opportunities? - How widely used or impactful the product or service I'd be working on is",
       'How are you assessing potential job opportunities? - The opportunity to work from home/remotely',
       "How are you assessing potential job opportunities? - The industry that I'd be working in",
       "How are you assessing potential job opportunities? - The reputations of the company's senior leaders",
       'How are you assessing potential job opportunities? - The diversity of the company or organization',
       'How are you assessing potential job opportunities? - Opportunity to publish my results'], dtype=object)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;job_factors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'JobFactor'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;jfdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;job_factors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;jfdf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'JobFactor'&lt;/span&gt;&lt;span class="p"&gt;):]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;

&lt;span class="n"&gt;jfdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jfdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jfdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Very Important'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                             &lt;span class="n"&gt;ascending&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;annot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11b946198&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_121_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;jfdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
          &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Things to look for while considering Data Science Jobs"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_122_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;데이터 사이언티스트로 직업을 찾을 때 가장 고려할 요소는 배울 수 있는 곳인지, 사무실 근무환경, 프레임워크나 언어, 급여, 경영상태, 경력정도 순이다.&lt;/p&gt;

&lt;h2 id="q12-데이터-사이언티스트가-되기-위해-학위가-중요할까요"&gt;Q12. 데이터 사이언티스트가 되기 위해 학위가 중요할까요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'UniversityImportance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11dfe0e80&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_125_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.offline&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_notebook_mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.figure_factory&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fig_fact&lt;/span&gt;

&lt;span class="n"&gt;top_uni&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'UniversityImportance'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;top_uni_dist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;uni&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;top_uni&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;top_uni_dist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; \
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'UniversityImportance'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;uni&lt;/span&gt;&lt;span class="p"&gt;)][&lt;/span&gt;&lt;span class="s"&gt;'Age'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;group_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;top_uni&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fig_fact&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_distplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;top_uni_dist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;group_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show_hist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'University Importance by Age'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마치 연령대 그래프를 찍어 본것과 같은 형태의 그래프다.
20~30대는 대학 학위가 매우 중요하다고 생각하며, 연령대가 높은 응답자들은 그다지 중요하지 않다고 응답했다. 300명 미만의 응답자만이 학위가 중요하지 않다고 생각한다.&lt;/p&gt;

&lt;p&gt;대부분의 응답자가 석사와 박사인 것을 고려해 봤을 때 이는 자연스러운 응답이다.&lt;/p&gt;

&lt;h2 id="q13-어디에서-부터-데이터사이언스를-시작해야-할까요"&gt;Q13. 어디에서 부터 데이터사이언스를 시작해야 할까요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'FirstTrainingSelect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(14712, 228)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'FirstTrainingSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11c7e3e10&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_130_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;대부분의 응답자가 학사학위 이상으로 대학교육에 대한 중요성을 부여했지만,
가장 많은 응답자가 코세라, 유데미와 같은 온라인 코스를 통해 데이터 사이언스를 공부했고 그 다음으로 대학교육이 차지하고 있다.&lt;/p&gt;

&lt;p&gt;개인프로젝트를 해보는 것도 중요하다고 답한 응답자가 제법 된다.&lt;/p&gt;

&lt;h2 id="q14-데이터사이언티스트-이력서에서-가장-중요한-것은-무엇일까요"&gt;Q14. 데이터사이언티스트 이력서에서 가장 중요한 것은 무엇일까요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'ProveKnowledgeSelect'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x1187539b0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_133_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;머신러닝과 관련 된 직무경험이 가장 중요하고 다음으로 캐글 경진대회의 결과가 중요하다고 답했다. 그리고 온라인 강좌의 수료증이나 깃헙 포트폴리오 순으로 중요하다고 답했다.&lt;/p&gt;

&lt;h2 id="q15-머신러닝-알고리즘을-사용하기-위해-수학이-필요할까요"&gt;Q15. 머신러닝 알고리즘을 사용하기 위해 수학이 필요할까요?&lt;/h2&gt;

&lt;p&gt;scikit과 같은 라이브러리는 세부 정보를 추상화하여 기본기술을 몰라도 ML 모델을 프로그래밍 할 수 있다. 그럼에도 그 안에 있는 수학을 아는 것이 중요할까?&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 설문내용과 누구에게 물어봤는지를 찾아봄&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Column'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'AlgorithmUnderstandingLevel'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;qc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Question&lt;/th&gt;
      &lt;th&gt;Asked&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;227&lt;/th&gt;
      &lt;td&gt;AlgorithmUnderstandingLevel&lt;/td&gt;
      &lt;td&gt;At which level do you understand the mathemati...&lt;/td&gt;
      &lt;td&gt;CodingWorker&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'AlgorithmUnderstandingLevel'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notnull&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;(7410, 228)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'AlgorithmUnderstandingLevel'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11dbcac50&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_138_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;현재 코딩업무를 하는 사람들에게 질문했으며, 기술과 관련 없는 사람에게 설명할 수 있는 정도라면 충분하다는 응답이 가장 많으며 좀 더디더라도 밑바닥부터 다시 코딩해 볼 수 있는 게 중요하다는 응답이 그 뒤를 잇는다.&lt;/p&gt;

&lt;h2 id="q16-어디에서-일을-찾아야-할까요"&gt;Q16. 어디에서 일을 찾아야 할까요?&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 설문내용과 누구에게 물어봤는지를 찾아봄&lt;/span&gt;
&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Column'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'JobSearchResource|EmployerSearchMethod'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=""&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Question&lt;/th&gt;
      &lt;th&gt;Asked&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;108&lt;/th&gt;
      &lt;td&gt;EmployerSearchMethod&lt;/td&gt;
      &lt;td&gt;How did you find your current job? - Selected ...&lt;/td&gt;
      &lt;td&gt;CodingWorker-NC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;109&lt;/th&gt;
      &lt;td&gt;EmployerSearchMethodOtherFreeForm&lt;/td&gt;
      &lt;td&gt;How did you find your current job? - Some othe...&lt;/td&gt;
      &lt;td&gt;CodingWorker-NC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;271&lt;/th&gt;
      &lt;td&gt;JobSearchResource&lt;/td&gt;
      &lt;td&gt;Which resource has been the best for finding d...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;272&lt;/th&gt;
      &lt;td&gt;JobSearchResourceFreeForm&lt;/td&gt;
      &lt;td&gt;Which resource has been the best for finding d...&lt;/td&gt;
      &lt;td&gt;Learners&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Best Places to look for a Data Science Job"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'JobSearchResource'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x123b7f630&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_142_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;구직자들은 회사 웹사이트나 구직 사이트로부터 찾고 그 다음으로 특정 기술의 채용 게시판, 일반 채용 게시판, 친구나 가족, 이전 직장 동료나 리더를 통해 채용 정보를 얻는다.&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Top Places to get Data Science Jobs"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'EmployerSearchMethod'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mcq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11cff3da0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_144_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;위에서 구직자는 주로 구직사이트로 부터 채용정보를 가장 많이 찾았으나,
채용자는 친구, 가족, 이전 직장 동료 등의 추천을 통해 가장 많이 사람을 구하며 다음으로 리쿠르터나 특정 회사에 소속 된 사람에게 직접 연락을 해서 구하는 비율이 높다.&lt;/p&gt;

&lt;h3 id="그럼-한국-사람들은-어떨까"&gt;그럼 한국 사람들은 어떨까?&lt;/h3&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Best Places to look for a Data Science Job"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'JobSearchResource'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11da65390&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_147_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Top Places to get Data Science Jobs"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'EmployerSearchMethod'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;korea&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x11ff69d30&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/Kaggle-ML-DS-survey-2017-EDA-FAQ_files/Kaggle-ML-DS-survey-2017-EDA-FAQ_148_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;h2 id="결론"&gt;결론&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이 설문결과로 Python이 R보다 훨씬 많이 사용됨을 알 수 있었다.&lt;/li&gt;
  &lt;li&gt;하지만 Python과 R을 모두 사용하는 사람도 많다.&lt;/li&gt;
  &lt;li&gt;데이터 수집과 정제는 어려운 일이다.(공감)&lt;/li&gt;
  &lt;li&gt;인기있는 학습플랫폼과 블로그, 유튜브 채널, 팟캐스트 등을 알게 되었다.&lt;/li&gt;
  &lt;li&gt;내년에 인기있는 기술로는 딥러닝과 텐서플로우가 큰 차지를 할 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;노트북 소스코드 &lt;a href="https://github.com/corazzon/KaggleStruggle/tree/master/kaggle-survey-2017"&gt;KaggleStruggle/kaggle-survey-2017 at master · corazzon/KaggleStruggle&lt;/a&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/9KjVv_E3Gqk" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/9KjVv_E3Gqk/Kaggle-ML-DS-survey-EDA-FAQ</link>
                <guid isPermaLink="false">http://corazzon.github.io/Kaggle-ML-DS-survey-EDA-FAQ</guid>
                <pubDate>2017-11-21T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/Kaggle-ML-DS-survey-EDA-FAQ</feedburner:origLink></item>

        <item>
                <title>matplotlib 한글폰트 사용하기</title>
                <description>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/S5N3LjhkcDs" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h1 id="matplotlib-한글폰트-사용하기"&gt;matplotlib 한글폰트 사용하기&lt;/h1&gt;

&lt;h2 id="1-필요한-패키지를-가져옵니다"&gt;1. 필요한 패키지를 가져옵니다.&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 그래프를 노트북 안에 그리기 위해 설정&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="c"&gt;# 필요한 패키지와 라이브러리를 가져옴&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.font_manager&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;

&lt;span class="c"&gt;# 그래프에서 마이너스 폰트 깨지는 문제에 대한 대처&lt;/span&gt;
&lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'axes.unicode_minus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="2-그래프를-그리기-위해-임의의-데이터를-만들어-줍니다"&gt;2. 그래프를 그리기 위해 임의의 데이터를 만들어 줍니다.&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cumsum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;array([ 85, 150, 138, 216, 216, 193, 199, 248, 197, 144,  95, 188, 199,
       164, 106, 153, 154, 188, 156, 200, 294, 323, 245, 321, 298, 299,
       346, 323, 223, 304, 318, 236, 233, 291, 335, 378, 361, 401, 412,
       360, 344, 326, 391, 356, 363, 309, 328, 283, 285, 341])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="3-기본-폰트로-지정-되었기-때문에-한글이-깨져-나옵니다"&gt;3. 기본 폰트로 지정 되었기 때문에 한글이 깨져 나옵니다.&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'axes.unicode_minus'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간별 가격 추이'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'주식 가격'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간(분)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;Text(0.5,0,'시간(분)')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/matplotlib_font_setting_files/matplotlib_font_setting_5_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;h2 id="4-폰트를-설정해-주기에-앞서-설치-된-matplotlib-의-버전과-위치정보를-가져옵니다"&gt;4. 폰트를 설정해 주기에 앞서 설치 된 matplotlib 의 버전과 위치정보를 가져옵니다.&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'버전: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'설치 위치: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'설정 위치: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_configdir&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'캐시 위치: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_cachedir&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;버전:  2.1.0
설치 위치:  /Users/corazzon/codes/jupyter/lib/python3.6/site-packages/matplotlib/__init__.py
설정 위치:  /Users/corazzon/.matplotlib
캐시 위치:  /Users/corazzon/.matplotlib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="5-matplotlib의-위치정보를-알았으니-터미널을-이용해-해당-위치로-가봅니다"&gt;5. matplotlib의 위치정보를 알았으니 터미널을 이용해 해당 위치로 가봅니다.&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'설정파일 위치: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matplotlib_fname&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;설정파일 위치:  /Users/corazzon/codes/jupyter/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="6-설치-된-폰트를-찍어-봅니다"&gt;6. 설치 된 폰트를 찍어 봅니다.&lt;/h2&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;font_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findSystemFonts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fontpaths&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'ttf'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# ttf 폰트 전체갯수&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;197
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# OSX 의 설치 된 폰트를 가져오는 함수&lt;/span&gt;
&lt;span class="n"&gt;font_list_mac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OSXInstalledFonts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font_list_mac&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;197
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 시스템 폰트에서 읽어온 리스트에서 상위 10개만 출력&lt;/span&gt;
&lt;span class="n"&gt;font_list&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;['/Library/Fonts/Gurmukhi.ttf',
 '/System/Library/Fonts/SFCompactText-SemiboldItalic.otf',
 '/System/Library/Fonts/SFCompactDisplay-Medium.otf',
 '/Library/Fonts/NanumMyeongjo.otf',
 '/Library/Fonts/NanumSquareRoundOTFL.otf',
 '/System/Library/Fonts/SFCompactDisplay-Semibold.otf',
 '/Library/Fonts/Arial Narrow Bold Italic.ttf',
 '/Library/Fonts/STIXNonUniBol.otf',
 '/Library/Fonts/STIXIntUpSmReg.otf',
 '/System/Library/Fonts/ZapfDingbats.ttf']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fontManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ttflist&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font_list&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c"&gt;# 10개의 폰트명 만 출력&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;197





['DejaVu Sans',
 'DejaVu Sans',
 'DejaVu Serif',
 'STIXSizeFiveSym',
 'STIXSizeFourSym',
 'STIXSizeTwoSym',
 'STIXSizeFourSym',
 'DejaVu Sans Mono',
 'DejaVu Serif Display',
 'STIXGeneral']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# [f.name for f in fm.fontManager.ttflist if '' in f.name]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="7-나눔고딕을-사용할-예정이기-때문에-이름에-nanum이-들어간-폰트만-가져와-봅니다"&gt;7. 나눔고딕을 사용할 예정이기 때문에 이름에 ‘Nanum’이 들어간 폰트만 가져와 봅니다.&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;폰트를 설치했는데 원하는 폰트명을 가져오지 못 할때, 터미널을 열어  mpl.get_cachedir()로 찍히는 캐시위치로 이동해서 캐시파일을 열어봅니다.&lt;/li&gt;
  &lt;li&gt;캐시파일에 원하는 폰트리스트가 없으면 주피터 노트북 혹은 콘다를 재실행 해줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fontManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ttflist&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'Nanum'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;[('NanumGothicOTF', '/Library/Fonts/NanumGothic.otf'),
 ('NanumBarunGothicOTF', '/Library/Fonts/NanumBarunGothicUltraLight.otf'),
 ('NanumSquareRoundOTF', '/Library/Fonts/NanumSquareRoundOTFEB.otf'),
 ('NanumBarunGothicOTF', '/Library/Fonts/NanumBarunGothicLight.otf'),
 ('NanumBarunpen', '/Library/Fonts/NanumBarunpenBold.otf'),
 ('NanumBarunGothic', '/Library/Fonts/NanumBarunGothicLight.ttf'),
 ('Nanum Brush Script OTF', '/Library/Fonts/NanumBrush.otf'),
 ('NanumSquareRoundOTF', '/Library/Fonts/NanumSquareRoundOTFR.otf'),
 ('NanumMyeongjoOTF', '/Library/Fonts/NanumMyeongjoBold.otf'),
 ('Nanum Pen Script OTF', '/Library/Fonts/NanumPen.otf'),
 ('NanumBarunpen', '/Library/Fonts/NanumBarunpenRegular.otf'),
 ('NanumSquareOTF', '/Library/Fonts/NanumSquareOTFExtraBold.otf'),
 ('NanumBarunGothicOTF', '/Library/Fonts/NanumBarunGothic.otf'),
 ('NanumGothicOTF', '/Library/Fonts/NanumGothicLight.otf'),
 ('NanumBarunGothicOTF', '/Library/Fonts/NanumBarunGothicBold.otf'),
 ('NanumGothicOTF', '/Library/Fonts/NanumGothicExtraBold.otf'),
 ('NanumMyeongjoOTF', '/Library/Fonts/NanumMyeongjo.otf'),
 ('NanumSquareRoundOTF', '/Library/Fonts/NanumSquareRoundOTFB.otf'),
 ('NanumSquareOTF', '/Library/Fonts/NanumSquareOTFBold.otf'),
 ('NanumSquareOTF', '/Library/Fonts/NanumSquareOTFLight.otf'),
 ('NanumMyeongjoOTF', '/Library/Fonts/NanumMyeongjoExtraBold.otf'),
 ('NanumSquareRoundOTF', '/Library/Fonts/NanumSquareRoundOTFL.otf'),
 ('NanumGothicOTF', '/Library/Fonts/NanumGothicBold.otf'),
 ('NanumSquareOTF', '/Library/Fonts/NanumSquareOTFRegular.otf'),
 ('NanumBarunGothic', '/Library/Fonts/NanumBarunGothicUltraLight.ttf'),
 ('NanumBarunGothic', '/Library/Fonts/NanumBarunGothicBold.ttf'),
 ('NanumBarunGothic', '/Library/Fonts/NanumBarunGothic.ttf')]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id="9-폰트를-사용하는-방법은-3가지가-있습니다"&gt;9. 폰트를 사용하는 방법은 3가지가 있습니다.&lt;/h2&gt;
&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;1) FontProperties 를 사용하는 방법 - 그래프의 폰트가 필요한 항목마다 지정해 주어야 합니다.
2) matplotlib.rcParams[]으로 전역글꼴 설정 방법 - 그래프에 설정을 해주면 폰트가 필요한 항목에 적용 됩니다.
3) 2)번의 방법을 mpl.matplotlib_fname()로 읽어지는 설정 파일에 직접 적어주는 방법, 단 모든 노트북에 적용됩니다. 노트북을 열 때마다 지정해 주지 않아도 돼서 편리합니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id="1-fontproperties-를-사용하는-방법"&gt;1) FontProperties 를 사용하는 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;텍스트를 지정하는 항목에 지정해 사용할 수 있습니다. 지정해 준 항목에만 해당 폰트가 적용 됩니다.&lt;/li&gt;
  &lt;li&gt;matplotlib.pyplot
    &lt;ul&gt;
      &lt;li&gt;title()&lt;/li&gt;
      &lt;li&gt;xlabel()&lt;/li&gt;
      &lt;li&gt;ylabel()&lt;/li&gt;
      &lt;li&gt;legend()&lt;/li&gt;
      &lt;li&gt;text()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;matplotlib.axes
    &lt;ul&gt;
      &lt;li&gt;set_title()&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# fname 옵션을 사용하는 방법&lt;/span&gt;
&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/Library/Fonts/NanumBarunpenRegular.otf'&lt;/span&gt;
&lt;span class="n"&gt;fontprop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FontProperties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간별 가격 추이'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontproperties&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fontprop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'주식 가격'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontproperties&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fontprop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간(분)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontproperties&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fontprop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/matplotlib_font_setting_files/matplotlib_font_setting_20_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;h3 id="2-matplotlibrcparams으로-전역글꼴-설정-방법"&gt;2) matplotlib.rcParams[]으로 전역글꼴 설정 방법&lt;/h3&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# 기본 설정 읽기&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;

&lt;span class="c"&gt;# size, family&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'# 설정 되어있는 폰트 사이즈'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'font.size'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'# 설정 되어있는 폰트 글꼴'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'font.family'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;# 설정 되어있는 폰트 사이즈
10.0
# 설정 되어있는 폰트 글꼴
['sans-serif']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# serif, sans-serif, monospace&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'serif 세리프가 있는 폰트--------'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'font.serif'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'sans-serif 세리프가 없는 폰트 --------'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'font.sans-serif'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'monospace 고정폭 글꼴--------'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'font.monospace'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;serif 세리프가 있는 폰트--------
['DejaVu Serif', 'Bitstream Vera Serif', 'Computer Modern Roman', 'New Century Schoolbook', 'Century Schoolbook L', 'Utopia', 'ITC Bookman', 'Bookman', 'Nimbus Roman No9 L', 'Times New Roman', 'Times', 'Palatino', 'Charter', 'serif']
sans-serif 세리프가 없는 폰트 --------
['DejaVu Sans', 'Bitstream Vera Sans', 'Computer Modern Sans Serif', 'Lucida Grande', 'Verdana', 'Geneva', 'Lucid', 'Arial', 'Helvetica', 'Avant Garde', 'sans-serif']
monospace 고정폭 글꼴--------
['DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Computer Modern Typewriter', 'Andale Mono', 'Nimbus Mono L', 'Courier New', 'Courier', 'Fixed', 'Terminal', 'monospace']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"font.family"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Nanum Brush Script OTF'&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"font.size"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rcParams&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"figure.figsize"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간별 가격 추이'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'주식 가격'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간(분)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'seaborn-pastel'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/matplotlib_font_setting_files/matplotlib_font_setting_25_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;h4 id="rcparams-대신-fontproperties-와-pltrc-를-사용하는-방법"&gt;rcParams 대신 FontProperties 와 plt.rc 를 사용하는 방법&lt;/h4&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/Library/Fonts/NanumBarunGothic.ttf'&lt;/span&gt;
&lt;span class="n"&gt;font_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FontProperties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'font'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;font_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간별 가격 추이'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'주식 가격'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'시간(분)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'ggplot'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;NanumBarunGothic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/matplotlib_font_setting_files/matplotlib_font_setting_27_1.png" alt="png" /&gt;&lt;/p&gt;

&lt;h2 id="3-rcparams-를-설정파일에-직접-적어주는-방법---모든-노트북에-공통적용"&gt;3) rcParams 를 설정파일에 직접 적어주는 방법 - 모든 노트북에 공통적용&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;font.family         : NanumGothicOTF&lt;/li&gt;
  &lt;li&gt;이 외에 자주 사용하는 설정도 함께 해주면 편리합니다.&lt;/li&gt;
  &lt;li&gt;이곳에 폰트를 지정해 주면 노트북을 실행할 때 바로 로드되도록 설정할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'설정파일 위치: '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mpl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matplotlib_fname&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;설정파일 위치:  /Users/corazzon/codes/jupyter/lib/python3.6/site-packages/matplotlib/mpl-data/matplotlibrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="language-python highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;&lt;span class="c"&gt;# import matplotlib.pyplot as plt&lt;/span&gt;
&lt;span class="c"&gt;# import numpy as np&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;'o'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'숫자 분포도 보기'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src="images/2017/matplotlib_font_setting_files/matplotlib_font_setting_30_0.png" alt="png" /&gt;&lt;/p&gt;

&lt;p&gt;참고 URL :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://matplotlib.org/api/font_manager_api.html"&gt;font_manager — Matplotlib 2.1.0 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://matplotlib.org/users/customizing.html"&gt;Customizing matplotlib — Matplotlib 2.0.2 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://matplotlib.org/examples/api/unicode_minus.html"&gt;마이너스 폰트가 깨지는 문제 unicode_minus.py — Matplotlib 2.0.2 documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;https://financedata.github.io/posts/matplotlib-hangul-for-osx.html&lt;/li&gt;
&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/fOt0TtEYpIc" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/fOt0TtEYpIc/matplotlib_font_setting</link>
                <guid isPermaLink="false">http://corazzon.github.io/matplotlib_font_setting</guid>
                <pubDate>2017-11-20T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/matplotlib_font_setting</feedburner:origLink></item>

        <item>
                <title>파이썬 코리아 Data101 튜토리얼(IPython Notebook) 후기</title>
                <description>&lt;p&gt;IPython Notebook을 처음 접한 건 지난해(2014년) 파이썬코리아 6월 세미나에서였다.&lt;/p&gt;

&lt;p&gt;어찌 보면 기형적으로 장고를 통해 파이썬을 접했기에 파이썬 문법을 익히기 위해 코드카데미의 파이썬 강좌를 수강했던 경험이 있는데 코드카데미를 통해 파이썬을 학습하면서 느꼈던 장점은 환경설정에 대한 진입장벽을 없애줬다는 점이었다. 이런 내게, IPython Notebook은 코드를 입력하고 결과를 바로 보여준다는 점에서 코드카데미를 떠올리게도 했지만 파이썬 학습도구, 통계, 문서 작성도구 등 여러분야에서 사용되는 것 같다. 마크다운 문법을 사용할 수 있다는 점에서도 강좌용이나 문서화 도구로도 좋겠다는 생각이 들었는데 오늘 발표자료 또한 IPython Notebook으로 제작 되어 Github으로 공유되었다. 그리고 작성 된 데이터들은 다양한 형태로 export가 가능하다고도 하니까 응용할 수 있는 분야는 정말 무궁무진 할듯 하다.&lt;/p&gt;

&lt;p&gt;IPython Notebook은 파이썬 코드를 입력하고 Shift+Enter만으로 그 결과를 볼 수 있고 또, 그 데이터를 바로 시각화해서 볼 수 있다는 점에서 신선한 자극이 되었다.  하지만 이런 장점을 알면서도 마음먹고 써보지 않음 소용이 없는데, 워낙 게으른 탓에 알면서도 차일피일 미뤄오다가 이 번에 유료 튜토리얼을 진행한다고 해서 바로 신청하게 되었다.&lt;/p&gt;

&lt;p&gt;어떠한 언어든 툴이든 환경설정이 가장 큰 진입장벽으로 느껴지는 데, 이미 파이썬과 장고를 자주 사용해서 그런지 IPython과 관련 된 환경을 설정하는 건 크게 어렵진 않았다.&lt;/p&gt;

&lt;p&gt;원래 생각으로는 튜토리얼 며칠 전에 IPython Notebook을 미리 설치해서 맛보기를 해보고 갈 생각이었지만 사정이 여의치 않아서 설치도 못 한채 튜토리얼에 참석했는데 생각보다 설치시간이 많이 걸리지 않았다. 튜토리얼 시간 중 초반 30분은 설치하는 시간으로 생각하셨다는 데 30분 내에 대부분이 환경설정을 마쳤던 것 같다.&lt;/p&gt;

&lt;p&gt;김슬님의 발표는 예전에도 몇 번 들었던 적이 있는데 이번에도 엄청나게 열심히 준비하신 흔적이 강의내내 엿보였다. 통계와 관련 된 여러 이야기를 시작으로 IPython Notebook으로 통계를 내고 수치를 내는 과정이 왜 필요할지 세균의 개념이 없었던 시기에 어떻게 콜레라의 전파를 막을 수 있었는지에 대한 이야기를 시작으로 흥미를 잘 이끌어 주셨다.&lt;/p&gt;

&lt;p&gt;특히 통계로 원주율을 구하는 방법을 평면에 원을 그리고 평면의 1/4에 점을 찍고 그 원 안에 점이 몇개가 들어가 있는지를 통해 통계로서 원주율을 구하는 코드를 직접 실행해 보고 그 결과를 보게 함으로써 점점 더 많은 점을 뿌리고 찍어가면서 원주율에 근접해 가도록 설명을 해주셨는데 결과 값이 눈앞에 그래프로 딱딱 찍히는 모습을 보니 너무 재미있어서 계속 숫자를 바꿔가며 실험을 해봤다. 파이썬 코드를 타이핑하고 바로 그 실행결과를 볼 수 있으니 시간이 가는 줄 모르고 진행 되었고 3시간이 넘는 튜토리얼이었지만 정말 지루할 틈이 없었다. 심지어 쉬는 시간에도 대부분의 사람들이 튜토리얼 코드의 값을 바꿔보면서 수치와 그래프의 변화 모습을 보며 재미있어 했다. 김슬님 또한 쉬는시간임에도 쏟아지는 질문들에 대해 성심껏 답을 해주셨다.&lt;/p&gt;

&lt;p&gt;책을 넘겨가며 혹은 혼자 모니터를 보며 실험해 봤으면 훨씬 어렵고 힘들었을텐데 이렇게 재미있는 예제로 설명해 주니 IPython Notebook의 매력에 빠져 만들어 보고 싶은 것들이 머릿속을 채워나갔다.&lt;/p&gt;

&lt;p&gt;또, 차 맛을 보는 여인에 대한 이야기를 하면서 혼자 강의를 진행해 나가는 게 아니라 수강생들의 의견을 물어보고 얘기하면서 일방적인 수업이 아니라 모두가 참여하고 모두가 토론할 수 있는 분위기를 이끌어 내주신 점에서도 정말 발표를 능수능란하게 하신다는 생각이 들었다.&lt;/p&gt;

&lt;p&gt;평소 데이터를 분석하거나 혹은 분석 된 데이터를 보는 걸 좋아하고 또 분석 된 데이터를 다시 가공해 보는 것도 좋아하는 편인데 R과 같은 도구는 사용해 본적이 없지만 여러 오픈소스를 통해 그래프를 그리고 표현해 봤었는데 IPython Notebook을 사용하면 좀 더 쉽게 좀 더 잘 표현 할 수도 있을 것만 같은 기대감이 차 올랐다.&lt;/p&gt;

&lt;p&gt;얼마 전에 이슈가 되었던 &lt;em&gt;버거지수&lt;/em&gt; 또한 IPython Notebook으로 제작 되었는데 튜토리얼을 들으니 버거지수가 더 가깝게 느껴진다. 김슬님이 강의 내내 IPython Notebook을 느껴본다라고 생각해 보라고 했는데 그래서 인지 부담없이 IPython Notebook이 가깝게 느껴진 듯한 느낌적인 느낌이다. :)&lt;/p&gt;

&lt;p&gt;보통 IPython Notebook 관련 스터디에는 보통의 개발자 보다는 통계와 관련 된 분들이 많이 오셔서 화기애애한 분위기라는 얘길 들었었는데, 통계와 관련 된 베이스가 있다면 좀 더 정교하게 필요한 데이터를 얻을 수 있을 것 같은 생각이 든다. 또, 굳이 통계만을 위해서가 아니라 코드를 적고 그 실행 결과를 Shift+Enter만으로 코드와 함께 볼 수 있다는 점에서 학습했던 코드를 정리하고 그 내용에 대한 설명을 적어가면서 개인적인 스터디 용도로 사용해도 너무 좋을 것 같은 생각이 든다.&lt;/p&gt;

&lt;p&gt;앞으로 자주 사용하게 될 것만 같은 고마운 툴이고, 재미있게 IPython Notebook을 전파해 주신 김슬님께도 너무 감사드린다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://github.com/lexifdev/statbystep"&gt;발표자료 lexifdev/statbystep&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://nbviewer.ipython.org/"&gt;IPython 무료 호스팅 사이트&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://nbviewer.ipython.org/gist/hyeshik/cf9f3d7686e07eedbfda?revision=6"&gt;“버거 지수”는 진짜 도시의 발전 수준을 반영할까?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;IPython Notebook 설치에 도움이 되는 글&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href="http://neurorep.blogspot.kr/2014/06/mac-os-x-10.html"&gt;MAC OS X 10.9 Mavericks 에서 virtualenv 내에 IPython 환경 구축하기&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

 	&amp;gt; &lt;a href="http://www.lucypark.kr/blog/2013/02/06/python-and-ipython-on-windows/"&gt;윈도우에 파이썬, IPython 설치하기 완벽 가이드 - Lucy Park&lt;/a&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/buo8kk23J_g" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/buo8kk23J_g/python-korea-data101</link>
                <guid isPermaLink="false">http://corazzon.github.io/python-korea-data101</guid>
                <pubDate>2015-02-15T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/python-korea-data101</feedburner:origLink></item>

        <item>
                <title>장고로 첫 삽뜨기</title>
                <description>&lt;h3 id="장고로-첫-삽-뜨기---우리집-꼬마를-위한-유아용-영어동요-웹앱-개발후기"&gt;장고로 첫 삽 뜨기 - 우리집 꼬마를 위한 유아용 영어동요 웹앱 개발후기&lt;/h3&gt;

&lt;h1 id="django-장고-시작하기"&gt;django 장고 시작하기&lt;/h1&gt;

&lt;p&gt;장고코딩을 처음 해 본게 스마트스터디의 오픈세션에서 였는데 내 게으름으로 인해 그 후 일년이 지나서야 본격적으로 장고를 시작하게 되었다. 그렇다고 뭐 아주 열심히 열정적으로 장고를 사용한 건 아니지만 말이다. 과거, 옥시토신 호르몬의 분비로 인해 서버 아이디와 비밀번호는 다 잊어버렸지만 VI를 6개월 만에 다시 사용했는데도 마치 어제 사용한 듯 명령어들이 손가락에 붙어 있었던 기억이 있다. 기억력을 감퇴시킨다는 옥시토신 호르몬은 다시 내게 찾아왔고 녹슨 손가락을 가지고 맥북을 다시 열었음에도 마치 어제 코딩 한 듯한 기분이 들었다. 늦은 저녁 서초동 지하에서 타이핑하던 손가락 근육의 움직임을 기억해 가며 한 줄씩 다시 따라해 봤다. 이렇게 하루에 한 두시간씩 장고로 튜토리얼을 따라 해보다가 내것을 만들어 보고자 하는 마음이 조금씩 번져나가기 시작했다.&lt;/p&gt;

&lt;h1 id="나만의-서비스-만들기"&gt;나만의 서비스 만들기&lt;/h1&gt;

&lt;p&gt;하루가 어떻게 지나가는지도 모르는 시간을 보내며 배재홍님이 쓴 &amp;lt;&lt;code class="highlighter-rouge"&gt;스타트업 바이블&lt;/code&gt;&amp;gt;을 읽는 데 ‘구멍가게를 하더라도 네 자신을 위해 일할 줄 아는 사람이 되라’라는 문구가 다가왔다. 그렇게 첫 삽을 들게 되었다. 이렇게 작은 것이라도 나만의 서비스를 처음부터 끝까지 만들어 서비스까지 해보고 싶다는 생각이 들었고 기획, 디자인, 개발도 내 생각을 녹여서 오롯이 내것을 만들고 싶었다.&lt;/p&gt;

&lt;p&gt;그렇게 다섯 살 아들을 위한 유아용 앱을 하나 만들겠다는 결심으로 터미널을 열고 까만 화면을 채워 나가기 시작했다. 지금도 막상 내가 만든 걸 하루이틀을 꼬박 줄테니 만들어 보라면 만들 수도 있을 것도 같지만 게으른 시간은 빠르게 흘러갔다. 모니터 안의 결과물은 지지부진하고 만족스럽지 못했고 시간은 늘 부족했다.&lt;/p&gt;

&lt;h1 id="선택과-집중-그리고-피처크립"&gt;선택과 집중 그리고 피처크립&lt;/h1&gt;

&lt;p&gt;내가 잘 못하는 건 필요한 최소한의 기능만을 남겨두고 나머지 불필요한 것들을 버리는 것이다. 현실에서나 작은 화면 안에서나 이런 내 성격은 부끄럽게 도드라졌고 항상 고치고 싶은 부분으로 남아있다. 조금씩 이 앱을 개발하면서 점점 추가하고 싶은 기능과 컨텐츠들이 늘어나며 내가 만들고자 했던 것에서 점점 더 멀어져만 갔다.  기능 하나를 뺄까 생각했다가도 계속 이런저런 기능들이 다 있었으면 좋겠다 생각하고 피처크립을 만들어 가고 있었다.&lt;/p&gt;

&lt;p&gt;이건 기능 뿐만이 아니라 개발도구도 그랬다. 새로 장고를 사용하게 되면서 장고에서 유명한 패키지들은 한번씩 다 써보고 싶고 &lt;code class="highlighter-rouge"&gt;django-REST-framework&lt;/code&gt;도 써보고 싶고 &lt;code class="highlighter-rouge"&gt;south&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;haystack&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;celery&lt;/code&gt;도 써보고 싶었다. 기존에 사용하던 방법으로 코딩하면 금방할 것도 같았지만 너무 엘레강스 하지 못해 이래저래 시간을 보냈다. 그 와중에 장고는 1.6이 넘게 판올림을 했다. 물론 이런 과정에서 여러 패키지들을 비교해 써보고 학습하는 건 좋았지만 속도가 붙지 않으니 조금 처지는 느낌이 들었다. 그래서 서비스 해가면서 사용하고 싶은 패키지나 툴을 하나씩 공부하며 적용해 나가는 것도 나쁘진 않았을 것 같다.&lt;/p&gt;

&lt;p&gt;하지만 장고와 관련 된 여러 패키지들은 너무나도 매력적이었다. 기존의 방법대로 개발 했다면 과연 더 금방 끝낼 수 있었을까? &lt;a href="http://www.youtube.com/watch?v=IRHP979pb-M"&gt;&lt;code class="highlighter-rouge"&gt;화성에서 온 개발자 금성에서 온 기획자&lt;/code&gt;&lt;/a&gt; 를 보면 김밥천국에 가서 밥을 시키면 고추장부터 만드는 걸 프레임워크 사용에 빗대어 나오는 데 그 슬라이드를 보고 혼자 얼마나 웃었는지 장고를 사용하며 깨알같은 여러 패키지의 도움은 많은 시간을 절약하게 해주었다. 내가 그 보다 잘 만들 자신이 없고 또 내가 만들고자 하는 것들에 충실하기 위해서 이런 여러 패키지들의 사용은 너무 꿀맛이었다.&lt;/p&gt;

&lt;p&gt;계획했던 것보다 일정이 많이 늘어지면서 같이 느러지는 나를 보고 있자니 쏘면서 달리기가 필요한 시기가 찾아왔다. 막상 이 글과 그간의 결과물을 올려놓고 나면 아무도 찾아와 보지 않더라도 너무나 부끄러워 두 손으로 얼굴을 가리게 될지언정 내게 변화가 필요한 시점임에는 틀림이 없었다.&lt;/p&gt;

&lt;h2 id="python과-django의-꿀맛같은-패키지와-기능들"&gt;python과 django의 꿀맛같은 패키지와 기능들&lt;/h2&gt;

&lt;h3 id="django-taggit"&gt;&lt;code class="highlighter-rouge"&gt;django-taggit&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;내가 만드는 서비스는 유튜브API를 사용하여 유튜브에 있는 영어동요를 큐레이팅해서 보여주는 서비스다. 우리 아이가 좋아하고 내가 좋아하는 영어동요들을 모으다 보니 6천개가 넘게 모였는데 이것을 어떻게 모아서 보여줄지가 고민이었다. 수집 된 비디오에 각 비디오의 제목과 설명에 맞는 태그를 달아서 태그별로 보여주고 싶었는데 이 역시 내가 직접 만드는 것 보단 누군가 잘 만들어 놓은 것을 가져다 쓰기로 하고 django-taggit을 클론 받아서 사용하고 있다.&lt;/p&gt;

&lt;h3 id="django-category"&gt;&lt;code class="highlighter-rouge"&gt;django-category&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;이것도 깃헙에서 클론받아 설치해 사용하고 메뉴의 카테고리를 구성하는데 사용했다.&lt;/p&gt;

&lt;h3 id="django-admin"&gt;&lt;code class="highlighter-rouge"&gt;django-admin&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;장고의 꽃이라 불리는 기능인 만큼 내가 장고를 사용할 결정을 내리는 데 가장 큰 매력으로 다가왔던 것이 바로 어드민 기능이었다. 기존 웹서비스를 개발하다 보면 일정에 맞추느라고 늘 어드민 기능은  만족스럽지 못했는데 기본적인 어드민 기능을 모두 제공한다. 누군가 django자체가 CMS와 유사하다고도 얘기했던 거 같은데 django-admin이 그 말과 가장 가깝다는 생각이 든다. 로그인 그와 관련된 세션, 계정관리 기능, 각 모델에 대한 CRUD기능, history관리 등등 기본적으로 필요한 기능들은 대부분 구현되어 있어서 내 입맛대로 커스터마이징만 좀 하면 그럴 듯한 관리자 페이지를 갖게 된다.&lt;/p&gt;

&lt;h3 id="pep8"&gt;&lt;code class="highlighter-rouge"&gt;PEP8&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;혼자 보는 코드이지만 Python 코딩컨벤션을 지켜서 코딩하고 싶었고 많은 선삽자들과 Tow Scoop of Django 에서도 이를 추천한다. 하지만 한번 보고 뒤 돌아 서면 다 잊어버리기 일쑤라 Vim plugin 잔소리꾼을 고용하여 코딩하며 자연스럽게 PEP8에 익숙해져 갔다.&lt;/p&gt;

&lt;h3 id="vim-plugin---python-mode-잔소리꾼"&gt;Vim plugin - &lt;code class="highlighter-rouge"&gt;Python-mode&lt;/code&gt; 잔소리꾼&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/klen/python-mode"&gt;Python-mode, Python in VIM (klen/python-mode)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;처음 설치할 때 pathogen 설정이 필요하며 PEP8, 코드폴딩 등을 지원 한다. 사용하지 않는 변수, import된 모듈을 체크해 주며 코딩컨벤션을 지킬 수 있어서 좋고 자동으로 고쳐주니 좋긴 한데 좀 무거운면이 있고, 설치 후 인덴트가 꼬여서 처음 시작할 때부터 사용하는 게 좋다. 중간에 적용하면 나 처럼 디버그하느라 시간을 다 보낼 수 있다.&lt;/li&gt;
  &lt;li&gt;PEP8을 지원하는 다른 VIM plugin 이나 .vimrc 설정파일도 많지만 이걸 적용하면 새로 작성하는 코드에 스페이스 4개와 같은 인덴트 기능을 비롯한 PEP8을 자동으로 적용해 준다. 현재 8~9개월 정도 사용했는데(파이썬 코딩을 많이 안 했다는 게 함정이긴 하지만) 컨벤션을 지킬 수 있게 잔소리가 계속 나오기 때문에 자연스럽게 PEP8을 익힐 수 있어서 좋다. 개발 시작할 때부터 사용하면 좋지만 난 중간에 설치해서 각종 오류에 대처하는데 시간을 많이 소비했다. 하지만 덕분에 PEP8을 손가락으로 익힐 수 있어서 좋았다. vi에서 편집 후 :w를 누르면 화면 하단에 잔소리가 라인별로 뜬다. 잔소리 한 줄씩 줄여가는 재미도 쏠쏠하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;여러 기능이 있지만 지금까지 파악한 것들을 다시 정리해봤다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;코드 폴딩기능 제공&lt;/li&gt;
  &lt;li&gt;PEP8(인덴트 스페이스4, 너무 긴 라인, 콤마와 오퍼레이터 사이의 여백처리들, 라인여백, 세미콜론의 불필요한 사용 등등)&lt;/li&gt;
  &lt;li&gt;사용하지 않는 변수&lt;/li&gt;
  &lt;li&gt;불필요하게 import 된 모듈&lt;/li&gt;
  &lt;li&gt;오류 시 해당 라인에 ‘EE’ 오류 표시, 불필요한 라인은 ‘WW’표시&lt;/li&gt;
  &lt;li&gt;화면 하단에 오류 리스팅&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="virtualenv-virtualenvwrapper"&gt;&lt;code class="highlighter-rouge"&gt;virtualenv&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;virtualenvwrapper&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;파이썬으로 개발하는 사람들 중에 이 두가지 툴을 사용하지 않는 사람들은 거의 없을 듯 하다. 각 개발환경에 맞는 가상환경을 만들어 주고 배포할 때는 &lt;code class="highlighter-rouge"&gt;fabric&lt;/code&gt;을 사용하게 되면 설치 된 패키지들을 알아서 관리해 준다. 정말 이 두가지 툴이 없었더라면 배포하면서 완전 멘붕이 찾아왔을 지도 모른다. 또 다른 사람이 개발해 놓은 소스를 깃헙에서 받아서 볼 때도 편리하게 가상환경 설정이 가능하다. &lt;code class="highlighter-rouge"&gt;requirements.txt&lt;/code&gt; 만 있다면,&lt;/p&gt;

&lt;h3 id="south"&gt;&lt;code class="highlighter-rouge"&gt;South&lt;/code&gt;&lt;/h3&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;python manage.py schemamigration yourapp --auto 
python manage.py migrate yourapp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 단 두 줄의 마법으로 스키마가 생성, 변경, 삭제 된다.
스키마를 수정할 일이 있으면 모델만 수정해 주면 된다.
설치도 간단하고 사용법도 이렇게 간단할 수가! 아름답다고 밖에 표현할 말이 없다.&lt;/p&gt;

&lt;h3 id="layout폴더구조"&gt;&lt;code class="highlighter-rouge"&gt;layout&lt;/code&gt;(폴더구조)&lt;/h3&gt;

&lt;p&gt;아직까지도 고민되고 아직까지도 어떻게 써야할지에 대한 고민이 된다. &lt;code class="highlighter-rouge"&gt;Tow Scoop of Django&lt;/code&gt; 를 보면 이에 대한 내용이 있고 github에도 이에 대한 예제 소스가 여럿 있다. 일단은 django 기본 예제를 바탕으로 사용하고 있다. 프로젝트의 특성에 맞게 사용하는 걸 추천받았지만 아직 초보라 그런지 어떻게 사용하는 게 편할지는 좀 더 고민해 봐야 될거 같다.&lt;/p&gt;

&lt;h3 id="template-tags"&gt;&lt;code class="highlighter-rouge"&gt;template tags&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;장고 템플릿 기능을 사용하면 시간변환이나 글자수체크, 통화변환을 비롯해 템플릿 안에서 파이썬 코드나 함수를 불러 사용해야 될 일이 있는데 이럴 때 사용하면 유용하다. Tow Scoop of Django 책에서도 이와 관련 된 깃헙 추천 링크를 제공한다. 또 context_processor를 사용해 파이썬 코드가 필요한 부분이나 메뉴 같은 부분에 응용할 수 있다.&lt;/p&gt;

&lt;h3 id="fabric"&gt;&lt;code class="highlighter-rouge"&gt;fabric&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;fabric은 장고를 다른 서버에 배포할 때 유용한 패키지다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;[Deploying a Django site with Fabric&lt;/td&gt;
          &lt;td&gt;Richmond Virginia Web Developer · Francis Yaconiello](http://www.yaconiello.com/blog/deploying-django-site-fabric/)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.jeffknupp.com/blog/2012/02/09/starting-a-django-project-the-right-way/"&gt;Starting a Django Project the Right Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;$ pip install fabric
$ pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;와우 단 두 줄로 &lt;code class="highlighter-rouge"&gt;requirements.txt&lt;/code&gt; 가 자동으로 생성 된다니 믿을 수 없는 일!
aws에 배포하면서 환경이 맞지 않아 잠시 고민하고 &lt;code class="highlighter-rouge"&gt;fabric&lt;/code&gt;을 검색해서 써보니 너무 간단하고 훌륭하다. 배포하는 중간에 그간 설치해 두었던 virtualenv환경을 메모해 둘걸이라고 생각했던 내 뇌구조는 너무나도 구식이었다. 이런 건 그냥 설치 후 한 줄이면 되는거다. 머리가 나쁘면 손발이 고생한다. 그리고 배포 스크립트를 작성해 놓고 혹시라도 서버를 옮기게 된다든지 증설하게 될 때 사용할 수도 있다. 물론 AWS AMI를 사용한다면 더 굳이 이렇게 할 필요도 없겠지만 말이다.
그리고 python에는 너무나도 훌륭한 tool이 많다.&lt;/p&gt;

&lt;h3 id="db"&gt;DB&lt;/h3&gt;

&lt;p&gt;처음에는 &lt;code class="highlighter-rouge"&gt;sqlite&lt;/code&gt;를 사용하다가 결국 &lt;code class="highlighter-rouge"&gt;mysql&lt;/code&gt;로 갈아타게 되었고, Tool은 맥용 Sequel Pro와 터미널을 조합하여 사용하고 있다. 뭔가 새로운 다른 DB를 사용해 보고 싶지만 일단 첫 삽에서는 그동안 사용해 그나마 익숙한 mysql을 사용하기로 했다. 
django ORM을 사용해 DB를 추상화 시킬 수 있고 사용법도 간단하지만(? 아직 많이 사용하지 못해 빙산의 일각만 보았기 때문에) 추상화로 인해 로드가 심한 쿼리를 작성하는 것에 대한 문제가 고민이었다. 최대한 조인이 없는 쿼리를 만들려고 했고 심플하게 구성하려 했다.&lt;/p&gt;

&lt;h3 id="서버"&gt;서버&lt;/h3&gt;

&lt;p&gt;장고로 서비스를 만드는 일은 처음이기 때문에 서버의 인스턴스를 만들기 쉽고, 지웠다 다시 만들었다 하는 무한반복(이라 쓰고 더 낫게 실패하기라 읽는다.)의 삽질과정이 필요하기 때문에 &lt;code class="highlighter-rouge"&gt;AWS의 무료인스턴스&lt;/code&gt;로 서버에 릴리즈 하는 것을 테스트 해보았다. AWS의 마이크로인스턴스는 삽질이 많이 필요할 때 너무나도 유용하다. 국내 호스팅 서비스를 이용한다면 초기 세팅비용의 부담감으로 이렇게 아예 인스턴스를 지웠다 깔았다를 밥먹듯이 하는 건 상상도 못할텐데, 그렇다고 개인서버를 만들어서 OS를 지웠다 깔았다의 무한반복도 시간이 너무 오래 걸려 쉽지 않은데 이런 귀찮은 과정을 무료로 게다가 몇 초에서 몇 분만에 이용할 수 있다니! 이런 기능은 정말 꿀맛같다. 하지만 사용료에 대한 문제 때문에 서버는 끝까지 고민이 된다(사용자가 많지 않다면 무료 인스턴스만으로도 서비스가 가능할 것도 같지만 많은 부모와 아이들이 봐주길 바라는 마음으로, 하지만 이런 걱정도 일단 뚜껑은 열고 하는게 낫겠지,). 중간에 &lt;code class="highlighter-rouge"&gt;django-medusa&lt;/code&gt;를 이용해 static 한 사이트로 변환 후에 이를 깃허브 같은 무료 서버에 호스팅 하는 것도 매생이님을 통해 추천받았는데 내 끈기없는 인내심으로 인해 결국 aws로 서비스 하게 되었다. 하지만 앞으로 만드는 서비스에는 사용해 볼까 생각중이다. 어짜피 스케쥴링도 전원을 끄지 않는 내 노트북에서 오토메이터 등으로 돌아가게 설정해 놓으면 되니까. 통계는 구글어날리틱스와 같은 툴을 사용하면 되니 충분히 STATIC하게 서비스가 가능한 형태의 앱이긴 하다.&lt;/p&gt;

&lt;p&gt;서버 후보였던 디지털 오션도 있지만 현재 AWS 무료 서비스만으로도 충분하다. (좋아해야 할지 울어야 할지)&lt;/p&gt;

&lt;p&gt;그래서 현재는 &lt;code class="highlighter-rouge"&gt;nginx&lt;/code&gt;+&lt;code class="highlighter-rouge"&gt;uwsgi&lt;/code&gt;의 조합으로 &lt;code class="highlighter-rouge"&gt;AWS ec2&lt;/code&gt;에 무료 인스턴스로 서비스 하고 있다.&lt;/p&gt;

&lt;h2 id="front-end"&gt;Front-end&lt;/h2&gt;

&lt;p&gt;모바일과 PC용화면을 따로 구분하며 제작하지 말고 해상도에 따라 다르게 보여지도록 작업한다는 목표로 작업했다.&lt;/p&gt;

&lt;p&gt;front-end쪽은 내가 스스로 다 하기엔 해야 될 게 너무 많기 때문에 다른 일들과 마찬가지로 이미 잘 만들어지고 검증 된 것들을 가져다 사용하는 것이 옳았고 그렇게 선택하게 된 게 &lt;code class="highlighter-rouge"&gt;purecss&lt;/code&gt;와 &lt;code class="highlighter-rouge"&gt;bootstrap&lt;/code&gt;이다. 또 Front-end는 내게 가장 취약한 부분이기도 하다.&lt;/p&gt;

&lt;p&gt;내가 원하는 페이스북 스타일의 햄버거 아이콘을 가진 슬라이드 메뉴에 RWD(responsive web design)를 지원하는 그리드가 딱이라 생각되었다. 여기에 &lt;code class="highlighter-rouge"&gt;bootstrap&lt;/code&gt;의 몇 가지 컴포넌트들을 가져왔다. 그래서 &lt;code class="highlighter-rouge"&gt;purecss&lt;/code&gt;에서는 &lt;code class="highlighter-rouge"&gt;grid&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;menu&lt;/code&gt;를 가져와 사용하고 bootstrap에서는 &lt;code class="highlighter-rouge"&gt;glyphycon&lt;/code&gt;과 &lt;code class="highlighter-rouge"&gt;badge&lt;/code&gt;를 가져와 사용했다. 그리고 &lt;code class="highlighter-rouge"&gt;carousel&lt;/code&gt;은 bootstrap을 가져다 쓸까 하다가 &lt;code class="highlighter-rouge"&gt;slick&lt;/code&gt;을 사용했다. 그리고 필요한 몇 가지는 만들어 사용했고 &lt;code class="highlighter-rouge"&gt;미디어쿼리&lt;/code&gt;를 사용해서 해상도에 따라 보여지는 정보를 다르게 표현했다. 또 휴대폰의 가로세로 변환에도 적용 될 수 있는 UI를 만들고자 했다.&lt;/p&gt;

&lt;h3 id="grid"&gt;Grid&lt;/h3&gt;

&lt;p&gt;UI 테스트는 &lt;code class="highlighter-rouge"&gt;Chrome 브라우저&lt;/code&gt;의 &lt;code class="highlighter-rouge"&gt;Emulation&lt;/code&gt; 기능을 사용해서 했고 아이폰을 제외한 대부분의 모바일 화면이 제각각이라 각 해상도에서 제목이나 상세설명이 넘쳐흘러 보이지 않는지, 섬네일 등의 이미지가 제대로 보여지는 지 동영상 재생과 관련 된 부분을 중점적으로 보면서 미디어 쿼리를 수정했는데 시간도 가장 많이 걸리고 휴대폰 각각 해상도가 너무 천차만별 이라 모바일 화면에서 섬네일이 2개 보여지는 것이 좋을지 3개 보여지는 것이 좋을지와 같은 그리드 표현에 대한 고민이 많이 되었고 같은 미디어쿼리를 수십번 수정해도 마음에 들지 않아서 가장 힘든 부분이었다. 그나마 pure의 그리드 기능이 개발 도중에 업데이트가 되어서 화면 별로 그리드 숫자를 조정 할 수 있도록 변경되어 도움이 되었다. 개발 초기에는 pure의 그리드와 bootstrap의 그리드도 바꿔가며 사용하면서 어떤 그리드가 내가 만들고자 하는 목적에 부합할지에 대해 여러번 시뮬레이션(삽질)해보고 결국 &lt;code class="highlighter-rouge"&gt;purecss&lt;/code&gt;로 굳히게 되었다.&lt;/p&gt;

&lt;h2 id="youtube-api"&gt;YouTube API&lt;/h2&gt;

&lt;p&gt;앱스토어에 보면 유튜브와 관련 된 혹은 유튜브를 큐레이팅 해서 보여주는 앱들이 엄청나게 많다. 개인들이 제작한 많은 유아용 앱들이 대부분 이런 형태를 띠고 있다. 그래서 나도 쉽게 진입할 수 있는 유튜브 API를 사용해 앱을 만들게 되었다. 유튜브는 사용자가 동영상을 올리면 그 영상이 실행 될 때 어떠한 식으로든 광고에 노출 되게 되며 그 광고에 대한 수익을 업로더와 유튜브가 공유하는 형태이다. 이러한 앱들이 유튜브의 동영상을 중계해줘 플레이가 많이 되면 업로더에게 수익이 발생되는 형태이다. 다만 업로더가 저작권이 없는 동영상을 올렸느냐 아니냐에 대한 판가름을 해야하는데 그건 유튜브에서 저작권에 문제가 된다고 판단 되는 영상에 대해서는 별도의 관리를 하고 있다. 나는 주로 영어동요에 관련 된 키워드로 동영상들을 수집하고 있는데 수집하다보면 과거에 수집 되었던 영상들이 저작권 문제로 삭제되어 있는 걸 종종 봤다. 또 유튜브 플레이어는 몇 가지 종류가 있는 데 광고가 플레이 되지 않는 버전으로 연결시켜주어서 동영상이 플레이 될 때는 광고가 보여지지 않도록 개발하였다.&lt;/p&gt;

&lt;h3 id="youtube-player"&gt;YouTube Player&lt;/h3&gt;

&lt;p&gt;API문서에 의하면 플레이어 관련 API로  &lt;code class="highlighter-rouge"&gt;Android&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;IFrame&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Javascript&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Flash API&lt;/code&gt;를 제공한다. 안드로이드 웹뷰와 내장 브라우저로 서비스해야하는 나로서는 Javascript, Flash, 크롬리스 플레이어로는 사용자가 환경 내에서 별도의 설정을 해야만 했다. 줄곧 크롬에서만 개발해 오던 나는 (복병이야 매 단계마다 있긴 했지만) player에서 새로운 복병을 만났다.
  일단 최근 버전이 아닌 안드로이드 웹뷰에서 유튜브 동영상이 재생 되지 않았다. 그냥 까만 화면만 나올 뿐 아무리 동영상을 클릭해도 재생되지 않았다. PC용 크롬에서 주로 개발해 오던 나는 유튜브 동영상 쯤이야 링크만 던져주면 알아서 플레이 되겠지라고 생각했었는데 오산이었다. 이건 웹뷰에서 일부 수정해서 고쳐지긴 했는데 낮은 안드로이드 버전에서는 플레이가 되지 않고 있다.(정말 산넘어 산이다.)&lt;/p&gt;

&lt;h2 id="참고서적"&gt;참고서적&lt;/h2&gt;

&lt;h3 id="two-scoop-of-django"&gt;&lt;code class="highlighter-rouge"&gt;Two Scoop of Django&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;django-packages&lt;/code&gt; 사이트를 개발한 ‘Daniel Greenfeld’와 그의 연인‘Audrey Roy’가 쓴 책이다. 보통 프로그래밍 언어 책에는 예제를 따라해 가며 그 언어에 익숙해 지는 방법이라든지와 같은 실제 코딩기법들이 주로 나열되어 있는 책들이 많지만 이 책은 코딩컨벤션, 프로젝트레이아웃, 템플릿태그의 사용, 유용한 3rd party 라이브러리들, 서버에 디플로이 하는 법 등에 대한 조언이 주로 담겨져 있다. 이 저자와 같은사람들을 보통 &lt;code class="highlighter-rouge"&gt;선삽자&lt;/code&gt;라 부르던데 선삽자로서 장고를 개발하며 겪을 수 있는 어려운 점을 옆에서 조언하듯이 써주었다. 그리고 이 책 덕분에 PEP8도 지키려 노력했다.  유일하게 이 책의 참고 소스를 깃허브에 올려 놓은 것이 이 프로젝트 레이아웃인데 이와 가깝게 쓰려고 노력은 하겠지만 설정파일을 어디에 두어야 할지에 대한 고민 등은 아직까지도 가장 어려운 일이다(아마도 프로젝트 특성에 따라 써야겠지만). 내가 구입한 책은 django 1.5 버전을 기준으로 쓰여졌지만 현재 1.6버전으로 업데이트 출판되어 있다.&lt;/p&gt;

&lt;h3 id="쉽고-빠른-웹-개발-django"&gt;&lt;code class="highlighter-rouge"&gt;쉽고 빠른 웹 개발 Django&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;인사이트 출판사에서 2012년에 출판 된 책이며 장고를 다룬 다른 책도 있긴 하지만 그건 장고를 주로 다룬 책이 아니라서  현재까지 장고만을 다룬 유일한 국내서로 알고 있다. 이미 절판 되었지만 인사이트의 전자책 판매사이트를 통해 구매할 수가 있다. 하지만 절판된 책이라 업데이트 되지 못 하고 장고 1.0버전으로 쓰여졌다는 것과 PDF버전으로만 볼 수 있다는 게 아쉽지만 Django에 대한 감을 잡기엔 좋다. 이 책의 말미에는 Google App Engine으로 서비스하는 팁도 나와 있지만 비교적 오래 된 내용이라 지금 실정과는 시간의 벽이 있지 않을까 싶다.&lt;/p&gt;

&lt;h2 id="버전관리----git-bitbucket"&gt;버전관리 -  &lt;code class="highlighter-rouge"&gt;git&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;bitbucket&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;과거엔 버전관리 없이 코딩을 한적도 있었지만 이제는 무엇을 만들든지 버전관리 없이 코딩을 한다는 건 상상할 수도 없는 일이다. 따로 버전관리서버를 운용하긴 부담스럽지만 무료로 사용이 가능한 bitbucket을 이용해서 버전관리했고 tool은 &lt;code class="highlighter-rouge"&gt;소스트리&lt;/code&gt;를 사용했다. 원래 업무용으로는 주로 svn을 사용해 왔지만 이젠 git만을 사용하고 있고 소규모로 사용해서 그런지 부족함 없이 잘 사용하고 있다. 오히려 좋은 기능들이 많을텐데 모르고 지나가는 게 훨씬 많긴 하지만, 이젠 빼놓을 수 없는 너무나도 훌륭한 개발도구이다.&lt;/p&gt;

&lt;h2 id="광고"&gt;광고&lt;/h2&gt;

&lt;p&gt;애드몹, 카울리, 아담 등을 알아보다가 결국은 PC와 모바일을 함께 사용할 수 있는 애드센스로 정했다. 이번 서비스를 개발하며 개인용 계정이 아니라 개인스튜디오용 계정을 새로 팠는데 애드센스를 기존에 사용하던 개인 계정에 먼저 연결해 두었더니 다른 계정에서는 등록이 되지 않아 기존계정에서 초대하는 방법으로 사용하게 되었다. 구글어날리틱스와 연동도 시켜놨다. 모니터링은 메일링 등록을 해두고 잔소리를 계속 보내주도록 설정해 놓았다.&lt;/p&gt;

&lt;h2 id="개밥먹기"&gt;개밥먹기&lt;/h2&gt;

&lt;p&gt;아이에게 YouTube에 있는 동영상들을 찾아 보여주면서 처음엔 즐겨찾기를 등록해서 보여줬고 시간이 지날 수록 아이가 좋아하는 동요의 리스트는 늘어갔고 무료로 볼 수 있는 이런 좋은 컨텐츠들을 주변 아기 엄마들에게도 추천해 줬는데 이걸 모아놓고 더 많은 아기 엄마들과 공유한다면 좋겠다는 생각이 들었다. hooplakidz나 baby Einstein 같은 너무나도 유명한 동영상 업로더들도 많지만 나는 엄청나게 많은 동영상을 본 엄마라 다른 엄마들에게 알려지지 않은 좋은 동영상들을 공유하고 싶었다. 그리고 django를 취미 삼아 쓰면서 개밥먹기 하기 너무 좋은 음식이라는 생각이 들었다. 아직도 코드화 되지 못하고 머릿속에만 남아있는 생각들을 개밥먹기 하면서 조금씩 요리해 볼 계획이다. (참고로 난 요리를 잘 못하는 데 내가 한 요리는 정말 잘 먹는다. 사실 좋아하지 않는 음식이 없다고 해야 더 솔직하겠지만)&lt;/p&gt;

&lt;h2 id="라임키즈"&gt;&lt;a href="http://rhymekids.com/"&gt;라임키즈&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;이렇게 첫 삽으로 만든 앱이 &lt;a href="http://rhymekids.com/"&gt;라임키즈&lt;/a&gt;다. 앞으로 다른 유아용 앱을 만들려고 계획 중이고 지금 출시해 놓은 &lt;a href="http://rhymekids.com/"&gt;라임키즈&lt;/a&gt;도 조금씩 매일 업데이트 하고 있다. 영어동요 주제별로 예를 들면 파닉스, 컬러, 도형, 수학, 계절 등 널서리라임과 마더구스의 내용은 무궁무진하다. 그리고 우리집 꼬마들과 자주 보는 영어책들(예를 들면 노부영 같은)과 같은 동영상들을 어떻게 모아서 보여줄지가 고민이다. 지금 수집해 놓은 동영상들이 6천곡이 넘다보니 이미 컨텐츠는 넘치는데 이걸 어떻게 보여줘야지 아이들이 좋아할지 계속 고민하고 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.rhymekids"&gt;&lt;img src="http://corazzon.github.io/images/2014/08/rhymekids_banner_400x140.png" /&gt;
&lt;/a&gt;&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/P8a7nbRws0E" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/P8a7nbRws0E/my-first-django-app</link>
                <guid isPermaLink="false">http://corazzon.github.io/my-first-django-app</guid>
                <pubDate>2014-08-14T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/my-first-django-app</feedburner:origLink></item>

        <item>
                <title>지킬로 블로그 시작하기</title>
                <description>&lt;h1 id="jekyll-지킬"&gt;Jekyll 지킬&lt;/h1&gt;

&lt;h3 id="jekyll-시작하기"&gt;Jekyll 시작하기&lt;/h3&gt;
&lt;p&gt;어디선가 Jekyll은 워드프레스보다 훨씬 설치가 간단 하다고 하는데 그 말 그대로 github에 저장소를 만들고 터미널에서 몇 줄이면 바로 블로그가 생성 되었다. (보통 10여분 정도 걸리기도 한다고 하지만 대부분 바로 생성 되었다.)&lt;/p&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;$ jekyll new 저장소명  
$ cd 저장소명
$ git init
$ git remote add origin 저장소경로
$ git add .
$ git commit -m 'Initial commit'
$ git push origin master (프로젝트 페이지의 경우 부모가 없는 gh-pages브랜치를 만들어 push)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 간단한 과정이면 블로그가 생성 되고 별도의 DB설정 없이 마크다운 문서를 바로 포스트할 수 있다. DB가 없는 게 조금 어색하기도 했지만 어짜피 로컬에서 쓰는 글도 대부분 마크다운 문서로 저장하고 있었기 때문에 오히려 관리는 더 편할거 같다는 생각이 들었다. (아직 많이 사용해 보진 않았지만) 블로그로 통계낼 것도 아니고 간단한 통계기능은 &lt;code class="highlighter-rouge"&gt;구글어날리틱스&lt;/code&gt;를 사용하면 되니 DB가 없더라도 불편할 일은 그닥 없을 거 같았다. 전문적인 블로그를 운영할 것도 아니고 개인적인 기록차원에서 사용할 것 이라면 더욱 더 말이다.&lt;/p&gt;

&lt;p&gt;그리고 무엇보다도 호스팅에 신경쓰지 않아도 된다는 게 마음에 들었다. 그간 가상호스팅을 몇 년 간 사용하긴 했지만 사용 빈도도 적고 개인적인 학습 목적에서 사용하는 용도로는 아마존 EC2를 더 자주 사용했기 때문에 굳이 호스팅 비용을 들여가며 가상서버를 유지할 의지가 점점 줄어들어가고 있다.&lt;/p&gt;

&lt;p&gt;지킬은 블로그가 아니라 파싱엔진이라고도 하지만 편하고 서버 유지 및 관리에 대한 부담 없이 사용하기 좋아서 쓰기로 마음 먹었다. 그리고 &lt;code class="highlighter-rouge"&gt;루비&lt;/code&gt;로 만들어졌다는 점도 마음에 들었다. 루비를 사용해 본적은 없지만 루비로 만들어진 &lt;a href="http://www.redmine.org/"&gt;레드마인(Redmine)&lt;/a&gt;은 충분히 매력적이었기 때문에 루비에 대한 간이라도 보고 싶어졌다.&lt;/p&gt;

&lt;h3 id="지킬-테마-고르기"&gt;지킬 테마 고르기&lt;/h3&gt;
&lt;p&gt;일단 지킬을 설치하고 나니 테마를 직접 만들 의지와 여유가 없어서 사용할만한 테마를 골라야 했다. 워드프레스 처럼 다양하진 않지만 사용 해볼만한 테마가 몇가지 있긴 했지만 태그, 카테고리 등의 기능을 사용하기 위해선 별도의 플러그인을 필요로 해서 &lt;code class="highlighter-rouge"&gt;지킬부트스트랩&lt;/code&gt;(&lt;a href="http://jekyllbootstrap.com/"&gt;JekyllBootstrap&lt;/a&gt;)을 사용하기로 마음 먹었다.
지킬부트스트랩엔 내가 최소로 원하는 기능인 카테고리, 태그, 아카이브, 덧글, 부트스트랩 테마 를 모두 포함하고 있어서 고민 없이 바로 클론 받아 로컬에서 이것저것 살펴봤다.&lt;/p&gt;

&lt;h4 id="jekyll-theme-후보였던-것들"&gt;Jekyll theme 후보였던 것들&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://lanyon.getpoole.com/"&gt;Lanyon · A Jekyll theme&lt;/a&gt; - bootstrap을 개발한 &lt;a href="https://twitter.com/mdo"&gt;@mdo&lt;/a&gt; 가 만든 테마로 페이스북 스타일의 햄버거? 아이콘이 있는 메뉴를 지원한다.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://mmistakes.github.io/hpstr-jekyll-theme/"&gt;HPSTR Theme&lt;/a&gt; - 포스트별로 배경이미지를 바꿀 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="쓸데없는-시행착오--gh-pages-branch"&gt;쓸데없는 시행착오 : gh-pages branch&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/creating-project-pages-manually"&gt;Creating Project Pages manually · GitHub Help&lt;/a&gt; 에 나와 있는 것처럼 부모가 없는 &lt;code class="highlighter-rouge"&gt;gh-pages&lt;/code&gt; branch에서 동작한다 하여 해당 브랜치를 만들었지만 마스터 브랜치에 반영이 되지 않으면 &lt;code class="highlighter-rouge"&gt;username.github.io&lt;/code&gt; 페이지에서 볼 수가 없었다.
 그래서 기본 branch를 master에서 gh-pages로 변경 했지만 역시나 보여지지 않았다.&lt;/p&gt;

&lt;p&gt;하지만 &lt;code class="highlighter-rouge"&gt;username.github.com&lt;/code&gt; root 저장소에 지킬을 설치할 경우 gh-pages 브랜치를 사용하지 않는 다는 걸 뒤늦게 알았다. 이미 &lt;a href="https://help.github.com/articles/user-organization-and-project-pages"&gt;User, Organization and Project Pages · GitHub Help&lt;/a&gt;에서 읽었지만 프로젝트 페이지 도움말에서 이 내용이 내 머릿속에 덮어쓰기 되어버린 것이다. 프로젝트로 생성할 경우에만 gh-pages를 통해 디플로이 하면 된다고 나와 있는 걸 모든 github 페이지는 gh-pages에서 돌아간다고 생각한 게 잘못이었다. 제목에도 프로젝트 페이지라 나와 있건만 왜 삽질을 한 건지, 허무하게도 &lt;code class="highlighter-rouge"&gt;username.github.com&lt;/code&gt;의 master branch에서 지킬은 너무나도 잘 돌아갔다. 하지만 여러번의 삭제 재설치로 인해 github에 좀 더 익숙해 졌으니 그걸로 위안을 삼아야지,&lt;/p&gt;

&lt;h3 id="jekyll-seo"&gt;Jekyll SEO&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://bretthard.in/2012/06/jekyll-and-seo-optimization/"&gt;Constantly Learning: Jekyll and SEO Optimization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="참고한-jekyll-사용기"&gt;참고한 Jekyll 사용기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://svperstarz.github.io/jekyll-docs-ko/"&gt;Jekyll 한국어 번역 사이트 • Simple, blog-aware, static sites&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://spoqa.github.io/2011/12/17/about-spoqa-blog-creation.html"&gt;Spoqa Tech Blog- Spoqa 블로그 탄생 비화&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://devblog.croquis.com/ko/2012/05/22/1-jekyll-blog.html"&gt;Jekyll을 이용해서 블로그 만들기 (1)&lt;/a&gt; : jekyllbootstrap을 사용한 블로그 사용 후기&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://dogfeet.github.io/articles/2012/github-pages.html"&gt;#dogfeet - GitHub의 페이지 기능 이용하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://ohyecloudy.com/ddiary/2013/09/21/hello-jekyll/"&gt;hello jekyll! jekyll-bootstrap 이용한 블로그&lt;/a&gt; : pending branch에서 글을 쓰고 gh-pages 브랜치로 글을 발행 한다고 함&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;jekyll bootstrap : [The Quickest Way to Blog on GitHub Pages.&lt;/td&gt;
          &lt;td&gt;ruhoh universal static blog generator](http://jekyllbootstrap.com/)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="http://nolboo.github.io/blog/2013/10/15/free-blog-with-github-jekyll/"&gt;지킬로 깃허브에 무료 블로그 만들기 - Nolboo’s Blog&lt;/a&gt; : 지킬 설치 과정이 엄청 자세하다.&lt;/li&gt;
&lt;/ul&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/vM9brDt0XAg" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/vM9brDt0XAg/jekyll-blog-quick-start</link>
                <guid isPermaLink="false">http://corazzon.github.io/jekyll-blog-quick-start</guid>
                <pubDate>2014-02-26T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/jekyll-blog-quick-start</feedburner:origLink></item>

        <item>
                <title>코드카데미로 파이썬 배우기</title>
                <description>&lt;h2 id="codecademy-python수업-후기"&gt;Codecademy python수업 후기&lt;/h2&gt;

&lt;p&gt;지난 몇달 간 &lt;code class="highlighter-rouge"&gt;python&lt;/code&gt;도 제대로 모르면서 취미로 무작정 &lt;code class="highlighter-rouge"&gt;django&lt;/code&gt;로 웹어플리케이션을 만들면서 모르는 건 그때 그때 구글링을 통해 해결하곤 했었는데 python을 제대로 알지 못 하고 django를 다루다 보니 장님 코끼리 만지는 기분으로 python 기초에 대한 부족함을 늘 느끼고 있었다.&lt;/p&gt;

&lt;p&gt;보통 새로운 언어를 익힐 때 환경을 설정하는 일이 까다롭고 힘들 때가 많아서 시작도 전에 환경설정에서 지치는 일이 다반사였다. 하지만 &lt;code class="highlighter-rouge"&gt;codecademy&lt;/code&gt;는 이미 구축되어 있는 가상환경 안에서 직접 타이핑해보며 튜토리얼을 따라해 볼 수 있어서 초기 학습에 드는 비용을 줄일 수 있는 점이 좋았다. 크롬 확장 중에 파이썬을 직접 타이핑해보며 결과를 볼 수 있는 좋은 도구도 있긴하고 초기 비용을 들여서 제대로 공부하는 게 더 좋긴 하겠지만, 진입장벽을 낮춰주어 처음부터 지치는 일이 없어서 좋았다. - 얼마 전에 mavericks로 OS를 업데이트하고 여러 버전의 python 사용으로 virtualenv가 제대로 작동하지 않은 적이 있었는데 그 문제 해결을 위해 이틀 동안 아무것도 못하고 이 문제에만 매달려 있어야 했던 기억을 떠올려 보면(아…지금 생각해도…) 정말 훌륭한 튜터이자 도구인 셈이다.&lt;/p&gt;

&lt;p&gt;책 혹은 인터넷에 있는 여러 강좌들을 에디팅툴과 오가며 타이핑해가며 학습하는 것보다 각 챕터별 주제에 맞는 예제와 코드 그리고 그 결과를 즉각적으로 보여줘서 게임을 진행하는 것처럼 운영되는 진행 방식도 다음 문제는 어떤게 나올지 궁금해 지도록 흥미를 유발하기에 충분했다.&lt;/p&gt;

&lt;p&gt;또, 여행을 떠나 본다거나 선생님이 되어 학생의 점수를 채점해 보게 한다거나 간단한 배틀쉽게임을 만들어 보게 하는 등의 스토리 텔링을 통해 단순한 내용도 재미있게 전달되었다.&lt;/p&gt;

&lt;p&gt;보통 프로그래밍언어를 익힐 때 아무리 좋은 책이나 온라인 상의 강좌를 보더라도 직접 타이핑하고 손가락에 익히지 않으면 체득하기가 어려운 편인데(백문이 불여일타) 이런 어려움을 극복할 수 있도록 환경설정이 잘 되어 있고 튜토리얼의 구성도 짜임새 있는 편이다.
그리고 해결되지 않는 문제가 있을 때는 화면 왼편 하단의 &lt;code class="highlighter-rouge"&gt;Q&amp;amp;A Forum&lt;/code&gt;을 이용하면 다른 학습자들의 도움을 받을 수도 있고 이미 다른 누군가가 올려놓은 질문에 대한 답으로 문제를 해결한 적도 많았다. 또, 나와는 다른 솔루션으로 해결하는 게 재미있기도 하고 왜 나는 저렇게 단순하고 간결하게 해결하지 못했을까 하는 생각과 함께 내 두뇌를 원망하기도 했다.&lt;/p&gt;

&lt;p&gt;개발서적을 보면서 프로그래밍을 공부할 때는 책 한권을 다 읽어도 의식하고 읽지 않으면 나중에 다시 책을 봤을 때 내가 이 내용을 읽었었나?하는 의문이 들며 너무나 새로운 내용인듯 할 때가 대부분이 었는데 매 단계마다 실습을 하거나 코드를 고치지 않았더라도 서브밋버튼을 눌러야만 다음 단계로 넘어가는 행동을 유도하는 게 책을 읽어 학습을 하는 것보다 훨씬 기억에 잘 남았다.&lt;/p&gt;

&lt;p&gt;너무 장점만 나열한거 같고 코드카데미빠스러운 글이된듯 하지만 몇몇 단순한 버그 외엔 프로그래밍을 시작하기에 정말 좋은 도구임에 틀림없다는 생각이 든다. 가끔 맞는 코드를 입력했는데도 오류를 내기도 하는데 그럴 땐 새로고침 버튼을 누르거나 다른 페이지로 이동했다가 다시 들어오면 해결이 되기도 한다고 Q&amp;amp;A포럼에 나와 있는데 그런 문제들이 종종 있긴 하다. 그리고 진행률이 계속 따라다니는데 이 숫자 때문에 더 학습하게 되는 거 같기도 하다.&lt;/p&gt;

&lt;p&gt;굳이 단점을 꼽아보자면 기본적인 내용만을 알려주기 때문에 이 수업만으로는 부족한 점이 좀 있긴하다. 하지만 앞서 이야기 했듯이 프로그래밍을 모르는 사람이 프로그래밍을 시작하기에 진입장벽을 낮춰주는 역할은 정말 훌륭하다고 느껴진다. 우리나라의 생활코딩과 병행한다면 장소와 장비의 구애를 받지않고 누구든 프로그래밍을 시작할 수 있을거 같다.(물론 데스크탑이나 노트북은 있어야겠지만) 그리고 누구나 코드카데미에 강좌를 개설할 수 있다고 하는데 아직 이건 자세히 살펴보지 않아서 잘 모르겠지만, 만약 그렇다면 수업이 점점 더 많아지고 좀 더 복잡한 내용들도 코드카데미를 통해 수업받을 수 있게 되지 않을까 싶다.&lt;/p&gt;

&lt;p&gt;우리집 꼬마가 가끔 모니터를 빤히 들여다 보고 있는 나를 보고 “엄마 뭐하는거에요?” 하고 물어본 적이 있는데 “응~ 프로그램 짜는거야” 했더니 “우유를 짜야지 왜 프로그램을 짜 하하하”하며 엄청 웃길래 나도 덩달아 엄청 웃었던 기억이 난다. 지금은 프로그래밍을 가르치기엔 너무 어린듯 하긴 하지만 몇몇 수학적 개념을 제외 한다면 어린이에게도 이 내용으로 프로그래밍을 가르쳐 줄 수 있지 않을까 하는 생각과 함께 내 아이에게도 이 수업을 알려주고 싶다는 생각이 든다.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-01.png" /&gt;
✐  어디까지 왔는지, 앞으로 학습할 내용을 한 눈에 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-02.png" /&gt;
✐  진행 상태와 내가 획득한 뱃지들&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-03.png" /&gt;
✐ 각 챕터에서 어디까지 왔는지 - 이전 수업으로 돌아가기도 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-04.png" /&gt;
✐ 수업 중간에 뱃지를 획득하곤 하는데 이게 은근히 동기부여가 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-05.png" /&gt;
✐&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;화면 왼쪽에는 학습내용, 그리고 실습해야 할 내용, 힌트보기 등이 있다.&lt;/li&gt;
  &lt;li&gt;터미널에서 코드를 치고 그 결과를 바로 확인해 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-06.png" /&gt;
&lt;img src="/images/2014/02/codecademy_python/codecademy_python-07.png" /&gt;
&lt;img src="/images/2014/02/codecademy_python/codecademy_python-08.png" /&gt;
&lt;img src="/images/2014/02/codecademy_python/codecademy_python-09.png" /&gt;
&lt;img src="/images/2014/02/codecademy_python/codecademy_python-11.png" /&gt;
&lt;img src="/images/2014/02/codecademy_python/codecademy_python-10.png" /&gt;
&lt;img src="/images/2014/02/codecademy_python/codecademy_python-12.png" /&gt;
✐ 조금씩 쉬엄쉬엄 해볼까 했는데 이 때부터 만사 제치고 여기만 매달려 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-14.png" /&gt;
✐ 저 진행률 때문에 계속 새로고침해 보게 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/2014/02/codecademy_python/codecademy_python-15.png" /&gt;
✐ 드디어 끝, 찾아보면 resume 버튼도 있어서 강좌를 다시 시작해서 해볼 수도 있다.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/github/GgbQ/~4/IZir4gCid-A" height="1" width="1" alt=""/&gt;</description>
                <link>http://feedproxy.google.com/~r/github/GgbQ/~3/IZir4gCid-A/learning-python-with-codecademy</link>
                <guid isPermaLink="false">http://corazzon.github.io/learning-python-with-codecademy</guid>
                <pubDate>2014-02-14T00:00:00+00:00</pubDate>
        <feedburner:origLink>http://corazzon.github.io/learning-python-with-codecademy</feedburner:origLink></item>


</channel>
</rss>
