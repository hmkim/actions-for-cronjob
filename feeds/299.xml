<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-5432537856508947805</id><updated>2019-05-09T20:53:03.330-07:00</updated><category term="UEFI"/><category term="EDK2"/><category term="EDKII"/><category term="EFI"/><category term="UDK2014"/><category term="asio"/><category term="boost"/><category term="build"/><category term="timer"/><category term="vmware"/><title type='text'>pieces of code</title><subtitle type='html'></subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>25</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-498121717067511464</id><published>2018-09-27T19:59:00.001-07:00</published><updated>2018-09-27T20:09:38.370-07:00</updated><title type='text'>코드 리뷰 </title><content type='html'>&lt;style&gt;/*---------------------------------------------------------------------------------------------  *  Copyright (c) Microsoft Corporation. All rights reserved.  *  Licensed under the MIT License. See License.txt in the project root for license information.  *--------------------------------------------------------------------------------------------*/ body {  font-family: &quot;Segoe WPC&quot;, &quot;Segoe UI&quot;, &quot;SFUIText-Light&quot;, &quot;HelveticaNeue-Light&quot;, sans-serif, &quot;Droid Sans Fallback&quot;;  font-size: 14px;  padding: 0 12px;  line-height: 22px;  word-wrap: break-word; }  #code-csp-warning {  position: fixed;  top: 0;  right: 0;  color: white;  margin: 16px;  text-align: center;  font-size: 12px;  font-family: sans-serif;  background-color:#444444;  cursor: pointer;  padding: 6px;  box-shadow: 1px 1px 1px rgba(0,0,0,.25); }  #code-csp-warning:hover {  text-decoration: none;  background-color:#007acc;  box-shadow: 2px 2px 2px rgba(0,0,0,.25); }   body.scrollBeyondLastLine {  margin-bottom: calc(100vh - 22px); }  body.showEditorSelection .code-line {  position: relative; }  body.showEditorSelection .code-active-line:before, body.showEditorSelection .code-line:hover:before {  content: &quot;&quot;;  display: block;  position: absolute;  top: 0;  left: -12px;  height: 100%; }  body.showEditorSelection li.code-active-line:before, body.showEditorSelection li.code-line:hover:before {  left: -30px; }  .vscode-light.showEditorSelection .code-active-line:before {  border-left: 3px solid rgba(0, 0, 0, 0.15); }  .vscode-light.showEditorSelection .code-line:hover:before {  border-left: 3px solid rgba(0, 0, 0, 0.40); }  .vscode-dark.showEditorSelection .code-active-line:before {  border-left: 3px solid rgba(255, 255, 255, 0.4); }  .vscode-dark.showEditorSelection .code-line:hover:before {  border-left: 3px solid rgba(255, 255, 255, 0.60); }  .vscode-high-contrast.showEditorSelection .code-active-line:before {  border-left: 3px solid rgba(255, 160, 0, 0.7); }  .vscode-high-contrast.showEditorSelection .code-line:hover:before {  border-left: 3px solid rgba(255, 160, 0, 1); }  img {  max-width: 100%;  max-height: 100%; }  a {  color: #4080D0;  text-decoration: none; }  a:focus, input:focus, select:focus, textarea:focus {  outline: 1px solid -webkit-focus-ring-color;  outline-offset: -1px; }  hr {  border: 0;  height: 2px;  border-bottom: 2px solid; }  h1 {  padding-bottom: 0.3em;  line-height: 1.2;  border-bottom-width: 1px;  border-bottom-style: solid; }  h1, h2, h3 {  font-weight: normal; }  h1 code, h2 code, h3 code, h4 code, h5 code, h6 code {  font-size: inherit;  line-height: auto; }  a:hover {  color: #4080D0;  text-decoration: underline; }  table {  border-collapse: collapse; }  table &gt; thead &gt; tr &gt; th {  text-align: left;  border-bottom: 1px solid; }  table &gt; thead &gt; tr &gt; th, table &gt; thead &gt; tr &gt; td, table &gt; tbody &gt; tr &gt; th, table &gt; tbody &gt; tr &gt; td {  padding: 5px 10px; }  table &gt; tbody &gt; tr + tr &gt; td {  border-top: 1px solid; }  blockquote {  margin: 0 7px 0 5px;  padding: 0 16px 0 10px;  border-left: 5px solid; }  code {  font-family: Menlo, Monaco, Consolas, &quot;Droid Sans Mono&quot;, &quot;Courier New&quot;, monospace, &quot;Droid Sans Fallback&quot;;  font-size: 14px;  line-height: 19px; }  body.wordWrap pre {  white-space: pre-wrap; }  .mac code {  font-size: 12px;  line-height: 18px; }  pre:not(.hljs), pre.hljs code &gt; div {  padding: 16px;  border-radius: 3px;  overflow: auto; }  /** Theming */  .vscode-light, .vscode-light pre code {  color: rgb(30, 30, 30); }  .vscode-dark, .vscode-dark pre code {  color: #DDD; }  .vscode-high-contrast, .vscode-high-contrast pre code {  color: white; }  .vscode-light code {  color: #A31515; }  .vscode-dark code {  color: #D7BA7D; }  .vscode-light pre:not(.hljs), .vscode-light code &gt; div {  background-color: rgba(220, 220, 220, 0.4); }  .vscode-dark pre:not(.hljs), .vscode-dark code &gt; div {  background-color: rgba(10, 10, 10, 0.4); }  .vscode-high-contrast pre:not(.hljs), .vscode-high-contrast code &gt; div {  background-color: rgb(0, 0, 0); }  .vscode-high-contrast h1 {  border-color: rgb(0, 0, 0); }  .vscode-light table &gt; thead &gt; tr &gt; th {  border-color: rgba(0, 0, 0, 0.69); }  .vscode-dark table &gt; thead &gt; tr &gt; th {  border-color: rgba(255, 255, 255, 0.69); }  .vscode-light h1, .vscode-light hr, .vscode-light table &gt; tbody &gt; tr + tr &gt; td {  border-color: rgba(0, 0, 0, 0.18); }  .vscode-dark h1, .vscode-dark hr, .vscode-dark table &gt; tbody &gt; tr + tr &gt; td {  border-color: rgba(255, 255, 255, 0.18); }  .vscode-light blockquote, .vscode-dark blockquote {  background: rgba(127, 127, 127, 0.1);  border-color: rgba(0, 122, 204, 0.5); }  .vscode-high-contrast blockquote {  background: transparent;  border-color: #fff; } &lt;/style&gt;&lt;br /&gt;&lt;br /&gt;&lt;style&gt;/* Tomorrow Theme */ /* http://jmblog.github.com/color-themes-for-google-code-highlightjs */ /* Original theme - https://github.com/chriskempson/tomorrow-theme */  /* Tomorrow Comment */ .hljs-comment, .hljs-quote {  color: #8e908c; }  /* Tomorrow Red */ .hljs-variable, .hljs-template-variable, .hljs-tag, .hljs-name, .hljs-selector-id, .hljs-selector-class, .hljs-regexp, .hljs-deletion {  color: #c82829; }  /* Tomorrow Orange */ .hljs-number, .hljs-built_in, .hljs-builtin-name, .hljs-literal, .hljs-type, .hljs-params, .hljs-meta, .hljs-link {  color: #f5871f; }  /* Tomorrow Yellow */ .hljs-attribute {  color: #eab700; }  /* Tomorrow Green */ .hljs-string, .hljs-symbol, .hljs-bullet, .hljs-addition {  color: #718c00; }  /* Tomorrow Blue */ .hljs-title, .hljs-section {  color: #4271ae; }  /* Tomorrow Purple */ .hljs-keyword, .hljs-selector-tag {  color: #8959a8; }  .hljs {  display: block;  overflow-x: auto;  color: #4d4d4c;  padding: 0.5em; }  .hljs-emphasis {  font-style: italic; }  .hljs-strong {  font-weight: bold; } &lt;/style&gt;&lt;br /&gt;&lt;br /&gt;&lt;style&gt;/*  * Markdown PDF CSS  */   body {  font-family:  &quot;Meiryo&quot;, &quot;Segoe WPC&quot;, &quot;Segoe UI&quot;, &quot;SFUIText-Light&quot;, &quot;HelveticaNeue-Light&quot;, sans-serif, &quot;Droid Sans Fallback&quot;; }  pre {  background-color: #f8f8f8;  border: 1px solid #cccccc;  border-radius: 3px;  overflow-x: auto;  white-space: pre-wrap;  overflow-wrap: break-word; }  pre:not(.hljs) {  padding: 23px;  line-height: 19px; }  blockquote {  background: rgba(127, 127, 127, 0.1);  border-color: rgba(0, 122, 204, 0.5); }  .emoji {  height: 1.4em; }  /* for inline code */ :not(pre):not(.hljs) &gt; code {  color: #C9AE75; /* Change the old color so it seems less like an error */  font-size: inherit; }  /* Page Break : use &lt;div class=&quot;page&quot;/&gt;to insert page break -------------------------------------------------------- */ .page {  page-break-after: always; } &lt;/style&gt;&lt;br /&gt;&lt;br /&gt;BoB 에서 프로젝트 멘토링을 하면서 코드 리뷰를 하다가, 기록을 남겨두면 좋을것 같아서 적어봅니다.&lt;br /&gt;아래 함수는 특정 레지스트리 키 경로를 입력받고, 키 내부의 값을 읽어서 출력하는 함수로 보이네요.&lt;br /&gt;&lt;br /&gt;&lt;pre class=&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;int Reg_Read(const char* subkey, TCHAR* value) {&lt;br /&gt; LONG ret;&lt;br /&gt; DWORD data_size = 1024;&lt;br /&gt; DWORD data_type;&lt;br /&gt; TCHAR* data_buffer = (TCHAR*)malloc(data_size);&lt;br /&gt; HKEY hKey;&lt;br /&gt;&lt;br /&gt; RtlZeroMemory(data_buffer, sizeof(data_buffer));&lt;br /&gt;&lt;br /&gt; ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE,&lt;br /&gt;  subkey,&lt;br /&gt;  0, KEY_ALL_ACCESS, &amp;amp;hKey);&lt;br /&gt;&lt;br /&gt; if (ret != ERROR_SUCCESS) {&lt;br /&gt;  printf(&quot;RegOpenKey Failed! \n &quot;);&lt;br /&gt;  return 0;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //memset(data_buffer, 0, sizeof(data_buffer));&lt;br /&gt; //data_size = sizeof(data_buffer);&lt;br /&gt; RegQueryValueEx(hKey, &quot;UninstallString&quot;, 0, &amp;amp;data_type, (LPBYTE)data_buffer, (DWORD*)&amp;amp;data_size);&lt;br /&gt; RegCloseKey(hKey);&lt;br /&gt; value = data_buffer;&lt;br /&gt; printf(&quot;Value : %s\n&quot;, value);&lt;br /&gt; free(data_buffer);&lt;br /&gt; data_buffer = NULL;&lt;br /&gt; return 1;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;int main() {&lt;br /&gt; TCHAR* value = nullptr;&lt;br /&gt; const char* subkey = &quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{19DD1D8D-927F-45DF-ADF4-75D38267848D}&quot;;&lt;br /&gt; Reg_Read(subkey, value);&lt;br /&gt; &lt;br /&gt;    printf(&quot;Value : %s\n&quot;, value);&lt;br /&gt; getchar();&lt;br /&gt;}&lt;br /&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;몇 가지 고쳤으면 하는 점들이 보이네요.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;리턴 값의 의미가 모호하다.&lt;/li&gt;&lt;li&gt;입력값 검증이 없다.&lt;/li&gt;&lt;li&gt;변수의 사용&lt;br /&gt;&lt;ul&gt;&lt;li&gt;사용하는 시점에 선언하자.&lt;/li&gt;&lt;li&gt;변수는 선언시 초기화하자.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;리소스 관리&lt;br /&gt;&lt;ul&gt;&lt;li&gt;할당한 메모리는 반드시 소멸하자.&lt;/li&gt;&lt;li&gt;시스템 리소스 (레지스트리 키 핸들 등)는 반드시 반환해야 한다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;유니코드 함수와 안시코드 함수, 변수를 구분하자.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;char* 변수를 입력으로 받는 함수는 RegOpenKeyExA()&lt;/li&gt;&lt;li&gt;wchar* 변수를 입력으로 받는 함수는 RegOpenKeyExW()&lt;/li&gt;&lt;li&gt;귀찮으면 TCHAR* 타입의 변수를 사용하고, RegOpenKeyEx()&lt;/li&gt;&lt;li&gt;당연히 printf 도 _tprintf() 를 사용해야 합니다.&lt;/li&gt;&lt;li&gt;char*, wchar* 를 정확히 인지하지 않은상태에서 혼용하면 안됨&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;에러로그를 남길때는 최소한 어떤 이유로 에러가 났는지 추적에 필요한 단서를 남기자.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;리턴값 또는 GetLastError() 코드 정도는 기록하자.&lt;/li&gt;&lt;li&gt;에러로그는 에러 추적을 위해 남기는 것이다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;리턴값이 있는 외부 함수를 호출했으면 반드시 리턴 값을 확인하자.&lt;/li&gt;&lt;li&gt;함수 설계 상의 문제&lt;br /&gt;&lt;ul&gt;&lt;li&gt;value 값이 output 파라미터로 사용되고 있으나&lt;/li&gt;&lt;li&gt;value 값의 타입을 어디에서도 정확히 명시 하지 않고 있다(string 인지, dword 인지).&lt;/li&gt;&lt;li&gt;전체적인 느낌으로는 string 타입이라고 가정하고 작성한 것 같네요.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;아주 심각한 문제인데, 소멸된 메모리에 접근하는 문제가 있습니다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;out-parameter 로 사용된 value 가 가리키는 포인터는 이미 소멸되었습니다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;정도가 될 것 같습니다.&lt;br /&gt;&lt;pre class=&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;int Reg_Read(const char* subkey, TCHAR* value) {&lt;br /&gt; LONG ret;&lt;br /&gt; DWORD data_size = 1024;&lt;br /&gt; DWORD data_type;&lt;br /&gt; TCHAR* data_buffer = (TCHAR*)malloc(data_size);&lt;br /&gt; HKEY hKey;&lt;br /&gt;&lt;br /&gt; RtlZeroMemory(data_buffer, sizeof(data_buffer));&lt;br /&gt;&lt;br /&gt; ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE,&lt;br /&gt;  subkey,&lt;br /&gt;  0, KEY_ALL_ACCESS, &amp;amp;hKey);&lt;br /&gt;&lt;br /&gt; if (ret != ERROR_SUCCESS) {&lt;br /&gt;  printf(&quot;RegOpenKey Failed! \n &quot;);&lt;br /&gt;&lt;br /&gt;        //&lt;br /&gt;        //  이렇게 리턴해버리면 data_buffer 에 할당한 메모리는 해제하지 못하고&lt;br /&gt;        //  프로그램이 종료될 때 까지 자원만 차지하고 있게됩니다.&lt;br /&gt;        //  이건 아주 심각한 문제입니다. &lt;br /&gt;        //&lt;br /&gt;  return 0;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //memset(data_buffer, 0, sizeof(data_buffer));&lt;br /&gt; //data_size = sizeof(data_buffer);&lt;br /&gt; RegQueryValueEx(hKey, &quot;UninstallString&quot;, 0, &amp;amp;data_type, (LPBYTE)data_buffer, (DWORD*)&amp;amp;data_size);&lt;br /&gt; RegCloseKey(hKey);&lt;br /&gt;&lt;br /&gt;    //&lt;br /&gt;    // value 에 포인터를 할당해 두고, free 해버리면 value 는 &lt;br /&gt;    // 더이상 유효한 메모리를 가리키고 있지 않게됩니다. &lt;br /&gt;    //&lt;br /&gt;    value = data_buffer;&lt;br /&gt; printf(&quot;Value : %s\n&quot;, value);&lt;br /&gt; free(data_buffer);&lt;br /&gt; data_buffer = NULL;&lt;br /&gt;&lt;br /&gt; return 1;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;int main() {&lt;br /&gt;&lt;br /&gt; TCHAR* value = nullptr;&lt;br /&gt; const char* subkey = &quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{19DD1D8D-927F-45DF-ADF4-75D38267848D}&quot;;&lt;br /&gt;&lt;br /&gt;    //&lt;br /&gt;    //  Reg_Read() 가 실패했다면 value 는 여전히 nullptr 입니다. &lt;br /&gt;    //&lt;br /&gt; Reg_Read(subkey, value);&lt;br /&gt; &lt;br /&gt;    //&lt;br /&gt;    // value 는 &lt;br /&gt;    //      - Reg_Read() 가 성공했다면 이미 유효한 포인터가 아니므로 펑펑펑~~&lt;br /&gt;    //      - Reg_Read() 가 실패했다면 nullptr 이니까 당연히 펑펑펑~~&lt;br /&gt;    // 어쨌거나 펑펑펑~ ㅅㅂ&lt;br /&gt;    //&lt;br /&gt;    printf(&quot;Value : %s\n&quot;, value);&lt;br /&gt; getchar();&lt;br /&gt;&lt;br /&gt;    //&lt;br /&gt;    //  리턴값도 없어요. 아마 컴파일러에서 에러를 뿜었을텐데...(컴파일도 안해본건가요...ㅠㅠ)?&lt;br /&gt;    //&lt;br /&gt;}&lt;br /&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;고쳐볼까요?&lt;br /&gt;&lt;pre class=&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;#include &quot;stdafx.h&quot;&lt;br /&gt;#define WIN32_LEAN_AND_MEAN&lt;br /&gt;#include &lt;windows .h=&quot;&quot;&gt;&lt;br /&gt;#include &lt;memory&gt;&lt;br /&gt;#include &lt;crtdbg .h=&quot;&quot;&gt;&lt;br /&gt;#include &lt;sal .h=&quot;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;/// @brief subkey 내부 value 값을 읽어 리턴한다. &lt;br /&gt;/// @param subkey 레지스트리 키&lt;br /&gt;/// @param value 읽을 대상 키 이름&lt;br /&gt;/// @return 성공시 true 를 리턴하고, value 포인터에 읽은 문자열 포인터를 할당&lt;br /&gt;///   호출자는 반드시 value 포인터를 소멸시켜주어야 함&lt;br /&gt;bool &lt;br /&gt;Reg_Read(&lt;br /&gt; _In_z_ const TCHAR* subkey,&lt;br /&gt; _Outptr_ TCHAR* value&lt;br /&gt;)&lt;br /&gt;{&lt;br /&gt; _ASSERTE(nullptr != subkey);&lt;br /&gt; _ASSERTE(nullptr == value);&lt;br /&gt; if (nullptr == subkey || nullptr != value) return false;&lt;br /&gt;&lt;br /&gt; HKEY hKey = NULL;&lt;br /&gt; DWORD ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE,&lt;br /&gt;        subkey,&lt;br /&gt;        0, &lt;br /&gt;        KEY_ALL_ACCESS, &lt;br /&gt;        &amp;amp;hKey);&lt;br /&gt;&lt;br /&gt; if (ret != ERROR_SUCCESS) &lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;RegOpenKey Failed!, ret=0x%08x\n&quot;), ret);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt;    //&lt;br /&gt;    //  여기서는 절대로 hKey 가 NULL 이 아니어야 합니다.&lt;br /&gt;    //&lt;br /&gt;    _ASSERTE(NULL != hKey);&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // 이제 앞으로 어떤 일이 발생하든지간에 hKey 는 반드시 &lt;br /&gt; // RegCloseHandle() 로 닫아주어야 합니다.&lt;br /&gt; //&lt;br /&gt;&lt;br /&gt; DWORD data_size = 1024;&lt;br /&gt; TCHAR* data_buffer = (TCHAR*)malloc(data_size);&lt;br /&gt;    if (nullptr == data_buffer)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;Not enough memory \n&quot;));&lt;br /&gt;&lt;br /&gt;  RegCloseKey(hKey);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;    _ASSERTE(nullptr != data_buffer);&lt;br /&gt; RtlZeroMemory(data_buffer, sizeof(data_buffer));&lt;br /&gt;&lt;br /&gt; DWORD data_type = REG_NONE;&lt;br /&gt; ret = RegQueryValueEx(hKey, &lt;br /&gt;        _T(&quot;UninstallString&quot;), &lt;br /&gt;        0, &lt;br /&gt;        &amp;amp;data_type, &lt;br /&gt;        (LPBYTE)data_buffer, &lt;br /&gt;        (DWORD*)&amp;amp;data_size);&lt;br /&gt; if (ret != ERROR_SUCCESS)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;RegQueryValueEx Failed!, ret=0x%08x\n&quot;), ret);&lt;br /&gt;&lt;br /&gt;  //&lt;br /&gt;  // 잊지 말고 핸들과 메모리를 소멸시켜 주어야 합니다.&lt;br /&gt;  //&lt;br /&gt;  free(data_buffer);&lt;br /&gt;  RegCloseKey(hKey);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // value 가 string 타입이 아니라면 문제가 있을 수 있으니&lt;br /&gt; // 확인해주어야 합니다.&lt;br /&gt; //&lt;br /&gt; if (data_type != REG_SZ || data_type != REG_MULTI_SZ || data_type != REG_EXPAND_SZ)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;Type of value is not string. actual type=%u&quot;), data_type);&lt;br /&gt;&lt;br /&gt;  //&lt;br /&gt;  // 역시 잊지 말고 핸들과 메모리를 소멸시켜 주어야 합니다.&lt;br /&gt;  //&lt;br /&gt;  free(data_buffer);&lt;br /&gt;  RegCloseKey(hKey);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // 역시 잊지 말고 핸들을 닫아주어야지요.&lt;br /&gt; //&lt;br /&gt; RegCloseKey(hKey);&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // data_buffer 는 free 하면 안됍니다.&lt;br /&gt; // &lt;br /&gt; value = data_buffer;&lt;br /&gt; //free(data_buffer); &lt;br /&gt; _tprintf(_T(&quot;Value : %s\n&quot;), value);&lt;br /&gt; data_buffer = NULL;&lt;br /&gt;&lt;br /&gt; return true;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;int main()&lt;br /&gt;{&lt;br /&gt; TCHAR* value = nullptr;&lt;br /&gt; const TCHAR* subkey = _T(&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{19DD1D8D-927F-45DF-ADF4-75D38267848D}&quot;);&lt;br /&gt; if (true != Reg_Read(subkey, value))&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;Reg_Read() failed. \n&quot;));&lt;br /&gt;  return -1;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // 여기까지 왔다면 value 는 절대 nullptr 이 아니어야 합니다 .&lt;br /&gt; // 그리고, value 는 잊지 말고 소멸시켜주어야 합니다. &lt;br /&gt; //&lt;br /&gt; _ASSERTE(nullptr != value);&lt;br /&gt; _tprintf(_T(&quot;Value : %s\n&quot;), value);&lt;br /&gt; free(value);&lt;br /&gt; getchar();&lt;br /&gt;&lt;br /&gt;    return 0;&lt;br /&gt;}&lt;br /&gt;&lt;/sal&gt;&lt;/crtdbg&gt;&lt;/memory&gt;&lt;/windows&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;수정된 내용을 보면&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/code-quality/understanding-sal?view=vs-2017&quot;&gt;sal notation&lt;/a&gt; 적용&lt;br /&gt;&lt;ul&gt;&lt;li&gt;코드를 읽는데 도움이 되는것 뿐만 아니라 컴파일러가 오류도 잡아줍니다.&lt;/li&gt;&lt;li&gt;강추! 강추! Visual Studio 를 사용한다면 무조건 쓰세요.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;_ASSERT 코드 (아무리 강조해도 지나치지 않습니다.)&lt;/li&gt;&lt;li&gt;리턴값 체크&lt;/li&gt;&lt;li&gt;변수 선언은 최대한 늦게, 생성즉시 초기화하기&lt;/li&gt;&lt;li&gt;char, wchar_t 를 TCHAR 로 통일&lt;/li&gt;&lt;li&gt;리소스 릭 제거 (레지스트리 핸들, 메모리)&lt;/li&gt;&lt;li&gt;레지스트리 value 타입 확인&lt;/li&gt;&lt;li&gt;value 포인터 잘 다루기 (ㅠ,.ㅠ)&lt;/li&gt;&lt;li&gt;등등...&lt;/li&gt;&lt;/ul&gt;정도 입니다.&lt;br /&gt;하지만 아직 많은 문제가 있습니다.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;실수하기 너무 쉬운 코드&lt;br /&gt;&lt;ul&gt;&lt;li&gt;memory 소멸을 여러군데에서 하고있고, 성공하는 경우 호출자가 value 메모리를 해제해야 합니다.&lt;/li&gt;&lt;li&gt;코드가 길어지거나, 로직이 더 복잡해 지거나, 다른 사람이 코드를 수정한다면 실수하기 딱 좋은 코드입니다.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;RegQueryValueEx() 함수의 사용&lt;br /&gt;&lt;ul&gt;&lt;li&gt;현재는 1024 바이트로 고정된 버퍼를 사용합니다.&lt;/li&gt;&lt;li&gt;더 긴 문자열을 읽어야 한다면?&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;그래서 한번 더 고쳤습니다.&lt;br /&gt;&lt;pre class=&quot;hljs&quot;&gt;&lt;code&gt;&lt;div&gt;#include &quot;stdafx.h&quot;&lt;br /&gt;#define WIN32_LEAN_AND_MEAN&lt;br /&gt;#include &lt;windows .h=&quot;&quot;&gt;&lt;br /&gt;#include &lt;memory&gt;&lt;br /&gt;#include &lt;crtdbg .h=&quot;&quot;&gt;&lt;br /&gt;#include &lt;sal .h=&quot;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;class SafeRegHandle&lt;br /&gt;{&lt;br /&gt;public:&lt;br /&gt; SafeRegHandle(_In_ HKEY key) : _key(key)&lt;br /&gt; {&lt;br /&gt;  _ASSERTE(NULL != key);&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; ~SafeRegHandle()&lt;br /&gt; {&lt;br /&gt;  _ASSERTE(NULL != _key);&lt;br /&gt;  RegCloseKey(_key);&lt;br /&gt; }&lt;br /&gt;private:&lt;br /&gt; HKEY _key;&lt;br /&gt;};&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;/// @brief subkey 내부 value 값을 읽어 리턴한다. &lt;br /&gt;/// @param subkey 레지스트리 키&lt;br /&gt;/// @param value 읽을 대상 키 이름&lt;br /&gt;/// @return 성공시 true 를 리턴하고, value 포인터에 읽은 문자열 포인터를 할당&lt;br /&gt;///   호출자는 반드시 value 포인터를 소멸시켜주어야 함&lt;br /&gt;bool &lt;br /&gt;Reg_Read(&lt;br /&gt; _In_z_ const TCHAR* subkey,&lt;br /&gt; _Outptr_ TCHAR* value&lt;br /&gt;)&lt;br /&gt;{&lt;br /&gt; _ASSERTE(nullptr != subkey);&lt;br /&gt; _ASSERTE(nullptr == value);&lt;br /&gt; if (nullptr == subkey || nullptr != value) return false;&lt;br /&gt;&lt;br /&gt; HKEY hKey = NULL;&lt;br /&gt; DWORD ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE,&lt;br /&gt;        subkey,&lt;br /&gt;        0,&lt;br /&gt;        KEY_ALL_ACCESS,&lt;br /&gt;        &amp;amp;hKey);&lt;br /&gt;&lt;br /&gt; if (ret != ERROR_SUCCESS)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;RegOpenKey Failed!, ret=0x%08x\n&quot;), ret);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt; _ASSERTE(NULL != hKey);&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // SafeRegHandle 객체는 함수가 리턴되는 시점에 알아서 소멸자가 호출되고&lt;br /&gt; // hKey 는 SafeRegHandle 클래스의 소멸자에서 닫아줍니다. &lt;br /&gt; // 따라서 이제 hKey는 잊고 살면 됩니다. &lt;br /&gt; //&lt;br /&gt; SafeRegHandle safe_key(hKey);&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // RegQueryValueEx() 함수는 입력받은 버퍼가 부족한 경우 ERROR_MORE_DATA 를 리턴합니다. &lt;br /&gt; // 만일 입력받은 버퍼가 NULL 을 입력한 경우 필요한 사이즈를 data_size 변수에 바이트 단위로&lt;br /&gt; // 설정하고 ERROR_SUCCESS 를 리턴합니다. &lt;br /&gt; // &lt;br /&gt; // 참고로 가변길이의 데이터를 다루는 대부분의 Windows API 가 이런 패턴을 보입니다. &lt;br /&gt; //&lt;br /&gt; // 따라서 &lt;br /&gt; // 1) RegQueryValueEx( NULL, size_need ) 호출로 필요한 메모리 크기를 구하고&lt;br /&gt; // 2) 메모리를 할당하고, &lt;br /&gt; //  3) RegQueryValueEx() 를 호출&lt;br /&gt; // 데이터를 읽어옵니다. &lt;br /&gt; //&lt;br /&gt; DWORD data_type = REG_NONE;&lt;br /&gt; DWORD data_size = 0;&lt;br /&gt; char* data_buffer = nullptr;&lt;br /&gt;&lt;br /&gt; // 필요한 사이즈 구하기 &lt;br /&gt; ret = RegQueryValueEx(hKey,&lt;br /&gt;        _T(&quot;UninstallString&quot;),&lt;br /&gt;        0,&lt;br /&gt;        &amp;amp;data_type,&lt;br /&gt;        (LPBYTE)data_buffer,&lt;br /&gt;        (DWORD*)&amp;amp;data_size);&lt;br /&gt; if (ret != ERROR_SUCCESS)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;RegQueryValueEx Failed!, ret=0x%08x\n&quot;), ret);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; // null terminate 를 위한 여분의 메모리를 추가 할당&lt;br /&gt; data_buffer = (char*)malloc(data_size + sizeof(TCHAR));&lt;br /&gt; if (nullptr == data_buffer)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;Not enough memory \n&quot;));&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt; _ASSERTE(nullptr != data_buffer);&lt;br /&gt;&lt;br /&gt; // 데이터를 읽습니다. &lt;br /&gt; ret = RegQueryValueEx(hKey,&lt;br /&gt;        _T(&quot;UninstallString&quot;),&lt;br /&gt;        0,&lt;br /&gt;        &amp;amp;data_type,&lt;br /&gt;        (LPBYTE)data_buffer,&lt;br /&gt;        (DWORD*)&amp;amp;data_size);&lt;br /&gt; if (ret != ERROR_SUCCESS)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;RegQueryValueEx Failed!, ret=0x%08x\n&quot;), ret);&lt;br /&gt;&lt;br /&gt;  //&lt;br /&gt;  // 잊지 말고, 메모리를 소멸시켜 주어야 합니다.&lt;br /&gt;  //&lt;br /&gt;  free(data_buffer);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // value 가 string 타입이 아니라면 문제가 있을 수 있으니&lt;br /&gt; // 확인해주어야 합니다.&lt;br /&gt; //&lt;br /&gt; if (data_type != REG_SZ || data_type != REG_MULTI_SZ || data_type != REG_EXPAND_SZ)&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;Type of value is not string. actual type=%u&quot;), data_type);&lt;br /&gt;&lt;br /&gt;  //&lt;br /&gt;  // 잊지 말고, 메모리를 소멸시켜 주어야 합니다.&lt;br /&gt;  //&lt;br /&gt;  free(data_buffer);&lt;br /&gt;  return false;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // data_buffer 는 free 하면 안됍니다.&lt;br /&gt; // &lt;br /&gt; value = (TCHAR*)data_buffer;&lt;br /&gt; _tprintf(_T(&quot;Value : %s\n&quot;), value);&lt;br /&gt; data_buffer = NULL;&lt;br /&gt;&lt;br /&gt; return true;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;int main()&lt;br /&gt;{&lt;br /&gt; TCHAR* value = nullptr;&lt;br /&gt; const TCHAR* subkey = _T(&quot;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{19DD1D8D-927F-45DF-ADF4-75D38267848D}&quot;);&lt;br /&gt; if (true != Reg_Read(subkey, value))&lt;br /&gt; {&lt;br /&gt;  _tprintf(_T(&quot;Reg_Read() failed. \n&quot;));&lt;br /&gt;  return -1;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; //&lt;br /&gt; // 여기까지 왔다면 value 는 절대 nullptr 이 아니어야 합니다 .&lt;br /&gt; // 그리고, value 는 잊지 말고 소멸시켜주어야 합니다. &lt;br /&gt; //&lt;br /&gt; _ASSERTE(nullptr != value);&lt;br /&gt; _tprintf(_T(&quot;Value : %s\n&quot;), value);&lt;br /&gt; free(value);&lt;br /&gt; getchar();&lt;br /&gt;&lt;br /&gt;    return 0;&lt;br /&gt;}&lt;br /&gt;&lt;/sal&gt;&lt;/crtdbg&gt;&lt;/memory&gt;&lt;/windows&gt;&lt;/div&gt;&lt;/code&gt;&lt;/pre&gt;다시 한번 수정 된 내용을 보면&lt;br /&gt;&lt;ul&gt;&lt;li&gt; SafeRegHandle 클래스 추가&lt;br /&gt;&lt;ul&gt;&lt;li&gt;이건 아주 자주 사용되는 패턴인데, 아래 내용들을 참고하시면...&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization&quot;&gt;Resource acquisition is initialization&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Smart_pointer&quot;&gt;Smart pointer&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;RegQueryValueEx() 함수 사용 패턴 변화&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Windows API 사용시 아주 기본적인 사용 패턴이니까 익숙해지도록...&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;더 고치고 싶은것은 있지만, 이쯤에서 마무리 해야겠습니다.&lt;br /&gt;&lt;/body&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/498121717067511464/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2018/09/blog-post.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/498121717067511464'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/498121717067511464'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2018/09/blog-post.html' title='코드 리뷰 '/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-7826446136221172976</id><published>2018-03-30T21:56:00.001-07:00</published><updated>2018-03-30T21:56:25.987-07:00</updated><title type='text'>PreviousMode (한글 번역)</title><content type='html'>MSDN 원문주소:&amp;nbsp;https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/previousmode&lt;br /&gt;&lt;br /&gt;&lt;h1 class=&quot;code-line&quot; data-line=&quot;13&quot; id=&quot;previousmode&quot; style=&quot;border-bottom: 1px solid rgb(234, 236, 239); border-left-color: rgba(255, 255, 255, 0.18); border-right-color: rgba(255, 255, 255, 0.18); border-top-color: rgba(255, 255, 255, 0.18); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em; position: relative;&quot;&gt;PreviousMode&lt;/h1&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;15&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;유저모드 애플리케이션이&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;또는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 네이티브 시스템 서비스 루틴을 호출하면 시스템 콜 매커니즘이 호출 스레드를 커널모드로 트랩합니다. 매개 변수 값이 유저모드에서 시작되었음을 알리기 위해 호출자&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;vscode-workspace-resource:/c:/windows-driver-docs-forked/windows-driver-docs-pr/kernel/introduction-to-thread-objects.md&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;vscode-workspace-resource:/c:/windows-driver-docs-forked/windows-driver-docs-pr/kernel/introduction-to-thread-objects.md&quot;&gt;thread object&lt;/a&gt;의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;필드를&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;UserMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;로 설정합니다. 네이티브 시스템 서비스 루틴은 매개변수가 유저모드로부터 왔는지 확인하기 위해 호출 스레드의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;필드를 확인합니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;17&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;만일 커널모드 드라이버가 네이티브 시스템 서비스 루틴을 호출하고 매개 변수를 커널모드 루틴에 전달하는 경우 현재 스레드 오브젝트의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;필드는 반드시&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;KernelMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;이어야 합니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;19&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;커널모드 드라이버는 임의의 스레드 컨텍스트에서 실행 될 수 있고,&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;필드가&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;UserMode&lt;/span&gt;로 설정될 수 있습니다. 이 경우 커널모드 드라이버는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 네이티브 서비스 루틴을 호출하여 매개 변수 값이 신뢰할 수 있는, 커널모드 호출임을 알릴 수 있습니다.&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;호출은 현재 스레드 객체의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값을 겹쳐 쓰는 간단한 래퍼함수로 이동합니다. 래퍼함수는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;를&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;KernelMode&lt;/span&gt;로 설정하고&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 루틴을 호출합니다.&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전 루틴이 리턴하면 래퍼함수는 스레드 오브젝트의 원래&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값으로 복원하고 반환합니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;21&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;커널모드 드라이버는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 네이티브 시스템 서비스 루틴을 직접 호출할 수 있습니다. 커널모드 드라이버가 유저모드나 커널모드에서 시작될 수 있는 I/O 요청을 처리할때, 드라이버는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 루틴을 호출하여 루틴이 실행되는 동안 현재 스레드의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값이 변경되지 않도록 할 수 있습니다.&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;em style=&quot;box-sizing: border-box;&quot;&gt;Xxx&lt;/em&gt;&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴은 호출 스레드의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값을 통해 매개변수가 유저모드에서 왔는지 커널모드 콤포넌트에서 왔는지 판단하고, 적절하게 처리합니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;23&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;커널모드 드라이버가&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;em style=&quot;box-sizing: border-box;&quot;&gt;Xxx&lt;/em&gt;&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴을 호출하고, 현재 스레드 오브젝트의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값이 매개변수의 출처가 유저모드인지, 커널모드인지를 정확하게 가리키지 못한다면 오류가 발생 할 수 있습니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;25&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;예를 들어, 커널모드 드라이버가 임의의 스레드 컨텍스트에서 실행중이고,&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값이&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;UserMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;인 경우를 가정합니다. 만일 드라이버가 커널모드 파일 핸들을&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff566417&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff566417&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;NtClose&lt;/span&gt;&lt;/a&gt;루틴에 전달한 경우 이 루틴은&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값을 확인하고, 핸들이 유저모드 핸들이어야 한다고 결정합니다.&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;NtClose&lt;/span&gt;가 유저모드 핸들테이블에서 핸들을 찾을 수 없으므로 STATUS_INVALID_HANDLE 에러코드를 리턴합니다. 반면에 드라이버는 절대 핸들을 닫을 수 없기 때문에 핸들 누수 상황을 만들게 됩니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;27&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;다른 예로, 만일&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;em style=&quot;box-sizing: border-box;&quot;&gt;Xxx&lt;/em&gt;&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴의 매개변수에 입력 또는 출력 버퍼가 포함되어있고,&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;=&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;UserMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;인 경우 루틴은 버퍼를 검증하기 위해&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff559876&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff559876&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;ProbeForRead&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;또는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff559879&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff559879&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;ProbeForWrite&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴을 호출합니다. 만일 버퍼가 유저모드 메모리가 아니라 시스템 메모리에 할당되어있는 경우&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;ProbeFor&lt;em style=&quot;box-sizing: border-box;&quot;&gt;Xxx&lt;/em&gt;&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴은 예외를 발생시키고,&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;em style=&quot;box-sizing: border-box;&quot;&gt;Xxx&lt;/em&gt;&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴은 STATUS_ACCESS_VIOLATION 에러코드를 리턴하게 됩니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;29&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;필요한 경우 드라이버는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff545288&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff545288&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;ExGetPreviousMode&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴을 호출해서 현재 스레드 오브젝트의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값을 가져올 수 있습니다. 또는 요청된 I/O 작업 정보를 담고있는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff550694&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff550694&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;IRP&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;구조체의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;RequestorMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;필드를 읽을 수 있습니다.&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;RequestorMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;필드는 작업을 요청한 스레드의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;값의 사본을 포함합니다.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/7826446136221172976/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2018/03/previousmode.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/7826446136221172976'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/7826446136221172976'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2018/03/previousmode.html' title='PreviousMode (한글 번역)'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-3279361380179358747</id><published>2018-03-30T21:56:00.000-07:00</published><updated>2018-03-30T21:56:14.123-07:00</updated><title type='text'>Using Nt and Zw Versions of the Native System Services Routines (한글 번역)</title><content type='html'>MSDN 원문주소 :&amp;nbsp;https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/using-nt-and-zw-versions-of-the-native-system-services-routines&lt;br /&gt;&lt;br /&gt;&lt;h1 class=&quot;code-line&quot; data-line=&quot;13&quot; id=&quot;using-nt-and-zw-versions-of-the-native-system-services-routines&quot; style=&quot;border-bottom: 1px solid rgb(234, 236, 239); border-left-color: rgba(255, 255, 255, 0.18); border-right-color: rgba(255, 255, 255, 0.18); border-top-color: rgba(255, 255, 255, 0.18); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em; position: relative;&quot;&gt;Using Nt and Zw Versions of the Native System Services Routines&lt;/h1&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;15&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;Windows 의 네이티브 서비스 API 는 커널모드에서 동작하는 루틴들의 집합으로 이루어져있습니다. 이 루틴들의 이름은&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;또는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;로 시작합니다. 커널모드 드라이버들은 이 루틴들을 직접 호출할 수 있으며, 유저모드 어플리케이션들은 시스템 콜을 통해서 이 루틴들을 호출할 수 있습니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;17&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;몇몇 예외사항이 있긴 하지만 각각의 네이티브 시스템 서비스 루틴들은 비슷한 이름의 접두어만 다른 두가지 버전이 있습니다. 예를 들어&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://go.microsoft.com/fwlink/p/?linkid=157250&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;http://go.microsoft.com/fwlink/p/?linkid=157250&quot;&gt;NtCreateFile&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;와&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff566424&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff566424&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;ZwCreateFile&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;호출은 비슷한 작업을 수행하지만 사실은 동일한 커널모드 시스템 루틴에 의해서 처리됩니다. 유저모드에서의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;와&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전 루틴은 동일하지만 커널모드에서의&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;와&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전 루틴들은 호출자가 전달한 파라미터 값을 다루는 방식이 다릅니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;19&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;커널모드 드라이버는 전달되는 매개변수가 신뢰 할 수 있는 커널모드에서 전달된 것임을 알리기 위해&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 네이티브 서비스 루틴을 호출합니다. 이 경우 루틴은 매개변수를 검증하지 않고 안전하게 사용할 수 있다고 가정합니다. 그러나 매개변수가 유저모드 또는 커널모드 중 하나일 경우라면 드라이버는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 루틴을 호출하는데 이는 루틴을 호출한 스레드의 기록을 기반으로 매개변수가 유저모드에서 전달되었는지 커널모드에서 전달되었는지를 구별합니다. 커널모드 매개변수와 유저모드 매개변수를 구분하는 방법에 대한 자세한 내용은&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;vscode-workspace-resource:/c:/windows-driver-docs-forked/windows-driver-docs-pr/kernel/previousmode.md&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;vscode-workspace-resource:/c:/windows-driver-docs-forked/windows-driver-docs-pr/kernel/previousmode.md&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;PreviousMode&lt;/span&gt;&lt;/a&gt;를 참조하십시오.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;21&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;유저모드 애플리케이션이&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Nt&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;또는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Zw&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전의 네이티브 시스템 서비스 루틴을 호출하면 루틴은 항상 매개변수는 신뢰할 수 없는 유저모드에서 전달된 것으로 간주하고 매개변수를 사용하기 전에 철저히 검증합니다. 특히 루틴은 호출자가 제공한 버퍼를 검사하여 버퍼가 유효한 유저모드 메모리에 존재하고 있으며 올바르게 정렬되어있는지 확인합니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;23&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;네이티브 시스템 서비스 루틴은 매개변수에 대한 추가적인 가정을 합니다. 만일 커널모드 드라이버가 할당한 버퍼의 포인터를 매개변수로 받은 경우 버퍼는 유저모드 메모리가 아니라 시스템 메모리에 할당되어있다고 가정합니다. 만일 유저모드 애플리케이션에서 열어둔 핸들을 받으면 루틴은 커널모드 핸들테이블이 아니라 유저모드 핸들테이블에서 핸들을 찾습니다.&lt;/div&gt;&lt;div class=&quot;code-line&quot; data-line=&quot;25&quot; style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; position: relative;&quot;&gt;몇 가지 예에서 매개변수 값의 의미는 사용자 모드 및 커널모드에서의 호출간에 더 크게 다릅니다. 예를 들어&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff566488&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff566488&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;ZwNotifyChangeKey&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;루틴 (또는 해당&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;NtNotifyChangeKey&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;버전)에는 입력 매개변수 쌍이 있습니다.&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;ApcRoutine&lt;/em&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;과&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;ApcContext&lt;/em&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;는 유저모드에서의 호출인지 커널모드에서의 호출인지에 따라 의미가 다릅니다. 유저모드 호출인 경우&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;ApcRoutine&lt;/em&gt;은 APC 루틴을 가리키고,&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;ApcContext&lt;/em&gt;는 APC 루틴을 호출할 때 운영체제가 제공하는 컨텍스트 값을 가리킵니다. 커널모드 호출인 경우&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;ApcRoutine&lt;/em&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;은&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff557304&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; title=&quot;https://msdn.microsoft.com/library/windows/hardware/ff557304&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;WORK_QUEUE_ITEM&lt;/span&gt;&lt;/a&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;구조체를 가리키고&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;ApcContext&lt;/em&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;는&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;WORK_QUEUE_ITEM&lt;/span&gt;&lt;span class=&quot;Apple-converted-space&quot;&gt;&amp;nbsp;&lt;/span&gt;구조체에 의해서 기술되는 워크 큐 아이템의 타입을 가리킵니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/3279361380179358747/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2018/03/using-nt-and-zw-versions-of-native.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/3279361380179358747'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/3279361380179358747'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2018/03/using-nt-and-zw-versions-of-native.html' title='Using Nt and Zw Versions of the Native System Services Routines (한글 번역)'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-738801280702071607</id><published>2017-05-23T22:17:00.000-07:00</published><updated>2017-05-23T22:23:04.688-07:00</updated><title type='text'>vcpkg 사용하기 </title><content type='html'>&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;vcpkg&lt;/h1&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;vcpkg는 curl, boost, openssl 같은 자주 사용되는 3rd party 라이브러리들을 Visual Studio 에서 쉽게 사용할 수 있게 해주는 패키지 매니저입니다. openssl 같은 라이브러를 직접 빌드하려면 정말 귀찮고, 짜증 나는데 vcpkg 를 사용하면 이런 귀찮은 일들을 알아서 자동으로 다 해줍니다.&lt;/div&gt;&lt;/h1&gt;&lt;h2 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-top: 24px; padding-bottom: 0.3em;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#quick-start&quot; id=&quot;user-content-quick-start&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;vcpkg 를 사용하려면&amp;nbsp;&lt;a href=&quot;https://github.com/Microsoft/vcpkg&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot;&gt;github&lt;/a&gt;&amp;nbsp;을 clone 하고, 로컬에서 빌드만 하면 됩니다. Visual Studio 가 참조하는 헤더파일, 라이브러리 경로 설정들도 자동으로 다 해줍니다.&lt;/div&gt;&lt;ol style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;c:\work.vcpkg&lt;/code&gt;&amp;nbsp;에 clone 한다. (경로는 편한대로 알아서 하면 됩니다)&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;c:\work.vcpkg\bootstrap-vcpkg.bat&lt;/code&gt;&amp;nbsp;을 실행하면&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg.exe&lt;/code&gt;&amp;nbsp;를 생성합니다.&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg integrate install&lt;/code&gt;&amp;nbsp;명령으로 Visual Studio 설정을 해줍니다. (최초 실행시 관리자 권한 필요)&lt;/div&gt;&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg.exe&lt;/code&gt;&amp;nbsp;을 통해서 패키지 인스톨/업데이트/삭제 등등을 할 수 있습니다 (쉽습니다).&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt; C:\work.vcpkg&amp;gt;vcpkg.exe /?&lt;br /&gt; Commands:&lt;br /&gt;   vcpkg search [pat]              Search for packages available to be built&lt;br /&gt;   vcpkg install &lt;pkg&gt;...          Install a package&lt;br /&gt;   vcpkg remove &lt;pkg&gt;...           Uninstall a package&lt;br /&gt;   vcpkg remove --outdated         Uninstall all out-of-date packages&lt;br /&gt;   vcpkg list                      List installed packages&lt;br /&gt;   vcpkg update                    Display list of packages for updating&lt;br /&gt;   vcpkg hash &lt;file&gt; [alg]         Hash a file by specific algorithm, default SHA512&lt;br /&gt;&lt;br /&gt;   vcpkg integrate install         Make installed packages available user-wide. Requires admin privileges on first use&lt;br /&gt;   vcpkg integrate remove          Remove user-wide integration&lt;br /&gt;   vcpkg integrate project         Generate a referencing nuget package for individual VS project use&lt;br /&gt;&lt;br /&gt;   vcpkg export &lt;pkg&gt;... [opt]...  Exports a package&lt;br /&gt;   vcpkg edit &lt;pkg&gt;                Open up a port for editing (uses %EDITOR%, default &#39;code&#39;)&lt;br /&gt;   vcpkg import &lt;pkg&gt;              Import a pre-built library&lt;br /&gt;   vcpkg create &lt;pkg&gt; &lt;url&gt;&lt;br /&gt;             [archivename]        Create a new package&lt;br /&gt;   vcpkg owns &lt;pat&gt;                Search for files in installed packages&lt;br /&gt;   vcpkg cache                     List cached compiled packages&lt;br /&gt;   vcpkg version                   Display version information&lt;br /&gt;   vcpkg contact                   Display contact information to send feedback&lt;br /&gt;&lt;br /&gt; Options:&lt;br /&gt;   --triplet &lt;t&gt;                   Specify the target architecture triplet.&lt;br /&gt;                                   (default: %VCPKG_DEFAULT_TRIPLET%, see &#39;vcpkg help triplet&#39;)&lt;br /&gt;&lt;br /&gt;   --vcpkg-root &lt;path&gt;             Specify the vcpkg root directory&lt;br /&gt;                                   (default: %VCPKG_ROOT%)&lt;br /&gt;&lt;br /&gt; For more help (including examples) see the accompanying README.md.&lt;br /&gt;&lt;br /&gt; C:\work.vcpkg&amp;gt;&lt;br /&gt;&lt;/path&gt;&lt;/t&gt;&lt;/pat&gt;&lt;/url&gt;&lt;/pkg&gt;&lt;/pkg&gt;&lt;/pkg&gt;&lt;/pkg&gt;&lt;/file&gt;&lt;/pkg&gt;&lt;/pkg&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/h1&gt;&lt;h2 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-top: 24px; padding-bottom: 0.3em;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#라이브러리-설치&quot; id=&quot;user-content-라이브러리-설치&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;라이브러리 설치&lt;/h2&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg.exe install package&lt;/code&gt;&amp;nbsp;명령으로 패키지(라이브러리)를 설치하면 기본적으로 x86 dynamic 으로 설치합니다. 하지만 개발환경에 따라서 x86 static/dynamic, x64 static/dynamic 버전 등등이 필요합니다. 사용가능 한 버전은&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg install package:triplet&lt;/code&gt;&amp;nbsp;명령으로 확인가능합니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;C:\work.vcpkg&amp;gt;vcpkg help triplet&lt;br /&gt;Available architecture triplets:&lt;br /&gt;  arm-uwp&lt;br /&gt;  x64-uwp&lt;br /&gt;  x64-windows-static&lt;br /&gt;  x64-windows&lt;br /&gt;  x86-uwp&lt;br /&gt;  x86-windows-static&lt;br /&gt;  x86-windows&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;&amp;gt;vcpkg install package:triplet&lt;/code&gt;&amp;nbsp;명령으로 설치 각 버전의 라이브러리를 설치할 수 있습니다. 아래 예제는 boost, curl, sqlite 등의 라이브러리를 설치합니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;&amp;gt;vcpkg install boost:x86-windows boost:x86-windows-static boost:x64-windows boost:x64-windows-static&lt;br /&gt;&amp;gt;vcpkg install curl:x86-windows curl:x86-windows-static curl:x64-windows curl:x64-windows-static&lt;br /&gt;&amp;gt;vcpkg install sqlite3:x86-windows sqlite3:x86-windows-static sqlite3:x64-windows sqlite3:x64-windows-static&lt;br /&gt;&amp;gt;vcpkg install jsoncpp:x86-windows jsoncpp:x86-windows-static jsoncpp:x64-windows jsoncpp:x64-windows-static&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;설치된 패키지는 Visual Studio 에서 별다른 설정을 하지 않아도 바로 사용가능합니다.&lt;/div&gt;&lt;/h1&gt;&lt;h2 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-top: 24px; padding-bottom: 0.3em;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#라이브러리-강제-지정하기-x86-x64-또는-md-mt&quot; id=&quot;user-content-라이브러리-강제-지정하기-x86-x64-또는-md-mt&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;라이브러리 강제 지정하기 (x86, x64 또는 /MD, /MT)&lt;/h2&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;vcpkg 는 기본으로 /MD (Multi Threaded DLL) 로 라이브러리를 빌드하고, 참조하게 합니다. 하지만 프로젝트 환경에 따라서 static 하게 링크해야 하는 경우도 있습니다. 패키지 컴파일시에&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;triplet&lt;/code&gt;&amp;nbsp;을 지정해서 /MD, /MT 등으로 설치는 가능한데, 어떻게 지정하는지에 대해서는 공식적인 내용을 찾지 못했습니다. 구글의 도움을 받아 찾은 해결책은 몇 가지 있었습니다만 깔끔하게 해결할 수 있는 방법은 아직 모르겠습니다. 아시는 분께서는 좀 알려주세요.&lt;/div&gt;&lt;ul style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;&quot;&gt;default 가 md (using dll) 로 링크되는데, 관련 설명은 있는데, 어떻게 하라는것인지 잘 모르겠고, 읽기도 귀찮음.&lt;/div&gt;&lt;ul style=&quot;box-sizing: border-box; margin-bottom: 0px; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/vcblog/2016/11/01/vcpkg-updates-static-linking-is-now-available/&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot;&gt;vcpkg-updates-static-linking-is-now-available&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/vcpkg/issues/281&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot;&gt;Disable automatic integration for a particuar VS project&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;c:\work.vcpkg\scripts\buildsystems\msbuild\vcpkg.targets&lt;/code&gt;&amp;nbsp;파일을 수정하는 방법&lt;/div&gt;&lt;ul style=&quot;box-sizing: border-box; margin-bottom: 0px; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;프로젝트 빌드 과정에서 참조되는 파일로&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;VcpkgEnabled&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;VcpkgTriplet&lt;/code&gt;&amp;nbsp;변수를 적당히 수정해주면 됨&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;전역 파일을 수정하는것이 맘에 들지 않음.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;저는 아래 처럼 프로젝트의 설정파일을 직접 편집합니다. 편한 텍스트 에디터를 이용해서&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;.vcxproj&lt;/code&gt;&amp;nbsp;파일을 열고,&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;Globals&lt;/code&gt;&amp;nbsp;아래에 내용을 추가합니다. vcpkg 로 패키지를 설치하면&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg-root\installed\x64-windows&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcpkg-root\installed\x64-windows-static&lt;/code&gt;&amp;nbsp;등의 경로에 패키지가 설치되는데 이 경로를 강제로 지정하는 것입니다. Visual Studio 에서 사용하는&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;VcpkgRoot&lt;/code&gt;&amp;nbsp;환경변수를 바꿔치기 해주는 것이지요. :-)&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/img/vcpkg_vcxproj.png&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;vcxproj&quot; src=&quot;https://github.com/somma/somma.github.io/raw/master/docs/img/vcpkg_vcxproj.png&quot; style=&quot;background-color: white; border-style: none; box-sizing: content-box; max-width: 100%;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;h2 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-top: 24px; padding-bottom: 0.3em;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#curl-라이브러리-문제-해결하기&quot; id=&quot;user-content-curl-라이브러리-문제-해결하기&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;curl 라이브러리 문제 해결하기&lt;/h2&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;curl 라이브러리는 아주 많은 application network protocol 구현을 제공하는 라이브러리입니다. 디폴트 동작방식인&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;/MD&lt;/code&gt;&amp;nbsp;라면 추가적인 설정이 필요없지만 static link 를 사용하는 경우 추가적인 설정이 필요합니다. 우선 static 링크를 사용하기 위해서 c/c++ -&amp;gt; Runtime Library 를&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;/MT&lt;/code&gt;&amp;nbsp;로 변경합니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/img/vcpkg_curl_1.png&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;set_mt&quot; src=&quot;https://github.com/somma/somma.github.io/raw/master/docs/img/vcpkg_curl_1.png&quot; style=&quot;background-color: white; border-style: none; box-sizing: content-box; max-width: 100%;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;vcxproj&lt;/code&gt;&amp;nbsp;파일도 static 버전을 참조할 수 있도록 수정합니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/img/vcpkg_curl_2.png&quot; style=&quot;box-sizing: border-box; color: #0366d6; text-decoration-line: none;&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;set_vcxproj&quot; src=&quot;https://github.com/somma/somma.github.io/raw/master/docs/img/vcpkg_curl_2.png&quot; style=&quot;background-color: white; border-style: none; box-sizing: content-box; max-width: 100%;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/h1&gt;&lt;h3 style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 1.25em; line-height: 1.25; margin-bottom: 16px; margin-top: 24px;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#curl_staticlib&quot; id=&quot;user-content-curl_staticlib&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CURL_STATICLIB&lt;/h3&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;프로젝트를 빌드하면 아래와 유사한 에러가 발생합니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;1&amp;gt;libcurl.lib(schannel.obj) : error LNK2019: unresolved external symbol __imp__CertFreeCertificateContext@4 referenced in function _schannel_connect_step3&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2001: unresolved external symbol __imp__CertFreeCertificateContext@4&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_init referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_unbind_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_set_option referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_simple_bind_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_search_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_msgfree referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_err2string referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_first_entry referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_next_entry referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_first_attribute referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_next_attribute referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_get_values_len referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_value_free_len referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_get_dn referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_memfree referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ber_free referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertOpenStore@20 referenced in function _capi_open_store&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertCloseStore@8 referenced in function _capi_find_key&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertEnumCertificatesInStore@8 referenced in function _capi_find_cert&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertFindCertificateInStore@24 referenced in function _capi_find_cert&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertDuplicateCertificateContext@4 referenced in function _capi_load_ssl_client_cert&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertGetCertificateContextProperty@16 referenced in function _capi_cert_get_fname&lt;br /&gt;1&amp;gt;C:\work.zzig\out\x86_debug\update_host.exe : fatal error LNK1120: 23 unresolved externals&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;이 문제는&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;CURL_STATICLIB&lt;/code&gt;&amp;nbsp;전처리기를 정의하면 됩니다. 아래 처럼&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;curl.h&lt;/code&gt;&amp;nbsp;를 include 하기 전에 정의해도 되고, project 설정파일에 정의해주어도 됩니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;#define CURL_STATICLIB&lt;br /&gt;#include &quot;curl/curl.h&quot;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;사실 이 문제는 vcpkg 의 문제가 아니라 curl 라이브러리 구현상의 특징이며&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;curl/curl.h&lt;/code&gt;&amp;nbsp;파일에 관련된 코드가 있습니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;/*&lt;br /&gt;* libcurl external API function linkage decorations.&lt;br /&gt;*/&lt;br /&gt;&lt;br /&gt;#ifdef CURL_STATICLIB&lt;br /&gt;#  define CURL_EXTERN&lt;br /&gt;#elif defined(WIN32) || defined(_WIN32) || defined(__SYMBIAN32__)&lt;br /&gt;#  if defined(BUILDING_LIBCURL)&lt;br /&gt;#    define CURL_EXTERN  __declspec(dllexport)&lt;br /&gt;#  else&lt;br /&gt;#    define CURL_EXTERN  __declspec(dllimport)&lt;br /&gt;#  endif&lt;br /&gt;#elif defined(BUILDING_LIBCURL) &amp;amp;&amp;amp; defined(CURL_HIDDEN_SYMBOLS)&lt;br /&gt;#  define CURL_EXTERN CURL_EXTERN_SYMBOL&lt;br /&gt;#else&lt;br /&gt;#  define CURL_EXTERN&lt;br /&gt;#endif&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/h1&gt;&lt;h3 style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 1.25em; line-height: 1.25; margin-bottom: 16px; margin-top: 24px;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#crypt32lib-에러&quot; id=&quot;user-content-crypt32lib-에러&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;crypt32.lib 에러&lt;/h3&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;하지만 여전히 또 다른 링크에러들이 발생합니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;&amp;gt;libcurl.lib(schannel.obj) : error LNK2019: unresolved external symbol __imp__CertFreeCertificateContext@4 referenced in function _schannel_connect_step3&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2001: unresolved external symbol __imp__CertFreeCertificateContext@4&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_init referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_unbind_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_set_option referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_simple_bind_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_search_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_msgfree referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_err2string referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_first_entry referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_next_entry referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_first_attribute referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_next_attribute referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_get_values_len referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_value_free_len referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_get_dn referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_memfree referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ber_free referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertOpenStore@20 referenced in function _capi_open_store&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertCloseStore@8 referenced in function _capi_find_key&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertEnumCertificatesInStore@8 referenced in function _capi_find_cert&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertFindCertificateInStore@24 referenced in function _capi_find_cert&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertDuplicateCertificateContext@4 referenced in function _capi_load_ssl_client_cert&lt;br /&gt;1&amp;gt;libeay32.lib(e_capi.obj) : error LNK2019: unresolved external symbol __imp__CertGetCertificateContextProperty@16 referenced in function _capi_cert_get_fname&lt;br /&gt;1&amp;gt;C:\work.zzig\out\x86_debug\update_host.exe : fatal error LNK1120: 23 unresolved externals&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;CertFindCertificateInStore&lt;/code&gt;&amp;nbsp;등의 함수는&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;crypt32.lib&lt;/code&gt;&amp;nbsp;에서 export 하는 함수이므로 아래처럼 해당 라이브러리를 link 해주거나 visual studio 의 link 옵션에서 지정해주면 됩니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;#define CURL_STATICLIB&lt;br /&gt;#include &quot;curl/curl.h&quot;&lt;br /&gt;#pragma comment(lib, &quot;crypt32.lib&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/h1&gt;&lt;h3 style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 1.25em; line-height: 1.25; margin-bottom: 16px; margin-top: 24px;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#wldap32lib-에러&quot; id=&quot;user-content-wldap32lib-에러&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;wldap32.lib 에러&lt;/h3&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;하지만 여전히 또 다른 링크에러들이 발생합니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_init referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_unbind_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_set_option referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_simple_bind_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_search_s referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_msgfree referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_err2string referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_first_entry referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_next_entry referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_first_attribute referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_next_attribute referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_get_values_len referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_value_free_len referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_get_dn referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ldap_memfree referenced in function __ldap_free_urldesc&lt;br /&gt;1&amp;gt;libcurl.lib(ldap.obj) : error LNK2019: unresolved external symbol __imp__ber_free referenced in function __ldap_free_urldesc&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal; margin-bottom: 16px;&quot;&gt;이 에러는 아래처럼&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;wldap32.lib&lt;/code&gt;&amp;nbsp;을 link 해주면 해결됩니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;#define CURL_STATICLIB&lt;br /&gt;#include &quot;curl/curl.h&quot;&lt;br /&gt;#pragma comment(lib, &quot;crypt32.lib&quot;)&lt;br /&gt;#pragma comment(lib, &quot;wldap32.lib&quot;)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/h1&gt;&lt;h3 style=&quot;box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 1.25em; line-height: 1.25; margin-bottom: 16px; margin-top: 24px;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/vcpkg.md#lnk4099-링크-경고&quot; id=&quot;user-content-lnk4099-링크-경고&quot; style=&quot;box-sizing: border-box; color: #0366d6; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration-line: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LNK4099 링크 경고&lt;/h3&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(234, 236, 239); box-sizing: border-box; color: #24292e; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;pre style=&quot;background-color: #f6f8fa; border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; font-weight: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;1&amp;gt;libcurl.lib(file.obj) : warning LNK4099: PDB &#39;libcurl.pdb&#39; was not found with &#39;libcurl.lib(file.obj)&#39; or at &#39;C:\work.zzig\out\x86_release\libcurl.pdb&#39;; linking object as if no debug info&lt;br /&gt;1&amp;gt;libcurl.lib(timeval.obj) : warning LNK4099: PDB &#39;libcurl.pdb&#39; was not found with &#39;libcurl.lib(timeval.obj)&#39; or at &#39;C:\work.zzig\out\x86_release\libcurl.pdb&#39;; linking object as if no debug info&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal;&quot;&gt;모든 설정을 다 하고 빌드하면&amp;nbsp;&lt;code style=&quot;background-color: rgba(27, 31, 35, 0.05); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;LNK4099&lt;/code&gt;&amp;nbsp;경고가 발생하는데, 이건 어떻게 해야할지 모르겠네요. 아시는 분은 알려주십셔 (ㅠ,.ㅠ)&lt;/div&gt;&lt;/h1&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/738801280702071607/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2017/05/vcpkg.html#comment-form' title='2개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/738801280702071607'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/738801280702071607'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2017/05/vcpkg.html' title='vcpkg 사용하기 '/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>2</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-4405374956010799091</id><published>2017-02-15T10:48:00.000-08:00</published><updated>2017-02-15T10:48:23.075-08:00</updated><title type='text'>ASSERT, ASSERT, ASSERT</title><content type='html'>&lt;div style=&quot;border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;아래의 코드를 봅시다. busy_write 라는 전역변수를 통해서 아주 간단한 배타적 접근을 구현하고 있습니다.&lt;/div&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;int busy_write = 0;&lt;br /&gt;int value_write = 0;&lt;br /&gt;&lt;br /&gt;int funcA()&lt;br /&gt;{&lt;br /&gt;    //&lt;br /&gt;    //  #1 lock 을 걸어주고&lt;br /&gt;    //&lt;br /&gt;    if (1 == InterlockedCompareExchange(&amp;amp;busy_write, 1, 0))&lt;br /&gt;    {&lt;br /&gt;        goto Cleanup;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    //&lt;br /&gt;    //  #2 뭔가 열심히 복잡한 작업을 하고, value_write 값을 갱신합니다.&lt;br /&gt;    //&lt;br /&gt;    ...&lt;br /&gt;    value_write++;&lt;br /&gt;    ...&lt;br /&gt;&lt;br /&gt;    //&lt;br /&gt;    //  #3 이 ASSERT 가 필요한가?&lt;br /&gt;    //&lt;br /&gt;    ASSERT(1 == StreamContext-&amp;gt;busy_write);&lt;br /&gt;&lt;br /&gt;Cleanup:&lt;br /&gt;    //&lt;br /&gt;    //  #4 busy_write 를 다시 0 으로.&lt;br /&gt;    //&lt;br /&gt;    InterlockedAnd(&amp;amp;busy_write, 0);&lt;br /&gt;    return 0;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;코드 #3 에 있는&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;ASSERT&lt;/code&gt;&amp;nbsp;는 별로 필요없어 보입니다. 위에서 busy_write 를 1로 변경한 상태이기 때문에 언제나&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;true&lt;/code&gt;&amp;nbsp;입니다. 따라서 당연히 ASSERT 를 넣는것이 이해가 되지 않을 수도 있습니다. 하지만 시간이 흘러, 어찌 어찌하다 보니 이 함수가 #2 에서 재귀호출을 하도록 수정되어버렸다고 가정해 봅시다. 어떻게 될까요?&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;#2 에서 재귀호출이 발생하면 #4 로 jump 하게 될것이고, busy_write 를 0 으로 변경한 후 리턴될겁니다. 그럼 원래 호출했던 코드에서는 #3 ASSERT 에 걸리게 되고, 개발자는 바로 이 코드에 문제가 있음을 알아챌 수 있을겁니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;만일 #3 에 ASSERT 가 없었다면 어떻게 되었을까요? 아마 코드의 문제를 인지하고, 디버깅 하는데 ASSERT 가 있었던 상황보다 분명히 더 많은 시간이 소요될 겁니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;ASSERT 를 사용하는 규칙은, 당연히 확실한 상태라고 믿어 의심치 않아서, ASSERT 가 전혀 필요없어 보이는, 그런코드에 ASSERT 를 사용하는것입니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;가끔 강의를 하거나 코드 리뷰를 할때 ASSERT 사용을 가볍게 여기는 개발자분들을 많이 봐서, 오늘 겪은 좋은 예가 있길래 글로 남겼습니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;#초보_&lt;em style=&quot;box-sizing: border-box;&quot;&gt;개발자_&lt;/em&gt;참고용 #손가락이_아플때까지&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/4405374956010799091/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2017/02/assert-assert-assert.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/4405374956010799091'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/4405374956010799091'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2017/02/assert-assert-assert.html' title='ASSERT, ASSERT, ASSERT'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-7628480908283198159</id><published>2017-02-13T23:33:00.000-08:00</published><updated>2017-02-13T23:33:46.436-08:00</updated><title type='text'>FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO</title><content type='html'>&lt;h1 style=&quot;border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; padding-bottom: 0.3em;&quot;&gt;&lt;a href=&quot;https://github.com/Microsoft/Windows-driver-samples/blob/master/filesys/miniFilter/delete/delete.c&quot; style=&quot;box-sizing: border-box; color: #4078c0; font-size: 16px; text-decoration: none;&quot;&gt;delete 미니필터 샘플&lt;/a&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;을 보면 아래와 같이&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;IRP_MJ_SET_INFORMATION&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;콜백 핸들러를 등록할때&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;를 사용하는 것을 확인할 수 있다.&lt;/span&gt;&lt;/h1&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; color: #333333; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;    CONST FLT_OPERATION_REGISTRATION Callbacks[] = {&lt;br /&gt;        ...&lt;br /&gt;        { IRP_MJ_SET_INFORMATION,&lt;br /&gt;        FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO,&lt;br /&gt;        DfPreSetInfoCallback,&lt;br /&gt;        DfPostSetInfoCallback },&lt;br /&gt;        ...&lt;br /&gt;        { IRP_MJ_OPERATION_END }&lt;br /&gt;    };&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;이유가 궁금해서 검색을 해보니 관련된&amp;nbsp;&lt;a href=&quot;https://www.osronline.com/showthread.cfm?link=238116&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;질문과 답&lt;/a&gt;이 있었다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;내용을 정리해두자면, On demand paging 을 구현하기 위해 VMM(Virtual Memory Manager)이 생성한 IRP 기반의 I/O 요청이 Paging I/O 이다. IRP_MJ_CREATE, IRP_MJ_CLEAN_UP 에는 Paging I/O 가 없고, Paging I/O 를 지원하는 I/O 는 아래와 같다.&lt;/div&gt;&lt;ul style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;IRP_MJ_READ&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;IRP_MJ_WRITE&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;IRP_MJ_SET_INFORMATION&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;IRP_MJ_QUERY_INFORMATION&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;IRP_MJ_READ 나 IRP_MJ_WRITE 의 는 Paging I/O 를 지원하는 것이 당연하고, IRP_MJ_SET_INFORMATION 이나 IRP_MJ_QUERY_INFORMATION 은 메모리 매니저가 섹션 객체를 생성하거나 접근할 때 필요할것이다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;해당 샘플(delete)의 경우 파일 삭제를 식별하기 위해 IRP_MJ_SET_INFORMATION 콜백을 등록하고, FileDispositionInformation, FileDispositionInformationEx 를 모니터링 한다. 이 I/O 는 Paging I/O 와는 상관없기때문에&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO&lt;/code&gt;&amp;nbsp;를 사용한 것이다.&lt;/div&gt;&lt;h1 style=&quot;border-bottom: 1px solid rgb(238, 238, 238); box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; line-height: 1.25; margin: 24px 0px 16px; padding-bottom: 0.3em;&quot;&gt;&lt;a aria-hidden=&quot;true&quot; class=&quot;anchor&quot; href=&quot;https://github.com/somma/somma.github.io/blob/master/docs/minifilter_dev/delete_sample.md#참고&quot; id=&quot;user-content-참고&quot; style=&quot;box-sizing: border-box; color: #4078c0; float: left; line-height: 1; margin-left: -20px; padding-right: 4px; text-decoration: none;&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewbox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고&lt;/h1&gt;&lt;ul style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 0px !important; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;&lt;a href=&quot;http://www.osronline.com/article.cfm?article=17#Q25&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;IFS FAQ&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;a href=&quot;https://www.osronline.com/showthread.cfm?link=238116&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;[FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO] Why is this flag used here? (minifilter)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/7628480908283198159/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2017/02/fltfloperationregistrationskippagingio.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/7628480908283198159'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/7628480908283198159'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2017/02/fltfloperationregistrationskippagingio.html' title='FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-1880725637995640369</id><published>2017-01-14T04:38:00.003-08:00</published><updated>2017-01-15T21:30:33.782-08:00</updated><title type='text'>dwDesiredAccess 와 dwShareMode 정확히 사용하기</title><content type='html'>&lt;div style=&quot;box-sizing: border-box; color: #333333; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; margin-bottom: 16px;&quot;&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;이 글에서는&amp;nbsp;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;CreateFile()&lt;/a&gt;&amp;nbsp;API의 두번째, 세번째 파라미터인&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwDesiredAccess&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwShareMode&lt;/code&gt;&amp;nbsp;에 대해서 정확히 파악해보고자 합니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;먼저 퀴즈로 시작해 보겠습니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;A 라는 프로세스는&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;abc.log&lt;/code&gt;&amp;nbsp;파일에 데이터를 쓰고, B 라는 프로세스는 해당 파일을 읽어서 화면에 출력하는 코드를 작성한다고 가정합니다. A 프로세스는&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;abc.log&lt;/code&gt;&amp;nbsp;파일에 데이터를 쓰기 위해&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;FILE_GENERIC_WRITE&lt;/code&gt;&amp;nbsp;접근 권한을 요청하고, B 프로세스가 해당 로그파일을 읽을 수 있도록&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;FILE_SHARE_READ&lt;/code&gt;&amp;nbsp;공유권한을 요청합니다. ( A 프로세스가 먼저 실행된다고 가정합니다 )&lt;/div&gt;&lt;div class=&quot;highlight highlight-source-c&quot; style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; A 프로세스의 코드&lt;/span&gt;&lt;br /&gt;HANDLE fileHandle = CreateFile(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: #183691;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;abc.log&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,&lt;br /&gt;                               FILE_WRITE_DATA,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 로그를 쓰려면 쓰기 권한으로 파일을 열어야죠.&lt;/span&gt;&lt;br /&gt;                               FILE_SHARE_READ,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; B 프로세스가 해당 파일을 읽어야 하니까 `공유 읽기` 를.&lt;/span&gt;&lt;br /&gt;                               ...&lt;br /&gt;                               ...);&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; B 프로세스의 코드&lt;/span&gt;&lt;br /&gt;HANDLE fileHandle = CreateFile(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: #183691;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;abc.log&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,&lt;br /&gt;                               FILE_READ_DATA,      &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 로그 파일을 읽어야 하니까&lt;/span&gt;&lt;br /&gt;                               FILE_SHARE_READ,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; A 프로세스의 코드랑 그냥 같은걸로???&lt;/span&gt;&lt;br /&gt;                               ...&lt;br /&gt;                               ...);&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;이 코드는 생각대로, 잘 동작하지 않습니다. 바로 무엇이 문제인지 대답하실 수 있다면 더이상 이 글을 읽지 않으셔도 됩니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;..&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858(v=vs.85).aspx&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;CreateFile()&lt;/a&gt;&amp;nbsp;함수는 Windows API 중 가장 많이 사용되는 API 중 하나이고, 가장 어렵고, 가장 많은것을 알아야 하는 API 중 하나입니다.&lt;/div&gt;&lt;div class=&quot;highlight highlight-source-c&quot; style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;&quot;&gt;HANDLE WINAPI &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: #795da3;&quot;&gt;CreateFile&lt;/span&gt;(&lt;br /&gt;  _In_     LPCTSTR               lpFileName,&lt;br /&gt;  _In_     DWORD                 dwDesiredAccess,&lt;br /&gt;  _In_     DWORD                 dwShareMode,&lt;br /&gt;  _In_opt_ LPSECURITY_ATTRIBUTES lpSecurityAttributes,&lt;br /&gt;  _In_     DWORD                 dwCreationDisposition,&lt;br /&gt;  _In_     DWORD                 dwFlagsAndAttributes,&lt;br /&gt;  _In_opt_ HANDLE                hTemplateFile&lt;br /&gt;);&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;두번째&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwDesiredAccess&lt;/code&gt;&amp;nbsp;는 해당 파일에 어떤 권한으로 접근을 하려고 하는지를 명시합니다 (읽기를 할것인지, 쓰기를 할것인지, 삭제를 할것인지). 세번째&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwShareMode&lt;/code&gt;&amp;nbsp;는 해당 파일에 접근하고있는 동안 다른 프로세스가 해당 파일에 접근하고자 하는 경우 어떤 권한을 허용할지를 명시합니다 (읽기를 허용할지, 쓰기를 허용할지, 삭제를 용할지).&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;Windows Kernel 은 CreateFile 요청이 발생하면 다양하고, 복잡한 함수호출을 통해서 특정 파일에 대한 오브젝트(FILE_OBJECT)를 생성하거나 이미 생성된 FILE_OBJECT 에 접근합니다. FILE_OBJECT 는 Windows 커널이 파일을 표현하기 위해서 커널내부적으로 사용하는 자료구조이며, 특정프로세스에 종속되지 않는 커널전체에서 공유되는 자원입니다. 매번 파일을 열고자 할때마다 새롭게 FILE_OBJECT 를 생성하면 효율적이지 못할테니까요. 응용프로그램이 사용하는 HANDLE 은 Windows 커널이 관리하는 오브젝트 배열의 인덱스 값 같은 것입니다. 이에 대한 자세한 내용은&amp;nbsp;&lt;a href=&quot;https://technet.microsoft.com/en-us/sysinternals/bb963901.aspx&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;Windows Internals&lt;/a&gt;&amp;nbsp;또는 제&amp;nbsp;&lt;a href=&quot;http://egloos.zum.com/somma/v/2947301&quot; style=&quot;box-sizing: border-box; color: #4078c0; text-decoration: none;&quot;&gt;예전 블로그 포스트&lt;/a&gt;를 참고하시면 도움이 될것 같습니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;커널은 특정 오브젝트로의 접근 요청을 받으면 해당 오브젝트에 접근이 가능한 권한이 있는 지 확인하는 과정을 거치는데, 파일의 경우 추가적으로 요청권한 및 공유권한을 확인하는 과정을 거칩니다. 이 공유위반이 발생하면&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;ERROR_SHARING_VIOLATION&lt;/code&gt;에러코드를 리턴하게 됩니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;Windows Kernel 이 FILE_OBJECT 에 요청된 접근권한(&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwDesiredAccess&lt;/code&gt;)과 공유권한(&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwShareMode&lt;/code&gt;)가 유효한지 판단하는 과정을 자세히 확인해보겠습니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;FILE_OBJECT 는 매우 복잡하고, 알아야 할것도 많고, 모르는것도 굉장히 많지만, 우리에게 필요한 필드는 아래와 같습니다.&lt;/div&gt;&lt;pre lang=&quot;text&quot; style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;kd&amp;gt; dt nt!_file_object&lt;br /&gt;   ...&lt;br /&gt;   +0x04a ReadAccess       : UChar&lt;br /&gt;   +0x04b WriteAccess      : UChar&lt;br /&gt;   +0x04c DeleteAccess     : UChar&lt;br /&gt;   +0x04d SharedRead       : UChar&lt;br /&gt;   +0x04e SharedWrite      : UChar&lt;br /&gt;   +0x04f SharedDelete     : UChar&lt;br /&gt;   ...&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;별다른 설명이 없더라도&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwDesiredAccess&lt;/code&gt;&amp;nbsp;와&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwShareMode&lt;/code&gt;&amp;nbsp;인걸 알 수 있을 것입니다. FILE_OBJECT 의 값들과 우리가 입력한 파라미터가 매칭되는 방식은 아래 코드와 같습니다.&lt;/div&gt;&lt;div class=&quot;highlight highlight-source-c&quot; style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;&quot;&gt;FILE_OBJECT.ReadAccess = (BOOLEAN) ((DesiredAccess &amp;amp; (FILE_EXECUTE| FILE_READ_DATA)) != &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;0&lt;/span&gt;);&lt;br /&gt;FILE_OBJECT.WriteAccess = (BOOLEAN) ((DesiredAccess &amp;amp; (FILE_WRITE_DATA | FILE_APPEND_DATA)) != &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;0&lt;/span&gt;);&lt;br /&gt;FILE_OBJECT.DeleteAccess = (BOOLEAN) ((DesiredAccess &amp;amp; DELETE) != &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;0&lt;/span&gt;);&lt;br /&gt;...&lt;br /&gt;FILE_OBJECT.SharedRead = (BOOLEAN) ((DesiredShareAccess &amp;amp; FILE_SHARE_READ) != &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;0&lt;/span&gt;);&lt;br /&gt;FILE_OBJECT.SharedWrite = (BOOLEAN) ((DesiredShareAccess &amp;amp; FILE_SHARE_WRITE) != &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;0&lt;/span&gt;);&lt;br /&gt;FILE_OBJECT.SharedDelete = (BOOLEAN) ((DesiredShareAccess &amp;amp; FILE_SHARE_DELETE) != &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;0&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;Windows kernel 은 유효성 여부를 검사와 해당 FILE_OBJECT 에 대한 요청들을 추적하기 위해서&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;SHARE_ACCESS&lt;/code&gt;라는 자료구조를 사용하는데, windbg 를 통해서 확인할 수 있습니다. FILE_OBJECT 접근에 성공하면 각 필드를 업데이트 합니다.&lt;/div&gt;&lt;pre lang=&quot;text&quot; style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;kd&amp;gt; dt nt!share_access&lt;br /&gt;   +0x000 OpenCount        : Uint4B&lt;br /&gt;   +0x004 Readers          : Uint4B&lt;br /&gt;   +0x008 Writers          : Uint4B&lt;br /&gt;   +0x00c Deleters         : Uint4B&lt;br /&gt;   +0x010 SharedRead       : Uint4B&lt;br /&gt;   +0x014 SharedWrite      : Uint4B&lt;br /&gt;   +0x018 SharedDelete     : Uint4B&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;C 코드로 변경해보면 아래와 같고, 각각의 의미는 코드의 주석으로 표현해 두었습니다.&lt;/div&gt;&lt;div class=&quot;highlight highlight-source-c&quot; style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: #a71d5d;&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: #a71d5d;&quot;&gt;struct&lt;/span&gt; _SHARE_ACCESS&lt;br /&gt;{&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; OpenCount;     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 파일 열기 횟수&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; Readers;       &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 읽기 권한 횟수&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; Writers;       &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 쓰기 권한 횟수&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; Deleters;      &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 삭제 권한 횟수&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; SharedRead;    &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 공유 읽기 권한 횟수&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; SharedWrite;   &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 공유 쓰기 권한 횟수&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: #0086b3;&quot;&gt;uint32_t&lt;/span&gt; SharedDelete;  &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 성공한 공유 삭제 권한 횟수&lt;/span&gt;&lt;br /&gt;} SHARE_ACCESS;&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;SHARE_ACCESS&lt;/code&gt;&amp;nbsp;와&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwDesiredAccess&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;dwShareMode&lt;/code&gt;&amp;nbsp;간의 관계는 아래와 같이 정리 할 수 있습니다.&lt;/div&gt;&lt;pre lang=&quot;text&quot; style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;[규칙 #1]&lt;br /&gt;`SHARE_ACCESS.Shared[Read|Write|Delete]` 가 OpenCount 보다 작고,&lt;br /&gt;`[Read|Write|Delete]` 권한을 요청하는 경우 SHARE VIOLATION.&lt;br /&gt;&lt;br /&gt;기존에 생성된 공유권한이 없다면 공유권한과 매칭되는 접근권한을 요청 할 수 없습니다.&lt;br /&gt;예를 들어 이전 호출 중 `FILE_SHARE_READ` 공유권한 요청이 없었다면, `FILE_READ_DATA` 접근 권한을 요청할 수 없습니다.&lt;br /&gt;&lt;br /&gt;[규칙 #2]&lt;br /&gt;`SHARE_ACCESS.[Readers|Writers|Deleters]` 가 0 이 아닌데,&lt;br /&gt;요청 된 공유권한이 `FILE_SHARE_[READ|WRITE|DELETE]` 가 0 인 경우 SHARE VIOLATION.&lt;br /&gt;&lt;br /&gt;기존에 요청된 접근권한과 매칭되는 공유권한이 현재 요청에 없다면 요청에 실패합니다.&lt;br /&gt;예를 들어 이전 호출 중 `FILE_READ_DATA` 접근권한 요청이 있었다면, 현재 요청에는 반드시 `FILE_SHARE_READ` 공유권한이 포함되어 있어야 합니다.&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;앞에서 보여드렸던 아래의 코드는&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;ERROR_SHARING_VIOLATION&lt;/code&gt;&amp;nbsp;를 리턴하게 됩니다.&lt;/div&gt;&lt;div class=&quot;highlight highlight-source-c&quot; style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; A 프로세스의 코드&lt;/span&gt;&lt;br /&gt;HANDLE fileHandle = CreateFile(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: #183691;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;abc.log&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,&lt;br /&gt;                               FILE_WRITE_DATA,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 로그를 쓰려면 쓰기 권한으로 파일을 열어야죠.&lt;/span&gt;&lt;br /&gt;                               FILE_SHARE_READ,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; B 프로세스가 해당 파일을 읽어야 하니까 `공유 읽기` 를.&lt;/span&gt;&lt;br /&gt;                               ...&lt;br /&gt;                               ...);&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; B 프로세스의 코드&lt;/span&gt;&lt;br /&gt;HANDLE fileHandle = CreateFile(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: #183691;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;abc.log&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,&lt;br /&gt;                               FILE_READ_DATA,      &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 로그 파일을 읽어야 하니까&lt;/span&gt;&lt;br /&gt;                               FILE_SHARE_READ,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; A 프로세스의 코드랑 그냥 같은걸로???&lt;/span&gt;&lt;br /&gt;                               ...&lt;br /&gt;                               ...);&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;왜 그럴까요?&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;A 프로세스의 코드가 실행되면 해당 FILE_OBJECT 의 상태는 아래와 같습니다.&lt;/div&gt;&lt;pre lang=&quot;text&quot; style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; margin-bottom: 16px; overflow: auto; padding: 16px; word-wrap: normal;&quot;&gt;&lt;code style=&quot;background: transparent; border-radius: 3px; border: 0px; box-sizing: border-box; display: inline; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; line-height: inherit; margin: 0px; overflow: visible; padding: 0px; word-break: normal; word-wrap: normal;&quot;&gt;SHARE_ACCESS.OpenCount = 1;&lt;br /&gt;&lt;br /&gt;SHARE_ACCESS.Readers = 0;&lt;br /&gt;SHARE_ACCESS.Writers = 1;       // FILE_GENERIC_WRITE 를 지정했으니까.&lt;br /&gt;SHARE_ACCESS.Deleters = 0;&lt;br /&gt;&lt;br /&gt;SHARE_ACCESS.SharedRead = 1;    // FILE_SHARE_READ 를 정했으니까.&lt;br /&gt;SHARE_ACCESS.SharedWrite = 0;&lt;br /&gt;SHARE_ACCESS.SharedDelete = 0;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;B 프로세스의 코드가 실행되는 시점에 공유위반 검사를 해보면&lt;/div&gt;&lt;ul style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px; margin-top: 0px; padding-left: 2em;&quot;&gt;&lt;li style=&quot;box-sizing: border-box;&quot;&gt;규칙 #1,&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;SHARE_ACCESS.SharedRead &amp;lt; SHARE_ACCESS.OpenCount&lt;/code&gt;&amp;nbsp;조건이 거짓이므로 공유위반 아님&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;규칙 #2,&amp;nbsp;&lt;code style=&quot;background-color: rgba(0, 0, 0, 0.0392157); border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin: 0px; padding: 0.2em 0px;&quot;&gt;SHARE_ACCESS.Writers != 0&lt;/code&gt;&amp;nbsp;이고, 요청된 공유모드가 FILE_SHARE_WRITE 가 0 입니다. (FILE_SHARE_READ 만 지정했으니까요)&lt;/li&gt;&lt;/ul&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;즉 [규칙 #2] 에 의해서 공유위반입니다.&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;따라서 위의 코드는 아래처럼 작성해야 합니다.&lt;/div&gt;&lt;div class=&quot;highlight highlight-source-c&quot; style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;&lt;pre style=&quot;background-color: #f7f7f7; border-radius: 3px; box-sizing: border-box; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; font-stretch: normal; line-height: 1.45; overflow: auto; padding: 16px; word-break: normal; word-wrap: normal;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; A 프로세스의 코드&lt;/span&gt;&lt;br /&gt;HANDLE fileHandle = CreateFile(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: #183691;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;abc.log&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,&lt;br /&gt;                               FILE_WRITE_DATA,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 로그를 쓰려면 쓰기 권한으로 파일을 열어야죠.&lt;/span&gt;&lt;br /&gt;                               FILE_SHARE_READ,     &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; B 프로세스가 해당 파일을 읽어야 하니까 `공유 읽기` 를.&lt;/span&gt;&lt;br /&gt;                               ...&lt;br /&gt;                               ...);&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; B 프로세스의 코드&lt;/span&gt;&lt;br /&gt;HANDLE fileHandle = CreateFile(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: #183691;&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;abc.log&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;,&lt;br /&gt;                               FILE_READ_DATA,      &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: #969896;&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt; 로그 파일을 읽어야 하니까&lt;/span&gt;&lt;br /&gt;                               FILE_SHARE_READ | FILE_SHARE_WRITE,&lt;br /&gt;                               ...&lt;br /&gt;                               ...);&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; margin-bottom: 16px;&quot;&gt;사실 상식적으로 생각해보면 굉장히 당연한 규칙입니다만, 코드를 말로 풀어서 설명하다보니 쓸데없이 길어진 것 같습니다. 의외로 예제로 보여드린 코드와 유사한 실수를 저지르는 경우가 많고, 정확히 규칙을 모르는 분들이 많은것 같습니다 (저도 정확히 모르고 대충 썼습니다).&lt;/div&gt;&lt;div style=&quot;box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;매번 정확히 한번 따져봐야지 생각만 하고 미루다가 드디어 정확히 알게된것 같아 기쁩니다 ^__^&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/1880725637995640369/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2017/01/createfile-dwdesiredaccess-dwsharemode.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/1880725637995640369'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/1880725637995640369'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2017/01/createfile-dwdesiredaccess-dwsharemode.html' title='dwDesiredAccess 와 dwShareMode 정확히 사용하기'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-5351022467766419048</id><published>2016-11-28T20:38:00.001-08:00</published><updated>2016-11-28T20:51:33.944-08:00</updated><title type='text'>FLT_STREAM_CONTEXT vs FLT_STREAMHANDLE_CONTEXT</title><content type='html'>몇년만에 드라이버코드를 작성할 일이 있어서 공부중입니다.&lt;br /&gt;파일시스템이나 미니필터는 바닥부터 작성해본적이 없어서 공부하기가 쉽지 않네요.&lt;br /&gt;FLT_STREAM_CONTEXT 가 FLT_STREAMHANDLE_CONTEXT 뭐가 다른건지 헤깔려서 찾아보다가 정리했습니다.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;style&gt;@font-face {   font-family: octicons-anchor;   src: url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAYcAA0AAAAACjQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABMAAAABwAAAAca8vGTk9TLzIAAAFMAAAARAAAAFZG1VHVY21hcAAAAZAAAAA+AAABQgAP9AdjdnQgAAAB0AAAAAQAAAAEACICiGdhc3AAAAHUAAAACAAAAAj//wADZ2x5ZgAAAdwAAADRAAABEKyikaNoZWFkAAACsAAAAC0AAAA2AtXoA2hoZWEAAALgAAAAHAAAACQHngNFaG10eAAAAvwAAAAQAAAAEAwAACJsb2NhAAADDAAAAAoAAAAKALIAVG1heHAAAAMYAAAAHwAAACABEAB2bmFtZQAAAzgAAALBAAAFu3I9x/Nwb3N0AAAF/AAAAB0AAAAvaoFvbwAAAAEAAAAAzBdyYwAAAADP2IQvAAAAAM/bz7t4nGNgZGFgnMDAysDB1Ml0hoGBoR9CM75mMGLkYGBgYmBlZsAKAtJcUxgcPsR8iGF2+O/AEMPsznAYKMwIkgMA5REMOXicY2BgYGaAYBkGRgYQsAHyGMF8FgYFIM0ChED+h5j//yEk/3KoSgZGNgYYk4GRCUgwMaACRoZhDwCs7QgGAAAAIgKIAAAAAf//AAJ4nHWMMQrCQBBF/0zWrCCIKUQsTDCL2EXMohYGSSmorScInsRGL2DOYJe0Ntp7BK+gJ1BxF1stZvjz/v8DRghQzEc4kIgKwiAppcA9LtzKLSkdNhKFY3HF4lK69ExKslx7Xa+vPRVS43G98vG1DnkDMIBUgFN0MDXflU8tbaZOUkXUH0+U27RoRpOIyCKjbMCVejwypzJJG4jIwb43rfl6wbwanocrJm9XFYfskuVC5K/TPyczNU7b84CXcbxks1Un6H6tLH9vf2LRnn8Ax7A5WQAAAHicY2BkYGAA4teL1+yI57f5ysDNwgAC529f0kOmWRiYVgEpDgYmEA8AUzEKsQAAAHicY2BkYGB2+O/AEMPCAAJAkpEBFbAAADgKAe0EAAAiAAAAAAQAAAAEAAAAAAAAKgAqACoAiAAAeJxjYGRgYGBhsGFgYgABEMkFhAwM/xn0QAIAD6YBhwB4nI1Ty07cMBS9QwKlQapQW3VXySvEqDCZGbGaHULiIQ1FKgjWMxknMfLEke2A+IJu+wntrt/QbVf9gG75jK577Lg8K1qQPCfnnnt8fX1NRC/pmjrk/zprC+8D7tBy9DHgBXoWfQ44Av8t4Bj4Z8CLtBL9CniJluPXASf0Lm4CXqFX8Q84dOLnMB17N4c7tBo1AS/Qi+hTwBH4rwHHwN8DXqQ30XXAS7QaLwSc0Gn8NuAVWou/gFmnjLrEaEh9GmDdDGgL3B4JsrRPDU2hTOiMSuJUIdKQQayiAth69r6akSSFqIJuA19TrzCIaY8sIoxyrNIrL//pw7A2iMygkX5vDj+G+kuoLdX4GlGK/8Lnlz6/h9MpmoO9rafrz7ILXEHHaAx95s9lsI7AHNMBWEZHULnfAXwG9/ZqdzLI08iuwRloXE8kfhXYAvE23+23DU3t626rbs8/8adv+9DWknsHp3E17oCf+Z48rvEQNZ78paYM38qfk3v/u3l3u3GXN2Dmvmvpf1Srwk3pB/VSsp512bA/GG5i2WJ7wu430yQ5K3nFGiOqgtmSB5pJVSizwaacmUZzZhXLlZTq8qGGFY2YcSkqbth6aW1tRmlaCFs2016m5qn36SbJrqosG4uMV4aP2PHBmB3tjtmgN2izkGQyLWprekbIntJFing32a5rKWCN/SdSoga45EJykyQ7asZvHQ8PTm6cslIpwyeyjbVltNikc2HTR7YKh9LBl9DADC0U/jLcBZDKrMhUBfQBvXRzLtFtjU9eNHKin0x5InTqb8lNpfKv1s1xHzTXRqgKzek/mb7nB8RZTCDhGEX3kK/8Q75AmUM/eLkfA+0Hi908Kx4eNsMgudg5GLdRD7a84npi+YxNr5i5KIbW5izXas7cHXIMAau1OueZhfj+cOcP3P8MNIWLyYOBuxL6DRylJ4cAAAB4nGNgYoAALjDJyIAOWMCiTIxMLDmZedkABtIBygAAAA==) format(&#39;woff&#39;); }  * {     box-sizing: border-box; }  body {     width: 980px;     margin-right: auto;     margin-left: auto; }  body .markdown-body {     padding: 45px;     border: 1px solid #ddd;     border-radius: 3px;     word-wrap: break-word; }  pre {     font: 12px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; }  .markdown-body {   -webkit-text-size-adjust: 100%;   text-size-adjust: 100%;   color: #333;   font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, freesans, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;   font-size: 16px;   line-height: 1.6;   word-wrap: break-word; }  .markdown-body a {   background-color: transparent; }  .markdown-body a:active, .markdown-body a:hover {   outline: 0; }  .markdown-body strong {   font-weight: bold; }  .markdown-body h1 {   font-size: 2em;   margin: 0.67em 0; }  .markdown-body img {   border: 0; }  .markdown-body hr {   box-sizing: content-box;   height: 0; }  .markdown-body pre {   overflow: auto; }  .markdown-body code, .markdown-body kbd, .markdown-body pre {   font-family: monospace, monospace;   font-size: 1em; }  .markdown-body input {   color: inherit;   font: inherit;   margin: 0; }  .markdown-body html input[disabled] {   cursor: default; }  .markdown-body input {   line-height: normal; }  .markdown-body input[type=&quot;checkbox&quot;] {   box-sizing: border-box;   padding: 0; }  .markdown-body table {   border-collapse: collapse;   border-spacing: 0; }  .markdown-body td, .markdown-body th {   padding: 0; }  .markdown-body input {   font: 13px / 1.4 Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; }  .markdown-body a {   color: #4078c0;   text-decoration: none; }  .markdown-body a:hover, .markdown-body a:active {   text-decoration: underline; }  .markdown-body hr {   height: 0;   margin: 15px 0;   overflow: hidden;   background: transparent;   border: 0;   border-bottom: 1px solid #ddd; }  .markdown-body hr:before {   display: table;   content: &quot;&quot;; }  .markdown-body hr:after {   display: table;   clear: both;   content: &quot;&quot;; }  .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {   margin-top: 15px;   margin-bottom: 15px;   line-height: 1.1; }  .markdown-body h1 {   font-size: 30px; }  .markdown-body h2 {   font-size: 21px; }  .markdown-body h3 {   font-size: 16px; }  .markdown-body h4 {   font-size: 14px; }  .markdown-body h5 {   font-size: 12px; }  .markdown-body h6 {   font-size: 11px; }  .markdown-body blockquote {   margin: 0; }  .markdown-body ul, .markdown-body ol {   padding: 0;   margin-top: 0;   margin-bottom: 0; }  .markdown-body ol ol, .markdown-body ul ol {   list-style-type: lower-roman; }  .markdown-body ul ul ol, .markdown-body ul ol ol, .markdown-body ol ul ol, .markdown-body ol ol ol {   list-style-type: lower-alpha; }  .markdown-body dd {   margin-left: 0; }  .markdown-body code {   font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;   font-size: 12px; }  .markdown-body pre {   margin-top: 0;   margin-bottom: 0;   font: 12px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; }  .markdown-body .select::-ms-expand {   opacity: 0; }  .markdown-body .octicon {   font: normal normal normal 16px/1 octicons-anchor;   display: inline-block;   text-decoration: none;   text-rendering: auto;   -webkit-font-smoothing: antialiased;   -moz-osx-font-smoothing: grayscale;   -webkit-user-select: none;   -moz-user-select: none;   -ms-user-select: none;   user-select: none; }  .markdown-body .octicon-link:before {   content: &#39;\f05c&#39;; }  .markdown-body:before {   display: table;   content: &quot;&quot;; }  .markdown-body:after {   display: table;   clear: both;   content: &quot;&quot;; }  .markdown-body&gt;*:first-child {   margin-top: 0 !important; }  .markdown-body&gt;*:last-child {   margin-bottom: 0 !important; }  .markdown-body a:not([href]) {   color: inherit;   text-decoration: none; }  .markdown-body .anchor {   display: inline-block;   padding-right: 2px;   margin-left: -18px; }  .markdown-body .anchor:focus {   outline: none; }  .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {   margin-top: 1em;   margin-bottom: 16px;   font-weight: bold;   line-height: 1.4; }  .markdown-body h1 .octicon-link, .markdown-body h2 .octicon-link, .markdown-body h3 .octicon-link, .markdown-body h4 .octicon-link, .markdown-body h5 .octicon-link, .markdown-body h6 .octicon-link {   color: #000;   vertical-align: middle;   visibility: hidden; }  .markdown-body h1:hover .anchor, .markdown-body h2:hover .anchor, .markdown-body h3:hover .anchor, .markdown-body h4:hover .anchor, .markdown-body h5:hover .anchor, .markdown-body h6:hover .anchor {   text-decoration: none; }  .markdown-body h1:hover .anchor .octicon-link, .markdown-body h2:hover .anchor .octicon-link, .markdown-body h3:hover .anchor .octicon-link, .markdown-body h4:hover .anchor .octicon-link, .markdown-body h5:hover .anchor .octicon-link, .markdown-body h6:hover .anchor .octicon-link {   visibility: visible; }  .markdown-body h1 {   padding-bottom: 0.3em;   font-size: 2.25em;   line-height: 1.2;   border-bottom: 1px solid #eee; }  .markdown-body h1 .anchor {   line-height: 1; }  .markdown-body h2 {   padding-bottom: 0.3em;   font-size: 1.75em;   line-height: 1.225;   border-bottom: 1px solid #eee; }  .markdown-body h2 .anchor {   line-height: 1; }  .markdown-body h3 {   font-size: 1.5em;   line-height: 1.43; }  .markdown-body h3 .anchor {   line-height: 1.2; }  .markdown-body h4 {   font-size: 1.25em; }  .markdown-body h4 .anchor {   line-height: 1.2; }  .markdown-body h5 {   font-size: 1em; }  .markdown-body h5 .anchor {   line-height: 1.1; }  .markdown-body h6 {   font-size: 1em;   color: #777; }  .markdown-body h6 .anchor {   line-height: 1.1; }  .markdown-body p, .markdown-body blockquote, .markdown-body ul, .markdown-body ol, .markdown-body dl, .markdown-body table, .markdown-body pre {   margin-top: 0;   margin-bottom: 16px; }  .markdown-body hr {   height: 4px;   padding: 0;   margin: 16px 0;   background-color: #e7e7e7;   border: 0 none; }  .markdown-body ul, .markdown-body ol {   padding-left: 2em; }  .markdown-body ul ul, .markdown-body ul ol, .markdown-body ol ol, .markdown-body ol ul {   margin-top: 0;   margin-bottom: 0; }  .markdown-body li&gt;p {   margin-top: 16px; }  .markdown-body dl {   padding: 0; }  .markdown-body dl dt {   padding: 0;   margin-top: 16px;   font-size: 1em;   font-style: italic;   font-weight: bold; }  .markdown-body dl dd {   padding: 0 16px;   margin-bottom: 16px; }  .markdown-body blockquote {   padding: 0 15px;   color: #777;   border-left: 4px solid #ddd; }  .markdown-body blockquote&gt;:first-child {   margin-top: 0; }  .markdown-body blockquote&gt;:last-child {   margin-bottom: 0; }  .markdown-body table {   display: block;   width: 100%;   overflow: auto;   word-break: normal;   word-break: keep-all; }  .markdown-body table th {   font-weight: bold; }  .markdown-body table th, .markdown-body table td {   padding: 6px 13px;   border: 1px solid #ddd; }  .markdown-body table tr {   background-color: #fff;   border-top: 1px solid #ccc; }  .markdown-body table tr:nth-child(2n) {   background-color: #f8f8f8; }  .markdown-body img {   max-width: 100%;   box-sizing: content-box;   background-color: #fff; }  .markdown-body code {   padding: 0;   padding-top: 0.2em;   padding-bottom: 0.2em;   margin: 0;   font-size: 85%;   background-color: rgba(0,0,0,0.04);   border-radius: 3px; }  .markdown-body code:before, .markdown-body code:after {   letter-spacing: -0.2em;   content: &quot;\00a0&quot;; }  .markdown-body pre&gt;code {   padding: 0;   margin: 0;   font-size: 100%;   word-break: normal;   white-space: pre;   background: transparent;   border: 0; }  .markdown-body .highlight {   margin-bottom: 16px; }  .markdown-body .highlight pre, .markdown-body pre {   padding: 16px;   overflow: auto;   font-size: 85%;   line-height: 1.45;   background-color: #f7f7f7;   border-radius: 3px; }  .markdown-body .highlight pre {   margin-bottom: 0;   word-break: normal; }  .markdown-body pre {   word-wrap: normal; }  .markdown-body pre code {   display: inline;   max-width: initial;   padding: 0;   margin: 0;   overflow: initial;   line-height: inherit;   word-wrap: normal;   background-color: transparent;   border: 0; }  .markdown-body pre code:before, .markdown-body pre code:after {   content: normal; }  .markdown-body kbd {   display: inline-block;   padding: 3px 5px;   font-size: 11px;   line-height: 10px;   color: #555;   vertical-align: middle;   background-color: #fcfcfc;   border: solid 1px #ccc;   border-bottom-color: #bbb;   border-radius: 3px;   box-shadow: inset 0 -1px 0 #bbb; }  .markdown-body .pl-c {   color: #969896; }  .markdown-body .pl-c1, .markdown-body .pl-s .pl-v {   color: #0086b3; }  .markdown-body .pl-e, .markdown-body .pl-en {   color: #795da3; }  .markdown-body .pl-s .pl-s1, .markdown-body .pl-smi {   color: #333; }  .markdown-body .pl-ent {   color: #63a35c; }  .markdown-body .pl-k {   color: #a71d5d; }  .markdown-body .pl-pds, .markdown-body .pl-s, .markdown-body .pl-s .pl-pse .pl-s1, .markdown-body .pl-sr, .markdown-body .pl-sr .pl-cce, .markdown-body .pl-sr .pl-sra, .markdown-body .pl-sr .pl-sre {   color: #183691; }  .markdown-body .pl-v {   color: #ed6a43; }  .markdown-body .pl-id {   color: #b52a1d; }  .markdown-body .pl-ii {   background-color: #b52a1d;   color: #f8f8f8; }  .markdown-body .pl-sr .pl-cce {   color: #63a35c;   font-weight: bold; }  .markdown-body .pl-ml {   color: #693a17; }  .markdown-body .pl-mh, .markdown-body .pl-mh .pl-en, .markdown-body .pl-ms {   color: #1d3e81;   font-weight: bold; }  .markdown-body .pl-mq {   color: #008080; }  .markdown-body .pl-mi {   color: #333;   font-style: italic; }  .markdown-body .pl-mb {   color: #333;   font-weight: bold; }  .markdown-body .pl-md {   background-color: #ffecec;   color: #bd2c00; }  .markdown-body .pl-mi1 {   background-color: #eaffea;   color: #55a532; }  .markdown-body .pl-mdr {   color: #795da3;   font-weight: bold; }  .markdown-body .pl-mo {   color: #1d3e81; }  .markdown-body kbd {   display: inline-block;   padding: 3px 5px;   font: 11px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;   line-height: 10px;   color: #555;   vertical-align: middle;   background-color: #fcfcfc;   border: solid 1px #ccc;   border-bottom-color: #bbb;   border-radius: 3px;   box-shadow: inset 0 -1px 0 #bbb; }  .markdown-body .plan-price-unit {   color: #767676;   font-weight: normal; }  .markdown-body .task-list-item {   list-style-type: none; }  .markdown-body .task-list-item+.task-list-item {   margin-top: 3px; }  .markdown-body .task-list-item input {   margin: 0 0.35em 0.25em -1.6em;   vertical-align: middle; }  .markdown-body .plan-choice {   padding: 15px;   padding-left: 40px;   display: block;   border: 1px solid #e0e0e0;   position: relative;   font-weight: normal;   background-color: #fafafa; }  .markdown-body .plan-choice.open {   background-color: #fff; }  .markdown-body .plan-choice.open .plan-choice-seat-breakdown {   display: block; }  .markdown-body .plan-choice-free {   border-radius: 3px 3px 0 0; }  .markdown-body .plan-choice-paid {   border-radius: 0 0 3px 3px;   border-top: 0;   margin-bottom: 20px; }  .markdown-body .plan-choice-radio {   position: absolute;   left: 15px;   top: 18px; }  .markdown-body .plan-choice-exp {   color: #999;   font-size: 12px;   margin-top: 5px; }  .markdown-body .plan-choice-seat-breakdown {   margin-top: 10px;   display: none; }  .markdown-body :checked+.radio-label {   z-index: 1;   position: relative;   border-color: #4078c0; } &lt;/style&gt;&lt;title&gt;FLT_STREAM_CONTEXT vs FLT_STREAMHANDLE_CONTEXT&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;article class=&quot;markdown-body&quot;&gt;&lt;h3&gt;&lt;a id=&quot;user-content-stream_context&quot; class=&quot;anchor&quot; href=&quot;#stream_context&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;STREAM_CONTEXT&lt;/h3&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;file stream 마다 붙일 수 있는 context. &lt;/li&gt;&lt;li&gt;FILE_OBJECT.FsContext 를 추적하는데 사용. &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3&gt;&lt;a id=&quot;user-content-streamhandle_context&quot; class=&quot;anchor&quot; href=&quot;#streamhandle_context&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;STREAMHANDLE_CONTEXT&lt;/h3&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;개개의 file open 시 생성되는 file object (I/O 서브시스템이 생성하는)마다 붙일 수 있는 context. &lt;/li&gt;&lt;li&gt;FILE_OBJECT 를 추적하는데 사용.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;hr&gt;&lt;br /&gt;&lt;h2&gt;&lt;a id=&quot;user-content-file-streams-stream-contexts-and-per-stream-contexts-msdn-원문&quot; class=&quot;anchor&quot; href=&quot;#file-streams-stream-contexts-and-per-stream-contexts-msdn-%EC%9B%90%EB%AC%B8&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;File Streams, Stream Contexts, and Per-Stream Contexts (&lt;a href=&quot;https://msdn.microsoft.com/windows/hardware/drivers/ifs/file-streams--stream-contexts--and-per-stream-contexts&quot;&gt;MSDN 원문&lt;/a&gt;)&lt;/h2&gt;&lt;br /&gt;&lt;h3&gt;&lt;a id=&quot;user-content-file-stream&quot; class=&quot;anchor&quot; href=&quot;#file-stream&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;File Stream&lt;/h3&gt;&lt;br /&gt;&lt;p&gt;파일 데이터를 저장하는데 사용되는 바이트 시퀀스이다. &lt;br /&gt;보통 파일은 하나의 file stream 을 가지는데, 요걸 파일의 default data stream 이라고 한다. &lt;br /&gt;그러나 multiple data stream 을 지원하는 파일시스템에서는 각각의 파일은 여러개의 file stream 을 가질 수 있다. &lt;br /&gt;그 중 하나는 default data stream 이고, 얘는 unnamed 이다. &lt;br /&gt;다른 놈들은 alternate data stream 이다. 파일을 열면, 실제로는 해당 파일의 스트림을 여는 것이다.&lt;/p&gt;&lt;br /&gt;&lt;p&gt;file system 이 최초로 파일을 열때, &lt;code&gt;file control block(FCB)&lt;/code&gt; 이나 &lt;code&gt;stream control block (SCB)&lt;/code&gt; 같은 &lt;br /&gt;file-system-specific stream context 구조체를 생성하고, 이 구조체의 주소를 file object 의 &lt;code&gt;FsContext&lt;/code&gt; 멤버에 저장한다. &lt;/p&gt;&lt;br /&gt;&lt;p&gt;로컬 파일시스템에서, 이미 열려있는 file streeam 이 다시 열리면 (shared read access 같은 경우로 인해), &lt;br /&gt;I/O 서브시스템은 새로운 file object 를 생성하지만, file system 은 새로운 stream context 를 생성하지는 않는다. &lt;br /&gt;따라서 로컬 파일시스템에서는 stream context pointer 는 file stream 을 식별하는 유니크한 값으로 사용될 수 있다. &lt;/p&gt;&lt;br /&gt;&lt;p&gt;per-stream context 를 지원하는 네트워크 파일시스템에서는 이미 열려있는 file stream 이 동일한 network share name 이나 IP 주소 등을 &lt;br /&gt;이용해서 다시 열린다면 로컬 파일시스템과 동일하게 동작한다. &lt;br /&gt;I/O 서브시스템은 새로운 file object 를 생성하지만 file system 은 새로운 stream context 를 생성하지 않고, &lt;br /&gt;두 file object 에 동일한 &lt;code&gt;FsContext&lt;/code&gt; 포인터를 할당한다. &lt;/p&gt;&lt;br /&gt;&lt;p&gt;그러나 file stream 이 서로 다른 경로로 열리는 경우 (다른 share name 또는 IP 가 다른 경우), file system 은 &lt;br /&gt;새로운 file stream context 를 생성한다. &lt;br /&gt;그러므로 per-stream context 를 지원하는 네트워크 파일시스템에서는 &lt;code&gt;FsContext&lt;/code&gt; 는 file stream 을 구분하는 &lt;br /&gt;유일한 값으로 사용될 수 없다.            &lt;/p&gt;&lt;br /&gt;&lt;p&gt;&lt;code&gt;per-stream context&lt;/code&gt; 는 &lt;a href=&quot;https://msdn.microsoft.com/library/windows/hardware/ff547357&quot;&gt;FSRTL_PER_STREAM_CONTEXT&lt;/a&gt; 구조체를 멤버로 포함하는 &lt;br /&gt;filter-defined 구조체이다. 필터드라이버는 이 구조체를 file system 이 열어놓은 각각의 file stream 에 대한 정보를 추적하는데 사용한다.   &lt;/p&gt;&lt;br /&gt;&lt;h3&gt;&lt;a id=&quot;user-content-file-sytem-support-for-per-stream-contexts&quot; class=&quot;anchor&quot; href=&quot;#file-sytem-support-for-per-stream-contexts&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;File Sytem Support for Per-Stream Contexts&lt;/h3&gt;&lt;br /&gt;&lt;p&gt;Microsoft Windows XP 이후, per-stream context 를 지원하는 파일시스템은 &lt;a href=&quot;&quot;&gt;FSRTL_ADVANCED_FCB_HEADER&lt;/a&gt;구조체를 포함하는 &lt;br /&gt;stream context 구조체를 사용해야 한다. &lt;/p&gt;&lt;br /&gt;&lt;p&gt;특정 file stream 에 연관된 per-stream context 의 global list 는 file system 이 관리한다. &lt;br /&gt;file system 이 file stream 을 위한 새 stream context (FSRTL_ADVANCED_FCB_HEADER object)를 생성할 때, 이 list 를 초기화하기 위해 &lt;br /&gt;&lt;a href=&quot;&quot;&gt;FsRtlSetupAdvancedHeader&lt;/a&gt; 를 호출한다. &lt;br /&gt;file system filter 드라이버가 &lt;a href=&quot;&quot;&gt;FsRtlInsertPerStreamContext&lt;/a&gt; 함수를 호출하면, filter 가 생성한 per-steram context 는 &lt;br /&gt;그 global list 에 추가된다. &lt;/p&gt;&lt;br /&gt;&lt;p&gt;file system 이 file stream 에 대한 stream context 를 삭제하때, filter 가 가진 file stream 에 연관된 모든 per-stream context 를 &lt;br /&gt;제거하기 위해 &lt;a href=&quot;&quot;&gt;FsRtlTeardownPerStreamContexts&lt;/a&gt; 를 호출한다. &lt;br /&gt;이 루틴은 global list 에 있는 각각의 per-stream context 에 대해서 &lt;a href=&quot;&quot;&gt;FreeCallback&lt;/a&gt;루틴을 호출한다. &lt;br /&gt;&lt;code&gt;FreeCallback&lt;/code&gt; 루틴은 file stream 과 연관된 file object 가 이미 소멸되었음을 인지하고 있어야 한다. &lt;/p&gt;&lt;br /&gt;&lt;p&gt;file system 이 file object 로 대표되는 file stream 에 대해서 per-stream context 를 지원하는지 확인하려면, 해당 file object 를 통해서 &lt;br /&gt;&lt;a href=&quot;&quot;&gt;FsRtlSupportsPerStreamContexts&lt;/a&gt;를 호출할 수 있다. file system 은 어떤 파일 타입에 대해서는 per-stream context 를 지원할 수 도 있고, &lt;br /&gt;그렇지 않을 수도 있다. 예를들어 NTFS 와 FAT 는 paging file 에 대해서 per-stream context 를 지원하지 않는다. &lt;br /&gt;따라서 &lt;code&gt;FsRtlSupportsPerStreamContexts&lt;/code&gt; 함수는 하나의 file stream 에 대해서는 TRUE 를 리턴하지만, 모든 file stream 에 대해서 &lt;br /&gt;TRUE 를 리턴하지는 않을것이다.      &lt;/p&gt;&lt;/article&gt;&lt;/body&gt;&lt;/html&gt;</content><link rel='replies' type='application/atom+xml' href='http://bugsfixed.blogspot.com/feeds/5351022467766419048/comments/default' title='댓글'/><link rel='replies' type='text/html' href='http://bugsfixed.blogspot.com/2016/11/fltstreamcontext-vs-fltstreamhandlecont.html#comment-form' title='0개의 덧글'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/5351022467766419048'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/5432537856508947805/posts/default/5351022467766419048'/><link rel='alternate' type='text/html' href='http://bugsfixed.blogspot.com/2016/11/fltstreamcontext-vs-fltstreamhandlecont.html' title='FLT_STREAM_CONTEXT vs FLT_STREAMHANDLE_CONTEXT'/><author><name>somma</name><uri>http://www.blogger.com/profile/05406023541962197602</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total><gd:extendedProperty name="commentSource" value="1"/><gd:extendedProperty name="commentModerationMode" value="FILTERED_POSTMOD"/></entry><entry><id>tag:blogger.com,1999:blog-5432537856508947805.post-1129536445093515485</id><published>2016-10-11T04:40:00.002-07:00</published><updated>2016-10-12T01:08:58.532-07:00</updated><title type='text'>하이퍼바이저 구현을 위한 공부 방법</title><content type='html'>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;style&gt;@font-face {   font-family: octicons-anchor;   src: url(data:font/woff;charset=utf-8;base64,d09GRgABAAAAAAYcAA0AAAAACjQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABMAAAABwAAAAca8vGTk9TLzIAAAFMAAAARAAAAFZG1VHVY21hcAAAAZAAAAA+AAABQgAP9AdjdnQgAAAB0AAAAAQAAAAEACICiGdhc3AAAAHUAAAACAAAAAj//wADZ2x5ZgAAAdwAAADRAAABEKyikaNoZWFkAAACsAAAAC0AAAA2AtXoA2hoZWEAAALgAAAAHAAAACQHngNFaG10eAAAAvwAAAAQAAAAEAwAACJsb2NhAAADDAAAAAoAAAAKALIAVG1heHAAAAMYAAAAHwAAACABEAB2bmFtZQAAAzgAAALBAAAFu3I9x/Nwb3N0AAAF/AAAAB0AAAAvaoFvbwAAAAEAAAAAzBdyYwAAAADP2IQvAAAAAM/bz7t4nGNgZGFgnMDAysDB1Ml0hoGBoR9CM75mMGLkYGBgYmBlZsAKAtJcUxgcPsR8iGF2+O/AEMPsznAYKMwIkgMA5REMOXicY2BgYGaAYBkGRgYQsAHyGMF8FgYFIM0ChED+h5j//yEk/3KoSgZGNgYYk4GRCUgwMaACRoZhDwCs7QgGAAAAIgKIAAAAAf//AAJ4nHWMMQrCQBBF/0zWrCCIKUQsTDCL2EXMohYGSSmorScInsRGL2DOYJe0Ntp7BK+gJ1BxF1stZvjz/v8DRghQzEc4kIgKwiAppcA9LtzKLSkdNhKFY3HF4lK69ExKslx7Xa+vPRVS43G98vG1DnkDMIBUgFN0MDXflU8tbaZOUkXUH0+U27RoRpOIyCKjbMCVejwypzJJG4jIwb43rfl6wbwanocrJm9XFYfskuVC5K/TPyczNU7b84CXcbxks1Un6H6tLH9vf2LRnn8Ax7A5WQAAAHicY2BkYGAA4teL1+yI57f5ysDNwgAC529f0kOmWRiYVgEpDgYmEA8AUzEKsQAAAHicY2BkYGB2+O/AEMPCAAJAkpEBFbAAADgKAe0EAAAiAAAAAAQAAAAEAAAAAAAAKgAqACoAiAAAeJxjYGRgYGBhsGFgYgABEMkFhAwM/xn0QAIAD6YBhwB4nI1Ty07cMBS9QwKlQapQW3VXySvEqDCZGbGaHULiIQ1FKgjWMxknMfLEke2A+IJu+wntrt/QbVf9gG75jK577Lg8K1qQPCfnnnt8fX1NRC/pmjrk/zprC+8D7tBy9DHgBXoWfQ44Av8t4Bj4Z8CLtBL9CniJluPXASf0Lm4CXqFX8Q84dOLnMB17N4c7tBo1AS/Qi+hTwBH4rwHHwN8DXqQ30XXAS7QaLwSc0Gn8NuAVWou/gFmnjLrEaEh9GmDdDGgL3B4JsrRPDU2hTOiMSuJUIdKQQayiAth69r6akSSFqIJuA19TrzCIaY8sIoxyrNIrL//pw7A2iMygkX5vDj+G+kuoLdX4GlGK/8Lnlz6/h9MpmoO9rafrz7ILXEHHaAx95s9lsI7AHNMBWEZHULnfAXwG9/ZqdzLI08iuwRloXE8kfhXYAvE23+23DU3t626rbs8/8adv+9DWknsHp3E17oCf+Z48rvEQNZ78paYM38qfk3v/u3l3u3GXN2Dmvmvpf1Srwk3pB/VSsp512bA/GG5i2WJ7wu430yQ5K3nFGiOqgtmSB5pJVSizwaacmUZzZhXLlZTq8qGGFY2YcSkqbth6aW1tRmlaCFs2016m5qn36SbJrqosG4uMV4aP2PHBmB3tjtmgN2izkGQyLWprekbIntJFing32a5rKWCN/SdSoga45EJykyQ7asZvHQ8PTm6cslIpwyeyjbVltNikc2HTR7YKh9LBl9DADC0U/jLcBZDKrMhUBfQBvXRzLtFtjU9eNHKin0x5InTqb8lNpfKv1s1xHzTXRqgKzek/mb7nB8RZTCDhGEX3kK/8Q75AmUM/eLkfA+0Hi908Kx4eNsMgudg5GLdRD7a84npi+YxNr5i5KIbW5izXas7cHXIMAau1OueZhfj+cOcP3P8MNIWLyYOBuxL6DRylJ4cAAAB4nGNgYoAALjDJyIAOWMCiTIxMLDmZedkABtIBygAAAA==) format(&#39;woff&#39;); }  * {     box-sizing: border-box; }  body {     width: 980px;     margin-right: auto;     margin-left: auto; }  body .markdown-body {     padding: 45px;     border: 1px solid #ddd;     border-radius: 3px;     word-wrap: break-word; }  pre {     font: 12px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; }  .markdown-body {   -webkit-text-size-adjust: 100%;   text-size-adjust: 100%;   color: #333;   font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Segoe UI&quot;, Arial, freesans, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;   font-size: 16px;   line-height: 1.6;   word-wrap: break-word; }  .markdown-body a {   background-color: transparent; }  .markdown-body a:active, .markdown-body a:hover {   outline: 0; }  .markdown-body strong {   font-weight: bold; }  .markdown-body h1 {   font-size: 2em;   margin: 0.67em 0; }  .markdown-body img {   border: 0; }  .markdown-body hr {   box-sizing: content-box;   height: 0; }  .markdown-body pre {   overflow: auto; }  .markdown-body code, .markdown-body kbd, .markdown-body pre {   font-family: monospace, monospace;   font-size: 1em; }  .markdown-body input {   color: inherit;   font: inherit;   margin: 0; }  .markdown-body html input[disabled] {   cursor: default; }  .markdown-body input {   line-height: normal; }  .markdown-body input[type=&quot;checkbox&quot;] {   box-sizing: border-box;   padding: 0; }  .markdown-body table {   border-collapse: collapse;   border-spacing: 0; }  .markdown-body td, .markdown-body th {   padding: 0; }  .markdown-body input {   font: 13px / 1.4 Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; }  .markdown-body a {   color: #4078c0;   text-decoration: none; }  .markdown-body a:hover, .markdown-body a:active {   text-decoration: underline; }  .markdown-body hr {   height: 0;   margin: 15px 0;   overflow: hidden;   background: transparent;   border: 0;   border-bottom: 1px solid #ddd; }  .markdown-body hr:before {   display: table;   content: &quot;&quot;; }  .markdown-body hr:after {   display: table;   clear: both;   content: &quot;&quot;; }  .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {   margin-top: 15px;   margin-bottom: 15px;   line-height: 1.1; }  .markdown-body h1 {   font-size: 30px; }  .markdown-body h2 {   font-size: 21px; }  .markdown-body h3 {   font-size: 16px; }  .markdown-body h4 {   font-size: 14px; }  .markdown-body h5 {   font-size: 12px; }  .markdown-body h6 {   font-size: 11px; }  .markdown-body blockquote {   margin: 0; }  .markdown-body ul, .markdown-body ol {   padding: 0;   margin-top: 0;   margin-bottom: 0; }  .markdown-body ol ol, .markdown-body ul ol {   list-style-type: lower-roman; }  .markdown-body ul ul ol, .markdown-body ul ol ol, .markdown-body ol ul ol, .markdown-body ol ol ol {   list-style-type: lower-alpha; }  .markdown-body dd {   margin-left: 0; }  .markdown-body code {   font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;   font-size: 12px; }  .markdown-body pre {   margin-top: 0;   margin-bottom: 0;   font: 12px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; }  .markdown-body .select::-ms-expand {   opacity: 0; }  .markdown-body .octicon {   font: normal normal normal 16px/1 octicons-anchor;   display: inline-block;   text-decoration: none;   text-rendering: auto;   -webkit-font-smoothing: antialiased;   -moz-osx-font-smoothing: grayscale;   -webkit-user-select: none;   -moz-user-select: none;   -ms-user-select: none;   user-select: none; }  .markdown-body .octicon-link:before {   content: &#39;\f05c&#39;; }  .markdown-body:before {   display: table;   content: &quot;&quot;; }  .markdown-body:after {   display: table;   clear: both;   content: &quot;&quot;; }  .markdown-body&gt;*:first-child {   margin-top: 0 !important; }  .markdown-body&gt;*:last-child {   margin-bottom: 0 !important; }  .markdown-body a:not([href]) {   color: inherit;   text-decoration: none; }  .markdown-body .anchor {   display: inline-block;   padding-right: 2px;   margin-left: -18px; }  .markdown-body .anchor:focus {   outline: none; }  .markdown-body h1, .markdown-body h2, .markdown-body h3, .markdown-body h4, .markdown-body h5, .markdown-body h6 {   margin-top: 1em;   margin-bottom: 16px;   font-weight: bold;   line-height: 1.4; }  .markdown-body h1 .octicon-link, .markdown-body h2 .octicon-link, .markdown-body h3 .octicon-link, .markdown-body h4 .octicon-link, .markdown-body h5 .octicon-link, .markdown-body h6 .octicon-link {   color: #000;   vertical-align: middle;   visibility: hidden; }  .markdown-body h1:hover .anchor, .markdown-body h2:hover .anchor, .markdown-body h3:hover .anchor, .markdown-body h4:hover .anchor, .markdown-body h5:hover .anchor, .markdown-body h6:hover .anchor {   text-decoration: none; }  .markdown-body h1:hover .anchor .octicon-link, .markdown-body h2:hover .anchor .octicon-link, .markdown-body h3:hover .anchor .octicon-link, .markdown-body h4:hover .anchor .octicon-link, .markdown-body h5:hover .anchor .octicon-link, .markdown-body h6:hover .anchor .octicon-link {   visibility: visible; }  .markdown-body h1 {   padding-bottom: 0.3em;   font-size: 2.25em;   line-height: 1.2;   border-bottom: 1px solid #eee; }  .markdown-body h1 .anchor {   line-height: 1; }  .markdown-body h2 {   padding-bottom: 0.3em;   font-size: 1.75em;   line-height: 1.225;   border-bottom: 1px solid #eee; }  .markdown-body h2 .anchor {   line-height: 1; }  .markdown-body h3 {   font-size: 1.5em;   line-height: 1.43; }  .markdown-body h3 .anchor {   line-height: 1.2; }  .markdown-body h4 {   font-size: 1.25em; }  .markdown-body h4 .anchor {   line-height: 1.2; }  .markdown-body h5 {   font-size: 1em; }  .markdown-body h5 .anchor {   line-height: 1.1; }  .markdown-body h6 {   font-size: 1em;   color: #777; }  .markdown-body h6 .anchor {   line-height: 1.1; }  .markdown-body p, .markdown-body blockquote, .markdown-body ul, .markdown-body ol, .markdown-body dl, .markdown-body table, .markdown-body pre {   margin-top: 0;   margin-bottom: 16px; }  .markdown-body hr {   height: 4px;   padding: 0;   margin: 16px 0;   background-color: #e7e7e7;   border: 0 none; }  .markdown-body ul, .markdown-body ol {   padding-left: 2em; }  .markdown-body ul ul, .markdown-body ul ol, .markdown-body ol ol, .markdown-body ol ul {   margin-top: 0;   margin-bottom: 0; }  .markdown-body li&gt;p {   margin-top: 16px; }  .markdown-body dl {   padding: 0; }  .markdown-body dl dt {   padding: 0;   margin-top: 16px;   font-size: 1em;   font-style: italic;   font-weight: bold; }  .markdown-body dl dd {   padding: 0 16px;   margin-bottom: 16px; }  .markdown-body blockquote {   padding: 0 15px;   color: #777;   border-left: 4px solid #ddd; }  .markdown-body blockquote&gt;:first-child {   margin-top: 0; }  .markdown-body blockquote&gt;:last-child {   margin-bottom: 0; }  .markdown-body table {   display: block;   width: 100%;   overflow: auto;   word-break: normal;   word-break: keep-all; }  .markdown-body table th {   font-weight: bold; }  .markdown-body table th, .markdown-body table td {   padding: 6px 13px;   border: 1px solid #ddd; }  .markdown-body table tr {   background-color: #fff;   border-top: 1px solid #ccc; }  .markdown-body table tr:nth-child(2n) {   background-color: #f8f8f8; }  .markdown-body img {   max-width: 100%;   box-sizing: content-box;   background-color: #fff; }  .markdown-body code {   padding: 0;   padding-top: 0.2em;   padding-bottom: 0.2em;   margin: 0;   font-size: 85%;   background-color: rgba(0,0,0,0.04);   border-radius: 3px; }  .markdown-body code:before, .markdown-body code:after {   letter-spacing: -0.2em;   content: &quot;\00a0&quot;; }  .markdown-body pre&gt;code {   padding: 0;   margin: 0;   font-size: 100%;   word-break: normal;   white-space: pre;   background: transparent;   border: 0; }  .markdown-body .highlight {   margin-bottom: 16px; }  .markdown-body .highlight pre, .markdown-body pre {   padding: 16px;   overflow: auto;   font-size: 85%;   line-height: 1.45;   background-color: #f7f7f7;   border-radius: 3px; }  .markdown-body .highlight pre {   margin-bottom: 0;   word-break: normal; }  .markdown-body pre {   word-wrap: normal; }  .markdown-body pre code {   display: inline;   max-width: initial;   padding: 0;   margin: 0;   overflow: initial;   line-height: inherit;   word-wrap: normal;   background-color: transparent;   border: 0; }  .markdown-body pre code:before, .markdown-body pre code:after {   content: normal; }  .markdown-body kbd {   display: inline-block;   padding: 3px 5px;   font-size: 11px;   line-height: 10px;   color: #555;   vertical-align: middle;   background-color: #fcfcfc;   border: solid 1px #ccc;   border-bottom-color: #bbb;   border-radius: 3px;   box-shadow: inset 0 -1px 0 #bbb; }  .markdown-body .pl-c {   color: #969896; }  .markdown-body .pl-c1, .markdown-body .pl-s .pl-v {   color: #0086b3; }  .markdown-body .pl-e, .markdown-body .pl-en {   color: #795da3; }  .markdown-body .pl-s .pl-s1, .markdown-body .pl-smi {   color: #333; }  .markdown-body .pl-ent {   color: #63a35c; }  .markdown-body .pl-k {   color: #a71d5d; }  .markdown-body .pl-pds, .markdown-body .pl-s, .markdown-body .pl-s .pl-pse .pl-s1, .markdown-body .pl-sr, .markdown-body .pl-sr .pl-cce, .markdown-body .pl-sr .pl-sra, .markdown-body .pl-sr .pl-sre {   color: #183691; }  .markdown-body .pl-v {   color: #ed6a43; }  .markdown-body .pl-id {   color: #b52a1d; }  .markdown-body .pl-ii {   background-color: #b52a1d;   color: #f8f8f8; }  .markdown-body .pl-sr .pl-cce {   color: #63a35c;   font-weight: bold; }  .markdown-body .pl-ml {   color: #693a17; }  .markdown-body .pl-mh, .markdown-body .pl-mh .pl-en, .markdown-body .pl-ms {   color: #1d3e81;   font-weight: bold; }  .markdown-body .pl-mq {   color: #008080; }  .markdown-body .pl-mi {   color: #333;   font-style: italic; }  .markdown-body .pl-mb {   color: #333;   font-weight: bold; }  .markdown-body .pl-md {   background-color: #ffecec;   color: #bd2c00; }  .markdown-body .pl-mi1 {   background-color: #eaffea;   color: #55a532; }  .markdown-body .pl-mdr {   color: #795da3;   font-weight: bold; }  .markdown-body .pl-mo {   color: #1d3e81; }  .markdown-body kbd {   display: inline-block;   padding: 3px 5px;   font: 11px Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace;   line-height: 10px;   color: #555;   vertical-align: middle;   background-color: #fcfcfc;   border: solid 1px #ccc;   border-bottom-color: #bbb;   border-radius: 3px;   box-shadow: inset 0 -1px 0 #bbb; }  .markdown-body .plan-price-unit {   color: #767676;   font-weight: normal; }  .markdown-body .task-list-item {   list-style-type: none; }  .markdown-body .task-list-item+.task-list-item {   margin-top: 3px; }  .markdown-body .task-list-item input {   margin: 0 0.35em 0.25em -1.6em;   vertical-align: middle; }  .markdown-body .plan-choice {   padding: 15px;   padding-left: 40px;   display: block;   border: 1px solid #e0e0e0;   position: relative;   font-weight: normal;   background-color: #fafafa; }  .markdown-body .plan-choice.open {   background-color: #fff; }  .markdown-body .plan-choice.open .plan-choice-seat-breakdown {   display: block; }  .markdown-body .plan-choice-free {   border-radius: 3px 3px 0 0; }  .markdown-body .plan-choice-paid {   border-radius: 0 0 3px 3px;   border-top: 0;   margin-bottom: 20px; }  .markdown-body .plan-choice-radio {   position: absolute;   left: 15px;   top: 18px; }  .markdown-body .plan-choice-exp {   color: #999;   font-size: 12px;   margin-top: 5px; }  .markdown-body .plan-choice-seat-breakdown {   margin-top: 10px;   display: none; }  .markdown-body :checked+.radio-label {   z-index: 1;   position: relative;   border-color: #4078c0; } &lt;/style&gt;&lt;title&gt;howto_study_hypervisor&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;article class=&quot;markdown-body&quot;&gt;&lt;h1&gt;&lt;a id=&quot;user-content-hypervisor-구현-방법을-공부하기-위한-가이드&quot; class=&quot;anchor&quot; href=&quot;#hypervisor-%EA%B5%AC%ED%98%84-%EB%B0%A9%EB%B2%95%EC%9D%84-%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EA%B0%80%EC%9D%B4%EB%93%9C&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;Hypervisor 구현 방법을 공부하기 위한 가이드&lt;/h1&gt;&lt;br /&gt;&lt;h2&gt;&lt;a id=&quot;user-content-레퍼런스-메뉴얼&quot; class=&quot;anchor&quot; href=&quot;#%EB%A0%88%ED%8D%BC%EB%9F%B0%EC%8A%A4-%EB%A9%94%EB%89%B4%EC%96%BC&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;레퍼런스, 메뉴얼&lt;/h2&gt;&lt;br /&gt;&lt;p&gt;당연히 인텔/AMD 메뉴얼입니다. 무식하게 읽으면 어려워서, 중간에 포기하기 십상입니다만, 어느정도 개념이 잡히면 가장 먼저 보게 되는게 메뉴얼입니다. 경험상 인텔메뉴얼 만큼 좋은 자료는 없었습니다. (전 AMD SVM 은 안봐서 모릅니다. 동작 방식은 거의, 완전히 비슷합니다.)&lt;br /&gt;개인적인 경험으로는 인텔메뉴얼의 Virtual Machine Extension 챕터를 세번정도 읽어보니, 머리속에 들어오기 시작하더군요.&lt;/p&gt;&lt;br /&gt;&lt;h2&gt;&lt;a id=&quot;user-content-온라인-자료&quot; class=&quot;anchor&quot; href=&quot;#%EC%98%A8%EB%9D%BC%EC%9D%B8-%EC%9E%90%EB%A3%8C&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;온라인 자료&lt;/h2&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://opensecuritytraining.info/AdvancedX86-VTX.html&quot;&gt;http://opensecuritytraining.info/AdvancedX86-VTX.html&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p&gt;강추! 개인적으로 가장 추천하는 자료입니다. 엔텔메뉴얼과 같이 보면서 공부하셔야 할것입니다. 최소한 여기 나오는 내용을 확실히 다 숙지해야 합니다.&lt;/p&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/yonghwannoh/hypervisor-seminar&quot;&gt;http://www.slideshare.net/yonghwannoh/hypervisor-seminar&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p&gt;제가 예전에 만들었던 자료입니다. 마지막에 하이퍼바이저를 통해 안티키로거 &lt;br /&gt;제품 우회하는 시연영상도 있습니다.&lt;/p&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://programming.or.kr/?p=312&quot;&gt;http://programming.or.kr/?p=312&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/hefos&quot;&gt;서승현님&lt;/a&gt; 이 정리해두신 글입니다. KVM 코드 분석을 시작하시는 분들께 많이 도움될것 같습니다. &lt;/p&gt;&lt;br /&gt;&lt;h2&gt;&lt;a id=&quot;user-content-책&quot; class=&quot;anchor&quot; href=&quot;#%EC%B1%85&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;책&lt;/h2&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Series 1 Xen으로 배우는 가상화 기술의 이해 - CPU 가상화&lt;/li&gt;&lt;li&gt;Series 2 Xen으로 배우는 가상화 기술의 이해 - 메모리 가상화&lt;/li&gt;&lt;li&gt;Series 3 Xen으로 배우는 가상화 기술의 이해 - I/O 가상화&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p&gt;한빛리얼타임에서 PDF 로 구매하실 수 있습니다. Xen 하이퍼바이저 소스코드를 분석하면서 공부한 내용을 정리해서 책으로 출판했네요.&lt;br /&gt;대단하신분들인듯, 하지만 가상머신의 기본 개념이나 VT-x 스펙에 대한 기초지식이 없으면 이해하기 쉽지 않을 것 같네요.&lt;/p&gt;&lt;br /&gt;&lt;h2&gt;&lt;a id=&quot;user-content-코드&quot; class=&quot;anchor&quot; href=&quot;#%EC%BD%94%EB%93%9C&quot; aria-hidden=&quot;true&quot;&gt;&lt;span aria-hidden=&quot;true&quot; class=&quot;octicon octicon-link&quot;&gt;&lt;/span&gt;&lt;/a&gt;코드&lt;/h2&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/ionescu007/SimpleVisor&quot;&gt;https://github.com/ionescu007/SimpleVisor&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p&gt;Windows Interernals 의 저자중 한명인 Alex Ionescue 가 만든 하이퍼바이저입니다. 최소한의 어셈블리코드로 엄청나게 간결하게 작성된 멋진 하이퍼바이저입니다. 공부를 위해서라면 최고의 선택이라고 생각합니다.&lt;/p&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/somma/HyperPlatform&quot;&gt;https://github.com/somma/HyperPlatform&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p&gt;또다른 멋진 오픈소스 구현입니다. &lt;/p&gt;&lt;br /&gt;&lt;u