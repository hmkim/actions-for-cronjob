<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://taebbong.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://taebbong.github.io/" rel="alternate" type="text/html" /><updated>2019-04-25T06:51:15+00:00</updated><id>https://taebbong.github.io/feed.xml</id><title type="html">TaeBbong</title><subtitle>TaeBbong의 개발 블로그</subtitle><entry><title type="html">[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/04/19</title><link href="https://taebbong.github.io/mythink-0419-post/" rel="alternate" type="text/html" title="[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/04/19" /><published>2019-04-19T00:00:00+00:00</published><updated>2019-04-19T00:00:00+00:00</updated><id>https://taebbong.github.io/mythink-0419-post</id><content type="html" xml:base="https://taebbong.github.io/mythink-0419-post/">&lt;h2 id=&quot;근황&quot;&gt;근황&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;계—-속 쉬다가 시험 기간(이라고 쓰고 과제 기간..)이라 나름 과제를 해봤습니다.&lt;/li&gt;
  &lt;li&gt;선형대수가 참 귀찮고 할 과제가 많았는데 과제도 잘 하고 시험 공부도 구글링해서 잘 끝냈습니다:)&lt;/li&gt;
  &lt;li&gt;너무 잉여로운 시간이 많은데,&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;개발-팀-기획&quot;&gt;개발 팀 기획&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;전부터 개발 팀을 만들고 싶었습니다.&lt;/li&gt;
  &lt;li&gt;주제를 정해서 시작하는 창업팀이 아닌, 무엇이든 함께 역량을 키우며 하나 만들어보자는 마인드의 팀을 만드려 합니다.&lt;/li&gt;
  &lt;li&gt;기대가 됩니다:)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="think" /><category term="taebbong" /><category term="nowadays" /><summary type="html">매주 쓰는 근황</summary></entry><entry><title type="html">[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/04/12</title><link href="https://taebbong.github.io/mythink-0412-post/" rel="alternate" type="text/html" title="[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/04/12" /><published>2019-04-12T00:00:00+00:00</published><updated>2019-04-12T00:00:00+00:00</updated><id>https://taebbong.github.io/mythink-0412-post</id><content type="html" xml:base="https://taebbong.github.io/mythink-0412-post/">&lt;h2 id=&quot;휴우우우우우식&quot;&gt;휴우우우우우식&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;외주는 잘 마무리 했고 그냥 쭉 쉬었습니다ㅎ&lt;/li&gt;
  &lt;li&gt;진짜 잉여롭게만 지낸거 같아 별 일이 없네요ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="think" /><category term="taebbong" /><category term="nowadays" /><summary type="html">매주 쓰는 근황</summary></entry><entry><title type="html">00 Scrapy Tutorial</title><link href="https://taebbong.github.io/scrapy01-post/" rel="alternate" type="text/html" title="00 Scrapy Tutorial" /><published>2019-04-01T00:00:00+00:00</published><updated>2019-04-01T00:00:00+00:00</updated><id>https://taebbong.github.io/scrapy01-post</id><content type="html" xml:base="https://taebbong.github.io/scrapy01-post/">&lt;h2 id=&quot;게시글-링크&quot;&gt;게시글 링크&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://TaeBbong.github.io/Scrapy-project&quot;&gt;프로젝트 링크&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시작하며&quot;&gt;시작하며&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;안녕하세요, TaeBbong 입니다.&lt;/li&gt;
  &lt;li&gt;이번 글에서는 Scrapy 공식 Document의 Tutorial을 번역 &amp;amp; 정리해보겠습니다.&lt;/li&gt;
  &lt;li&gt;완벽한 번역보다는 개인적으로 공부한 것을 정리하는 느낌으로 작성할 것이며, 정확한 원문은 &lt;a href=&quot;https://docs.scrapy.org/en/latest/intro/tutorial.html&quot;&gt;다음링크&lt;/a&gt;에서 확인할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;scrapy-tutorial&quot;&gt;Scrapy Tutorial&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;이 글은 Scrapy 공식 Document Tutorial을 참고합니다.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;이 튜토리얼은 Scrapy가 설치되어있음을 전제로 진행됩니다. 설치 가이드는 &lt;a href=&quot;https://docs.scrapy.org/en/latest/intro/install.html#intro-install&quot;&gt;다음 링크&lt;/a&gt;에서 확인하실 수 있습니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 튜토리얼에서는 &lt;a href=&quot;quotes.toscrape.com&quot;&gt;quotes.toscrape.com&lt;/a&gt;에서 유명 작가들의 문장들을 스크랩할 예정입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;본 튜토리얼에서 진행할 일들은 다음과 같습니다:
    &lt;ol&gt;
      &lt;li&gt;Scrapy 프로젝트 만들기&lt;/li&gt;
      &lt;li&gt;사이트를 크롤링하고 데이터를 추출할 Spider 생성하기&lt;/li&gt;
      &lt;li&gt;Scrape한 데이터를 내보내기&lt;/li&gt;
      &lt;li&gt;링크를 따라 재귀적으로 Spider 작동시키기&lt;/li&gt;
      &lt;li&gt;Spider Argument 사용하기&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;project-생성하기&quot;&gt;Project 생성하기!&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;프로젝트가 저장될 디렉토리에 터미널 등으로 접근하여 다음 명령어로 Scrapy 프로젝트를 생성합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy startproject tutorial
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이 명령어를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;tutorial&lt;/code&gt;이라는 폴더가 생성되었습니다. 이 폴더는 다음과 같은 구조를 가지고 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tutorial/
	scrapy.cfg           # 배포 설정 파일
	tutorial/            # 프로젝트의 파이썬 코드들이 존재하는 디렉토리
		__init__.py      
		items.py         # items 정의 파일
		middlewares.py   # middleware 정의 파일
		pipelines.py     # pipelines 정의 파일
		settings.py      # setting 파일
		spiders/         # Spider를 작성하는 디렉토리
			__init__.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;(역자) 위의 디렉토리 구조에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;spiders&lt;/code&gt;만 주로 작성하게 되며, 다른 파일들은 거의 수정하지 않습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;첫번째-spider-만들기&quot;&gt;첫번째 Spider 만들기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Spiders는 Scrapy가 타겟 웹사이트(들)로부터 정보를 scrape할 수 있도록 우리가 정의하는 클래스입니다.&lt;/li&gt;
  &lt;li&gt;이는 scrapy.Spider의 subclass 형태이며, 초기 요청을 정의해야하고, 선택적으로 어떤 링크를 따라 진행할지, 혹은 어떻게 데이터를 파싱해서 가져올지에 대해 정의할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;quotes_spider.py라는 이름의 파이썬 파일을 다음과 같이 작성하여 spiders/ 디렉토리에 생성합니다.&lt;/li&gt;
  &lt;li&gt;(역자) 주석으로 설명을 달았습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;QuotesSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;quotes&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# scrapy 실행을 위한 spider의 고유 이름&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start_requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 일련한 requests을 return, spider의 시작점 설정 부분으로 세팅한 urls에 따라 자동으로 크롤링 시작&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;s&quot;&gt;'http://quotes.toscrape.com/page/1/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s&quot;&gt;'http://quotes.toscrape.com/page/2/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# parse를 콜백으로 부름으로, 매 request마다 발생하는 response를 처리&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# request마다 발생한 response를 처리하는 부분&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'quotes-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.html'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Saved file &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;추가-starts_requests-생략하기&quot;&gt;(추가) starts_requests 생략하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;starts_requests 메소드는 다음과 같은 형태로 축약하여 사용할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;QuotesSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;quotes&quot;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;start_urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;'http://quotes.toscrape.com/page/1/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s&quot;&gt;'http://quotes.toscrape.com/page/2/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# request마다 발생한 response를 처리하는 부분&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'quotes-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s.html'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'wb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Saved file &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;(역자) 위와 같은 형태로 축약하면, spider 클래스에서는 자동으로 starts_urls라는 클래스 구성요소를 인식하여 start_requests 메소드를 기본값으로 선언, 작동하게 됩니다.&lt;/li&gt;
  &lt;li&gt;(역자) parse 또한 마찬가지로 각 url의 request에 따라 콜백으로 지정이 되는데, 이 역시 parse가 scrapy의 기본 콜백 메소드이기 때문이며, 따로 지정하지 않아도 실행됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;scrapy-실행하기&quot;&gt;Scrapy 실행하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;프로젝트의 가장 상위 디렉토리, 즉 scrapy.cfg 파일이 있는 디렉토리에서 다음 명령어를 입력해 실행합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy crawl quotes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이 명령이 실행되면 우리가 지정한 spider의 name인 ‘quotes’가 실행되며, request를 타겟 url에 대해 보내게 됩니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;선언한 로그가 정상적으로 print되면 잘 작동한 것입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;2개의 html 파일이 저장되면 정상적으로 작동한 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;데이터-추출하기&quot;&gt;데이터 추출하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;bash 환경에서 데이터 추출하는 연습을 해볼 수 있습니다.&lt;/li&gt;
  &lt;li&gt;터미널 등에서 다음 명령어를 입력해보세요. (단, url에 &amp;amp; 등의 문자로 인자가 담긴 경우 bash 환경에서 잘 작동하지 않습니다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy shell &lt;span class=&quot;s1&quot;&gt;'http://quotes.toscrape.com/page/1/'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;다음과 같이 실행됨을 확인할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; ... Scrapy log here ... &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
2016-09-19 12:09:27 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;scrapy.core.engine] DEBUG: Crawled &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;200&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;lt;GET http://quotes.toscrape.com/page/1/&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;referer: None&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s] Available Scrapy objects:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   scrapy     scrapy module &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;contains scrapy.Request, scrapy.Selector, etc&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   crawler    &amp;lt;scrapy.crawler.Crawler object at 0x7fa91d888c90&amp;gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   item       &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   request    &amp;lt;GET http://quotes.toscrape.com/page/1/&amp;gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   response   &amp;lt;200 http://quotes.toscrape.com/page/1/&amp;gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   settings   &amp;lt;scrapy.settings.Settings object at 0x7fa91d888c10&amp;gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   spider     &amp;lt;DefaultSpider &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt; at 0x7fa91c8af990&amp;gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s] Useful shortcuts:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   shelp&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;           Shell &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;print this &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   fetch&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;req_or_url&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Fetch request &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;or URL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; and update &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;objects
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;s]   view&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    View response &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;a browser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;(역자) 위에 보시면 Available Scrapy objects라고 되어있는데, 이 부분에서 선택할 수 있는 Scrapy 객체들이 적혀있습니다. 이를 활용해 여러가지 기능을 확인해볼 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS를 기반으로 response object에서의 element를 골라볼 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; response.css&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;Selector &lt;span class=&quot;nv&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'descendant-or-self::title'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;title&amp;gt;Quotes to Scrape&amp;lt;/title&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; response.css&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'title::text'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)[&lt;/span&gt;0].get&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'Quotes to Scrape'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;(역자) 원문에서는 정규표현식 등으로 파싱하는 내용도 기술되어있지만, 이 부분은 생략하겠습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;XPath로도 당연히 element를 골라볼 수 있습니다.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; response.xpath&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'//title/text()'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.get&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;'Quotes to Scrape'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;(역자) 이하 파싱을 활용해 각종 데이터를 추출, 정리하는 내용이 포함되어있습니다. 진행이 어려우신 초보 분들은 원문에서 코드를 확인해보세요!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;spider-코드에서-데이터-추출하기&quot;&gt;Spider 코드에서 데이터 추출하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;여태까지 Shell을 활용해 데이터를 추출해봤으며, 앞서 작성했던 Spider 객체 내에서도 데이터 추출을 적용해볼 수 있습니다.&lt;/li&gt;
  &lt;li&gt;Scrapy Spider는 일반적으로 페이지에서 추출한 데이터들을 포함하고 있는 많은 Dictionary를 생성합니다. 이를 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; 키워드를 활용할 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scrapy&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;QuotesSpider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrapy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;quotes&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start_urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'http://quotes.toscrape.com/page/1/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'http://quotes.toscrape.com/page/2/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'div.quote'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'span.text::text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'author'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'small.author::text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'div.tags a.tag::text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;다음 결과를 얻을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2016-09-19 18:57:19 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;scrapy.core.scraper] DEBUG: Scraped from &amp;lt;200 http://quotes.toscrape.com/page/1/&amp;gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tags'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'life'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'love'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'author'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'André Gide'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'“It is better to be hated for what you are than to be loved for what you are not.”'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
2016-09-19 18:57:19 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;scrapy.core.scraper] DEBUG: Scraped from &amp;lt;200 http://quotes.toscrape.com/page/1/&amp;gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tags'&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'edison'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'failure'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'inspirational'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'paraphrased'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'author'&lt;/span&gt;: &lt;span class=&quot;s1&quot;&gt;'Thomas A. Edison'&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;'text'&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;“I have not failed. I've just found 10,000 ways that won't work.”&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;스크랩한-데이터-저장하기&quot;&gt;스크랩한 데이터 저장하기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Feed exports 방식이 데이터 저장할 때 가장 간단합니다. 다음 명령으로 간단하게 저장할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scrapy crawl quotes &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; quotes.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Scrapy는 인자로 들어온 파일에 덮어 쓰는 것이 아닌, 해당 파일에 append하기 때문에, 저 명령어를 기존 파일을 지우지 않고 여러번 쓰면 JSON 파일이 손상되니 주의해야 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;JSON Lines와 같은 다른 포맷도 사용할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;작은 프로젝트에서는 데이터를 그냥 저장해도 괜찮지만, 좀 더 복잡한 프로젝트를 수행할때는 Item Pipeline을 쓰게 됩니다.&lt;/li&gt;
  &lt;li&gt;이는 project 내의 tutorial/pipelines.py 에서 설정할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;(역자) 이에 대한 자세한 내용은 추후 추가될 Item Pipeline 포스트에서 확인할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="development" /><category term="python" /><category term="web" /><category term="crawling" /><category term="scrapy" /><category term="bs4" /><summary type="html">docs.scrapy.org 공식 문서 번역 &amp; 학습 프로젝트</summary></entry><entry><title type="html">[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/29</title><link href="https://taebbong.github.io/mythink-0329-post/" rel="alternate" type="text/html" title="[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/29" /><published>2019-03-29T00:00:00+00:00</published><updated>2019-03-29T00:00:00+00:00</updated><id>https://taebbong.github.io/mythink-0329-post</id><content type="html" xml:base="https://taebbong.github.io/mythink-0329-post/">&lt;h2 id=&quot;개발--휴식&quot;&gt;개발 &amp;amp; 휴식&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;끄어어어어..&lt;/li&gt;
  &lt;li&gt;개발 너무 힘들어유…&lt;/li&gt;
  &lt;li&gt;뭔가 항상 만드는거 까지는 되게 재밌게 하는데 배포하거나 완성하는 단계에서 늘 현타가 한번씩 오면서 의욕이 꺾이는거 같아요.&lt;/li&gt;
  &lt;li&gt;웹 배포 너무 어렵다ㅠㅠ&lt;/li&gt;
  &lt;li&gt;그래서 요번 주는 개발은 거의 쉬고 행-복한 인생 찾으러 다녔습니다ㅎㅎ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;일탈&quot;&gt;일탈&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;대전 갔습니다!(4/1 ~ 4/2)&lt;/li&gt;
  &lt;li&gt;선형 대수 수업 하나 째끼고 친구 만나러 대전 왔는데 간만에 오니 새롭군요ㅎㅎ&lt;/li&gt;
  &lt;li&gt;친구랑 얘기하면서 생각이 환기도 되고, 열심히 사는 친구의 모습을 보며 동기부여도 되고 참 좋습니다:)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="think" /><category term="taebbong" /><category term="nowadays" /><summary type="html">매주 쓰는 근황</summary></entry><entry><title type="html">[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/29</title><link href="https://taebbong.github.io/mythink-0405-post/" rel="alternate" type="text/html" title="[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/29" /><published>2019-03-29T00:00:00+00:00</published><updated>2019-03-29T00:00:00+00:00</updated><id>https://taebbong.github.io/mythink-0405-post</id><content type="html" xml:base="https://taebbong.github.io/mythink-0405-post/">&lt;h2 id=&quot;개발--휴식&quot;&gt;개발 &amp;amp; 휴식&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;끄어어어어..&lt;/li&gt;
  &lt;li&gt;개발 너무 힘들어유…&lt;/li&gt;
  &lt;li&gt;뭔가 항상 만드는거 까지는 되게 재밌게 하는데 배포하거나 완성하는 단계에서 늘 현타가 한번씩 오면서 의욕이 꺾이는거 같아요.&lt;/li&gt;
  &lt;li&gt;웹 배포 너무 어렵다ㅠㅠ&lt;/li&gt;
  &lt;li&gt;그래서 요번 주는 개발은 거의 쉬고 행-복한 인생 찾으러 다녔습니다ㅎㅎ&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;일탈&quot;&gt;일탈&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;대전 갔습니다!(4/1 ~ 4/2)&lt;/li&gt;
  &lt;li&gt;선형 대수 수업 하나 째끼고 친구 만나러 대전 왔는데 간만에 오니 새롭군요ㅎㅎ&lt;/li&gt;
  &lt;li&gt;친구랑 얘기하면서 생각이 환기도 되고, 열심히 사는 친구의 모습을 보며 동기부여도 되고 참 좋습니다:)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="think" /><category term="taebbong" /><category term="nowadays" /><summary type="html">매주 쓰는 근황</summary></entry><entry><title type="html">[Web Scraping with Python(파이썬으로 웹크롤러 만들기) 2판 - 한빛 미디어 도서 리뷰]</title><link href="https://taebbong.github.io/pythonds-post/" rel="alternate" type="text/html" title="[Web Scraping with Python(파이썬으로 웹크롤러 만들기) 2판 - 한빛 미디어 도서 리뷰]" /><published>2019-03-29T00:00:00+00:00</published><updated>2019-03-29T00:00:00+00:00</updated><id>https://taebbong.github.io/pythonds-post</id><content type="html" xml:base="https://taebbong.github.io/pythonds-post/">&lt;p&gt;&lt;img src=&quot;http://image.yes24.com/momo/TopCate2205/MidCate010/220492589.jpg&quot; alt=&quot;도서 이미지&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;책에-대하여&quot;&gt;책에 대하여&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Web Scraping with Python, 믿고 읽는 O’RELLY 시리즈 도서이다.&lt;/li&gt;
  &lt;li&gt;일전에 웹 크롤링을 공부하며 해당 도서 1판을 읽은 적 있는데, 내가 구글링을 하며 공부한 내용 대부분이 책에 적혀있어 조금만 더 빨리 읽을 걸, 하는 생각이 들었었다.&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="python" /><category term="data science" /><category term="web crawling" /><category term="web scraping" /><summary type="html">한빛 미디어 도서 리뷰</summary></entry><entry><title type="html">Flutter Tutorial - Flutter로 만드는 하이브리드 앱 프로젝트</title><link href="https://taebbong.github.io/Flutter-project/" rel="alternate" type="text/html" title="Flutter Tutorial - Flutter로 만드는 하이브리드 앱 프로젝트" /><published>2019-03-22T00:00:00+00:00</published><updated>2019-03-22T00:00:00+00:00</updated><id>https://taebbong.github.io/Flutter-project</id><content type="html" xml:base="https://taebbong.github.io/Flutter-project/">&lt;h2 id=&quot;프로젝트-개요&quot;&gt;프로젝트 개요&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Flutter 하이브리드 앱 개발 프로젝트&lt;/li&gt;
  &lt;li&gt;Flutter 튜토리얼부터 Flutter로 개발하는 모든 앱 프로젝트들을 기록&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;프로젝트-링크&quot;&gt;프로젝트 링크&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://TaeBbong.github.io/&quot;&gt;Flutter 기본 기능 튜토리얼&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://TaeBbong.github.io/&quot;&gt;해커톤 알림 앱 서비스&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="flutter" /><category term="dart" /><category term="app" /><category term="mobile" /><category term="hybrid" /><summary type="html">Flutter를 활용해서 만드는 앱 프로젝트 목록</summary></entry><entry><title type="html">[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/22</title><link href="https://taebbong.github.io/mythink-0322-post/" rel="alternate" type="text/html" title="[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/22" /><published>2019-03-22T00:00:00+00:00</published><updated>2019-03-22T00:00:00+00:00</updated><id>https://taebbong.github.io/mythink-0322-post</id><content type="html" xml:base="https://taebbong.github.io/mythink-0322-post/">&lt;h2 id=&quot;개발&quot;&gt;개발&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Scrapy&lt;/code&gt; 튜토리얼을 블로그에 올리려 합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;생각보다 &lt;code class=&quot;highlighter-rouge&quot;&gt;Scrapy&lt;/code&gt; 공식 문서에 내용이 많지 않아서 언능 정리해서 올리겠습니다..!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 코인에 탑승했습니다!&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;React Native&lt;/code&gt;가 워낙 별로라는 얘기를 많이 들었고, 네이티브한 iOS 개발 공부하기엔 좀 무리일거 같다는 생각이 있었는데,&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Flutter&lt;/code&gt; 강의가 인프런에 있어서 충동적으로 질렀습니다!(22000원..)&lt;/li&gt;
  &lt;li&gt;하도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;랑 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dart&lt;/code&gt;에 대한 안좋은 얘기가 많아서 걱정했는데, 몇몇 분들이 좋다고 말하는걸 보고 시작했어요.&lt;/li&gt;
  &lt;li&gt;근데 생각보다 되게 편하고 좋더라구요..?&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Dart&lt;/code&gt;언어도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java + Javascript&lt;/code&gt; 느낌이라 낯설지도 않고(함수형 언어는 넘나 낯설..)&lt;/li&gt;
  &lt;li&gt;프로젝트 구조도 깔끔해서 편하게 개발할 수 있을거 같아요!!&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;빨리 기본 앱부터 다양한 프로젝트를 해보려합니다:)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Vue.js&lt;/code&gt; 인강도 질렀어요!!&lt;/li&gt;
  &lt;li&gt;스터디 진행을 위해 질렀는데, 잘 진행할 수 있을지 걱정되네요..&lt;/li&gt;
  &lt;li&gt;좀 해봤어야 했는데 한번도 안해봐서 진행하기 좀 무섭긴 하지만 열심히 해야죠!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;인턴&quot;&gt;인턴&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;인턴을 하고 싶어요ㅠㅠㅠ&lt;/li&gt;
  &lt;li&gt;왜 하고 싶은지 이유를 명확히 정의하진 못하겠지만, 졸업하면 선택권이 없는만큼 꼭 학부 때 해보고는 싶어요!&lt;/li&gt;
  &lt;li&gt;두 군데 정도 후보가 있지만, 막 땡기지 않아서 좀 더 알아보고 싶네요.&lt;/li&gt;
  &lt;li&gt;정 없으면 소마 톡방에라도 올려봐야겠죠..?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;휴식&quot;&gt;휴식&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;월요일날 놀이공원 갔다가 감기 걸리고ㅠㅠ&lt;/li&gt;
  &lt;li&gt;화수 아픈 몸으로 열심히 일했더니 목요일부터 쉬고 싶어져서 목금 잘 쉬었네요:)&lt;/li&gt;
  &lt;li&gt;살짝 번아웃을 전보다 많이 경계하고 있어서 휴식을 참 열심히 챙기고 있습니다.&lt;/li&gt;
  &lt;li&gt;주말부터 또 열심히 달려야지요ㅇ.ㅇ&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="think" /><category term="taebbong" /><category term="nowadays" /><summary type="html">매주 쓰는 근황</summary></entry><entry><title type="html">[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/15</title><link href="https://taebbong.github.io/mythink-0315-post/" rel="alternate" type="text/html" title="[언제까지 쓸 수 있을지 모르겠지만 매주 금요일마다 쓰는 내 근황] 2019/03/15" /><published>2019-03-15T00:00:00+00:00</published><updated>2019-03-15T00:00:00+00:00</updated><id>https://taebbong.github.io/mythink-0315-post</id><content type="html" xml:base="https://taebbong.github.io/mythink-0315-post/">&lt;h2 id=&quot;개발&quot;&gt;개발&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;즐거운 외주^^ 외주 안하려 했는데 금전보단 공부하기 좋을거 같아 선택적으로 진행하고 있습니다.&lt;/li&gt;
  &lt;li&gt;외주하면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Django&lt;/code&gt;를 어느정도 쓸 수 있을만큼 공부가 된거 같아 좋습니다.&lt;/li&gt;
  &lt;li&gt;그 외에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Scrapy&lt;/code&gt;를 공부하고 있는데, 이걸 잘만 다룰 수 있으면 requests의 한계와 Selenium의 무거움을 해결 할 수 있을거 같습니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Scrapy&lt;/code&gt;만 마스터하면 크롤링 정복!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;강의&quot;&gt;강의&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;강의 열심히 찍어서 지금 &lt;a href=&quot;https://www.youtube.com/channel/UCKmMoTLPAesXAav0tAUOjUg&quot;&gt;유튜브&lt;/a&gt;에 requests 기본 크롤링 강의가 다 올라갔습니다!&lt;/li&gt;
  &lt;li&gt;조회수는 처참하지만.. 꾸준히 올리면 누군가는 보지 않을까ㅎ..&lt;/li&gt;
  &lt;li&gt;사실 그것보단 그저 기록의 의미로 남겨놓았으면 좋겠습니다.&lt;/li&gt;
  &lt;li&gt;영상에 자막 다는 인공지능 기반 서비스인 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vrew&lt;/code&gt;를 사용해봤는데 너무너무너무 편합니다.&lt;/li&gt;
  &lt;li&gt;영상 당 10분도 안되어서 완성되는거 같아 정말 마음에 듭니다^^&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;동아리&quot;&gt;동아리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;세상에서 제일 귀찮은건 연락하는 일..&lt;/li&gt;
  &lt;li&gt;이제 동아리 스터디 구성하고 진행할 계획입니다. 톡방 팠어요!!&lt;/li&gt;
  &lt;li&gt;저는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vue.js&lt;/code&gt; 스터디를 진행할건데, 하면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Django + Bootstrap&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Vue.js + Node.js + Vuetify&lt;/code&gt;를 비교할 수 있을 듯 합니다.&lt;/li&gt;
  &lt;li&gt;둘 중 편하고 좋다고 생각되는 방법을 정해서 앞으로 쭉 하나로 개발할 수 있지 않을까 싶습니다:)&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="think" /><category term="taebbong" /><category term="nowadays" /><summary type="html">매주 쓰는 근황</summary></entry><entry><title type="html">기계학습 알고리즘의 기초</title><link href="https://taebbong.github.io/ML-project/" rel="alternate" type="text/html" title="기계학습 알고리즘의 기초" /><published>2019-03-11T00:00:00+00:00</published><updated>2019-03-11T00:00:00+00:00</updated><id>https://taebbong.github.io/ML-project</id><content type="html" xml:base="https://taebbong.github.io/ML-project/">&lt;h2 id=&quot;프로젝트-개요&quot;&gt;프로젝트 개요&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;기계학습 알고리즘의 기초 및 실습&lt;/li&gt;
  &lt;li&gt;스터디 방식의 진행&lt;/li&gt;
  &lt;li&gt;간단한 강좌 형태의 포스팅&lt;/li&gt;
  &lt;li&gt;Machine Learning In Action 책을 기반으로 실습하며, python 2.x로 작성되어있는 코드를 python 3.x로 재작성하며 학습&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;프로젝트-링크&quot;&gt;프로젝트 링크&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://TaeBbong.github.io/kNN-post&quot;&gt;k-최근접 이웃 알고리즘(k-NN)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://TaeBbong.github.io/kMeans-post&quot;&gt;k-평균 알고리즘(k-Means)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="ml" /><category term="machine" /><category term="learning" /><category term="basic" /><category term="python" /><summary type="html">Machine Learning In Action 책 기반 실습</summary></entry></feed>