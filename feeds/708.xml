<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>이승현</title>
    <link>https://brunch.co.kr/@@1OLd</link>
    <description>평범한 안드로이드 개발자입니다.</description>
    <language>ko</language>
    <pubDate>Mon, 13 May 2019 14:07:42 GMT</pubDate>
    <generator>Kakao Brunch</generator>
    <image>
      <title>평범한 안드로이드 개발자입니다.</title>
      <url>https://img1.daumcdn.net/thumb/C100x100/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FaHSsHbo-tTpRxJlcbcxGgfLGToc.jpg</url>
      <link>https://brunch.co.kr/@@1OLd</link>
      <width>100</width>
      <height>100</height>
    </image>
    <item>
      <title>Write The Docs 서울의 2019 밋업 후기 - Write The Docs 서울의 2019 첫 번째 밋업</title>
      <link>https://brunch.co.kr/@@1OLd/213</link>
      <description>https://festa.io/events/191  3월 23일 토요일에 Write The Docs 서울에서 주최한 Write The Docs 서울의 2019 첫 번째 밋업에 다녀왔습니다.  기술 블로그 작성, 운영, 홍보 등, 기술 블로그와 관련된 내용들로 이루어진 행사였습니다.  기존에 다녔던 구글, 안드로이드 세미나와 다른 내용들이라&amp;nbsp;신선했고, 오랫동&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FqYwZjy2iU-j1C91RhOUN0T91PiM.png" width="500" /&gt;</description>
      <pubDate>Mon, 01 Apr 2019 00:52:22 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/213</guid>
    </item>
    <item>
      <title>Android Paging Library - Android Jetpack Navigation</title>
      <link>https://brunch.co.kr/@@1OLd/211</link>
      <description>대량의 데이터 중&amp;nbsp;필요한 데이터만 표시하는 UI를&amp;nbsp;구현해야 하는 경우가 많습니다.  데이터가 계속해서 업데이트되거나&amp;nbsp;표시하는 UI 이벤트들로 인해 둘 사이의 sync를 맞추기가 어려워질 수 있습니다. 이는 결국 사용자의 리소스를 낭비하게 됩니다.   필요에 따라 데이터 소스에서 정보를 점진적으로 로드합니다.  Paging Library는 한 번에 필요한 데&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FKKxVxDzOWHV4eZqsAUxi5qrgwTY.png" width="500" /&gt;</description>
      <pubDate>Mon, 25 Mar 2019 00:03:00 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/211</guid>
    </item>
    <item>
      <title>Android Navigation - Android Jetpack Navigation</title>
      <link>https://brunch.co.kr/@@1OLd/210</link>
      <description>인앱 탐색에 필요한 모든 것을 처리합니다.  Navigation은 앱 내의 화면 전환을 좀 더 쉽게 구현하고 화면 흐름을 시각화해서 볼 수 있도록 해주는 프레임워크입니다.  기존의 startActivity()나 FragmentManager를 이용한 화면 전환 구현이 좀 더 단순해졌습니다.  그리고&amp;nbsp;코드를 직접 분석해야만 했던 화면 흐름도 시각화해서 제공하고&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2F8dxYPRQ2Vsys3njp-tCYMijfEyY.png" width="500" /&gt;</description>
      <pubDate>Mon, 18 Mar 2019 00:09:47 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/210</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #48 스트림 병렬화는 주의해서 적용하라</title>
      <link>https://brunch.co.kr/@@1OLd/209</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #48 스트림 병렬화는 주의해서 적용하라   스트림은 parallel 메서드만 호출하면 자동으로 병렬 실행할 수 있는 스트림을 지원하고 있습니다.  사용하기는 쉽지만 주의할 점들이 있습니다.   #01 스트림 병렬화가 성능에 미치는 영향   위 코드는 메르센 소수를 구하는 코드를 스트림 병렬화로 처리하고&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FrxsyBCFb3nG-jGD8xb44xoSlKzk.png" width="500" /&gt;</description>
      <pubDate>Mon, 11 Mar 2019 00:21:22 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/209</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #47 반환 타입으로는 스트림보다 컬렉션이 낫다</title>
      <link>https://brunch.co.kr/@@1OLd/208</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #47 반환 타입으로는 스트림보다 컬렉션이 낫다   Collection interface, Iterable interface, Array 반복문을 처리하기 위해서는 for-each를 이용할 수 있습니다. Stream 반복문을 처리하기 위해서는 forEach(Consumer&amp;lt;? super T&amp;gt; action&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2Fg3JbSyKYj3Rzz8hmRe7LpcdQqQk.png" width="500" /&gt;</description>
      <pubDate>Mon, 04 Mar 2019 00:00:22 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/208</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #46 스트림에서는 부작용 없는 함수를 사용하라</title>
      <link>https://brunch.co.kr/@@1OLd/207</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #46 스트림에서는 부작용 없는 함수를 사용하라  스트림에서는 순수 함수(Pure function)를 이용해야 합니다. 오직 입력만이 결과에 영향을 주는 함수 다른 가변 상태를 참조하지 않고, 함수 스스로도 다른 상태를 변경하지 않음  이를 위해서는 부작용(side effect)이 없는 함수를 이용해야 &lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2Fm1AcSPgmAVl0u3uiuRVzHeZNR_E.png" width="500" /&gt;</description>
      <pubDate>Mon, 25 Feb 2019 00:03:27 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/207</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #45 스트림은 주의해서 사용하라</title>
      <link>https://brunch.co.kr/@@1OLd/206</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #45 스트림은 주의해서 사용하라  Java 8에서 다량의 데이터 처리 작업을 돕고자 Stream API가 추가되었습니다.  스트림 API는 메서드 연쇄를 지원하는 Fluent API입니다. Fluent는 한글로 &amp;quot;유창한&amp;quot;이라는 의미를 가지고 있습니다.코드를 작성하면, 마치 영어 문장처럼 잘 읽히는 AP&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FuYzLuwd3QTlvsh1hiTG7bNwW52I.png" width="500" /&gt;</description>
      <pubDate>Mon, 18 Feb 2019 00:07:46 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/206</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #44 표준 함수형 인터페이스를 사용하라</title>
      <link>https://brunch.co.kr/@@1OLd/205</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #44 표준 함수형 인터페이스를 사용하라  표준 함수형 인터페이스를 사용해야 하는 이유에 대해 알아보겠습니다. ​ ​ ​#01 java.util.LinkedHashMap#removeEldestEntry(Map.Entry&amp;lt;K, V&amp;gt; eldest) ​ ​ LinkedHashMap 클래스의 removeElde&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2F_DFrydweq9PeOWK-Y0W1v3uy7ZY.png" width="500" /&gt;</description>
      <pubDate>Mon, 11 Feb 2019 00:35:18 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/205</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #43&amp;nbsp;람다보다는 메서드 참조를&amp;nbsp;&amp;nbsp;사용하라</title>
      <link>https://brunch.co.kr/@@1OLd/204</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #43 람다보다는 메서드 참조를 사용하라  이전 장에서는 익명 클래스보다 람다를 사용하라고 했는데, 이번엔 람다보다 메서드 참조(method reference)를 사용하라고 합니다.  메서드 참조를 이용했을 때 장점에 대해 알아보겠습니다.   #01 메서드 참조 장점   Map 인터페이스에서는 merge&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FqCKoSP7Uuu-c2npZSfn4oaCSctg.png" width="500" /&gt;</description>
      <pubDate>Mon, 04 Feb 2019 01:10:05 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/204</guid>
    </item>
    <item>
      <title>안드로이드 개발자 이직 면접 (지인) - 기술 면접</title>
      <link>https://brunch.co.kr/@@1OLd/195</link>
      <description>이직 면접 (지인) - 기술 면접  Activity 생명 주기 Activity, Fragment 차이 Activity 하위 호환성, 어떤 패키지에 있는지 View 생명 주기 onActivityResult linear / relative / constraint&amp;nbsp;layout 차이, 성능 비교 ListView / RecyclerView&amp;nbsp;차이 Service / I</description>
      <pubDate>Wed, 30 Jan 2019 03:20:05 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/195</guid>
    </item>
    <item>
      <title>Effective Java3/E - 람다와 스트림 - #42 익명 클래스보다는 람다를 사용하라</title>
      <link>https://brunch.co.kr/@@1OLd/203</link>
      <description>Effective Java 3/E&amp;nbsp;- 람다와 스트림  #42 익명 클래스보다는 람다를 사용하라   Java 8 이전에는&amp;nbsp;하나의 추상 메서드만 담은 인터페이스나 추상 클래스를&amp;nbsp;함수 타입이라 표현했습니다. 함수 타입을 인스턴스화 하면 함수 객체가 되고, 이를&amp;nbsp;익명 클래스를 통해서 구현할 수 있습니다.    Java 8에서는&amp;nbsp;하나의 추상 메서드만 담은 인터페이스&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FEIVdmUGSD5aVem33luhvc_zO-lw.png" width="500" /&gt;</description>
      <pubDate>Mon, 28 Jan 2019 00:44:32 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/203</guid>
    </item>
    <item>
      <title>Effective Java3/E - 제네릭 - #32 제네릭과 가변 인수를 함께 쓸 때는 신중하라</title>
      <link>https://brunch.co.kr/@@1OLd/202</link>
      <description>Effective Java 3/E&amp;nbsp;- 제네릭  #32 제네릭과 가변 인수를 함께 쓸 때는 신중하라   &amp;quot;제네릭과 가변 인수를 함께 쓸 때는 신중하라&amp;quot;는 결국 &amp;quot;제네릭과 가변 인수(배열)를 함께 쓸 때는 신중하라&amp;quot;라는 의미를 나타냅니다.  위 코드에서 보듯이, 자바에서는 기본적으로 제네릭 배열(T[]) 직접 생성을 허용하지 않습니다. Super 클래스 - S&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2F3VJexvDUSBhs-dyLeTzDrC_FjK8.png" width="500" /&gt;</description>
      <pubDate>Sun, 20 Jan 2019 23:58:10 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/202</guid>
    </item>
    <item>
      <title>Effective Java3/E - 클래스와 인터페이스 - #25 톱 레벨 클래스는 한 파일에 하나만 담으라</title>
      <link>https://brunch.co.kr/@@1OLd/201</link>
      <description>Effective Java 3/E&amp;nbsp;- 클래스와 인터페이스  #25 톱 레벨 클래스는 한 파일에 하나만 담으라   하나의 소스 파일에 톱 레벨 클래스를 여러 개 선언해도 컴파일에는 문제가 없습니다. 하지만 어느 소스 파일을 먼저 컴파일하냐에 따라서 예상하지 못한 결과가 발생하기도 합니다.  하나의 소스 파일에 하나의 톱 레벨 클래스만 써야 하는 이유에 대해 &lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FO89TvL7ojwo_CcmDgBEk7HJDFUQ.png" width="400" /&gt;</description>
      <pubDate>Mon, 14 Jan 2019 01:25:34 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/201</guid>
    </item>
    <item>
      <title>Effective Java3/E - 객체의 생성과 파괴 - #09 try-finally보다는 try-with-resouces를 사용</title>
      <link>https://brunch.co.kr/@@1OLd/200</link>
      <description>Effective Java 3/E&amp;nbsp;- 객체의 생성과 소멸  #09 try-finally 보다는 try-with-resource를 사용하라  Java 라이브러리에는 close 메서드를 호출해서 직접 닫아야 하는 InputStream, OutputStream&amp;nbsp;등이 있습니다.  try-finally 가 아닌, try-with-resource를 이용해서 닫는 방법</description>
      <pubDate>Mon, 07 Jan 2019 00:19:21 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/200</guid>
    </item>
    <item>
      <title>Slices - Android Jetpack Slices</title>
      <link>https://brunch.co.kr/@@1OLd/199</link>
      <description>Slices는&amp;nbsp;앱 외부에 앱 콘텐츠를 표시할 수 있는 유연한 UI 템플릿입니다. 즉, 사용자가 내 앱을 직접 실행하지 않아도 내 앱에서 제공하는 콘텐츠를 이용하는 것이 가능해집니다.  앱 외부 :&amp;nbsp;SliceView를 구현한 앱 (ex. Google Search, Google Assistant) or OS 앱 콘텐츠 : Anything 유연한 UI 템플릿 :&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FZwobYRgOiPdluEgI50Rro2_bAis.png" width="500" /&gt;</description>
      <pubDate>Thu, 03 Jan 2019 06:49:48 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/199</guid>
    </item>
    <item>
      <title>2018년 회고 - 브런치 두 번째 회고</title>
      <link>https://brunch.co.kr/@@1OLd/198</link>
      <description>2018년 회고 ​ 작년에 이어 두 번째 회고입니다. 별로 한 것 도 없는 거 같은데 1년이 금세 지나갔네요.​  https://brunch.co.kr/@oemilk/114 ​ ​ 2018년 목표    #01 토이 프로젝트   2018년을 시작함과 동시에 개인적으로 토이 프로젝트에 더 집중하고자 했었습니다. 결론은 더 집중하지 못했네요ㅠ (사실 거의 못했습&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2F_poY38DdMluCcGxoiVDDOtZJibI.png" width="500" /&gt;</description>
      <pubDate>Thu, 27 Dec 2018 04:51:02 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/198</guid>
    </item>
    <item>
      <title>Effective Java3/E - 객체의 생성과 파괴 - #05 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라</title>
      <link>https://brunch.co.kr/@@1OLd/197</link>
      <description>Effective Java 3/E&amp;nbsp;- 객체의 생성과 소멸  #05 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라  의존 객체 주입, 의존성 주입(Dependency Injection)을 말합니다. DI에 대해 알아보겠습니다.   #01. Non DI  예를 들어, 사전(dictionary)을 이용한 맞춤법 검사기(SpellChecker)를 구현한다면&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FFUM3yQcQ1PyKKv0l4jiSm1_38uU.png" width="500" /&gt;</description>
      <pubDate>Wed, 12 Dec 2018 00:29:02 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/197</guid>
    </item>
    <item>
      <title>DevFest Seoul 2018 후기 - DevFest Seoul 2018</title>
      <link>https://brunch.co.kr/@@1OLd/196</link>
      <description>https://devfest-seoul18.gdg.kr/  11월 10일 토요일에 GDG 커뮤니티에서 주최한 DevFest Seoul 2018 행사를 다녀왔습니다. 구글 기술과 관련된 세션, 해커톤, 코드 랩 등으로 구성된 행사였습니다.  2016년에 이어서 두 번째 참석이었습니다. (사실 2017년에 행사를 참석했는지 기억이 잘 안 나네요..ㅠ) http&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FWDAkrf7fc5yyRcsEO9b-squN27Q.PNG" width="500" /&gt;</description>
      <pubDate>Wed, 14 Nov 2018 02:50:13 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/196</guid>
    </item>
    <item>
      <title>직렬화(Serialization) - #78 직렬화된 인스턴스 대신 직렬화 프록시의 사용을 고려하자</title>
      <link>https://brunch.co.kr/@@1OLd/184</link>
      <description>Effective Java&amp;nbsp;- 직렬화(Serialization)  #78 직렬화된 인스턴스 대신 직렬화 프록시의 사용을 고려하자  이제까지 직렬화로 인해 발생할 수 있는 여러 가지 문제들과 이에 대한 방안에 대해 다뤘습니다. 이 책의 마지막이자 또 다른 방안으로 직렬화 프록시 패턴(serialization proxy pattern)이 있습니다. ​ 직렬화 &lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FJ5_VHZCHEUDXJ98NXar0GqYsLxY.PNG" width="500" /&gt;</description>
      <pubDate>Mon, 29 Oct 2018 00:59:52 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/184</guid>
    </item>
    <item>
      <title>직렬화(Serialization) - #77 인스턴스 제어에는 readResolve보다 enum타입을 사용하자</title>
      <link>https://brunch.co.kr/@@1OLd/183</link>
      <description>Effective Java&amp;nbsp;- 직렬화(Serialization)  #77 인스턴스 제어에는 readResolve 메서드보다 enum 타입을 사용하자  ​이 전에 싱글톤 클래스를 직렬화 하는 내용을 잠깐 다룬 적이 있었습니다. https://brunch.co.kr/@oemilk/118  싱글톤 클래스의 직렬화에 대해 알아보겠습니다.   ​#01 readRes&lt;img src= "https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F1OLd%2Fimage%2FHtnr0M3jhEXras_g7jO0TlT5usg.png" width="500" /&gt;</description>
      <pubDate>Tue, 23 Oct 2018 01:00:39 GMT</pubDate>
      <author>이승현</author>
      <guid>https://brunch.co.kr/@@1OLd/183</guid>
    </item>
  </channel>
</rss>
