<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>민수's 기술 블로그</title>
<link>https://alwayspr.tistory.com/</link>
<description></description>
<language>ko</language>
<pubDate>Sun, 12 May 2019 20:41:46 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>AlwaysPr</managingEditor>
<image>
<title>민수's 기술 블로그</title>
<url>http://cfile9.uf.tistory.com/image/2236483858EF1D681CC9D5</url>
<link>https://alwayspr.tistory.com</link>
<description></description>
</image>
<item>
<title>Spring Cache 구현 원리</title>
<link>https://alwayspr.tistory.com/42</link>
<description>&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Spring Cache 구현방식에 대해서 살펴보자. 최근 회사에서 spring-cache의&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Cacheable&lt;/code&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;을 사용하게되었다. 사용하다 보니 토비의 스프링에서 본&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;관심사의 분리&lt;/strong&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;와&amp;nbsp;&lt;/span&gt;&lt;strong style=&quot;font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;AOP&lt;/strong&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;와 겹쳐서 머릿속의 생각을 코드와 글로 써보려 한다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;글로 다 표현하기에는 한계가 있는 듯하니&amp;nbsp;&lt;a href=&quot;https://github.com/viviennes7/cache-demo&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Github source&lt;/a&gt;와 함께 보면 좀 더 도움이 될 것 같다. 그리고 Test code도 작성하였으니, 이걸통해서 Test를 하면 될 것 같다. (단, cache의 유무만 중요하기에 assert문은 작성하지 않고, log만 찍었다.)&lt;/p&gt;&lt;hr style=&quot;height: 4px; margin: 32px 0px; background-color: rgb(214, 214, 214); border: 0px none; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;요구사항은 다음과 같다. 나는 글로벌 게임을 만들고 있고, 유저들에게 웹사이트에서 랭킹을 보여주어야 한다. 단, 이용자는 100만명을 넘기때문에 모든 이용자를 Scan해서 순위를 실시간으로 보여주기에는 한계가 있기에 Cache를 이용해서 랭킹 서비스를 제공하려한다.&lt;/p&gt;&lt;p data-line=&quot;10&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;%EC%82%AC%EC%A0%84%EC%A4%80%EB%B9%84&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;사전준비&lt;/h2&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;의존성을 먼저 설정한다. 사용하는 의존성은 다음과 같다.&lt;/p&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Spring boot&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Spring cache&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Spring data jpa&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Spring data redis&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Spring boot web&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Embedded Redis&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;H2&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;pom.xml에 추가할 요소들은 위에서 언급한&amp;nbsp;&lt;a href=&quot;https://github.com/viviennes7/cache-demo&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Github source&lt;/a&gt;를 참고하자.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;랭킹을 보여주기위해서는 일단 사용자가 있어야한다. Spring boot 프로젝트 생성시 만들어주는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;*Application&lt;/code&gt;에 다음처럼 사용자 몇명을 추가하자.&lt;/p&gt;&lt;p data-line=&quot;24&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheDemoApplication&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CommandLineRunner&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheDemoApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheDemoApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;saveAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;minsoo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;wonwoo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;sonsang&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;toby&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;manbok&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;랭킹의 종류가 주, 월, 년 단위도 있기 때문에&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;enum&lt;/code&gt;을 추가한다.&lt;/p&gt;&lt;p data-line=&quot;55&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingType&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    ALL&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; YEAR&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; MONTH&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; WEEK&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;랭킹 Business를 제공해주는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;interface&lt;/code&gt;도 하나 만들자.&lt;/p&gt;&lt;p data-line=&quot;62&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//Redis에 저장할 prefix&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; RANKING_GETTING_KEY &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;ranking:get&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getRanking&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingType&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Redis가 이미 local에 깔려있으면 상관없겠지만, 그렇지 않으면 Embedded로 사용할 수 있게 아래의 config도 추가하자.&lt;/p&gt;&lt;p data-line=&quot;72&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;EmbeddedRedisConfig&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RedisServer&lt;/span&gt; redisServer&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@PostConstruct&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;redisServer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        redisServer &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RedisServer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;6379&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        redisServer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@PreDestroy&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;stopRedis&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;redisServer &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            redisServer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;93&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;business-%EA%B5%AC%ED%98%84&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Business 구현&lt;/h2&gt;&lt;p data-line=&quot;95&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h3 class=&quot;mume-header&quot; id=&quot;%EC%9E%85%EB%AC%B8%EC%9E%90-%EB%B0%A9%EC%8B%9D&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.5em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;입문자 방식&lt;/h3&gt;&lt;p data-line=&quot;96&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BeginnerRankingService&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Logger&lt;/span&gt; log &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ValueOperations&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; operations&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BeginnerRankingService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RedisTemplate&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;opsForValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getRanking&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingType&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; RANKING_GETTING_KEY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; cachedRankingList &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CollectionUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedRankingList&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;business logic execution&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; rankingList &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//                    .sorted() 랭킹을 정하는 로직이 있다고 가정&lt;/span&gt;
                    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rankingList&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;30L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;SECONDS&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; rankingList&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; cachedRankingList&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;getRanking()&lt;/code&gt;을 보자. 로직은 간단하다. Redis에 data를 간편하게 넣고 가져올 수 있는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ValueOperations&lt;/code&gt;를 통해서 캐시 데이터를 가져온 다음 존재하지않으면 로직을 수행하고, 존재하면 cache된 데이터를 반환한다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;그러나 이 코드의 문제점은 SRP를 위반한다. 자세히 말하자면&amp;nbsp;두가지 관심사(책임)를 가지고 있다.&lt;/p&gt;&lt;ol style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;랭킹순위를 매기는 로직&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Cache 하는 로직&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;즉 하나의 관심사 로직이 변하게되면 직접적으로 타 로직에게 영향을 준다. 적합한 예는 아니지만 해당 게임의 랭킹 로직이 유명해지면서&amp;nbsp;N사와 K사가 구입했다고 가정하자. 그런데 N사는 Cache 용도로 Redis를 사용하지만, K사는 Hazelcast를 사용한다. 이렇게 될 경우&amp;nbsp;두가지 버전의 랭킹서비스를 만들어서 각각 제공해줘야한다.&lt;/p&gt;&lt;p data-line=&quot;138&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h3 class=&quot;mume-header&quot; id=&quot;ioc&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.5em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;IoC&lt;/h3&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;위의 문제를 IoC를 이용해서 개선해보자. 코드는 다음과같다.&lt;/p&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Ranking business&lt;/li&gt;&lt;/ul&gt;&lt;p data-line=&quot;142&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BasicRankingService&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Logger&lt;/span&gt; log &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BasicRankingService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getRanking&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingType&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;business logic execution&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//              .sorted() 랭킹을 정하는 로직이 있다고 가정&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Cache&lt;/li&gt;&lt;/ul&gt;&lt;p data-line=&quot;164&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheRankingService&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ValueOperations&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; operations&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; rankingService&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheRankingService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RedisTemplate&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; basicRankingService&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;opsForValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rankingService &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; basicRankingService&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getRanking&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingType&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; RANKING_GETTING_KEY&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; cachedRankingList &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CollectionUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedRankingList&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; rankingList &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;rankingService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getRanking&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rankingList&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;30L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;TimeUnit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;SECONDS&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; rankingList&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; cachedRankingList&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;191&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h1 class=&quot;mume-header&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 2.25em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:461px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99C028365C9717BB18&quot; filemime=&quot;image/jpeg&quot; filename=&quot;cacheable proxy.png&quot; height=&quot;231&quot; width=&quot;461&quot;/&gt;&lt;/span&gt;&lt;/h1&gt;&lt;p style=&quot;margin-bottom: 16px; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif; color: rgb(51, 51, 51);&quot;&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BasicRankingService&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;CacheRankingService&lt;/code&gt;&amp;nbsp;두개의 클래스로 나뉘게 되었다. 그래서 각 클래스에 맞는 책임만을 가지고 있다. 이렇게 될 경우 Cache의 방식이 변하게되더라도 랭킹 business에는 영향이 없다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;책임은 잘 분리했으나 후에 랭킹 말고도 Cache를 하려면 모든 class에 위와 같은 행위를 해줘야한다. 즉 엄청 귀찮아진다. 혹자는 위의 이미지를&amp;nbsp;보고&amp;nbsp;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Proxy&lt;/strong&gt;라는 단어를 떠올렸을 것이다.&lt;/p&gt;&lt;p data-line=&quot;197&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h3 class=&quot;mume-header&quot; id=&quot;aop&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.5em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;AOP&lt;/h3&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Proxy를 하는 방법은 다양하게 있겠지만, 스프링에서는 횡단의 관심사를 AOP를 통하여 분리할 수 있다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Annotation을 통해서 AOP를 사용하겠다. Annotation을 먼저 만들자.&lt;/p&gt;&lt;p data-line=&quot;202&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;RUNTIME&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Target&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;METHOD&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Inherited&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Documented&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Cacheable&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@AliasFor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;cacheName&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@AliasFor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;그리고 Aspect를 만들자.&lt;/p&gt;&lt;p data-line=&quot;217&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Aspect&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheAspect&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ValueOperations&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; operations&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CacheAspect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RedisTemplate&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;opsForValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Around&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;@annotation(Cacheable)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ProceedingJoinPoint&lt;/span&gt; joinPoint&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Throwable&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; prefix &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getCacheName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;joinPoint&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; key &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;generateKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;joinPoint&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; cacheKey &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;%s:%s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; prefix&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Object&lt;/span&gt; cachedValue &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cacheKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;isNull&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cachedValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Object&lt;/span&gt; result &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; joinPoint&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;proceed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;operations&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cacheKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; cachedValue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getCacheName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ProceedingJoinPoint&lt;/span&gt; joinPoint&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MethodSignature&lt;/span&gt; signature &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MethodSignature&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; joinPoint&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getSignature&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Method&lt;/span&gt; method &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; signature&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Cacheable&lt;/span&gt; cacheable &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;AnnotationUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getAnnotation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Cacheable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; cacheable&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;generateKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ProceedingJoinPoint&lt;/span&gt; joinPoint&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;joinPoint&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getArgs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;args &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;hashCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;joining&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;:&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;260&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;AopRankingService&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Logger&lt;/span&gt; log &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;AopRankingService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberRepository&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Cacheable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;RANKING_GETTING_KEY&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getRanking&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RankingType&lt;/span&gt; type&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;business logic execution&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//              .sorted() 랭킹을 정하는 로직이 있다고 가정&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Collectors&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Cache를 하기위해 일일이 class를 만들 필요가 없어졌으며, 간단하게 annotation으로 해결이 가능하다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이전에 작성한 코드와 비슷하다. 단,&amp;nbsp;method의 정보들을 가져오는 부분과 파라미터들을 key로 만드는 로직이 추가되었을 뿐이다. key생성은 임의로 만들었으며 실제 Spring에서는 기본적으로&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;SimpleKeyGeneretor&lt;/code&gt;를 통해 생성한다.&lt;/p&gt;&lt;p data-line=&quot;283&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h3 class=&quot;mume-header&quot; id=&quot;spring&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.5em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Spring&lt;/h3&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;당연히 Spring에서도 위와 같은 AOP를 이용한 Cache 방식을 제공한다.&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@EnableCaching&lt;/code&gt;를 추가하고 몇몇 필요한 설정 후&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Cacheable&lt;/code&gt;을 이용하면 간단하게 Cache를 할 수 있다.&lt;br /&gt;이 부분에 대한 자세한 내용은 이미 다른 곳에 많이 있으므로 생략하겠다.&lt;/p&gt;&lt;hr style=&quot;height: 4px; margin: 32px 0px; background-color: rgb(214, 214, 214); border: 0px none; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;우리가 당연하게 사용하고 있는 것들이 Framework를 만든 사람들 입장에서는 당연한게 아닐 수도 있다. Spring에서 제공해주는 이런&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Cacheable&lt;/code&gt;이나&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Transactional&lt;/code&gt;은 단순히 우리를&amp;nbsp;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;편하게&lt;/strong&gt;&amp;nbsp;만들어주려는 의도 뿐만은 아닌것 같다. 그 내면에는 이런 책임을 분리하고 만약 변경이 일어나더라도 자기에게만 영향이 끼치게 하는 등의 다양한 Framework 및 그들의 철학이 반영된걸로 보인다.&lt;/p&gt;</description>
<category>Spring</category>
<author>AlwaysPr</author>
<guid>https://alwayspr.tistory.com/42</guid>
<comments>https://alwayspr.tistory.com/42#entry42comment</comments>
<pubDate>Sun, 24 Mar 2019 14:40:44 +0900</pubDate>
</item>
<item>
<title>Dubbo Spring Boot</title>
<link>https://alwayspr.tistory.com/41</link>
<description>&lt;h1 class=&quot;mume-header&quot; id=&quot;apache-dubbo&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 2.25em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Apache Dubbo&lt;/h1&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;고성능, 가벼운 Java 기반 오픈 소스 RPC 프레임워크&lt;/strong&gt;&lt;/p&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Interface 기반의 원격 호출(remote call)&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;fault tolerance, load balancing&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Service 자동 등록 및 감지 (Service Registry)&lt;/li&gt;&lt;/ul&gt;&lt;p data-line=&quot;6&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;rpc%EB%9E%80&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;RPC란?&lt;/h2&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;Remote Procedure Call&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;외부 서비스를 함수나 메소드를 통해 호출하는 형태&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;부가설명&lt;/strong&gt;&lt;br /&gt;분산서비스시 외부 서비스는 주로 HTTP를 통해 호출을 한다. 그리고 Application 레벨에서 header, body를 조작한다. 그러나 RPC는 마치 메소드를 호출하듯이 외부 서비스를 사용할 수 있는 간편함을 가지고 있다.&lt;/p&gt;&lt;p data-line=&quot;13&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;img src=&quot;https://dubbo.incubator.apache.org/img/architecture.png&quot; alt=&quot;img&quot; style=&quot;max-width: 100%; max-height: 100%;&quot;&gt;&lt;/p&gt;&lt;p data-line=&quot;14&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;hr style=&quot;height: 4px; margin: 32px 0px; background-color: rgb(214, 214, 214); border: 0px none; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;백문이 불여일타! 직접 코드를 작성해보자.&lt;br /&gt;필자는 Spring boot와 편의상 maven 멀티모듈 구조를 통해서 코드를 작성하겠다. 구조는 아래와 같다.&lt;/p&gt;&lt;p data-line=&quot;19&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;&quot; class=&quot;language-&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background: transparent; border-radius: 3px; padding: 0px; margin: 0px; word-break: normal; border: 0px; display: inline; max-width: initial; overflow: initial; line-height: inherit; overflow-wrap: normal; font-size: 0.85em !important;&quot;&gt;Root
  - provider
  - consumer
&lt;/code&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;또한 spring boot starter도 제공하기 때문에 더욱이 간단히 쓸 수 있다. 모든 코드가 다 작성된것이 아니기 때문에&amp;nbsp;&lt;a href=&quot;https://github.com/viviennes7/dubbo-spring-boot-demo&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Github&lt;/a&gt;의 코드와 같이 보면 좀 더 이해하기 쉬울 것 같다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;다음과 같은 분산시스템 흐름으로 만들어보자. 인터넷쇼핑에서 물건을 구입한다. 배송을 보내야하기 때문에 주소를 가진 회원정보를 가져와야한다. 물론 이외에도 많이 있겠지만 생략하겠다.&lt;/p&gt;&lt;ol style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;고객이 물건을 구입&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;consumer에서 provider로 유저정보 조회&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;이후 작업&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;공통 Dependency&lt;/strong&gt;&amp;nbsp;- 필자는 부모 pom.xml에 설정을 하였다.&lt;/p&gt;&lt;p data-line=&quot;32&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;xml&quot; class=&quot;language-xml&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;properties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dubbo.version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;2.7.0&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dubbo.version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;properties&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.apache.dubbo&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;dubbo-spring-boot-starter&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;${dubbo.version}&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.apache.dubbo&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;dubbo&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;${dubbo.version}&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;52&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;provider&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Provider&lt;/h2&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;누군가에게 특정 기능을 제공한다. 예를 들면 해당 Provider의 서비스가 회원과 관련된 서비스일 때 누군가 회원의 id로 조회를 하고싶으면 이 Provider를 이용하면 된다. 좀 더 쉽게말하면 Provider가 제공해주는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;interface&lt;/code&gt;를 단순히 호출하면 된다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;먼저, Dependency부터 설정하자.&lt;/p&gt;&lt;p data-line=&quot;56&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;xml&quot; class=&quot;language-xml&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;spring-boot-starter-data-jpa&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;com.h2database&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;h2&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;scope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;runtime&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;scope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;DB에서 회원정보를 조회해야 하기때문에 인메모리 DB인 h2와 JPA를 설정하였다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;다음은&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;application.properties&lt;/code&gt;에서 간단히 dubbo를 setting 하자.&lt;/p&gt;&lt;p data-line=&quot;73&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;properties&quot; class=&quot;language-properties&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;# Spring boot application&lt;/span&gt;
&lt;span class=&quot;token attr-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;spring.application.name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token attr-value&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;dubbo-provider-demo&lt;/span&gt;

&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;# Dubbo Application&lt;/span&gt;
&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;## dubbo.application.name=${spring.application.name}&lt;/span&gt;
&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;# Dubbo Protocol&lt;/span&gt;
&lt;span class=&quot;token attr-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;dubbo.protocol.name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token attr-value&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;dubbo&lt;/span&gt;
&lt;span class=&quot;token attr-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;dubbo.protocol.port&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token attr-value&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;12345&lt;/span&gt;
&lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;## Dubbo Registry&lt;/span&gt;
&lt;span class=&quot;token attr-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;dubbo.registry.address&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token attr-value&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;N/A&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;dubbo.application.name&lt;/code&gt;은 dubbo를 적용하려면 꼭 필요한 설정이다. 그러나&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;spring.application.name&lt;/code&gt;이 있으면 이것을 default로 자동 설정하니 상황에 맞게하자. 필자는 그냥&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;spring.application.name&lt;/code&gt;만 추가하였다.&lt;br /&gt;그리고 protocol로 사용할 name, port를 설정한다. consumer는 이 정보를 통해 연결한다.&lt;br /&gt;registry는 zookeeper같은 Service Registry를 의미한다. 본문에서는 다루지않으니 필요하다면&amp;nbsp;&lt;a href=&quot;https://github.com/apache/incubator-dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;여기&lt;/a&gt;를 참고하자.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이제는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ProviderApplication&lt;/code&gt;&amp;nbsp;class로 가보자.&lt;/p&gt;&lt;p data-line=&quot;90&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@DubboComponentScan&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ProviderApplication&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CommandLineRunner&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; MemberRepository memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ProviderApplication&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;MemberRepository memberRepository&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;String&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        SpringApplication&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ProviderApplication&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;String&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; Exception &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;minsoo&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;27&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;강남구&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;LocalDateTime&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;먼저 눈에 띄는 것은&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@DubboComponentScan&lt;/code&gt;이다. Spring의 ComponentScan 처럼 Dubbo도 객체들을 Scan하는 과정이 필요하기 때문에 꼭 작성해주어야하며, annotation의 value를 이용하여 특정 package를 선택할 수도 있다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;그외에는 Test를 위해 DB에 data를 insert하는 로직이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;다음은 consumer에서 provider를 사용하기 위한 수단으로서 interface를 제공해줘야한다.&lt;/p&gt;&lt;p data-line=&quot;117&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    Member &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getMember&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Long id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;123&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;import&lt;/span&gt; org&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;springframework&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stereotype&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Service&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@Service&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@org&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;apache&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dubbo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;annotation&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Service
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberServiceImpl&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; MemberRepository memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberServiceImpl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;MemberRepository memberRepository&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; memberRepository&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; Member &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getMember&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Long id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberRepository&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;orElseThrow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;NotFoundMember&lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;NotFoundMember&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;RuntimeException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;첫번째&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Service&lt;/code&gt;는 스프링 빈을 등록하는데 쓰이는 Annotation이다. 두번째&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Service&lt;/code&gt;는 dubbo로 사용할 객체를 등록하는 Annotation이다. 두개의 이름이 똑같아서 불편함이 있긴한데, 두 Annotation을 상속받는 Custom Annotation을 하나 만들어서 사용하면 좀 더 간편할 것 같다.&lt;/p&gt;&lt;p data-line=&quot;149&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Serializable&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;long&lt;/span&gt; serialVersionUID &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;1&lt;/span&gt;L&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@GeneratedValue&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; Long id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; String name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; Integer age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; String addr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; LocalDateTime createDate&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//getter, setter 등 생략&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;dubbo를 통해서 객체를 주고받을때 주의해야할 점은&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;Serializable&lt;/code&gt;을 구현하고있어야만 데이터가 이동할 수 있다. 만약에 그러지 않으면 런타임에러를 내뱉는다. 그로 인해&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;Optional&lt;/code&gt;&amp;nbsp;같은 객체는 전달할 수는 없다.&lt;/p&gt;&lt;p data-line=&quot;173&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;consumer&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Consumer&lt;/h2&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;consumer은 provider에서 제공하는 서비스들을 사용한다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이것도 Dependency 부터 살펴보자.&lt;/p&gt;&lt;p data-line=&quot;178&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;xml&quot; class=&quot;language-xml&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;spring-boot-starter-web&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;com.ms&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;provider&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;0.0.1-SNAPSHOT&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;scope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;compile&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;scope&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot; style=&quot;color: rgb(99, 163, 92);&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;/&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;spring mvc를 사용하기위해&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;spring-boot-starter-web&lt;/code&gt;를 받았고, provider가 제공해주는 interface를 사용하기위해 provider 또한 디펜던시를 설정했다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;application.properties&lt;/code&gt;에서 다음을 설정하자.&lt;/p&gt;&lt;p data-line=&quot;197&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;properties&quot; class=&quot;language-properties&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token attr-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;spring.application.name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token attr-value&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;dubbo-consumer-demo&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;consumer도 역시 name을 설정해줘야한다.&lt;/p&gt;&lt;p data-line=&quot;202&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; overflow-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;/orders&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;OrderController&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; Logger logger &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; LoggerFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Reference&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;dubbo://127.0.0.1:12345&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; MemberService memberService&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token annotation punctuation&quot;&gt;@PostMapping&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@RequestBody&lt;/span&gt; OrderRequest request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; Member member &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memberService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getMember&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;getMemberId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;result ::: {}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//...&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;success&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;여기서 눈여겨 볼것은&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Reference&lt;/code&gt;이다. 이것을 스프링의&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;@Autowired&lt;/code&gt;로 쉽게 생각하면된다. URL정보를 토대로 provider와 통신을 한다. 이 url은 provider에서 작성한&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;dubbo.protocol.name&lt;/code&gt;, ip,&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;dubbo.protocol.port&lt;/code&gt;&amp;nbsp;이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;또한 그 아래&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService&lt;/code&gt;는 provider에서 제공해주는 interface이다. consumer에는 이&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService&lt;/code&gt;&amp;nbsp;interface를 구현한 객체가 없으며, 구현한 객체는 provider에 있는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberServiceImpl&lt;/code&gt;이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;원격호출을 마치 local에 있는 메소드를 호출하는 것처럼 사용하니 참 간편하지 않은가?&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이 처럼 직접적으로 호출을 할 수도 있고,&amp;nbsp;&lt;a href=&quot;https://zookeeper.apache.org/&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Apache ZooKeeper&lt;/a&gt;나&amp;nbsp;&lt;a href=&quot;https://nacos.io/en-us/&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Nacos&lt;/a&gt;의 Service Registry 기능을 통하여 간접적으로도 호출이 가능하다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;단, spring boot dubbo의 주의할 점은 아직 정식 Release되지 않은 Incubator 라는 점이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;참고자료&lt;/p&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;&lt;a href=&quot;https://dubbo.incubator.apache.org/en-us/&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Dubbo&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;&lt;a href=&quot;https://github.com/apache/incubator-dubbo-spring-boot-project&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;GitHub - apache/incubator-dubbo-spring-boot-project&lt;/a&gt;&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;&lt;a href=&quot;https://github.com/apache/incubator-dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples&quot; style=&quot;color: rgb(0, 136, 204);&quot;&gt;Dubbo Sample code&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Spring</category>
<author>AlwaysPr</author>
<guid>https://alwayspr.tistory.com/41</guid>
<comments>https://alwayspr.tistory.com/41#entry41comment</comments>
<pubDate>Sun, 17 Mar 2019 13:02:57 +0900</pubDate>
</item>
<item>
<title>BigDecimal의 toString(), toPlainString(), toEngineeringString()</title>
<link>https://alwayspr.tistory.com/39</link>
<description>&lt;h1 class=&quot;mume-header&quot; id=&quot;bigdecimal&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 2.25em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;BigDecimal&lt;/h1&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;먼저&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;에 대해서 간단히 알아보도록 하자.&lt;br /&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;은 큰 수를 표현하거나 부동소수점을 해결할 수 있는 클래스이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;거두절미하고 코드를 보자.&lt;/p&gt;&lt;p data-line=&quot;7&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;primitive&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot; style=&quot;color: rgb(0, 134, 179);&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;위 코드에서는 무엇이 출력이 될까?&lt;br /&gt;0.9가 나오길 기대하겠지만, 위코드는 0.8999999999999999 라는 이상한 값을 반환한다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;자바 기본서를 보던 옛날로 돌아가보자. 우리는&amp;nbsp;첫장에서 primitive type들에 대해서 공부를 했을 것이다. 그리고 각각의 type은 고유의 bit 크기를 가지고 있다.&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;double&lt;/code&gt;같은 경우에는 32bit이고 이는 4.94065645841246544E-324 ~ 1.79769313486231570E+308를 표현할 수 있다고 한다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;어마어마한 크기긴 하지만 저걸로는 만족되지 않기도 하다.&lt;br /&gt;이유는 0과 1사이에는 얼만큼의 숫자가 있을까? 아는 것처럼 무한한 숫자가 존재한다.&lt;br /&gt;32bit로는 이 수를 다 표현을 못하기 때문에 컴퓨터는 표현이 안되는 숫자는 근사값을 제공해준다. 방금 보았던 코드처럼 말이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이 문제는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;을 이용하면 간단하게 해결할 수 있다.&lt;/p&gt;&lt;p data-line=&quot;27&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;bigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;1.1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;해당 수를&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;로 변경하여 메소드를 통해 연산을 하는 것이다.&lt;br /&gt;이번에는 기대하는 것처럼 0.9라는 값을 얻을 수 있다.&lt;br /&gt;서비스 개발 중 실수 단위의 돈을 다루는 로직이 있다면 필히&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;을 고려하자.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;추가적으로&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;의 생성자로 일반적인 수를 넣을 수도 있지만, 지수를 이용해서 수를 넣을 수도 있다. 예를 들면&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;new BigDecimal(&quot;2.564E6&quot;)&lt;/code&gt;&amp;nbsp;처럼 말이다. E와 뒤의 숫자는 10의 지수를 표현한다. 그래서 위의 수는 2564000과 같다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;BigDecimal&lt;/code&gt;을&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;String&lt;/code&gt;으로 표현하는 몇가지 방법을 알아보자.&lt;/p&gt;&lt;p data-line=&quot;42&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;tostring&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;toString()&lt;/h2&gt;&lt;div&gt;생성자로 전달받은 값 그대로&amp;nbsp;반환한다.&lt;/div&gt;&lt;p data-line=&quot;44&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;tostring&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2564000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2.564E6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;2564000&lt;br /&gt;2.564E+6&lt;/p&gt;&lt;p data-line=&quot;55&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;toplainstring&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;toPlainString()&lt;/h2&gt;&lt;div&gt;생성자로 전달받은 값을 지수 표현없이 반환한다.&lt;/div&gt;&lt;p data-line=&quot;56&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toPlainString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2564000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toPlainString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2.564E6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toPlainString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;2564000&lt;br /&gt;2564000&lt;/p&gt;&lt;p data-line=&quot;67&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;toengineeringstring&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;toEngineeringString()&lt;/h2&gt;&lt;div&gt;생성자로 전달받은 값 중 지수 표현이&amp;nbsp;있으면 지수로 반환한다.&lt;/div&gt;&lt;p data-line=&quot;69&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toEngineeringString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2564000&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toEngineeringString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    System&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;out&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;BigDecimal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot; style=&quot;color: rgb(24, 54, 145);&quot;&gt;&quot;2.564E6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;toEngineeringString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;2564000&lt;br /&gt;2.564E+6&lt;/p&gt;</description>
<category>Java</category>
<author>AlwaysPr</author>
<guid>https://alwayspr.tistory.com/39</guid>
<comments>https://alwayspr.tistory.com/39#entry39comment</comments>
<pubDate>Tue, 11 Sep 2018 22:40:10 +0900</pubDate>
</item>
<item>
<title>IoC (DI, Service Locator...)</title>
<link>https://alwayspr.tistory.com/38</link>
<description>&lt;h1 class=&quot;mume-header&quot; id=&quot;ioc&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 2.25em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;IoC&lt;/h1&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Inverse of Control&lt;/strong&gt;는 제어권을 개발자가 아닌 제 3자(프레임워크)가 가지게 하는 것이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;그렇다면 우리는 왜 제어권을 3자에게 위임해야 하는가?&lt;/strong&gt;&lt;br /&gt;이에 대한 답을 찾기전에 과거로 돌아가보자. 과거 많은 형태의 오픈소스들이 나오고 있었고, 이들의 공통적인 이슈는 서로 다른 객체를 어떻게 연결할 것인지에 대한 문제였다. 이를 해결할 한 가지 방법으로 IoC가 제시되었다.&lt;br /&gt;즉, IoC의 주된 목적은 Application의 Dependency를 제거해서 느슨한 결합을 제공하는 것이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;그럼 Dependency란 무엇일까?&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote style=&quot;background: var(--vscode-textBlockQuote-background); border-left-width: 4px; border-left-color: rgb(214, 214, 214); margin: 0px 0px 16px; padding-top: 0px; padding-bottom: 0px; color: rgb(92, 92, 92); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;p&gt;Dependency (computer science) or coupling, a state in which one object uses a function of another object - Wiki&lt;/p&gt;&lt;/blockquote&gt;&lt;ul style=&quot;padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;코드에서 두 모듈 간의 연결.&lt;/li&gt;&lt;li style=&quot;margin-bottom: 0px;&quot;&gt;객체지향언어에서는 두 클래스 간의 관계&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;간단한 코드를 작성해보자.&lt;/p&gt;&lt;p data-line=&quot;15&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ObjectMapper objectMapper&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Member member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; JsonProcessingException &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; objectMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;위 코드는 Jackson 라이브러리의&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ObjectMapper&lt;/code&gt;를 이용하여 특정 객체를 Json String으로 변환작업을 하는 로직이다.&lt;br /&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService&lt;/code&gt;는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ObjectMapper&lt;/code&gt;의 기능을 사용하고 있기 때문에 의존하고 있다고 할 수 있다.&lt;br /&gt;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ObjectMapper.writeValueAsString()&lt;/code&gt;의 구현부가 변하게 되면&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService.parseString()&lt;/code&gt;&amp;nbsp;또한 변하게 된다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;비슷한 개념인&amp;nbsp;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Coupling&lt;/strong&gt;이 있다 Coupling이란 모듈간의 결합도 및 상호의존성의 정도를 말한다.&lt;/p&gt;&lt;p data-line=&quot;29&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/Coupling_sketches_cropped_1.svg/600px-Coupling_sketches_cropped_1.svg.png&quot; alt=&quot;결합도&quot; style=&quot;max-width: 100%; max-height: 100%;&quot;&gt;&lt;/p&gt;&lt;p data-line=&quot;30&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;위의&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService&lt;/code&gt;는 클래스간의 강하게 결합을 하고 있다.&lt;br /&gt;왜냐하면 몇몇은 JSON 변환 작업을&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ObjectMapper&lt;/code&gt;를 사용해서 그대로 재사용하면 되지만 다른 몇몇은&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;Gson&lt;/code&gt;을 사용하기 때문에 코드에 전반적인 수정이 필요하다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이러한 강한 결합을&amp;nbsp;&lt;strong style=&quot;color: rgb(0, 0, 0);&quot;&gt;Interface&lt;/strong&gt;의 도움을 받아 느슨하게 할 수 있다.&lt;/p&gt;&lt;p data-line=&quot;37&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;JsonParser&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token generics function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; T &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;String s&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Class&lt;span class=&quot;token generics function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; clazz&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token generics function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;lt;&lt;/span&gt;T&lt;span class=&quot;token punctuation&quot; style=&quot;color: rgb(51, 51, 51);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; String &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;T obj&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;44&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;JsonParser jsonParser&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Member member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;jsonParser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이전 코드에서는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService&lt;/code&gt;&amp;nbsp;클래스안에&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ObjectMapper&lt;/code&gt;가 직접적으로 들어가있었지만, 이번 코드에서는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;MemberService&lt;/code&gt;는 Interface인&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;JsonParser&lt;/code&gt;만을 알고 있다. 이로 인해 사용자는 원하는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;JsonParser&lt;/code&gt;&amp;nbsp;구현체를 입맛에 맞게 사용할 수 있다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;또 다른 사례를 알아보자.&lt;/p&gt;&lt;p data-line=&quot;56&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CalendarReader&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; List &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;readCalendarEvents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;File calendarEventFile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//open InputStream from File and read calendar events.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;위의 코드는 XML Local file을 통해서 이벤트 목록을 읽어오는 메소드다. 본인만 쓴다면 문제가 없겠지만, 이 소스를 다수의 사람들이 사용을 해야한다. 그런데 그들 중 일부는 XML을 통해 이벤트를 관리하지만, 다른 몇몇은 DB, Network 등을 통해서 관리를 한다. 즉, 다른 리소스로 관리를 하는 사람은 해당코드를 재사용할 수가 없게 된다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이를 좀 더 포괄적인&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;InputStream&lt;/code&gt;을 사용하면서 결합을 좀 더 느슨하게 유도 할 수 있다.&lt;/p&gt;&lt;p data-line=&quot;66&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;CalendarReader&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; List &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;readCalendarEvents&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;InputStream calendarEventFile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot; style=&quot;color: rgb(150, 152, 150);&quot;&gt;//read calendar events from InputStream&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;이렇듯 느슨한 결합을 통하여 클래스의 재사용성을 높일 수 있다. 또한 재사용성을 높인 다는 말은 비슷한류의 중복코드가 제거될 수 있음을 의미하기도 한다.&lt;/p&gt;&lt;hr style=&quot;height: 4px; margin: 32px 0px; background-color: rgb(214, 214, 214); border: 0px none; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;자! 다시 처음으로 돌아가보자. IoC의 주된 목적은 Application의 Dependency를 제거하는 것이라고 하였다. IoC 방식에는 아래 사진외에도 여러가지가 있다 그러나 우리는 몇가지 핵심적인 방식들을 살펴보도록 하자.&lt;br /&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-2JkcEGnJVrY/UZCDAoPjk8I/AAAAAAAAEgQ/ilz1zM5fc78/s1600/3rd+image.jpg&quot; alt=&quot;사진&quot; style=&quot;max-width: 100%; max-height: 100%;&quot;&gt;&lt;/p&gt;&lt;p data-line=&quot;81&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;h2 class=&quot;mume-header&quot; id=&quot;dependency-injection&quot; style=&quot;line-height: 1.2; margin-top: 1em; margin-bottom: 16px; font-size: 1.75em; padding-bottom: 0.3em; font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;Dependency Injection&lt;/h2&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;IoC 방식 중 가장 대표적인 방식으로 보인다. Interface의 느슨한 결합을 이용하여 Compile 시점에서 Dependency를 가지지 않고, Runtime 시점으로 미룰 수 있다.&lt;br /&gt;이를 좀 더 쉽게 표현하자면, 코드상에서 구현체가 존재하지 않고 단지 Inteface만 존재한다. 이로 인해 구현부가 변경되더라도 해당 코드를 수정하는 것이 아닌 Dependency만 변경해 주면된다. 거두절미하고 코드를 살펴보자.&lt;/p&gt;&lt;p data-line=&quot;85&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;Member&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; String name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;int&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; String address&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p data-line=&quot;93&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; ObjectMapper objectMapper &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Member member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; JsonProcessingException &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;objectMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; Member &lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;parseObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;String member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; IOException &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;objectMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;member&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Member&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;위의 코드는&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;Member&lt;/code&gt;&amp;nbsp;객체를 JSON 형태의&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;String&lt;/code&gt;으로, JSON형태의&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;String&lt;/code&gt;을&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;Member&lt;/code&gt;객체로 변환하는 코드이다.&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 16px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;그런데 특정한 이슈(Library 지원 종료, 속도 문제, 회사 정책 등)로 인하여 JSON 변환 Library 인&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;ObjectMapper&lt;/code&gt;를&amp;nbsp;&lt;code style=&quot;color: rgb(0, 0, 0); font-family: Menlo, Monaco, Consolas, &amp;quot;Courier New&amp;quot;, monospace; background-color: rgb(240, 240, 240); border-radius: 3px; padding: 0.2em 0px; font-size: 0.85em !important;&quot;&gt;Gson&lt;/code&gt;이나 다른 라이브러리로 교체하고 싶으면 어떻게 될까?&lt;/p&gt;&lt;p data-line=&quot;110&quot; class=&quot;sync-line&quot; style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;Segoe UI&amp;quot;, Arial, freesans, sans-serif;&quot;&gt;&lt;/p&gt;&lt;pre data-role=&quot;codeBlock&quot; data-info=&quot;java&quot; class=&quot;language-java&quot; style=&quot;padding: 0.8em; overflow: auto; line-height: 1.4; border: rgb(214, 214, 214); border-radius: 3px; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); background: rgb(245, 245, 245); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; word-break: normal; word-wrap: normal; tab-size: 8; hyphens: none; font-size: 0.85em !important;&quot;&gt;&lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot; style=&quot;color: rgb(121, 93, 163);&quot;&gt;MemberService&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;final&lt;/span&gt; Gson gson &lt;span class=&quot;token operator&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot; style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/spa