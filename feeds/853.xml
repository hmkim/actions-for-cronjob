<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data sculptor</title>
    <description>Finding meaning under the data.</description>
    <link>http://byeongkijeong.github.io/</link>
    <atom:link href="http://byeongkijeong.github.io//feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Word2vec from scratch using keras</title>
        <description>
          
          본 글에서는 Word2vec의 개녑을 간단히 알아보고, Keras 등을 이용하여 구현해보도록 하겠습니다. (그림은 없습니다…꾸준히 정성들여 그림 수식 다 넣어서 포스팅하시는분들 진짜 존경…) Word2vec? 이제는 학계에서 모르는 사람이 없을 정도로 식상해져 버린 단어기도 하고 Gensim, SpaCy 등 수많은 관련 패키지들이 나와있는 단어입니다, Word2Vec. Bengio교수님이 NNLM(Neural network language model)로 제시한 모형을 구글의(지금은 페이스북으로...
        </description>
        <pubDate>Wed, 10 Oct 2018 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Word2vec-from-scratch-using-keras/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Word2vec-from-scratch-using-keras/</guid>
      </item>
    
      <item>
        <title>Nearly everything of information theory</title>
        <description>
          
          그동안 대략적으로 느낌만 알고 있던 정보이론에 대해서, 공부하고 정리할 일이 생겼는데 생각보다 재밌는 개념이고 정리도 잘 된것 같아서 만든 ppt를 그대로 이미지로 첨부합니다. 특히, 정보이론에 대한 설명을 베이지안으로 시작하는 경우는 아직 못보았는데 책 불멸의 이론의 영향을 받아서 베이지안으로 시작해보았습니다. 정보이론은 정보통신에서 시작한 개념이라 소스코딩등으로 시작하는 경우가 많은데, 저는 그쪽 전공자가...
        </description>
        <pubDate>Sat, 28 Jul 2018 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//information-theory/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//information-theory/</guid>
      </item>
    
      <item>
        <title>A introduction of fastText</title>
        <description>
          
          이번 글에서는 2017년쯤 핫했던(걸로 기억되는) fastText와 그 사용법에 대해서 정리한다. fastText fastText의 기원으로 꼽히는 논문은 2016년 7월경에 공개된 Facebook AI Research의 Enriching Word Vectors with Subword Information이며, 완성은 Advances in Pre-Training Distributed Word Representations로 본다. Word2vec을 제안한 T. Mikolov가 저자로 들어있으며 세줄로 요약하면 다음과 같다. Word embedding (Distributed vector represenatation...
        </description>
        <pubDate>Mon, 18 Jun 2018 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//fastText/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//fastText/</guid>
      </item>
    
      <item>
        <title>Dimension reduction with sci-kit learn</title>
        <description>
          
          2018 Spring Data Analytics @Dept. of Industrial engineering Dimension reduction Contents Principal component analysis (PCA) Truncated singular value decomposition and latent semantic analysis Non-negative matrix factorization (NMF or NNMF) Latent Dirichlet Allocation (LDA) Another dimension reduction method for Visualization Used library Sci-kit learn: Machine learning을 Python에서 손쉽게 이용할 수 있도록...
        </description>
        <pubDate>Fri, 13 Apr 2018 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Dimensionreduction/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Dimensionreduction/</guid>
      </item>
    
      <item>
        <title>An introduction to textmining with python</title>
        <description>
          
          2018 Spring Data Analytics @Dept. of Industrial engineering Text mining Contents TF Document similarity Bigram TF TF-IDF Generalized VSM Network drawing Regex RAKE KoNLPy IBM Watson NLU Used library Sci-kit learn: Machine learning을 Python에서 손쉽게 이용할 수 있도록 작성된 라이브러리, 전처리/모형구축/평가 등 전 과정에 관련한 모듈등이 구축되어 있음 (http://scikit-learn.org) Matplotlib:...
        </description>
        <pubDate>Wed, 11 Apr 2018 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Textmining-with-python/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Textmining-with-python/</guid>
      </item>
    
      <item>
        <title>ARIMA, Python으로 하는 시계열분석 (feat. 비트코인 가격예측)</title>
        <description>
          
          서론 시계열 분석(Time series analysis)이란, 독립변수(Independent variable)를 이용하여 종속변수(Dependent variable)를 예측하는 일반적인 기계학습 방법론에 대하여 시간을 독립변수로 사용한다는 특징이 있다. 독립변수로 시간을 사용하는 특성때문에 분석에 있어서 일반적인 방법론들과는 다른 몇가지 고려가 필요하다. 본 포스트에서는 시계열 분석(혹은 예측)에 있어서 가장 널리 사용되는 모델중 하나인 ARIMA에 대해 알아보고 Python을 통해 구현해본다. 본...
        </description>
        <pubDate>Mon, 04 Dec 2017 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//ARIMA-with-Python/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//ARIMA-with-Python/</guid>
      </item>
    
      <item>
        <title>Install pytorch on Windows</title>
        <description>
          
          Pytorch Lua언어로 된 딥러닝 프레임워크인 Torch를 페이스북에서 Pythonic하게 만들어서 배포하는 파이썬용 딥러닝 프레임워크 Pytoorch official site 포스팅 이유 파이토치가 리눅스, 맥만 지원한다… 나는 윈도우 쓰는데…! Tensorflow나 CNTK가 윈도우를 지원하지만, 파이토치가 그렇게 쉽다던데… 해서 찾아보니 설치방법이 의외로 간단하다. 윈도우에서 설치하는 방법 나는 기존에 Anaconda를 이용하고 있다. 아마 윈도우에서 파이썬이용자 분들의 대다수는...
        </description>
        <pubDate>Mon, 06 Nov 2017 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Install-pytorch-on-Windows/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Install-pytorch-on-Windows/</guid>
      </item>
    
      <item>
        <title>Image denoising with Autoencoder in Keras</title>
        <description>
          
          본 글은 building-autoencoders-in-keras의 내용을 참고하여 작성되었습니다. 그림보다는 글과 코드 중심으로 작성되었으며, 최대한 상세하게 서술하겠지만 그림이 없어서 이해하기 어려울 수 있습니다. Autoencoder란? Autoencoder는 비지도학습 알고리즘 중의 하나로, 인풋데이터를 학습하여 최대한 인풋데이터와 비슷한 아웃풋을 내는 것을 목표로 하는 신경망입니다. 간단하게 과정을 설명하자면 아래와 같이 설명할 수 있습니다. X -&amp;gt; Encoding -&amp;gt; Decoding...
        </description>
        <pubDate>Fri, 03 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Keras-Autoencoder/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Keras-Autoencoder/</guid>
      </item>
    
      <item>
        <title>Keras CNN tutorial</title>
        <description>
          
          본 글은 Keras-tutorial-deep-learning-in-python의 내용을 제 상황에 맞게 수정하면서 CNN(Convolution neural network)을 만들어보는 예제이며, CNN의 기본데이터라 할 수 있는 MNIST(흑백 손글씨 숫자인식 데이터)를 이용할 것입니다. 저도 Keras는 처음이고 하니, 시행착오가 있더라도 그대로 서술하겠습니다. 그리고 Markdown의 사용이 익숙치 않아서 사진보다는 글이나 코드가 많습니다…이점 양해 부탁드립니다 ㅠㅠ 우선 상단에 링크된 글의 목차는 다음과...
        </description>
        <pubDate>Tue, 28 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Keras-cnn-tutorial/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Keras-cnn-tutorial/</guid>
      </item>
    
      <item>
        <title>Keras instruction</title>
        <description>
          
          Keras는 Theano와 Tensorflow를 기반으로 하는 고수준API(High-level API)입니다. 물론 딥러닝의 알고리즘을 연구하시는 분들 께서는 C, C++ 등을 이용하여 직접 구현하시거나 Caffe, Tensorflow, Touch 등의 프레임워크를 이용하여 개발하실 것 입니다. 그러나 저는 알고리즘을 하는 사람이 아닌, 기존 알고리즘의 응용을 목적으로 하는 사람으로써,Keras를 선택했습니다. 그러나 Keras의 자료가 부족한 현실탓에 당분간 https://elitedatascience.com/keras-tutorial-deep-learning-in-python의 내용을따라 Keras를...
        </description>
        <pubDate>Mon, 27 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://byeongkijeong.github.io//Keras-instruction/</link>
        <guid isPermaLink="true">http://byeongkijeong.github.io//Keras-instruction/</guid>
      </item>
    
  </channel>
</rss>
