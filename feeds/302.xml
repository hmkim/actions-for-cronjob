<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
>

<channel>
	<title>amati.io</title>
	<atom:link href="https://amati.io/feed/" rel="self" type="application/rss+xml" />
	<link>https://amati.io</link>
	<description>그래도 프론트엔드 개발...</description>
	<lastBuildDate>Wed, 17 Apr 2019 12:54:40 +0000</lastBuildDate>
	<language>ko-KR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.2</generator>
<site xmlns="com-wordpress:feed-additions:1">160217699</site>	<item>
		<title>VS CODE extension for FE</title>
		<link>https://amati.io/2019/04/25/vs-code-extension-for-fe/</link>
				<comments>https://amati.io/2019/04/25/vs-code-extension-for-fe/#respond</comments>
				<pubDate>Thu, 25 Apr 2019 14:51:08 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[Frontend 개발 이야기]]></category>
		<category><![CDATA[extension]]></category>
		<category><![CDATA[vscode]]></category>

		<guid isPermaLink="false">https://amati.io/?p=615</guid>
				<description><![CDATA[<p>전통적으로 Javascript 개발 환경은 java처럼 복잡한 IDE 대신에 매우 가벼운 에디터로도 충분했습니다. 하지만 현대에는 frontend 개발의 주축이 되면서 매우 복잡해졌기 때문인지 Webstorm과 같은 강력한 IDE로 개발하는 경우도 많아졌습니다. 개발자에 따라 자바스크립트의 개발환경은 새롭고 강력한 IDE를 사용하는 환경, 전통적인 간단한 에디터를 그대로 사용하는 환경&#8230; 이렇게 두 분류로 나눠져 있다고 생각하는데요, 물론 이것은 개발 상황, 조직의 상황, 그리고 개인의 취향으로 어떤 것이든 선택할 수 있죠. Webstorm이 IDE계의 왕좌에 있다고 한다면, Visual Studio Code(줄여서 vscode)는 가벼운 에디터를 선호하는 개발자에게 있어 끝판왕이라고 해도 과언이 아니라고 생각합니다. microsoft에서 개발하고 있으며, Update log에 소개되는 추가 기능을&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/25/vs-code-extension-for-fe/">VS CODE extension for FE</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>전통적으로 Javascript 개발 환경은 java처럼 복잡한 IDE 대신에 매우 가벼운 에디터로도 충분했습니다. 하지만 현대에는 frontend 개발의 주축이 되면서 매우 복잡해졌기 때문인지  <a rel="noreferrer noopener" aria-label="Webstorm (opens in a new tab)" href="https://www.jetbrains.com/webstorm/" target="_blank">Webstorm</a>과 같은 강력한 IDE로 개발하는 경우도 많아졌습니다.</p>



<p>개발자에 따라 자바스크립트의 개발환경은 새롭고 강력한 IDE를 사용하는 환경, 전통적인 간단한 에디터를 그대로 사용하는 환경&#8230; 이렇게 두 분류로 나눠져 있다고 생각하는데요, 물론 이것은 개발 상황, 조직의 상황, 그리고 개인의 취향으로 어떤 것이든 선택할 수 있죠.</p>



<p>Webstorm이 IDE계의 왕좌에 있다고 한다면, <a rel="noreferrer noopener" aria-label="Visual Studio Code (opens in a new tab)" href="https://code.visualstudio.com/" target="_blank">Visual Studio Code</a>(줄여서 vscode)는 가벼운 에디터를 선호하는 개발자에게 있어 <span style="color:#cf2e2e" class="tadv-color">끝판왕</span>이라고 해도 과언이 아니라고 생각합니다.</p>



<p>microsoft에서 개발하고 있으며, Update log에 소개되는 추가 기능을 따라가기 힘들 정도로 업데이트가 활발한 것이 장점입니다. 아마 editplus, sublime text, atom 등을 사용하던 분들도 vscode로 많이 이동했을 거라고 생각합니다.</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img data-attachment-id="894" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/vscode-png/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/vscode-png.png?fit=452%2C494&amp;ssl=1" data-orig-size="452,494" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="vscode-png" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/vscode-png.png?fit=274%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/vscode-png.png?fit=452%2C494&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/vscode-png.png?resize=226%2C247&#038;ssl=1" alt="" class="wp-image-894" width="226" height="247" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/vscode-png.png?w=452&amp;ssl=1 452w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/vscode-png.png?resize=274%2C300&amp;ssl=1 274w" sizes="(max-width: 226px) 100vw, 226px" data-recalc-dims="1" /></figure></div>



<p>또한 vscopde는 플러그인으로 완성되는 에디터이기에, 그동안 사용했던 플러그인 중 나름 추천하는 플러그인을 소개해보려고 합니다.</p>



<hr class="wp-block-separator"/>



<h3>추천 플러그인</h3>



<h4><a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-ko" target="_blank" rel="noreferrer noopener" aria-label="Korean Language Pack for Visual Studio Code (opens in a new tab)">Korean Language Pack for Visual Studio Code</a></h4>



<p>당연하겠지만, 한국어 언어팩은 한국인 개발자라면 필수적입니다. 원래 다국어가 vscode에 내장되어 있었지만, 언젠가부터 언어팩을 별도로 설치하는 방향으로 수정되었습니다.</p>



<h4><a rel="noreferrer noopener" aria-label="editorconfig for vscode (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig" target="_blank">editorconfig for vscode</a></h4>



<p><a rel="noreferrer noopener" aria-label="editorconfig (opens in a new tab)" href="https://editorconfig.org/" target="_blank">editorconfig</a>에 대한 vscode의 플러그인입니다. 대부분의 IDE, editor에서는 어떤 방법이든 editorconfig를 지원하는데 vscode의 경우엔 플러그인으로 분리되어 있습니다.</p>



<p>.editorconfig의 기본 하이라이팅을 지원하기도 하지만 editorconfig에 설정된 내용을 기반으로 vscode의 editor setting을 override하는 역할도 합니다. 여러명이 함께 개발하는 프로젝트일 경우의 환경 차이를 극복할 수 있고, 특히 Windows와 MacOS의 line ending 차이로 인해 불필요하게 git diff가 발생하기도 하는데 이 문제를 해결할 수 있습니다.</p>



<h4><a rel="noreferrer noopener" aria-label="ESLint (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank">ESLint</a></h4>



<p>인터넷에서 따로 <code>vscode plugin</code>을 검색하지 않아도, vscode의 확장 탭에서 &#8220;자주 사용되는 확장 순서&#8221;로 정렬해서 검색할 때 상위권에 있는 플러그인들은 필수적입니다. 그중에서도 가장 상위권에 있는 플러그인이 바로 ESLint 인데요,</p>



<p>Javascript, ES6의 컨벤션, 문법 체크 등을 수행할 수 있으며, nodejs의 <a rel="noreferrer noopener" aria-label="eslint (opens in a new tab)" href="https://www.npmjs.com/package/eslint" target="_blank">eslint</a> 컴포넌트와 함께 lint (정적 검사) 기능을 수행하는 플러그인입니다.</p>



<h4><a rel="noreferrer noopener" aria-label="Prettier (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank">Prettier</a></h4>



<p>Prettier는 근래 나온 formatter 중에서는 매우 강력한 툴입니다. 많은 언어와 에디터를 지원합니다.<br>코드를 알아보기 어렵게 작성하더라도 formatting을 한번 실행하면 매우 깔끔하게 정리되는데요, 개발자의 취향에 따라서는 너무 코드가 많이 변경되기 때문에 불호가 있는 formatter이기도 합니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="888" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/prettier-banner-light/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?fit=1200%2C500&amp;ssl=1" data-orig-size="1200,500" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="prettier-banner-light" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?fit=300%2C125&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?fit=620%2C259&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?fit=620%2C259&amp;ssl=1" alt="" class="wp-image-888" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?w=1200&amp;ssl=1 1200w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?resize=300%2C125&amp;ssl=1 300w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?resize=768%2C320&amp;ssl=1 768w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/prettier-banner-light.png?resize=1024%2C427&amp;ssl=1 1024w" sizes="(max-width: 620px) 100vw, 620px" /><figcaption>image from <a href="https://prettier.io/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://prettier.io/</a></figcaption></figure></div>



<p>여러 명이 함께 일하는 조직에서는 초기 개발환경을 ESLint + Prettier + editorconfig 로 설정하고 시작하는 것이 여러모로 편리합니다.</p>



<h4><a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noreferrer noopener" aria-label="Settings Sync (opens in a new tab)">Settings Sync</a></h4>



<p>vscode의 환경설정과 플러그인 등 모든 것을 백업할 수 있는 플러그인이며, github gist를 사용합니다. 컴퓨터를 포맷하는 경우, 또는 다른 컴퓨터에 vscode를 추가로 설치하는 경우 등에 활용할 수 있습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="895" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/settings-sync/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/settings-sync.gif?fit=640%2C333&amp;ssl=1" data-orig-size="640,333" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="settings-sync" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/settings-sync.gif?fit=300%2C156&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/settings-sync.gif?fit=620%2C323&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/settings-sync.gif?w=620&#038;ssl=1" alt="" class="wp-image-895" data-recalc-dims="1"/></figure></div>



<p>vscode의 전체 설정, 설치했던 플러그인과 개별 설정, keymap, 심지어 workspace까지 그대로 복원할 수 있습니다.</p>



<h4><a rel="noreferrer noopener" aria-label="gitLens (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens" target="_blank">gitLens</a></h4>



<p>이 플러그인 역시 협업할 때 좋은 플러그인인데, line 별로 git history를 확인할 수 있는 기능이 매우 강력합니다. 강력한 git diff 기능도 제공합니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="882" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/gitlens-preview/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/gitlens-preview.gif?fit=727%2C600&amp;ssl=1" data-orig-size="727,600" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="gitlens-preview" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/gitlens-preview.gif?fit=300%2C248&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/gitlens-preview.gif?fit=620%2C512&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/gitlens-preview.gif?w=620&#038;ssl=1" alt="" class="wp-image-882" data-recalc-dims="1"/></figure></div>



<h4><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer-2" target="_blank" rel="noreferrer noopener" aria-label="Bracket Pair Colorizer 2 (opens in a new tab)">Bracket Pair Colorizer 2</a></h4>



<figure class="wp-block-image"><img data-attachment-id="880" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/bracket-pair/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/bracket-pair.png?fit=625%2C119&amp;ssl=1" data-orig-size="625,119" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="bracket-pair" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/bracket-pair.png?fit=300%2C57&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/bracket-pair.png?fit=620%2C118&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/bracket-pair.png?w=620&#038;ssl=1" alt="" class="wp-image-880" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/bracket-pair.png?w=625&amp;ssl=1 625w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/bracket-pair.png?resize=300%2C57&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure>



<p>자바스크립트는 괄호의 사용이 많아서, 컨벤션을 잘 정리하지 않으면 코드를 알아보기 어렵다는 단점이 있는데 이를 조금 보완해주는 플러그인입니다.</p>



<p>괄호를 각각 다른 컬러로 하이라이팅하고 커서가 위치했을 경우 같은 컬러의 선으로 이어줘서 조금 더 알아 보기 쉽게 해줍니다. 쓰다보면 가끔 라인의 색상이 어긋나는 경우도 있지만, 금방 원래대로 돌아옵니다.</p>



<p>원래 v1 버전이 있으나 현재 v2가 테스트 중(現 2019.04)입니다.</p>



<h4><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag" target="_blank" rel="noreferrer noopener" aria-label="Auto Rename Tag (opens in a new tab)">Auto Rename Tag</a></h4>



<p>html, xml에서 태그를 수정할때 여는 태그, 또는 닫는 태그 어느쪽을 수정하더라도 반대편의 태그도 함께 자동으로 수정해주는 플러그인입니다. 별도의 커맨드 실행 없이 자동으로 적용됩니다.</p>



<p>HTML은 당연하고, react 의 jsx 를 개발할 때 컴포넌트 명의 수정에 대해서도 생산성 향상의 효과가 큽니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="887" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/auto-rename-tag-usage/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/auto-rename-tag-usage.gif?fit=1440%2C938&amp;ssl=1" data-orig-size="1440,938" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="auto-rename-tag-usage" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/auto-rename-tag-usage.gif?fit=300%2C195&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/auto-rename-tag-usage.gif?fit=620%2C404&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/auto-rename-tag-usage.gif?fit=620%2C404&amp;ssl=1" alt="" class="wp-image-887"/></figure></div>



<h4><a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments" target="_blank" rel="noreferrer noopener" aria-label="Better comments (opens in a new tab)">Better comments</a></h4>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="879" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/better-comments/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/better-comments.png?fit=459%2C414&amp;ssl=1" data-orig-size="459,414" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="better-comments" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/better-comments.png?fit=300%2C271&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/better-comments.png?fit=459%2C414&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/better-comments.png?w=620&#038;ssl=1" alt="" class="wp-image-879" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/better-comments.png?w=459&amp;ssl=1 459w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/better-comments.png?resize=300%2C271&amp;ssl=1 300w" sizes="(max-width: 459px) 100vw, 459px" data-recalc-dims="1" /></figure></div>



<p>보통 주석은 한가지 색상으로 하이라이팅되지만, 이 플러그인을 사용할 경우 prefix에 따라 여러 색상으로 주석을 보여줍니다.</p>



<p>색상과 prefix 모두 커스텀할 수 있지만, 너무 많은 색상이 있을 경우엔 약간씩 하이라이팅 오류가 생기기도 하고 혼동이 오기도 하기 때문에&#8230; 저같은 경우 <span style="color:#ff6900" class="tadv-color">TODO</span>만 설정하여 사용하고 있습니다.</p>



<h4><a rel="noreferrer noopener" aria-label="Import Cost (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost" target="_blank">Import Cost</a></h4>



<p>import하는 모듈 컴포넌트 등의 사이즈를 옆에 표시해줍니다. 색상도 함께 설정할 수 있습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="884" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/import-cost-example/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/import-cost-example.gif?fit=838%2C146&amp;ssl=1" data-orig-size="838,146" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="import-cost-example" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/import-cost-example.gif?fit=300%2C52&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/import-cost-example.gif?fit=620%2C108&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/import-cost-example.gif?w=620&#038;ssl=1" alt="" class="wp-image-884" data-recalc-dims="1"/></figure></div>



<h4><a rel="noreferrer noopener" aria-label="npm Intellisense (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense" target="_blank">npm Intellisense</a></h4>



<p>package.json을 통해 설치된 npm module 들의 자동완성을 지원합니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="885" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/npm_intellisense_auto_complete/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/npm_intellisense_auto_complete.gif?fit=931%2C281&amp;ssl=1" data-orig-size="931,281" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="npm_intellisense_auto_complete" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/npm_intellisense_auto_complete.gif?fit=300%2C91&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/npm_intellisense_auto_complete.gif?fit=620%2C187&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/npm_intellisense_auto_complete.gif?w=620&#038;ssl=1" alt="" class="wp-image-885" data-recalc-dims="1"/></figure></div>



<p>또 커맨드 팔레트를 통해서 npm module을 인스톨하거나 import 문을 자동완성 해주는 기능도 있습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="886" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/importcommand/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/importcommand.gif?fit=800%2C163&amp;ssl=1" data-orig-size="800,163" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="importcommand" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/importcommand.gif?fit=300%2C61&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/importcommand.gif?fit=620%2C126&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/importcommand.gif?w=620&#038;ssl=1" alt="" class="wp-image-886" data-recalc-dims="1"/></figure></div>



<h4><a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-preview-github-styles" target="_blank" rel="noreferrer noopener" aria-label="Markdown Preview Github Styling (opens in a new tab)">Markdown Preview Github Styling</a></h4>



<p>markdown은 별도의 도구 없이 문서를 바로 작성할 수 있는 마크업 언어의 일종입니다. 하지만 표준이 없기 때문에 사이트 / 도구에 따라 변환되는 방식이나 표시 방식이 다르고, 커스텀화된 문법도 차이가 있습니다.</p>



<p>개발자라면 대부분 github 에서 markdown(.MD) 파일을 접하게 될텐데요, 이 플러그인은 github 스타일로 markdown 파일을 미리보기로 보여줍니다. 그래서 preview 화면을 보면서 바로 github에 대응하는 markdown을 작성할 수 있습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="883" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/markdown-preview-example/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?fit=961%2C633&amp;ssl=1" data-orig-size="961,633" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="markdown-preview-example" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?fit=300%2C198&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?fit=620%2C408&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?w=620&#038;ssl=1" alt="" class="wp-image-883" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?w=961&amp;ssl=1 961w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?resize=300%2C198&amp;ssl=1 300w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/markdown-preview-example.png?resize=768%2C506&amp;ssl=1 768w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure></div>



<hr class="wp-block-separator"/>



<h3>Language / Framework support</h3>



<p>vscode는 javascript 는 처음부터 하이라이팅을 지원하지만, 기본 내장되지 않은 언어는 플러그인으로 지원합니다.</p>



<p>그리고, 각종 Language support plugin 이외에도 최근 많은 인기를 가지고 있는 Vue.js, React 등의 개발을 도와주는 플러그인도 많이 있습니다.</p>



<ul><li><a rel="noreferrer noopener" aria-label=".gitignore (opens in a new tab)" href="ps://marketplace.visualstudio.com/items?itemName=codezombiech.gitignore" target="_blank">.gitignore</a></li><li><a rel="noreferrer noopener" aria-label="SASS / SCSS (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=robinbentley.sass-indented" target="_blank">SASS / SCSS</a></li><li><a rel="noreferrer noopener" aria-label="Vetur for Vue.js (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=octref.vetur" target="_blank">Vetur for Vue.js</a></li><li><a rel="noreferrer noopener" aria-label="React native tools (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=vsmobile.vscode-react-native" target="_blank">React native tools</a></li><li><a rel="noreferrer noopener" aria-label="FreeMarker (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=dcortes92.FreeMarker" target="_blank">FreeMarker</a></li><li><a rel="noreferrer noopener" aria-label="mustache (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=dawhite.mustache" target="_blank">mustache</a></li><li><a rel="noreferrer noopener" aria-label="handlebars (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=andrejunges.Handlebars" target="_blank">handlebars</a></li><li>&#8230;</li></ul>



<hr class="wp-block-separator"/>



<h3>테마</h3>



<p>테마는 구글에서 <code>vscode theme</code>로만 검색해도 <em>best theme in 2019</em> 류의 아티클을 쉽게 찾을 수 있습니다. 그런 글을 통해서 여러 테마를 설치해보고 자신이 맘에 드는 것을 찾으면 됩니다.</p>



<p>저도 여러 테마를 거쳐 쓰게 된 것은 <span style="color:#0693e3" class="tadv-color">one dark pro, monokai pro</span> 등인데요, 이 테마들은 기본적으로 지원이 잘 되는 테마이며 marketplace에서도 최상위권에 있는 테마이기도 합니다.</p>



<ul><li><a rel="noreferrer noopener" aria-label="One Dark Pro (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme" target="_blank">One Dark Pro</a><br>github의 <a href="https://atom.io" target="_blank" rel="noreferrer noopener" aria-label="atom (opens in a new tab)">atom</a> 에디터 때문에 유명해진 색상 조합입니다.<br><img data-attachment-id="889" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/006tnbrwgy1fvwkr6i199j31kw16otat/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?fit=2048%2C1536&amp;ssl=1" data-orig-size="2048,1536" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="006tNbRwgy1fvwkr6i199j31kw16otat" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?fit=300%2C225&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?fit=620%2C465&amp;ssl=1" scale="0" class="wp-image-889" style="width: 500px;" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?w=620&#038;ssl=1" alt="" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?w=2048&amp;ssl=1 2048w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?resize=300%2C225&amp;ssl=1 300w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?resize=768%2C576&amp;ssl=1 768w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?resize=1024%2C768&amp;ssl=1 1024w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?w=1240&amp;ssl=1 1240w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/006tNbRwgy1fvwkr6i199j31kw16otat.jpg?w=1860&amp;ssl=1 1860w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></li><li><a rel="noreferrer noopener" aria-label="Monokai Pro (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=monokai.theme-monokai-pro-vscode" target="_blank">Monokai Pro</a><br>5개의 테마와 5개의 파일아이콘 테마를 지원합니다. 개인적으로 좋아하는 커피색 위주의 색상 조합도 있는데요, 단점이 하나 있습니다. 테마 자체의 기능 제한이 없는데 업데이트 할 때에 9.95€ 의 기부 팝업이 뜨는 것이 좀 귀찮습니다.<br><img data-attachment-id="890" data-permalink="https://amati.io/2019/04/25/vs-code-extension-for-fe/monokai-pro/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?fit=2560%2C1525&amp;ssl=1" data-orig-size="2560,1525" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="monokai-pro" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?fit=300%2C179&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?fit=620%2C369&amp;ssl=1" scale="0" class="wp-image-890" style="width: 500px;" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?w=620&#038;ssl=1" alt="" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?w=2560&amp;ssl=1 2560w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?resize=300%2C179&amp;ssl=1 300w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?resize=768%2C458&amp;ssl=1 768w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?resize=1024%2C610&amp;ssl=1 1024w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?w=1240&amp;ssl=1 1240w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/monokai-pro.png?w=1860&amp;ssl=1 1860w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></li></ul>



<hr class="wp-block-separator"/>



<h3>파일 아이콘 테마</h3>



<p>파일 아이콘 테마 역시 검색으로 굉장히 많이 찾을 수 있고, 상위권에 있는 테마들이 역시 지원되는 파일의 종류도 많고 괜찮습니다.</p>



<p>파일 아이콘 테마는 지원되는 파일 종류가 얼마나 되는지가 중요한데요, 주로 vscode-icons (vscode팀 자체 제작), Material icons가 인기가 많습니다.</p>



<ul><li><a rel="noreferrer noopener" aria-label="vscode-icons (opens in a new tab)" href="https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons" target="_blank">vscode-icons</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme" target="_blank" rel="noreferrer noopener" aria-label="Material Icon Theme (opens in a new tab)">Material Icon Theme</a></li></ul>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/25/vs-code-extension-for-fe/">VS CODE extension for FE</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2019/04/25/vs-code-extension-for-fe/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">615</post-id>	</item>
		<item>
		<title>코드리뷰를 위한 좋은 코딩 &#8211; Javascript 편</title>
		<link>https://amati.io/2019/04/18/good-coding-for-codereview-on-javascript/</link>
				<comments>https://amati.io/2019/04/18/good-coding-for-codereview-on-javascript/#comments</comments>
				<pubDate>Thu, 18 Apr 2019 14:05:43 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[Javascript]]></category>
		<category><![CDATA[code review]]></category>
		<category><![CDATA[good code]]></category>

		<guid isPermaLink="false">https://amati.io/?p=726</guid>
				<description><![CDATA[<p>코드리뷰(Code review)는 개발자가 작성한 코드를 다른 개발자가 리뷰어가 되어 코드를 검토하는 프로세스를 말합니다. 장점이 많아서 회사 개발 팀 등의 조직에서는 대부분 도입하고 있죠. 사실 혼자서 프로그래밍하고 유지보수를 하고 있다면 개발자 자신이 알아볼 수만 있다면 되는데요. 차후에 이 코드를 알아볼 수 있는지에 대해서는 별개 문제이지만, 어쨌든 다른 사람을 신경 쓸 필요 없이 자신이 편한대로 작업하면 될 일이죠. 하지만 회사에서 여려명이 협업을 하는 경우엔 다릅니다. 자신이 만들었던 코드는 다른 관계자도 모두 알아야 하고, 차후의 인수인계 등 얼마든지 그 코드는 자신을 떠날 수 있기 때문에 깨끗하고 읽기 쉬운 코드를 생산해야 합니다. 하지만 개발자&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/18/good-coding-for-codereview-on-javascript/">코드리뷰를 위한 좋은 코딩 &#8211; Javascript 편</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>코드리뷰(Code review)는 개발자가 작성한 코드를 다른 개발자가 리뷰어가 되어 코드를 검토하는 프로세스를 말합니다. 장점이 많아서 회사 개발 팀 등의 조직에서는 대부분 도입하고 있죠.</p>



<p>사실 혼자서 프로그래밍하고 유지보수를 하고 있다면 개발자 자신이 알아볼 수만 있다면 되는데요. 차후에 이 코드를 알아볼 수 있는지에 대해서는 별개 문제이지만, 어쨌든 다른 사람을 신경 쓸 필요 없이 자신이 편한대로 작업하면 될 일이죠.</p>



<div class="wp-block-image"><figure class="aligncenter is-resized"><img data-attachment-id="827" data-permalink="https://amati.io/2019/04/18/good-coding-for-codereview-on-javascript/developing_code/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/developing_code.png?fit=513%2C434&amp;ssl=1" data-orig-size="513,434" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="developing_code" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/developing_code.png?fit=300%2C254&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/developing_code.png?fit=513%2C434&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/developing_code.png?resize=385%2C326&#038;ssl=1" alt="" class="wp-image-827" width="385" height="326" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/developing_code.png?w=513&amp;ssl=1 513w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/developing_code.png?resize=300%2C254&amp;ssl=1 300w" sizes="(max-width: 385px) 100vw, 385px" data-recalc-dims="1" /><figcaption>image from <a href="https://gallery.manypixels.co/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://gallery.manypixels.co/</a></figcaption></figure></div>



<p>하지만 회사에서 여려명이 협업을 하는 경우엔 다릅니다.</p>



<p>자신이 만들었던 코드는 다른 관계자도 모두 알아야 하고, 차후의 인수인계 등 얼마든지 그 코드는 자신을 떠날 수 있기 때문에 깨끗하고 읽기 쉬운 코드를 생산해야 합니다. 하지만 개발자 스스로 코드를 검토하는 것은 한계가 있으므로, <span style="color:#00d084" class="tadv-color">(QA가 존재하는 이유와 같습니다)</span> 제3의 개발자가 리뷰하는 코드리뷰는 필수적인 프로세스입니다.</p>



<blockquote class="wp-block-quote"><p><span style="color:#abb8c3" class="tadv-color">다만 빠르게 기능을 개발해서 배포해야하는 스타트업 같은 경우, 전략적으로 코드리뷰를 하지 않고 코드 품질을 희생하는 선택을 하기도 합니다.</span></p></blockquote>



<p>프로페셔널의 세계인 회사에서, 개발 기간에 일부러 시간을 투자해 별도의 프로세스를 추가한다는 것은 큰 부담이 될 수 있습니다. 따라서 코드리뷰를 도입하는 것에 대해서는 충분히 공감대를 형성해야 할 필요가 있습니다. 왜 코드리뷰를 도입할까요?</p>



<hr class="wp-block-separator"/>



<h4>코드리뷰로 얻을 수 있는 장점</h4>



<blockquote class="wp-block-quote"><p><strong>품질 향상</strong></p><p>코드가 깨끗해지고 읽기 쉬워지며, 유지보수가 쉬워집니다. 결과적으로 코드의 품질이 크게 향상됩니다.</p><p><strong>책임의 분산</strong></p><p>코드리뷰를 통해 결과적으로 한명이 작성한 코드가 아닌 <span style="color:#cf2e2e" class="tadv-color">여러명이 함께 작성한 코드</span>를 얻을 수 있습니다. 제품 출시 이전에 훨씬 효율적으로 버그를 잡을 수 있고, 만약 문제가 발생하더라도 책임소재를 누군가 떠안는 대신 문제 해결과 재발 방지에 집중할 수 있게 됩니다.</p><p><strong>지식 공유 및 성장</strong></p><p>개발자 개인이 잘 몰랐던 문법, 개선된 로직과 알고리즘, 또는 좋은 오픈소스 등의 지식을 코드리뷰를 통해 얻고 성장을 할 수 있습니다.</p></blockquote>



<h4>코드리뷰 때문에 발생하는 단점과 오해</h4>



<blockquote class="wp-block-quote"><p><strong>LOC (line of code)가 증가하고 용량이 많아진다</strong>?</p><p>코드리뷰를 위해서는 효율보다는 가독성을 우선해야 하는데, 경우에 따라서는 코드 자체의 용량이 증가하여 효율이 떨어질 수 있습니다. 하지만 빌드 툴의 uglify 도구가 최적화를 담당하여 용량을 크게 줄여주고, 최근의 웹브라우저에서도 gzip으로 또 한번 압축을 하기 때문에 LOC의 증가는 큰 문제가 아닙니다.</p><p><strong>최적화하기 어렵다</strong>?</p><p>현재는 컴퓨터나 모바일 단말기 등이 충분히 빠르고, 자바스크립트 엔진도 자체적으로 최적화하여 수행하기 때문에 코딩 단계의 미세 최적화는 노력의 낭비라고 볼 수 있습니다. → <a rel="noreferrer noopener" aria-label="자바스크립트 미세 최적화 피하기 (opens in a new tab)" href="https://developers.google.com/web/fundamentals/performance/rendering/optimize-javascript-execution?hl=ko#_2" target="_blank">자바스크립트 미세 최적화 피하기</a></p><p>만약 성능에 관해 개선하고 싶다면 크롬의 개발자도구 등을 활용하여 프로파일링 한 후 병목을 찾아 고치는 것이 좋은 방향입니다.</p><p><strong>코드리뷰 프로세스 때문에 개발 기간이 늘어난다?</strong></p><p>코드리뷰는 제3자가 리뷰를 하기 때문에 필연적으로 검토하는 시간과 수정하는 시간이 추가됩니다. 또한 리뷰어 입장에서 보면 자신의 코드가 아닌 제3자의 코드를 <span style="color:#cf2e2e" class="tadv-color">«특별히»</span> 시간을 내서 리뷰해야 하죠. 심지어 업무가 너무 많을 때엔 코드리뷰 자체가 형식적이 되는 경우도 많은 건 사실입니다.<br>그래서 코드리뷰는 도입하기 전에 구성원들끼리 <span style="color:#0693e3" class="tadv-color">코드 품질 향상</span>이라는 목표에 대해 공감대를 가져야 합니다.</p><p>코드의 양이 많거나 시간이 부족할 경우엔, 체크리스트를 설정해서 코드의 성격에 따라 코드리뷰 진행 여부를 결정하는 것도 도움이 됩니다.</p><p><strong>남이 내 코드를 지적하는 게 싫다?</strong></p><p>이것은 농담같은 이유이지만 무시할 수 없습니다. 코드리뷰는 절대로 상급자가 하급자를 훈련하기 위한 것이 아니라, <span style="color:#cf2e2e" class="tadv-color">코드 품질을 향상하는 것</span>이 목적입니다. 개발은 사람이 하는 것이기 때문에 하급자 대하듯 리뷰한다면 감정이 생길 수밖에 없고 코드리뷰의 목적을 달성할 수 없게 됩니다.</p><p>그래서 코드 리뷰를 할 때에는 상/하급자, 시니어/주니어를 막론하고 서로 존중하는 마음으로 리뷰를 해야 합니다. 코드에겐 불친절하게, 사람에겐 친절하게&#8230;</p></blockquote>



<p>코드리뷰에 대해서는 별도로 크게 다룰 정도로 많은 화제가 있습니다만, 차후 얘기하기로 하고&#8230; 이 글에서는 개발자 입장에서 코드리뷰를 위한 좋은 코드를 만드는 팁을 정리해보았습니다.</p>



<hr class="wp-block-separator"/>



<h4>1. 리뷰할 코드의 양은 최소한으로 제한해야 한다.</h4>



<p>우선 코드의 양이 많으면 리뷰어 입장에서 리뷰하기가 쉽지 않습니다. 또한 여러가지 feature가 섞여있는 경우에도 제3자 입장에선 로직의 흐름을 따라가기 어렵기 때문에 리뷰가 어렵게 됩니다.<br>따라서 좋은 리뷰를 받기 위해서는 단 하나의 feature에 집중하여 개발하고, 관계없는 코드를 추가하지 않아야 합니다. 예를 들어 feature 개발을 완료했는데, 해당 작업과 관련이 없는 config 파일을 개선하고 싶다고 해서 함께 Pull Request를 보내는 것은 피해야 합니다.</p>



<p>불가피하게 하나의 feature임에도 불구하고 대량의 코드를 추가했다면, 온라인 코드리뷰 대신에 오프라인으로 회의를 열어 직접 설명하는 것이 좋겠네요.</p>



<h4>2. 해당 기능이 완벽히 구현되었을 때에 PR을 보낸다.</h4>



<p>코드를 개발하는 도중에 PR을 보내지 않고, 완벽하게 구현을 완료한 후 PR을 보내야 합니다. 만약 github을 이용한다면 travis CI를 연동하여 push를 할 때에 빌드를 바로 검사할 수 있도록 자동화하는 것도 좋은 방법입니다.</p>



<h4>3. 코드의 효율보다는 컨벤션과 가독성을 우선한다.</h4>



<p>코드의 효율을 개선하는 미세 최적화, 코드의 용량을 줄이는 코딩 방법, 또는 개발자 개인의 습관 등은 허용되지 않는 것은 아니지만, 이 모든 것보다 가독성을 최우선하여 프로그래밍하는 것이 좋습니다.</p>



<p>실제로 컨벤션은 코드리뷰에서 자주 지적되는 소모적인 이슈인데, 가능하다면 프로젝트에 <a rel="noreferrer noopener" aria-label="ESLint (opens in a new tab)" href="https://eslint.org/" target="_blank">ESLint</a>, <a rel="noreferrer noopener" aria-label="Prettier (opens in a new tab)" href="https://prettier.io/" target="_blank">Prettier</a> 등의 도구를 설정해서 자동으로 컨벤션과 가독성을 통일시키는 도구를 사용하는 것이 좋습니다.</p>



<h4>4. 주석은 최소화해야 한다.</h4>



<p>과거에는 주석을 많이 추가하는 것이 미덕처럼 여겨졌던 시기도 있었지만, 현재는 그렇지 않습니다.</p>



<p>로직을 별도로 설명하기 위한 주석은 달지 않는 것이 좋습니다. 바꿔 말하자면, <span style="color:#cf2e2e" class="tadv-color">주석 없이 이해할 수 있는 코드</span>를 생산해야 합니다.<br>개발할 때에 나중에 할 일을 &#8220;todo&#8221;로 시작하는 주석을 달아두는 경우도 많은데, 이 역시 개발을 완료하여 todo를 남기지 않거나 feature를 분리하는 것이 좋습니다.</p>



<p>또한 코드 자체를 주석처리하고 작동하지 않게 설정하거나, 나중에 사용하기 위해 남겨놓는 경우도 많은데, 이 역시 코드를 읽기 어렵게 만듭니다. 만약 과거의 코드를 재사용할 일이 예상되어 주석을 남겼다면, 차후에 git commit history 등으로 복원하는 것도 가능하기 때문에 주석을 삭제하는 것이 좋습니다.</p>



<p>주석을 남기기에 적당한 것은 <span style="text-decoration: underline;"><span style="text-decoration: underline" class="underline">코드만으로 이해할 수 없는 부분</span></span>입니다. 예를 들면 결정된 기획, 관련 이슈나 위키의 URL, 타 부서와의 협의 결과 등이죠.</p>



<h4>5. 네이밍 및 활용 &#8211; 상수, 변수 편</h4>



<p>네이밍은 사소한 주제인 것 같으면서도 사실은 프로그래머가 가장 힘들어하는 일 중에 하나라고 하는 재미있는 통계가 있습니다.</p>



<p>변수/함수의 네이밍은 실제로 코드리뷰에서 가장 많이 지적되는 부분 중 하나인데요, 4번 항목과도 연관이 되지만 네이밍 만으로도 역할과 하는 일을 설명할 수 있는 로직이 바로 주석이 필요없는 좋은 로직이기 때문에 네이밍은 매우 중요합니다.</p>



<p>습관이나 조직에 따라 다르겠지만 일반적으로 상수와 변수는 다음과 같은 방식으로 이름을 짓습니다.</p>



<ul><li>상수(const) : 대문자 + underscore의 조합<br>예. <code>DELAY_TIME</code>, <code>HOME_ITEM_MAX_LENGTH</code>, &#8230;</li><li>변수(var, let) : 소문자 + 카멜 케이스<br>예. <code>className</code>, <code>packageType</code>, <code>tabId</code>, &#8230;</li></ul>



<p>uglify 도구를 빌드할 때 사용하기 때문에 네이밍이 길어지는 것은 걱정할 필요가 없습니다. 예외적으로 객체의 property명 등이 uglify되지 않는 경우가 있습니다만, property명을 일부러 줄이는 것은 미세 최적화에 속하기 때문에 역시 가독성을 우선하는 것이 좋습니다.</p>



<p>다음과 같은 룰은 설명하지 않아도 자바스크립트 프로그래밍의 기본이지요.</p>



<ul><li>전역변수는 최대한 사용하지 않거나 사용을 금지한다.</li><li>var, let, const를 항상 사용하여 변수의 scope를 적절한 범위로 설정한다.</li></ul>



<p>상수나 변수를 만들 때에 최대한 알기 쉽게 기술하는 것도 좋습니다.<br>예를 들어 &#8220;대기 시간을 10분으로 설정&#8221;하기 위해 상수를 만들 때엔 <code>600000</code>이라는 단순한 숫자를 할당하는 것보다는 <code>10 * 60 * 1000</code>으로 풀어 쓰고 주석으로 단위를 달아주는 것이 이해하기 쉽습니다. 그리고 이런 구문은 대부분 uglify 도구에서 최적화되므로 코드의 양은 걱정하지 않아도 됩니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// HMM...
const DELAY_TIME = 600000;

// GOOD!!
const DELAY_TIME = 10 * 60 * 1000; // ms</pre>



<p>아래의 예는 효율 면에서는 불필요한 변수를 만들기 때문에 좋지 않은 코드로 보이지만 사실 코드로 모든것을 설명할 수 있는 코드이며 가독성이 좋습니다. 이 또한 uglify 도구에서 최적화되므로 걱정할 필요가 없습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// HMM...
doSomething(sendAPI, 600000);

// GOOD!!
const SEND_API_INTERVAL_TIME = 10 * 60 * 1000; // ms
doSomethingWithInterval(sendAPI, SEND_API_INTERVAL_TIME);</pre>



<h4>6. 네이밍 및 활용 &#8211; 함수 편</h4>



<p>함수의 이름은 별도의 주석이 달려있지 않더라도 무슨일을 하는 함수인지 확실히 표현할 수 있도록 이름을 지어야 합니다. 정확한 네이밍을 통해 함수의 정체성을 확보하면 차후에 함수 내에 관련이 없는 코드를 자꾸 집어넣는 일도 의도적으로 줄어들게 됩니다.</p>



<p>최근의 트렌드인 함수형 프로그래밍에서는 특히 네이밍이 중요해졌습니다. 함수형 프로그래밍에서의 함수는 역할을 최소화하여 한가지 일에 집중하고, 책임을 확실하게 분리해야 합니다.</p>



<p>프로그래밍을 하다 보면 비슷한 코드를 추가하는 경우도 많은데, 이러한 중복은 최소한으로 줄이고 함수로 분리를 하는 것이 좋습니다. 이 역시 매우 중요한데, 가끔 프로그래밍하시는 분들 중에는 코드 중복을 극단적으로 싫어하고 1줄이라도 중복된다면 리팩토링해야 한다고 생각하는 분들도 있을 정도입니다.</p>



<p>함수의 책임을 계속 분리하다 보면 가끔 기본적으로 모든 프로그램에 공통으로 포함될만한 코드가 생산되기도 합니다. &#8220;순수함수&#8221;의 영역에 속하는 함수들인데, 예를들면 map, filter, reduce, sort, isNumber 같은 종류입니다.<br>이러한 함수는 직접 만들기보다는 <a rel="noreferrer noopener" aria-label="Lodash (opens in a new tab)" href="https://lodash.com/" target="_blank">Lodash</a>, <a rel="noreferrer noopener" aria-label="Underscore.js (opens in a new tab)" href="https://underscorejs.org/" target="_blank">Underscore.js</a> 등에서 필요한 함수만 import하는 것도 좋은 방법입니다. 이 코드들은 모든 테스트케이스를 통과하여 검증된 견고한 코드이기 때문입니다.</p>



<h4>7. 예외처리 잘하기</h4>



<p>예외 처리는 버그가 발생하기 쉬운 부분 중 하나입니다. 함수의 입출력을 확실히 한정시키고, 모든 입력에 대해 적절하게 처리하여 출력할 수 있도록 프로그래밍해야 합니다.</p>



<p>가끔 스크립트의 외부에서 받는 입력에서 문제가 생기는 경우가 있는데, 가장 흔한 예로는 서버로부터 받는 데이터, JSON 의 예외처리입니다.<br>JSON의 형식에 문제가 있을 경우, runtime 오류가 발생하여 실행이 중지되는데요, JSON.parse() 에 대해 try-catch를 사용해서 예외처리를 해야 합니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">let data;
if (serverResponse) {
  try {
    data = JSON.parse(serverResponse);
  } catch(e) {
    doSomething(e); // JSON에 오류가 있을 경우의 처리
  }
}</pre>



<h4>8. 그 외에 자주 지적되는 이슈</h4>



<p><strong>(1) </strong><code><strong>if / elseif</strong></code><strong>의 중첩, </strong><code><strong>switch / case</strong></code><strong>의 중첩이 있을 경우</strong></p>



<p>이 경우에는 중첩된 if / switch 문을 별도의 함수로 분리할 수 있는지 고민해야 합니다. <code>if</code>와 <code>switch</code>는 가독성을 해치는 대표적인 문법인데 중첩이 계속되면 읽기가 쉽지 않기 때문입니다.</p>



<p><strong>(2) </strong><code><strong>if</strong></code><strong>의 </strong><code><strong>else</strong></code><strong>, </strong><code><strong>switch</strong></code><strong>의 </strong><code><strong>default</strong></code><strong>가 있는가?</strong></p>



<p>예외 처리에 관련된 것인데요, 로직 상 비어있는 구멍을 만들지 않고 모든 조건에 대해 적절하게 처리될 수 있도록 프로그래밍해야 합니다.</p>



<p><strong>(3) 조건의 순서</strong></p>



<p>프로그램의 흐름상 만날 가능성이 높다고 생각되는 조건을 먼저 판단하는 것은 미세 최적화 방법 중 하나입니다. 예를들어 0과 0이 아닌 수가 조건이라면, 자연스럽게 &#8220;0이 아닌 수&#8221; 쪽이 true가 될 가능성이 높다고 예상할 수 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">if (lastNumber !== 0) {
  // doSomething();
} else {
  // doOtherSomething();
}</pre>



<p>하지만 이런 미세 최적화보다는 역시 가독성을 우선으로 하는 것이 좋습니다. 가독성에 있어서는 부정보다 긍정의 조건을 먼저 두는 순서로 하면 좋다고 합니다.</p>



<p><strong>(4) 비동기로 실행되는 영역은 최소화할 것</strong></p>



<p><code>setInterval</code>, <code>setTimeout</code> 구문은 비동기로 실행되기 때문에 프로그램의 흐름을 방해하는 대표적인 로직 중 하나입니다. 사용을 최소화하고, 만약 사용하더라도 최소한의 영역과 책임을 가지도록 해야 합니다.</p>



<p>비동기로 실행되는 로직은 항상 버그의 가능성이 높은데, ES6에 추가된 promise 또는 async, await를 활용하여 동기식으로 처리하는 기법을 적용하는 것이 좋습니다.</p>



<hr class="wp-block-separator"/>



<p>이상입니다.</p>



<p>리뷰어는 전반적인 로직을 파악할 가능성이 적기 때문에 feature에 따른 기능구현을 검토하기보다는 함수 단위의 리뷰, 일반적인 로직과 알고리즘에 대한 리뷰, 또는 컨벤션을 중점적으로 검토하는 경향이 있습니다.</p>



<p>따라서 개발자 입장에서는 위 내용을 항상 염두에 두고 프로그래밍한다면, 좋은 코드리뷰를 받을 가능성이 높아질 것입니다.<br>코드리뷰를 단번에 통과하거나, 단순하고 반복적인 리뷰는 최소화하면서 중요한 로직이나 놓친 부분에 대한 소중한 리뷰를 받을 수 있겠죠?</p>



<hr class="wp-block-separator"/>



<blockquote class="wp-block-quote"><p><span style="color:#f78da7" class="tadv-color">Update in 2019.04.19</span></p><p>코드리뷰를 위한 좋은 코딩이라는 것은 곧 &#8220;클린 코드&#8221;를 작성한다는 것과 일맥상통합니다. Robert C. Martin 의 책인 <a rel="noreferrer noopener" aria-label="Clean code (opens in a new tab)" href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" target="_blank">Clean code</a>의 내용을 javascript에 맞게 적용시켜 옮긴 github repo가 있습니다. 이 글보다 훨씬 좋은 내용인지라 링크를 추가합니다.</p><p>Clean code for javascript (원문) : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://github.com/ryanmcdermott/clean-code-javascript" target="_blank">https://github.com/ryanmcdermott/clean-code-javascript</a></p><p>클린 코드 (한국어 번역) : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://github.com/qkraudghgh/clean-code-javascript-ko" target="_blank">https://github.com/qkraudghgh/clean-code-javascript-ko</a></p></blockquote>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/18/good-coding-for-codereview-on-javascript/">코드리뷰를 위한 좋은 코딩 &#8211; Javascript 편</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2019/04/18/good-coding-for-codereview-on-javascript/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">726</post-id>	</item>
		<item>
		<title>React component updates in 2019.04</title>
		<link>https://amati.io/2019/04/11/react-component-update-on-2019-04/</link>
				<comments>https://amati.io/2019/04/11/react-component-update-on-2019-04/#respond</comments>
				<pubDate>Thu, 11 Apr 2019 12:41:14 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[Javascript]]></category>
		<category><![CDATA[react]]></category>
		<category><![CDATA[react-redux]]></category>
		<category><![CDATA[react-router]]></category>

		<guid isPermaLink="false">https://amati.io/?p=637</guid>
				<description><![CDATA[<p>React와 함께 주로 사용되는 컴포넌트의 메이저 버전업이 2건 있었습니다. 상태관리를 위한 Redux를 React와 연결해주는 react-redux, 그리고 여러 화면으로 구성되어있는 single-page application 을 만들 경우 필수적으로 사용하게 되는 react-router 입니다. 두 컴포넌트 모두 react 프로그래밍에 있어 필수적으로 사용되는데, 다행히도 둘 다 이전의 메이저 버전과 호환됩니다. 주로 퍼포먼스 개선과 일부 편의성이 개선되었기 때문에, 주의사항만 참고한다면 별다른 migration 없이 package.json 에서 version-up 하면 됩니다. react-redux v7.0.1 버전 6에서 리포트되었던 속도 이슈를 개선하였습니다. 내부적으로는 connect() 함수에서 react 16.8에 추가되었던 Hooks를 사용합니다. 대부분 내부적 개선이 이루어졌고 기존 version 6의 public API와 호환되기 때문에 코드의 변경은&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/11/react-component-update-on-2019-04/">React component updates in 2019.04</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>React와 함께 주로 사용되는 컴포넌트의 메이저 버전업이 2건 있었습니다.</p>



<p>상태관리를 위한 Redux를 React와 연결해주는 <a rel="noreferrer noopener" aria-label="react-redux (opens in a new tab)" href="https://github.com/reduxjs/react-redux" target="_blank">react-redux</a>, 그리고 여러 화면으로 구성되어있는 single-page application 을 만들 경우 필수적으로 사용하게 되는 <a rel="noreferrer noopener" aria-label="react-router (opens in a new tab)" href="https://github.com/ReactTraining/react-router" target="_blank">react-router</a> 입니다.</p>



<p>두 컴포넌트 모두 react 프로그래밍에 있어 필수적으로 사용되는데, 다행히도 둘 다 이전의 메이저 버전과 호환됩니다. 주로 퍼포먼스 개선과 일부 편의성이 개선되었기 때문에, 주의사항만 참고한다면 별다른 migration 없이 package.json 에서 version-up 하면 됩니다.</p>



<hr class="wp-block-separator"/>



<h3>react-redux v7.0.1</h3>



<p>버전 6에서 리포트되었던 속도 이슈를 개선하였습니다. 내부적으로는 connect() 함수에서 react 16.8에 추가되었던 Hooks를 사용합니다.</p>



<p>대부분 내부적 개선이 이루어졌고 기존 version 6의 public API와 호환되기 때문에 코드의 변경은 없습니다. 다만 다음과 같은 내용은 유의해야 합니다.</p>



<p><strong>1. React 최소 버전의 변경</strong></p>



<p>내부적으로 React Hooks를 사용하기 때문에 react의 최소 버전은 16.4에서 <code>16.8.4</code> 로 변경되었습니다. react-redux 7을 사용하려면 react v16.8.4를 사용하거나 16.8.4로 업그레이드 해야합니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="json" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">"dependencies": {
    "react": "^16.8.4",
    "react-dom": "^16.8.4",
    "react-redux": "^7.0.1",
}</pre>



<p><strong>2. connect()가 반환하는 type이 변경됨</strong></p>



<p>connect()는 내부적으로 <code>React.memo()</code> 를 활용하여 function 대신 특별한 object를 반환합니다. 따라서 PropTypes로 유효성을 체크하고 있었다면 PropTypes.func에서 PropType.elementType으로 변경해야 합니다. 하지만 PropTypes.func를 사용한다고 해서 warning이 발생하지는 않았습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">class App extends React.Component {
  static propTypes = {
    someStore: PropTypes.elementType.isRequired,
  };
}</pre>



<p><strong>3. Batch API 추가</strong></p>



<p>React에는 동일한 event loop tick에서 여러 업데이트를 묶을 수 있는 <code>unstable_batchedUpdates API</code> 가 있습니다. react-redux는 이 API를 내부적인 redux 구독 처리 기능에 사용했는데, redux store update로 인한 렌더링 수를 줄여서 퍼포먼스 개선 효과가 있었다고 합니다.</p>



<p>이 API는 react-core가 아닌 react-dom 또는 react-native 등의 렌더러 패키지에 있는데, react-redux에서는 이 함수를 공개적으로 <code>batch()</code>라는 이름으로 내보냈습니다. 그래서, 이 함수를 사용하여 여러 action을 단일 렌더링이 일어날 수 있도록 개선할 수 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">import { batch } from "react-redux";

function myThunk() {
    return (dispatch, getState) => {
        // 한번에 하나의 결합된 re-render가 발생한다.
        batch(() => {
            dispatch(increment());
            dispatch(increment());
        })
    }
}</pre>



<p>Release Notes : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://github.com/reduxjs/react-redux/releases/tag/v7.0.1" target="_blank">https://github.com/reduxjs/react-redux/releases/tag/v7.0.1</a></p>



<hr class="wp-block-separator"/>



<h4>react-router v5.0</h4>



<p>이미 version 4를 사용하고 있다면 코드의 변경 없이 바로 업데이트할 수 있습니다. 원래 4.4로 발표될 예정이었으나 beta test 중 예기치 않은 문제가 발생하여 새롭게 5.0으로 릴리즈되었습니다. react-router 5.0에서는 내부적으로 React 16에 대한 지원이 강화되고 새로운 기능이 몇가지 추가되었습니다.</p>



<p><strong>1. main bundle에서 필요한 컴포넌트만 로딩</strong></p>



<p>개별 파일을 import 하는 대신에 main bundle에서 필요한 컴포넌트를 로딩할 수 있도록 변경되었습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// Instead of:
import Router from 'react-router/Router';
import Switch from 'react-router/Switch';

// do:
import { Router, Switch } from 'react-router';</pre>



<p><strong>2. &lt;Route path>에 배열을 사용할 수 있음</strong></p>



<p>하나의 컴포넌트에 2개의 다른 route를 지정하고자 할 때 배열을 사용하여 다음과 같이 변경할 수 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="js" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">// Instead of this:
&lt;Switch>
  &lt;Route path="/users/:id" component={User} />
  &lt;Route path="/profile/:id" component={User} />
&lt;/Switch>

// you can now do this:
&lt;Route path={["/users/:id", "/profile/:id"]} component={User} /></pre>



<p>Reference : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://reacttraining.com/blog/react-router-v5/" target="_blank">https://reacttraining.com/blog/react-router-v5/</a></p>



<p></p>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/11/react-component-update-on-2019-04/">React component updates in 2019.04</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2019/04/11/react-component-update-on-2019-04/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">637</post-id>	</item>
		<item>
		<title>타임타이머(Time Timer) 이야기</title>
		<link>https://amati.io/2019/04/09/time-timer-story/</link>
				<comments>https://amati.io/2019/04/09/time-timer-story/#respond</comments>
				<pubDate>Tue, 09 Apr 2019 06:59:31 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[스크랩]]></category>
		<category><![CDATA[time timer]]></category>
		<category><![CDATA[구글 스프린트]]></category>
		<category><![CDATA[뽀모도로]]></category>

		<guid isPermaLink="false">https://amati.io/?p=552</guid>
				<description><![CDATA[<p>시간관리 전략, 뽀모도로 타이머 현대인에게 있어 시간관리의 중요성은 삶의 질이 달라질 정도로 중요합니다. 시간관리에 대해서는 많은 전략이 있지만, 업무용으로 유명한 것 중에 뽀모도로 타이머를 사용하는 뽀모도로 전략이라는 것이 있습니다. &#8220;뽀모도로 타이머&#8221;라는 아날로그 타이머를 활용하여 업무의 효율성을 극대화시키는 기법입니다. 25분 동안 Task에 집중 + 5분 휴식 이를 4번 반복한 후 30분을 휴식 여담으로 파스타 요리 좋아하시는 분들은 아시겠지만 &#8220;뽀모도로&#8221;는 이탈리아어로 &#8220;토마토&#8221;인데요, 이 아이템의 원래 용도는 요리에 사용하는 주방용 타이머입니다. 개인적으로는 뽀모도로 전략에 대해서는 처음 알았을 때엔 사실 매력적으로 느끼지 못했습니다. 그 이유는 쉬는 시간이 많음에도 불구하고 빡빡한 시간표로 인해 심리적 압박이&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/09/time-timer-story/">타임타이머(Time Timer) 이야기</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<h4>시간관리 전략, 뽀모도로 타이머</h4>



<p>현대인에게 있어 시간관리의 중요성은 삶의 질이 달라질 정도로 중요합니다. 시간관리에 대해서는 많은 전략이 있지만, 업무용으로 유명한 것 중에 <a rel="noreferrer noopener" aria-label="뽀모도로 타이머 (opens in a new tab)" href="https://ko.wikipedia.org/wiki/%ED%8F%AC%EB%AA%A8%EB%8F%84%EB%A1%9C_%EA%B8%B0%EB%B2%95" target="_blank">뽀모도로 타이머</a>를 사용하는 뽀모도로 전략이라는 것이 있습니다. &#8220;뽀모도로 타이머&#8221;라는 아날로그 타이머를 활용하여 업무의 효율성을 극대화시키는 기법입니다.</p>



<ul><li>25분 동안 Task에 집중 + 5분 휴식</li><li>이를 4번 반복한 후 30분을 휴식</li></ul>



<p>여담으로 파스타 요리 좋아하시는 분들은 아시겠지만 &#8220;뽀모도로&#8221;는 이탈리아어로 &#8220;토마토&#8221;인데요, 이 아이템의 원래 용도는 요리에 사용하는 주방용 타이머입니다.</p>



<figure class="wp-block-image"><img data-attachment-id="620" data-permalink="https://amati.io/2019/04/09/time-timer-story/il_pomodoro/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?fit=591%2C591&amp;ssl=1" data-orig-size="591,591" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;3.6&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;COOLPIX L5&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1200154462&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;12.5&quot;,&quot;iso&quot;:&quot;79&quot;,&quot;shutter_speed&quot;:&quot;0.15873015873016&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="Il_pomodoro" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?fit=300%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?fit=591%2C591&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?w=620&#038;ssl=1" alt="" class="wp-image-620" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?w=591&amp;ssl=1 591w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?resize=150%2C150&amp;ssl=1 150w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?resize=300%2C300&amp;ssl=1 300w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/Il_pomodoro.jpg?resize=200%2C200&amp;ssl=1 200w" sizes="(max-width: 591px) 100vw, 591px" data-recalc-dims="1" /><figcaption>By The original uploader was <a href="https://en.wikinews.org/wiki/it:User:Erato" class="broken_link">Erato</a> at <a href="https://en.wikinews.org/wiki/it:">Italian Wikinews</a>. &#8211; Transferred from <a href="//it.wikinews.org">it.wikinews</a> to Commons by <a href="//commons.wikimedia.org/wiki/User:Fale" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">Fale</a> using <a href="https://tools.wmflabs.org/commonshelper/">CommonsHelper</a>., <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</a>, <a href="https://commons.wikimedia.org/w/index.php?curid=4719295">Link</a></figcaption></figure>



<p>개인적으로는 뽀모도로 전략에 대해서는 처음 알았을 때엔 사실 매력적으로 느끼지 못했습니다. 그 이유는 쉬는 시간이 많음에도 불구하고 빡빡한 시간표로 인해 심리적 압박이 너무 심하다는 것이었습니다.</p>



<p>대신에 최근 &#8220;타임타이머&#8221;라는 아이템을 접하게 되었는데요, 이에 대해 소개해보려고 합니다. 저는 <a rel="noreferrer noopener" aria-label="아마존에서 구입 (opens in a new tab)" href="https://www.amazon.com/Time-Timer-Optional-Ticking-Management/dp/B06XSNYSFQ" target="_blank">아마존에서 구입</a>했는데요, 최근에 &#8220;구글 타이머&#8221;로 유명해진 아이템입니다.</p>



<hr class="wp-block-separator"/>



<h4>타임 타이머의 나쁜 가격</h4>



<p>우선 타임타이머의 단점부터 이야기하지 않을 수 없는데요&#8230; 이 아이템의 가격은 아마존 기준 <mark>35$</mark>입니다. 가격이 나쁘죠. 대신 할인을 가끔 하기 때문에 운이 좋다면 더 싼 가격도 가능한 것 같습니다.<br>제가 확인한 바로는 아마존에서 5$ 정도를 추가하여 한국까지 직배송을 받는 것이 가장 좋은 방법인 것 같습니다. 네이버 쇼핑 등에서도 해외 직수입 판매자들이 있지만 가격이 많이 싸지 않다면 굳이 국내에서 구입할 필요는 없어 보입니다.</p>



<figure class="wp-block-image"><img data-attachment-id="540" data-permalink="https://amati.io/time_timer_2/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?fit=1200%2C1084&amp;ssl=1" data-orig-size="1200,1084" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.7&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;DC-LX100M2&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1554210295&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;10.9&quot;,&quot;iso&quot;:&quot;200&quot;,&quot;shutter_speed&quot;:&quot;0.008&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="time_timer_2" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?fit=300%2C271&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?fit=620%2C560&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=620%2C560&#038;ssl=1" alt="" class="wp-image-540" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=1024%2C925&amp;ssl=1 1024w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=300%2C271&amp;ssl=1 300w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=768%2C694&amp;ssl=1 768w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=110%2C99&amp;ssl=1 110w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=420%2C379&amp;ssl=1 420w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?resize=476%2C430&amp;ssl=1 476w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_2.jpg?w=1200&amp;ssl=1 1200w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure>



<figure class="wp-block-image"><img data-attachment-id="541" data-permalink="https://amati.io/time_timer_3/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?fit=1200%2C862&amp;ssl=1" data-orig-size="1200,862" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.7&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;DC-LX100M2&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1554210383&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;10.9&quot;,&quot;iso&quot;:&quot;200&quot;,&quot;shutter_speed&quot;:&quot;0.008&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="time_timer_3" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?fit=300%2C216&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?fit=620%2C446&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=620%2C446&#038;ssl=1" alt="" class="wp-image-541" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=1024%2C736&amp;ssl=1 1024w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=300%2C216&amp;ssl=1 300w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=768%2C552&amp;ssl=1 768w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=110%2C79&amp;ssl=1 110w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=420%2C302&amp;ssl=1 420w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?resize=599%2C430&amp;ssl=1 599w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_3.jpg?w=1200&amp;ssl=1 1200w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure>



<h4>타임 타이머 이야기</h4>



<p>간단히 설명하자면, Jan Rogers 라는 엄마가 추상적인 시간 개념을 잘 이해하지 못하던 Loran이라는 딸에게 시간을 설명해주기 위해 발명한 것이 시초인데요, 부가 효과로 남은 시간을 명시적으로 알려주는 효과 때문에 업무나 공부 등 집중력이 필요한 작업에 유용하다고 합니다.</p>



<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="video-container"><iframe class='youtube-player' type='text/html' width='620' height='349' src='https://www.youtube.com/embed/5-9ugu9pBak?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></div>
</div></figure>



<p>남은 시간을 빨간색의 영역으로 아주 쉽게 파악할 수 있는데, 업무를 진행하면서 데드라인을 설정하는 효과가 생겨서 약간의 심리적 압박 효과를 얻을 수 있습니다.</p>



<p>언급했던 것처럼 구글에는 &#8220;<a rel="noreferrer noopener" aria-label="스프린트 (opens in a new tab)" href="https://brunch.co.kr/@brunchjwshim/90" target="_blank">스프린트</a>&#8220;라는 집중업무 프로세스가 있는데 이 타임 타이머를 적극 활용한다고 해서 &#8220;구글 타이머&#8221;로도 유명해진 아이템이죠. 아예 공식 홈페이지에서는 구글 버전의 스페셜 에디션도 판매를 하고 있습니다.</p>



<figure class="wp-block-image"><img data-attachment-id="618" data-permalink="https://amati.io/2019/04/09/time-timer-story/time_timer_from_home_1/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?fit=3680%2C2456&amp;ssl=1" data-orig-size="3680,2456" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1484580193&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="time_timer_from_home_1" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?fit=620%2C414&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?fit=620%2C414&amp;ssl=1" alt="" class="wp-image-618" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?w=3680&amp;ssl=1 3680w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?resize=768%2C513&amp;ssl=1 768w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?resize=1024%2C683&amp;ssl=1 1024w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?w=1240&amp;ssl=1 1240w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_from_home_1.jpg?w=1860&amp;ssl=1 1860w" sizes="(max-width: 620px) 100vw, 620px" /><figcaption>타임타이머 오리지날. Image from <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://www.timetimer.com" target="_blank">https://www.timetimer.com</a></figcaption></figure>



<p>타임타이머의 버전은 오리지날부터 시작해서 크기 별로 많은 버전이 출시되었고, 손목시계, 디지털, 심지어 데스크톱 앱, Mobile/Watch 앱으로도 출시되었습니다. 하지만 어떤 파생버전도 오리지날 버전의 아날로그틱한 빨간색 시각적 효과를 제공하는 것은 어려워 보입니다.<br>그런면에서 오리지날에서 디자인이 약간 개선된 MOD 버전이 가장 좋은 선택이었던 것 같습니다.</p>



<p>시간이 다될 경우 알람을 울리게 할 수 있는데, 사무실 등에서는 곤란하겠지요. 그래서 알람 선택 스위치가 후면에 있습니다. 배터리는 AA형 한개만 사용합니다.</p>



<p>참고로 MOD 버전은 실리콘 커버가 있어 디자인을 개선하는 효과도 있고, 충격에 좀더 효과적으로 대비가 가능합니다.</p>



<figure class="wp-block-image"><img data-attachment-id="542" data-permalink="https://amati.io/time_timer_4/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?fit=1200%2C801&amp;ssl=1" data-orig-size="1200,801" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;1.7&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;DC-LX100M2&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1554210397&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;10.9&quot;,&quot;iso&quot;:&quot;200&quot;,&quot;shutter_speed&quot;:&quot;0.008&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="time_timer_4" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?fit=300%2C200&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?fit=620%2C414&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=620%2C414&#038;ssl=1" alt="" class="wp-image-542" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=1024%2C684&amp;ssl=1 1024w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=300%2C200&amp;ssl=1 300w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=768%2C513&amp;ssl=1 768w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=110%2C73&amp;ssl=1 110w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=420%2C280&amp;ssl=1 420w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?resize=644%2C430&amp;ssl=1 644w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_4.jpg?w=1200&amp;ssl=1 1200w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure>



<p>MOD 버전의 최대 설정 시간은 1시간(60분)이기 때문에 개인 업무에 활용하는 것도 좋지만 보통 1시간으로 설정하는 회의 시간에 활용하는 것도 좋을 것 같습니다. 참고로 공식 홈페이지에서는 5분, 20분, 2시간(구글 스페셜 버전) 등의 파생 버전도 <a rel="noreferrer noopener" aria-label="판매 (opens in a new tab)" href="https://www.timetimer.com/collections/all" target="_blank">판매</a>하고 있습니다.</p>



<p>업무 책상에 예쁘게 자리잡은 Time Timer MOD&#8230; 다만 아무리 효과가 좋은 아이템이라 하더라도 <mark>시간관리는 역시 개인의 의지가 가장 중요</mark>합니다. 타이머를 설정해놓고 유튜브나 인터넷만 본다면 효과가 없겠죠&#8230;?</p>



<figure class="wp-block-image"><img data-attachment-id="543" data-permalink="https://amati.io/time_timer_5/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?fit=1200%2C860&amp;ssl=1" data-orig-size="1200,860" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;2&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;DC-LX100M2&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;1554210658&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;12.5&quot;,&quot;iso&quot;:&quot;200&quot;,&quot;shutter_speed&quot;:&quot;0.008&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="time_timer_5" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?fit=300%2C215&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?fit=620%2C444&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=620%2C444&#038;ssl=1" alt="" class="wp-image-543" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=1024%2C734&amp;ssl=1 1024w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=300%2C215&amp;ssl=1 300w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=768%2C550&amp;ssl=1 768w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=110%2C79&amp;ssl=1 110w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=420%2C301&amp;ssl=1 420w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?resize=600%2C430&amp;ssl=1 600w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/time_timer_5.jpg?w=1200&amp;ssl=1 1200w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/09/time-timer-story/">타임타이머(Time Timer) 이야기</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2019/04/09/time-timer-story/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">552</post-id>	</item>
		<item>
		<title>HTTP/3 (HTTP-over-QUIC)</title>
		<link>https://amati.io/2019/04/04/http-3-quic/</link>
				<comments>https://amati.io/2019/04/04/http-3-quic/#respond</comments>
				<pubDate>Thu, 04 Apr 2019 06:52:27 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[Frontend 개발 이야기]]></category>
		<category><![CDATA[gQUIC]]></category>
		<category><![CDATA[HTTP-over-QUIC]]></category>
		<category><![CDATA[HTTP/3]]></category>
		<category><![CDATA[QUIC]]></category>
		<category><![CDATA[UDP]]></category>

		<guid isPermaLink="false">https://porchestra.me/?p=456</guid>
				<description><![CDATA[<p>QUIC은 Quick UDP Internet Connections 의 약자이며, 전송계층 프로토콜인 UDP 를 기반으로 TCP + TLS + HTTP 의 기능을 모두 구현하는 프로토콜입니다. QUIC 은 &#8220;quick&#8221;과 동일하게 &#8220;퀵&#8221;으로 발음합니다. Google에서 2012년에 최초로 개발했는데, 여담이지만 구글에서 개발했던 SPDY 기술이 HTTP/2의 기반 기술이었는데 역시 구글에서 개발한 QUIC이 HTTP/3의 기반 기술이 되었습니다. gQUIC vs QUIC-over-HTTP 현재는 IETF의 quicwg에서 관리하는 QUIC-over-HTTP 와 구글에서 자체 개발한 gQUIC이 분리되어 있습니다. 구글의 gQUIC에서 사용하는 암호화 기술은 TLS 1.3이 아닌 자체 암호화 기술이라는 점이 다른데요, IETF에서 표준화 작업이 진행되는 동안 구글에서도 IETF의 세부 명세를 받아들여 gQUIC을 발전시키고 있습니다. QUIC-over-HTTP&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/04/http-3-quic/">HTTP/3 (HTTP-over-QUIC)</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>QUIC은 Quick UDP Internet Connections 의 약자이며, 전송계층 프로토콜인 UDP 를 기반으로 TCP + TLS + HTTP 의 기능을 모두 구현하는 프로토콜입니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="600" data-permalink="https://amati.io/2019/04/04/http-3-quic/http3-1-1/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/http3-1-1.png?fit=473%2C244&amp;ssl=1" data-orig-size="473,244" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="http3-1-1" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/http3-1-1.png?fit=300%2C155&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/http3-1-1.png?fit=473%2C244&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/http3-1-1.png?w=620&#038;ssl=1" alt="" class="wp-image-600" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/http3-1-1.png?w=473&amp;ssl=1 473w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/http3-1-1.png?resize=300%2C155&amp;ssl=1 300w" sizes="(max-width: 473px) 100vw, 473px" data-recalc-dims="1" /></figure></div>



<p>QUIC 은 &#8220;quick&#8221;과 동일하게 &#8220;퀵&#8221;으로 발음합니다. Google에서 2012년에 최초로 개발했는데, 여담이지만 구글에서 개발했던 <a href="https://d2.naver.com/helloworld/140351" target="_blank" rel="noreferrer noopener" aria-label="SPDY (opens in a new tab)">SPDY</a> 기술이 HTTP/2의 기반 기술이었는데 역시 구글에서 개발한 QUIC이 HTTP/3의 기반 기술이 되었습니다.</p>



<h3>gQUIC vs QUIC-over-HTTP</h3>



<p>현재는 IETF의 <a rel="noreferrer noopener" aria-label="quicwg (opens in a new tab)" href="https://github.com/quicwg" target="_blank">quicwg</a>에서 관리하는 QUIC-over-HTTP 와 구글에서 자체 개발한 gQUIC이 분리되어 있습니다. 구글의 gQUIC에서 사용하는 암호화 기술은 TLS 1.3이 아닌 자체 암호화 기술이라는 점이 다른데요, IETF에서 표준화 작업이 진행되는 동안 구글에서도 IETF의 세부 명세를 받아들여 gQUIC을 발전시키고 있습니다.</p>



<h3>QUIC-over-HTTP to HTTP/3</h3>



<p>HTTP/1.1은 1999년에 발표되고, HTTP/2.0이 2015년에 발표되어 현재 활발하게 사용되고 있는데, IETF의 QUIC-over-HTTP 가 이제 &#8216;HTTP/3&#8217;으로 개명하는 것으로 확정되어 2019년 안에 발표될 예정입니다.</p>



<hr class="wp-block-separator"/>



<p>HTTP/1.1, HTTP/2에 사용하는 TCP와 QUIC에 사용하는 UDP의 기본적인 차이점은 다음과 같습니다.</p>



<table class="wp-block-table"><tbody><tr><td>TCP</td><td>UDP</td></tr><tr><td>재전송과 흐름제어/혼잡제어를 통해 신뢰성을 보장</td><td>한번 전송하면 끝나는 방식으로 클라이언트의 데이터 수신에 대해 책임을 지지 않음</td></tr><tr><td>복잡한 연결 설정이 필요함</td><td>연결 설정이 없음</td></tr><tr><td>속도가 상대적으로 느림</td><td>속도가 상대적으로 빠름</td></tr></tbody></table>



<p>두 프로토콜의 차이를 보면 QUIC의 특징을 이해할 수 있습니다.</p>



<ul><li>QUIC은 TCP + TLS 보다 더 빠른 핸드쉐이크를 지원하기 때문에 지연시간을 많이 줄일 수 있습니다.</li><li>TCP의 인증과 암호화는 TLS를 통해 지원했지만 QUIC은 TLS 1.3을 포함하여 지원하고 있습니다.</li><li>원래의 UDP에서 지원하지 않던 패킷 재전송, 흐름제어/혼잡제어 기능을 UDP위에 새로운 계층을 추가하여 해결하였습니다.</li><li>현재의 TCP보다 패킷 손실에 있어 유리합니다.</li></ul>



<figure class="wp-block-image"><img data-attachment-id="605" data-permalink="https://amati.io/2019/04/04/http-3-quic/0rtt-graphic/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?fit=997%2C536&amp;ssl=1" data-orig-size="997,536" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="0rtt-graphic" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?fit=300%2C161&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?fit=620%2C333&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?w=620&#038;ssl=1" alt="" class="wp-image-605" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?w=997&amp;ssl=1 997w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?resize=300%2C161&amp;ssl=1 300w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0rtt-graphic.png?resize=768%2C413&amp;ssl=1 768w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /><figcaption>image from <a href="https://blog.chromium.org/2015/04/a-quic-update-on-googles-experimental.html" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://blog.chromium.org/2015/04/a-quic-update-on-googles-experimental.html</a></figcaption></figure>



<p>프로토콜은 이전 http와 마찬가지로 &#8216;https://&#8217; 를 그대로 사용합니다. 그렇기 때문에 첫 핸드쉐이크는 TCP를 통해 수행이 되는데, 연결 설정 후 QUIC을 지원하는 서버임을 클라이언트에 알려주면 그 후로는 UDP를 통해 데이터가 전송이 됩니다.</p>



<hr class="wp-block-separator"/>



<p>QUIC을 개발한 구글은 자사의 서비스와 크롬 브라우저에 우선적으로 적용하였으며, 크롬 브라우저로 구글 서비스를 이용하면 alt-svc 헤더를 통해 실제로 QUIC 프로토콜을 사용하는 것을 확인할 수 있습니다. (port 443은 UDP의 well-known port입니다.)<br>구글의 발표에 따르면 QUIC 적용으로 인해 자사 서비스의 퍼포먼스 향상에 도움이 되었다고 합니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="601" data-permalink="https://amati.io/2019/04/04/http-3-quic/alt-svc/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?fit=1010%2C706&amp;ssl=1" data-orig-size="1010,706" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="alt-svc" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?fit=300%2C210&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?fit=620%2C433&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?w=620&#038;ssl=1" alt="" class="wp-image-601" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?w=1010&amp;ssl=1 1010w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?resize=300%2C210&amp;ssl=1 300w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/alt-svc.png?resize=768%2C537&amp;ssl=1 768w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure></div>



<p>위에서 언급한것처럼 아직 표준이 확정되지 않은 IETF의 QUIC-over-HTTP는 현재 웹브라우저에 적용된 사례가 없고 양대 HTTP server인 Apache와 nginx에서도 아직 지원한다고 발표하지 않은 상태입니다.</p>



<p>References :</p>



<ul><li>The road to QUIC : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://blog.cloudflare.com/the-road-to-quic/" target="_blank">https://blog.cloudflare.com/the-road-to-quic/</a></li><li>HTTP/3 explained : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://daniel.haxx.se/http3-explained/" target="_blank">https://daniel.haxx.se/http3-explained/</a></li><li>HTTP-over-QUIC to be renamed HTTP/3 : <a href="https://www.zdnet.com/article/http-over-quic-to-be-renamed-http3/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://www.zdnet.com/article/http-over-quic-to-be-renamed-http3/</a></li></ul>
<p>The post <a rel="nofollow" href="https://amati.io/2019/04/04/http-3-quic/">HTTP/3 (HTTP-over-QUIC)</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2019/04/04/http-3-quic/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">456</post-id>	</item>
		<item>
		<title>모바일을 위한 DTD의 종류와 특징</title>
		<link>https://amati.io/2009/02/26/dtd-for-old-mobile-device/</link>
				<comments>https://amati.io/2009/02/26/dtd-for-old-mobile-device/#respond</comments>
				<pubDate>Thu, 26 Feb 2009 02:07:59 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[HTML & CSS]]></category>
		<category><![CDATA[DTD]]></category>
		<category><![CDATA[xhtml-mp]]></category>
		<category><![CDATA[XHTML/CSS]]></category>
		<category><![CDATA[모바일]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=188</guid>
				<description><![CDATA[<p>모바일 기기는 다음과 같은 특성을 가집니다. 적은 메모리 용량, 적은 저장 공간, 작은 스크린 사이즈, 느린 CPU, 입력방법의 제한, 전원(밧데리)의 시간 제한 초기의 모바일 기기들은 웹을 사용하기에는 성능이나 메모리, 스크린사이즈가 매우 조악하였기 때문에 모바일 기기에 특화된 언어로 WML(wireless Markup Language)를 사용했습니다. 현재 쓰이는 HTML 과는 차이가 있으며, XML기반으로 만들어졌기 때문에 문법 검사에 매우 엄격합니다. Deck, Card 라는 특이한 개념(페이지와 유사하여, 하나의 WML문서에 여러개의 card를 만들어 여러페이지의 문서를 만들 수 있음)을 제외하면 사용되는 태그는 HTML 과 유사한 면이 있지만, 문법검사가 XHTML과 비슷하여 xml 문법을 따르기 때문에 문법 오류가 자동 수정되지 않습니다.&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2009/02/26/dtd-for-old-mobile-device/">모바일을 위한 DTD의 종류와 특징</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>모바일 기기는 다음과 같은 특성을 가집니다.</p>



<blockquote class="wp-block-quote"><p>적은 메모리 용량, 적은 저장 공간, 작은 스크린 사이즈, 느린 CPU, 입력방법의 제한, 전원(밧데리)의 시간 제한</p></blockquote>



<p>초기의 모바일 기기들은 웹을 사용하기에는 성능이나 메모리, 스크린사이즈가 매우 조악하였기 때문에 모바일 기기에 특화된 언어로 WML(wireless Markup Language)를 사용했습니다. 현재 쓰이는 HTML 과는 차이가 있으며, XML기반으로 만들어졌기 때문에 문법 검사에 매우 엄격합니다.</p>



<p>Deck, Card 라는 특이한 개념(페이지와 유사하여, 하나의 WML문서에 여러개의 card를 만들어 여러페이지의 문서를 만들 수 있음)을 제외하면 사용되는 태그는 HTML 과 유사한 면이 있지만, 문법검사가 XHTML과 비슷하여 xml 문법을 따르기 때문에 문법 오류가 자동 수정되지 않습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;?xml version="1.0"?>
&lt;!DOCTYPE wml PUBLIC "-//PHONE.COM//DTD WML 1.1//EN" "http://www.phone.com/dtd/wml11.dtd" >
&lt;wml>
&lt;card id="main">
&lt;p mode="wrap">This is a sample WML page.
&lt;/card>
&lt;/wml></pre>



<p>더 정확하게 하자면 WML 은 HTML 처럼 문서의 DTD가 아닌 모바일 기기의 응용프로그램을 개발하기 위한 플랫폼이기 때문에 DTD로 분류되기에는 좀 애매하지요.</p>



<p>대신 웹브라우저를 위한 문서가 아니라 모바일 앱을 개발하기 위한 DTD이면서 HTML의 장점을 가져오는 것이 가능합니다.<br>현재 WML 2.0 규격이 있으며 WML 1.x 규격과 XHTML-MP 의 body시스템을 혼용하여 사용할 수 있기 때문에 두 시스템의 장점을 모두 취할 수 있습니다.</p>



<p>위에 언급했던 것처럼, 모바일 기기의 특성 상 보통 PC의 웹브라우저들이 지원하는 Quirks mode, HTML4.01, XHTML1.0 등을 full-spec으로 폭넓게 지원하는 것이 어렵습니다.<br>모바일 기기에서도 PC와 마찬가지로 Quirks mode (DTD선언하지 않음), HTML4.01, XHTML1.0 을 지원하고 있지만, 모바일 브라우저에서도 각 DTD에 맞게 문서를 적절히 처리하려면 모바일용 DTD를 넣는 것이 좋습니다.</p>



<p>그래도 모바일용의 웹브라우저에서 표준을 지원하는 DTD가 있긴 있었는데 이것이 XHTML mobile profile 입니다. HTML5와 차세대 경쟁을 했던 그 xhtml의 모바일 버전이지요.<br>PC 의 그것과 비교하면 <strong>HTML 4.01 strict</strong> 에 가깝습니다.</p>



<p>XHTML mobile profile 규격은 세가지가 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.0//EN"
"http://www.wapforum.org/DTD/xhtml-mobile10.dtd">

&lt;!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.1//EN"
"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile11.dtd">

&lt;!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN"
"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd"></pre>



<p>각각의 차이는 다음과 같습니다.</p>



<table class="wp-block-table aligncenter"><tbody><tr><td>version</td><td>description</td></tr><tr><td>1.0</td><td>PC에서 사용되는 XHTML 1.0 basic 규격을 기초로 하여 모바일에 최적화된 DTD로 제작 </td></tr><tr><td>1.1</td><td>ECMAScript(자바스크립트)의 mobile profile을 지원함</td></tr><tr><td>1.2</td><td>폼과 object의 지원 추가</td></tr></tbody></table>



<p>W3C에서 정한 WAP2.0규격에서 사용하는 마크업언어는 XHTML-MP 입니다. WML 2.0에서는 기존 page개념을 가지고 있는 wml1.x 규격과 보통 HTML문서에서 사용되는 body 속성을 동시에 이용할 수 있습니다.<br>만약 모바일 웹브라우저에서 접속할 수 있는 사이트를 제작하고자 한다면 대부분의 태그와 속성을 지원하는 XHTML-MP 1.2 규격을 사용하는 것이 가장 적절합니다.</p>



<p>모바일 쪽의 발전은 다음과 같이 가지가 쳐져서 발전했다고 보면 됩니다.</p>



<blockquote class="wp-block-quote"><p>HTML 4.0 -&gt; XHTML1.0 -&gt; XHTML Basic(모바일 환경에 맞게 XHTML의 기본기능으로 재구성함) -&gt; XHTML Mobile Profile (XHTML basic+ 추가태그)</p></blockquote>



<p>Ps. 모바일에서는 PC와는 성능 차이가 많기 때문에 스펙의 제한이 많습니다. 대표적으로 CSS속성이 지원이 안되는 것이 많기 때문에 (심지어 display:inline-block, position:fixed 같은 속성) 개발 시에 대부분의 웹브라우저가 모두 지원하는 보편적인 속성을 사용하는 것이 좋습니다.</p>



<blockquote class="wp-block-quote"><p>참고 : XHTML basic, XHTML-MP 1.x 각 버전별로 지원되는 태그의 차이점 <a href="https://mobiforge.com/design-development/comparison-xhtml-mobile-profile-and-xhtml-basic" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://mobiforge.com/design-development/comparison-xhtml-mobile-profile-and-xhtml-basic</a></p></blockquote>



<p>Ps 2. 이젠 이런 번거로운 규격이 없어졌고 모바일 단말기들의 성능도 훨씬 발달했기 때문에 <code>&lt;!doctype html></code> 으로 사용하면 됩니다.<br>스마트폰 시대와 iOS, Android의 세계가 되면서 이제 모바일용 DTD는 유명무실화 되었지요.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;!DOCTYPE HTML></pre>
<p>The post <a rel="nofollow" href="https://amati.io/2009/02/26/dtd-for-old-mobile-device/">모바일을 위한 DTD의 종류와 특징</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2009/02/26/dtd-for-old-mobile-device/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">188</post-id>	</item>
		<item>
		<title>웹사이트 최적화 : 8bit PNG 활용하기</title>
		<link>https://amati.io/2009/02/18/use-8bit-png-for-website/</link>
				<comments>https://amati.io/2009/02/18/use-8bit-png-for-website/#comments</comments>
				<pubDate>Wed, 18 Feb 2009 02:18:20 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[Frontend 개발 이야기]]></category>
		<category><![CDATA[8bit PNG]]></category>
		<category><![CDATA[gAMA chunk]]></category>
		<category><![CDATA[pngcrush]]></category>
		<category><![CDATA[TweakPNG]]></category>
		<category><![CDATA[웹사이트 최적화]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=183</guid>
				<description><![CDATA[<p>21세기가 시작된 지 거의 10년이 다 되어가는 2009년에 이르러 네트워크와 인터넷은 놀라운 발전을 이뤄왔습니다. 웹브라우저 시장은 MS의 Internet Explorer가 독점하는 상황을 벗어나서, 지금은 파이어폭스, 사파리, 오페라, 크롬, … 기타 등등 수많은 브라우저가 서로 웹표준을 향해 경쟁하는 행복한(?) 시대가 되었지요. 하지만, 이런 상황에서도 웹브라우저가 공식적으로 지원하는 이미지 형식은 아직까지는 GIF, JPG, PNG 세 가지 뿐입니다. (BMP는 논외) 그 중에서 가장 돋보이는 포맷은 바로 PNG 인데요&#8230; 하지만, 이전에 작성했던 나를 미치게 하는 PNG&#160;라는 포스트에서도 밝혔듯이.. IE6 의 점유율이 10% 이하로 떨어지지 않는 한, PNG의 혜택을 누리기에는 무리가 있습니다. 이런 상황에서 갑자기 8bit&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2009/02/18/use-8bit-png-for-website/">웹사이트 최적화 : 8bit PNG 활용하기</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>21세기가 시작된 지 거의 10년이 다 되어가는 2009년에 이르러 네트워크와 인터넷은 놀라운 발전을 이뤄왔습니다. 웹브라우저 시장은 MS의 Internet Explorer가 독점하는 상황을 벗어나서, 지금은 파이어폭스, 사파리, 오페라, 크롬, … 기타 등등 수많은 브라우저가 서로 웹표준을 향해 경쟁하는 행복한(?) 시대가 되었지요.</p>



<p>하지만, 이런 상황에서도 웹브라우저가 공식적으로 지원하는 이미지 형식은 아직까지는 GIF, JPG, PNG 세 가지 뿐입니다. (BMP는 논외) 그 중에서 가장 돋보이는 포맷은 바로 <strong>PNG</strong> 인데요&#8230; 하지만, 이전에 작성했던 <a href="https://amati.io/2008/04/01/png-bug-in-ie6/" target="_blank" rel="noreferrer noopener" aria-label="나를 미치게 하는 PNG (opens in a new tab)">나를 미치게 하는 PNG</a>&nbsp;라는 포스트에서도 밝혔듯이.. IE6 의 점유율이 10% 이하로 떨어지지 않는 한, PNG의 혜택을 누리기에는 무리가 있습니다.</p>



<p>이런 상황에서 갑자기 8bit PNG 를 활용하자니… 이게 무슨 소린가 하시겠죠? 저도 그랬습니다. IE6 이 버티고 있는 한, png의 p자도 꺼내지 말아야 할 상황이 아닌가! 라고 반문했지요.</p>



<p>png의 포맷은 몇가지가 있습니다. color field에 따라 8bit, 24bit 로 나뉘는데요&#8230;</p>



<table class="wp-block-table"><tbody><tr><td>bit</td><td>특징</td></tr><tr><td>8bit</td><td><strong>Pallete PNG</strong><br>이미지 내의 색상을 index화 하여 256 칼라를 사용할 수 있다는 GIF 와 비슷한 특성을 가지지만, 동일 이미지의 GIF 파일보다 크기가 작습니다. 그 외의 속성은 png와 같습니다. (Alpha Transparency, No Animated)</td></tr><tr><td>24bit</td><td><strong>Truecolor PNG</strong><br>JPG와 같은 1670만 칼라를 지원하며, JPG와 달리 이미지의 손실(열화)이 없습니다. 그래서 이미지의 크기는 JPG보다 크지만, JPG의 최상퀄리티의 파일 크기에 비하면 오히려 작다고 할 수 있습니다. 그외에 역시 Alpha Transparency를 지원하며 애니메이션은 지원되지 않습니다.</td></tr><tr><td>Apng</td><td><strong>Animated PNG</strong><br>애니메이션이 지원되는 png입니다.</td></tr></tbody></table>



<p>PNG 에 대한 자세한 원전은 다음 URL 에서 얻을 수 있습니다. <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://tools.ietf.org/html/rfc2083" target="_blank">https://tools.ietf.org/html/rfc2083</a></p>



<p>여기서 주목할 만한 것은 <strong>8bit PNG</strong> 입니다. GIF와 성질은 거의 비슷한데 GIF보다 파일 크기가 대체로 더 작습니다. 게다가 IE6 에서도 8bit PNG는 GIF와 비슷한 Transparency 를 지원하고 있습니다. 적어도 24bit PNG 처럼 투명 영역이 회색으로 보이는 문제가 없지요. 그래서 8bit PNG를 GIF를 대체하는 웹이미지로 사용할 수 있지 않을까 하는 것이 발상의 전환이죠.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="665" data-permalink="https://amati.io/2009/02/18/use-8bit-png-for-website/ietestpng/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ietestpng.png?fit=500%2C286&amp;ssl=1" data-orig-size="500,286" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ietestpng" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ietestpng.png?fit=300%2C172&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ietestpng.png?fit=500%2C286&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ietestpng.png?w=620&#038;ssl=1" alt="" class="wp-image-665" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ietestpng.png?w=500&amp;ssl=1 500w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ietestpng.png?resize=300%2C172&amp;ssl=1 300w" sizes="(max-width: 500px) 100vw, 500px" data-recalc-dims="1" /></figure></div>



<p>다만 PNG 는 이전 포스트에서도 밝혔듯, 각각의 웹브라우저에서 실제 색상은 다르게 표현될 수 있습니다.</p>



<p>직접적인 원인은 PNG 이미지가 자체적으로 감마값을 가지고 있고, 이 값을 해석하는 브라우저가 상이한 결과를 내기 때문인데요…</p>



<p>PNG 파일의 구조는 8bit의 헤더(png이미지라는 것을 알리는 부분)와 여러 개의 chunk 라는 것으로 구성되어 있습니다. 디카로 사진 좀 찍어보신 분들은 아시겠지만 jpg파일도 이미지뷰어로 보면 각종 정보(카메라기종, 조리개, 셔터, WB 등)가 따로 저장되는 것을 볼 수 있는데요, PNG도 실제 이미지 데이터와 별도로 이러한 정보들이 하나의 조각(chunk)으로 저장된다고 보시면 비슷합니다. 색상의 불일치 문제를 일으키는 것은 바로 <code>gAMA chunk</code> 라는 것인데요, 이 값을 제대로 처리하는 웹브라우저가 있고, 이를 제대로 처리하지 못하는 웹브라우저가 있기 때문에 색상차이가 보이게 되는 것이지요.</p>



<p>결국, 모든 웹 브라우저에서 같게 표현되게 하려면 gAMA chunk 를 없애는 과정이 필요합니다. 사실 이 chunk를 제거하는 것은 근본적인 해결책은 아닐 겁니다. 근본적으로 해결하기 위해서는, png의 감마 값을 모든 브라우저에서 제대로 지원하고 JPG나 GIF도 이를 지원해야 한다는 뜻입니다. 그래서 조금 우회하여 <strong>png 도 다른 이미지와 마찬가지로 하향평준화 시킨다..</strong> 라고 이해하는 것이 좋을 것 같습니다.</p>



<p><a href="https://www.softpedia.com/get/Multimedia/Graphic/Graphic-Others/TweakPNG.shtml" target="_blank" rel="noreferrer noopener" aria-label="TweakPNG (opens in a new tab)">TweakPNG</a> 이라는 프로그램으로 샘플 PNG 파일의 정보를 열어보았습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="666" data-permalink="https://amati.io/2009/02/18/use-8bit-png-for-website/chunk11/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/chunk11.png?fit=740%2C356&amp;ssl=1" data-orig-size="740,356" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="chunk11" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/chunk11.png?fit=300%2C144&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/chunk11.png?fit=620%2C298&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/chunk11.png?w=620&#038;ssl=1" alt="" class="wp-image-666" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/chunk11.png?w=740&amp;ssl=1 740w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/chunk11.png?resize=300%2C144&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure></div>



<p>뭔가 굉장히 많죠? IHDR이 png파일의 헤더이며 나머지 bKGD, sRGB, sBIT, pHYs … 뭔가 못알아볼 데이터들이 많지만 어쨌든 문제가 되는 chunk는 위에 표시한 gAMA chunk입니다. 여기서 gAMA값을 삭제하는 것 만으로 png파일을 웹에서 정상적으로 표기하게 하는 것이 가능합니다. 드디어 문제 해결! 24bit의 Truecolor PNG는 어쩔 수 없지만 GIF를 대신하여 8bit Palleted PNG 를 활용할 수 있습니다.</p>



<p>다만 이것에 만족하지 않고 웹사이트를 위한 이미지 최적화를 위해 PNG 파일 자체의 다이어트를 할 수 없을까 고민해볼 수도 있을 것 같네요. 다행히 방법은 있었습니다. gAMA값 외에도 이미지를 표기하는데에 굳이 필요없는 정보들을 삭제하고 데이터영역을 다시 압축하여 최적화시킬 수 있는 툴이 몇가지 존재합니다.</p>



<ul><li>pngcrush : <a href="https://sourceforge.net/projects/pmt/files/pngcrush-executables/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://sourceforge.net/projects/pmt/files/pngcrush-executables/</a></li><li>pngrewrite : <a rel="noreferrer noopener" aria-label="http://entropymine.com/jason/pngrewrite/ (opens in a new tab)" href="http://entropymine.com/jason/pngrewrite/" target="_blank">http://entropymine.com/jason/pngrewrite/</a></li><li>OptiPNG : <a rel="noreferrer noopener" aria-label="http://optipng.sourceforge.net/ (opens in a new tab)" href="http://optipng.sourceforge.net/" target="_blank">http://optipng.sourceforge.net/</a></li><li>PNGOut : <a rel="noreferrer noopener" aria-label="http://advsys.net/ken/utils.htm (opens in a new tab)" href="http://advsys.net/ken/utils.htm" target="_blank">http://advsys.net/ken/utils.htm</a></li></ul>



<p>이것저것 테스트를 해보았는데요, 첫번째 제시된 pngcrush의 경우 windows의 명령프롬프트 위에서 실행해야 하는 불편함이 존재했지만 가장 확실할 것 같아 테스트해보았습니다. 실행 방법은 조금 복잡합니다. 간단히 프롬프트 상에서 pngcrush 라고 입력하면 여러가지 옵션이 나옵니다. 일단 레퍼런스 코드가 있어서 다음과 같이 입력해보았습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="msdos" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">C:>pngcrush -rem alla -brute -reduce sample.png sample1.png</pre>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="668" data-permalink="https://amati.io/2009/02/18/use-8bit-png-for-website/chunk33/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/chunk33.png?fit=766%2C500&amp;ssl=1" data-orig-size="766,500" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="chunk33" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/chunk33.png?fit=300%2C196&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/chunk33.png?fit=620%2C405&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/chunk33.png?w=620&#038;ssl=1" alt="" class="wp-image-668" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/chunk33.png?w=766&amp;ssl=1 766w, https://i1.wp.com/amati.io/wp-content/uploads/2019/04/chunk33.png?resize=300%2C196&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure></div>



<p>위 명령을 실행하니 마지막에 나온 정보로 17.16%의 파일 사이즈를 줄일 수 있다고 나오는군요. 그래서 이렇게 나온 파일을 다시 TweakPNG로 열어본 결과 꼭 필요한 헤더와 푸터 chunk(IEND), 그리고 데이터 영역(IDAT)을 제외하고 모든 chunk 가 없어진 것을 확인할 수 있었습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="669" data-permalink="https://amati.io/2009/02/18/use-8bit-png-for-website/chunk22/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/chunk22.png?fit=740%2C356&amp;ssl=1" data-orig-size="740,356" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="chunk22" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/chunk22.png?fit=300%2C144&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/chunk22.png?fit=620%2C298&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/chunk22.png?w=620&#038;ssl=1" alt="" class="wp-image-669" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/chunk22.png?w=740&amp;ssl=1 740w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/chunk22.png?resize=300%2C144&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure></div>



<p>아래 상태표시줄을 확인하면 sample.png 파일의 크기가 13479byte에서 11166byte로 압축되었음을 알 수 있습니다. GIF 에 비해서 PNG 가 용량 면에서 효율적인데도, 덤으로 필요없는 정보를 다이어트 하여 더 크기를 줄일 수 있는 좋은 팁입니다.</p>



<p>이 과정은 조금 복잡하지만, 이 작업을 어느정도 자동화시키면 충분히 실무에도 활용 가능할 것으로 보고 있습니다. 저도 현재 진행중인 모 개편 프로젝트에서 8bit png의 활용과 함께 CSS 스프라이트 등의 최적화 방안을 적용하여 진행하고 있는 중입니다.</p>



<p>png파일이 있는 폴더 대상으로 pngcrush를 실행할 수 있는 방법은 다음과 같습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="shell" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">C:>pngcrush -rem alla -brute -reduce -d "폴더명" *.png</pre>



<p>위와 같이 하면 &#8220;폴더명&#8221;의 폴더가 생성이 되고, 그 안에 pngcrush가 처리한 png파일이 모두 저장이 됩니다.<br>-brute 옵션은 파일을 줄일 수 있는 방법을 모두 수행하는 방법이기 때문에 시간이 오래걸린다는 단점이 있지만 요즘의 컴퓨터 퍼포먼스가 좋기 때문에 웹 환경에서 생성되는 png 파일들이라면 많은 시간은 걸리지 않습니다. 실제로 저는 통검개편 작업에서 생성된 15개 정도의 png파일을 모두 돌리는데&#8230;&nbsp;<strong>30초</strong>&nbsp;정도 걸린 것 같습니다.</p>



<blockquote class="wp-block-quote"><p><em><span style="color:#f78da7" class="tadv-color">이 포스트는 NHN WSG(Web Standardization Guide) 블로그와 네이버의 개인 블로그에 함께 연재되고 있습니다.</span></em></p></blockquote>
<p>The post <a rel="nofollow" href="https://amati.io/2009/02/18/use-8bit-png-for-website/">웹사이트 최적화 : 8bit PNG 활용하기</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2009/02/18/use-8bit-png-for-website/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">183</post-id>	</item>
		<item>
		<title>IE6 의 CSS 다중선택자 버그에 대해</title>
		<link>https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/</link>
				<comments>https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/#respond</comments>
				<pubDate>Thu, 19 Jun 2008 09:35:54 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[HTML & CSS]]></category>
		<category><![CDATA[HTML5 & CSS3]]></category>
		<category><![CDATA[IE6 버그]]></category>
		<category><![CDATA[Multi class]]></category>
		<category><![CDATA[다중선택자]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=177</guid>
				<description><![CDATA[<p>CSS에서 사용하는 다중 선택자(Multi Class)란 동일 엘리먼트에 여러개의 선택자(id, class)를 동시에 적용하기 위한 목적으로 여러개의 선택자를 사용하는 것을 말합니다. CSS1에서 선택자의 개념이 사용된 후, CSS2에서 다중 선택자가 추가되어 사용되고 있는데요, CSS를 사용해 웹사이트를 개발하다 보면 다중선택자는 매우 편리한 존재임을 알 수 있습니다. 위의 코드는 다중 선택자를 적용하여 foo 클래스와 bar 클래스의 속성을 하나의 엘리먼트에 동시에 적용한 예제입니다. 또한 클래스를 붙여서 선언하게 되면 평소에는 적용되지 않다가 두 클래스가 동시에 적용될 경우에만 별도의 효과를 주는 것도 가능합니다.이렇게 여러 개의 클래스를 하나의 엘리먼트에 적용하여 서로 다른 효과를 동시에 적용할 수 있고, 이 다중&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/">IE6 의 CSS 다중선택자 버그에 대해</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>CSS에서 사용하는 <strong>다중 선택자(Multi Class)</strong>란 동일 엘리먼트에 여러개의 선택자(id, class)를 동시에 적용하기 위한 목적으로 여러개의 선택자를 사용하는 것을 말합니다.</p>



<p>CSS1에서 선택자의 개념이 사용된 후, CSS2에서 다중 선택자가 추가되어 사용되고 있는데요, CSS를 사용해 웹사이트를 개발하다 보면 다중선택자는 매우 편리한 존재임을 알 수 있습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="678" data-permalink="https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/ex1/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex1.gif?fit=508%2C91&amp;ssl=1" data-orig-size="508,91" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ex1" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex1.gif?fit=300%2C54&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex1.gif?fit=508%2C91&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex1.gif?w=620&#038;ssl=1" alt="" class="wp-image-678" data-recalc-dims="1"/></figure></div>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;style>
.foo { background:yellow; }
.bar { border:solid 4px red; }
.foo.bar { border-style: dashed; }
&lt;/style>

&lt;div class="foo">foo&lt;/div>
&lt;div class="bar">bar&lt;/div>
&lt;div class="foo bar">foo bar&lt;/div></pre>



<p>위의 코드는 다중 선택자를 적용하여 foo 클래스와 bar 클래스의 속성을 하나의 엘리먼트에 동시에 적용한 예제입니다. 또한 클래스를 붙여서 선언하게 되면 평소에는 적용되지 않다가 두 클래스가 동시에 적용될 경우에만 별도의 효과를 주는 것도 가능합니다.<br>이렇게 여러 개의 클래스를 하나의 엘리먼트에 적용하여 서로 다른 효과를 동시에 적용할 수 있고, 이 다중 선택자는 3개 이상도 사용이 가능합니다.</p>



<p>만약 클래스 내의 css속성이 겹친다면 뒷쪽에 선언된 클래스의 css속성을 우선하지만 (덮어쓰기 효과) 만약 <code>!important</code> 가 속성에 포함되어 있을 경우 순서에 상관없이 해당 속성을 우선 적용하게 됩니다.</p>



<p>그래서 CSS개발하시는 분은 대부분 다중 선택자를 매우 유용하게 사용하고 있지만, IE6에서는 <strong>관련 버그가 존재</strong>하기 때문에 사용에 주의해야 합니다.</p>



<h4>1. id와 class 를 동시 조합하여 이용시, 나중에 선언된 다중 선택자 구문 무시</h4>



<p>이 부분은 NHN NULI의 css가이드를 참고하였습니다. IE6의 경우 id와 class를 다중 선택자로 적용할 때에 나중에 선언된 다중 선택자를 무시하는 버그가 존재합니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="679" data-permalink="https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/ex2/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex2.gif?fit=509%2C113&amp;ssl=1" data-orig-size="509,113" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ex2" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex2.gif?fit=300%2C67&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex2.gif?fit=509%2C113&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex2.gif?w=620&#038;ssl=1" alt="" class="wp-image-679" data-recalc-dims="1"/></figure></div>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;style>
#id.class1{background:#f00;}
#id.class2{background:#0f0; width:200px;} /* Does not exist in the IE6 */ 
#id2.class2{background:#00f; width:200px;} 
#id2.class3{background:#0f0; width:300px;} /* Does not exist in the IE6 */ 
#id.class3{background:#f00; width:300px; font-weight:bold;} /* Does not exist in the IE6 */ 
&lt;/style>
&lt;div id="id" class="class1">class1&lt;/div>
&lt;div id="id" class="class2">class2&lt;/div>
&lt;div id="id2" class="class2">class2&lt;/div>
&lt;div id="id2" class="class3">class3&lt;/div>
&lt;div id="id" class="class3">class3&lt;/div></pre>



<p>원래 위의 예제에서는 그림처럼 보이는 것이 바른 렌더링입니다. 하지만 IE6에서는 예제에서 2, 4, 5번째 줄에 해당하는 부분을 무시하게 됩니다. 아래 이미지처럼요.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="680" data-permalink="https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/ex3/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex3.gif?fit=509%2C113&amp;ssl=1" data-orig-size="509,113" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ex3" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex3.gif?fit=300%2C67&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex3.gif?fit=509%2C113&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/ex3.gif?w=620&#038;ssl=1" alt="" class="wp-image-680" data-recalc-dims="1"/></figure></div>



<p>따라서 IE6 을 위해서라면, 붙여서 쓰는 다중 선택자를 사용할 때에는 id와 class를 동시에 사용하지 않고, <strong>class만 사용하는 것</strong>을 권장합니다.</p>



<h4>2. class 조합하여 이용시, 앞에 선언된 class 무시</h4>



<p>하지만 불쌍한 IE6을 생각해서 class만 가지고 다중 선택자를 구성했음에도 불구하고, 특정 상황에서는 또 오작동을 해버립니다. class만으로 다중 선택자를 구성할 때 예를 들어 .foo.bar{} 라는 클래스를 구성하면 IE6은 앞의 .foo를 무시하고 .bar{} 라는 클래스로 인식하게 됩니다.</p>



<blockquote class="wp-block-quote"><p><strong>* 원래 코드</strong><br>.foo { background:yellow; }<br>.bar { border:solid 4px red; }<br>.foo.bar { border-style: dashed; }<br></p><p><strong>* IE6이 인식하는 코드</strong><br>.foo { background:yellow; }<br>.bar { <del>border:solid 4px red;</del> } /* border 속성 중 border-style 속성이 삭제됨 */<br><del>.foo</del>.bar { border-style: dashed; } /* bar class의 border-style 속성이 오버라이딩됨 */</p></blockquote>



<p>이를 이미지로 보여드리면 다음과 같습니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="681" data-permalink="https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/ex4/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex4.gif?fit=460%2C85&amp;ssl=1" data-orig-size="460,85" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ex4" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex4.gif?fit=300%2C55&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex4.gif?fit=460%2C85&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/ex4.gif?w=620&#038;ssl=1" alt="" class="wp-image-681" data-recalc-dims="1"/></figure></div>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;style>
.foo { background: yellow; }
.bar { border: solid 4px red; }
.foo.bar { border-style: dashed; }
&lt;/style>
&lt;div class="foo">foo!&lt;/div>
&lt;div class="bar">bar!&lt;/div>
&lt;div class="foo bar">foo bar!&lt;/div></pre>



<p>원래 bar class의 경우 border-style 속성이 solid임에도 불구하고 IE6에선 <strong>.foo.bar 를 .bar로 인식함</strong>에 따라 border-style이 dashed 로 모두 교체된 것을 확인할 수 있습니다. 1번 항에서 다루었던 버그도 이 버그의 영향이 겹쳐서 생긴 문제가 아닐까 합니다.</p>



<p>이 버그를 회피하기 위해서는 class를 붙여서 선언하는 다중 선택자를 사용하지 않는 것이 최선입니다. 하지만 CSS작성 중의 편의를 위해서 붙여서 선언해야 할 경우엔 뒤에 붙이는 class명을 겹치지 않도록 사용하는 것도 방법입니다.</p>



<blockquote class="wp-block-quote"><p><strong>* 기존</strong><br><del>.dx.class {}</del><br><del>.dy</del>.class {} /* 별도의 class로 인식되지만, IE버그로 dy.class{}만 인식 */<br><br><strong>* 수정 (버그 회피)</strong><br>.dx.classx {}<br>.dy.classy {} /* 최종 class명을 다른 이름과 겹치지 않는 고유의 클래스명으로 사용 */</p></blockquote>



<p>이렇게 수정하는 방법은 다중 선택자의 장점을 완전히 무시하는 비효율적인 방법이긴 하지만, IE6 때문에 어쩔 수 없이 사용하게 되는 트릭입니다.</p>



<p>물론, IE7은 위에 나타나는 다중클래스의 버그는 해결되었습니다. 하지만, 표준모드(HTML 4.01, XHTML 1.0)로 동작할 때에만 버그가 나타나지 않게 되어 있으며, <strong>Quirks mode DTD로 동작될 때에는 IE6과의 호환을 위해</strong> (또는 미처 쿽스모드 엔진을 고치지 못했을 수도 있죠) 이 버그가 그대로 나타나도록 되어있습니다.</p>



<p>IE6은 언제까지 우리 UI개발자를 괴롭히게 될까요? ㅠ_ㅠ</p>



<blockquote class="wp-block-quote"><p><span style="color:#f78da7" class="tadv-color">이 포스트는 NHN WSG(Web Standardization Guide) 블로그와 네이버의 개인 블로그에 함께 연재되고 있습니다.</span></p></blockquote>
<p>The post <a rel="nofollow" href="https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/">IE6 의 CSS 다중선택자 버그에 대해</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/06/19/ie6-bug-css-groups-of-selectors/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">177</post-id>	</item>
		<item>
		<title>마이크로포맷을 사용해볼까요?</title>
		<link>https://amati.io/2008/05/19/about-microformat/</link>
				<comments>https://amati.io/2008/05/19/about-microformat/#respond</comments>
				<pubDate>Mon, 19 May 2008 09:08:33 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[기타]]></category>
		<category><![CDATA[Microformat]]></category>
		<category><![CDATA[WEB 2.0]]></category>
		<category><![CDATA[마이크로포맷]]></category>
		<category><![CDATA[시멘틱 웹]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=169</guid>
				<description><![CDATA[<p>1989년, 팀 버너스 리(Tim Berners-Lee)는 네트워크에서 정보를 전달하고 서로 연결하기 위하여 WWW(world wide web)라는 시스템을 고안하고, 이를 구현하기 위해 URL, HTTP, HTML 규약을 만들었습니다. HTML은 그 단순함과 범용성, 호환성을 바탕으로 현재까지도 인터넷에서 정보의 전달을 위한 포맷으로서의 역할을 훌륭히 수행하고 있지요. 하지만 WWW가 탄생된 지 20년이 되어가는 현재 시점에서는 폭발적인 정보 증가량, 멀티미디어화 된 정보, 새로운 기술의 욕구 등으로 인해 HTML 만으로는 정보 전달에 있어 역부족인 상황이 되었습니다. 이 문제를 해결하기 위해 새로운 기술과 이론이 계속 발표되고 있으며, Flash, Silverlight, Javascript, 웹표준, 그리고 UX, RIA, Web 2.0, 시멘틱 웹 등등 많은&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/05/19/about-microformat/">마이크로포맷을 사용해볼까요?</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>1989년, 팀 버너스 리(Tim Berners-Lee)는 네트워크에서 정보를 전달하고 서로 연결하기 위하여 WWW(world wide web)라는 시스템을 고안하고, 이를 구현하기 위해 URL, HTTP, HTML 규약을 만들었습니다. HTML은 그 단순함과 범용성, 호환성을 바탕으로 현재까지도 인터넷에서 정보의 전달을 위한 포맷으로서의 역할을 훌륭히 수행하고 있지요.</p>



<p>하지만 WWW가 탄생된 지 20년이 되어가는 현재 시점에서는 폭발적인 정보 증가량, 멀티미디어화 된 정보, 새로운 기술의 욕구 등으로 인해 HTML 만으로는 정보 전달에 있어 역부족인 상황이 되었습니다. 이 문제를 해결하기 위해 새로운 기술과 이론이 계속 발표되고 있으며, Flash, Silverlight, Javascript, 웹표준, 그리고 UX, RIA, Web 2.0, 시멘틱 웹 등등 많은 신기술과 개념들이 HTML의 부족했던 기능을 보충해주고 있습니다. 이 포스트에서 언급할 Microformat(마이크로포맷) 도 HTML을 도와 정보를 효율적으로 전달하기 위해 고안된 새로운 기술입니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="694" data-permalink="https://amati.io/2008/05/19/about-microformat/microformat-logo/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/microformat-logo.jpg?fit=117%2C114&amp;ssl=1" data-orig-size="117,114" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;1&quot;}" data-image-title="microformat-logo" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/microformat-logo.jpg?fit=117%2C114&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/microformat-logo.jpg?fit=117%2C114&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/microformat-logo.jpg?w=620&#038;ssl=1" alt="" class="wp-image-694" data-recalc-dims="1"/></figure></div>



<p><strong>마이크로포맷은 HTML 문서 내에서 특정 마크업을 사용하여, 특정 정보를 메타 데이터 형태로 가공하여 사용자(사람)와 컴퓨터(기계)가 이 정보를 직접 사용할 수 있도록 구현하는 정보 포맷 방식</strong>입니다.</p>



<p>보통 어떤 문서를 열람할 때, 예를 들어 &#8220;010-1234-1234&#8221; 라는 것을 사용자들이 보면 대부분 이 번호가 휴대폰의 전화번호라는 것을 금방 인식할 수 있습니다. 또한 &#8220;김철수 010-1234-1234&#8221; 라는 문구를 보면 대부분의 한국인(?) 사용자는 &#8216;김철수&#8217;라는 사람의 전화번호는 &#8216;010-1234-1234&#8217;라고 인식하게 됩니다.하지만, 이 과정은 컴퓨터에는 적용되지 않습니다. &#8216;김철수&#8217;라는 것이 사람 이름인지 아닌지도 알 수 없고, &#8216;010-1234-1234&#8217;라는 번호가 무엇인지도 알 수 없고, &#8216;김철수&#8217;와 &#8216;010-1234-1234&#8217;가 무슨 관계가 있는지도 알 수 없으며, 단지 &#8216;0101001&#8217; 등의 이진수의 나열이라는 것 밖에 알 수 없습니다. 이 때문에 위 정보를 찾아내기 위해서 문서 내의 정보를 사람이 직접 검색(Ctrl+F)하여 이름을 찾아내고 전화번호를 찾아내는 불편한 과정을 수행해야 합니다.</p>



<p>하지만 HTML에 특정 마크업을 추가하여 표현한 <strong>&#8216;마이크로포맷&#8217;</strong>을 이용하면, 컴퓨터가 해당 정보가 어떤 종류인지 파악할 수 있으며 이를 통해 사람도 더욱 편리하게 정보를 얻을 수 있습니다.</p>



<p>즉, 마이크로포맷은 특정 마크업을 사용하여 human-readable(사람이 읽을 수 있는) 데이터를 machine-readable(기계가 읽을 수 있는), machine-understandable(기계가 이해할 수 있는) 데이터로 바꾸어주는 기술이며, 이를 각종 소프트웨어나 검색 엔진에서 활용하여 사용할 수 있는 방법은 무궁무진할 것이라고 예상되고 있습니다.</p>



<p>&#8220;마이크로포맷&#8221;은 다음 세가지 표준속성을 사용하여 삽입할 수 있습니다.</p>



<ul><li>class : 마이크로포맷을 구성하는 기본 속성으로 정보를 정의하는 역할</li><li>rel : 현재 문서가 링크로 연결되는 문서와 어떤 관계인지 정의</li><li>rev : 링크로 연결되는 문서가 현재 문서와 어떤 관계인지 정의 (rel과 반대시점)</li></ul>



<p>다음과 같은 HTML 코드가 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;div>
  &lt;div>김철수&lt;/div>
  &lt;div>NHN corp.&lt;/div>
  &lt;div>031-123-1234&lt;/div>
&lt;/div></pre>



<p>위 코드는 사람인 우리들이 읽어볼 때 어떤 내용인지 금방 파악할 수 있습니다. 이름과 회사, 전화번호 정도로 예상할 수 있지요. 하지만 컴퓨터는 위에서 설명했듯, 이 내용이 무슨 내용인지 알 수 없습니다. 이 단점을 해결하기 위해 마이크로포맷의 class 속성을 사용하여 다음과 같이 표현할 수 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="generic" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;div class="vcard">
  &lt;div class="fn">김철수&lt;/div>
  &lt;div class="org">NHN corp.&lt;/div>
  &lt;div class="tel">031-123-1234&lt;/div>
&lt;/div></pre>



<p>위 코드만 추가하면 사용자는 물론이고 마이크로포맷을 인식할 수 있는 소프트웨어도 이 내용이 명함임을 파악하고, 이름과 소속, 전화번호를 얻을 수 있습니다.</p>



<p>또한, rel 속성은 XFN(XHTML Friends Network)를 사용하여 연결된 문서간의 관계를 정의할 수 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;a href="http://dave-blog.example.org/" rel="friend met">Dave&lt;/a>
&lt;a href="http://darryl-blog.example.org/" rel="friend met">Darryl&lt;/a></pre>



<p>위 코드가 나타내는 바는 dave-blog 라는 사이트는 현재 friend met 관계라는 것을 말하며 &#8220;friend&#8221; 는 친구, &#8220;met&#8221; 은 만난 적이 있는 관계를 의미합니다. 모두 조합하면 dave-blog 는 내가 예전에 만난 적 있는 친구라는 것을 의미합니다. 자세한 레퍼런스는 <a href="https://gmpg.org/xfn/" target="_blank" rel="noreferrer noopener" aria-label="XFN 사이트 (opens in a new tab)">XFN 사이트</a>를 참고해주세요.</p>



<p>또한, 마이크로포맷을 조합하여 사용할 수도 있는데 다음의 예처럼 hCard(명함)와 hCalendar(일정) 정보를 조합하여 사용할 수 있습니다.</p>



<pre class="EnlighterJSRAW" data-enlighter-language="html" data-enlighter-theme="" data-enlighter-highlight="" data-enlighter-linenumbers="" data-enlighter-lineoffset="" data-enlighter-title="" data-enlighter-group="">&lt;div class="vevent">
  &lt;a href="http://aneventapart.com/" class="summary url">An Event Apart,
    &lt;span class="location vcard">
      &lt;span class="fn org">Scandinavia House&lt;/span>,
      &lt;span class="adr">&lt;span class="locality">New York City&lt;/span>, &lt;span class="region">NY&lt;/span>&lt;/span>
    &lt;/span>
  &lt;/a>,
  &lt;abbr class="dtstart" title="2006-07-10">July 10&lt;/abbr>-&lt;abbr class="dtend" title="2006-07-12">11th, 2006&lt;/abbr>
&lt;/div></pre>



<p>vevent는 hCalendar(일정) 정보를 표시하는 상위 클래스이며 그 하위에는 summary(일정 요약), url(인터넷주소), location(위치), dtstart(시작일시), dtend(종료일시) 등을 사용하였고 location에는 vcard 클래스를 통해 위치 정보를 더 자세하게 표현한 것을 알 수 있습니다.</p>



<p>이외에도 마이크로포맷 규칙은 많이 있으며 지금도 계속 제안되고 있습니다. 대표적인 클래스는 다음과 같습니다.</p>



<ul><li>hCard : 주소록(명함) 정보, class=&#8221;vcard&#8221;</li><li>hCalendar : 일정 정보, class=&#8221;vevent&#8221;</li><li>hReview : 리뷰(사용기, 감상기, 체험기 등) 정보</li><li>hResume : 이력서 정보</li><li>geo : 위도와 경도</li><li>XOXO : 리스트와 요약 정보 저장</li><li>rel-nofollow : 마이크로포맷 파서가 분석할 필요가 없음을 명시하는 링크</li><li>rel-directory : 링크가 디렉토리 정보임을 명시</li><li>rel-tag : 링크가 태그 정보임을 명시</li><li>XFN : 웹페이지간의 관계 설정</li></ul>



<p>위의 대표적인 속성인 hCard, geo 등을 조합하여 와인의 이름, 생산자와 위치 정보를 포함하는 마이크로포맷도 제안될 정도로 마이크로포맷은 활성화되어 있습니다.<br>이 글엔 언급하지 못할 정도로 많은 클래스가 제안되고 있기 때문에, 현재 제안된 마이크로포맷 클래스를 자세하게 찾아보려면 아래에 별도로 정리된 레퍼런스를 참조해주세요.</p>



<p><strong>마이크로포맷은 어떻게 활용할 수 있을까요?</strong></p>



<p>마이크로포맷은 파이어폭스 진영의 <a rel="noreferrer noopener" href="https://addons.mozilla.org/ko/firefox/addon/2240" target="_blank" class="broken_link">Tails Export</a>, <a rel="noreferrer noopener" href="https://addons.mozilla.org/ko/firefox/addon/4106" target="_blank" class="broken_link">Operator</a> 등의 플러그인을 통해 사용할 수 있습니다. 이 플러그인은 문서 내에 포함되어 있는 마이크로포맷을 파악하고, 해당 정보를 Outlook 등의 일정관리 프로그램에 보내주기도 합니다. 또한 Firefox 3 beta 버전에서도 브라우저 자체적으로 마이크로포맷을 활용할 수 있는 옵션이 존재합니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="695" data-permalink="https://amati.io/2008/05/19/about-microformat/t-tailsexport/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/t-tailsexport.gif?fit=400%2C316&amp;ssl=1" data-orig-size="400,316" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="t-tailsexport" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/t-tailsexport.gif?fit=300%2C237&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/t-tailsexport.gif?fit=400%2C316&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2019/04/t-tailsexport.gif?w=620&#038;ssl=1" alt="" class="wp-image-695" data-recalc-dims="1"/></figure></div>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="696" data-permalink="https://amati.io/2008/05/19/about-microformat/t-operator/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-operator.gif?fit=325%2C230&amp;ssl=1" data-orig-size="325,230" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="t-operator" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-operator.gif?fit=300%2C212&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-operator.gif?fit=325%2C230&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-operator.gif?w=620&#038;ssl=1" alt="" class="wp-image-696" data-recalc-dims="1"/></figure></div>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="697" data-permalink="https://amati.io/2008/05/19/about-microformat/t-firefox/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-firefox.gif?fit=450%2C458&amp;ssl=1" data-orig-size="450,458" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="t-firefox" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-firefox.gif?fit=295%2C300&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-firefox.gif?fit=450%2C458&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/t-firefox.gif?w=620&#038;ssl=1" alt="" class="wp-image-697" data-recalc-dims="1"/></figure></div>



<p>앞으로도 마이크로포맷이 활성화되면 이 정보들을 더욱 많은 곳에 활용할 수 있는 소프트웨어가 나올 것이라 예상됩니다. 각종 정보가 집중적으로 수집되는 포털에서 사용자들에게 원하는 정보를 예전과 달리 필요한 정보를 더 쉽게 쪽집게처럼 찾아준다는 것은 즐거운 일일 것입니다.<br>예를 들면, 사용자가 단순히 짜장면을 주문하는 명령 만으로도 사용자의 생활권 내에 수집된 음식점 정보들을 바탕으로 일정지역 내에 가장 싸고 맛있는 짜장면을 찾아내어 자동으로 주문하는 것도 가능하다는 것이죠.</p>



<p><strong>현재로서는 마이크로포맷을 제공하는 사이트는 소수</strong>입니다. 국내에서 블로깅 툴로 유명한 <a rel="noreferrer noopener" aria-label="텍스트큐브 (opens in a new tab)" href="http://www.textcube.org/" target="_blank">텍스트큐브</a>, <a rel="noreferrer noopener" aria-label="워드프레스 (opens in a new tab)" href="https://wordpress.org/" target="_blank">워드프레스</a> 등이 마이크로포맷을 지원하고 있지만, 국내 포털에서는 아직 마이크로포맷을 제공하는 사이트가 없으며, 해외 사이트 중에서도 마이크로포맷을 활용한 사이트는 아직 많지 않습니다.<br>하지만 마이크로소프트, 야후 등이 차후에 자사의 사이트와 소프트웨어에 마이크로포맷을 활용할 것이라고 하였고, 쉬운 사용법을 바탕으로 블로그 등의 소셜 사이트 등에서 사용하는 곳이 많아지고 있기 때문에 마이크로포맷의 영향력은 더욱 확대될 것입니다.</p>



<p>WWW를 창시했던 팀 버너스 리(Tim Berners-Lee)가 차세대 웹으로 제안한 &#8220;<strong>시멘틱 웹</strong>&#8221; 은 컴퓨터가 이해할 수 있는 WWW 를 목표로 하고 있습니다. 하지만 이를 구현하기 위해서는 많은 장애물이 있으며, 사람의 사고를 컴퓨터가 이해해야 하기 때문에 어쩌면 도달하지도 못할 WWW의 이상향이라고 할 수 있으며, 이 때문에 시멘틱 웹은 아직 개념도 제대로 잡히지 않은 단계에 있습니다.<br>하지만 마이크로포맷이 기계와 사람이 동시에 이해할 수 있는 정보를 제공한다는 개념을 통해서 시멘틱 웹의 첫걸음이 되고 있는 것은 분명합니다. 이를 통해, 앞으로 시멘틱 웹이 어떤 방식으로 구현되게 될지 지켜보는 것도 즐거운 일이 아닐까 싶습니다.</p>



<p><strong>References :</strong></p>



<ul><li><a href="http://microformats.org/">http://microformats.org/</a></li><li><a href="http://wiki.mozilla.org/Microformats">http://wiki.mozilla.org/Microformats</a></li><li><a href="http://microformats.org/wiki/Main_Page">http://microformats.org/wiki/Main_Page</a></li></ul>



<blockquote class="wp-block-quote"><p><span style="color:#f78da7" class="tadv-color">이 포스트는 NHN WSG(Web Standardization Guide) 블로그와 네이버의 개인 블로그에 함께 연재되고 있습니다.</span></p></blockquote>
<p>The post <a rel="nofollow" href="https://amati.io/2008/05/19/about-microformat/">마이크로포맷을 사용해볼까요?</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/05/19/about-microformat/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">169</post-id>	</item>
		<item>
		<title>나를 미치게 하는 PNG</title>
		<link>https://amati.io/2008/04/01/png-bug-in-ie6/</link>
				<comments>https://amati.io/2008/04/01/png-bug-in-ie6/#comments</comments>
				<pubDate>Tue, 01 Apr 2008 02:33:20 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[HTML & CSS]]></category>
		<category><![CDATA[AlphaImageLoader]]></category>
		<category><![CDATA[IE6의 png버그]]></category>
		<category><![CDATA[PNG]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=166</guid>
				<description><![CDATA[<p>인터넷 브라우저에서 사용할 수 있는 이미지는 아시다시피 GIF, JPG, PNG 가 있습니다. 그중, 웹에서 사용할 수 있는 이미지로서의 PNG 는 GIF 나 JPG 에 비해 많은 장점을 가지고 있습니다. PNG 는 &#8220;Portable Network Graphics&#8221; 의 약자이며, 프리웨어이고, JPG 와는 달리 무손실압축(원본과 완전히 같음)을 지원하며, 24bit(1670만) 컬러를 구현합니다. 무엇보다도 알파채널, 즉 반투명을 지원한다는 큰 장점이 있죠. 단점이라면, GIF 처럼 애니메이션을 지원하지 못한다는 것과, 파일 크기가 다소 크다는 점이지만, 큰 단점은 아닙니다. (사실, 구버전의 포토샵에서 PNG로 저장할 때 용량이 비정상적으로 커지는 버그 때문에 PNG 에 대한 편견이 부각된 점도 있습니다.) PNG References&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/04/01/png-bug-in-ie6/">나를 미치게 하는 PNG</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>인터넷 브라우저에서 사용할 수 있는 이미지는 아시다시피 GIF, JPG, PNG 가 있습니다.</p>



<p>그중, <strong>웹에서 사용할 수 있는 이미지</strong>로서의 PNG 는 GIF 나 JPG 에 비해 많은 장점을 가지고 있습니다. PNG 는 &#8220;Portable Network Graphics&#8221; 의 약자이며, 프리웨어이고, JPG 와는 달리 무손실압축(원본과 완전히 같음)을 지원하며, 24bit(1670만) 컬러를 구현합니다. 무엇보다도 <strong>알파채널</strong>, 즉 반투명을 지원한다는 큰 장점이 있죠. 단점이라면, GIF 처럼 애니메이션을 지원하지 못한다는 것과, 파일 크기가 다소 크다는 점이지만, 큰 단점은 아닙니다.</p>



<p><span style="color:#abb8c3" class="tadv-color">(사실, 구버전의 포토샵에서 PNG로 저장할 때 용량이 비정상적으로 커지는 버그 때문에 PNG 에 대한 편견이 부각된 점도 있습니다.)</span></p>



<p>PNG References : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://ko.wikipedia.org/wiki/PNG" target="_blank">https://ko.wikipedia.org/wiki/PNG</a></p>



<p>PNG 의 가장 큰 장점이자 특징이라면 <strong>알파채널을 지원해서 반투명도 표시할 수 있다는 점</strong>인데요, 그만큼 표현할 수 있는 범위가 상당히 넓어진다는 장점이 있어서 최근들어 비주얼이 강조되는 사이트에서 많이 사용되고 있습니다. 하지만, 현재로선 가장 높은 점유율을 가지고 있는 IE6 에서는 png를 사용할 때 <strong><span style="color:#cf2e2e" class="tadv-color">치명적인 버그</span></strong>가 존재합니다.</p>



<h4>1. <strong>IE6 에서는 PNG 의 투명 영역을 회색으로 표시함.</strong></h4>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="699" data-permalink="https://amati.io/2008/04/01/png-bug-in-ie6/0331_blog_1/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_1.jpg?fit=402%2C137&amp;ssl=1" data-orig-size="402,137" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="0331_blog_1" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_1.jpg?fit=300%2C102&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_1.jpg?fit=402%2C137&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_1.jpg?w=620&#038;ssl=1" alt="" class="wp-image-699" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_1.jpg?w=402&amp;ssl=1 402w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_1.jpg?resize=300%2C102&amp;ssl=1 300w" sizes="(max-width: 402px) 100vw, 402px" data-recalc-dims="1" /></figure></div>



<p>반투명의 영역을 회색으로 표시하는 버그 때문에 가장 큰 장점인 알파 채널을 사용할 수 없습니다. 굳이 PNG 이미지를 사용할 이유가 없어지는 것이죠. 따라서 IE 에서는 이 문제를 해결하기 위해 <strong>AlphaImageLoader</strong> 라는 내장필터를 제공하고 있습니다. 해당 필터에 대한 자세한 설명은 다음 페이지를 참고해주세요.</p>



<p><a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms532969(v%3dvs.85)" target="_blank">https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms532969(v%3dvs.85)</a></p>



<p>이를 해결하기 위한 방법으로는 검색해보시면 아시겠지만, <strong>일명 iepngfix.htc 를 이용한 방법</strong>이 가장 쉽게 해결할 수 있는 방법입니다. 이 방법도 따지자면 위에 언급한 AlphaImageLoader 필터를 사용하여 해결하였는데요, 이에 대한 포스팅은 다음을 참조해주세요.</p>



<ul><li><a rel="noreferrer noopener" label=" (opens in a new tab)" href="http://bjorkoy.com/past/2007/4/8/the_easiest_way_to_png/" target="_blank" class="broken_link">http://bjorkoy.com/past/2007/4/8/the_easiest_way_to_png/</a></li><li><a rel="noreferrer noopener" label=" (opens in a new tab)" href="http://naradesign.net/wp/2006/12/15/100/" target="_blank" class="broken_link">http://naradesign.net/wp/2006/12/15/100/</a></li></ul>



<h4>2. <strong>색상이 더 짙게 표현됨</strong></h4>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="703" data-permalink="https://amati.io/2008/04/01/png-bug-in-ie6/0331_blog_3/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_3.jpg?fit=520%2C154&amp;ssl=1" data-orig-size="520,154" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="0331_blog_3" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_3.jpg?fit=300%2C89&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_3.jpg?fit=520%2C154&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_3.jpg?w=620&#038;ssl=1" alt="" class="wp-image-703" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_3.jpg?w=520&amp;ssl=1 520w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/0331_blog_3.jpg?resize=300%2C89&amp;ssl=1 300w" sizes="(max-width: 520px) 100vw, 520px" data-recalc-dims="1" /></figure></div>



<p>위 이미지는 포토샵에서 #333333 색상을 이용한 이미지를 각각 GIF 256color Transparency, JPG very high quality, PNG 24bit Transparency 옵션으로 각각 저장한 후 웹브라우저로 렌더링 해본 결과입니다.</p>



<p>만약 미세한 색상을 구분할 수 있으시다면 사파리, 오페라, 파이어폭스에서는 전혀 문제가 없다는 것을 확인하실 수 있지만, IE계열에서는 jpg, gif 보다 png 쪽 이미지가 약간 짙게 표현되는 것을 확인 하실 수 있을 겁니다. 각각의 이미지로 표현된다면 별 문제는 안되겠지만, 같은 색상의 이미지 위에 반투명 표현을 위해 png 이미지를 사용한 것이라면 문제가 생길 수 있겠죠. 이 문제는 IE 의 AlphaImageLoader 필터를 사용해도 공통적으로 발생하는 문제인 것을 보면 HTML 수준에서 해결할 수 있는 방법은 없다는 것을 예상할 수 있겠습니다.<br>저도 예전에 png를 많이 사용한 프로젝트를 진행하면서 위 문제때문에 상당히 고생했었던 기억이 있는데요, 비주얼이 특히 화려한 한게임 계열 사이트를 작업하시는 분들은 PNG 가 사용되는 상황이 되면 머리를 싸매시더군요. ㅠ_ㅠ</p>



<p>파이어폭스나 기타 표준계열 브라우저가 있다고는 해도, 아직까지는 점유율 80% 이상을 차지하는 IE6 을 무시할 수 없는 상황에서&#8230; PNG 를 쓰는 것은 과연 옳은 걸까요?</p>



<blockquote class="wp-block-quote"><p><span style="color:#f78da7" class="tadv-color">이 포스트는 NHN WSG(Web Standardization Guide) 블로그와 네이버의 개인 블로그에 함께 연재되고 있습니다.</span></p></blockquote>
<p>The post <a rel="nofollow" href="https://amati.io/2008/04/01/png-bug-in-ie6/">나를 미치게 하는 PNG</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/04/01/png-bug-in-ie6/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">166</post-id>	</item>
		<item>
		<title>재테크에 대한 단상 II</title>
		<link>https://amati.io/2008/03/18/essay-of-investment-techniques-2/</link>
				<comments>https://amati.io/2008/03/18/essay-of-investment-techniques-2/#respond</comments>
				<pubDate>Tue, 18 Mar 2008 07:37:04 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[이것저것]]></category>
		<category><![CDATA[부동산]]></category>
		<category><![CDATA[재테크]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=165</guid>
				<description><![CDATA[<p>이젠 펀드도 안되나 보다&#8230; 작년 2007년만 해도 펀드는 재테크의 시작이요, 은행에 돈 넣어두면 바보 취급을 당했었는데 지금의 펀드는&#8230; 미국 증시에 조그만 문제만 있으면 엄청난 기복을 타고 있으니&#8230; 예를 들면, 오래 묶어두셨던 분들이라면 작년 말의 펀드 폭락에 100% 수익에서 50% 수익률로 내려서 &#8220;약간 손해를 봐도 전체적으로 이익&#8221; 정도로 끝났지만, 펀드 열풍을 타고 작년에 가입하셨던 분들의 수익률은 20% -&#62; -50% 정도 된 거 보면&#8230; 대략 난감하더라.그냥 조금 멀리 떨어져서 제3자의 눈으로 보자면&#8230; 우루루 펀드에 몰렸던 개미 투자자들은 증시의 조그만 오르내림에도 얼마 되지 않는(?) 투자금의 +, &#8211; 를 넘나드는 수익률에 울고 웃는 모습은&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/03/18/essay-of-investment-techniques-2/">재테크에 대한 단상 II</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>이젠 펀드도 안되나 보다&#8230;</p>



<p>작년 2007년만 해도 펀드는 재테크의 시작이요, 은행에 돈 넣어두면 바보 취급을 당했었는데 지금의 펀드는&#8230; 미국 증시에 조그만 문제만 있으면 엄청난 기복을 타고 있으니&#8230;</p>



<p>예를 들면, 오래 묶어두셨던 분들이라면 작년 말의 펀드 폭락에 100% 수익에서 50% 수익률로 내려서 &#8220;<strong>약간 손해를 봐도 전체적으로 이익</strong>&#8221; 정도로 끝났지만, 펀드 열풍을 타고 작년에 가입하셨던 분들의 수익률은 20% -&gt; -50% 정도 된 거 보면&#8230; 대략 난감하더라.<br>그냥 조금 멀리 떨어져서 제3자의 눈으로 보자면&#8230; 우루루 펀드에 몰렸던 개미 투자자들은 증시의 조그만 오르내림에도 얼마 되지 않는(?) 투자금의 +, &#8211; 를 넘나드는 수익률에 울고 웃는 모습은 조금 안쓰러운 감정도 느껴지곤 한다.</p>



<p>개인 투자자는 큰손이 아닌한 주식 시장 전체, 한국 경제에 대비해서 보면 정말 보잘것 없는 금액이다. 이러한 작은 돈에서 10% ~ 20% 내외의 수익을 얻어보겠다고 머리 싸매며 재테크 한다는 것은, 솔직히 멀리서 떨어져서 보면 이건 아니다 싶다.<br>거기에 더 비관적인 것은, 재테크로 돈을 크게 벌었다는 얘길 자세히 들어보면 그 중간 수단 중에 &#8220;<strong>부동산</strong>&#8220;이 없었던 케이스는 찾을 수 없었고, <span style="color:#cf2e2e" class="tadv-color">오히려 부동산이 재테크를 성공적으로 이끌어주는 키포인트인 경우가 많았다</span>. 한국에서 돈 벌려면 부동산 말고는 없는 것일까?<br>책도 몇개 읽어보긴 했지만, 다들 똑같은 얘기. 겨우 도움이 되는 것이라면 경제쪽 상식이라거나, 돈쓰는 습관을 체계적으로 바꾸어 합리적인 소비를 강조했다는 것. 뭐 나쁘다는 투로 말하긴 했지만, 이정도 얻은 것만 해도 도움이 되긴 했다.</p>



<p>글쎄.. 재테크를 단순히 저축해서 이자 늘리기로 보는 나의 지식의 한계일지도 모르겠다. 과연 <strong>재테크가 무엇인가에 대한 정답</strong>은 찾지를 못했다.</p>



<p>현재는 개인적으로 돈 쓸일이 많기도 하고, 여유자금이 얼마 없는 데다가, 동양생명 직원의 말빨에 넘어가 들어놓은 저축성 보험 이외에는 모두 CMA에 박아두고 있는데 어떻게 해야할 지 고민중&#8230;<br>아무리 재테크 계획을 잘 짜서 치밀하게 한다고 해도 원금의 100% 수익을 내는 것이 가능할까? 가능하다고 해도&#8230; 1억원에서 2억원으로 불리는 것이라면 몰라도 1천만원에서 2천만원으로 늘어나는 것을 비교해보면? 같은 노력을 들였는데도 수익은 9000만원이나 차이나는 이 현실은 어떻게 할 것인가;;;</p>



<p>이런 비관적인 글을 쓴 계기는 주식 시장의 작은 변화에도 큰 영향을 받을 수 있는 개미 투자자(물론 나를 포함한. 투자는 안했지만 ㅎ)에 대한 허무함이라고나 할까, 그냥 단상은 단상일 뿐.</p>



<p>역시 처음의 전략이 좋은 것 같다. 월급을 받으며 꾸준히 돈을 모으는 것보다는, <strong><span style="color:#0693e3" class="tadv-color">돈을 벌 수 있는 무엇인가를 찾아서 그것을 노후대책으로도 생각하는 게</span></strong> 가장 마음에 든다.</p>



<p>물론&#8230; 재테크보다 훨씬 어려운 길이지만, 재미는 있겠지?</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/03/18/essay-of-investment-techniques-2/">재테크에 대한 단상 II</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/03/18/essay-of-investment-techniques-2/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">165</post-id>	</item>
		<item>
		<title>Internet Explorer 8 Beta1 의 등장</title>
		<link>https://amati.io/2008/03/07/internet-explorer-8-beta1/</link>
				<comments>https://amati.io/2008/03/07/internet-explorer-8-beta1/#comments</comments>
				<pubDate>Fri, 07 Mar 2008 02:36:25 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[Frontend 개발 이야기]]></category>
		<category><![CDATA[IE8 Beta1]]></category>
		<category><![CDATA[웹표준]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=158</guid>
				<description><![CDATA[<p>미국 라스베가스에서 현지시간 3월 5일~7일 일정으로 진행되고 있는 MIX08 Conference 에서 Internet Explorer 8 Beta1 버전이 발표되었습니다. 이전 기능을 통합하는 새로운 기능, 웹표준을 지원하는 새로운 렌더링 엔진이 큰 특징이라고 할 수 있습니다. 최근 IE8 에 대한 소식이 잦다는 느낌이 들었는데, MIX08 컨퍼런스를 통해 Beta1 버전을 일반 사용자도 다운받아서 사용해볼 수 있도록 제공하고 있네요.이번 버전은 개발자와 디자이너들을 위한 Beta1 버전으로, 일반인들까지 대상으로 하는 Beta2 버전은 여름 쯤에 제공하겠다고 밝혔답니다. 개발자와 디자이너들에게는 이번 Beta1 버전을 통해 미리 IE8 이 정식으로 발표될 때를 준비하라는(?) 메세지를 주고 있는 것 같습니다. ^^;; 아직까지는 기존의 IE7&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/03/07/internet-explorer-8-beta1/">Internet Explorer 8 Beta1 의 등장</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>미국 라스베가스에서 현지시간 3월 5일~7일 일정으로 진행되고 있는 <a rel="noreferrer noopener" href="http://visitmix.com/2008/" target="_blank" class="broken_link">MIX08 Conference</a> 에서 <strong><span style="color:#00d084" class="tadv-color">Internet Explorer 8 Beta1</span></strong> 버전이 발표되었습니다. 이전 기능을 통합하는 새로운 기능, 웹표준을 지원하는 새로운 렌더링 엔진이 큰 특징이라고 할 수 있습니다.</p>



<p>최근 IE8 에 대한 소식이 잦다는 느낌이 들었는데, MIX08 컨퍼런스를 통해 Beta1 버전을 일반 사용자도 다운받아서 사용해볼 수 있도록 제공하고 있네요.<br>이번 버전은 개발자와 디자이너들을 위한 Beta1 버전으로, 일반인들까지 대상으로 하는 Beta2 버전은 여름 쯤에 제공하겠다고 밝혔답니다. 개발자와 디자이너들에게는 이번 Beta1 버전을 통해 미리 IE8 이 정식으로 발표될 때를 준비하라는(?) 메세지를 주고 있는 것 같습니다. ^^;;</p>



<p>아직까지는 기존의 IE7 과 거의 비슷한 인터페이스를 보여주고 있습니다만, 베타2와 정식판에서는 어떤 비주얼을 보여줄지 기대되네요.</p>



<p>다운로드 : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://www.microsoft.com/ko-kr/download/internet-explorer-8-details.aspx" target="_blank">https://www.microsoft.com/ko-kr/download/internet-explorer-8-details.aspx</a> (update in. 2019)</p>



<p>IE8 의 큰 특징인 동시에 유례없는 관심을 받고있는 이유를 찾아보자면, IE8 에는 기존의 호환 모드 대신 <strong>웹표준을 준수하는 표준 렌더링 엔진이 기본 모드로 채택</strong>되었다는 것이라고 할 수 있겠습니다.</p>



<p>이전 포스트에서도 밝혔듯이 IE8 이 표준 모드에서 Acid2 테스트를 통과했다고 알려졌는데요, 원래 IE8 에서는 이 표준 렌더링 엔진이 아닌 기존 IE7 까지 쓰이던 호환 모드를 기본 엔진으로 채택하겠다는 입장을 고수하고 있었습니다. 이는 각각 장단점이 존재하는데요, 이때문에 개발자들 사이에서 큰 논쟁이 이루어졌고, 결국 IE 를 개발하던 Microsoft는 이들의 의견을 받아들여 IE8의 기본 모드를 <strong>표준 모드</strong>로 채택하기로 했다고 합니다.</p>



<p>MSDN 블로그 : <a href="https://blogs.msdn.microsoft.com/ie/2008/03/03/microsofts-interoperability-principles-and-ie8/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://blogs.msdn.microsoft.com/ie/2008/03/03/microsofts-interoperability-principles-and-ie8/</a></p>



<p>Microsoft 가 OS를 독점한 상황에서 독자적인 웹브라우저를 개발하던 이전 상황과는 달리 Mozilla 계열의 Firefox의 놀라운 성장세와 함께 더이상 웹표준을 외면할 수 없는 환경적 영향이 IE 의 개발 방향을 크게 바꾸었다고 생각됩니다.</p>



<p>IE8 이 기존의 정책을 바꾸어 웹표준에 친화적인 웹브라우저로 공개되긴 했지만, <strong>앞날이 그렇게 순탄하지만은 않습니다.</strong> Netscape 가 존재하던 시절과는 달리, 강력한 오픈소스를 무기로 한 Firefox 3 가 버티고 있고, IE 외에도 웹표준에 최적화된 수많은 웹브라우저가 존재하기 때문이죠.</p>



<p>차후 웹브라우저 전쟁은 플랫폼에 관계없이 웹표준을 얼마나 잘 지키는지, 사용자를 위한 특화 기능을 얼마나 잘 지원하는지에 따라 승패가 결정될 거라고 생각이 됩니다. 이 상황에서 IE 도 기존의 독점적 자세와 지위를 버리고 정정당당히 다른 웹 브라우저와 경쟁을 벌여 좋은 소프트웨어로 발전하기를 바랍니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="709" data-permalink="https://amati.io/2008/03/07/internet-explorer-8-beta1/ie8logo/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/ie8logo.gif?fit=367%2C101&amp;ssl=1" data-orig-size="367,101" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ie8logo" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/ie8logo.gif?fit=300%2C83&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/ie8logo.gif?fit=367%2C101&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/ie8logo.gif?w=620&#038;ssl=1" alt="" class="wp-image-709" data-recalc-dims="1"/></figure></div>



<p>IE8의 새로운 기능을 살펴보겠습니다.<br>MIX08 컨퍼런스의 발표에서는 8번째 버전에 맞추어 8가지의 내용으로 IE8의 특징을 소개했습니다. &nbsp;</p>



<ul><li><strong>CSS 2.1</strong><br>Firefox, Safari, Opera 등의 기존 웹브라우저들과 마찬가지로 CSS2.1을 지원합니다.</li><li><strong>CSS Certification</strong><br>CSS2.1 스펙을 테스트하는 Acid2 Test를 통과했습니다.</li><li><strong>Performance</strong><br>자바스크립트 개발자라면 누구나 느낄법한 IE의 속도문제와 버그를 해결하여 타 브라우저 만큼의 퍼포먼스를 보여준다고 합니다. 실제 웹을 서핑한 결과 이전보단 체감적으로 빨라졌다는 느낌을 주고 있습니다.</li><li><strong>HTML 5 Start</strong><br>HTML5 스펙을 지원합니다. HTML5는 현재 초안(Working Draft) 작업이 진행중인데요, 일부 스펙의 지원을 시작했다고 언급하고 있습니다. (Ajax UI에서 뒤로/앞으로 버튼 액션 지원, 오프라인 후 컨텐츠 임시저장)</li><li><strong>Development Tools</strong><br>웹브라우저 내장의 개발툴로는 유명한 Firefox의 firebug가 있는데요, 이와 비슷한 강력한 개발 도구를 내장하였다고 합니다.</li><li><strong>Activities</strong><br>웹을 사용할 때 원하는 컨텐츠에 대해 빠르게 외부 서비스로 연결할 수 있는 기능입니다. 보통 필요한 정보가 있다면, 이를 마우스로 드래그하여 다른 서비스에서 붙여넣기 형태로 많이 이용하는데, 이 과정을 매우 쉽게 한 것이라고 합니다. 크게 &#8220;Look up&#8221; 과 &#8220;Send&#8221; 기능으로 나뉘는데 Look up은 해당 콘텐츠에 대한 타 서비스의 콘텐츠를 볼 수 있고, Send는 말 그대로 외부 서비스(ex. 블로그)로 보내는 것을 말합니다.<br><img data-attachment-id="710" data-permalink="https://amati.io/2008/03/07/internet-explorer-8-beta1/ie8activities/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8activities.png?fit=476%2C302&amp;ssl=1" data-orig-size="476,302" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ie8activities" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8activities.png?fit=300%2C190&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8activities.png?fit=476%2C302&amp;ssl=1" class="wp-image-710" style="width: 476px;" src="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8activities.png?w=620&#038;ssl=1" alt="" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8activities.png?w=476&amp;ssl=1 476w, https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8activities.png?resize=300%2C190&amp;ssl=1 300w" sizes="(max-width: 476px) 100vw, 476px" data-recalc-dims="1" /></li><li><strong>WebSlices<br></strong>쉽게 말하면 RSS의 다른 개념이라고 말할 수 있는데요, 해당 웹페이지에서 제공하는 단편적인 정보들을 상단의 Favorite Bar에 등록하여 해당 정보의 최신 업데이트를 실시간으로 받아볼 수 있도록 하는 기능입니다. 마이크로포맷과 비슷하다고 보시면 될 듯 합니다.<br><img data-attachment-id="711" data-permalink="https://amati.io/2008/03/07/internet-explorer-8-beta1/ie8webslices/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2008/03/ie8webslices.png?fit=324%2C306&amp;ssl=1" data-orig-size="324,306" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ie8webslices" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2008/03/ie8webslices.png?fit=300%2C283&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2008/03/ie8webslices.png?fit=324%2C306&amp;ssl=1" class="wp-image-711" style="width: 324px;" src="https://i0.wp.com/amati.io/wp-content/uploads/2008/03/ie8webslices.png?w=620&#038;ssl=1" alt="" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2008/03/ie8webslices.png?w=324&amp;ssl=1 324w, https://i0.wp.com/amati.io/wp-content/uploads/2008/03/ie8webslices.png?resize=300%2C283&amp;ssl=1 300w" sizes="(max-width: 324px) 100vw, 324px" data-recalc-dims="1" /></li><li><strong>Download after keynote?</strong><br>특징은 아니지만, 해당 프리젠테이션이 종료된 후부터 IE8을 실제로 다운받을 수 있다고 하는 내용입니다. 실제로 현지시간 3월 5일 오후 12시 30분 즈음부터 다운로드 서비스를 개시했다고 합니다.</li></ul>



<p>이외에도 프리젠테이션에서 언급하지 않은 추가된 기능이 몇 가지 더 있습니다.</p>



<ul><li><strong>버전별 렌더링 엔진 지정<br></strong>기존 IE8개발정책 때문인지, 베타버전이기 때문에 존재하는 것인지 확실하지는 않지만, 메타태그를 통해 구 버전의 렌더링 엔진으로 웹사이트를 이용할 수 있도록 하고 있습니다. 또한 &#8220;Emulate IE7&#8221; 버튼을 통해 IE8 베타 버전이 아닌 기존 엔진을 디폴트로 사용할 수 있도록 배려하고 있습니다.<br>개인적으로는 정식 IE8이 출시될 때는 이 기능이 사라졌으면 합니다. 만약 이 옵션이 그대로 존재한다면 웹표준에 맞지 않는데도 개선할 의지가 없는 웹페이지들이 IE8 정식 출시 이후에도 계속 존재할 가능성이 높을 것 같습니다.&nbsp;</li><li><strong>자동 크래시 복구 기능 (Automatic Crash Recovery)<br></strong>웹서핑을 하다보면 웹브라우저가 다운되는(죽는) 경우가 발생하는데요, IE8에서는 크래시가 발생한 탭에서 내용을 복구하여 볼 수 있도록 한 기능입니다. Firefox에서는 이미 지원하는 기능이죠.<br><img data-attachment-id="712" data-permalink="https://amati.io/2008/03/07/internet-explorer-8-beta1/ie8acr/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8acr.png?fit=628%2C121&amp;ssl=1" data-orig-size="628,121" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ie8acr" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8acr.png?fit=300%2C58&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8acr.png?fit=620%2C119&amp;ssl=1" scale="0" class="wp-image-712" style="width: 580px;" src="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8acr.png?w=620&#038;ssl=1" alt="" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8acr.png?w=628&amp;ssl=1 628w, https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8acr.png?resize=300%2C58&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></li><li><strong>Safety Filter<br></strong>IE7 에서 지원하던 피싱 필터를 개선하여 &#8220;Safety Filter&#8221;라는 이름으로 추가되어 보안이 향상되었습니다.</li><li><strong>Favorite Bar</strong><br>IE7 에서 쓰였던 즐겨찾기 기능에서 더 확장되어 웹 콘텐츠 뿐만 아니라 링크, RSS피드, WebSlice, 오피스 문서(Word, Excel, Powerpoint)도 배치할 수 있습니다.<br><img data-attachment-id="713" data-permalink="https://amati.io/2008/03/07/internet-explorer-8-beta1/ie8favoritebar/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8favoritebar.png?fit=628%2C66&amp;ssl=1" data-orig-size="628,66" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ie8favoritebar" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8favoritebar.png?fit=300%2C32&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8favoritebar.png?fit=620%2C65&amp;ssl=1" scale="0" class="wp-image-713" style="width: 580px;" src="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8favoritebar.png?w=620&#038;ssl=1" alt="" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8favoritebar.png?w=628&amp;ssl=1 628w, https://i1.wp.com/amati.io/wp-content/uploads/2008/03/ie8favoritebar.png?resize=300%2C32&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></li><li><strong>URL 강조기능</strong><br>현재 접속하고 있는 사이트의 도메인과 경로를 구분하여 보여줍니다.<br><img data-attachment-id="714" data-permalink="https://amati.io/2008/03/07/internet-explorer-8-beta1/ie8location/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2008/03/ie8location.gif?fit=526%2C146&amp;ssl=1" data-orig-size="526,146" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="ie8location" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2008/03/ie8location.gif?fit=300%2C83&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2008/03/ie8location.gif?fit=526%2C146&amp;ssl=1" class="wp-image-714" style="width: 526px;" src="https://i2.wp.com/amati.io/wp-content/uploads/2008/03/ie8location.gif?w=620&#038;ssl=1" alt="" data-recalc-dims="1"></li></ul>



<p>현재 <strong>IE8에 대한 프리젠테이션 영상</strong>은 Microsoft 사이트에서 실버라이트로 제공하고 있습니다. 앞으로 IE8에 대한 자료가 꾸준히 공개될 듯 하고 IE8에 대해 많은 기술적인 이슈가 존재할 듯 하네요.</p>



<p>프리젠테이션 영상 :<br><a rel="noreferrer noopener" href="http://www.microsoft.com/presspass/events/mix/default.mspx" target="_blank" class="broken_link">http://www.microsoft.com/presspass/events/mix/default.mspx</a></p>



<blockquote class="wp-block-quote"><p><span style="color:#f78da7" class="tadv-color">이 포스트는 NHN WSG(Web Standardization Guide) 블로그와 네이버의 개인 블로그에 함께 연재되고 있습니다.</span></p></blockquote>



<p></p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/03/07/internet-explorer-8-beta1/">Internet Explorer 8 Beta1 의 등장</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/03/07/internet-explorer-8-beta1/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">158</post-id>	</item>
		<item>
		<title>웹브라우저를 위한 웹표준 테스트 Acid test</title>
		<link>https://amati.io/2008/02/27/acid-test-for-browser/</link>
				<comments>https://amati.io/2008/02/27/acid-test-for-browser/#comments</comments>
				<pubDate>Wed, 27 Feb 2008 03:25:41 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[HTML & CSS]]></category>
		<category><![CDATA[Acid Test]]></category>
		<category><![CDATA[Acid2]]></category>
		<category><![CDATA[Acid3]]></category>
		<category><![CDATA[웹브라우저]]></category>
		<category><![CDATA[웹표준]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=154</guid>
				<description><![CDATA[<p>최근들어 MicroSoft 에서 개발중인 Internet Explorer 8 이 Acid2 test 를 통과했다던가, 새로운 웹표준 테스트로 발표된 Acid3 가 웹브라우저 시장에 좌절을 안겨주고 있다는 소식이 들려오고 있습니다. 특히 IE8 이 Acid2를 통과했다는 소식은 이제 IE도 악명높은 IE6 의 비정상적인 렌더링을 벗어나 웹표준을 잘 지킬 수 있지 않느냐 하는 희망을 주기도 했는데요… 그런데 과연 이 Acid 테스트라는 것은 무엇일까요? Acid 테스트란 웹브라우저들이 웹 표준을 어느정도로 지원하면서 렌더링을 하는지 측정할 수 있도록 작성된 예제 페이지를 말합니다. 단 한장의 페이지에서 수많은 웹표준 스펙을 포함하고 있으며, 그래픽이 얼마나 잘 표현되는지의 결과를 통해 해당 브라우저의 웹표준&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/02/27/acid-test-for-browser/">웹브라우저를 위한 웹표준 테스트 Acid test</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>최근들어 MicroSoft 에서 개발중인 Internet Explorer 8 이 Acid2 test 를 통과했다던가, 새로운 웹표준 테스트로 발표된 Acid3 가 웹브라우저 시장에 좌절을 안겨주고 있다는 소식이 들려오고 있습니다. 특히 IE8 이 Acid2를 통과했다는 소식은 이제 IE도 악명높은 IE6 의 비정상적인 렌더링을 벗어나 웹표준을 잘 지킬 수 있지 않느냐 하는 희망을 주기도 했는데요…</p>



<p>그런데 과연 이 Acid 테스트라는 것은 무엇일까요?</p>



<p>Acid 테스트란 <strong>웹브라우저들이 웹 표준을 어느정도로 지원하면서 렌더링을 하는지 측정할 수 있도록 작성된 예제 페이지</strong>를 말합니다. 단 한장의 페이지에서 수많은 웹표준 스펙을 포함하고 있으며, 그래픽이 얼마나 잘 표현되는지의 결과를 통해 해당 브라우저의 웹표준 준수율을 한눈에 알 수 있도록 되어있습니다.</p>



<p>현재 <a rel="noreferrer noopener" aria-label="Web Standards Project (WaSP) (opens in a new tab)" href="https://www.webstandards.org/" target="_blank">Web Standards Project (WaSP)</a> 에서 Acid Test 사이트를 운영하고 있으며, 1998년에 처음으로 Acid1 이 개발된 이후로, 2005년에 Acid2 를 거쳐 2007년에는 Acid3 가 개발되었습니다.</p>



<h4>1. ACID 1</h4>



<p>URL : <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://www.w3.org/Style/CSS/Test/CSS1/current/test5526c.htm" target="_blank">https://www.w3.org/Style/CSS/Test/CSS1/current/test5526c.htm</a></p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="717" data-permalink="https://amati.io/2008/02/27/acid-test-for-browser/1336936237-1/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-1.gif?fit=520%2C415&amp;ssl=1" data-orig-size="520,415" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="1336936237-1" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-1.gif?fit=300%2C239&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-1.gif?fit=520%2C415&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-1.gif?w=620&#038;ssl=1" alt="" class="wp-image-717" data-recalc-dims="1"/></figure></div>



<p>웹브라우저 테스트용 페이지로 가장 먼저 개발된 Acid1 테스트는 CSS1 스펙을 중점적으로 테스트할 수 있습니다. 1998년에 개발되었던 페이지가 꾸준히 개선되어 왔으며 가장 최근 버전은 5.5.26.c 버전입니다. 현재 주로 쓰이는 웹브라우저에서는 무난히 통과하고 있구요.</p>



<p>(IE6, IE7, FF2, OP9, SF2 등) 다만 IE5.5 버전 이하에서는 비정상적으로 렌더링되는 것을 확인할 수 있습니다.</p>



<h4>2. ACID2</h4>



<p>URL : <a href="http://acid2.acidtests.org/reference.html" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">http://acid2.acidtests.org/reference.html</a></p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="718" data-permalink="https://amati.io/2008/02/27/acid-test-for-browser/1336936237-2/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-2.gif?fit=285%2C297&amp;ssl=1" data-orig-size="285,297" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="1336936237-2" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-2.gif?fit=285%2C297&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-2.gif?fit=285%2C297&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-2.gif?w=620&#038;ssl=1" alt="" class="wp-image-718" data-recalc-dims="1"/></figure></div>



<p>IE8 이 Acid2 test 를 통과했다고 알려지면서 대중에게 많이 알려지기 시작했지요. Acid2 는 HTML과 CSS2.1 스펙을 중점적으로 테스트를 합니다.<br>표준 CSS2.1 스펙을 완벽하게 지원한다면 위 이미지처럼 웃는 얼굴과 Hello World! 라는 문구가 나타나게 되어있으며, 코 부분을 마우스 커서를 가져가면 파란색으로 바뀌게 됩니다. 하지만, 현존하는 웹브라우저 중에는 이를 완벽하게 지원하는 브라우저가 많지 않은 실정입니다.</p>



<p>IE6 은 물론이고 IE7 에서는 붉은색으로 가득찬 화면을 볼 수 있구요, 심지어 웹표준을 잘 지킨다고 인식되는 FireFox 2 에서도 렌더링이 제대로 되지 않는 모습을 보여주죠.</p>



<p>Acid2 테스트를 처음 통과한 브라우저는 맥의 Safari 입니다. 이후에는 Konquerer, Opera, FireFox3 beta 버전이 통과했구요, 최근에 개발중인 IE8 의 표준모드에서 이 테스트를 통과했다고 알려지고 있습니다.</p>



<p>Acid에서 체크하는 항목은 다음과 같습니다.</p>



<ul><li>Alpha transparency on PNG images – the eyes are transparent PNGs</li><li>The object element</li><li>Absolute, relative and fixed positioning using CSS</li><li>The CSS box model</li><li>CSS tables</li><li>CSS margins</li><li>CSS generated content</li><li>CSS parsing – Acid2 includes a number of illegal CSS statements to test error handling</li><li>Paint order</li><li>CSS line heights</li><li>Hovering effects&nbsp;</li></ul>



<p>Acid2 테스트의 소스가 어떤 구조로 되어있는지 궁금하다면 다음 가이드 페이지를 참조하세요! &#8211; <a rel="noreferrer noopener" aria-label=" (opens in a new tab)" href="https://www.webstandards.org/action/acid2/guide/" target="_blank">https://www.webstandards.org/action/acid2/guide/</a></p>



<h4>3. ACID3</h4>



<p>URL : <a href="http://acid3.acidtests.org/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">http://acid3.acidtests.org/</a></p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="719" data-permalink="https://amati.io/2008/02/27/acid-test-for-browser/1336936237-3/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-3.jpg?fit=677%2C465&amp;ssl=1" data-orig-size="677,465" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="1336936237-3" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-3.jpg?fit=300%2C206&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-3.jpg?fit=620%2C426&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-3.jpg?w=620&#038;ssl=1" alt="" class="wp-image-719" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-3.jpg?w=677&amp;ssl=1 677w, https://i0.wp.com/amati.io/wp-content/uploads/2019/04/1336936237-3.jpg?resize=300%2C206&amp;ssl=1 300w" sizes="(max-width: 620px) 100vw, 620px" data-recalc-dims="1" /></figure></div>



<p>가장 최근에 개발된 Acid3 test 는 HTML5 그룹의 리더인 Ian Hickson 에 의해 개발되었습니다. 자바스크립트로 작성되어 있으며, 이전 Acid1 과 Acid2 테스트를 종합적으로 체크하는 것은 물론이며 Web 2.0 을 위한 동적인 웹 애플리케이션을 만드는데 필요한 스펙을 중점적으로 체크합니다. 이전 테스트가 CSS스펙을 중점적으로 체크했기에 엄밀하게 말해서 웹표준을 테스트한다고 할 수는 없었는데요, Acid3 test 는 이전 테스트에 비해 한층 의미에 맞는 웹표준 스펙을 테스트한다고 볼 수 있겠습니다.</p>



<p>Acid3 test를 완벽하게 통과한다면 위 화면을 보여주게 되어 있는데요, 100개의 테스트를 수행하면서 통과한 테스트 수를 구체적으로 보여주기 때문에 테스트 결과를 객관적으로 볼 수 있도록 바뀐 것이 장점이라고 볼 수 있겠습니다.</p>



<p>현재로선 이 테스트를 제대로 통과하는 웹브라우저는 없다고 알려져 있습니다. 그나마 가장 높은 점수를 낸 웹브라우저는 FireFox3 beta3 버전이 59/100, Opera 9.5 beta 버전이 64/100, Safari 3.1 버전이 64/100 정도의 점수를 내고 있는 상황이지요.</p>



<p>Acid3 테스트에서 체크하는 항목은 다음과 같습니다.</p>



<ul><li>DOM2 Core</li><li>DOM2 Events</li><li>DOM2 HTML</li><li>DOM2 Range</li><li>DOM2 Style (getComputedStyle, …)</li><li>DOM2 Traversal (NodeIterator, TreeWalker)</li><li>DOM2 Views (defaultView)</li><li>ECMAScript</li><li>HTML4 (&lt;object&gt;, &lt;iframe&gt;, …)</li><li>HTTP (Content-Type, 404, …)</li><li>Media Queries</li><li>Selectors (:lang, :nth-child(), combinators, dynamic changes, …)</li><li>XHTML 1.0</li><li>CSS2 (@font-face)</li><li>CSS2.1 (’inline-block’, ‘pre-wrap’, parsing…)</li><li>CSS3 Color (rgba(), hsla(), …)</li><li>CSS3 UI (’cursor’)</li><li>data: URIs</li></ul>



<p>아직까지는 Acid3 테스트는 개발중으로 현재 Final Review 단계에 있다고 합니다. 과연 어떤 웹브라우저가 1등으로 100/100을 받게 될지 궁금하네요. ^^</p>



<hr class="wp-block-separator"/>



<p>과거의 웹브라우저 시장은 Internet Explorer 가 독점적인 시장 점유율을 바탕으로 웹 표준 스펙을 소홀히 해왔기 때문에, 개발자 입장에서도 어쩔 수 없이 IE 기준으로 왜곡된 웹페이지를 개발할 수 밖에 없었으며 사용자의 웹브라우저 선택의 폭도 좁아진다는 문제점이 있었습니다.</p>



<p>하지만 Web 2.0 시대에 들어서며 웹표준의 중요성이 강조되면서 IE를 제작해오던 Microsoft 도 더이상 웹표준을 외면할 수가 없게 된 현재의 상황은 IE도 이전보다 웹표준 스펙을 준수할 수 있도록 개발될 것이라는 기대를 할 수 있겠으며, 이는 개발자와 사용자 모두에게 좋은 영향을 줄 것이라고 생각됩니다.</p>



<p>웹표준이 만능은 아니겠지만, IE의 수많은 비표준 스펙에 휘둘려왔던 웹 관련 개발자라면 웹표준이 얼마나 반가운 존재인지 아실 분은 아시리라 생각합니다. 웹개발에 있어서도 표준적인 개발이 가능한 세상이 빨리 왔으면 좋겠습니다. ^^</p>



<blockquote class="wp-block-quote"><p><span style="color:#f78da7" class="tadv-color">이 포스트는 NHN WSG(Web Standardization Guide) 블로그와 네이버의 개인 블로그에 함께 연재되고 있습니다.</span></p></blockquote>
<p>The post <a rel="nofollow" href="https://amati.io/2008/02/27/acid-test-for-browser/">웹브라우저를 위한 웹표준 테스트 Acid test</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/02/27/acid-test-for-browser/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">154</post-id>	</item>
		<item>
		<title>서브노트북이라는 관점에서 본 Macbook Air</title>
		<link>https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/</link>
				<comments>https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/#comments</comments>
				<pubDate>Thu, 17 Jan 2008 02:05:05 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[기록]]></category>
		<category><![CDATA[Apple]]></category>
		<category><![CDATA[Macbook Air]]></category>
		<category><![CDATA[맥북에어]]></category>
		<category><![CDATA[서브노트북]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=143</guid>
				<description><![CDATA[<p>요즘엔 본업에 관련된 포스팅은 안하고 맨날 이런 지름신 관련 포스팅만 하네요 ^^;;; 간만에 지름신이 내려주시는 모델이 등장했습니다. 예전에 한번 언급했었던 적이 있죠? 애플이 초슬림 서브 맥북을 만들 것이라고 하는&#8230; 그 실체가 드디어 서류봉투에서 등장했습니다~ 바로 이녀석입니다. 초슬림형 서브 맥북&#8230; 맥북 에어 (Macbook Air) 미국 샌프란시스코에서 현지시간으로 15일에 맥월드 엑스포에서 발표된 제품 중에 하나입니다. Intel 코어2듀오 1.6GHz CPU Macbook Air Special Edition (Optional 1.8GHz) 2GB RAM 80GB 4200rpm PATA HDD (Optional 64GB Solid-State-Disk) 멀티터치 가능 터치패드 13.3인치 와이드 LCD (LED Backlight, 1280*800) 풀사이즈 키보드 iSight 카메라 내장 802.11n Wi-Fi2 , Bluetooth&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/">서브노트북이라는 관점에서 본 Macbook Air</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>요즘엔 본업에 관련된 포스팅은 안하고 맨날 이런 <strong>지름신 관련 포스팅</strong>만 하네요 ^^;;;</p>



<p>간만에 지름신이 내려주시는 모델이 등장했습니다. 예전에 한번 언급했었던 적이 있죠? 애플이 초슬림 서브 맥북을 만들 것이라고 하는&#8230; 그 실체가 드디어 <strong>서류봉투</strong>에서 등장했습니다~</p>



<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
<div class="video-container"><iframe class='youtube-player' type='text/html' width='620' height='349' src='https://www.youtube.com/embed/qYIdbBiuhXI?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></div>
</div></figure>



<p>바로 이녀석입니다. 초슬림형 서브 맥북&#8230; <strong>맥북 에어 (Macbook Air)</strong> 미국 샌프란시스코에서 현지시간으로 15일에 맥월드 엑스포에서 발표된 제품 중에 하나입니다.</p>



<ul><li>Intel 코어2듀오 1.6GHz CPU Macbook Air Special Edition (Optional 1.8GHz)</li><li>2GB RAM</li><li>80GB 4200rpm PATA HDD (Optional 64GB Solid-State-Disk)</li><li>멀티터치 가능 터치패드</li><li>13.3인치 와이드 LCD (LED Backlight, 1280*800)</li><li>풀사이즈 키보드</li><li>iSight 카메라 내장</li><li>802.11n Wi-Fi2 , Bluetooth 2.1 + EDR</li><li>0.16 ~ 0.76 인치의 두께 (0.4~1.94cm)</li><li>1.36kg의 무게</li><li>밧데리 수명 5시간</li></ul>



<p>스티브 잡스가 맥월드에서 프리젠테이션할때 대놓고 <strong>소니의 TZ시리즈</strong>와 맥북 에어를 비교하더군요. ^^ 확실히 서브노트북의 양대산맥이라면 소니의 T시리즈와 후지쯔의 P시리즈가 있는데요. 디자인 컨셉이 틀리긴 합니다만 (동양 vs 서양의 관점 차이도 있겠죠?) 과연 기존 서브노트북 라인에 맥북 에어가 훌륭하게 데뷔할 수 있을까요? 서브노트북이라는 관점에서 맥북 에어를 보면 어떨까요??</p>



<hr class="wp-block-separator"/>



<p><strong>Air</strong> 라는 제품명은 이 제품의 컨셉을 명확하게 표현하고 있다고 생각합니다. 세계에서 가장 얇은 노트북이라는 상징적 의미를 잘 나타내고 있지요. 또한 Air 라는 단어는 무선 네트워크에 특화된 제품이라는 의미도 있는데요, 그에 걸맞게 유선랜 RJ45포트는 숨어있고. 가장 최근에 발표된 802.11n 과 함께 블루투스도 지원하고 있네요.</p>



<p>또한 서브노트북으로서는 <strong>상당히 괜찮은(?) CPU</strong> 를 사용하고 있습니다. 현재 소니의 TZ상위 모델이 1.2GHz 코어2듀오를 사용하는 것을 감안한다면 맥북 에어는 소니에 비해 한단계 윗급의 CPU를 사용하고 있는 것 같네요.</p>



<p>다만, 소니 TZ시리즈가 사용하는 ULV 버전을 사용했는지 아닌지는 알 수가 없었습니다. ULV는 초저전압판 CPU 라인업이구요, 이와 별도로 LV 버전이 있는데요&#8230; LV 버전도 모바일용이지만 ULV 버전에 비하면 발열과 전력사용이 더 많은 편입니다. 기본 맥북에서는 2.0GHz를 사용한 것을 보면 1.6GHz의 맥북 에어는 ULV 버전인 것 같긴 합니다만, 설마 LV 라인은 아니겠죠? 스티브잡스가 프리젠테이션 할 때에는 인텔에서 특별히 작은 사이즈로 시피유를 만들어주었다고 자랑(?)도 하더군요&#8230;</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="775" data-permalink="https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/mac-cpu_preserde/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/mac-cpu_preserde.jpg?fit=238%2C162&amp;ssl=1" data-orig-size="238,162" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="mac-cpu_preserde" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/mac-cpu_preserde.jpg?fit=238%2C162&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/mac-cpu_preserde.jpg?fit=238%2C162&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2019/04/mac-cpu_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-775" data-recalc-dims="1"/></figure></div>



<p>80GB의 4200rpm 하드를 사용한 것도 무게와 부피 감소를 위한 방안으로는 납득할 만 합니다.. 사이즈로 보면 2.5인치가 아닌 1.8인치 HDD 를 사용한 것 같습니다. SSD옵션도 있는데요&#8230; SSD 옵션 붙는다고 3000불이 넘어가는 가격은 애플의 탓이 아니죠. 지금은 SSD자체가 시기상조입니다.</p>



<p>13.3인치의 디스플레이도 매력이 있는 것 같습니다. 백라이트가 LED이기 때문에 저만한 두께를 만들어낸 것 같습니다. 백라이트가 LED라면 전력소비가 더 낮아지고 색감도 좋아진다는 장점이 있지요.</p>



<p>가장 얇은 부분이 0.4센티미터 두께라는 건 별 의미는 없구요, <strong>두꺼운 부분이 1.94센티미터</strong>라는 건 상당히 고무적인 스펙입니다. 내부를 어떻게 만들었는지 참 궁금하네요. 소니 TZ시리즈도 상당히 효율적인 레이아웃 덕분에 얇은 두께가 가능했었는데 맥북 에어가 그 두께 기록을 깨버리다니 (물론 옆으론 더 넓지만요) 내부 구조가 상당히 궁금합니다.</p>



<p>무게는 1.36키로그램으로 광학드라이브를 내장한 TZ시리즈와 비슷한 것은&#8230; 알루미늄 케이스의 면적이나 13.3인치 디스플레이만큼 늘어난 표면을 생각하면 비교적 합격점을 주고 싶습니다. 같은 무게일 경우 부피가 더 큰 물건이 체감 무게가 더 낮게 느껴지는 것을 감안하면 오히려 맥북 에어가 더 가볍게 느껴질 수도 있겠네요.</p>



<p>광학드라이브 빼버린 것은 정말 환영할만 하네요&#8230; 서브노트북 써보신 분들은 아시겠지만, 광학드라이브는 오히려 무게와 두께만 증가시키고 쓸일도 없는데 전력 낭비하는 주요 원인 중 하나입니다. 하지만 확장 포트들이 많이 빠진 것은 서브노트북에서는 어쩔 수 없긴 합니다만, USB연결 단자가 하나뿐이라는 건 너무하는 게 아닌가;;</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="776" data-permalink="https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/stevejobs1_preserde/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/stevejobs1_preserde.jpg?fit=250%2C320&amp;ssl=1" data-orig-size="250,320" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stevejobs1_preserde" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/stevejobs1_preserde.jpg?fit=234%2C300&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/stevejobs1_preserde.jpg?fit=250%2C320&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/stevejobs1_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-776" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/stevejobs1_preserde.jpg?w=250&amp;ssl=1 250w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/stevejobs1_preserde.jpg?resize=234%2C300&amp;ssl=1 234w" sizes="(max-width: 250px) 100vw, 250px" data-recalc-dims="1" /></figure></div>



<p>전체적으로는&#8230; 다른 서브급의 노트북에 비교하면 <strong>애플 특유의 디자인 철학과 기술이 잘 결합된 웰메이드 제품</strong>이라고 생각되네요. 다만 걱정되는 것은, 무게와 발열입니다. 서브노트북은 사용시간과 무게가 생명이라고 할수 있겠는데요, 사용시간이 5시간이라고 명시된 것을 보면 두시간이나 겨우 돌릴 수 있을까요? 그리고 저만한 두께에서 발열을 어떻게 해결했는지도 관건이겠네요.</p>



<p>우리나라에선 아무래도 서브노트북보다는 올인원을 좋아하는 분들이 많기 때문에 무게 좀 줄였다고 비싸고 성능도 안좋다고 생각하실 분들이 많을 것 같습니다. 서브노트북의 특징이라면 매우 가볍지만 비싸고 성능은 그럭저럭이고 이동성이 극도로 높으며 데스크탑과 함께 사용하는 서브 용도, 또는 업무용, 비즈니스용, 프리젠테이션 용의 성격이 강합니다. 서브노트북 애용하는 입장에서는 일반적(?) 관점에서 서브노트북을 평가하는 시각이 좀 안타까운 건 사실이지만, 뭐 제가 어떻게 할수 있는 건 아니겠죠.</p>



<p>직업적으로 맥도 염두에 둬야 하는 입장인지라 <strong>맥을 구입할까 생각중</strong>인데요, 이번 맥북 에어 제품이 상당히 맘에 듭니다. 하지만, 윈도 플랫폼을 주로 사용하는 이상 현재 윈도 기반의 서브노트북과 겹치기 때문에 낭비가 될 수 있다는 생각도 드는데요&#8230; 어떻게 할까요? ^^;;;</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="777" data-permalink="https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/overview-box_preserde/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/overview-box_preserde.jpg?fit=202%2C78&amp;ssl=1" data-orig-size="202,78" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="overview-box_preserde" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/overview-box_preserde.jpg?fit=202%2C78&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/overview-box_preserde.jpg?fit=202%2C78&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/overview-box_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-777" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/overview-box_preserde.jpg?w=202&amp;ssl=1 202w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/overview-box_preserde.jpg?resize=200%2C78&amp;ssl=1 200w" sizes="(max-width: 202px) 100vw, 202px" data-recalc-dims="1" /></figure></div>



<p>회사에서만 사용할 용도로는 맥북 에어보다는 일반 맥북이 더 나을수도 있기에 조금 고민중입니다. 차차 리뷰가 뜨면 의문점들을 체크해보고 다시 고민해볼까 합니다~</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/">서브노트북이라는 관점에서 본 Macbook Air</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/01/17/macbook-air-2008-as-sub-laptop/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">143</post-id>	</item>
		<item>
		<title>컨셉 키보드 Optimus Tactus Keyboard</title>
		<link>https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/</link>
				<comments>https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/#comments</comments>
				<pubDate>Fri, 04 Jan 2008 07:35:30 +0000</pubDate>
		<dc:creator><![CDATA[아마티]]></dc:creator>
				<category><![CDATA[스크랩]]></category>
		<category><![CDATA[Art.Lebedev Studio]]></category>
		<category><![CDATA[Optimus Maximus]]></category>
		<category><![CDATA[Optimus Tactus]]></category>

		<guid isPermaLink="false">http://minicube.kr/wp/?p=137</guid>
				<description><![CDATA[<p>저는 컴퓨터 입력기기에 대한 욕심이 많은 편입니다. 현재도 마우스보단 6*8사이즈 타블렛을 많이 사용하고 있구요. 만원도 안하는 키보드를 주로 이용하는 다른 사람들이 보기에는 &#8220;너 미쳤구나&#8221;라고 하실 만한 키보드도 사용하고 있습니다. 물론 마우스도 일반적인 것(?)은 아닙니다. ㅋㅋ 몸에 직접적으로 접촉하는 것은 이유불문 좋은 것을 쓰자! 는 것이 저의 원칙 중 하나이기도 한데요. 최근 키보드 쪽에 관심있으신 분은 어느 러시아 연구소의 칼라OLED 내장 키보드를 아실 겁니다. 바로 이 물건이죠, Optimus Maximus Keyboard. 113키의 모든 키캡에 인쇄 대신 칼라 OLED가 내장되어 있구요, 사용자 설정에 따라 표시 문자도 다양하게 바꿀 수 있습니다. (위는 러시아 문자&#46;&#46;&#46;</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/">컨셉 키보드 Optimus Tactus Keyboard</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></description>
								<content:encoded><![CDATA[
<p>저는 <strong>컴퓨터 입력기기에 대한 욕심이 많은 편</strong>입니다. 현재도 마우스보단 6*8사이즈 타블렛을 많이 사용하고 있구요. 만원도 안하는 키보드를 주로 이용하는 다른 사람들이 보기에는 &#8220;너 미쳤구나&#8221;라고 하실 만한 키보드도 사용하고 있습니다. <s>물론 마우스도 일반적인 것(?)은 아닙니다. ㅋㅋ</s></p>



<p>몸에 직접적으로 접촉하는 것은 이유불문 좋은 것을 쓰자! 는 것이 저의 원칙 중 하나이기도 한데요. 최근 키보드 쪽에 관심있으신 분은 어느 러시아 연구소의 칼라OLED 내장 키보드를 아실 겁니다.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="782" data-permalink="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/optimus_maximus_01w_preserde/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/optimus_maximus_01w_preserde.jpg?fit=520%2C176&amp;ssl=1" data-orig-size="520,176" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="optimus_maximus_01w_preserde" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/optimus_maximus_01w_preserde.jpg?fit=300%2C102&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/optimus_maximus_01w_preserde.jpg?fit=520%2C176&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/optimus_maximus_01w_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-782" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2019/04/optimus_maximus_01w_preserde.jpg?w=520&amp;ssl=1 520w, https://i2.wp.com/amati.io/wp-content/uploads/2019/04/optimus_maximus_01w_preserde.jpg?resize=300%2C102&amp;ssl=1 300w" sizes="(max-width: 520px) 100vw, 520px" data-recalc-dims="1" /></figure></div>



<p>바로 이 물건이죠, <strong>Optimus Maximus Keyboard</strong>. 113키의 모든 키캡에 인쇄 대신 칼라 OLED가 내장되어 있구요, 사용자 설정에 따라 표시 문자도 다양하게 바꿀 수 있습니다. (위는 러시아 문자 표시)</p>



<p>이 키보드가 컨셉으로 등장한지는 상당히 오래 되었구요(3년?), OLED에 표시할 이미지를 어떻게 USB 로 보낼 수 있을 것인지, 소프트웨어는 어떻게 만들 것인지 등의 난항을 겪다가 결국 현재는 완성되어 예약판매 중에 있답니다~</p>



<p>특이한 것 좋아하시는 분은 정말 좋아하실 것 같은데요.. (저 포함) 가격이 엄청 비쌉니다.</p>



<table class="wp-block-table"><tbody><tr><td>종류</td><td>가격</td></tr><tr><td>113키 풀 OLED내장</td><td>1,564$</td></tr><tr><td>47키 OLED내장</td><td>999$</td></tr><tr><td>10키 OLED내장</td><td>599$</td></tr><tr><td>1키 (스페이스) OLED내장</td><td>462$</td></tr></tbody></table>



<p>고가 키보드(?) 답게 기계식 키보드의 대명사인 체리 ML스위치를 사용했다고 하더군요. 국외 반응은 모르겠지만, 국내 반응이야&#8230; <strong><span style="color:#cf2e2e" class="tadv-color">뻔할 뻔</span></strong> 자죠? 만원짜리 키보드를 주로 사용하는 대다수 분들의 반응은 보고 계신 여러분들의 견해와 거의 다르지 않을 거구요. (&#8230;)</p>



<p>그나마 국내에서 키보드를 좋아하는 사람들의 모임인 키보드 전문 커뮤니티 <a href="http://www.kbdmania.net/xe/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">kbdmania.net</a> 분들도 <strong>사용은 하고 싶지만, 너무 비싸다</strong>는 반응이 대부분입니다.</p>



<p>현재 OLED 의 단가라던가 소프트웨어 처리방식, 컨셉 제품의 구현 등을 생각하면 납득 못하는 가격은 아닙니다만, 솔직히 비싸긴 하죠. ^^ 어쨌든 당시에 말도 안되는 상상 속의 물건을 오랫동안 꾸준히 연구해서 결국 출시해 낸 <a rel="noreferrer noopener" aria-label="Art.Lebedev Studio (opens in a new tab)" href="https://www.artlebedev.com/" target="_blank">Art.Lebedev Studio</a> 분들께 찬사를 보내는 바입니다.</p>



<hr class="wp-block-separator"/>



<p>그런데 이 분들이 최근 또다른 컨셉 제품을 발표하였습니다. Optimus Tactus Keyboard. &#8216;택터스&#8217;라고 읽으면 될까요?? </p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="784" data-permalink="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/optitact-side_preserde/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-side_preserde.jpg?fit=500%2C317&amp;ssl=1" data-orig-size="500,317" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="optitact-side_preserde" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-side_preserde.jpg?fit=300%2C190&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-side_preserde.jpg?fit=500%2C317&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-side_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-784" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-side_preserde.jpg?w=500&amp;ssl=1 500w, https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-side_preserde.jpg?resize=300%2C190&amp;ssl=1 300w" sizes="(max-width: 500px) 100vw, 500px" data-recalc-dims="1" /><figcaption>image from <a href="https://www.artlebedev.com/optimus/tactus/" target="_blank" rel="noreferrer noopener" aria-label=" (opens in a new tab)">https://www.artlebedev.com/optimus/tactus/</a></figcaption></figure></div>



<p>자세히 보시면 아시겠지만, Tactus 키보드에는 <strong>물리적인 키가 존재하지 않습니다.</strong> 쉽게 말해 전면 터치스크린 키보드라고 생각하시면 될 듯 한데요. 물리적으로 키가 존재하지 않기 때문에 그래픽에 따라선 얼마든지 키의 모양이나 사이즈를 변형시킬 수 있지요.</p>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="783" data-permalink="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/optitact-color_preserde/" data-orig-file="https://i2.wp.com/amati.io/wp-content/uploads/2008/01/optitact-color_preserde.jpg?fit=520%2C155&amp;ssl=1" data-orig-size="520,155" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="optitact-color_preserde" data-image-description="" data-medium-file="https://i2.wp.com/amati.io/wp-content/uploads/2008/01/optitact-color_preserde.jpg?fit=300%2C89&amp;ssl=1" data-large-file="https://i2.wp.com/amati.io/wp-content/uploads/2008/01/optitact-color_preserde.jpg?fit=520%2C155&amp;ssl=1" src="https://i2.wp.com/amati.io/wp-content/uploads/2008/01/optitact-color_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-783" srcset="https://i2.wp.com/amati.io/wp-content/uploads/2008/01/optitact-color_preserde.jpg?w=520&amp;ssl=1 520w, https://i2.wp.com/amati.io/wp-content/uploads/2008/01/optitact-color_preserde.jpg?resize=300%2C89&amp;ssl=1 300w" sizes="(max-width: 520px) 100vw, 520px" data-recalc-dims="1" /><figcaption>Color Test Mode</figcaption></figure></div>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="785" data-permalink="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/optitact-text_preserde/" data-orig-file="https://i0.wp.com/amati.io/wp-content/uploads/2008/01/optitact-text_preserde.jpg?fit=520%2C222&amp;ssl=1" data-orig-size="520,222" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="optitact-text_preserde" data-image-description="" data-medium-file="https://i0.wp.com/amati.io/wp-content/uploads/2008/01/optitact-text_preserde.jpg?fit=300%2C128&amp;ssl=1" data-large-file="https://i0.wp.com/amati.io/wp-content/uploads/2008/01/optitact-text_preserde.jpg?fit=520%2C222&amp;ssl=1" src="https://i0.wp.com/amati.io/wp-content/uploads/2008/01/optitact-text_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-785" srcset="https://i0.wp.com/amati.io/wp-content/uploads/2008/01/optitact-text_preserde.jpg?w=520&amp;ssl=1 520w, https://i0.wp.com/amati.io/wp-content/uploads/2008/01/optitact-text_preserde.jpg?resize=300%2C128&amp;ssl=1 300w" sizes="(max-width: 520px) 100vw, 520px" data-recalc-dims="1" /><figcaption>Typing Mode</figcaption></figure></div>



<div class="wp-block-image"><figure class="aligncenter"><img data-attachment-id="786" data-permalink="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/optitact-video_preserde/" data-orig-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-video_preserde.jpg?fit=520%2C223&amp;ssl=1" data-orig-size="520,223" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="optitact-video_preserde" data-image-description="" data-medium-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-video_preserde.jpg?fit=300%2C129&amp;ssl=1" data-large-file="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-video_preserde.jpg?fit=520%2C223&amp;ssl=1" src="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-video_preserde.jpg?w=620&#038;ssl=1" alt="" class="wp-image-786" srcset="https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-video_preserde.jpg?w=520&amp;ssl=1 520w, https://i1.wp.com/amati.io/wp-content/uploads/2008/01/optitact-video_preserde.jpg?resize=300%2C129&amp;ssl=1 300w" sizes="(max-width: 520px) 100vw, 520px" data-recalc-dims="1" /><figcaption>Video Mode</figcaption></figure></div>



<p>역시 국내 반응은&#8230; <span style="color:#ff6900" class="tadv-color">엄청 비쌀 것 같다, 타이핑 할때 눌려 들어가는 것이 없고 키감이 없어 딱딱하기 때문에 VDT증후군이 걱정된다, 액정이라 지문이 걱정된다(?), 보호필름 깔아야 하냐</span>&nbsp;등등&#8230;</p>



<p>일전에 말씀드린 것처럼 저는 터치스크린을 상당히 좋아합니다. 어떤 UI라도 기기를 바꾸지 않고 소프트웨어적으로도 쉽게 바꿀 수 있으며 물리적 제한을 받지 않기 때문에 어떤 모양도 가능하다는 것이죠. 물론 하드웨어 적으로는 손가락의 건강이 걱정되긴 하지만, 키감은 그때 평가하는 걸로도 늦지 않을 듯 하구요, 아무튼 <strong>개인적으론 기대</strong>하고 있습니다.</p>



<p>이 키보드도 실제 구현하는 데에 상당히 난항을 겪을 것 같습니다. 컨셉처럼 구현하기에는 너무나도 장벽이 많죠. 키감을 어떻게 위화감 없이 구현할지, 발열이 없으면서도 선명한 화질을 보여줄 수 있는 디스플레이가 존재하는지, (현재의 AMOLED라면 실현 가능할수도 있겠네요) 키보드에 이미지 처리나 동영상 전송은 어떻게 할 것인지&#8230; (어쩌면 USB2, IEEE1394 대역폭도 부족할지도 모르겠네요)</p>



<p>그래도 이분들&#8230; 언젠간 결국 만들어내겠죠? 아마 2012년 정도가 되지 않을까 생각됩니다. ㅋㅋ</p>
<p>The post <a rel="nofollow" href="https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/">컨셉 키보드 Optimus Tactus Keyboard</a> appeared first on <a rel="nofollow" href="https://amati.io">amati.io</a>.</p>
]]></content:encoded>
							<wfw:commentRss>https://amati.io/2008/01/04/optimus-tactus-keyboard-concept/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
						<post-id xmlns="com-wordpress:feed-additions:1">137</post-id>	</item>
	</channel>
</rss>
