<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Creative Programmer</title>
<link>https://creativeprm.tistory.com/</link>
<description></description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 19:53:59 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>creative_prm</managingEditor>
<image>
<title>Creative Programmer</title>
<url>http://cfile8.uf.tistory.com/image/236BD03F56821168376589</url>
<link>https://creativeprm.tistory.com</link>
<description></description>
</image>
<item>
<title>Web   Div Tag - Drag Drop</title>
<link>https://creativeprm.tistory.com/327</link>
<description>&lt;p&gt;&lt;a href=&quot;http://alik.info/p/86&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://alik.info/p/86&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://www.jqueryscript.net/demo/jQuery-Plugin-To-Sort-Nested-Lists-Using-Drag-Drop-nestedSortable/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;http://www.jqueryscript.net/demo/jQuery-Plugin-To-Sort-Nested-Lists-Using-Drag-Drop-nestedSortable/&lt;/a&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 728 90 Tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-4038755821428610&quot;
     data-ad-slot=&quot;6664312689&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>App &amp; Web</category>
<author>creative_prm</author>
<guid>https://creativeprm.tistory.com/327</guid>
<comments>https://creativeprm.tistory.com/327#entry327comment</comments>
<pubDate>Mon, 25 Sep 2017 17:02:57 +0900</pubDate>
</item>
<item>
<title>Interface Object - 인터페이스와 클래스 차이?</title>
<link>https://creativeprm.tistory.com/326</link>
<description>&lt;div style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s1_TitleDiv&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s1_lblTitle&quot; class=&quot;cTitle&quot; style=&quot;font-family: Gulim, 굴림; font-size: 16px; font-weight: bold; color: rgb(153, 51, 0); text-decoration-line: underline;&quot;&gt;C# 인터페이스&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s1_DescDiv&quot; class=&quot;section_desc&quot; style=&quot;font-size: 15.4px; width: 760px;&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s1_lblText&quot;&gt;클래스와 비슷하게 인터페이스는 메서드, 속성, 이벤트 등을 갖지만, 인터페이스는 이를 직접 구현하지 않고 단지 정의(prototype definition)만을 갖는다. 즉, 인터페이스는 추상 멤버(abstract member)로만 구성된 추상 베이스클래스(abstract base class)와 개념적으로 비슷하다. 클래스가 인터페이스를 가지는 경우 해당 인터페이스의 모든 멤버에 대한 구현(implementation)을 제공해야 한다.&lt;br /&gt;&lt;br /&gt;클래스는 하나의 베이스 클래스만을 가질 수 있지만 인터페이스는 여러 개를 가질 수 있다. 아래의 예를 보면, MyConnection이라는 클래스는 Component라는 하나의 베이스클래스와 IDbConnection, IDisposable이라는 2개의 인터페이스를 상속하고 있음을 알 수 있다.&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;example-mini&quot; style=&quot;background-color: rgb(229, 238, 255); margin: 0px; border: 1px solid rgb(212, 212, 212); width: 700px; clear: both;&quot;&gt;&lt;textarea name=&quot;ctl00$ctl00$ctl00$MainPlaceHolder$MainBar$MainContent$s1$exampleMini$textCode&quot; rows=&quot;3&quot; cols=&quot;20&quot; readonly=&quot;readonly&quot; id=&quot;MainPlaceHolder_MainBar_MainContent_s1_exampleMini_textCode&quot; class=&quot;example-mini-code&quot; style=&quot;background-color: rgb(232, 250, 250); color: rgb(0, 0, 153); padding: 10px; border-color: rgb(212, 212, 212); width: 678px; font-size: 15.4px; overflow: hidden;&quot;&gt;&lt;/textarea&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;hr style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s2_TitleDiv&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s2_lblTitle&quot; class=&quot;cTitle&quot; style=&quot;font-family: Gulim, 굴림; font-size: 16px; font-weight: bold; color: rgb(153, 51, 0); text-decoration-line: underline;&quot;&gt;C# 인터페이스의 정의&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s2_DescDiv&quot; class=&quot;section_desc&quot; style=&quot;font-size: 15.4px; width: 760px;&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s2_lblText&quot;&gt;인터페이스는 C# 키워드 interface를 사용하여 정의한다. 인터페이스 정의 시에는 (메서드와 같은) 내부 멤버들에 대해 public과 같은 접근 제한자를 사용하지 않는다.&lt;br /&gt;예를 들어, 아래 CompareTo() 메서드 앞에 public 을 쓸 수 없다.&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;example-mini&quot; style=&quot;background-color: rgb(229, 238, 255); margin: 0px; border: 1px solid rgb(212, 212, 212); width: 700px; clear: both;&quot;&gt;&lt;textarea name=&quot;ctl00$ctl00$ctl00$MainPlaceHolder$MainBar$MainContent$s2$exampleMini$textCode&quot; rows=&quot;4&quot; cols=&quot;20&quot; readonly=&quot;readonly&quot; id=&quot;MainPlaceHolder_MainBar_MainContent_s2_exampleMini_textCode&quot; class=&quot;example-mini-code&quot; style=&quot;background-color: rgb(232, 250, 250); color: rgb(0, 0, 153); padding: 10px; border-color: rgb(212, 212, 212); width: 678px; font-size: 15.4px; overflow: hidden;&quot;&gt;&lt;/textarea&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;hr style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s3_TitleDiv&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s3_lblTitle&quot; class=&quot;cTitle&quot; style=&quot;font-family: Gulim, 굴림; font-size: 16px; font-weight: bold; color: rgb(153, 51, 0); text-decoration-line: underline;&quot;&gt;C# 인터페이스의 구현&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s3_DescDiv&quot; class=&quot;section_desc&quot; style=&quot;font-size: 15.4px; width: 760px;&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s3_lblText&quot;&gt;C# 클래스가 인터페이스를 갖는 경우 인터페이스의 모든 멤버에 대한 구현을 제공해야 한다. C# 에서는 인터페이스로부터 직접 new를 사용하여 객체를 생성할 수 없다. 아래의 클래스는 IComparable이라는 인터페이스를 갖는 경우로서 CompareTo() 메서드를 구현한 예이다.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;example&quot; style=&quot;background-color: rgb(229, 238, 255); margin: 0px; padding: 10px; border: 1px solid rgb(212, 212, 212); background-repeat: repeat-x; width: 700px; clear: both;&quot;&gt;&lt;h2 class=&quot;example-title&quot; style=&quot;color: rgb(0, 102, 0);&quot;&gt;예제&lt;/h2&gt;&lt;div&gt;&lt;div class=&quot;sunlight-container&quot; style=&quot;clear: both !important; position: relative !important; margin: 10px 0px !important; font-family: Consolas, Inconsolata, Monaco, &amp;quot;Courier New&amp;quot; !important; font-size: 12px !important; line-height: 15px !important;&quot;&gt;&lt;div class=&quot;sunlight-code-container&quot; style=&quot;border-width: initial; border-style: none; border-image: initial; clear: both !important; position: relative !important; border-color: rgb(150, 150, 150) !important; background-color: rgb(255, 255, 255) !important;&quot;&gt;&lt;pre class=&quot;sunlight-highlight-csharp example-codebox sunlight-highlighted&quot; style=&quot;background-color: rgb(255, 255, 255); padding: 4px; border: 1px solid rgb(212, 212, 212); width: 690px; overflow-x: auto; overflow-y: hidden; z-index: 1; position: relative; font-family: Consolas, Inconsolata, Monaco, &amp;quot;Courier New&amp;quot; !important; line-height: 15px !important; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span class=&quot;sunlight-csharp&quot; style=&quot;background: transparent;&quot;&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;MyClass&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;:&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;IComparable&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;background: transparent; color: rgb(0, 153, 0) !important;&quot;&gt;//&amp;nbsp;IComparable&amp;nbsp;의&amp;nbsp;CompareTo&amp;nbsp;메서드&amp;nbsp;구현&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;int&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;CompareTo&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;object&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;MyClass&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;target&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;CompareTo&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;hr style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, GulimChe; font-size: 14px; letter-spacing: 1px;&quot;&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s4_TitleDiv&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s4_lblTitle&quot; class=&quot;cTitle&quot; style=&quot;font-family: Gulim, 굴림; font-size: 16px; font-weight: bold; color: rgb(153, 51, 0); text-decoration-line: underline;&quot;&gt;C# 인터페이스의 사용&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div id=&quot;MainPlaceHolder_MainBar_MainContent_s4_DescDiv&quot; class=&quot;section_desc&quot; style=&quot;font-size: 15.4px; width: 760px;&quot;&gt;&lt;span id=&quot;MainPlaceHolder_MainBar_MainContent_s4_lblText&quot;&gt;C# 실무에서 클래스와 인터페이스를 잘 정의하고 사용하는 것은 매우 중요하다. 비지니스를 객체지향 프로그래밍으로 디자인하고 구현하는데 가장 중요한 핵심이기 때문이다. 자연스럽게 .NET Framework도 상당히 많은 인터페이스를 구현했으며, 자주 사용되고 있다.&lt;br /&gt;&lt;br /&gt;다음의 예는 IDnConnection이라는 인터페이스를 사용하는 예제이다. 이 코드에서 GetDbConnection() 메서드는 시스템의 구성파일로부터 DB타입과 Connection String을 받아와 데이타베이스 Connection을 리턴한다. GetDbConnection()가 DB connection을 리턴할 때 IDbConnection을 리턴하고 있는데, 이 때문에 이 메서드를 사용하는 클라이언트에서는 어떤 DB를 사용하든지 상관없이 모든 DB 클래스에 공통적으로 구현된 IDbConnection 메서드들을 사용할 수 있게 된다.&lt;/span&gt;&amp;nbsp;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;example&quot; style=&quot;background-color: rgb(229, 238, 255); margin: 0px; padding: 10px; border: 1px solid rgb(212, 212, 212); background-repeat: repeat-x; width: 700px; clear: both;&quot;&gt;&lt;h2 class=&quot;example-title&quot; style=&quot;color: rgb(0, 102, 0);&quot;&gt;예제&lt;/h2&gt;&lt;div&gt;&lt;div class=&quot;sunlight-container&quot; style=&quot;clear: both !important; position: relative !important; margin: 10px 0px !important; font-family: Consolas, Inconsolata, Monaco, &amp;quot;Courier New&amp;quot; !important; font-size: 12px !important; line-height: 15px !important;&quot;&gt;&lt;div class=&quot;sunlight-code-container&quot; style=&quot;border-width: initial; border-style: none; border-image: initial; clear: both !important; position: relative !important; border-color: rgb(150, 150, 150) !important; background-color: rgb(255, 255, 255) !important;&quot;&gt;&lt;pre class=&quot;sunlight-highlight-csharp example-codebox sunlight-highlighted&quot; style=&quot;background-color: rgb(255, 255, 255); padding: 4px; border: 1px solid rgb(212, 212, 212); width: 690px; overflow-x: auto; overflow-y: hidden; z-index: 1; position: relative; font-family: Consolas, Inconsolata, Monaco, &amp;quot;Courier New&amp;quot; !important; line-height: 15px !important; margin-top: 0px !important; margin-bottom: 0px !important;&quot;&gt;&lt;span class=&quot;sunlight-csharp&quot; style=&quot;background: transparent;&quot;&gt;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;background: transparent; color: rgb(0, 153, 0) !important;&quot;&gt;//&amp;nbsp;인터페이스&amp;nbsp;사용하기&amp;nbsp;때문에&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-comment&quot; style=&quot;background: transparent; color: rgb(0, 153, 0) !important;&quot;&gt;//&amp;nbsp;특정&amp;nbsp;DB&amp;nbsp;Connection을&amp;nbsp;신경&amp;nbsp;쓸&amp;nbsp;필요가&amp;nbsp;없다&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;IDbConnection&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbCon&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;GetDbConnection&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbCon&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;if&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbCon&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;State&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;==&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;ConnectionState&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbCon&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;sunlight-comment&quot; style=&quot;background: transparent; color: rgb(0, 153, 0) !important;&quot;&gt;//&amp;nbsp;IDbConnection&amp;nbsp;인터페이스를&amp;nbsp;리턴&lt;/span&gt;
&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;IDbConnection&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;GetDbConnection&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;IDbConnection&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbConn&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;string&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;cn&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;ConfigurationManager&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;AppSettings&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-string&quot; style=&quot;background: transparent; color: rgb(153, 0, 0) !important;&quot;&gt;&quot;Connection&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;switch&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;ConfigurationManager&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;AppSettings&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sunlight-string&quot; style=&quot;background: transparent; color: rgb(153, 0, 0) !important;&quot;&gt;&quot;DbType&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;{&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;case&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-string&quot; style=&quot;background: transparent; color: rgb(153, 0, 0) !important;&quot;&gt;&quot;SQLServer&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;:&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbConn&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;SqlConnection&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;case&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-string&quot; style=&quot;background: transparent; color: rgb(153, 0, 0) !important;&quot;&gt;&quot;Oracle&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;:&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbConn&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;OracleConnection&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;case&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-string&quot; style=&quot;background: transparent; color: rgb(153, 0, 0) !important;&quot;&gt;&quot;OleDB&quot;&lt;/span&gt;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;:&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbConn&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-operator&quot; style=&quot;background: transparent;&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-named-ident&quot; style=&quot;background: transparent; color: rgb(43, 145, 175) !important;&quot;&gt;OleDbConnection&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;cn&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;sunlight-keyword&quot; style=&quot;background: transparent; color: rgb(0, 0, 255) !important;&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;sunlight-ident&quot; style=&quot;background: transparent;&quot;&gt;dbConn&lt;/span&gt;&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;sunlight-punctuation&quot; style=&quot;background: transparent;&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 728 90 Tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-4038755821428610&quot;
     data-ad-slot=&quot;6664312689&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>VB.net &amp; WPF &amp; C#</category>
<author>creative_prm</author>
<guid>https://creativeprm.tistory.com/326</guid>
<comments>https://creativeprm.tistory.com/326#entry326comment</comments>
<pubDate>Wed, 02 Aug 2017 15:12:49 +0900</pubDate>
</item>
<item>
<title>Structure Classes Example</title>
<link>https://creativeprm.tistory.com/325</link>
<description>&lt;pre style=&quot;padding: 5px; margin-top: 0px; margin-bottom: 0px; overflow: auto; word-wrap: normal; font-family: Consolas, Courier, monospace !important;&quot;&gt;' Structure to hold and manage a complex number
Public Structure Complex
   Public Real As Double
   Public Imag As Double   ' &quot;Imaginary&quot; part (coefficient of &quot;i&quot;)
   ' Add another complex number to this one:
   Public Function Plus(ByVal Operand As Complex) As Complex
      Plus.Real = Operand.Real + Real
      Plus.Imag = Operand.Imag + Imag
   End Function
   ' Multiply this complex number by another one:
   Public Function Times(ByVal Operand As Complex) As Complex
      Times.Real = (Operand.Real * Real) - (Operand.Imag * Imag)
      Times.Imag = (Operand.Imag * Real) + (Operand.Real * Imag)
   End Function
   ' Invert this complex number:
   Public Function Reciprocal() As Complex
      Dim Denominator As Double = (Real * Real) + (Imag * Imag)
      If Denominator = 0 Then Throw New System.DivideByZeroException()
      Reciprocal.Real = Real / Denominator
      Reciprocal.Imag = -Imag / Denominator
   End Function
End Structure   ' Complex&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;padding: 5px; margin-top: 0px; margin-bottom: 0px; overflow: auto; word-wrap: normal; font-family: Consolas, Courier, monospace !important;&quot;&gt;' Classes to hold data for various types of employees
Public Class Employee
   Public GivenName As String
   Public FamilyName As String
   Public Supervisor As Manager
   Public PhoneNumber As String   ' Allows &quot;-&quot;, &quot;.&quot;, &quot;x&quot; in number
End Class   ' Employee
' Manager of one or more other employees:
Public Class Manager
   Inherits Employee
   Public DirectReports() As Employee
End Class   ' Manager
' Temporary employee engaged for a limited time period:
Public Class Temporary
   Inherits Employee
   Public LastWorkDate As Date
End Class   ' Temporary
' Temporary employee contracted from an employment agency:
Public Class Contractor
   Inherits Temporary
   Public AgencyName As String
   Public AgencyPhoneNumber As String
End Class   ' Contractor&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 728 90 Tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-4038755821428610&quot;
     data-ad-slot=&quot;6664312689&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>VB.net &amp; WPF &amp; C#</category>
<category>CLASS</category>
<category>structure</category>
<author>creative_prm</author>
<guid>https://creativeprm.tistory.com/325</guid>
<comments>https://creativeprm.tistory.com/325#entry325comment</comments>
<pubDate>Wed, 02 Aug 2017 14:19:42 +0900</pubDate>
</item>
<item>
<title>Java Reflection</title>
<link>https://creativeprm.tistory.com/324</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(45, 44, 45); font-family: gulim; font-size: 18pt;&quot;&gt;&lt;b&gt;Java Reflection 정의&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;u&gt;리플렉션이란 객체를 통해 클래스의 정보를 분석해 내는 프로그램 기법을 말한다.&amp;nbsp;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;투영, 반사 라는 사전적인 의미를 지니고 있다.&lt;/span&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: transparent; font-size: 9pt; line-height: 1.5;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;스프링을 공부하다가 보면 BeanFactory 라는 Spring Container 개념을 학습하게 된다.&lt;/p&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;이 BeanFactory는 어플리케이션이 실행한 후 객체가 호출 될 당시 객체의 인스턴스를 생성하게 되는데&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;그 때 필요한 기술이 Reflection이다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;자바는 스크립트 언어가 아닌 컴파일 언어이다. 물론 .java -&amp;gt; .class -&amp;gt; 실행이라는 2단계의 메커니즘을 가지고 있지만 컴파일 언어로 분리하는 게 옳다. 원래 자바에서는 동적으로 객체를 생성하는 기술이 없었다. 그리고 동적으로 인스턴스를 생성하는 Reflection으로 그 역활을 대신하게 된다.&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;리플렉션이란 객체를 통해 클래스의 정보를 분석해 내는 프로그램 기법을 말한다. 투영, 반사 라는 사전적인 의미를 지니고 있다&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;가정을 해 보자. 만약 객체의 메모리만을 알고 있고, 그리고 객체의 형에 대해서는 모른다고 생각하보자,&amp;nbsp;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;리플렉션으로 형은 알고 있지만 형변환을 할 수 없는 상태에서 객체의 메서드를 호출할 수 있다.&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;/p&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;Class c = Data.class;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;//Class c = Class.forName(&quot;클래스이름&quot;);&lt;/div&gt;&lt;div style=&quot;margin: 0px 0px 0px 80px; padding: 0px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;Method[] m = c.getMethods(); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5;&quot;&gt;Field[] f = c.getFields();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5;&quot;&gt;Constructor[] cs = c.getConstructors();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5;&quot;&gt;Class[] inter = c.getInterfaces();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5;&quot;&gt;Class superClass = c.getSuperclass();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; font-size: 14px; line-height: 1.5;&quot;&gt;&lt;/div&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;b&gt;Java Reflection 의 사용&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;span class=&quot;byline&quot;&gt;By Glen McCluskey&lt;br /&gt;January 1998&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;span class=&quot;byline&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;reflection 은 자바의 특징이다. 실행중인 자바프로그램 내부를 검사하고 내부의 속성을 수정할 수 있도록 한다. 예를 들어, 어떤 자바클래스가 가진 모든 멤버의 이름을 얻거나 보여줄 수 있다.&lt;br /&gt;자바에서 클래스가 그 자신을 조사하고 수정하는 것이&amp;nbsp; 많다고 할수는 없으나 다른 언어에서는 볼수 없는 특징이다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;reflection 이 구체적인 쓰임중에 하나가 빌더툴을 이용해서 소프트웨어 콤포넌트를 만드는 곳에서 이다. 툴은 reflection 을 사용해서 동적으로 로딩되는 자바 콤포넌트(클래스)의 속성을 얻을 수 있다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;strong&gt;예제&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.Method;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class&amp;nbsp;DumpMethods&amp;nbsp;{&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class c = Class.forName(args[0]);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Method m[] = c.getDeclaredMethods();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;for (int i = 0; i &amp;lt; m.length; i++)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;System.out.println(m[i].toString());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;명령&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;java DumpMethods java.util.Stack&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;실행 결과&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp; public java.lang.Object java.util.Stack.push(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.lang.Object)&lt;br /&gt;&amp;nbsp;&amp;nbsp; public synchronized&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.lang.Object java.util.Stack.pop()&lt;br /&gt;&amp;nbsp;&amp;nbsp; public synchronized&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.lang.Object java.util.Stack.peek()&lt;br /&gt;&amp;nbsp;&amp;nbsp; public boolean java.util.Stack.empty()&lt;br /&gt;&amp;nbsp;&amp;nbsp; public synchronized&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int java.util.Stack.search(java.lang.Object)&lt;br /&gt;&amp;nbsp;&lt;br /&gt;이 프로그램은 java.util.Stack 의 속성과 반환값에 따라 메소드리스트를 출력한다.&lt;br /&gt;이 프로그램은 Class.forName 을 통해서 클래스를 로딩하고 getDeclaredMethods 을 통해서 클래스에서 정의한 메소드리스트를 얻는다. java.lang.reflect.Method&amp;nbsp; 는 단일 메쏘드를 나타내는 클래스이다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Reflection 을 사용한 Set up&lt;/span&gt;&lt;br /&gt;&lt;/strong&gt;Method 와 같은 reflection class 는 java.lang.reflect 에 있다. 이 클래스를 사용하기 위해서는 세가지 스텝을 밟아야 한다.&lt;br /&gt;첫번째는 수정하기를 원하는 클래스의 java.lang.Class 객체를 얻어야 한다. java.lang.Class 는 클래스를 표현하고, 실행중인 자바 프로그램과 인터페이스한다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;자바기본형에 대한 클래스 정보를 얻는 방법.&lt;br /&gt;방법 1 :&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; Class c = Class.forName(&quot;java.lang.String&quot;);&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;방법 2 :&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; Class c = int.class;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;방법 3 : 기본형의 경우 (Integer 와 같은) Wrapper 에 기정의된 TYPE을 사용한다.&amp;nbsp;&lt;br /&gt;&amp;nbsp; Class c = Integer.TYPE;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;두번째 스텝은 getDeclaredMethods와 같은 메소드를 Call 해서, 클래스에 정의된 모든 메소드의 리스트를 얻는다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;세번째 스텝은 정보 수정을 위해 Reflection API 를 이용한다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&amp;nbsp; Class c = Class.forName(&quot;java.lang.String&quot;);&lt;br /&gt;&amp;nbsp;&amp;nbsp; Method m[] = c.getDeclaredMethods();&lt;br /&gt;&amp;nbsp;&amp;nbsp; System.out.println(m[0].toString());&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;String 에 선언된 첫번째 메소트를 보여준다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Simulating the instanceof Operator&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;클래스 정보가 있으면, 다음 스텝은 클래스 객체에 대해서 기본적인 질의다. Class.isInstance 메쏘드는 instanceof 를 통해서 구현될 수 있다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;class A {}&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class instance1 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class cls = Class.forName(&quot;A&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;			&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;boolean b1 = cls.isInstance(new Integer(37));&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.out.println(b1);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;			&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;boolean b2 = cls.isInstance(new A());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.out.println(b2);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;			&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;br /&gt;A의 클래스객체가 만들어진다. 그리고 class instance objects 가 A 의 인스턴스인지 체크한다.&amp;nbsp;&lt;br /&gt;Integer(37) 은 아니지만, new A() 는 True 이다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;클래스 메쏘드 찾기&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;reflection 의 가장 기초적인 쓰임은 클래스에서 정의한 메소드가 무엇인지 찾아내는 것이다. 이를 위해서 다음 코드가 사용될 수 있다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class method1 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;private int f1(Object p, int x) throws NullPointerException {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;if (p == null)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;throw new NullPointerException();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;return x;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class cls = Class.forName(&quot;method1&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Method methlist[] = cls.getDeclaredMethods();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;for (int i = 0; i &amp;lt; methlist.length; i++) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;Method m = methlist[i];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;System.out.println(&quot;name &amp;nbsp;= &quot; + m.getName());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;System.out.println(&quot;decl class = &quot; + m.getDeclaringClass());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;Class pvec[] = m.getParameterTypes();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;				&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;for (int j = 0; j &amp;lt; pvec.length; j++)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;					&lt;/span&gt;System.out.println(&quot; param #&quot; + j + &quot; &quot; + pvec[j]);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;				&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;Class evec[] = m.getExceptionTypes();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;				&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;for (int j = 0; j &amp;lt; evec.length; j++)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;					&lt;/span&gt;System.out.println(&quot;exc #&quot; + j + &quot; &quot; + evec[j]);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;				&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;System.out.println(&quot;return type = &quot; + m.getReturnType());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;				&lt;/span&gt;System.out.println(&quot;-----&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;getDeclaredMethods 을 통해서 메쏘드 리스트를 조회한다. getDeclaredMethods 대신에 getMethods 를 사용하면 상속된 메쏘드에 대한 정보를 얻을 수 있다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;실행결과&lt;br /&gt;&amp;nbsp; &amp;nbsp;name = f1&lt;br /&gt;&amp;nbsp;&amp;nbsp; decl class = class method1&lt;br /&gt;&amp;nbsp;&amp;nbsp; param #0 class java.lang.Object&lt;br /&gt;&amp;nbsp;&amp;nbsp; param #1 int&lt;br /&gt;&amp;nbsp;&amp;nbsp; exc #0 class java.lang.NullPointerException&lt;br /&gt;&amp;nbsp;&amp;nbsp; return type = int&lt;br /&gt;&amp;nbsp;&amp;nbsp; -----&lt;br /&gt;&amp;nbsp;&amp;nbsp; name = main&lt;br /&gt;&amp;nbsp;&amp;nbsp; decl class = class method1&lt;br /&gt;&amp;nbsp;&amp;nbsp; param #0 class [Ljava.lang.String;&lt;br /&gt;&amp;nbsp;&amp;nbsp; return type = void&lt;br /&gt;&amp;nbsp;&amp;nbsp; -----&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Constructors 에 대한 정보얻기&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class constructor1 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public constructor1() {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;protected constructor1(int i, double d) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[])&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Class cls = Class.forName(&quot;constructor1&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Constructor ctorlist[] = cls.getDeclaredConstructors();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; ctorlist.length; i++) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Constructor ct = ctorlist[i];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;name = &quot; + ct.getName());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;decl class = &quot; + ct.getDeclaringClass());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Class pvec[] = ct.getParameterTypes();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for (int j = 0; j &amp;lt; pvec.length; j++)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.out.println(&quot;param #&quot; + j + &quot; &quot; + pvec[j]);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Class evec[] = ct.getExceptionTypes();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for (int j = 0; j &amp;lt; evec.length; j++)&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.out.println(&quot;exc #&quot; + j + &quot; &quot; + evec[j]);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;-----&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;이 프로그램에서는 리턴타입정보가 없는데... 생성자는 리턴타입을 갖지 않기 때문이다.&lt;br /&gt;실행결과&lt;br /&gt;&amp;nbsp;&amp;nbsp; name = constructor1&lt;br /&gt;&amp;nbsp;&amp;nbsp; decl class = class constructor1&lt;br /&gt;&amp;nbsp;&amp;nbsp; -----&lt;br /&gt;&amp;nbsp;&amp;nbsp; name = constructor1&lt;br /&gt;&amp;nbsp;&amp;nbsp; decl class = class constructor1&lt;br /&gt;&amp;nbsp;&amp;nbsp; param #0 int&lt;br /&gt;&amp;nbsp;&amp;nbsp; param #1 double&lt;br /&gt;&amp;nbsp;&amp;nbsp; -----&lt;br /&gt;&amp;nbsp;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Class Fields 찾기&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class field1 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;private double d;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static final int i = 37;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;String s = &quot;testing&quot;;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[])&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;&amp;nbsp;Class cls = Class.forName(&quot;field1&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;&amp;nbsp;Field fieldlist[] = cls.getDeclaredFields();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;for (int i = 0; i &amp;lt; fieldlist.length; i++) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;&amp;nbsp;Field fld = fieldlist[i];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;name = &quot; + fld.getName());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;decl class = &quot; + fld.getDeclaringClass());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;type = &quot; + fld.getType());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;int mod = fld.getModifiers();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;modifiers = &quot; + Modifier.toString(mod));&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.out.println(&quot;-----&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;이전예제와 비슷하다. 새로운 특징은 modifier 의 사용이다.&lt;br /&gt;modifier는 'private int' 와 같은 필트멤버를 표현하기위한 reflection class 이다.&lt;br /&gt;modifier 는 숫자로 표현된다. Modifier.toString 은 'final' 앞의 'static' 과 같은 선언순서의 문자열표현을 리턴한다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;실행결과 :&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp; name = d&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; decl class = class field1&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; type = double&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; modifiers = private&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; -----&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; name = i&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; decl class = class field1&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; type = int&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; modifiers = public static final&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; -----&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; name = s&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; decl class = class field1&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; type = class java.lang.String&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; modifiers =&lt;/font&gt;&lt;br /&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp; -----&amp;nbsp;&lt;/font&gt;&lt;br /&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;strong style=&quot;color: rgb(102, 102, 102);&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이름으로 메쏘드 실행하기.&lt;/span&gt;&lt;br /&gt;&lt;/strong&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class method2 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public int add(int a, int b) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;return a + b;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class cls = Class.forName(&quot;method2&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class partypes[] = new Class[2];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;partypes[0] = Integer.TYPE;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;partypes[1] = Integer.TYPE;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Method meth = cls.getMethod(&quot;add&quot;, partypes);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;method2 methobj = new method2();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Object arglist[] = new Object[2];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;arglist[0] = new Integer(37);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;arglist[1] = new Integer(47);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Object retobj = meth.invoke(methobj, arglist);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Integer retval = (Integer) retobj;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.out.println(retval.intValue());&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;프로그램이 add 라는 메쏘드를 실행시키는데 실행시까지 알지 못한다고 가정해보자. 메쏘드 이름은 실행시간에 알수있다.&amp;nbsp;&lt;br /&gt;getMethod 는 클래스에서 두개의 숫자 파라미터와 해당 이름을 가진 메쏘드를 찾아낸다.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;새로운 객체 만들기&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class constructor2 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public constructor2() {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public constructor2(int a, int b) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;System.out.println(&quot;a = &quot; + a + &quot; b = &quot; + b);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class cls = Class.forName(&quot;constructor2&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class partypes[] = new Class[2];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;partypes[0] = Integer.TYPE;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;partypes[1] = Integer.TYPE;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Constructor ct = cls.getConstructor(partypes);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Object arglist[] = new Object[2];&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;arglist[0] = new Integer(37);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;arglist[1] = new Integer(47);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Object retobj = ct.newInstance(arglist);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;br /&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;필드값 바꾸기&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class field2 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public double d;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class cls = Class.forName(&quot;field2&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Field fld = cls.getField(&quot;d&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;field2 f2obj = new field2();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.out.println(&quot;d = &quot; + f2obj.d);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;fld.setDouble(f2obj, 12.34);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.out.println(&quot;d = &quot; + f2obj.d);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&lt;strong&gt;&amp;nbsp;&lt;br /&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;배열의 사용&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class array1 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;try {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Class cls = Class.forName(&quot;java.lang.String&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Object arr = Array.newInstance(cls, 10);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;Array.set(arr, 5, &quot;this is a test&quot;);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;String s = (String) Array.get(arr, 5);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.out.println(s);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;} catch (Throwable e) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;			&lt;/span&gt;System.err.println(e);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; color: rgb(102, 102, 102); text-align: justify;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&amp;nbsp;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;import java.lang.reflect.*;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;public class array2 {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;public static void main(String args[]) {&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;int dims[] = new int[] { 5, 10, 15 };&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;Object arr = Array.newInstance(Integer.TYPE, dims);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;Object arrobj = Array.get(arr, 3);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;Class cls = arrobj.getClass().getComponentType();&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;System.out.println(cls);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;arrobj = Array.get(arrobj, 5);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;Array.setInt(arrobj, 10, 37);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;br /&gt;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;int arrcast[][][] = (int[][][]) arr;&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;		&lt;/span&gt;System.out.println(arrcast[3][5][10]);&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;&lt;span class=&quot;Apple-tab-span&quot; style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;}&lt;/font&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; padding: 0px; font-size: 16px; line-height: 28px; color: rgb(92, 92, 92); font-family: &amp;quot;Spoqa Han Sans&amp;quot;, sans-serif; text-align: justify;&quot;&gt;&lt;font color=&quot;#666666&quot;&gt;}&lt;/font&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 728 90 Tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-4038755821428610&quot;
     data-ad-slot=&quot;6664312689&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Infomation</category>
<author>creative_prm</author>
<guid>https://creativeprm.tistory.com/324</guid>
<comments>https://creativeprm.tistory.com/324#entry324comment</comments>
<pubDate>Fri, 28 Jul 2017 15:11:32 +0900</pubDate>
</item>
<item>
<title>[SkyBlew &amp; Daniel Kern] 와 작업 할 한국 Rapper를 찾습니다!</title>
<link>https://creativeprm.tistory.com/323</link>
<description>&lt;p style=&quot;margin-right: 0px; margin-bottom: 6px; margin-left: 0px; color: rgb(51, 51, 51); font-family: helvetica, arial, sans-serif; font-size: 14px;&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;[SkyBlew &amp;amp; Daniel Kern] 와 작업 할 한국 Rapper를 찾습니다!&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; color: rgb(51, 51, 51); font-family: helvetica, arial, sans-serif; font-size: 14px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Chillhop / Luvhop / Jazzyhop의 선두주자!&lt;/span&gt;&lt;br self-close-tag=&quot;1&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;미국의 Rapper - SkyBlew,&amp;nbsp;&lt;span style=&quot;color: rgb(102, 0, 0);&quot;&gt;Austria의 Producer - Daniel Kern&lt;/span&gt;&amp;nbsp;&lt;/span&gt;&lt;br self-close-tag=&quot;1&quot;&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;와 함께 작업할수 있는 기회! 작업 이후 검증된 Contents까지!&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; color: rgb(51, 51, 51); font-family: helvetica, arial, sans-serif; font-size: 14px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(0, 0, 255);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;안녕하세요.&lt;br self-close-tag=&quot;1&quot;&gt;&lt;b&gt;저는 Jazzhop/Chillhop/Mellowbeats 음악을 사랑하는 MellowHan 입니다.&lt;br self-close-tag=&quot;1&quot;&gt;Youtube :&amp;nbsp;&lt;a href=&quot;https://www.youtube.com/channel/UCo2kSXlACQTRkoZPxtsIVgg&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.youtube.com/channel/UCo2kSXlACQTRkoZPxtsIVgg&lt;/a&gt;&lt;br self-close-tag=&quot;1&quot;&gt;Facebook :&amp;nbsp;&lt;a href=&quot;https://www.facebook.com/MellowHanMS/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.facebook.com/MellowHanMS/&lt;/a&gt;&amp;nbsp;&lt;/b&gt;&lt;br self-close-tag=&quot;1&quot;&gt;SoundCloud와 bandcamp를 통해서 외국 Artist들과 많은 교류를 하고 있습니다.&lt;br self-close-tag=&quot;1&quot;&gt;그 중에 Producer로 활동중인 Austria의 Daniel Kern님이 함께 작업할&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;한국 Rapper를 찾고있어서 이렇게 소개 드립니다.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;&lt;b&gt;[Daniel kern] from austria&lt;br self-close-tag=&quot;1&quot;&gt;Music for film, TV, games, media &amp;amp; co. Instrumentals for artists. Soundeffects.&lt;br self-close-tag=&quot;1&quot;&gt;homepage :&amp;nbsp;&lt;a href=&quot;https://l.facebook.com/l.php?u=http%3A%2F%2Fwww.danielkern.at%2F&amp;amp;h=ATM9362NMgrsmHfgEbBfB-RYn5cGf6WTfi6DdbUxiJsgBsHJRq--Wjuc4YzEhUNqY9Ngdnu3455CJrHHhFO7WyZOPmg1IKhZxjLyJuNey8CJUNwmz7FVobqxIQ6YI_h25BOFdB_zksrhyYvHtinUqV9r&amp;amp;enc=AZP3sqeu4l32FDkOYWsRTr9JSwDFqxc18bteF8ZaVUusa5H5sCuWmNNPpGV4Rg-OC8KCCpoq0XiC--ssN1f_qyK3ETvzKgET1ODqygsS6ei8nDi86TRsG4QhDHNhDfD5jRJugRRI487SfdpX-8r-dp1uM0sIVb0KBNPjGE5CfL8KUUW0z3kXHpnj4lTsqK2d422_asJY9NgRI9dvOMXQ_Z9u&amp;amp;s=1&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;http://www.danielkern.at&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;&lt;b&gt;[SkyBlew] from America&lt;br self-close-tag=&quot;1&quot;&gt;POSITIVE, CHILL, UPLIFTING &amp;amp; full of LOVE - American Rapper&lt;br self-close-tag=&quot;1&quot;&gt;&lt;a href=&quot;https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.youtube.com%2Fresults%3Fsearch_query%3Dskyblew&amp;amp;h=ATPNOMDLTXwQaGd0tZwXNTVjR7x8uTdEWer1l5RLyQcS_oZmwjVOCrO9RZ3MbP6lr6ZknqujP7Fb0EGL1LFAlWibcU6qG-MqZvLqUko9sy1_piakDnPyfr4RwGJZKlfBGUTIBRGX6w6aS3S6xchS7WVZ&amp;amp;enc=AZPDvIW1dvizW0NRc8nap9Ae80bhgjRgMykzuRhgx5b5Dqg976UCHiJkYz_sJZkTP2hKuMJ6RoxeYO6anUCo-vETlnuIeo1-C7vsxmX1Bl0oBJz312Otp3pe4G34KGvaKxlfOPm9tr_dpb3_Q6JcjJBFBwG-J8yomYD2okMpWgXsM5dZ7ESx6ygWANPKj6BHIzVypTinW2tjog-aYqfU8LTB&amp;amp;s=1&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.youtube.com/results?search_query=skyblew&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;&lt;b&gt;- Concept&lt;/b&gt;&lt;br self-close-tag=&quot;1&quot;&gt;지난 몇년간 발전한 유럽과 미국의 힙합씬의 요소들을 반영한 음악을 주제로 작업.&lt;br self-close-tag=&quot;1&quot;&gt;함께 작업하게 되면 Rapper - MusicName(prod. Daniel kern)로 배포 되며,&lt;br self-close-tag=&quot;1&quot;&gt;이 음악을 통한 수익은 공유 됩니다.&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;음악에 대한 홍보 및 다른 Artist들의 지원은 기대하셔도 좋습니다.&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;구체적으로, SoundCloud / Bandcamp를 통한 지원과&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;Youtube의 chillhop 대표 채널 Chilledcow / Nujabes and fellows / Chillhop music에 게시 될것이고, 미국 rapper [Skyblew]공동작업을 하게 됩니다.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;Daniel kern Say :&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;Our jury will choose 3 finalists which are invited to show their skills again on a new Instrumental. Out of those 3 finalists we will choose 1st , 2nd and third place.&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;PRIZES:&lt;br self-close-tag=&quot;1&quot;&gt;The first place will receive an exclusive Instrumental from Daniel Kern Productions and of course promotion over various online platforms.&lt;br self-close-tag=&quot;1&quot;&gt;The second place will receive an exclusive Instrumental.&lt;br self-close-tag=&quot;1&quot;&gt;The third place will receive a special license to use an Instrumental that he likes for free.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;&lt;b&gt;- 기간&lt;/b&gt;&lt;br self-close-tag=&quot;1&quot;&gt;Entries are possible until 20.05.2017&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;&lt;b&gt;- 참여방법&lt;/b&gt;&lt;br self-close-tag=&quot;1&quot;&gt;1. Daniel kern의 Sample beats&lt;br self-close-tag=&quot;1&quot;&gt;4개의 Sample beats중 하나를 선택하고, Rapping후 mellowblue.h@gmail.com 로 보내주시면 됩니다.&lt;br self-close-tag=&quot;1&quot;&gt;Sample beats Link :&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;&lt;a href=&quot;https://wetransfer.com/downloads/460a9af24e401cec4c501cae87bfca0920170503202351/159bf91dcada43dcbb79244c9b70689a20170503202351/5d40a6&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://wetransfer.com/…/159bf91dcada43dcbb79244c9b7…/5d40a6&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;2. 기존 작업하신 음악(최대 2개)을 mellowblue.h@gmail.com 로 보내주시면 됩니다.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;1, 2 중 하나만 하셔도 됩니다.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;아마츄어도 상관없습니다^^ 편하게 마구마구 보내주세요~&lt;br self-close-tag=&quot;1&quot;&gt;감사합니다. 많은 참여 바랍니다.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;-----------------------------------------------------------&lt;br self-close-tag=&quot;1&quot;&gt;We are looking for Korean Rapper to work with [SkyBlew &amp;amp; Daniel Kern]!&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;Leader of Chillhop / Luvhop / Jazzyhop!&lt;br self-close-tag=&quot;1&quot;&gt;American Rapper - SkyBlew, Austria Producer - Daniel Kern&lt;br self-close-tag=&quot;1&quot;&gt;Opportunity to work with! From work to proven contents!&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;HI&amp;nbsp;&lt;span class=&quot;_47e3 _5mfr&quot; title=&quot;grin 이모티콘&quot; style=&quot;line-height: 0; vertical-align: middle; margin: 0px 1px; font-family: inherit;&quot;&gt;&lt;img class=&quot;img&quot; aria-hidden=&quot;1&quot; height=&quot;16&quot; src=&quot;https://www.facebook.com/images/emoji.php/v8/f51/1/16/1f603.png&quot; width=&quot;16&quot; alt=&quot;&quot; self-close-tag=&quot;1&quot; style=&quot;max-width: 100%; border: 0px; vertical-align: -3px;&quot;&gt;&lt;span aria-hidden=&quot;1&quot; class=&quot;_7oe&quot; style=&quot;display: inline-block; font-size: 0px; width: 0px; font-family: inherit;&quot;&gt;:D&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;I am MellowHan who loves Jazzhop / Chillhop / Mellowbeats music.&lt;br self-close-tag=&quot;1&quot;&gt;- Youtube :&amp;nbsp;&lt;a href=&quot;https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.youtube.com%2Fchannel%2FUCo2kSXlACQTRkoZPxtsIVgg&amp;amp;h=ATMhLI-5XJxR_UmeCmcwGXk3ueaxyIxH3jOFjnx8-NUcBHvbts4aDdlgcOp6nvKs3PK8j17JkXtpTQIHtN9C51fO2jI7R-bOkEjl--PWJaO4zeEbhp8Mpn1zYWdP_jWO4sLFn7tyOt1FDvsQPTIv_H-T&amp;amp;enc=AZOP9G_7HiUkUBwjikaCKKZ1GFf3R0jqGbVvQGg0iaZ5HZLwM8OnnvTntfQwJQr_jhGZK3W6hkt5aAoAc6kM3p9Qkm6hrYgrJif0I1_HdXSxm-uwn7HHqWz56ZGEKR1JsLghM8rZ-a2Fa0ZYkd6Z0c7B_NKUWP094Mqjn9KCk0t5HOInUq-dNyry5I7ccfVMXYUF_iNvPetbM_HSRHkVbNDp&amp;amp;s=1&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.youtube.com/channel/UCo2kSXlACQTRkoZPxtsIVgg&lt;/a&gt;&lt;br self-close-tag=&quot;1&quot;&gt;- Facebook :&amp;nbsp;&lt;a href=&quot;https://www.facebook.com/MellowHanMS/&quot; target=&quot;_blank&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.facebook.com/MellowHanMS/&lt;/a&gt;&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;We have a lot of interaction with foreign artists through SoundCloud and bandcamp.&lt;br self-close-tag=&quot;1&quot;&gt;Among them,&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;Daniel Kern from Austria(based on Producer)&lt;br self-close-tag=&quot;1&quot;&gt;Skyblew from America(based on rapper)&lt;br self-close-tag=&quot;1&quot;&gt;, is looking for Korea Rapper to work with.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;[Daniel kern] from austria&lt;br self-close-tag=&quot;1&quot;&gt;Music for film, TV, games, media &amp;amp; co. Instrumentals for artists. Soundeffects.&lt;br self-close-tag=&quot;1&quot;&gt;homepage :&amp;nbsp;&lt;a href=&quot;https://l.facebook.com/l.php?u=http%3A%2F%2Fwww.danielkern.at%2F&amp;amp;h=ATNlxX3MHg6RjUVnjDABo2_XRzlNLFUUhykraG0FOl5PXL9j2IsgEzO44Uxgqp5whT90NNN3MRKiQlGAtpNuxVdc87yaiX3IBUmOCV2jQdT78Kl8IfxwxMzRCGn4ZCkEKb62YS6ZIoBnMxSXLvaPEdaI&amp;amp;enc=AZPhE57mOMe5zyP6vXDZMJBuM6BESNn7MhvM7i-tPmHod3o3PZalzw_CwxzIDSSTBjIEBD9Zxhk6Yt8OpGOWcjwI2MVt88Pz_GmzxgwT3m4dMnO-M-6YbQsl9-jHviPX70vRlwrXFbul_-9uSbnIXxkG3iI51ooflzGzRf1NqsSRex2u3UCruy8mzHGzNra5hhV-QapoxpnVYF6npSR2_-tW&amp;amp;s=1&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;http://www.danielkern.at&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;[SkyBlew] from America&lt;br self-close-tag=&quot;1&quot;&gt;POSITIVE, CHILL, UPLIFTING &amp;amp; full of LOVE - American Rapper&lt;br self-close-tag=&quot;1&quot;&gt;&lt;a href=&quot;https://l.facebook.com/l.php?u=https%3A%2F%2Fwww.youtube.com%2Fresults%3Fsearch_query%3Dskyblew&amp;amp;h=ATPuvvfhBFMxDmrBV78glJiHQ_lWVItIIxG9aY_btoe9BtR9_dmGKBiR7yiKmLlHg9u_0FuKYdlLUUMBEht4NnA6aryyZXRPKeWsn6cdstZqR4E6cela7FwQik0xPlOgch_sCX16Mme-AQm5f3KCyVB2&amp;amp;enc=AZMhRHJgQM7z8EQUZr_eOoo3HXssHTpwGh3T96vVRauMY4AXOLFqQL2_nHHCCK1BdZP2rLFIFxTdOJxktmgpVR3c_mgnFUddB0TqjrbALssCz3WaHiWWstPOrkKaW1gpZMAR1YfvP3toRD1AHEF9fl5V5ZkbpMB8MrJi7C3INgVw3ylAUmnwdqzhmuE9mNsAj2X1_dtMHqOWOigSeHdDnzHF&amp;amp;s=1&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://www.youtube.com/results?search_query=skyblew&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;- Concept&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;Working on music that reflects elements of hip-hop in Europe and the United States that have developed over the last few years.&lt;br self-close-tag=&quot;1&quot;&gt;When you work together, it will be distributed as Rapper - MusicName (prod. Daniel kern), and revenue from this music will be shared.&lt;br self-close-tag=&quot;1&quot;&gt;Promote your music and support from other artists.&lt;br self-close-tag=&quot;1&quot;&gt;Specifically, it is supported by SoundCloud / Bandcamp and is posted on Chilledcow / Nujabes and fellows / Chillhop music of Youtube's chillhop representative channel, and we are promoting to personally collaborate with Skyblew in USA.&lt;br self-close-tag=&quot;1&quot;&gt;Daniel kern Say :&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;Our jury will choose 3 finalists which are invited to show their skills again on a new Instrumental. Out of those 3 finalists we will choose 1st , 2nd and third place.&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;PRIZES:&lt;br self-close-tag=&quot;1&quot;&gt;The first place will receive an exclusive Instrumental from Daniel Kern Productions and of course promotion over various online platforms.&lt;br self-close-tag=&quot;1&quot;&gt;The second place will receive an exclusive Instrumental.&lt;br self-close-tag=&quot;1&quot;&gt;The third place will receive a special license to use an Instrumental that he likes for free.&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;-How to participate&lt;br self-close-tag=&quot;1&quot;&gt;1. Daniel kern's Sample beats (recommended)&lt;br self-close-tag=&quot;1&quot;&gt;Select one of the four sample beats and send it to mellowblue.h@gmail.com after the rapping.&lt;br self-close-tag=&quot;1&quot;&gt;Sample beats Link :&amp;nbsp;&lt;br self-close-tag=&quot;1&quot;&gt;&lt;a href=&quot;https://wetransfer.com/downloads/460a9af24e401cec4c501cae87bfca0920170503202351/159bf91dcada43dcbb79244c9b70689a20170503202351/5d40a6&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot; style=&quot;color: rgb(54, 88, 153); cursor: pointer; font-family: inherit;&quot;&gt;https://wetransfer.com/…/159bf91dcada43dcbb79244c9b7…/5d40a6&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;margin: 6px 0px; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;2. Send your existing music (up to two) to mellowblue.h@gmail.com.&lt;/p&gt;&lt;p style=&quot;margin-top: 6px; margin-right: 0px; margin-left: 0px; display: inline; font-family: Helvetica, Arial, sans-serif; color: rgb(29, 33, 41); font-size: 14px;&quot;&gt;Entries are possible until 20.05.2017&lt;br self-close-tag=&quot;1&quot;&gt;Thank you. Please join us a lot.&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 굴림;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 굴림;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(51, 51, 51); font-family: 굴림;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-right: 0px; margin-left: 0px; color: rgb(51, 51, 51); font-family: 굴림;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 728 90 Tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-4038755821428610&quot;
     data-ad-slot=&quot;6664312689&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>Infomation</category>
<author>creative_prm</author>
<guid>https://creativeprm.tistory.com/323</guid>
<comments>https://creativeprm.tistory.com/323#entry323comment</comments>
<pubDate>Thu, 11 May 2017 14:18:50 +0900</pubDate>
</item>
<item>
<title>[VB.net] TCP / IP Sample Source (Basic &amp; Chat)</title>
<link>https://creativeprm.tistory.com/322</link>
<description>&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;;height:auto;max-width:100%&quot;&gt;&lt;a href=&quot;https://creativeprm.tistory.com/attachment/cfile23.uf@235A56395912B6DD2970F6.zip&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/tistory_admin/assets/blog/55b90b5e7bcae6a80d3ea96e1079ef229f2ae5b2/blogs/image/extension/zip.gif?_version_=55b90b5e7bcae6a80d3ea96e1079ef229f2ae5b2&quot; alt=&quot;&quot; style=&quot;vertical-align: middle;&quot; /&gt; Simple Chat Application Using VB.NET With Private Chat Option.zi&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;;height:auto;max-width:100%&quot;&gt;&lt;a href=&quot;https://creativeprm.tistory.com/attachment/cfile9.uf@256CF3475912B6DC1B5ED1.zip&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/tistory_admin/assets/blog/55b90b5e7bcae6a80d3ea96e1079ef229f2ae5b2/blogs/image/extension/zip.gif?_version_=55b90b5e7bcae6a80d3ea96e1079ef229f2ae5b2&quot; alt=&quot;&quot; style=&quot;vertical-align: middle;&quot; /&gt; TCP  IP Server Client Example Part 1.zip&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:center;margin:10px 0 10px 0;&quot;&gt;&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;
&lt;!-- 728 90 Tistory --&gt;
&lt;ins class=&quot;adsbygoogle&quot;
     style=&quot;display:inline-block;width:728px;height:90px&quot;
     data-ad-client=&quot;ca-pub-4038755821428610&quot;
     data-ad-slot=&quot;6664312689&quot;&gt;&lt;/ins&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;&lt;/div&gt;</description>
<category>VB.net &amp; WPF &amp; C#</category>
<author>creative_prm</author>
<guid>https://creativeprm.tistory.com/322</guid>
<comments>https://creativeprm.tistory.com/322#entry322comment</comments>
<pubDate>Wed, 10 May 2017 15:44:55 +0900</pubDate>
</item>
<item>
<title>[TCP/IP] Client(java) / Server (c) 의 통신</title>
<link>https://creativeprm.tistory.com/321</link>
<description>&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;strong&gt;Java 와&amp;nbsp;C 사이의 Socket 통신에 대한 정리이다.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;664&quot; border=&quot;0&quot; style=&quot;color: rgb(123, 115, 102); background-color: rgb(219, 236, 255); font-size: 13px; border-width: medium; border-style: none; border-color: initial; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); height: 24px; width: 664px; background-color: rgb(250, 236, 197);&quot;&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;strong&gt;Socket 구성은 다음과 같다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;C : Server&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;Java : Client&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 12pt; color: rgb(152, 0, 0);&quot;&gt;본 포스팅은 Java (Client) 에서 C (Server)로 데이터를 보내고 받아오는 간단한 로직을 설명한다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); float: none; text-align: center; clear: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 4px 0px 21px; display: inline-block; width: 700px; height: auto; max-width: 100%;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/23147F36587F19BF2E&quot; width=&quot;700&quot; height=&quot;295&quot; filename=&quot;2017-01-18 13;43;19.jpg&quot; filemime=&quot;image/jpeg&quot; style=&quot;border: 0px none; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;C ( Server ) 에 대한 소스는 없고 Java (Client) 소스 기준으로만 설명한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;또한 C에서 받고 전송해주는 데이터는 구조체 Char 타입을 기준으로만 설명한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;664&quot; border=&quot;0&quot; style=&quot;color: rgb(123, 115, 102); background-color: rgb(219, 236, 255); font-size: 13px; border-width: medium; border-style: none; border-color: initial; border-collapse: collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-width: 1px; border-style: solid; border-color: rgb(204, 204, 204); height: 24px; width: 664px; background-color: rgb(250, 236, 197);&quot;&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;순서는 다음과 같다.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;1.&amp;nbsp;java와 C의 socket 통신 개념&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;2. C ( Server ) 에서 통신할 데이터 구조&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;3.&amp;nbsp;java ( Client&amp;nbsp;) Socket 생성&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;4.&amp;nbsp;java ( Client&amp;nbsp;) 에서 C ( Server )&amp;nbsp;로&amp;nbsp;데이터 전송&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;5.&amp;nbsp;C ( Server )&amp;nbsp;에서 보낸 데이터를 java ( Client&amp;nbsp;) 에서 수신&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin-left: 4em;&quot;&gt;&lt;strong&gt;6. 전체 소스&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-left: 2em;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;1.&amp;nbsp;java와 C의 socket 통신 개념&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;java 와 C 의 데이터 개념이 다르다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;C 는 구조체를 사용하는데 java 에는 구조체가 없다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;구조체란 서로 다른 형태의 변수를 하나로 묶은 것을 말한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;margin: 0px; padding: 0px; font-size: 12px; background-color: rgb(219, 236, 255); overflow: auto; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border-width: medium; border-style: none; border-color: initial; padding: 0px; margin: 0px; line-height: 16.8px; background-color: rgb(250, 250, 250); border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 6px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-right: 2px solid rgb(229, 229, 229);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; word-break: normal; color: rgb(102, 102, 102); text-align: right; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;5&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 6px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;struct&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;int&lt;/span&gt;&amp;nbsp;aaaa;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;char&lt;/span&gt;&amp;nbsp;bbbb[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;9&lt;/span&gt;];&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;};&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 0px 2px 4px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); vertical-align: bottom;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(123, 115, 102); cursor: pointer;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; color: white; padding: 1px; background-color: rgb(229, 229, 229); border-radius: 10px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;구조체는 위와같은 모양이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;java에서 VO와 같다고 생각하면 이해가 쉽다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;반대로 생각하면&amp;nbsp;Java에서 사용하는 Object 또한 C 에서 해석할수 없기 때문에 상호 통신간에는 Byte 통신을 해야한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;또한 데이터 전송간에 Endian 개념을 이해하면 도움이 된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;다른 언어로 데이터 전송을 할 땐 플랫폼에 따라 ByteOrder&amp;nbsp;를&amp;nbsp;Big Endian을 사용하는지&amp;nbsp;Little Endian 을 사용하는지 확인해야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;문자열, 숫자문자열 등을 전송할 땐 신경쓰지 않아도 된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;정수타입의 데이터를 주고 받을 때 필요하다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;본 포스팅은 정수타입의 데이터 전송은 없으니 간단하게나마&amp;nbsp;&lt;strong&gt;&lt;span style=&quot;color: rgb(34, 116, 28);&quot;&gt;4.&amp;nbsp;java ( Client&amp;nbsp;) 에서 C ( Server )&amp;nbsp;로&amp;nbsp;데이터 전송&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;에서 ByteOrder 를 설정하는 방법을 소개하고 지나간다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;2. C ( Server )&amp;nbsp;에서 통신할 데이터 구조&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;서론은 이쯤하고 실제로 주고받을 데이터 형식이 어떤 모양인지 보자.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;C ( server ) 에서 받고 결과를 보내주는 데이터의 모양은 다음과 같다.&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;margin: 0px; padding: 0px; font-size: 12px; background-color: rgb(219, 236, 255); overflow: auto; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border-width: medium; border-style: none; border-color: initial; padding: 0px; margin: 0px; line-height: 16.8px; background-color: rgb(250, 250, 250); border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 6px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-right: 2px solid rgb(229, 229, 229);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; word-break: normal; color: rgb(102, 102, 102); text-align: right; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;13&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 6px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153);&quot;&gt;/*&amp;nbsp;1.&amp;nbsp;요청&amp;nbsp;(클라이언트&amp;nbsp;-&amp;gt;&amp;nbsp;서버)&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;struct&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;char&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sid[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;5&lt;/span&gt;];&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;char&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;empid[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;9&lt;/span&gt;];&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;}REQ_HEADER;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(153, 153, 153);&quot;&gt;/*&amp;nbsp;2.&amp;nbsp;결과&amp;nbsp;(서버&amp;nbsp;-&amp;gt;&amp;nbsp;클라이언트)&amp;nbsp;*/&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;typedef&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;struct&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;char&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sid[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;5&lt;/span&gt;];&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;char&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;status[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;10&lt;/span&gt;];&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;}REC_HEADER;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 0px 2px 4px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); vertical-align: bottom;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(123, 115, 102); cursor: pointer;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; color: white; padding: 1px; background-color: rgb(229, 229, 229); border-radius: 10px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;데이터의 타입은 모두 char 타입이며 눈여겨 볼 것은 데이터 크기이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(152, 0, 0);&quot;&gt;sid 변수의 length는 5, empid 변수의 length 는 9 등 각각 변수들의 length 를&amp;nbsp;기억하고 지나가자.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;3.&amp;nbsp;java ( Client&amp;nbsp;) Socket 생성&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;각 파트에 맞는&amp;nbsp;소스 일부만 가져왔으며 가독성과 설명을&amp;nbsp;위해 전역변수가 아닌 지역변수로 변경함&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;(전체 소스에서는 전역변수로 되어 있음)&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;margin: 0px; padding: 0px; font-size: 12px; background-color: rgb(219, 236, 255); overflow: auto; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border-width: medium; border-style: none; border-color: initial; padding: 0px; margin: 0px; line-height: 16.8px; background-color: rgb(250, 250, 250); border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 6px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-right: 2px solid rgb(229, 229, 229);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; word-break: normal; color: rgb(102, 102, 102); text-align: right; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;15&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 6px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;try&lt;/span&gt;&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InetSocketAddress&amp;nbsp;isa&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt;&amp;nbsp;InetSocketAddress(&lt;span style=&quot;color: rgb(99, 163, 92);&quot;&gt;&quot;100.1.1.1&quot;&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;35153&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Socket&amp;nbsp;socket&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt;&amp;nbsp;Socket();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;socket.setReuseAddress(&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;socket.connect(isa);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;socket.setSoTimeout(&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;10000&lt;/span&gt;);&amp;nbsp;&lt;span style=&quot;color: rgb(153, 153, 153);&quot;&gt;//&amp;nbsp;10초&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;socket.setSoLinger(&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;true&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OutputStream&amp;nbsp;os&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;socket.getOutputStream();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InputStream&amp;nbsp;is&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;socket.getInputStream();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;}&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;catch&lt;/span&gt;&amp;nbsp;(IOException&amp;nbsp;e)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stop();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin: -13px 5px 0px 0px; padding: 0px; font-size: 9px; font-style: italic; text-align: right;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229); cursor: pointer;&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 0px 2px 4px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); vertical-align: bottom;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(123, 115, 102); cursor: pointer;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; color: white; padding: 1px; background-color: rgb(229, 229, 229); border-radius: 10px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;2# ~&amp;nbsp;5#&amp;nbsp;: socket의 setReuseAddress 옵션을 사용하기 위한 연결방법&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;&lt;strong&gt;setReuseAddress&amp;nbsp; 옵션 :&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;소켓은 종료될 때 네트워크를 통해 해당 포트로 전송 중인 나머지 패킷이 있는 경우 일정 시간동안 기다린다.&lt;br /&gt;즉 소켓을 닫을 때 열린 연결이 있는 경우 포트가 즉시 해제되지 않을 수 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;SO_REUSEADDR 옵션이 켜진 경우(default값은 꺼짐)에 이전 소켓으로 전송될 데이터가 남아 있는 경우 또 다른 소켓이 해당 포트를 바인드(bind)할 수 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;SO_REUSEADDR 옵션을 사용하기 위해서는 새로운 소켓이 포트에 바인드(bind) 되기 전에 SO_REUSEADDR 옵션을 사용한다고 선언해야 한다.&lt;br /&gt;즉 비어있는 소켓을 생성한 후 SO_REUSEADDR 옵션을 켜고 InetSocketAddress 와 connect() 메소드를 호출해 소켓을 연결해야 한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;setReuseAddress 옵션을 사용하지 않을 경우 일반적인 소켓 연결방식을 사용하면 된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;[&amp;nbsp;Socket socket = new Socket(&quot;100.1.1.1&quot;, 35153); ]&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;6# : socket의 timeout 설정을 한다. (10000 : 10초)&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;7# : setSoLinger 옵션 설정&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;&lt;strong&gt;setSoLinger 옵션 :&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;소켓이 닫힐 때, 전송되지 않은 데이터를 어떻게 처리하는지에 대한 옵션이다.&lt;br /&gt;기본적으로 close() 메소드는 호출 즉시 반환되지만 시스템은 내부적으로 아직 전송되지 않은 데이터를 계속해서 전송한다.&lt;br /&gt;링거(linger) 시간을 0으로 설정될 경우, 소켓이 닫힐 때 아직 전송되지 않은 패킷은 버려진다.&lt;br /&gt;SO_LINGER 옵션이 켜져 있고 링거 타임이 정수값인 경우, close() 메소드는 지정된 시간 동안 데이터를 보내고 응답을 받기 위해 블록(block)된다.&lt;br /&gt;그리고 지정된 시간이 초과될 경우, 소켓은 닫히고 아직 남아 있는 데이터는 보내지 않으며 응답을 기다리지 않는다.&lt;br /&gt;링거(linger) 시간은 음수가 올 수 없으며 최대 링거타임은 65535초이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;9#, 10# : 데이터를 송수신할 Stream 객체이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;기본적인 OutputStream 과 InputStream 을 사용하며 데이터가 많다면 BufferedOutputStream 과 BufferedInputStream을 사용할 수 있다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 4em;&quot;&gt;Byte 통신이기 때문에 ObjectInputStream,&amp;nbsp;ObjectOutputStream&amp;nbsp;등은 사용하지 않는다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;4.&amp;nbsp;java ( Client&amp;nbsp;) 에서 C ( Server )&amp;nbsp;로&amp;nbsp;데이터 전송&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;각 파트에 맞는&amp;nbsp;소스 일부만 가져왔으며 가독성과 설명을&amp;nbsp;위해 전역변수가 아닌 지역변수로 변경함&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;(전체 소스에서는 전역변수로 되어 있음)&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;margin: 0px; padding: 0px; font-size: 12px; background-color: rgb(219, 236, 255); overflow: auto; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border-width: medium; border-style: none; border-color: initial; padding: 0px; margin: 0px; line-height: 16.8px; background-color: rgb(250, 250, 250); border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 6px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-right: 2px solid rgb(229, 229, 229);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; word-break: normal; color: rgb(102, 102, 102); text-align: right; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;15&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;16&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;17&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;18&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;19&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;20&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;21&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;22&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;23&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 6px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;try&lt;/span&gt;&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OutputStream&amp;nbsp;os&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;socket.getOutputStream();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;String&lt;/span&gt;&amp;nbsp;sid&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(99, 163, 92);&quot;&gt;&quot;0123&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;String&lt;/span&gt;&amp;nbsp;sabun&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(99, 163, 92);&quot;&gt;&quot;123456&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color: rgb(153, 153, 153);&quot;&gt;//ByteBuffer&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ByteBuffer&amp;nbsp;sendByteBuffer&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendByteBuffer&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt;&amp;nbsp;ByteBuffer.allocate(&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;14&lt;/span&gt;);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendByteBuffer.order(ByteOrder.LITTLE_ENDIAN);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendByteBuffer.put(sid.getBytes());&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendByteBuffer.put(&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;byte&lt;/span&gt;[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;5&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;-&lt;/span&gt;&amp;nbsp;sid.getBytes().&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;length&lt;/span&gt;]);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendByteBuffer.put(sabun.getBytes());&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sendByteBuffer.put(&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;new&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;byte&lt;/span&gt;[&lt;span style=&quot;color: rgb(0, 153, 204);&quot;&gt;9&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;-&lt;/span&gt;&amp;nbsp;sabun.getBytes().&lt;span style=&quot;color: rgb(6, 109, 226);&quot;&gt;length&lt;/span&gt;]);&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;os.write(sendByteBuffer.array());&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;os.flush();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;}&amp;nbsp;&lt;span style=&quot;color: rgb(167, 29, 93);&quot;&gt;catch&lt;/span&gt;&amp;nbsp;(IOException&amp;nbsp;e)&amp;nbsp;{&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px 6px; white-space: pre;&quot;&gt;}&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin: -13px 5px 0px 0px; padding: 0px; font-size: 9px; font-style: italic; text-align: right;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(229, 229, 229); cursor: pointer;&quot;&gt;Colored by Color Scripter&lt;/a&gt;&lt;/div&gt;&lt;/td&gt;&lt;td style=&quot;margin: 0px; padding: 0px 2px 4px 0px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); vertical-align: bottom;&quot;&gt;&lt;a href=&quot;http://colorscripter.com/info#e&quot; target=&quot;_blank&quot; style=&quot;color: rgb(123, 115, 102); cursor: pointer;&quot;&gt;&lt;span style=&quot;font-size: 9px; word-break: normal; color: white; padding: 1px; background-color: rgb(229, 229, 229); border-radius: 10px;&quot;&gt;cs&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;2# : 데이터를 전송하는데 사용할 OutputStream&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;4#, 5# : 전송할 데이터가 있는&amp;nbsp;변수&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;8# : 바이트 데이터를 담을 그릇이 될 ByteBuffer 객체&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;ByteBuffer 객체만 설명하기에도 엄청난 양이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;단순하게 byteOrder 를 설정할 수 있는 byte를 담을 그릇이구나&amp;nbsp;정도만 알고 지나가면 될 것 같다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;byteOrder 은 big_endian 과 little_endian 의 설정을 말한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;10# : allocate() 클래스 메소드를 사용하여 초기크기를 설정 한 후 ByteBuffer 객체를 생성한다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;초기 크기가 14인 이유는 우리가 전송해야 할 데이터의 총 크기가 14이기 때문이다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;&lt;span style=&quot;color: rgb(34, 116, 28);&quot;&gt;&lt;strong&gt;2. C ( Server )&amp;nbsp;에서 통신할 데이터 구조&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;참조&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;11# : 정수타입의 데이터를 사용할 경우 서버와&amp;nbsp;일치하는 Endian 설정을 해주면 된다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); margin-left: 2em;&quot;&gt;문자열, 숫자문자열 등은 신경쓰지 않아도 된다.&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;13# : 첫번재 데이터인 sid 를 바이트로 변환하여 ByteBuffer 에 담는다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;14# : 입력한 sid 의 바이트 크기가 5보다 작으면 작은만큼 byte를 생성해서 ByteBuffer에 담는다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;16# : 두번째 데이터인 sabun 을 바이트로 변환하여 ByteBuffer 에 담는다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;17# : 입력한 sabun 의 바이트 크기가 9보다 작으면 작은만큼 byte를 생성해서 ByteBuffer에 담는다.&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;데이터를 전송할 때 왜 14#, 17# 과 같은 작업이 필요한가 ?&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;별도의 약속이나 룰이 있다면 그 룰을 따르는게 우선이다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;그게 없다면 아래 내용을 참고하면 도움이 될 수 있다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;2. C ( Server )&amp;nbsp;에서 통신할 데이터 구조&amp;nbsp;에서 sid 변수의 데이터 크기가 얼마인가 ?&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;5 이다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;그런데 Java에서 보낼 sid 데이터 크기는 얼마인가 ?&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;4 이다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;보낼 값의 크기가 1 작다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;그래서 1만큼의 빈 데이터를 만들어서 담아주는 작업이다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;우리는 C ( Server ) 로 데이터를 보낼 때 이 크기를 맞춰 주어야 한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;예를 들어 데이터의 크기가 100일때 전송할 값의 크기가&amp;nbsp;10이면 90을 더 만들어 보내야 한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;C 에서 받을 데이터 크기가 100이면 Java 에서도 100의 크기인 데이터를 전송해야 한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;우리는 sid[5], sabun[9] 총 14 크기의 바이트를 전송해야 한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;패킷을 한번 분석해 보자.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 4px 0px 21px; display: inline-block; width: 299px; height: auto; max-width: 100%;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/213E0446587F0E132E&quot; width=&quot;299&quot; height=&quot;56&quot; filename=&quot;2017-01-18 15;29;50.PNG&quot; filemime=&quot;image/jpeg&quot; style=&quot;border: 0px none; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;14#, 17# 의 작업이 없을 경우 전달될 16진수 패킷(1번째 줄)과 실제 전달될 데이터(2번째 줄)이다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;C ( Server ) 에서는 데이터 크기만큼 데이터를 분리하는데 위와같이 전달된다면 잘못된 범위의 데이터를 분리하게 된다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;sid[5] 변수의 데이터를 0123으로&amp;nbsp;분리해야 하지만 위와 같이 전송하게되면 01231이 분리가 된다는 이야기다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;/strong&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); float: none; clear: none;&quot;&gt;&lt;strong&gt;&lt;span class=&quot;imageblock&quot; style=&quot;margin: 4px 0px 21px; display: inline-block; width: 308px; height: auto; max-width: 100%;&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/236BF346587F0E1205&quot; width=&quot;308&quot; height=&quot;58&quot; filename=&quot;2017-01-18 15;29;40.PNG&quot; filemime=&quot;image/jpeg&quot; style=&quot;border: 0px none; max-width: 100%; height: auto;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); float: none; clear: none;&quot;&gt;&lt;strong&gt;이렇게 빈 값으로 데이터의 크기를 맞춰 주어야 한다.&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); float: none; margin-left: 2em; clear: none;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); float: none; margin-left: 2em; clear: none;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255); float: none; margin-left: 2em; clear: none;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;5.&amp;nbsp;C ( Server )&amp;nbsp;에서 보낸 데이터를 java ( Client&amp;nbsp;) 에서 수신&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;각 파트에 맞는&amp;nbsp;소스 일부만 가져왔으며 가독성과 설명을&amp;nbsp;위해 전역변수가 아닌 지역변수로 변경함&lt;/p&gt;&lt;p style=&quot;color: rgb(123, 115, 102); font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; font-size: 12px; background-color: rgb(219, 236, 255);&quot;&gt;(전체 소스에서는 전역변수로 되어 있음)&lt;/p&gt;&lt;div class=&quot;colorscripter-code&quot; style=&quot;margin: 0px; padding: 0px; font-size: 12px; background-color: rgb(219, 236, 255); overflow: auto; color: rgb(1, 1, 1); font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important; position: relative !important;&quot;&gt;&lt;table class=&quot;colorscripter-code-table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; style=&quot;border-width: medium; border-style: none; border-color: initial; padding: 0px; margin: 0px; line-height: 16.8px; background-color: rgb(250, 250, 250); border-radius: 4px;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;margin: 0px; padding: 6px; font-stretch: normal; font-size: 12px; line-height: 1.5; font-family: 돋움, dotum, Tahoma, AppleGothic, sans-serif; color: rgb(123, 115, 102); border-right: 2px solid rgb(229, 229, 229);&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px; word-break: normal; color: rgb(102, 102, 102); text-align: right; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace !important;&quot;&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;1&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;3&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;4&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;5&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;6&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;7&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;8&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;9&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;10&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;11&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;12&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;13&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;14&lt;/div&gt;&lt;div style=&quot;margin: 0px; padding: 0px;&quot;&gt;15&lt;/div&gt;&lt;div style=&