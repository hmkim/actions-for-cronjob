<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kyungw00k</title>
    <description>Just another geek weblog</description>
    <link>https://kyungw00k.github.io/</link>
    <atom:link href="https://kyungw00k.github.io/atom.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 02 Jan 2019 01:35:09 +0900</pubDate>
    <lastBuildDate>Wed, 02 Jan 2019 01:35:09 +0900</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        
        <title>2018년 회고</title>
        
        <description>&lt;h1 id=&quot;2018년-회고&quot;&gt;2018년 회고&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;잃어버린 시간&lt;/code&gt; 느낌의 2017년에는 BrowserStack 사용기 정도 올리고, 그 해애는 블로깅 자체를 하지 않았다.&lt;/p&gt;

&lt;p&gt;그러다 2018년 연말이 되었다.&lt;/p&gt;

&lt;p&gt;타임라인에 회고 글이 넘쳐나고, 나는 2018년에 뭐 했을까 싶어서 다이어리를 뒤적거리다, 버리기 전에 요약이라도 하자 싶었다.&lt;/p&gt;

&lt;p&gt;2017년 회고 썼던가 싶어서 &lt;a href=&quot;https://kyungw00k.github.io/2016/12/30/2016%EB%85%84-%ED%9A%8C%EA%B3%A0/&quot;&gt;2016년 회고&lt;/a&gt;를 보게 되었고, 뒤늦게 &lt;a href=&quot;https://kyungw00k.github.io/2018/12/30/2017%EB%85%84-%ED%9A%8C%EA%B3%A0-%EC%96%B4%EB%94%94%EA%B0%94%EB%8B%88/&quot;&gt;2017년 회고&lt;/a&gt;를 밀린 숙제하듯 어제 적었다.&lt;/p&gt;

&lt;p&gt;이제 2018년 다이어리를 버리기 전에&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“올해는 다이어리에 뭔가 적은게 많은 것 같으니, 적은게 아까워서라도 요약본을 남겨야겠다”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;싶어서, 회고를 적어 본다. 시-작!&lt;/p&gt;

&lt;h2 id=&quot;아직도-새내기-manager&quot;&gt;(아직도) 새내기 Manager&lt;/h2&gt;
&lt;p&gt;2017년 9월에 셀원에서 셀장(a.k.a. 팀원-&amp;gt;팀장 요런 느낌)으로 직급이란걸 단 이후로 만 1년 반 정도 된 것 같다.&lt;/p&gt;

&lt;p&gt;그 동안, 회사 생활 하면서 날 관리(?) 했던 분들이 수 없이 스쳐 지나간 한 해가 아니었나 싶다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이럴때 그 분이라면 어떻게 했을까?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;싶어, 실제 그 분들 중 몇 분에게 고민을 털어놓기도 했다.&lt;/p&gt;

&lt;p&gt;여튼, 개발보다 더 많은 커뮤니케이션 비용이 많이 드는 작업이지만, 또 다른 나를 보게 된 계기가 되었다는 측면에서는 신기한거 빼고는 나랑 잘 맞지 않는 것 같다.&lt;/p&gt;

&lt;p&gt;지금은 나랑 잘 맞지 않다는 것 조차 마음에 담아두지 않고 그냥 저냥 최선을 다하는 중이랄까..  😑&lt;/p&gt;

&lt;h2 id=&quot;functional-programming&quot;&gt;Functional Programming&lt;/h2&gt;
&lt;p&gt;알듯 말듯  오묘한 Functional Programming 세계에 빠져 업무로 개발 부채를 풀어보려고 또 갈아 엎었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;사실, 갈아 엎을 때가 된거겠죠! 아님 그러고 싶었다거나… 🙄&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;열심히 하나 하나 짜다가 Ramda 편한 맛을 들이니 편해서 Ramda로 도배했다가, 함께 일하는 동료가 생기고, &lt;code class=&quot;highlighter-rouge&quot;&gt;알아보기 힘들어요&lt;/code&gt; 라는 피드백을 받아서, 다시 Ramda를 걷어내는 형태로 코드가 바뀌었다.&lt;/p&gt;

&lt;p&gt;그렇다고 Funtional로 짠 코드를 버린건 아니고, 오히려 그 전보다 &lt;code class=&quot;highlighter-rouge&quot;&gt;보는 눈&lt;/code&gt;이 조금 생겨서 스스로 뿌듯했고, 코드 크기로는 2018년 상반기와 2018년 하반기가 크게 다르지 않았다는 측면에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;뭐가 나아졌지&lt;/code&gt; 싶지만 그래도 배우는 과정 자체가 재밌었다.&lt;/p&gt;

&lt;p&gt;주로 본 자료는…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MostlyAdequate/mostly-adequate-guide&quot;&gt;GitHub - MostlyAdequate/mostly-adequate-guide: Mostly adequate guide to FP (in javascript)&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;연습문제 풀어보면서 공부하면 👍&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://egghead.io/courses/professor-frisby-introduces-composable-functional-javascript&quot;&gt;Professor Frisby Introduces Composable Functional JavaScript from @drboolean on @eggheadio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;한 10번은 더 본 것 같다. 이제 조금 알 것도 같은 느낌이랄까… 여튼, 위 두 개의 링크로 Brian Lonsdorf 의 Fan이 되어버린 듯.&lt;/p&gt;

&lt;p&gt;그 외에 기억나는 Post는 아래 두 가지 정도 였던 것 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jrsinclair.com/articles/2016/marvellously-mysterious-javascript-maybe-monad/&quot;&gt;The Marvellously Mysterious JavaScript Maybe Monad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-style/&quot;&gt;A Gentle Introduction to Functional JavaScript: Part 4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;그-밖에&quot;&gt;그 밖에..&lt;/h2&gt;
&lt;h3 id=&quot;중도-포기&quot;&gt;중도 포기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/18209569&quot;&gt;The Martian - YES24&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Audible로 시작해서 듣다 만 책이라 할 수 있다. Chapter 18에 책갈피가 꽃혀 있음. 2019년 상반기에 마저 들어버려? 🤔&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/reactive-design-patterns&quot;&gt;Reactive Design Patterns&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;어디까지 봤는지 기억은 안나지만 Part 2 어딘가에서 읽다 잠든 이후 책꽃이 행!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/33082853&quot;&gt;코드와 그림으로 마스터하는 알고리즘&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;어느 날? 문득? 머릿속에서 GC된 CS를 찾는 심정으로 정독하고 있다가 대출 만료로 도서관에 반납해버린 책. 돈주고 사놨더니 책꽃이 행.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pragprog.com/book/dnvim/practical-vim&quot;&gt;Practical Vim&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Pragmatic 책이 내 스타일이 아닌지 자주 읽다 말게 된다. 하지만 이 책은 지난 2년간 계속 읽다 말다 하는 책인 듯 싶다. 좀 더 잘 쓰고 싶은데… 😒&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/re-engineering-legacy-software&quot;&gt;Re-Engineering Legacy Software&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Part 2 까지는 정독 했고, Part 3 부터는 슬렁 슬렁 봤다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/30498529&quot;&gt;빠른 모바일 앱 개발을 위한 React Native&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;만들고 싶은 앱이 생길때 열어보고, 만들다 지칠때 책꽃이로 보내길 수도 없이 했던 책. 올해는 뭐 하나 만들어 보려나 싶더니만.. 😫&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.co.kr/24/goods/20461940&quot;&gt;소프트웨어 장인 - YES24&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;인재 채용 Chapter 중간까지 봤다. 계속 봐야할 책인데 책꽃이에 있네. 꺼내두자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;완료&quot;&gt;완료&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.hanbit.co.kr/store/books/look.php?p_code=B6064588422&quot;&gt;함수형 사고&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;아리송했는데 좀 덜 아리송하게 된 책.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/functional-programming-in-javascript&quot;&gt;Functional Programming in JavaScript&lt;/a&gt;  👍 👏&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/third-party-javascript&quot;&gt;Third-Party JavaScript&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;업무의 기술적인 측면만 한 권의 책으로 요약한다면 이 책이라 할 수 있다. 좋은 책인듯. 👍👏&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/grokking-algorithms&quot;&gt;Grokking Algorithms&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;그저 Grokking 시리즈의 삽화가 좋아서 산 책.  👏&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/javascript-application-design&quot;&gt;JavaScript Application Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pragprog.com/book/es6tips/simplifying-javascript&quot;&gt;Simplifying JavaScript&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Tip 정도 익힌다 생각하고 봤고, 다 보고 나서 느낀 거지만, 굳이 안사도 될 책 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9791159241529&amp;amp;orderClick=JAj&quot;&gt;직장인을 위한 1분 영어 말하기(SPEAKING MATRIX) - 인터넷교보문고&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;매일까지는 아니지만 66일간 도서관 책 대여 하는 것으로 완독! 여튼 셀프 칭찬 👏한 다음 바로 2분 돌입.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/learn/kotlin-for-java-developers&quot;&gt;Kotlin for Java Developers&lt;/a&gt; &amp;lt;- &lt;a href=&quot;https://www.coursera.org/account/accomplishments/certificate/8QTNAEW3UNEW&quot;&gt;수료증&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;진행-중&quot;&gt;진행 중&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/prebid/Prebid.js&quot;&gt;prebid/Prebid.js&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;궁금해서 코드 보고 있고, Auction Manager 부분 제외하고 한번 정독은 한 듯 하다. 뭔가 목표가 있어서 본다기 보다 내부 구조가 궁금해서 보기 시작했는데 아직까진 재밌다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udacity.com/course/react-nanodegree--nd019&quot;&gt;Udacity React Nanodegree &lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;요즘 보면서 배우는게 좋아서인지 책을 안보고 이런것만 찾게 된다. 여튼 찬찬히 보면서 퀴즈 풀고 숙제 하면서 입문 중. 만들고 싶어지는게 생기는 시점에 진행 속도가 빨라질 것을 기대하고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9791159241536&amp;amp;orderClick=JAj&quot;&gt;직장인을 위한 2분 영어 말하기(SPEAKING MATRIX) - 인터넷교보문고&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;2분 부터는 분량이 확실히 많아졌다. 연말이라 그런지 중간에 빼먹는 날이 드문 드문 보인다. 매일 해야하는데 평균 이틀에 한번 하는 형태라 이대로 놔두면 위험할 듯.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;총평&quot;&gt;총평&lt;/h2&gt;
&lt;p&gt;(평가와 무관하게) 업무로 기대했던 바를 어느 정도 이뤄서 &lt;code class=&quot;highlighter-rouge&quot;&gt;아주&lt;/code&gt; 까지는 아니지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;나름&lt;/code&gt;  성취감이 있었던 한 해였다.&lt;/p&gt;

&lt;p&gt;업무 외적으로 개발한 건 0에 수렴했다고 봐도 무방하지만, 올 한해도 개발하면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;정리해둬야지&lt;/code&gt;나 &lt;code class=&quot;highlighter-rouge&quot;&gt;모듈로 만들어서 npm에 publish 해야지&lt;/code&gt;하는 것들이 많았었다.&lt;/p&gt;

&lt;p&gt;하지만 코드도 코드지만 사용자 측면에서 문서 정리를 잘해야한다는 부담감 컸고, 블로그 역시, 뭔가 특정 주제에 대해 &lt;code class=&quot;highlighter-rouge&quot;&gt;잘 적어야 한다&lt;/code&gt;는 부담감을 스스로 앉고 있어서 인지, 기껏 Github으로 옮겨놓았는데도 잘 안쓰게 되었다. 🤯&lt;/p&gt;

&lt;p&gt;그래서인지 모르겠지만, 스스로 만족할 만한 결과물이 없었고, 자연스럽게, &lt;code class=&quot;highlighter-rouge&quot;&gt;딱히 이룬게 없다&lt;/code&gt; 싶어 회고를 적지 않았었다.&lt;/p&gt;

&lt;p&gt;그런데 이번엔 그냥 다이어리 버리기 전에 적어놓은거 정리나 해보자 싶어 적어 봤고, 적다 보니 뭔가 2018년을 돌아보게 되는 것 같고, 그래서 다들 회고를 적나 보다 싶었다.&lt;/p&gt;

&lt;p&gt;그나저나 Gitbook 쓸때는 TIL 느낌으로 쓰곤 했는데, 그 조차도 하지 않게 되었네.&lt;/p&gt;

&lt;p&gt;여튼, 이 Post가 2019년의 처음이자 마지막 Post가 될 지는 두고봐야겠지만,  올 해는 아니길 스스로에게 기대해 본다.&lt;/p&gt;

&lt;p&gt;근데, 시청한 YouTube 히스토리와 Netflix, 웹툰 링크들을 모두 넣으면 얼추 2018년 한 해의 시간의 퍼즐이 맞춰질 것 같은 느낌은 뭘까. 😱&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Jan 2019 01:06:30 +0900</pubDate>
        <link>https://kyungw00k.github.io/2019/01/02/2018%EB%85%84-%ED%9A%8C%EA%B3%A0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2019/01/02/2018%EB%85%84-%ED%9A%8C%EA%B3%A0/</guid>
        
        
      </item>
    
      <item>
        
        <title>2017년 회고 어디갔니</title>
        
        <description>&lt;p&gt;잘 기억이 나지 않지만, 2016년 회고의 DOING/UNDONE을 중점으로 적어보면,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.coursera.org/account/accomplishments/certificate/TWP7W8AFFTDN&quot;&gt;Scala 입문에 성공&lt;/a&gt;했지만, 해당 프로젝트를 꾸준하게 하지 못함, 그래서 머릿속에서 GC 됨&lt;/li&gt;
  &lt;li&gt;React는 2018년 12월에 &lt;a href=&quot;https://www.udacity.com/course/react-nanodegree--nd019&quot;&gt;Deadline이 있는 강의&lt;/a&gt;를 통해 셀프 입문. 우연히 &lt;a href=&quot;https://youtu.be/dpw9EHDh2bM&quot;&gt;Hook 영상&lt;/a&gt;을 보고, 왜 사람들이 그토록 난리였나 뒤 늦게 이해 함.&lt;/li&gt;
  &lt;li&gt;parse-server는 &lt;a href=&quot;https://www.udemy.com/parse-server/&quot;&gt;Udemy 강의&lt;/a&gt; 보던 중에 발음을 핑계로 포기&lt;/li&gt;
  &lt;li&gt;viewable-sensor 라는 모듈은 dropbox안에 draft 버전으로 남아 있음&lt;/li&gt;
  &lt;li&gt;mraid.js 모듈은 회사에서 써먹을까 싶었지만 Ad@m SDK에서 짰던 수준에 머무름&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“제대로 한 것도 없는데 회고 따위 적어서 뭐하나”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;싶어서 안적었었나 보다.&lt;/p&gt;

&lt;p&gt;그리고 건강 안챙기는건 2018년에도 마찬가지였다.&lt;/p&gt;

&lt;p&gt;2017년, 안녕 👋&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Dec 2018 16:48:56 +0900</pubDate>
        <link>https://kyungw00k.github.io/2018/12/30/2017%EB%85%84-%ED%9A%8C%EA%B3%A0-%EC%96%B4%EB%94%94%EA%B0%94%EB%8B%88/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2018/12/30/2017%EB%85%84-%ED%9A%8C%EA%B3%A0-%EC%96%B4%EB%94%94%EA%B0%94%EB%8B%88/</guid>
        
        
      </item>
    
      <item>
        
        <title>BrowserStack 으로 Cross Browser Test 하기</title>
        
        <description>&lt;h2 id=&quot;0-시작하기-전에&quot;&gt;0. 시작하기 전에&lt;/h2&gt;

&lt;p&gt;이 글은 &lt;a href=&quot;https://kyungw00k.github.io/2016/09/05/SauceLabs%EB%A1%9C-cross-browser-test-%ED%95%98%EA%B8%B0/&quot;&gt;SauceLabs로 Cross Browser Test 하기&lt;/a&gt;와 큰 틀에서 동일한 내용을 다루고 있고,&lt;/p&gt;

&lt;h3 id=&quot;01-주의할-점이-있다면&quot;&gt;0.1. 주의할 점이 있다면&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;최적의 환경이 아닐 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(네, 뭐… 이건 당연하죠. 그렇습니다.)&lt;/p&gt;

&lt;h3 id=&quot;02-다른-점이-있다면&quot;&gt;0.2. 다른 점이 있다면&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SauceLabs&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;BrowserStack&lt;/code&gt;으로 바뀌었고&lt;/li&gt;
  &lt;li&gt;기존에 &lt;code class=&quot;highlighter-rouge&quot;&gt;zuul&lt;/code&gt;을 사용했던걸 &lt;a href=&quot;https://karma-runner.github.io/1.0/index.html&quot;&gt;karma&lt;/a&gt;로 대체하고&lt;/li&gt;
  &lt;li&gt;렌더링 테스트로 &lt;a href=&quot;http://nightwatchjs.org/&quot;&gt;Nightwatch&lt;/a&gt;를 사용한&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;정도라고 할 수 있겠다.&lt;/p&gt;

&lt;p&gt;여튼,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Unit Test는 &lt;a href=&quot;https://karma-runner.github.io/1.0/index.html&quot;&gt;karma&lt;/a&gt;를&lt;/li&gt;
  &lt;li&gt;Rendering Test는 &lt;a href=&quot;http://nightwatchjs.org/&quot;&gt;Nightwatch&lt;/a&gt;를&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사용하기로 하고, Local에 없는 브라우저는 BrowserStack을 사용해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Cross Browser Test 하기&lt;/code&gt;로 한다.&lt;/p&gt;

&lt;h3 id=&quot;어려워요-그림으로-그려줘요&quot;&gt;어려워요. 그림으로 그려줘요.&lt;/h3&gt;
&lt;p&gt;이 글에서 다루고자 하는 부분을 그림으로 그려보면 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/04/test-scenario.png&quot; alt=&quot;test-scenario&quot; /&gt;&lt;/p&gt;

&lt;p&gt;새로운 기능이 추가되면 Unit Test도 하고 Rendering Test도 해야 한다. 이를 다음 두 환경에서 해보는 것을 목표로 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Local 에서도 하고 -&amp;gt; 내 PC에 설치된 브라우저 먼저 테스트 하고&lt;/li&gt;
  &lt;li&gt;Remote 에서도 하고 -&amp;gt; 내 PC에 없는 브라우저는 (돈을 주고) 외주를 줘서 테스트 하고&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그러면, 시작해보자.&lt;/p&gt;

&lt;h3 id=&quot;1-browserstack-계정-생성&quot;&gt;1. BrowserStack 계정 생성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;계정 생성: https://www.browserstack.com/users/sign_up 를 통해서 진행하면 되겠다.&lt;/li&gt;
  &lt;li&gt;사용 방법: &lt;a href=&quot;https://kyungw00k.github.io/2017/01/03/browserstack-사용기/&quot;&gt;BrowserStack 사용기&lt;/a&gt;를 참고하면 되겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;오픈소스는 뭐 없나요?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/04/browserstack-free-for-open-source.png&quot; alt=&quot;browserstack-free-for-open-source&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.browserstack.com/contact?ref=open_source#sales&quot;&gt;일단 연락해보세요!&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-karma로-unit-test-하기&quot;&gt;2. Karma로 Unit Test 하기&lt;/h3&gt;

&lt;p&gt;예제는 &lt;a href=&quot;https://github.com/kyungw00k/karma-browserstack-example&quot;&gt;github/kyungw00k/karma-browserstack-example&lt;/a&gt; 에 올려두었다.&lt;/p&gt;

&lt;h4 id=&quot;20-프로젝트-구조&quot;&gt;2.0. 프로젝트 구조&lt;/h4&gt;
&lt;p&gt;일단 프로젝트 구조는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;karma-browserstack-example
├── src/
├── test/
├── README.md                       # This file
├── base.karma.conf.js              # base karma configuration
├── local.karma.conf.js             # to run tests on local machine
├── browserstack.karma.conf.js      # to run tests on BrowserStack
├── browserstack.launchers.conf.js  # Browser lists to test
├── webpack.config.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기에 &lt;code class=&quot;highlighter-rouge&quot;&gt;src/helper/call-function-by-name.js&lt;/code&gt; 라는 코드가 있고&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Call by name with context
 *
 * @param functionName
 * @param context
 * @returns {*}
 * @private
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*, args1, args2 ... */&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;namespaces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;namespaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;namespaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;namespaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;retVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;functionName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'function'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;retVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EvalError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`Not found callback function &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;retVal&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'object'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test/spec/call-function-by-name.spec.js&lt;/code&gt;라는 테스트 코드가 있다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global describe, it, require */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// test/spec/call-function-by-name.spec.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'assert'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../../src/helper/call-function-by-name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'callFunctionByName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should be called'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'world'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should be thrown exception'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;callFunctionByName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 코드들은 Karma가 실행되는 시점에 Webpack을 거쳐서 브라우저에서 실행할 수 있도록 변환이 된다.&lt;/p&gt;

&lt;p&gt;보통 &lt;code class=&quot;highlighter-rouge&quot;&gt;karma.conf.js&lt;/code&gt; 하나로 퉁 치는데, 여기서는 아래와 같이 3개로 나눠봤다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;base.karma.conf.js          # 공통 설정. 테스트할 브라우저 목록을 제외한 정도로 보면 됨
local.karma.conf.js         # Local용 설정이 추가
browserstack.karma.conf.js  # BrowserStack 설정이 추가
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리고 BrowserStack에서 실행할 브라우저가 많아지면 설정 파일이 커져서, 이를 따로 관리 하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;browserstack.launchers.conf.js&lt;/code&gt; 파일을 만들어 두었다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt; 항목에 아래와 같이 넣고&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test:local:unit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./node_modules/.bin/karma start local.karma.conf.js --singleRun true --debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test:ci:unit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./node_modules/.bin/karma start browserstack.karma.conf.js --singleRun true --debug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같은 형태로 실행하면 되겠다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;:local:unit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;일단 위 파일 3개를 대략 살펴보도록 하자.&lt;/p&gt;

&lt;h4 id=&quot;21-basekarmaconfjs&quot;&gt;2.1. &lt;code class=&quot;highlighter-rouge&quot;&gt;base.karma.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test/&lt;/code&gt; 경로에 test 파일들이 잔득(?) 있음&lt;/li&gt;
  &lt;li&gt;webpack을 쓰고 있(지만 그건 중요하지 않)음&lt;/li&gt;
  &lt;li&gt;테스트 코드들이 &lt;code class=&quot;highlighter-rouge&quot;&gt;mocha&lt;/code&gt; 기반으로 작성 되어 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;딱히, 특별한게 없다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global require, module */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// base.karma.conf.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpackOptions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./webpack.config.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;webpackOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;modulesDirectories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;src&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;node_modules&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'test/**/*.spec.js'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// frameworks to use&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;frameworks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mocha'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;preprocessors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// only specify one entry point&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// and require all tests in there&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'src/**/*.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'test/**/*.spec.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webpack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;reporters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mocha'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;webpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webpackOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;webpackMiddleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// webpack-dev-middleware configuration&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;noInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;proxies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;singleRun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;22-localkarmaconfjs&quot;&gt;2.2. &lt;code class=&quot;highlighter-rouge&quot;&gt;local.karma.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;local&lt;/code&gt; 용이고, 브라우저를 &lt;code class=&quot;highlighter-rouge&quot;&gt;PhantomJS&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Chrome&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Safari&lt;/code&gt;를 쓰겠다는 정도의 설정이 있다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global require, module */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// local.karma.conf.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./base.karma.conf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'PhantomJS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Chrome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Safari'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;23-browserstackkarmaconfjs&quot;&gt;2.3. &lt;code class=&quot;highlighter-rouge&quot;&gt;browserstack.karma.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;base.browserStack&lt;/code&gt; 부분이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Automate&lt;/code&gt; 화면에서 보이게 된다.&lt;/li&gt;
  &lt;li&gt;UI 테스트에서도 동일한 Browser Set을 써야해서 별도로 &lt;code class=&quot;highlighter-rouge&quot;&gt;browserstack.launchers.conf.js&lt;/code&gt;로 분리했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global require, module, process */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// browserstack.karma.conf.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./package.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./base.karma.conf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customLaunchers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./browserstack.launchers.conf.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toISOString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customLaunchers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;customLaunchers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BrowserStack'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BROWSER_STACK_USERNAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BROWSER_STACK_ACCESS_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Make sure the BROWSER_STACK_USERNAME and BROWSER_STACK_ACCESS_KEY environment variables are set.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mocha'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BrowserStack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browsers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customLaunchers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customLaunchers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customLaunchers&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concurrency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//base.browserDisconnectTolerance = 10&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//base.browserDisconnectTimeout = 360000&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//base.browserNoActivityTimeout = 360000&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserStack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;build&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`unit-test-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// BrowserStack Dashboard에서 Grouping 해주기 위해 설정&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;// BrowserStack Dashboard에서 Project로 Filtering 하기 위해 설정&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1800&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;captureTimeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1800&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startTunnel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;singleRun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;24-browserstacklaunchersconfjs&quot;&gt;2.4. &lt;code class=&quot;highlighter-rouge&quot;&gt;browserstack.launchers.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;서비스에서 대응하는 브라우저를 적어주면 된다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/automate/node&quot;&gt;링크의 ‘Setting your operating system, browser, and screen resolution’&lt;/a&gt; 항목을 참고해 원하는 브라우저 목록을 만들면 된다.&lt;/li&gt;
  &lt;li&gt;이 파일은 뒤에 Rendering Test 시에도 사용할 거라 별도의 파일로 분리했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global require, module */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// browserstack.launchers.conf.js&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*
   * Modern Browser
   */&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;sl_chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OS X&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Lion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;chrome&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;49.0&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;sl_firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OS X&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Lion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;firefox&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;43.0&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;sl_safari&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;OS X&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'os_version'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Yosemite'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'browser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Safari'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'browser_version'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'8.0'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/*
   * Internet Explorer
   */&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;sl_ie_11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Windows&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ie&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;11.0&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/*
   * iOS
   */&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;sl_ios_10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'iPhone 7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ios'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;os_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'10.0'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/*
   * Android Browser
   */&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;sl_android_5_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;android&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;os_version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;5.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;browser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;android&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'platform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ANDROID'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;device&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Google Nexus 5&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/04/karma-browserstack-example.png&quot; alt=&quot;karma-browserstack-example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;잘 실행되는 것을 볼 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;3-nightwatch로-rendering-test&quot;&gt;3. Nightwatch로 Rendering Test&lt;/h3&gt;
&lt;p&gt;Nightwatch를 사용하기 전에는 &lt;a href=&quot;https://garris.github.io/BackstopJS/&quot;&gt;BackstopJS&lt;/a&gt;를 사용했다.&lt;/p&gt;

&lt;p&gt;BackstopJS는 CasperJS/PhantomJS 기반으로 렌더링 테스트를 할 수 있는 좋은 툴이다. 무엇보다 테스트를 작성하기 쉬워서 처음에는 이걸 사용해 로컬에서 테스트를 했었다.&lt;/p&gt;

&lt;p&gt;로컬에서 IE와 모바일(Android/iOS)브라우저 테스트 까지 같이 하고 싶었지만, 결국 로컬에 브라우저를 전부 설치하기 전에는 불가능 하다는 결론에 이르렀다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;결국 기승전 Selenium인걸로…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;예제는 &lt;a href=&quot;https://github.com/kyungw00k/nightwatch-browserstack-example&quot;&gt;github/kyungw00k/nightwatch-browserstack-example&lt;/a&gt; 에 올려두었다.&lt;/p&gt;

&lt;h4 id=&quot;30-프로젝트-구조&quot;&gt;3.0. 프로젝트 구조&lt;/h4&gt;
&lt;p&gt;일단 프로젝트 구조는 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nightwatch-browserstack-example
├── src/
├── test/visual                      # Nightwatch 에서 사용하는 영역
│        ├── html/                   # Rendering에 사용할 Test View
│        ├── nightwatch/             # Nightwatchjs 기능 확장을 위해 사용할 Directory
│        ├── reports/                # Nightwatchjs가 생성하는 Test Report
│        ├── screenshots/            # 렌더링 결과를 검증하기 위해 사용할 Resource
│        │   ├── baseline            # ├── Expect
│        │   ├── diffs               # ├── Diff
│        │   └── results             # └── Actual
│        └── spec/                   # Test Case
│
├── README.md                        # This file
├── base.nightwatch.conf.js          # base nightwatch configuration
├── local.nightwatch.conf.js         # to run tests on local machine
├── browserstack.nightwatch.conf.js  # to run tests on BrowserStack
├── browserstack.launchers.conf.js   # Browser lists to test
├── webpack.config.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Karma Unit Test와 마찬가지로, Nightwatch 쪽 설정도 Local/BrowserStack 구분하기 위해 설정 파일을 다음과 같이 Local/BrowserStack 용으로 나누었고,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;base.nightwatch.conf.js          # 공통 설정. 테스트할 브라우저 목록을 제외한 정도로 보면 됨
local.nightwatch.conf.js         # Local용 설정이 추가
browserstack.nightwatch.conf.js  # BrowserStack 설정이 추가
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unit Test때와 동일하게 BrowserStack에서 실행할 브라우저를 따로 관리 하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;browserstack.launchers.conf.js&lt;/code&gt; 파일을 만들어 두었다.&lt;/p&gt;

&lt;p&gt;그리고 Nightwatch에서 테스트 시에 사용하는 영역을 &lt;code class=&quot;highlighter-rouge&quot;&gt;test/visual&lt;/code&gt;로 정했다.&lt;/p&gt;

&lt;p&gt;여기서 다루는 Rendering 테스트(&lt;code class=&quot;highlighter-rouge&quot;&gt;test/visual/spec/render.spec.js&lt;/code&gt;)는 다음과 같은 순서로 진행한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt; port 50000~59999 범위 내에 렌덤으로 하나 택해 static web server를 띄운 후&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test/visual/html&lt;/code&gt;에 있는 각 HTML 파일들에 대해 Test Case를 동적으로 생성하고, 각각의 테스트 케이스에서는&lt;/li&gt;
  &lt;li&gt;해당 HTML 파일을 URL(ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:50000/test/visual/html/test_page_1.html&lt;/code&gt;)로 하나 씩 불러서&lt;/li&gt;
  &lt;li&gt;ScreenShot을 찍고&lt;/li&gt;
  &lt;li&gt;기존에 가지고 있는 이미지와 비교해서&lt;/li&gt;
  &lt;li&gt;Mismatch 비율이 10% 미만이면 통과시킨다.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Q. HTML에 해당하는 Test Case를 일일이 동적으로 생성한 이유는 뭔가요?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이건… 사실 BackStopJS에서 사용했던 Test Case를 버리기가 아까워서 재활용 했던 측면이 컸다.&lt;/p&gt;

&lt;p&gt;어짜피 단순 렌더링 결과만 확인하면 되는 수준이라 모양이 이렇게 되었…&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;test/visual/spec/render.spec.js&lt;/code&gt; 내용은 다음과 같다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StaticServer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'static-server'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;staticServerInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StaticServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;rootPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// PORT를 렌덤으로 설정하는 부분&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Configure Test Environment&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testSuite&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Setting up...'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;staticServerInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resizeWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;768&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;staticServerInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Build Test Suite&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;basePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../html'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readdirSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;basePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// html 경로에 &quot;파일&quot;만 가져와서&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;basePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 그 중에 확장자가 html인 파일에 한하여&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.html'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 테스트 케이스를 만든다. 이때 Suite 이름은 &quot;HTML 파일 이름&quot;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Nightwatch Test Code&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;testSuite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`http://localhost:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;staticServerInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/test/visual/html/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.html`&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waitForElementPresent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'iframe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pause&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compareScreenshot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.png`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#nightwatch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;be&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;present&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testSuite&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;테스트 작성은 http://nightwatchjs.org/guide#writing-tests 링크를 참고하면 되겠다.&lt;/p&gt;

&lt;p&gt;이제 설정 파일을 하나 하나 살펴보자.&lt;/p&gt;

&lt;h4 id=&quot;31-basenightwatchconfjs&quot;&gt;3.1. &lt;code class=&quot;highlighter-rouge&quot;&gt;base.nightwatch.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Nightwatch 공통 설정은 이 곳에 쓰면 되겠다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global module */&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;src_folders&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./test/visual/spec&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;output_folder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./test/visual/reports&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;custom_commands_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./test/visual/nightwatch/commands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;custom_assertions_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./test/visual/nightwatch/assertions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;page_objects_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;globals_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;32-localnightwatchconfjs&quot;&gt;3.2. &lt;code class=&quot;highlighter-rouge&quot;&gt;local.nightwatch.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Local에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Chrome&lt;/code&gt; 브라우저로 테스트 할꺼라 &lt;code class=&quot;highlighter-rouge&quot;&gt;chromedriver&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;./bin&lt;/code&gt; 경로에 넣어두었다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global require, module */&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'util'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./base.nightwatch.conf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;selenium&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;start_process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;server_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./bin/selenium-server-standalone-3.0.1.jar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4444&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;cli_args&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;webdriver.chrome.driver&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./bin/chromedriver&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;s2&quot;&gt;&quot;test_settings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;selenium_port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4444&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;selenium_host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;silent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;desiredCapabilities&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;browserName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;chrome&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;33-browserstacknightwatchconfjs&quot;&gt;3.3. &lt;code class=&quot;highlighter-rouge&quot;&gt;browserstack.nightwatch.conf.js&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;기본 틀은 &lt;a href=&quot;https://github.com/browserstack/nightwatch-browserstack&quot;&gt;browserstack/nightwatch-browserstack&lt;/a&gt;에 있는 파일들을 그대로 가져와 사용했다.&lt;/p&gt;

&lt;p&gt;여러 브라우저 Instance를 병렬로 수행해야 했기에 &lt;a href=&quot;https://github.com/browserstack/nightwatch-browserstack/blob/master/conf/parallel_local.conf.js&quot;&gt;browserstack/nightwatch-browserstack/blob/master/conf/parallel_local.conf.js&lt;/a&gt; 설정을 사용했다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* global require, module */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./package.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'util'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./base.nightwatch.conf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;launchers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./browserstack.launchers.conf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toISOString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base_desired_capabilities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'build'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`rendering-test-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;testDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'project'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'browserstack.user'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BROWSER_STACK_USERNAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BROWSERSTACK_USERNAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'browserstack.key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BROWSER_STACK_ACCESS_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BROWSERSTACK_ACCESS_KEY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'browserstack.debug'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'browserstack.local'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'resolution'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1280x1024'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;selenium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;start_process&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hub-cloud.browserstack.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;test_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 브라우저를 추가하는 코드&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;launchers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'desiredCapabilities'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;launchers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Code to copy seleniumhost/port into test settings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test_settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'selenium_host'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selenium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'selenium_port'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selenium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'desiredCapabilities'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'desiredCapabilities'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base_desired_capabilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'desiredCapabilities'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'desiredCapabilities'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base_desired_capabilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nightwatch_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;34-스크린샷을-찍어서-비교하는-코드는-어디에&quot;&gt;3.4. 스크린샷을 찍어서 비교하는 코드는 어디에?&lt;/h4&gt;
&lt;p&gt;이 부분은 &lt;a href=&quot;https://gist.github.com/richard-flosi/8a5d2e10b6609ab9d06a&quot;&gt;richard-flosi/8a5d2e10b6609ab9d06a&lt;/a&gt; 코드를 사용했다.&lt;/p&gt;

&lt;p&gt;다만, 몇 가지 수정을 했는데,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resemblejs&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;blink-diff&lt;/code&gt;로 교체(이건 개취)&lt;/li&gt;
  &lt;li&gt;스샷과 DIFF 파일 이름을 렌덤하게 하도록 파일 이름에 &lt;code class=&quot;highlighter-rouge&quot;&gt;prefix&lt;/code&gt;를 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;파일 이름을 수정한 이유는 실제로 여러 브라우저에서 Screenshot을 찍는데, 파일 이름이 동일하면 시점에 따라 다른 브라우저에서 찍힌 파일로 DIFF를 할 가능성이 있기 때문이다.&lt;/p&gt;

&lt;p&gt;(실제로도 그런 일이 일어나서 추가했던거죠)&lt;/p&gt;

&lt;p&gt;이는 기존의 nightwatch에 있는 기능이라기 보다 확장한 부분으로 자세한 사항은 &lt;a href=&quot;http://nightwatchjs.org/guide#extending&quot;&gt;가이드 문서&lt;/a&gt;를 살펴보면 되겠다.&lt;/p&gt;

&lt;p&gt;위 Gist에서 수정한 파일 최종본은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/nightwatch-browserstack-example/blob/master/test/visual/nightwatch/assertions/compareScreenshot.js&quot;&gt;kyungw00k/nightwatch-browserstack-example/blob/master/test/visual/nightwatch/assertions/compareScreenshot.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/nightwatch-browserstack-example/blob/master/test/visual/nightwatch/commands/compareScreenshot.js&quot;&gt;kyungw00k/nightwatch-browserstack-example/blob/master/test/visual/nightwatch/commands/compareScreenshot.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-후기&quot;&gt;4. 후기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;특정 DOM을 Image Capture 하고 싶은데 Selenium에서 이게 안되는 것 같다(확실하지 않음).&lt;/li&gt;
  &lt;li&gt;최대한 덜 억지스러운 방법을 찾아서 이렇게 저렇게 해봤지만, 여전히 간단해보이지 않음.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 글을 보는 당신!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;내가 작업한 게 훨 더 좋네. 흐흐`&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그렇다면 한 수 부탁드립니다. 미리 감사드려요.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Jan 2017 16:51:38 +0900</pubDate>
        <link>https://kyungw00k.github.io/2017/01/04/browserstack%EC%9C%BC%EB%A1%9C-cross-browser-test-%ED%95%98%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2017/01/04/browserstack%EC%9C%BC%EB%A1%9C-cross-browser-test-%ED%95%98%EA%B8%B0/</guid>
        
        
      </item>
    
      <item>
        
        <title>BrowserStack 사용기</title>
        
        <description>&lt;blockquote&gt;
  &lt;p&gt;이 글은 제품 사용기에 가깝습니다. 자동화 테스트는 &lt;a href=&quot;/2017/01/04/browserstack으로-cross-browser-test-하기/&quot;&gt;BrowserStack으로 Cross Browser Test 하기&lt;/a&gt;에서 상세히 다룰께요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;시작하기-전에&quot;&gt;시작하기 전에&lt;/h2&gt;

&lt;p&gt;작년 하반기에는 개인/회사 Front 쪽 코드에 SauceLabs를 메인으로 썼었다.&lt;/p&gt;

&lt;p&gt;하지만, 개인 계정으로 회사에서 업무를 보는 건 &lt;code class=&quot;highlighter-rouge&quot;&gt;아무래도 좀 아니다&lt;/code&gt; 싶었고, 무엇보다 회사에서 보다 맘 편하게 쓰고 싶은 마음에 구매 요청을 했었다.&lt;/p&gt;

&lt;p&gt;그래서 구매 허락을 받고 나서 SauceLabs를 구매하려다,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;BrowserStack은 어떨까? 괜찮나?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;궁금해서 한 달 정도 고민해볼 생각으로 BrowserStack으로 구매를 신청했다.&lt;/p&gt;

&lt;p&gt;후기를 적으려고 기능 이곳저곳을 돌아다니다 보니 자연스럽게 SauceLabs와 비교를 하게 되었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;속도는 빠른가요?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;어짜피 국내에 있는 회사가 아니라 속도는 애초에 기대도 하지 않았던 터라, 어느정도 포기는 했었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;가격은?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;0-pricing&quot;&gt;0. Pricing&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-pricing.png&quot; alt=&quot;browserstack-pricing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;요금표는 https://www.browserstack.com/pricing 에서 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;가격은 SauceLabs도 얼추 비슷한 것 같고, Parallel Test(SauceLabs에서는 Concurrent VM) 수가 높아질수록 (당연히) 비싸진다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그래서 어떤 게 더 좋아? 네가 쓰는 거 그냥 쓸게&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;몇 가지 항목으로 나눠서 살펴보면,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;자동화 테스트 설정 난이도(ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;karma&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;nightwatchjs&lt;/code&gt; 등등): 비슷&lt;/li&gt;
  &lt;li&gt;가격: 비슷&lt;/li&gt;
  &lt;li&gt;문서화: 비슷&lt;/li&gt;
  &lt;li&gt;UI: (개취에 가깝지만 일단) BrowserStack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;개인적으로는 SauceLabs 보다 BrowserStack이 더 맘에 들었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;단순 UI 이슈일지도 모르지만 몇 가지 포인트는 있습니다. 흠. 흠.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;일단 리뷰는 아래 네 가지 기능을 살펴보는 것으로 한다.&lt;/p&gt;

&lt;h2 id=&quot;1-features&quot;&gt;1. Features&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Live&lt;/li&gt;
  &lt;li&gt;Automate&lt;/li&gt;
  &lt;li&gt;Screenshots&lt;/li&gt;
  &lt;li&gt;Responsive&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-live&quot;&gt;1.1. Live&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-select-browser.png&quot; alt=&quot;browserstack-live-select-browser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;일단 Live는 BrowserStack의 기본 기능이고, OS 별로 사용할 수 있는 브라우저를 클릭하면 Instance가 생성된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-browser-view.png&quot; alt=&quot;browserstack-browser-view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사이트를 방문 한 모습이고, 우측 하단에 Toolbar가 있는데,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-browser-switch.png&quot; alt=&quot;browserstack-live-browser-switch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SWITCH&lt;/code&gt;를 누르면 위와 같이 OS/브라우저를 선택할 수 있는 화면이 뜨고, 선택하면 해당 OS/브라우저로 동일한 URL을 열게 된다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-features.png&quot; alt=&quot;browserstack-live-features&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FEATURES&lt;/code&gt;를 누르면 위와 같이 사용할 수 있는 기능에 대한 설명을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-general-settings.png&quot; alt=&quot;browserstack-live-general-settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;톱니 모양의 아이콘&lt;/code&gt;을 누르면 위와 같이 일반적인 설정(&lt;code class=&quot;highlighter-rouge&quot;&gt;Session timeout&lt;/code&gt;이나 Local 설정 등등)을 할 수 있고,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-general-settings-keyboard-layout-no-korean.png&quot; alt=&quot;browserstack-live-general-settings-keyboard-layout-no-korean&quot; /&gt;&lt;/p&gt;

&lt;p&gt;역시나 &lt;code class=&quot;highlighter-rouge&quot;&gt;한국어&lt;/code&gt; 자판은 없다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-generate-screenshot.png&quot; alt=&quot;browserstack-live-generate-screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;카메라 아이콘&lt;/code&gt;을 누르면 보고 있는 화면을 캡춰해주는데, 간단히 추가로 내용을 적을 수 있는 UI를 제공한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-quicklaunch.png&quot; alt=&quot;browserstack-live-quicklaunch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Quick Launch&lt;/code&gt;는 자주 쓰는 브라우저 즐겨찾기 하는 용도로 쓰면 될 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-live-resolution-switch.png&quot; alt=&quot;browserstack-live-resolution-switch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;1242x877&lt;/code&gt;과 같은 텍스트를 누르면 해상도를 변경할 수 있는데, 기본은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Scale to fit&lt;/code&gt;이다.&lt;/p&gt;

&lt;h3 id=&quot;12-automate&quot;&gt;1.2. Automate&lt;/h3&gt;
&lt;p&gt;사실, Live만 하자고 구매하기엔 좀 아깝긴 하다. &lt;del&gt;Live는 어찌 보면 노동력으로 해결할 수 있…&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;실제 프로젝트 테스트 때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Automate&lt;/code&gt;를 주로 쓰고, 테스트 결과가 남아서 로그를 잘 묶어서 남기면 보기도 편하다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-automate-dashboard.png&quot; alt=&quot;browserstack-automate-dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 화면이 Dashboard고, Automate 메뉴의 첫 페이지다. 현재 테스트 중인 항목이 있다면, 새로고침 없이 실시간으로 진행상황을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-automate-dashboard-search-panel.png&quot; alt=&quot;browserstack-automate-dashboard-search-panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;좀 더 Filtering 해서 보고 싶다면, 좌측 검색 Form을 잘 활용하면 될 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-automate-instance-text-log.png&quot; alt=&quot;browserstack-automate-instance-text-log&quot; /&gt;&lt;/p&gt;

&lt;p&gt;각 Test 별로 진행 상황(Text, Video)이 보이고 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Text Log&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Visual Log&lt;/code&gt;가 남게 된다(위 화면은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Text Log&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-automate-instance-visual-log.png&quot; alt=&quot;browserstack-automate-instance-visual-log&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Visual Log&lt;/code&gt;는 Test Action 수행할 때마다 Capture를 한다는 점 정도 차이가 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그래서 코드랑 연동은 어떻게 하는데?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;전에 글을 썼든 &lt;a href=&quot;https://kyungw00k.github.io/2016/09/05/SauceLabs%EB%A1%9C-cross-browser-test-%ED%95%98%EA%B8%B0/&quot;&gt;SauceLabs로 Cross Browser Test 하기&lt;/a&gt; 내용과 마찬가지로 방법은 비슷하다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;보다 더 자세한 이야기는 &lt;a href=&quot;/2017/01/04/browserstack으로-cross-browser-test-하기/&quot;&gt;BrowserStack으로 Cross Browser Test 하기&lt;/a&gt;에서 다룰께요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;13-screenshots&quot;&gt;1.3. Screenshots&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-screenshots.png&quot; alt=&quot;browserstack-screenshots&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 브라우저들 중 15개를 선택하고 URL을 입력하고 Generate 하면 ScreenShot을 찍어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-screenshots-local-testing-options.png&quot; alt=&quot;browserstack-screenshots-local-testing-options&quot; /&gt;&lt;/p&gt;

&lt;p&gt;URL이 Local이거나 Private Network에 있는 경우에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Local Testing&lt;/code&gt;을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Local Server&lt;/code&gt; 기능을 사용할 수 있고&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-screenshots-local-folder.png&quot; alt=&quot;browserstack-screenshots-local-folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 밖에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Local Folder&lt;/code&gt; 옵션을 사용하면 Local 파일을 Remote에서 임의의 URL로 접근할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-screenshots-results-share.png&quot; alt=&quot;browserstack-screenshots-results-share&quot; /&gt;&lt;/p&gt;

&lt;p&gt;스크린샷 결과는 위와 같이 생성되고, URL로 다른 이들과 공유할 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;14-responsive&quot;&gt;1.4. Responsive&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-responsive.png&quot; alt=&quot;browserstack-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;테스트 하는 페이지가 반응형 페이지라면 이 기능이 유용할 수 있겠으나 문제는… 한글이 깨집니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;(╯°□°）╯︵ ┻━┻&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017/01/03/browserstack-responsive-local-testing-options.png&quot; alt=&quot;browserstack-responsive-local-testing-options&quot; /&gt;&lt;/p&gt;

&lt;p&gt;마찬가지로, &lt;code class=&quot;highlighter-rouge&quot;&gt;Local Server&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Local Folder&lt;/code&gt; 옵션을 제공한다.&lt;/p&gt;

&lt;h2 id=&quot;2-특이-사항&quot;&gt;2. 특이 사항&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;위 네 가지 기능 모두 &lt;code class=&quot;highlighter-rouge&quot;&gt;Local Testing&lt;/code&gt; 접근 링크가 있는 점&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-이런-분들에게-browserstack을-추천드려요&quot;&gt;3. 이런 분들에게 BrowserStack을 추천드려요&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;이미 작성한 Unit Test가 있는 분&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Unit Test 및 UI 자동화 테스트 뿐 아니라 실제 Live Test도 자주 사용 하려는 분&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 03 Jan 2017 16:53:38 +0900</pubDate>
        <link>https://kyungw00k.github.io/2017/01/03/browserstack-%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2017/01/03/browserstack-%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
        
        
      </item>
    
      <item>
        
        <title>2016년 회고</title>
        
        <description>&lt;p&gt;언제나 그렇듯이 목표한 바의 100% 이루기는 힘들지만, 돌아보면&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;올해는 지난해보다 상대적으로 뜻하는 바를 이루지 못한 한 해였다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;올해 역시&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여전히 욕심은 많았고&lt;/li&gt;
  &lt;li&gt;이것저것 공부는 하긴 했으나&lt;/li&gt;
  &lt;li&gt;(아직 Input이 충분하지 않은 것인지 Output을 만들고 싶지 않았던 건지 모르겠지만 하여튼) Output이 많이 없었고&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;가장 큰 문제는&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;무엇보다 가장 중요한 건 목표 자체가 없었다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;올해는 시작부터 그냥 흘러가는 데로 보냈다고 보는 게 맞는 것 같다.&lt;/p&gt;

&lt;p&gt;그래도 시간은 가고, 이것저것 뭔가는 한 것 같아서 Things에 기록한 Log를 기준으로 몇 가지 적어본다.&lt;/p&gt;

&lt;h3 id=&quot;doing&quot;&gt;DOING&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/30498529&quot;&gt;빠른 모바일 앱 개발을 위한 React Native&lt;/a&gt;로 React Native 입문 중&lt;/li&gt;
  &lt;li&gt;Scala 입문 중&lt;/li&gt;
  &lt;li&gt;React 입문 중&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;done&quot;&gt;DONE&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;새집으로 이사를 했고&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/~kyungw00k&quot;&gt;NPM에 몇 가지 모듈을 Publish&lt;/a&gt; 했고&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kyungw00k.github.io/2016/08/30/exitwp-%ED%96%88%EC%96%B4%EC%9A%94-2/&quot;&gt;Wordpress를 성공적(?)으로 벗어났고&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;회사 일과 개인 프로젝트의 경계를 무너뜨리고 적절히 일에 엮어서 Output을 내는 방향으로 기술적 부채를 청산했(다)고 (믿고 싶고)&lt;/li&gt;
  &lt;li&gt;의도치 않게 몇 가지 장난감(ie. &lt;a href=&quot;https://github.com/kyungw00k/alfred-kozip-workflow&quot;&gt;alfred-kozip-workflow&lt;/a&gt;)을 만들었고&lt;/li&gt;
  &lt;li&gt;Swift 2 절반(문법) 봤고&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.codewars.com/users/kyungw00k/stats&quot;&gt;Codewars에서 JS로 (상반기 동안) 문제 몇 개 풀었고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;특히, 블로그 이전은&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TIL 같은 느낌으로 자주 쓰겠다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;며 동기부여에 성공했지만 (이전하는 데 힘을 쏟았다는 핑계로) 글을 많이 쓰지 못했고, 오히려 예전처럼 Local에 Markdown 파일이 쌓이고 있다.&lt;/p&gt;

&lt;h3 id=&quot;undone&quot;&gt;UNDONE&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BrowserStack으로 Cross Browser Test 하기&lt;/code&gt;라는 주제로 Blog Post 완성&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server&quot;&gt;parse-server&lt;/a&gt; 분석&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/jsoj&quot;&gt;JSOJ v2&lt;/a&gt; 완성&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/viewable-sensor&quot;&gt;viewable-sensor&lt;/a&gt; 모듈 Publish&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/mraid.js&quot;&gt;mraid.js&lt;/a&gt; 모듈 Publish&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/alfred-kozip-workflow&quot;&gt;alfred-kozip-workflow&lt;/a&gt; 개선&lt;/li&gt;
  &lt;li&gt;Udemy에서 구매한 &lt;code class=&quot;highlighter-rouge&quot;&gt;iOS 9 and Swift 2&lt;/code&gt; 과정 다 보기&lt;/li&gt;
  &lt;li&gt;Coursera &lt;code class=&quot;highlighter-rouge&quot;&gt;Data Science&lt;/code&gt; 과정 1개 이상 추가 수료하기&lt;/li&gt;
  &lt;li&gt;Machine Learning 개념이든 실습이든 뭐라도 따라 해 보기&lt;/li&gt;
  &lt;li&gt;구매에 힘쓰고 펼쳐보지 않은 새 책들&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 밖에, &lt;code class=&quot;highlighter-rouge&quot;&gt;건강을 관리 하지 않았던 점&lt;/code&gt;이 서서히 수면 위로 올라오는 듯한 느낌을 자주 받았다.&lt;/p&gt;

&lt;p&gt;기술적 부채든 재미나는 프로젝트든 뭐라도 하려면 건강 회복이 우선이 되어야 할 것 같아, 내년의 목표는 일단&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;몸부터 살고 보자&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;로 정하고, (손목에 Apple Watch도 있으니) 며칠 전부터 궁리한 운동 계획을 실천하는 것으로 한 해를 시작해야겠다.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Dec 2016 16:48:56 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/12/30/2016%EB%85%84-%ED%9A%8C%EA%B3%A0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/12/30/2016%EB%85%84-%ED%9A%8C%EA%B3%A0/</guid>
        
        
      </item>
    
      <item>
        
        <title>SauceLabs로 Cross Browser Test 하기</title>
        
        <description>&lt;h2 id=&quot;시작하기-전에&quot;&gt;시작하기 전에&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Javascript Code! 브라우저 별로 어떻게 테스트 하시나요?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;개인 프로젝트든 회사 업무든 JavaScript로 코드 작성 시,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;로 테스트 코드 작성하고&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/testem/testem&quot;&gt;Testem&lt;/a&gt;을 Local에 설치 된 브라우저에서 테스트를 하고 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;요즘 웹 개발 하기 많이 좋아지지 않았나?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(세상이 좋아졌다고 하지만 그래도) &lt;code class=&quot;highlighter-rouge&quot;&gt;Internet Explorer&lt;/code&gt;도 버전별로(특히 7/8/9) 테스트 하고 싶고,&lt;/p&gt;

&lt;p&gt;(요즘 대세인) 모바일 브라우저도 버젼별로 테스트 하고 싶은데…&lt;/p&gt;

&lt;p&gt;손 쉽게(이왕이면 공짜로?) 한 방(?)에 할 수 없을까 &lt;del&gt;아님 내가 쓸 바퀴 한 번 만들어볼까&lt;/del&gt; 고민하던 차에…&lt;/p&gt;

&lt;p&gt;SauceLabs가 &lt;a href=&quot;https://saucelabs.com/opensauce/&quot;&gt;OpenSource의 경우에는 무료로 Instance를 제공해준다&lt;/a&gt;는 글을 봤다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/open-sauce-plan.png&quot; alt=&quot;open sauce plan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;유료로 사용할 경우에는 EXPERT와 PROFESSIONAL의 중간 정도 이면서, Automated Testing과 Manual Testing 시간이 무려 UNLIMITED이다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/pricing-plan.png&quot; alt=&quot;pricing plan&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;쓸만한가?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;쓸만한지 정말 궁금해서, 개발에서 사용하는 일부 모듈 중,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;비지니스 로직없는 모듈을 Github에 등록하고,&lt;/li&gt;
  &lt;li&gt;이 모듈로 OpenSource Instance를 받아서&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;테스트를 해 봤다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/testing-page.png&quot; alt=&quot;testing page&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;그래서, 쓸만한가?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/browser-support.png&quot; alt=&quot;browser support&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;이 결과를 얻기 까지 소스 및 테스트 코드를 수정하는 아픔이 있긴 했지만&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;일단, &lt;code class=&quot;highlighter-rouge&quot;&gt;그렇다&lt;/code&gt; 고 할 수 있다.&lt;/p&gt;

&lt;p&gt;그렇다면, OpenSauce 계정 등록부터, 테스트 코드를 Travis CI로 태우기 까지의 과정을 살펴보자.&lt;/p&gt;

&lt;h2 id=&quot;0-테스트-할-project&quot;&gt;0. 테스트 할 Project&lt;/h2&gt;
&lt;p&gt;일단 테스트 하려면 테스트 할 프로젝트가 있어야 하겠다.&lt;/p&gt;

&lt;p&gt;이번 글에서는 &lt;a href=&quot;https://github.com/kyungw00k/viewport-position&quot;&gt;kyungw00k/viewport-position&lt;/a&gt;를 중심으로 적어본다.&lt;/p&gt;

&lt;p&gt;처음에 이 모듈은 다음과 같이 테스트를 했었다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/substack/tape&quot;&gt;substack/tape&lt;/a&gt; 기반으로 테스트 코드를 작성했고,&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt;로 코드를 빌드(란 표현이 맞을지 모르지만 여튼) 한 다음&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ci.testling.com/&quot;&gt;testling&lt;/a&gt;으로 &lt;a href=&quot;https://ci.testling.com/guide/local_tests&quot;&gt;Local Test&lt;/a&gt;를 한 다음&lt;/li&gt;
  &lt;li&gt;Travis CI에서 동일한 조건으로 수행하기 위해 &lt;a href=&quot;https://github.com/kyungw00k/viewport-position/commit/dea7074d0eb5fa733deeb055da6c7fa6dcaa47c5&quot;&gt;Chrome을 설치해서 Local Test를 돌렸&lt;/a&gt;다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-opensauce-계정-등록하기&quot;&gt;1. OpenSauce 계정 등록하기&lt;/h2&gt;
&lt;p&gt;https://saucelabs.com/beta/signup/OSS/None 링크를 통해 계정을 생성한다.&lt;/p&gt;

&lt;p&gt;이때, &lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;을 본인 ID 보다는 Test 하려는 모듈 또는 Product 기준으로 하는게 좋다.&lt;/p&gt;

&lt;p&gt;그 이유는…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/build-status-banners.png&quot; alt=&quot;build-status-banners&quot; /&gt;&lt;/p&gt;

&lt;p&gt;테스트 결과를 Browser Badge를 받을 수 있는데, 이 기준이 &lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;이었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;:scream: :cry: :sob: 아놔&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;등록을 하고 나면 다음과 같은 Dashboard를 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/dashboard.png&quot; alt=&quot;dashboard&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-개발-환경-설정-하기&quot;&gt;2. 개발 환경 설정 하기&lt;/h2&gt;
&lt;p&gt;만약 테스트용 프로젝트가 Mocha로 되어 있으면 일단 시작은 순조로울 듯 하다.&lt;/p&gt;

&lt;p&gt;Tape도 된다고는 했지만 Tape 쪽 코드든 내 코드든 IE6/7에서 어딘가 모르게 스크립트 에러가 났고,&lt;/p&gt;

&lt;p&gt;에러가 나도 테스트가 멈추지 않아 Timeout에 걸려서 자꾸만 실패를 했다.&lt;/p&gt;

&lt;p&gt;그래서 &lt;a href=&quot;https://wiki.saucelabs.com/display/DOCS/Getting+Started+with+JavaScript+Unit+Testing+Example&quot;&gt;Getting Started with JavaScript Unit Testing Example&lt;/a&gt; 문서 부터 살펴보기 시작했다.&lt;/p&gt;

&lt;p&gt;그래서 내린 결론은&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;여기서 지원하는 Framework으로 변경하지 뭐. 그 정도 시간은 투자할 수 있어.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;하지만 Grunt를 쓰고 싶지 않았다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;아, 물론 Grunt를 싫어하는건 아니에요.&lt;br /&gt;
그냥 작은 프로젝트라 그 정도(?) 까지 쓰고 싶지 않았던 것일 뿐…&lt;br /&gt;
(스스로 정량화 할 수 없는 그 느낌 아시죠?)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;21-zuul&quot;&gt;2.1. zuul&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/netflix/zuul&quot;&gt;@netflix의 zuul&lt;/a&gt;이 아니라 &lt;a href=&quot;https://github.com/defunctzombie/zuul&quot;&gt;@defunctzombie의 zuul&lt;/a&gt;입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;네, 제가 알고 있는 그 &lt;code class=&quot;highlighter-rouge&quot;&gt;zuul&lt;/code&gt; 인지 알았는데 아니었…&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;zuul&lt;/code&gt;은&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;처음 부터 알고 있었던건 아니었고&lt;/li&gt;
  &lt;li&gt;아마 &lt;code class=&quot;highlighter-rouge&quot;&gt;tape&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;saucelabs&lt;/code&gt; 등등의 키워드로 구글신님에게 물어보다 얻어 걸리지 않았을까&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;싶은데, 여튼 이걸 쓰기로 결정한 건&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Grunt가 아니었고&lt;/li&gt;
  &lt;li&gt;CLI 었고&lt;/li&gt;
  &lt;li&gt;SauceLabs에서도 잘 되었기 때문이었고,&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;‘개취’입니다 존중해주시죠&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;기존에 테스트 코드가 있다면 손쉽게 이용할 수 있어서 좋았다.&lt;/p&gt;

&lt;p&gt;이를 테면…&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zuul &lt;span class=&quot;nt&quot;&gt;--local&lt;/span&gt; 8080 &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; test.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 명령으로 local 8080 포트로 (물론 브라우저에서 방문하는 형태로) 테스트 코드 실행이 가능했다.&lt;/p&gt;

&lt;p&gt;사용하기 전에 몇 가지 설정이 필요한데, 다음 두 가지는 필수 값이라 꼭 적어줘야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;UI(Test Framework)&lt;/li&gt;
  &lt;li&gt;Browsers(브라우저 지원 범위)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;프로젝트 루트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zuul.yml&lt;/code&gt;에 위 항목을 적어주면 된다.&lt;/p&gt;

&lt;p&gt;보다 더 자세한 항목은 &lt;a href=&quot;https://github.com/defunctzombie/zuul/wiki/zuul.yml&quot;&gt;@defunctzombie/zuul/wiki/zuul.yml&lt;/a&gt;에서 살펴보기 바란다.&lt;/p&gt;

&lt;p&gt;여튼 &lt;code class=&quot;highlighter-rouge&quot;&gt;zuul&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;SauceLabs&lt;/code&gt;의 조합을 사용하기 위해서는 &lt;a href=&quot;https://github.com/defunctzombie/zuul/wiki/Cloud-testing#2-educate-zuul&quot;&gt;SauceLabs에서 받은 키를 zuul에서 사용할 수 있도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.zuulrc&lt;/code&gt; 파일에 해당 내용을 적어줘야&lt;/a&gt; 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sauce_username: my_awesome_username
sauce_key: 550e8400-e29b-41d4-a716-446655440000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그 밖에 내용은 &lt;a href=&quot;https://github.com/defunctzombie/zuul/wiki/Cloud-testing&quot;&gt;@defunctzombie/zuul/wiki/Cloud-testing&lt;/a&gt; 문서를 참고하기 바란다.&lt;/p&gt;

&lt;p&gt;여튼 위 설정을 거친 후에, 로컬에서 SauceLabs 조합의 테스트를 해 봤다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/cli-testing.png&quot; alt=&quot;cli-testing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그런데 (로컬이든 Travis CI든)테스트 과정에서 자꾸 connection refused 이슈가 발생했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/zuul-connection-refused.png&quot; alt=&quot;zuul-connection-refused&quot; /&gt;&lt;/p&gt;

&lt;p&gt;좀 찾아보니 이미 &lt;a href=&quot;https://github.com/defunctzombie/zuul/issues/251&quot;&gt;알려진 알려진 이슈&lt;/a&gt;고, 해결 방안은&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;를 사용해&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;concurrency: 2&lt;/code&gt; 로 하면 잘 될꺼야&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;zuul-ngrok&lt;/code&gt; 쓰면 될꺼야&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;라는 내용이 보여서 바로 테스트 해봤다.&lt;/p&gt;

&lt;h3 id=&quot;22-zuul-ngrok&quot;&gt;2.2. &lt;a href=&quot;https://github.com/rase-/zuul-ngrok&quot;&gt;zuul-ngrok&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;zuul&lt;/code&gt;에서 tunneling으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;을 사용하게 하는 프로젝트로, &lt;code class=&quot;highlighter-rouge&quot;&gt;zuul-ngrok&lt;/code&gt;을 사용하려면 먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;을 사용할 수 있게 가입을 하든 환경을 구축하든 해야하는데,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ngrok? 먹는거야?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/09/05/google-ngrok.png&quot; alt=&quot;google-ngrok&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.outsider.ne.kr/1159&quot;&gt;@outsider/ngrok으로 로컬 네트워크의 터널 열기&lt;/a&gt; 글을 보면&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;일단 먹는건 아니고&lt;/li&gt;
  &lt;li&gt;어디에 쓰는 물건인지&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;잘 설명해주고 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;은 로컬에서 사용할 수도 있지만 가입해서 사용할 수도 있다. Travis CI에서 사용할 수 있도록 가입해서 쓰자.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ngrok.com/&quot;&gt;https://ngrok.com/&lt;/a&gt; 에 방문해 가입하고&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dashboard.ngrok.com/get-started&quot;&gt;get-started&lt;/a&gt; 링크에서 미리 발급된 &lt;code class=&quot;highlighter-rouge&quot;&gt;authtoken&lt;/code&gt;을 확인한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;현재 &lt;a href=&quot;https://github.com/kyungw00k/viewport-position&quot;&gt;kyungw00k/viewport-position&lt;/a&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zuul.yml&lt;/code&gt;에는 다음과 같이 적용되어 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tunnel:
  type: ngrok
  authtoken: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  proto: tcp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Updated&lt;/strong&gt;&lt;br /&gt;
Q. Outsider: 근데 중간에 API 키 지워야 하지 않아요? 해보진 않았지만 ㅎ&lt;br /&gt;
A. &lt;code class=&quot;highlighter-rouge&quot;&gt;authtoken&lt;/code&gt;은 별도로 &lt;code class=&quot;highlighter-rouge&quot;&gt;NGROK_AUTH_TOKEN&lt;/code&gt; 환경 변수로 설정이 가능해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zuul.yml&lt;/code&gt; 에 포함시킬 필요가 없다고 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;적용 후에 Concurrency를 SauceLabs VM에 맞춰서 5개로 했다가&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;다른 모듈에서도 쓰려고 개수를 1개로 줄이기로 했으나,&lt;/li&gt;
  &lt;li&gt;1개로 했다가 iOS 쪽 테스트 시에 Simulator 부팅이 오래 걸려서&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다시 2개로 변경한 상태다.&lt;/p&gt;

&lt;p&gt;이제 마지막으로 Travis CI 연동을 해보자.&lt;/p&gt;

&lt;h3 id=&quot;3-travis-ci&quot;&gt;3. Travis CI&lt;/h3&gt;
&lt;p&gt;관련해서 &lt;a href=&quot;https://docs.travis-ci.com/user/sauce-connect/&quot;&gt;Travis CI 측의 sauce-connect 문서&lt;/a&gt;에도 잘 설명되어 있지만&lt;/p&gt;

&lt;p&gt;요약하면, 아래와 같이 실행하고&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install travis
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;travis encrypt &lt;span class=&quot;nv&quot;&gt;SAUCE_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;sauce username&amp;gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &amp;lt;travis-username&amp;gt;/&amp;lt;repo&amp;gt; &lt;span class=&quot;nt&quot;&gt;--add&lt;/span&gt;
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;travis encrypt &lt;span class=&quot;nv&quot;&gt;SAUCE_ACCESS_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;sauce access key&amp;gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &amp;lt;travis-username&amp;gt;/&amp;lt;repo&amp;gt; &lt;span class=&quot;nt&quot;&gt;--add&lt;/span&gt;
yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 출력 결과를 &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;에 추가해주면 되겠다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo: required
dist: trusty
language: node_js
node_js:
- '5.0'
env:
  global:
  - secure: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  - secure: yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;끝으로&quot;&gt;끝으로…&lt;/h2&gt;

&lt;p&gt;원래 이 글의 시작은 사내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Javascript Code! 브라우저 별로 어떻게 테스트 하시나요?&lt;/code&gt; 라는 주제에서&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사내에 &lt;code class=&quot;highlighter-rouge&quot;&gt;나만 모르는 어썸&lt;/code&gt;한게 있다면 거기에 무임 승차 해보고 싶…기도 했지만&lt;/li&gt;
  &lt;li&gt;실제로 다른 분들은 어떻게 작업하고 있는지 노하우를 (건방지게) 공유 받고 싶어서&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;시작했던 거였는데, 제품 소개 삘로 글을 써서 그런가 공유 받기가 쉽지 않았다.&lt;/p&gt;

&lt;p&gt;여튼,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open Source 프로젝트에서 무료로 사용할 수 있게 해준 SauceLabs가 무척 고맙고&lt;/li&gt;
  &lt;li&gt;간단한 거지만 까먹지 않기 위해서&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;라도 단순 사용기를 남겨본다.&lt;/p&gt;

&lt;p&gt;이 글을 보는 당신!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Javascript Code! 브라우저 별로 어떻게 테스트 하시나요?&lt;/code&gt; :dizzy:&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Sep 2016 15:40:38 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/09/05/SauceLabs%EB%A1%9C-cross-browser-test-%ED%95%98%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/09/05/SauceLabs%EB%A1%9C-cross-browser-test-%ED%95%98%EA%B8%B0/</guid>
        
        
      </item>
    
      <item>
        
        <title>exitwp 했어요(2)</title>
        
        <description>&lt;p&gt;이번에는 진짜로 옮겼다.&lt;/p&gt;

&lt;p&gt;사실, 4년 전에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Octopress&lt;/code&gt;로 한 번 옮기긴 했었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/08/30/migrated-already.png&quot; alt=&quot;4년 전 그때&quot; /&gt;&lt;/p&gt;

&lt;p&gt;기존 글을 열심히 markdown으로 옮기다 글 몇 개 남겨두고&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;기존 글은 Wordpress에 두고, 새로운 글 부터는 Octopress로 쓰면되지!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;라며 옮긴다고 공지까지 해 놓고, 결국 새 글을 쓰지 못한채… 뻘쭘하게 그냥 접었다.&lt;/p&gt;

&lt;p&gt;돌이켜 보면 그때 작업했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt; 파일을 왜 지웠을까 싶다.&lt;/p&gt;

&lt;p&gt;그런데 이번에 다시 해보니 &lt;code class=&quot;highlighter-rouge&quot;&gt;그럴만 했다&lt;/code&gt; 싶었다.&lt;/p&gt;

&lt;h2 id=&quot;다시-어떻게-옮겼나&quot;&gt;(다시) 어떻게 옮겼나?&lt;/h2&gt;

&lt;p&gt;그때나 지금이나 여전히 &lt;code class=&quot;highlighter-rouge&quot;&gt;exitwp&lt;/code&gt;는 많이 쓰는 migration 도구지만 시간이 지나도 여전히 &lt;code class=&quot;highlighter-rouge&quot;&gt;exitwp&lt;/code&gt;는 내게 뭔가 맞지 않았다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;까먹은거겠지. 흠흠. 뭐 여튼..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;그래서 이번엔 &lt;a href=&quot;https://github.com/evanwalsh/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@evanwalsh&lt;/code&gt;&lt;/a&gt;가 작업한 &lt;a href=&quot;https://gist.github.com/evanwalsh/6131008&quot;&gt;Gist 코드&lt;/a&gt;를 기반으로 작업해 봤다.&lt;/p&gt;

&lt;h2 id=&quot;그럼-기억을-더듬어-옮겨보자&quot;&gt;그럼 (기억을 더듬어) 옮겨보자.&lt;/h2&gt;

&lt;h3 id=&quot;1-clone-script&quot;&gt;1. Clone script&lt;/h3&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://gist.github.com/6131008.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-get-ready-wordpressxml&quot;&gt;2. Get ready &lt;code class=&quot;highlighter-rouge&quot;&gt;wordpress.xml&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wordpress.xml&lt;/code&gt;을 준비해 동일 경로에 넣어둔다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;import.rb     rename.rb     wordpress.xml
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-importrb&quot;&gt;3. &lt;code class=&quot;highlighter-rouge&quot;&gt;import.rb&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ruby import.rb&lt;/code&gt;를 실행해 글과 첨부 파일을 가져온다.&lt;/p&gt;

&lt;p&gt;이 작업을 실행하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;에 기존 post들이 html로 생성된다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;import.rb     rename.rb     wordpress.xml
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ ruby import.rb
Imported 114 posts
Imported 69 attachments
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;_attachments  _posts        import.rb     rename.rb     wordpress.xml
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;_posts | tail &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 5
2015-09-01-%ec%95%84%ec%bc%80%ec%9d%b4%eb%93%9c-%ec%bc%80%ec%9d%b4%ec%8a%a4-%ec%a1%b0%eb%a6%bd%ea%b8%b0-1.html
2015-09-07-%ec%95%84%ec%bc%80%ec%9d%b4%eb%93%9c-%ec%bc%80%ec%9d%b4%ec%8a%a4-%ec%a1%b0%eb%a6%bd%ea%b8%b0-1-5.html
2015-09-09-windows-10-vagrant-box-%eb%a7%8c%eb%93%a4%ea%b8%b0.html
2015-09-19-%ec%95%84%ec%bc%80%ec%9d%b4%eb%93%9c-%ec%a1%b0%eb%a6%bd%ea%b8%b0-2%eb%a7%88%eb%ac%b4%eb%a6%ac.html
2016-05-22-%ec%a2%8c%ec%b6%a9%ec%9a%b0%eb%8f%8c-alfred-workflow-%ec%a0%9c%ec%9e%91-%ea%b2%bd%ed%97%98%eb%8b%b4.html
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;114개라.. 얼마 안되네&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;4-renamerb&quot;&gt;4. &lt;code class=&quot;highlighter-rouge&quot;&gt;rename.rb&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;이 작업을 거치면 html을 markdown으로 변환하게 되는데, 결과물은 기대하지 말자.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;_posts
➜  _posts git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ ruby ../rename.rb
➜  _posts git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗ &lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;_posts | tail &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 5
2015-09-01-%ec%95%84%ec%bc%80%ec%9d%b4%eb%93%9c-%ec%bc%80%ec%9d%b4%ec%8a%a4-%ec%a1%b0%eb%a6%bd%ea%b8%b0-1.md
2015-09-07-%ec%95%84%ec%bc%80%ec%9d%b4%eb%93%9c-%ec%bc%80%ec%9d%b4%ec%8a%a4-%ec%a1%b0%eb%a6%bd%ea%b8%b0-1-5.md
2015-09-09-windows-10-vagrant-box-%eb%a7%8c%eb%93%a4%ea%b8%b0.md
2015-09-19-%ec%95%84%ec%bc%80%ec%9d%b4%eb%93%9c-%ec%a1%b0%eb%a6%bd%ea%b8%b0-2%eb%a7%88%eb%ac%b4%eb%a6%ac.md
2016-05-22-%ec%a2%8c%ec%b6%a9%ec%9a%b0%eb%8f%8c-alfred-workflow-%ec%a0%9c%ec%9e%91-%ea%b2%bd%ed%97%98%eb%8b%b4.md
➜  6131008 git:&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ✗
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-잘-나올때까지-수정하자&quot;&gt;5. (잘 나올때까지) 수정하자.&lt;/h3&gt;
&lt;p&gt;여기 까지 해서 지금껏 쓴 몇 안되는 post들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt;으로 옮겼다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016/08/30/modified-by-me-again.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;정적 블로그를 쓰든, 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Ghost&lt;/code&gt;로 옮기든, 여튼 한번 하면 다시는 하지 않아도 될 작업이라…&lt;/p&gt;

&lt;p&gt;가장 힘들었던 점은, 컨텐츠 형식이 일정하지 않았던 거!&lt;/p&gt;

&lt;p&gt;블로그는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Movable Type&lt;/code&gt;때 부터 썼었는데, 이곳 저곳을 옮겨다니면서 Post 내용이 조금씩 바뀌었었고, Wordpress를 오래 쓰다보니 Rich Editor를 적극(?) 활용했던 부분이 markdown으로 가는 걸림돌이 되었었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;아마 작년에도 수정하다가 바꾸기 귀찮아서 때려 쳤던거 같다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;뭔가 일이 잘 안되거나 환기가 필요가 필요할 때마다 틈틈히 수정하고 또 수정해서 결국 작년 Bucket List 중 하나를 해결했다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;사실 작년에 못한거 담아두기 싫어서 모두 지우고, 올해 TODO로 작성했었는데,&lt;/p&gt;

  &lt;p&gt;휴지통에 보니 작년 TODO 였다는…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;여튼 Content는 탈출한 샘!&lt;/p&gt;

&lt;h3 id=&quot;6-now-what&quot;&gt;6. Now what?&lt;/h3&gt;
&lt;p&gt;Content를 준비해놓고 고민에 빠졌었다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;어떤 툴을 사용할 지&lt;/li&gt;
  &lt;li&gt;어디에 기생할 지&lt;/li&gt;
  &lt;li&gt;(그럴 일은 없겠지만)직접 만들 것인지&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;요즘 뭐가 대세지?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt; 대안은 없나 싶어 &lt;a href=&quot;https://www.staticgen.com/&quot;&gt;Top Open-Source Static Site Generators&lt;/a&gt;에 있는 놈을 하나 하나 클릭해 보면서 살펴봤다.&lt;/p&gt;

&lt;p&gt;결국…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;을 선택했고, 테마도 최대한 간단하고 수정하기 쉬운(?) 애로 골라서 일부 수정 후&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/kyungw00k.github.io&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kyungw00k/kyungw00k.github.io&lt;/code&gt;&lt;/a&gt;를 만든 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; 브랜치에 push 했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;github에 push된거 확인하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;wiki&lt;/code&gt; 기능 따위 제거 할까 싶어 repo 설정에 들어갔는데,&lt;/p&gt;

&lt;p&gt;Github Page가 생성되었다는 둥의 Highlight 박스가…&lt;/p&gt;

&lt;p&gt;뭐지 싶어서 &lt;code class=&quot;highlighter-rouge&quot;&gt;kyungw00k.github.io&lt;/code&gt; 들어가보니 사이트가 똭…&lt;/p&gt;

&lt;p&gt;음…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/creating-project-pages-from-the-command-line/&quot;&gt;Creating Project Pages from the command line&lt;/a&gt;에 가보니 아래와 같은 문구가 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tip: You can also create a gh-pages branch for your Project Pages site instead. To learn more about your options, including the option to publish your Project Page from a /docs folder on your master branch, see “User, Organization, and Project Pages.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;대체 언제 부터 이렇게 바뀌었던 걸까&lt;/code&gt; 싶어 찾아보니&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://github.com/blog/2228-simpler-github-pages-publishing&quot;&gt;Simpler GitHub Pages publishing&lt;/a&gt; - August 18, 2016&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;며칠 안되었네요.&lt;/p&gt;

&lt;p&gt;여튼 &lt;code class=&quot;highlighter-rouge&quot;&gt;exitwp&lt;/code&gt; 했습니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 30 Aug 2016 17:09:27 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/08/30/exitwp-%ED%96%88%EC%96%B4%EC%9A%94-2/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/08/30/exitwp-%ED%96%88%EC%96%B4%EC%9A%94-2/</guid>
        
        
      </item>
    
      <item>
        
        <title>좌충우돌 Alfred Workflow 제작 경험담</title>
        
        <description>&lt;p&gt;파워팩 사놓고 기본 사용자 정도로만 사용하다가, 최근에 간단한 Alfred Workflow 2개를 만들어 봤다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/alfred-kozip-workflow&quot;&gt;Postify API를 사용한 우편번호 검색&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kyungw00k/alfred-daumbook-workflow&quot;&gt;Daum 책 검색 API를 사용한 책 검색&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;뭐 경험 후기라고 해봐야 사실 별건 없지만…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API 호출해서 JSON Output 가져다가&lt;/li&gt;
  &lt;li&gt;Alfred에서 사용하는 Item List로 바꿔준 정도&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;라고 할 수 있다.&lt;/p&gt;

&lt;p&gt;JavaScript를 좋아하는 관계로 JXA(Javascript For Automation)를 사용하게 된 점을 제외하고는..&lt;/p&gt;

&lt;p&gt;흔한 경험담 정도일 듯 하다.&lt;/p&gt;

&lt;h3 id=&quot;api-호출해서-json-output-가져오기&quot;&gt;API 호출해서 JSON Output 가져오기&lt;/h3&gt;
&lt;p&gt;CURL로 손쉽게 가져오면 되겠거니 싶었는데.. &lt;code class=&quot;highlighter-rouge&quot;&gt;app.doShellScript()&lt;/code&gt; 를 사용해서 만들때 당황했던 점은…&lt;/p&gt;

&lt;p&gt;Shell Command의 Output을 Capture 할 수 없다는 점이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;-_-;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(뭐 사실, Output을 파일로 남기고 파일을 읽어와도 되긴 하지만…)&lt;/p&gt;

&lt;p&gt;하지만 &lt;a href=&quot;http://stackoverflow.com/questions/27586694/pipe-to-subprocess-stdin-for-jxa&quot;&gt;Pipe to subprocess stdin for JXA&lt;/a&gt; 에 달린 Comment 중 하나를 사용해 손 쉽게 Output을 얻을 수 있었다.&lt;/p&gt;

&lt;p&gt;여튼, Output을 얻었으니 &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.parse()&lt;/code&gt;로 손쉽게 사용할 수 있게 되었다.&lt;/p&gt;

&lt;h3 id=&quot;alfred에서-사용하는-item-list로-바꿔주기&quot;&gt;Alfred에서 사용하는 Item List로 바꿔주기&lt;/h3&gt;

&lt;p&gt;이건 Alfred에서 제공하는 &lt;a href=&quot;https://www.alfredapp.com/help/workflows/inputs/script-filter/xml/&quot;&gt;가이드 문서&lt;/a&gt;를 살펴보면 된다.&lt;/p&gt;

&lt;p&gt;앞에서 받은 Data를 아래와 같이 XML로 만들어 주면 되겠다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;items&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;valid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YES&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autocomplete=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Desktop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;항목1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;subtitle&amp;gt;&lt;/span&gt;설명1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/subtitle&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;icon&amp;gt;&lt;/span&gt;아이콘1Path&lt;span class=&quot;nt&quot;&gt;&amp;lt;/icon&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;valid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;YES&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autocomplete=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Desktop&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;항목2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;subtitle&amp;gt;&lt;/span&gt;설명2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/subtitle&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;icon&amp;gt;&lt;/span&gt;아이콘2Path&lt;span class=&quot;nt&quot;&gt;&amp;lt;/icon&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/items&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아, Alfred 3이 나오면서 기존에 사용하던 XML 방식이 Legacy가 되버렸다.
&lt;a href=&quot;https://www.alfredapp.com/help/workflows/inputs/script-filter/json/&quot;&gt;이제는 JSON으로!&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;어쩌지-한글이-분해가-되버렸어&quot;&gt;어쩌지! 한글이 분해가 되버렸어!&lt;/h3&gt;
&lt;p&gt;한글을 입력하면 query 값에 한글이 분해되어 들어가 있었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(╯°□°）╯︵ ┻━┻
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;어쩌지 하고 있었는데 이미 누군가 원인을 파악 했더라!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mac에서 alfred workflow를 만들다보면 한글 argument 비교 처리가 안 되는 현상이 있습니다. Mac에서 unicode를 NFD(Normalization Form Decomposition)으로 처리를 해서 생기는 문제입니다. Windows나 python 등에서는 NFC로 처리가 됩니다. (from http://jmjeong.com/unicode-in-alfred-workflow/)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JavaScript용을 찾다보니 &lt;a href=&quot;https://github.com/walling/unorm&quot;&gt;unorm&lt;/a&gt; 라이브러리를 알게 되었고, 이걸 사용해 다시 변환해서 해결했다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Alfred에서 넘겨주는 문자열 q를 NFC로 처리한 다음 Encoding 함&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'NFC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;그-밖에&quot;&gt;그 밖에…&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Workflow 만들다가 Step 간에 데이터 넘겨주는 부분은 어떻게 할까 싶었는데  args를 이용하면 되더라(가이드 문서에 있음)&lt;/li&gt;
  &lt;li&gt;fn, ctrl, alt 키를 지정했는데 subtitle이 바뀌지 않아서 왜 그러나 싶었는데, 실제로 해당 키로 지정된 Action이 있는 경우에만 바뀌더라(역시 가이드 문서에 있음)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;단순한 API 호출 결과를 Workflow에 보여주는 건 이제 단순한(?) 작업이 되어 버렸다.(아니면 내가 단순한건가…)&lt;/p&gt;

&lt;p&gt;p.s. &lt;a href=&quot;https://twitter.com/fallroot?lang=ko&quot;&gt;@fallroot&lt;/a&gt;의 JXA 사용 경험담이 무척 큰 도움이 되었다(사실 그 전에는 JXA 존재 자체를 몰랐음). 감사요~&lt;/p&gt;
</description>
        <pubDate>Sun, 22 May 2016 23:27:27 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/22/%EC%A2%8C%EC%B6%A9%EC%9A%B0%EB%8F%8C-alfred-workflow-%EC%A0%9C%EC%9E%91-%EA%B2%BD%ED%97%98%EB%8B%B4/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/22/%EC%A2%8C%EC%B6%A9%EC%9A%B0%EB%8F%8C-alfred-workflow-%EC%A0%9C%EC%9E%91-%EA%B2%BD%ED%97%98%EB%8B%B4/</guid>
        
        <category>Alfred</category>
        
        
        <category>Project</category>
        
      </item>
    
      <item>
        
        <title>Running Shell Scripts</title>
        
        <description>&lt;h2 id=&quot;method-1-use-appdoshellscript&quot;&gt;Method 1. Use &lt;code class=&quot;highlighter-rouge&quot;&gt;app.doShellScript&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;https://github.com/dtinth/JXA-Cookbook/wiki/Shell-and-CLI-Interactions#running-shell-scripts&lt;/p&gt;

&lt;h3 id=&quot;example&quot;&gt;Example&lt;/h3&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;doShellScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ls'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//    =&amp;gt; &quot;README.md\rbutton.svg&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt; cannot be captured by code.&lt;/li&gt;
  &lt;li&gt;But easy to use.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;method-2-use-cocoa&quot;&gt;Method 2. Use &lt;code class=&quot;highlighter-rouge&quot;&gt;Cocoa&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;http://stackoverflow.com/questions/27586694/pipe-to-subprocess-stdin-for-jxa&lt;/p&gt;

&lt;h3 id=&quot;example-1&quot;&gt;Example&lt;/h3&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;ObjC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Cocoa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSPipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;launchPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/bin/cat&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;standardInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdin&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;standardOutput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdout&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;launch&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataIn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;foo$HOME'|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataUsingEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileHandleForWriting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;stdin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileHandleForWriting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closeFile&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataOut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileHandleForReading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readDataToEndOfFile&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stringOut&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initWithDataEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dataOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt; can be captured by code.&lt;/li&gt;
  &lt;li&gt;But easy to use.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 11 May 2016 07:41:22 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/11/jxa-running-shell-scripts/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/11/jxa-running-shell-scripts/</guid>
        
        
        <category>JXA</category>
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        
        <title>Emulating npm's require()</title>
        
        <description>&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;ObjC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Foundation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSFileManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defaultManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contentsAtPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NSData&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;contents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initWithDataEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(&lt;a href=&quot;https://github.com/dtinth/JXA-Cookbook/wiki/Importing-Scripts#emulating-npms-require&quot;&gt;from JXA-Cookbook/wiki/Importing-Scripts#emulating-npms-require&lt;/a&gt;)&lt;/p&gt;
</description>
        <pubDate>Wed, 11 May 2016 07:28:22 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/11/jxa-emulating-npms-require/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/11/jxa-emulating-npms-require/</guid>
        
        
        <category>JXA</category>
        
        <category>JavaScript</category>
        
      </item>
    
      <item>
        
        <title>Electron에서 링크를 브라우저에서 열기</title>
        
        <description>&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// `win` is an instance of BrowserWindow&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'new-window'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'shell'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openExternal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 09 May 2016 23:01:08 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/09/electron-%EB%A7%81%ED%81%AC%EB%A5%BC-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C-%EC%97%B4%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/09/electron-%EB%A7%81%ED%81%AC%EB%A5%BC-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%97%90%EC%84%9C-%EC%97%B4%EA%B8%B0/</guid>
        
        
        <category>Electron</category>
        
      </item>
    
      <item>
        
        <title>ansible-airflow로 Airflow 설치하기</title>
        
        <description>&lt;p&gt;ansible로 airflow 환경을 구성하고 싶어서 &lt;a href=&quot;https://github.com/kyungw00k/ansible-airflow&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;로 한 번 만들어 봤다&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;가장 힘들었던건
python2.7 환경을 맞추는건데 이를 위해 &lt;a href=&quot;https://github.com/kyungw00k/ansible-python27&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible-python27&lt;/code&gt;&lt;/a&gt; 이라는 또 하나의 &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;인 만들게 된다.&lt;/p&gt;

&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ansible-galaxy install kyungw00k.airflow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;기본(?) 환경을 그대로 사용하려면 다음과 같이 하면 되겠다.&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;servers&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kyungw00k.airflow&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;하지만 실제로 Airflow를 기본 설정 그대로 사용하진 않더라.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Airflow 설치&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;hosts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow-manager&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;remote_user &lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;repo-mysql-community&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kyungw00k.airflow&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;package_extras&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;libffi&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;libffi-devel&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgresql-devel&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql-community-devel&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cyrus-sasl&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cyrus-sasl-devel&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;airflow_extra_packages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pyhs2&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MySQL-python&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cryptography&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;future&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;numpy&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;thrift&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;thrift_sasl&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;impyla&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;redis&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unicodecsv&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[celery]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[rabbitmq]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[crypto]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[jdbc]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[hdfs]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[hive]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[mysql]&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;airflow[postgres]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 설정은…&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Job 관리 Celery(Broker로 RabbitMQ)로&lt;/li&gt;
  &lt;li&gt;MySQL를 공통(Airflow 및 Celery의) DB로&lt;/li&gt;
  &lt;li&gt;Operator에서 Hive/JDBC/MySQL/Postgres 를 쓰고 싶어서&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;구성했습니다.&lt;/p&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;
&lt;p&gt;막상 만들고 보니, 더 추가로 해줘야하는 것들이 생기더군요.&lt;/p&gt;

&lt;p&gt;크게 생각 나는게..&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;webserver&lt;/li&gt;
  &lt;li&gt;worker&lt;/li&gt;
  &lt;li&gt;scheduler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 모드로 구성하고, 데몬을 재시작 할 수 있게 추가로 role을 만들어야 쓸만할 것 같다는 생각이 듭니다.&lt;/p&gt;

&lt;p&gt;현재 버전으로 쓰다가 데몬 관리가 절실해지면 그때 위 Role를 Dependency 걸어서 작업할 것 같네요(아직은 절실하지 않다?).&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2016 16:25:38 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/04/ansible-airflow/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/04/ansible-airflow/</guid>
        
        
        <category>Ansible</category>
        
        <category>Airflow</category>
        
      </item>
    
      <item>
        
        <title>Setup Airflow on Mac</title>
        
        <description>&lt;h2 id=&quot;setup-on-mac&quot;&gt;Setup on Mac&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt; is mandatory!&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install python python3
pip install airflow

mkdir ~/airflow

&lt;span class=&quot;c&quot;&gt;# airflow needs a home, ~/airflow is the default,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# but you can lay foundation somewhere else if you prefer&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# (optional)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;AIRFLOW_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/airflow

&lt;span class=&quot;c&quot;&gt;# install from pypi using pip&lt;/span&gt;
pip install airflow

&lt;span class=&quot;c&quot;&gt;# initialize the database&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/airflow &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; airflow initdb

&lt;span class=&quot;c&quot;&gt;# start the web server, default port is 8080&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/airflow &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; airflow webserver &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 04 May 2016 16:09:38 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/04/setup-airflow/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/04/setup-airflow/</guid>
        
        
        <category>Airflow</category>
        
        <category>Mac</category>
        
      </item>
    
      <item>
        
        <title>Rotate SSH Keys between two host groups</title>
        
        <description>&lt;p&gt;SSH로 Remote 서버들을 관리할 때 느끼는거지만..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;yes/no 묻지 않게 known_host 자동 추가&lt;/li&gt;
  &lt;li&gt;authorized_key에 허용 서버 키 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;요거 꼭 하고 싶었다. 그래서 playbook으로 만들어봤다.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/kyungw00k/d56547b1e30b5d72316e7df0e9d99f92.js&quot;&gt; &lt;/script&gt;

</description>
        <pubDate>Wed, 04 May 2016 16:04:18 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/04/ansible-rotate-ssh-keys-between-two-host-groups/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/04/ansible-rotate-ssh-keys-between-two-host-groups/</guid>
        
        
        <category>Ansible</category>
        
      </item>
    
      <item>
        
        <title>Role 만들때는 ansible-galaxy를 사용하자</title>
        
        <description>&lt;h2 id=&quot;1-뼈대-만들기&quot;&gt;1. 뼈대 만들기&lt;/h2&gt;
&lt;p&gt;예컨데, &lt;code class=&quot;highlighter-rouge&quot;&gt;ansible-airflow&lt;/code&gt; Role을 만든다고 할 때, 다음과 같이 실행한다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ansible-galaxy ansible-airflow
- ansible-airflow was created successfully
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그러면 다음과 같은 파일들이 생성된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ansible-airflow
├── README.md
├── defaults
│   └── main.yml
├── files
├── handlers
│   └── main.yml
├── meta
│   └── main.yml
├── tasks
│   └── main.yml
├── templates
├── tests
│   ├── inventory
│   └── test.yml
└── vars
    └── main.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-진짜로-만들기&quot;&gt;2. 진짜로 만들기&lt;/h2&gt;
&lt;p&gt;적당히 살릴껀 살리고 지울껀 지우면 되겠다.&lt;/p&gt;

&lt;h2 id=&quot;3-공유하기&quot;&gt;3. 공유하기&lt;/h2&gt;
&lt;p&gt;Ansible Galaxy 사이트에 Github 계정을 통해서 로그인 하면 GitHub Repo에서 Ansible Project를 찾는다. 해당 프로젝트를 활성화 하려면 Travis 설정만 점검하면 되겠다.&lt;/p&gt;

&lt;p&gt;(다른 계정으로는 안해봐서 잘 몰라요)&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2016 16:00:42 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/05/04/ansible-role-%EB%A7%8C%EB%93%A4%EB%95%8C%EB%8A%94-ansible-galaxy%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%9E%90/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/05/04/ansible-role-%EB%A7%8C%EB%93%A4%EB%95%8C%EB%8A%94-ansible-galaxy%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%9E%90/</guid>
        
        
        <category>Ansible</category>
        
      </item>
    
      <item>
        
        <title>Docker로 SQL*Plus 사용하기</title>
        
        <description>&lt;h2 id=&quot;sqlplus&quot;&gt;SQL*Plus&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run  \
  -e NLS_LANG=KOREAN_KOREA.AL32UTF8 \
  --interactive guywithnose/sqlplus \
  sqlldr &amp;lt;ID&amp;gt;/&amp;lt;PASS&amp;gt;@&amp;lt;HOST&amp;gt;:&amp;lt;PORT&amp;gt;/&amp;lt;DB&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-e NLS_LANG=KOREAN_KOREA.AL32UTF8&lt;/code&gt; 로 &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlplus&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;NLS_LANG&lt;/code&gt; 환경변수를 넘겨줄 수 있었음&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Apr 2016 11:32:42 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/04/21/docker%EB%A1%9C-sql-plus-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/04/21/docker%EB%A1%9C-sql-plus-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
        
        
        <category>Docker</category>
        
      </item>
    
      <item>
        
        <title>Error: ansible requires a json module, none found!</title>
        
        <description>&lt;p&gt;구 버전 OS(ex. Centos 5)를 대상으로 Ansible을 사용하는 경우에 이러한 에러가 발생한다.&lt;/p&gt;

&lt;p&gt;해당 머신에 &lt;code class=&quot;highlighter-rouge&quot;&gt;python-simplejson&lt;/code&gt; 패키지를 설치하면 해결!&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Apr 2016 10:10:50 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/04/21/ansible-requires-a-json-module-none-found/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/04/21/ansible-requires-a-json-module-none-found/</guid>
        
        
        <category>Ansible</category>
        
      </item>
    
      <item>
        
        <title>SPOOL로 Dump 할 때 Query 에러 코드를 Return Code에 전달하기</title>
        
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEADING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PAGESIZE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LINESIZE&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ECHO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FEEDBACK&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRIMOUT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRIMSPOOL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ARRAYSIZE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;SPOOL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- 나는 실 서버에서만 동작해요&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;','&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I_AM_ONLY_EXISTS_IN_THE_REAL_DB&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SPOOL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OFF&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;EXIT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sqlplus&lt;/code&gt; 로 쿼리 &lt;code class=&quot;highlighter-rouge&quot;&gt;test.sql&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlplus @test.sql&lt;/code&gt;와 같이 실행하면 에러가 발생하는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;echo $?&lt;/code&gt;에서는 당당히(?) &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;을 내밷고 있다.&lt;/p&gt;

&lt;p&gt;어찌하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;SQL 에러를 return code에 전달할 수 있을까?&lt;/code&gt; 싶어서 찾아봤다.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;답은 간단했다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT SQL.SQLCODE&lt;/code&gt; 로 종료하면 쿼리 에러 코드가 return code로 전달된다.&lt;/p&gt;

&lt;p&gt;알면 쉽고 모르면 낭패인 그런 문제 아닐지…&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;https://docs.oracle.com/database/121/SQPUG/ch_twelve023.htm#SQPUG044&lt;/li&gt;
  &lt;li&gt;https://docs.oracle.com/database/121/SQPUG/ch_twelve052.htm#SQPUG135&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 08 Apr 2016 16:27:54 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/04/08/spool%EB%A1%9C-dump%ED%95%A0-%EB%95%8C-query-%EC%97%90%EB%9F%AC-%EC%BD%94%EB%93%9C%EB%A5%BC-return-code%EC%97%90-%EC%A0%84%EB%8B%AC%ED%95%98%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/04/08/spool%EB%A1%9C-dump%ED%95%A0-%EB%95%8C-query-%EC%97%90%EB%9F%AC-%EC%BD%94%EB%93%9C%EB%A5%BC-return-code%EC%97%90-%EC%A0%84%EB%8B%AC%ED%95%98%EA%B8%B0/</guid>
        
        
        <category>Oracle</category>
        
        <category>SQL</category>
        
      </item>
    
      <item>
        
        <title>Airflow Job 템플릿/코드에서 날짜 다루기</title>
        
        <description>&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Airflow Job에서 Hive 쿼리를 돌리는데 기준 날짜에 &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD&lt;/code&gt; 포멧인 &lt;code class=&quot;highlighter-rouge&quot;&gt;ds&lt;/code&gt;를 사용하고 있었다.
포멧을 바꿀때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ds&lt;/code&gt;를 쓰지 않고 &lt;code class=&quot;highlighter-rouge&quot;&gt;execution_date.strftime(&quot;%Y%m%d&quot;)&lt;/code&gt;로 사용했는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;ds&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;execution_date&lt;/code&gt;의 혼용이 맞나 싶어서 한쪽으로 몰 수 있는 방법이 없나 싶어서 찾아봤다.&lt;/p&gt;

&lt;h2 id=&quot;1-execution_date로-몰아서-사용하기&quot;&gt;1. &lt;code class=&quot;highlighter-rouge&quot;&gt;execution_date&lt;/code&gt;로 몰아서 사용하기&lt;/h2&gt;
&lt;p&gt;사실 방법이 가장 간단하고 빠르게 적용할 수 있고, 각 날짜의 패턴을 명시적으로 알 수 있다는 장점이 있지만, 매번 포멧을 써줘야하는 단점도 있다.&lt;/p&gt;

&lt;h2 id=&quot;2-airflow에서-제공하는-macros-사용하기&quot;&gt;2. Airflow에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;macros&lt;/code&gt; 사용하기&lt;/h2&gt;
&lt;p&gt;Airflow쪽 이슈나 &lt;a href=&quot;https://github.com/airbnb/airflow/blob/58029df26efb58e75e82fe032a60532a25dc93d8/airflow/macros/__init__.py&quot;&gt;코드&lt;/a&gt;를 찾아보니 &lt;code class=&quot;highlighter-rouge&quot;&gt;ds&lt;/code&gt;를 조작하는 함수가 있었다.&lt;/p&gt;

&lt;h3 id=&quot;macrosds_addds-days&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;macros.ds_add(ds, days)&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;다음날은 &lt;code class=&quot;highlighter-rouge&quot;&gt;macros.ds_add(ds, 1)&lt;/code&gt;로, 하루 전은 &lt;code class=&quot;highlighter-rouge&quot;&gt;macros.ds_add(ds, -1)&lt;/code&gt;로 사용하면 되겠다.&lt;/p&gt;

&lt;p&gt;참고로, &lt;code class=&quot;highlighter-rouge&quot;&gt;execution_date&lt;/code&gt;를 사용한다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;macros.timedelta&lt;/code&gt;의 조합으로 하시면 되겠다.&lt;/p&gt;

&lt;p&gt;따라서, 아래 두 표현은 같은 값이 된다.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 다음 날&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;macros&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ds_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;execution_date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;macros&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timedelta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;macrosds_formatds-input_format-output_format&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;macros.ds_format(ds, input_format, output_format)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;간단한 예로, &lt;code class=&quot;highlighter-rouge&quot;&gt;ds&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD&lt;/code&gt; 포멧인데 이를 &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYYMMDD&lt;/code&gt;로 바꾸고자 할 때 사용하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;macros.ds_format(ds, &quot;%Y-%m-%d&quot;, &quot;%Y%m%d&quot;)&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Apr 2016 11:45:12 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/04/08/airflow-job-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%82%A0%EC%A7%9C-%EB%8B%A4%EB%A3%A8%EA%B8%B0/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/04/08/airflow-job-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%BD%94%EB%93%9C%EC%97%90%EC%84%9C-%EB%82%A0%EC%A7%9C-%EB%8B%A4%EB%A3%A8%EA%B8%B0/</guid>
        
        
      </item>
    
      <item>
        
        <title>파일 상단에 코드 내 인코딩을 명시적으로 추가할 것</title>
        
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SyntaxError: Non-ASCII character '\xec' in file &amp;lt;&amp;lt;file&amp;gt;&amp;gt; on line XX, but no encoding declared;
see http://python.org/dev/peps/pep-0263/ for details  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;파일 상단에 위 주석을 추가한다.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;http://python.org/dev/peps/pep-0263/&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Apr 2016 11:01:49 +0900</pubDate>
        <link>https://kyungw00k.github.io/2016/04/08/python-%ED%8C%8C%EC%9D%BC-%EC%83%81%EB%8B%A8%EC%97%90-%EC%BD%94%EB%93%9C-%EB%82%B4-%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84-%EB%AA%85%EC%8B%9C%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%B6%94%EA%B0%80%ED%95%A0-%EA%B2%83/</link>
        <guid isPermaLink="true">https://kyungw00k.github.io/2016/04/08/python-%ED%8C%8C%EC%9D%BC-%EC%83%81%EB%8B%A8%EC%97%90-%EC%BD%94%EB%93%9C-%EB%82%B4-%EC%9D%B8%EC%BD%94%EB%94%A9%EC%9D%84-%EB%AA%85%EC%8B%9C%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%B6%94%EA%B0%80%ED%95%A0-%EA%B2%83/</guid>
        
        
        <category>Python</category>
        
      </item>
    
  </channel>
</rss>
