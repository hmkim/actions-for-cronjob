<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[나만의공간。]]></title>
			<link>https://blog.naver.com/writer0713</link>
			
				<image>
					<url><![CDATA[https://blogpfthumb-phinf.pstatic.net/MjAxNzA1MTdfMjM4/MDAxNDk0OTg1ODYzMTcw.YDstHMwYXGchSONf7UmEHbmscwplUCKWXbGr8uShvuIg.7aPeeu-0y0y6PohdcgiLFV8AZKxST1Ru4cg36uQPsKwg.JPEG.writer0713/b2.jpg?type=m2]]></url>
					<title><![CDATA[나만의공간。]]></title>
					<link>https://blog.naver.com/writer0713</link>
				</image>
			
			<description><![CDATA[프로그래밍을 사랑하는,
프로그래밍을 즐기는 사람입니다.]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Mon, 13 May 2019 04:56:45 +0900</pubDate>

			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.05.12 - 근황 정리]]></title>
					<link>https://blog.naver.com/writer0713/221535911450</link>
					<guid>https://blog.naver.com/writer0713/221535911450</guid>
					<description><![CDATA[상반기가 얼마 남지 않았다.시간이 참 빠르다.상반기가 끝나기 전에 다시 한번 이번해 목표를 중간 점검 하고 가려 한다.위 포스팅에서 정리했던 이번해 목표들 중 현재 어떤 것들을 얼마나 했는지 보니 약간 뒤죽박죽이다.우선 1~5번까지의 목록들을 번갈아 가며 하고 있다.1. Java 8Java8 In Action은 읽다가 지금 당장에 필요한 기능들이 그리 많지는 않아서 멈춘 상태.큰 그림과 개념은 어느정도 알았고 필요에 따라 stream과 optional을 사용하는 정도다.어쨋든 하반기에는 다 볼 예정이다.2. Spring Framework 5.0Spring framework 5.0은 &#x27;스프링 5 레시피&#x27; 라는 책을 사서 스터디를 진행했다.상,하 두 권으로 나뉘.......]]></description>
					<pubDate>Mon, 13 May 2019 00:05:26 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[etc]]></category>
					<title><![CDATA[[etc] iptime 속도 최적화 및 끊김 해결]]></title>
					<link>https://blog.naver.com/writer0713/221535725284</link>
					<guid>https://blog.naver.com/writer0713/221535725284</guid>
					<description><![CDATA[집에서 iptime 무선 공유기를 사용하는데 유투브와 같은 동영상이 자주 끊기고, 게임을 할 때도 렉이 발생하여 최적화 설정을 찾아봤다.아래 설정을 적용하고 확실히 동영상 끊김이 사라졌다.1. 무선암호 사용 무선 암호화 방법에 따라 속도 차이가 있다고 한다.보통 AES 방식을 사용했는데 위 측정결과에 따르면 AES 보다는 TKIP이 더 빠른걸 볼 수 있다.무선 네트워크 설정에서 암호화 설정시 TKIP으로 설정하자.2. 채널 크기 변경&#x27;고급 설정&#x27;에서 채널 크기를 &#x27;자동&#x27;으로 하자. 3. WMM 기능최근 ipTIME 무선 공유기는 WMM의 디폴트 설정이 &#x27;사용하지 않음&#x27;이지만 혹시나 &#x27;사용함&#x27;으.......]]></description>
					<pubDate>Sun, 12 May 2019 19:36:39 +0900</pubDate>
					<tag><![CDATA[iptime,무선공유기속도,무선공유기끊김현상,무선공유기렉,iptime속도]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Javascript]]></category>
					<title><![CDATA[[Javascript] PWA Splash Image]]></title>
					<link>https://blog.naver.com/writer0713/221533587416</link>
					<guid>https://blog.naver.com/writer0713/221533587416</guid>
					<description><![CDATA[PWA Splash Image를 적용할때 아래 자료를 참고하여 진행했다.1. Splash Image 만들기Adobe Spark를 이용해 온라인에서 간단하게 splash image 만들고 저장하기가 가능하다.splash image를 만들었다면 각 기기 사이즈에 맞는 크기로 조절을 해야한다.Photoshop을 잘 한다면 직접 해도 되지만, 간단하고 빠르게 여러 모바일 기기에 맞는 splash image를 만들려면 아래 사이트를 사용하면 좋다.2. Splash Image 압축아래 사이트를 통해 splash image들을 압축하자.3. meta tag 및 link 태그 입력아래는 본인의 프로젝트에 적용한 meta, link 태그들이다. (springboot 프로젝트)다른 예제를 보고 싶다면 아래 사이트를 참고하자. .......]]></description>
					<pubDate>Thu, 09 May 2019 20:25:58 +0900</pubDate>
					<tag><![CDATA[pwa,IOSpwa,pwasplashscreen,iospwasplashscreen,iosplashimage]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[CSS]]></category>
					<title><![CDATA[[CSS] 반응형웹에서 이미지 크기도 반응형으로 만들기]]></title>
					<link>https://blog.naver.com/writer0713/221533448979</link>
					<guid>https://blog.naver.com/writer0713/221533448979</guid>
					<description><![CDATA[]]></description>
					<pubDate>Thu, 09 May 2019 17:18:55 +0900</pubDate>
					<tag><![CDATA[css,responsivewebResponsiveimage,이미지반응형,반응형이미지]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.05.07]]></title>
					<link>https://blog.naver.com/writer0713/221532043692</link>
					<guid>https://blog.naver.com/writer0713/221532043692</guid>
					<description><![CDATA[대부분의 사람들이 말은 잘한다.실천은 하지 않는다.나이가 들수록 더욱 더.]]></description>
					<pubDate>Wed, 08 May 2019 02:38:30 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Linux] merge multiple directories]]></title>
					<link>https://blog.naver.com/writer0713/221524902248</link>
					<guid>https://blog.naver.com/writer0713/221524902248</guid>
					<description><![CDATA[여러 디렉토리에 같은 이름 혹은 다른 이름의 디렉토리와 파일들이 있다고 가정해보자.a 디렉토리에 1, 2, 3, 4,5 라는 디렉토리가 있고 각각의 디렉토리에는 여러 파일들이 있다.b 디렉토리에도 1, 2, 3, 4, 5 디렉토리가 있고 각 디렉토리에는 또 여러 파일들이 있다.c, d, e 디렉토리도 마찬가지다.a, b, c, d, e 에 퍼져있는 디렉토리 및 파일들을 merge하려면 어떻게 해야할까?가장 간단한 방법은 rsync를 사용하는 것이다.위와 같이 하면 b, c, d, e에 있는 내용들이 a 디렉토리로 이동되고 merge가 된다.아래는 rsync와 함께 사용한 option에 대한 설명들이다.]]></description>
					<pubDate>Mon, 29 Apr 2019 01:14:22 +0900</pubDate>
					<tag><![CDATA[rsync,디렉토리merge,리눅스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] case]]></title>
					<link>https://blog.naver.com/writer0713/221520932220</link>
					<guid>https://blog.naver.com/writer0713/221520932220</guid>
					<description><![CDATA[]]></description>
					<pubDate>Tue, 23 Apr 2019 20:27:18 +0900</pubDate>
					<tag><![CDATA[shellscript,shell,script,shellscriptCase,쉘,쉘스크립트,쉘스크립트case]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] while loop]]></title>
					<link>https://blog.naver.com/writer0713/221520927946</link>
					<guid>https://blog.naver.com/writer0713/221520927946</guid>
					<description><![CDATA[]]></description>
					<pubDate>Tue, 23 Apr 2019 20:20:54 +0900</pubDate>
					<tag><![CDATA[shellscript,script,shell,shellscriptwhile,shellwhileloop,쉘스크립트,쉘,쉘스크립트while]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] for loop]]></title>
					<link>https://blog.naver.com/writer0713/221520925290</link>
					<guid>https://blog.naver.com/writer0713/221520925290</guid>
					<description><![CDATA[]]></description>
					<pubDate>Tue, 23 Apr 2019 20:16:47 +0900</pubDate>
					<tag><![CDATA[shellscript,shell,shellforloop,shellscriptforloop,쉘스크립트,쉘,쉘스크립트for]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] file 유무 확인]]></title>
					<link>https://blog.naver.com/writer0713/221520065000</link>
					<guid>https://blog.naver.com/writer0713/221520065000</guid>
					<description><![CDATA[]]></description>
					<pubDate>Mon, 22 Apr 2019 20:57:52 +0900</pubDate>
					<tag><![CDATA[shellscript,script,쉘스크립트,쉘스크립트파일유무,shellscriptiffileexists]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] arguments count]]></title>
					<link>https://blog.naver.com/writer0713/221520061827</link>
					<guid>https://blog.naver.com/writer0713/221520061827</guid>
					<description><![CDATA[$# 를 사용하면 shell script 에 넘긴 인자의 개수를 알수있다.]]></description>
					<pubDate>Mon, 22 Apr 2019 20:53:13 +0900</pubDate>
					<tag><![CDATA[shellscript,shell,shellscriptargumentscount,쉘스크립트,쉘스크립트인자개수]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] 문자열 자르기]]></title>
					<link>https://blog.naver.com/writer0713/221520059526</link>
					<guid>https://blog.naver.com/writer0713/221520059526</guid>
					<description><![CDATA[]]></description>
					<pubDate>Mon, 22 Apr 2019 20:49:58 +0900</pubDate>
					<tag><![CDATA[shell,shellscript,shellscriptsubstring,쉘스크립트문자열자르기]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] if variable is empty or not]]></title>
					<link>https://blog.naver.com/writer0713/221520054949</link>
					<guid>https://blog.naver.com/writer0713/221520054949</guid>
					<description><![CDATA[쉘스크립트에서 사용자가 입력한 인자가 empty 인지 아닌지 확인하기 위해서는 -z 옵션을 사용하면 된다.]]></description>
					<pubDate>Mon, 22 Apr 2019 20:43:16 +0900</pubDate>
					<tag><![CDATA[shellscript,script,쉘스크립트,쉘스크립트변수]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Shell] 큰따옴표, 작은 따옴표]]></title>
					<link>https://blog.naver.com/writer0713/221520052389</link>
					<guid>https://blog.naver.com/writer0713/221520052389</guid>
					<description><![CDATA[위 두가지 echo의 결과는 다음과 같다.즉, 작은 따옴표 내부에 쓰는 내용은 모두 string 그 자체로 출력되고,큰따옴표 내부에 $HOME과 같이 변수를 사용하면 해당 변수의 값이 있다면 값으로 출력된다.]]></description>
					<pubDate>Mon, 22 Apr 2019 20:39:31 +0900</pubDate>
					<tag><![CDATA[shell,shellscript,쉘스크립트,쉘스크립트쌍따옴표,쉘스크립트변수]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Linux] 쉘스크립트 root 혹은 sudo 로 실행했는지 확인하기]]></title>
					<link>https://blog.naver.com/writer0713/221518676107</link>
					<guid>https://blog.naver.com/writer0713/221518676107</guid>
					<description><![CDATA[]]></description>
					<pubDate>Sat, 20 Apr 2019 23:33:50 +0900</pubDate>
					<tag><![CDATA[쉘스크립트root,쉘스크립트sudo,쉘스크립트루트유저확인,shellscriptsudo확인]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[etc]]></category>
					<title><![CDATA[[etc] https 차단 뚫기]]></title>
					<link>https://blog.naver.com/writer0713/221518674780</link>
					<guid>https://blog.naver.com/writer0713/221518674780</guid>
					<description><![CDATA[Mac에서 아래 명령어를 사용하면 https 차단을 뚫을수 있다.shell script로 작성하면 아래와 같이 작성할수있다. (change.sh)사용할때는 아래와 같이 원하는 mtu 값을 매개변수로 넣어주면 된다.* safari의 경우 mtu 값을 300 이하로, 크롬은 500 이하로 주면 된다.* 평소에는 기본값인 1500으로 다시 복구하여 사용하는게 속도면에서 문제가 없다.]]></description>
					<pubDate>Sat, 20 Apr 2019 23:31:45 +0900</pubDate>
					<tag><![CDATA[https우회,https차단뚫기,https차단]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[thymeleaf]]></category>
					<title><![CDATA[[타임리프] html tag의 attribute에 동적 값 할당]]></title>
					<link>https://blog.naver.com/writer0713/221516673182</link>
					<guid>https://blog.naver.com/writer0713/221516673182</guid>
					<description><![CDATA[예를 들어, 타임리프를 사용하여 meta 태그의 content 어트리뷰트에 동적인 값을 할당한다고 하면 아래와 같이 할 수 있다.meta 태그 뿐 아니라 모든 태그의 특정 attribute (custom 한 것 포함)에 값을 할당할때 th:attr 을 사용하면 된다.]]></description>
					<pubDate>Thu, 18 Apr 2019 13:03:40 +0900</pubDate>
					<tag><![CDATA[타임리프,thymeleaf,타임리프attribute]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[실습]]></category>
					<title><![CDATA[[HTML5] 모바일 확대 / 축소 방지 (meta)]]></title>
					<link>https://blog.naver.com/writer0713/221515097573</link>
					<guid>https://blog.naver.com/writer0713/221515097573</guid>
					<description><![CDATA[모바일에서 확대 / 축소를 방지 하기 위해서는 아래 meta tag를 추가해주면 된다.* IOS 10 이상부터는 확대 / 축소 방지가 되지 않는다. 따라서 minimum-scale을 1.0으로 지정하여 최초 크기보다 축소하지 못하도록 하는게 최선이다.]]></description>
					<pubDate>Tue, 16 Apr 2019 16:24:56 +0900</pubDate>
					<tag><![CDATA[html5,모바일metatag,mobile확대축소,metatag,mobilezoom]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[etc]]></category>
					<title><![CDATA[[etc] favicon 제작 및 설정]]></title>
					<link>https://blog.naver.com/writer0713/221510077396</link>
					<guid>https://blog.naver.com/writer0713/221510077396</guid>
					<description><![CDATA[개인 블로그를 만들면서 간단한 favicon을 제작하여 사용하기 위해 구글링을 하다가 좋은 사이트 2개를 찾았다.1. Favicon.io첫번째 사이트는 Favicon.io 라는 사이트로 이미지, text, imoji, logo 등으로부터 favicon을 생성해주는 페이지다.이 사이트를 통해 favicon을 생성하면 여러종류의 기기에 맞는 favicon을 생성해주고 다운로드 받을수 있다.2. Real Favicon Generator첫번째 사이트에서 제작한 favicon을 실제로 적용하면 android, windows, ios 폰에서 모두 최적화가 되어있지 않다.두번째 사이트인 Real Favicon Generator을 사용하여 어떠한 문제점들이 있는지 확인이 가능하고,첫번째 사이트에서 만든 favicon을 넣어서.......]]></description>
					<pubDate>Wed, 10 Apr 2019 11:49:10 +0900</pubDate>
					<tag><![CDATA[파비콘,favicon,파비콘만들기,faviconGenerator]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Linux] heroku sleep 방지]]></title>
					<link>https://blog.naver.com/writer0713/221507833658</link>
					<guid>https://blog.naver.com/writer0713/221507833658</guid>
					<description><![CDATA[Heroku에 app을 deploy 하면 일정시간 (약 30분) 동안 접속이 없으면 자동으로 서버가 sleep (Idle) 모드로 들어간다.그러면 그 이후에 오는 접속은 서버가 켜지는 동안 기다려야 하는 단점이 있다.따라서 서버가 sleep 모드로 들어가지 않도록 하는 방법을 찾다보니 대표적으로 두 가지 방법이 있다.1. Kaffeine HerokuHeroku app이 sleep 모드로 들어가지 않도록 도와주는 app이다. 본인의 heroku app 주소만 등록하면 주기적으로 해당 주소로 ping을 때려서 서버가 유지되도록 도와준다.문제는 사용자가 너무 늘어서 kaffeine app의 DB가 주기적으로 가득차 repo 주인이 비우지 않을 경우에는 &#x27;something went wrong&#x27;이라는.......]]></description>
					<pubDate>Sun, 07 Apr 2019 21:06:27 +0900</pubDate>
					<tag><![CDATA[heroku,curl,crontab,linux,herokuKaffeine]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[DOCKER]]></category>
					<title><![CDATA[[docker] diff]]></title>
					<link>https://blog.naver.com/writer0713/221507587300</link>
					<guid>https://blog.naver.com/writer0713/221507587300</guid>
					<description><![CDATA[docker diff 명령은 컨테이너에서 변경된 항목을 보여준다. 비교 기준은 컨테이너를 실행한 docker image의 내용이다.예를 들어, ubuntu:0.1 이라는 이미지로 my-ubuntu라는 이름의 container를 실행했다.그리고, vim을 설치한후에 docker diff 명령어를 실행했다고 해보자.그러면, ubuntu:0.1 도커 이미지와 비교하여 my-ubuntu에 변경된 내용 (vim관련 패키징)이 화면에 뜬다.A는 추가된 파일,C는 변경된 파일,D는 삭제된 파일.]]></description>
					<pubDate>Sun, 07 Apr 2019 13:49:02 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[DOCKER]]></category>
					<title><![CDATA[[docker] commit]]></title>
					<link>https://blog.naver.com/writer0713/221507584276</link>
					<guid>https://blog.naver.com/writer0713/221507584276</guid>
					<description><![CDATA[docker commit을 간단히 설명하면 &#x27;컨테이너의 변경 사항을 이미지 파일로 생성&#x27; 하는 명령어이다.-a, --author&#x3D;&quot;&quot; : 생성자 정보-m, --message&#x3D;&quot;&quot; : 변경 사항에 대한 내용 (메시지)위와 같은 명령어를 실행하면 변경된 사항을 포함한 my_ubuntu 컨테이너가 writer0713/my_ubuntu:0.1 이라는 이미지로 생성이 된다.]]></description>
					<pubDate>Sun, 07 Apr 2019 13:43:11 +0900</pubDate>
					<tag><![CDATA[docker,dockercommit,도커,도커커밋,도커commit]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[DOCKER]]></category>
					<title><![CDATA[[docker] cp 명령어로 파일 꺼내기]]></title>
					<link>https://blog.naver.com/writer0713/221507576998</link>
					<guid>https://blog.naver.com/writer0713/221507576998</guid>
					<description><![CDATA[Docker의 cp 명령어는 container에 있는 파일, 디렉토리를 local로 복사하는 명령어이다.위 명령어는 my_conatiner라는 이름의 컨테이너의 /home/test.sh 파일을 내 호스트(로컬) Desktop에 복사하는 명령어이다.]]></description>
					<pubDate>Sun, 07 Apr 2019 13:28:48 +0900</pubDate>
					<tag><![CDATA[Docker,docker,도커,dockercp,도커파일복사,docker파일복사]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[DOCKER]]></category>
					<title><![CDATA[[docker] exec 커맨드]]></title>
					<link>https://blog.naver.com/writer0713/221507573585</link>
					<guid>https://blog.naver.com/writer0713/221507573585</guid>
					<description><![CDATA[보통 컨테이너가 생성되서 RUN 상태일때 exec 커맨드를 사용하여 /bin/bash에 붙어서 사용을 하곤한다.하지만, 만약 간단히 shell 실행이나 특정 커맨드 실행과 같이 복잡하지 않은 일회성 작업(apt-get, yum 명령으로 패키지 설치, 혹은 데몬 실행 등)을 할때는 굳이 /bin/bash로 붙지 않아도 된다.exec 커맨드 자체가 해당 컨테이너에서 &#x27;어떠한 동작&#x27;을 실행하라는 명령어이기 때문에,/bin/bash로 붙지 않고 exec 커맨드와 함께 원하는 동작을 넘겨주면 바로 실행이 가능하다.]]></description>
					<pubDate>Sun, 07 Apr 2019 13:21:51 +0900</pubDate>
					<tag><![CDATA[docker,exec,dockerExec,도커]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Linux] ssh 설정]]></title>
					<link>https://blog.naver.com/writer0713/221505613962</link>
					<guid>https://blog.naver.com/writer0713/221505613962</guid>
					<description><![CDATA[꽤나 오래 전에 git ssh 설정에 대해 포스팅 한적이 있다.당시에 bitbucket + ssh 설정을 정리했었다. 위 포스팅을 보면 .ssh 디렉토리에 private key와 public key를 생성하고, 해당 key를 ssh-agent에 등록하여 사용하는 방법을 정리했다.실무에 와서 보니 위 방법보다 더 좋은 방법이 있어 정리한다.우선 위 포스팅에서 설명한것처럼 ~/.ssh/ 디렉토리가 ssh 설정의 default 디렉토리다.따라서 ssh 관련 설정 파일들은 모두 이 디렉토리에 위치한다.ssh-keygen을 통해 private / public key를 만드는 것까지는 위 포스팅의 내용과 같다.예를 들어, ~/.ssh/my_key 와 ~/.ssh/my_key.pub 키를 생성했다고 하자.~/.ssh/config 파일을 만.......]]></description>
					<pubDate>Thu, 04 Apr 2019 19:07:33 +0900</pubDate>
					<tag><![CDATA[ssh,git,gitssh,sshconfig,rsakey]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[DOCKER]]></category>
					<title><![CDATA[[docker] 자주쓰는 options]]></title>
					<link>https://blog.naver.com/writer0713/221505599511</link>
					<guid>https://blog.naver.com/writer0713/221505599511</guid>
					<description><![CDATA[개인적으로 docker run 시에 자주 사용하는 옵션들은 다음과 같다.실제 위 option들을 사용하는 docker run command는 다음과 같다.위 command를 실행하면 --name 옵션을 통해 my_image라는 이름을 가진 docker image를 가지고 컨테이너를 실행한다.컨테이너에 my_docker 라는 이름을 붙여서 추후 컨테이너를 종료하던가 exec 명령어로 붙을때 더 간편하게 사용할수 있다.그리고 -u 옵션으로 user명을 writer0713로 실행한다. 쉘스크립트나 특정 프로세스를 띄울때 권한 문제를 해결할수 있다.-p 옵션으로 내 로컬의 5000번 port와 container의 5000번 포트를 연결했다.-v 옵션으로 내 로컬의 myAPI 디렉토리를 container의 myAPI 디렉토리에.......]]></description>
					<pubDate>Thu, 04 Apr 2019 18:46:43 +0900</pubDate>
					<tag><![CDATA[docker,dockerrun,dockervolume,volume,dockerport]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.04.03]]></title>
					<link>https://blog.naver.com/writer0713/221504050633</link>
					<guid>https://blog.naver.com/writer0713/221504050633</guid>
					<description><![CDATA[20대 이후로결심과 함께 실제 행동으로 옮기는 사람은 정말 소수였고,행동하는 사람들 중에서 꾸준히 하는 사람은 거의 본적없다.생각보단 행동,그리고 꾸준히.준비하는 자에게 분명 기회는 온다.그 기회를 잡을 능력은 평소의 끊임없는 고통의 반복.]]></description>
					<pubDate>Wed, 03 Apr 2019 00:46:29 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.31]]></title>
					<link>https://blog.naver.com/writer0713/221502236272</link>
					<guid>https://blog.naver.com/writer0713/221502236272</guid>
					<description><![CDATA[데이터베이스 모델링 책, 강좌를 보며 꽤나 오랜 시간 공부를 했지만,상황에 따라 달라지는 모델링 (연관관계)를 볼때면 &quot;왜 이때는 이렇게 하고, 저때는 저렇게 하지..?&quot; 라는 궁금증이 생겼다.그리고 그것에 대한 해답을 찾기가 쉽지 않았다. 해답을 제대로 찾지 못한채 더 이상 모델링을 혼자 더 공부한다고 해서 ORM(JPA, hibernate)에 대한 이해가 쉬워지진 않을거라는 판단을 하고,그동안 미뤄왔던 JPA 공부를 시작했다. 대부분의 JPA 책들이 기초원리, 개념에 대한 설명보다는 &#x27;사용법&#x27;에 대한 설명에 집중하는데이번에 보고 있는 &#x27;JAVA ORM 표준 JPA 프로그래밍&#x27; 이라는 책은 JPA을 왜 사용하는지, 어.......]]></description>
					<pubDate>Sun, 31 Mar 2019 23:59:02 +0900</pubDate>
					<tag><![CDATA[JPA,jpa프로그래밍,javaorm표준jpa프로그래밍]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Linux] logrotate - 로그 관리]]></title>
					<link>https://blog.naver.com/writer0713/221500391763</link>
					<guid>https://blog.naver.com/writer0713/221500391763</guid>
					<description><![CDATA[로그를 관리하는 대표적인 방법으로는 crontab을 사용하여 직접 작성한 쉘을 주기적으로 실행하는 방법과, logrotate를 통해 원하는 관리하는 방법이 있다.리눅스에 기본적으로 설치되어 있지만, 설치되어 있지 않으면 아래 명령어로 설치하도록 한다./etc/logrotate.conf 파일을 열어보면 기본적인 logrotate 관련 configuration이 작성되어 있다.예를 들어, 일 단위로 관리를 할거지, 주 단위로 할건지에 대한 설정, 몇 개의 파일을 남길건지에 대한 설정, 압축을 할건지 말건지에 대한 설정 등이 있다.그리고 중간에 include /etc/logrotate.d 라는 부분이 있다. /etc/logrotate.d 디렉토리에는 custom한 logrotate.conf 를 작성하게 된.......]]></description>
					<pubDate>Fri, 29 Mar 2019 13:28:53 +0900</pubDate>
					<tag><![CDATA[linux,logrotate,리눅스,리눅스로그관리]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.29]]></title>
					<link>https://blog.naver.com/writer0713/221500049132</link>
					<guid>https://blog.naver.com/writer0713/221500049132</guid>
					<description><![CDATA[다시 한번 한단계 더 발전한 느낌이 든다.리눅스 서버 관리를 하면서 자주 보고 듣지만 모호했던 용어와 숫자들.그것들을 관리하기 위해서 컴퓨터 구조와 운영체제에 대한 지식의 필요성을 느꼈다.전공자들은 이미 배웠을 것들.늦게나마 실무에서 그 필요성을 직접 체감한다는게 참 감사하고 소중한 기회인것 같다.한걸음 한걸음 어제보다 나은 오늘을 만들자.오늘도 감사하며 하루를 마무리.]]></description>
					<pubDate>Fri, 29 Mar 2019 00:43:03 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[LINUX]]></category>
					<title><![CDATA[[Linux] 실행중인 process 찾기]]></title>
					<link>https://blog.naver.com/writer0713/221498526459</link>
					<guid>https://blog.naver.com/writer0713/221498526459</guid>
					<description><![CDATA[1. ps 명령어2. pgrep일반적으로 ps 명령어를 사용해서 프로세스가 떠있는지 본다.pgrep의 경우, top과 같이 사용하면 현재 프로세스의 상태를 자세히 볼 수 있다.아래와 같이 top 명령어를 사용하면 pid들의 상태를 보여준다 (20개 미만일 경우).따라서 pgrep을 사용하여 process 이름으로 pid를 찾고 해당 pid 들을 &#x27;,&#x27;로 분리하기 한 후,이 pid 정보들을 top 명령어로 넘겨주면 된다.]]></description>
					<pubDate>Wed, 27 Mar 2019 11:46:02 +0900</pubDate>
					<tag><![CDATA[top,linux,pgrep,프로세스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[JPA]]></category>
					<title><![CDATA[[JPA] 영속성 관리]]></title>
					<link>https://blog.naver.com/writer0713/221498094004</link>
					<guid>https://blog.naver.com/writer0713/221498094004</guid>
					<description><![CDATA[엔티티 매니저 팩토리 (EntityManagerFactory)- 매니저 팩토리 (EntityManagerFactory)를 만드는 비용은 상당히 크기 때문에 한 개만 만들어서 애플리케이션 전체에서 공유하도록 설계되어 있다. - 여러 쓰레드에서 동시 접근해도 안전하다 (쓰레드 세이프)엔티티 매니저 (EntityManager)- 엔티티 매니저 (EntityManager)를 만드는 비용은 거의 들지 않는다.- 쓰레드 세이프하지 않다.- 데이터베이스 연결이 꼭 필요한 시점 (ex. 트랜잭션을 시작할 때)까지 커넥션을 얻지 않는다.영속성 컨텍스트 (persistence context)- 엔티티를 영구 저장하는 환경- 엔티티 매니저로 엔티티를 저장하거나 조회하면 엔티티 매니저는 영속성 컨텍스트.......]]></description>
					<pubDate>Tue, 26 Mar 2019 21:06:15 +0900</pubDate>
					<tag><![CDATA[jpa,java,영속성컨텍스트]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[JPA]]></category>
					<title><![CDATA[[JPA] JPQL 에러 : QuerySyntaxException: unexpected token]]></title>
					<link>https://blog.naver.com/writer0713/221498059985</link>
					<guid>https://blog.naver.com/writer0713/221498059985</guid>
					<description><![CDATA[&quot;자바 ORM 표준 JPA 프로그래밍&quot; 이라는 책의 예제를 따라 작성하고 실행을 하니 아래와 같은 에러가 java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: unexpected token: Member near line 1, column 15 [SELECT m FROM Member m]분명 책에 있는 소스코드와 똑같이 작성했는데 계속해서 에러가 났다. JPQL 을 잘못 입력했나 구글링을 통해 확인해보니 그것도 아니었다.한참을 찾다가 아래와 같은 정보를 찾았다.I solve this problem. Member class and Board class was in the default package and I moved in to some package.정말 default package에 있던 Member 클래스를 다른 패키.......]]></description>
					<pubDate>Tue, 26 Mar 2019 20:16:55 +0900</pubDate>
					<tag><![CDATA[jpa,jpql,QuerySyntaxException,java]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.25]]></title>
					<link>https://blog.naver.com/writer0713/221497337810</link>
					<guid>https://blog.naver.com/writer0713/221497337810</guid>
					<description><![CDATA[컨디션이 회복되서 그런지 평소보다 집중이 잘됐다.2주가 넘도록 진행하던 프로젝트를 오늘 드디어 리얼에 반영했다. 아직 다 마무리된건 아니지만 가장 큰 작업을 완료해서 나머지 작업은 금방 마무리할수 있을것 같다.Jpa 공부를 시작했다. 그동안 여러번 시도했지만 뭔가 jpa 자체가 어렵다기보단 데이터베이스 모델링에 대한 이해 부족때문에 jpa를 공부해도 한계가 있었던것같다. 데이터베이스 모델링과 sql을 좀 더 깊이 있게 공부를 했고, 다시 jpa 공부를 하니 이전보다 이해가 더 잘되는게 느껴졌다. 이번에야말로 jpa를 완벽하게는 아니라도 깊이있게 공부를 해보려 한다.알고리즘 책을 샀다. 사실 여러가지 공부를 동시에 진행하.......]]></description>
					<pubDate>Tue, 26 Mar 2019 00:08:15 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[DOCKER]]></category>
					<title><![CDATA[[docker] h2]]></title>
					<link>https://blog.naver.com/writer0713/221497097547</link>
					<guid>https://blog.naver.com/writer0713/221497097547</guid>
					<description><![CDATA[아래 링크에 자세한 설명이 나와있다.개인적으로는 아래 명령어를 통해 컨테이너를 실행했다.- 우선 dev/h2 라는 디렉토리를 만들어서 h2 데이터를 저장할 volume을 만든다.- port는 1521을 tcp 포트로 연결하고, http 포트로 8081:81 연결한다.- 이렇게 해서 컨테이너를 실행하면 http://localhost:8081로 h2 데이터베이스에 연결할수 있다.]]></description>
					<pubDate>Mon, 25 Mar 2019 18:54:50 +0900</pubDate>
					<tag><![CDATA[docker,dockerH2,h2,h2docker,도커,도커h2]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[목표]]></category>
					<title><![CDATA[알고리즘]]></title>
					<link>https://blog.naver.com/writer0713/221496921323</link>
					<guid>https://blog.naver.com/writer0713/221496921323</guid>
					<description><![CDATA[슬슬 평소에 알고리즘 공부를 시작해야겠다.추천 도서는 아래 2권.꾸준히 준비하자. 이직할때 되서 허덕이지 말고.]]></description>
					<pubDate>Mon, 25 Mar 2019 15:37:55 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[JPA]]></category>
					<title><![CDATA[[JPA] 매핑 어노테이션]]></title>
					<link>https://blog.naver.com/writer0713/221496320466</link>
					<guid>https://blog.naver.com/writer0713/221496320466</guid>
					<description><![CDATA[@Entity : 이 클래스가 테이블과 매핑하는 클래스라는 것을 JPA에게 알려준다. ( &#x3D; 엔티티 클래스 )@Table : - 엔티티 클래스에 매핑할 테이블 정보를 알려준다. - name 속성을 사용해서 Member 엔티티를 MEMBER 테이블과 매핑시켰다. - 이 어노테이션을 생략하면 기본적으로 클래스 이름을 테이블 이름으로 매핑한다.@Id : - 이 어노테이션이 붙은 (엔티티 클래스의) 필드를 테이블의 기본키 (Primary key)에 매핑한다. - id 필드를 테이블의 ID 기본키 컬럼에 매핑했다. - @Id가 사용된 필드를 식별자 필드라 한다.@Column : - 필드를 컬럼에 매핑한다. - name 속성을 사용해서 Member 엔티티의 username 필드를 MEMBER 테이블의 NA.......]]></description>
					<pubDate>Sun, 24 Mar 2019 21:32:46 +0900</pubDate>
					<tag><![CDATA[java,jpa,jpaannotation,jpa어노테이션]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[JPA]]></category>
					<title><![CDATA[[JPA] 하이버네이트 핵심 라이브러리]]></title>
					<link>https://blog.naver.com/writer0713/221496312299</link>
					<guid>https://blog.naver.com/writer0713/221496312299</guid>
					<description><![CDATA[JPA 구현체로 하이버네이트를 사용하기 위한 핵심 라이브러리는 다음과 같다.- hibernate-core : 하이버네이트 라이브러리- hibernate-entitymanager : 하이버네이트가 JPA 구현체로 동작하도록 JPA 표준을 구현한 라이브러리- hibernate-jpa-2.1-api : JPA 2.1 표준 API를 모아둔 라이브러리* hibernate-entitymanager를 maven이나 gradle에 지정하면 hibernate-core와 hibernate-jpa-2.1-api를 함께 다운 받는다.]]></description>
					<pubDate>Sun, 24 Mar 2019 21:21:43 +0900</pubDate>
					<tag><![CDATA[java,jpa,hibernate,하이버네이트]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.24]]></title>
					<link>https://blog.naver.com/writer0713/221496243515</link>
					<guid>https://blog.naver.com/writer0713/221496243515</guid>
					<description><![CDATA[독감 이후로 몸과 정신이 모두 건강치 못했다.몸이 안좋아지니 정신까지 흔들렸고,기존에 꾸준히 해오던 daily routine(정해진, 반복되는 계획적 생활)을 손에서 놓았다.오늘 오후 날씨가 좋아서양재천을 뛰었다.뛰면서 다시 시작해야겠다는 마음이 들었다.1분기가 이제 지나간다.4월이 곧 온다.다시 새로운 마음으로 굳건하게 시작해보자.난 할수있다.언제나 그랬듯이.]]></description>
					<pubDate>Sun, 24 Mar 2019 19:36:35 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.18]]></title>
					<link>https://blog.naver.com/writer0713/221491642674</link>
					<guid>https://blog.naver.com/writer0713/221491642674</guid>
					<description><![CDATA[처음 프로그래밍 실무 시작했을때만큼 난관에 많이 부딪히는 느낌.성장하고 있다는 뜻이겠지.버티자. 어떻게든 해결해보자.]]></description>
					<pubDate>Tue, 19 Mar 2019 00:50:09 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.10 - 근황과 개인 프로젝트 개발상황]]></title>
					<link>https://blog.naver.com/writer0713/221485013835</link>
					<guid>https://blog.naver.com/writer0713/221485013835</guid>
					<description><![CDATA[독감심한 독감에 걸려 3일동안 시체처럼 누워만 있었다.온몸이 불덩이처럼 뜨겁고 세포 하나하나에 고통이 느껴져서 3일 내내 끙끙 거렸다.그럼에도 잠이 안올때에는 잠깐씩 유투브를 통해 파이썬 공부를 했다.정말 잠깐 잠깐 봤는데 대략 전체적인 문법은 다 이해한것 같다.참 쉽게 잘 만든 언어라는 느낌이 든다.오늘 저녁부터 독감이 많이 좋아진 듯하다.얼른 회사에 출근해서 일을 하고 싶지만, 화요일까지는 격리 조치 상태라서 집에서 쉬면서 업무 관련 공부를 좀 더 해야겠다. 개인 프로젝트 개발상황개인 프로젝트를 진행한지 시간이 꽤나 지났다.본래 이번주까지 좀 타이트하게 진행해서 마무리 하려고 했는데,갑작스런 독감으.......]]></description>
					<pubDate>Sun, 10 Mar 2019 23:01:53 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] 변수 in 자료구조 (포함여부 확인)]]></title>
					<link>https://blog.naver.com/writer0713/221484200976</link>
					<guid>https://blog.naver.com/writer0713/221484200976</guid>
					<description><![CDATA[사용자로 입력받은 단어가 아래 fruit 리스트에 포함되어 있는지를 확인하라. 포함되었다면 &quot;정답입니다&quot;를 아닐 경우 &quot;오답입니다&quot; 출력하라.위 문제를 보고 java 나 js에서 많이 사용하던 자료구조의 contains 나 include 함수를 생각했다.하지만, 파이썬에서는 더 간단한 방법을 제공하고 있었다. 위 문제는 아래와 같이 해결할수 있다.tuple의 경우도 마찬가지로 똑같이 사용할수 있고, dictionary의 경우 dictionary.keys()와 dictionary.values()를 통해 똑같이 사용할수 있다.]]></description>
					<pubDate>Sat, 09 Mar 2019 19:04:46 +0900</pubDate>
					<tag><![CDATA[python,python3,파이썬포함여부,pythonIn,pythonincludes,pythoncontains]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] min과 max 함수 활용]]></title>
					<link>https://blog.naver.com/writer0713/221484197823</link>
					<guid>https://blog.naver.com/writer0713/221484197823</guid>
					<description><![CDATA[min, max 함수의 기본적인 사용법은 함수명만 봐도 알수 있다.위 결과는 10을 출력한다. (max는 반대)min과 max는 단순히 최소, 최대값을 구하는것 말고도 아래와 같은 상황에서 유용하게 사용된다.사용자로부터 값을 입력받은 후 해당 값에 +20을 더한 값을 출력하라. 단 값의 범위는 0~255로 가정한다. 255를 초과하는 경우 255를 출력해야 한다.위 문제는 기본적으로 if - else 를 사용하여 해결 가능하다.위 코드를 min 함수를 사용하면 더 간단히 만들수 있다.]]></description>
					<pubDate>Sat, 09 Mar 2019 18:58:45 +0900</pubDate>
					<tag><![CDATA[python,python3,파이썬,파이썬min,파이썬max,min,max]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] pyenv로 설치시 zlib 에러 : zlib not available]]></title>
					<link>https://blog.naver.com/writer0713/221483733754</link>
					<guid>https://blog.naver.com/writer0713/221483733754</guid>
					<description><![CDATA[pyenv를 사용하여 python을 설치하다가 아래와 같은 에러 메시지를 내뿜으며 설치가 실패했다.해결하기 위해서는 아래의 과정이 필요하다.1. zlib 설치2. zlib 경로 명시 그리고 다시 pyenv를 사용하여 원하는 버전을 설치하면 제대로 설치된다.]]></description>
					<pubDate>Sat, 09 Mar 2019 00:03:10 +0900</pubDate>
					<tag><![CDATA[pyenv,pyenvzlibError,파이썬,파이썬3,pyenvInstallError]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[MAC]]></category>
					<title><![CDATA[[맥] Launchpad 아이콘들이 이상하게 나온다]]></title>
					<link>https://blog.naver.com/writer0713/221483697175</link>
					<guid>https://blog.naver.com/writer0713/221483697175</guid>
					<description><![CDATA[CleanMyMac 을 사용하여 맥 최적화를 실행한 이후에 Launchpad 아이콘들이 이상하게 바뀌었다 (존재하지 않는 프로그램인 마냥).한참 복구 방법을 찾아보다가 아래의 해결책을 찾았다.1. 라이브러리 - Application Support - Dock - xxx.db 를 지운다.2. terminal을 열고 &#x27;killall Dock&#x27; 명령어를 입력한다.]]></description>
					<pubDate>Fri, 08 Mar 2019 23:07:27 +0900</pubDate>
					<tag><![CDATA[맥,맥launchpad아이콘,맥런치패드아이콘]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] python3 (pip3) 설치하기]]></title>
					<link>https://blog.naver.com/writer0713/221483661952</link>
					<guid>https://blog.naver.com/writer0713/221483661952</guid>
					<description><![CDATA[MAC OS 기준으로 설명하려 한다.MAC의 경우, 기본적으로 python2.x 버전이 설치되어 있다. 하지만, 간혹 pip이 설치되어 있지 않은 경우가 있는데 이럴 경우 아래의 포스팅 처럼 easy_install 이라는걸 사용하여 pip만 따로 설치 가능하다.하지만, python2.x는 공식적으로 더이상 기능 추가가 없을거라는 발표가 있었고 점차 (대부분) python3.x로 넘어가는 추세이다 보니 python3.x을 사용하는 것을 추천한다. (관련해서는 아래 포스팅 참고)Mac OS에서 python3을 설치하는 방법은 아래와 같다.위 명령어를 실행하면 brew를 통해 python3를 설치하는데 아래와 같은 에러가 발생할수 있다.이때는 아래의 명령어를 실행하면 된.......]]></description>
					<pubDate>Fri, 08 Mar 2019 22:15:51 +0900</pubDate>
					<tag><![CDATA[파이썬,파이썬3,파이썬설치,파이썬3설치,mac파이썬설치,맥파이썬설치,python3,pip3,macpip3,brewinstall]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] if __name__ == '__main__']]></title>
					<link>https://blog.naver.com/writer0713/221479985852</link>
					<guid>https://blog.naver.com/writer0713/221479985852</guid>
					<description><![CDATA[파이썬을 하다 보면 꽤 많은 모듈에서 다음과 같은 if 문을 볼수있다.아래 강좌가 참 잘 설명하고 있다.간단히 요약하자면, 다른 파일에 module로 import 될 때에는 if __name &#x3D;&#x3D; __main__ 의 내용이 실행되지 않는다.해당 파일을 직접 실행했을때에만 특정 로직을 실행하고 싶을때 사용한다.]]></description>
					<pubDate>Mon, 04 Mar 2019 16:49:58 +0900</pubDate>
					<tag><![CDATA[python,__name__,__main__,파이썬]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] virtualenv and why you should use virtual environments]]></title>
					<link>https://blog.naver.com/writer0713/221479971053</link>
					<guid>https://blog.naver.com/writer0713/221479971053</guid>
					<description><![CDATA[파이썬의 virtualenv를 설치하는 방법, 사용하는 방법, 그리고 왜 사용해야하는지에 대한 간단한 동영상 강좌다.]]></description>
					<pubDate>Mon, 04 Mar 2019 16:33:52 +0900</pubDate>
					<tag><![CDATA[python,파이썬,virtualenv]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[Python]]></category>
					<title><![CDATA[[파이썬] pip 설치하기]]></title>
					<link>https://blog.naver.com/writer0713/221479935322</link>
					<guid>https://blog.naver.com/writer0713/221479935322</guid>
					<description><![CDATA[Mac에 기본적으로 python은 설치되어 있지만 pip은 설치되어 있지 않다.아래 명령어를 실행하면 간단히 설치 가능하다.]]></description>
					<pubDate>Mon, 04 Mar 2019 15:54:25 +0900</pubDate>
					<tag><![CDATA[python,pip,파이썬,pip설치,맥pip,macpip설치,맥pip설치]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>writer0713</author>
					<category><![CDATA[2019年]]></category>
					<title><![CDATA[2019.03.03]]></title>
					<link>https://blog.naver.com/writer0713/221479489630</link>
					<guid>https://blog.naver.com/writer0713/221479489630</guid>
					<description><![CDATA[1.3일간의 휴일이 순식간에 지나갔다.만족스러운 휴일이었다.이제 다시 힘을 내서 일과 공부에 매진해야겠다.2.3월이 시작됐다. 3월 중순 전에 개인 프로젝트의 중요한 부분들을 어느정도 마무리 지어야겠다. 그리고 1분기에 해오던 스터디도 마무리 짓고 다시 새로운 마음으로 2분기에 할 것들을 정리해서 플랜을 짜야겠다.]]></description>
					<pubDate>Mon, 04 Mar 2019 00:26:27 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
