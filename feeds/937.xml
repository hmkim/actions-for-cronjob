<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by 진영화(jin young hwa) on Medium]]></title>
        <description><![CDATA[Stories by 진영화(jin young hwa) on Medium]]></description>
        <link>https://medium.com/@timotolkie?source=rss-3bdb243d6ef------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/0*jo02x2tYizVBC-_e.JPG</url>
            <title>Stories by 진영화(jin young hwa) on Medium</title>
            <link>https://medium.com/@timotolkie?source=rss-3bdb243d6ef------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Sun, 12 May 2019 13:07:24 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@timotolkie" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[커리어 스킬(완벽한 개발자 인생 로드맵)리뷰]]></title>
            <link>https://medium.com/@timotolkie/%EC%BB%A4%EB%A6%AC%EC%96%B4-%EC%8A%A4%ED%82%AC-%EC%99%84%EB%B2%BD%ED%95%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9D%B8%EC%83%9D-%EB%A1%9C%EB%93%9C%EB%A7%B5-%EB%A6%AC%EB%B7%B0-53052970ac77?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/53052970ac77</guid>
            <category><![CDATA[개발자]]></category>
            <category><![CDATA[커리어]]></category>
            <category><![CDATA[책리뷰]]></category>
            <category><![CDATA[커리어스킬]]></category>
            <category><![CDATA[독후감]]></category>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sun, 12 May 2019 09:32:41 GMT</pubDate>
            <atom:updated>2019-05-12T09:35:14.234Z</atom:updated>
            <content:encoded><![CDATA[<p>다양한 IT회사의 사람들과 북 스터디용으로 추천합니다.</p><p>자기개발서이기도 하고 커리어를 위해 어떻게 해야 하는지 궁금하기도 해서 원래 이 책을 구입하려 하다가 페이스북 커뮤니티에 증정행사 참여하여 당첨으로 읽게 되었다. 솔직히 쓰자면, 이 책의 내용에 대해서 어느정도 예상하고 있었다. (한국과 외국의 환경은 다르기 때문에 어느정도 스스로 판단 할 수 있는 단계에서 읽을 수 있어야 할것 같다. ) 다시 말해 받아들일 부분은 받아들이고 나머지 부분은 스스로 판단하는게 이 책을 읽는 방법이라 생각한다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*r8H6IVrySHBQeAnJgR0qwA.jpeg" /><figcaption>존중하지만, 추종하지는 말자.</figcaption></figure><p><a href="http://www.yes24.com/Product/Goods/71829578?Acode=101">커리어 스킬</a></p><p>저자의 열정은 훌룡하다. 또한 최대한 상세하게 설명하였다. 이 책 내용에 대해서 일부 고전적인 부분이 있어도 그것에 대해 크게 신경쓰지 않았으면 좋겠다. (솔직히 일부 글들은 예전에 SI에서 같이 일했던 개발자들이 했었던 말들과 크게 다르지 않다.) 예를들면 자바스크립트에 대한 폄하같은 부분을 말할 수 있다. 그러나 일부의 글들을 보고 책 전체를 뭐라고 할 수 없다. 모든 독자를 위해서 집필 할 수 없듯이 이 책도 한계를 나름대로 인정하면서 이야기를 풀어 나가고 있다.</p><p>이 책은 혼자 읽을 때는 무조건적으로 1장부터 시작하는 완독을 권하지는 않는다. 도움이 되는 부분이 무엇인지 목차를 보고 잘 생각해 본 후 필요한 부분부터 먼저 읽는것을 추천한다. 예를들어 개발자로 입문하고 싶지만, 당장은 일자리를 구하지 않을 사람이라면 1부(소프트웨어 개발자로 입문하기) 와 4부( 개발자로 일하기) 부터 읽고 나머지는 차차 시간날 때 읽어보는것을 추천한다.</p><p>이책의 장점은 경험하지 못한 일들에 대하여 미리 알려주는 가이드 역할을 훌룡하게 수행하고 있다. 기술에 대한 간략한 설명과 이해 그리고 일자리와 실력에 대한 일반론적인 부분이 잘 소개되어 있다. 만약 이 책을 읽는 목적이 위에 서술한 것이라면 추천할 수 있다. 소프트웨어 분야 일을 오래 해본 사람이 아니라면 미래에 대한 고민은 당연 할 수밖에 없다. 이 부분에 대한 어느정도의 가이드가 되어 있고 열정적으로 설명하고 있다. 물론 이 책대로 흘러가라는 법은 어디에도 없지만, 그래도 아무런 정보를 모르고 걱정만 하는것 보다는 조금 더 구체적으로 고민 할 수 있도록 만들어 주는 책으로 삶는다면 이 책의 역할을 다 수행하지 않았는가 라는 생각을 해본다.</p><p>반면 단점도 존재한다. 글쓴이를 확인 할 수 있듯이 전적으로 책의 환경은 해외 상황을 가정하여 작성하였으며, 일부 한국의 실정과는 맞지 않는 부분도 있다. 이 부분을 잘 인지하고 책을 읽어야 한다는 생각이 든다. 코딩부트, 일자리 개발자로 일하기 경력 등 책 전반에 대하여 어느부분은 맞는 부분도 있지만 조금 다른 부분도 있다. 그래서 생각한 부분이 있다면 이 책은 토론식 스터디에 적합한 책이 아닐까 싶다. 책의 내용을 가지고 완벽한 정답은 없으며 서로 이야기를 나눌 수 있는 씨앗글이 되고 각자의 업무 상황과 생각들을 공유하며 이야기 할 수 있을만한 책이라고 본다.</p><p>단점을 잘 필터링 할 수 있다면, <strong>이 책은 정말 훌룡한 책이다.</strong> 다만 이 책을 읽을 때 생각해보면서 읽어야 한다고 느껴서 위와 같은 방법을 제안한 것이다. 해외 상황과 다르다는부분은 아마도 최상위권 회사들과 개발자들은 이 책의 내용과 크게 다르지 않을 것이다. 다만 내가 우려하는것은 아무것도 모르는 사람들에 대한 우려일 뿐이니 저번 다른 책 후기에도 쓴 적이 있지만 아무것도 모르는 사람에게 무작정 책을 던져주지 않기를 바라는 마음에서 굳이 단점까지 작성한 것이다.</p><p>이 책을 읽고 나 자신에게 변화된 부분이 있다면, 생각하고 있던 사이드 프로젝트를 조금 더 세심하게 다듬어 보는 계기가 되었다. 막막했던 부분도 해결하는데 도움을 받았다. 연차에 상관없이 추천할 만한 책이라고 할 수 있지만 그룹을 만들어 같이 읽을 때 더욱 도움이 될 만한 책이라고 할 수 있다. 같은 소속이 아닌 다른 회사에서 일하는 사람들과 차한잔 하며 이야기를 나누면서 읽어도 즐거운 경험을 줄 수 있는 책인것 같다. 스스로의 인생에 대한 고민과 앞으로 어떻게 해야 할지 고민을 가지고 있는 사람이라면 주변 사람들과 같이 읽어보라고 추천할 것 같다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=53052970ac77" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[함께 자라기 애자일로 가는 길 리뷰]]></title>
            <link>https://medium.com/@timotolkie/%ED%95%A8%EA%BB%98-%EC%9E%90%EB%9D%BC%EA%B8%B0-%EC%95%A0%EC%9E%90%EC%9D%BC%EB%A1%9C-%EA%B0%80%EB%8A%94-%EA%B8%B8-%EB%A6%AC%EB%B7%B0-da1c9029fcd?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/da1c9029fcd</guid>
            <category><![CDATA[성장]]></category>
            <category><![CDATA[코딩]]></category>
            <category><![CDATA[애자일]]></category>
            <category><![CDATA[개발자]]></category>
            <category><![CDATA[자기개발]]></category>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Tue, 30 Apr 2019 05:09:13 GMT</pubDate>
            <atom:updated>2019-04-30T05:17:45.217Z</atom:updated>
            <content:encoded><![CDATA[<p>4명의 개발자로 본 책 내용 실천법</p><p>2019년에 감사하게도 책 증정행사에 당첨되어 3권의 책을 받게 되었다. 이 책은 유투브 방송을 보면서 (어느새 취미가 책읽기와 유투브 방송 보기가 되었다.) 개발자 이웅재님 유투브를 보고 증정 행사에 응모하였다. 당첨될 줄은 몰랐는데 당첨되어 책이 내 손에 들어왔다. 이 책을 읽으면서 얼마나 많은 공감을 했는지 모른다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/458/1*YvTdGY5QO2b7YZFasnhgWA.jpeg" /></figure><p><a href="http://www.yes24.com/Product/Goods/67350256?Acode=101">함께 자라기</a></p><p>책 리뷰를 시작하기 전에 나 자신은 애자일을 좋아하지 않는다. 린 방법론도 마찬가지이다. 굳이 이유를 들자면 방법론이 사내정치의 도구로 사용되는것을 봤고 방법론 적용이 주관적이서 구성원들이 고통스러워 하는것을 알기 때문이다. MVP도 마찬가지다. 개인적인 생각이지만, 핸들없는 탈것을 만드는데 판자에 동그란 물체를 올리면 미끄러진다는 그 법칙을 우리가 알게되는데 얼마나 많은 시간을 투자하는지는 내 알 바 아니라는 경영자의 태도를 봐서 그런것인지도 모른다.</p><p>그러나 이 책은 달랐다. 애자일을 강요하는 책이 아니다. <strong>첫번째 자라기 챕터</strong>에서는 자기개발 내용이 있으면서 한계에 대해서도 잘 설명하고 있다. 책을 읽으면서 여러 개발자가 생각났다. 그들이 이 책의 방법론을 의도한것인지 아닌지는 알 길이 없다. 그러나 나의 공부방법이 잘못되었으며, 이 책을 읽고 생각난 4명의 개발자처럼 조금씩 공부방법을 변경해보는 시도를 하게 되었다.</p><p><a href="https://www.youtube.com/channel/UC_cH0_Ydy-Jd_soH4A8M0pA">맠튜브</a></p><p>첫번째로 이 책을 증정해주신 이웅재님이다. 사실 2019년 연말부터 타입스크립트를 해보려고 사전조사 중 이었는데, 개발자 유투버들에게 많은 도움을 받고 있다. 그 중에서 이웅재님 영상이 도움이 되어 보고 있다. 또한 책에서 나오는 의도적 수련법을 이런방식으로 실천 할 수 있겠다는 아이디어를 주셨다.</p><p><a href="https://www.youtube.com/channel/UCKXBpFPbho1tp-Ntlfc25kA">코드스피츠</a></p><p>두번째로는 유명한 개발자이자 교수님인 맹대표님이다 . 사회 환원으로 강의를 하시는것 조차 매우 존경스럽지만, 끊임없는 공부는 쉽게 따라하기 어렵다. 책에서 설명하는 학습프레임에 머물고 있었던 내가 맹대표님처럼 강의를 통한 실행프레임까지는 접근하기 어렵겠지만, 어떻게든 같이 공부해나가는 방법을 연구하고 실행해봐야 하겠다는 반성을 하게 되었다.</p><p><a href="https://www.youtube.com/channel/UCmMgRlN-3GKQ_CH7cOtLdvg">Minjun Kim</a></p><p>세번째로는 유명한 개발자인 김민준님이다. 이 분처럼 매일 일정한 시간에 일정한 사이드프로젝트를 진행하는 자기계발은 복리로 돌아온다는 이야기를 보여주는 실천 예시인것 같다. 1일 1시간이 1년이면 아주 큰 시간이라는것을 깨닫게 되었으며 이분의 방송이 올해 초부터 고민하고 있는 큰 고민 중 하나라는것을 알게 되었다. 하루 1시간을 공부에 투자하려면 어느정도의 체력이 되어야 하는가, 무엇을 가지고 진행해야 하는가에 대한 고민이 있었다. 서서히 답안을 찾아가는 중이다.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.twitch.tv%2F%3Fchannel%3Ddevjelly%26muted%3Dtrue&amp;url=https%3A%2F%2Fwww.twitch.tv%2Fdevjelly&amp;image=https%3A%2F%2Fstatic-cdn.jtvnw.net%2Fjtv_user_pictures%2F14dc70f5-d6a3-4e52-932e-e9b0b41e46e9-profile_image-300x300.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=twitch" width="620" height="351" frameborder="0" scrolling="no"><a href="https://medium.com/media/6ace7efdf2e5bdf3b3e74113e6ee37c9/href">https://medium.com/media/6ace7efdf2e5bdf3b3e74113e6ee37c9/href</a></iframe><p>마지막으로 최현묵님인데 이분의 라이브 방송은 가끔 참여하고 있다. 이 분이야말로 최근 가장 부러운 사람 중 하나라고 할 수 있다. 내가 본 개발자 중 가장 사회적 자본(조직에서 사랑받는 사람)이 풍부한 사람이며 심리적 안정감이 가장 뛰어난 사람 중 하나라고 할 수 있다. 튜토리얼을 보면서 하나하나 실행하는 방송을 보고 틀리거나 이상한 길로 가는 부분도 있지만, 틀렸을때의 부담감이나 놀림받지 않을거라는 믿음이 있다. 이거야 말로 뛰어난 사람이 되는 재능 중 하나라고 하지 않을 수 없다. 그의 트위치 라이브 방송을 보면서 그가 어떻게 공부하는지 알게 되었다.</p><p><strong>두번째 함께 챕터</strong>에서는 소프트웨어 실무라자라면 경험하게 되는 사례들이 소름돋을 만큼 적혀있다. 특히 이것도 모르세요라는 챕터에서는 사수와 부사수의 관계로 업무 도메인에 대한 내용을 찾아보게 두고 못하면 혼내는, 내가 회사에서 경험한 비열하고 쓰레기같은 방법을 정확하게 적어 놓았다. 이런 경우를 보통 처음 회사에 들어오는 경력직이나 신입에게 사람을 길들이는 방법으로 사용하는데, 처음에는 나만 그런가 보다 라고 생각했다가 같은 동네에 거주하고 있고 분기마다 만나는 전 직장 동료개발자도 똑같이 당했다는 이야기를 들었다. 동료를 협력해서 일을 완성해 나아가는 존재가 아닌 무너뜨려야할 사람으로 보는 사람들에게 과연 무엇을 기대해야 하는가 싶기도 하다.</p><p><strong>세번째 챕터</strong>에서 아주 적은 분량으로 애자일 이야기가 나온다. 의외로 분량이 적은것에 놀랐다. 그러나 내가 업무하면서 격은 한계와 문제점을 가감없이 쓰고 있다. 애자일 책 으로는 의외로 강요의 느낌이 없다. 오히려 솔직하게 표현하고 실천법을 이야기 하는 방향이 좋았다. 일부 내용에서는 공감이 어려운 부분도 있었으나 어떻게 받아들일지는 이 책을 읽는 사람에게 넘겨야 하는것으로 생각한다.</p><p>전체적인 평가로 한마디로 표현하자면, 이 책을 1분기 읽었던 책 중에서 최고로 뽑고 싶다. 이 책을 6개월에 한번씩 계속 다시 읽을 책으로 생각하고 읽겠다.</p><p>이 책을 읽으면서 변경되는 개인적 변화는 하루에 30분 자리에 앉아 코딩하는 습관을 들이는것과 책에 있는 예제를 따라 하더라도 예제를 다 읽고 나면 약간의 내용을 변경해보는 공부방법으로 전환하였고 피드백을 어떻게 받을지는 아직 결정하지 않았으나 조만간 알맞는 서비스들이 생겨나는것 같으니 기다려 보기로 하였다. 마지막으로 진지함을 벗고, 조금 가벼운 사람이 되도록 노력해보고 믿을만한 사람이 되는 방법이 무엇인지 연구해보는 계기가 되었다.</p><p><strong>이 책을 소프트웨어 업무를 하는 누구나에게 추천합니다.</strong></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=da1c9029fcd" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[객체지향의 사실과 오해를 읽고]]></title>
            <link>https://medium.com/@timotolkie/%EA%B0%9D%EC%B2%B4%EC%A7%80%ED%96%A5%EC%9D%98-%EC%82%AC%EC%8B%A4%EA%B3%BC-%EC%98%A4%ED%95%B4%EB%A5%BC-%EC%9D%BD%EA%B3%A0-241bc3813f64?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/241bc3813f64</guid>
            <category><![CDATA[리뷰]]></category>
            <category><![CDATA[후기]]></category>
            <category><![CDATA[책리뷰]]></category>
            <category><![CDATA[객체지향의사실과오해]]></category>
            <category><![CDATA[개발책]]></category>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sun, 28 Apr 2019 11:01:12 GMT</pubDate>
            <atom:updated>2019-04-28T11:10:42.039Z</atom:updated>
            <content:encoded><![CDATA[<h3>혼자 읽지 말아야 할 책</h3><p><strong>좋은 책은 맞다, 하지만.(참고 : 저작권상 책의 내용을 정리하지 않습니다.)</strong></p><p>우연히 참석한 트위치 라이브에서 객체지향 이야기가 나와 다시 이 책을 읽게 되었다. 처음에는 한번 가볍게 읽고 후기를 쓰려고 하다가.. 막상 정리를 하려고 하니 쉽게 되지 않아 일주일을 더 소비한 다음 한번 더 읽었다. 주변에서는 이 책을 극찬하는 분들도 많았는데, 내가 읽은 느낌은 그정도까지는 아니었다. 처음읽었을 때는 와.. 좋네.. 생각하다가 두번째 읽었을 때는 설명이 생각보다 정신없어 보였으며 아마 세번째 읽으면 넘어갈 부분과 읽어야 할 부분을 확실하게 구분할것 같다. 차라리 후반에는 동화로 예시를 들지 않았으면 좋았을 것 같았다. 억지로 설명하는 느낌이 많이 들었다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*w022C32QVTwc9q5XOJCNWg.png" /><figcaption>이책을 아무에게나 권하지 말자.</figcaption></figure><p><a href="http://www.yes24.com/Product/Goods/18249021?Acode=101">객체지향의 사실과 오해</a></p><p>이 책을 읽는다고 객체지향의 오해가 풀리기는 어렵다. 직접 해보고 다시 책을 읽고 그 말이 맞나 다른책과 비교, 고민 해야 오해가 풀릴 듯 싶다. 또한 이 책을 신입이나 개발을 처음하는 사람에게 아무런 설명없이 던져주는건 무책임한 행위에 가깝다고 생각한다. 적어도 이 책을 권하려면 책을 소개받는 사람의 성장을 기대한다고 생각했을 때 경험있는 사람이 책에 대한 내용을 같이 따라가 주거나 질문이라도 받아 주는게 맞을것 같다.</p><p>그만큼 이 책은 적어도 디자인 패턴, 또는 설계에 대한 약간의 지식을 요구한다. 그렇다고 방법이 없는것은 아니다. 좋은 동영상 강의가 있다.</p><p><a href="https://www.youtube.com/channel/UCKXBpFPbho1tp-Ntlfc25kA/featured">코드스피츠</a></p><p>위 링크강의에서 75번강의와 OOP 강의 들으면서 읽으면 도움이 된다.</p><p>책 소감을 간단히 이야기 하자면 객체지향의 목표는 실세계를 모방하는 것이 아니다, 오히려 새로운 세계를 창조하는 것이다. 부분부터 마음에 들었다. 그러나 설명을 위해 어느정도는 예를 들어야 한다는 말도 좋았다.</p><p>이후로 역할과 책임 그리고 협력에 대하여 객체를 가지고 설명한다. 자연스럽게 메시지와 메서드에 대한 설명도 곁들인다. 이후 인터페이스에 대한 설명 을 하면서 자율성과 설계 구조에 대한 생각을 추가한다. 클래스에 대한 오해도 책 중간에 풀어주려 많이 노력한 흔적이 보인다.</p><p>다음으로는 모델에 대한 설명을 한다. 이후 객체지향 설계 기법으로 책임주도 설계, 디자인패턴, 테스트 주도 개발에 대한 설명이 이어진다.</p><p>인상적인 부분은 테스트 주도 개발에 대한 설명에서 다양한 설계경험과 패턴에 대한 지식이 없는 사람에게는 테스트 주도 개발의 온전한 혜택을 누리기 어렵다는 말이 인상적이었다. 나도 그렇게 생각한다. 처음부터 TDD에 눈이 가지 않았던 이유가 이런 이유가 아니었나 싶다. 잘 알지도 못하는데 무작정 테스트케이스를 만들어 낼 수 있을 만큼 무작정 해보는건 이거야말로 사람 지치게 하는게 아닌가 생각했다. 아마도 조금이나마 디자인패턴을 공부해보고 작은거라도 직접 경험해보고 그것을 가지고 다시 수정할 때 TDD를 해 보는게 올바른 방법이 아닐까 생각한다. (이 글을 쓰는 사람에게만 해당하는 말입니다.)</p><p>이후로 책임과 메시지에 대한 설명과 함께 타입과 추상화 유스케이스 등 객체지향에 대한 저자의 생각을 잘 풀어놓고 있다. 또한 다형성을 책 지면에 많이 강조했다. 캡슐화도 강조하였지만 책 전체 비중을 놓고 볼 때 다형성을 강조한 부분이 많았다.</p><p>개인적으로, 내용 중에서 가장 인상깊었던 부분은 TDD에 대한 설명과 177페이지 상단의 유일하게 변하지 않는것은 모든것은 변한다는 사실 뿐이다. 라는말이 참 좋았다.</p><p>이 책의 좋았던 점은 코드에 대한 부담없이 그림과 설명으로만 객체지향을 설명하고자 노력했다는 부분이고, 이 책의 단점은 그림과 설명으로 책의 내용을 구성하다 보니 중복되거나 부담스러울 정도로 난해한 설명이 조금씩 들어 있었다는 점이다. 머리속에 다 정리할 능력이 되지 않아 메모장을 옆에 두고 주요 개념을 메모하면서 2주동안 즐겁게 읽었으며, 이제 올해 설계라는 것을 잘 공부해본 다음 내년에 다시한번 읽어보고 어떤 느낌이 드는지 알아보는것도 재미있을것 같다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=241bc3813f64" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[함수형 프로그래밍과 ES6+ 강의후기]]></title>
            <link>https://medium.com/@timotolkie/%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-es6-%EA%B0%95%EC%9D%98%ED%9B%84%EA%B8%B0-48de3f8a06b2?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/48de3f8a06b2</guid>
            <category><![CDATA[javascript]]></category>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Wed, 27 Mar 2019 01:01:00 GMT</pubDate>
            <atom:updated>2019-03-27T01:01:00.967Z</atom:updated>
            <content:encoded><![CDATA[<p>예제코드 100% 동작 합니다.</p><p>2019년은 계속 동영상 강좌를 듣고 모두 타이핑 해보기로 결정하였기 때문에 2번째 동영상 강의를 이어서 진행하게 되었다. 이번에 시작하게 된 강의는 함수형 프로그래밍 강의로 이전에 인프런에서 알게 된 유인동님 강의이다. 저번 후기에 설명한 대로 이번 동영상 강의는 프로그래머스 라는 플랫폼을 이용하였다. 인프런과 동영상 플레이어는 동일하기 때문에 뭐라 설명할 것은 없지만, 1–2가지 기능들의 차이는 있었다. 그것은 언젠가 기회가 생기면 언급하기로 하고 후기부터 정리해 나간다. 강의 링크는 아래와 같다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/680/1*bdrKjfI10I6s7a9DLGyECg.png" /><figcaption><a href="https://programmers.co.kr/learn/courses/7637">https://programmers.co.kr/learn/courses/7637</a></figcaption></figure><p>초반 강의는 Iterator, iterable 설명을 하기위한 사전 작업으로 시작한다. 나는 2017년에 해당 강의를 코드스피츠라는 강의에서 듣고 후기를 적어놓은 경험이 있어서 적은 부담으로 진행 할 수 있었다. 다만, 이 부분에 대하여 아예 모르는 사람은 조금 더 이 부분을 공부를 해야 진행 할 수 있겠구나 라는 생각이 들게 되었다. 설명은 모자람이 없었으나, 어디까지고 초급을 위한 대상은 아니었다. (실은 나도 초급인데 좋은 분들의 강연을 먼저 들어서 주워들은게 많았을 뿐이라는것을 미리 말해 둔다.)</p><p>for-in / for-of 설명도 충실하고 좋았다. 바로 이어지는 map,filter,reduce 를 만들어보고 사용해 보는 예시 또한 많은 공부가 되었다. 잘 분리해서 필요할 때 써먹을 수 있겠다는 생각이 들었다.</p><p>잘 진행해 나가다가 버벅였던 부분은 7.7강이었는데 curry 함수에서 _.length 부분은 어디서 나왔는지 놓친것 같다. 얼마나 버벅였는지, 가끔씩 쓰는 일기장에도 이게 어디서 나왔는지 모르겠다고 나도 모르게 썼었나보다.</p><p>이후 go,pipe 는 이전에 강연자의 직장동료와 같이 수업을 들었던 때가 생각나서 재밌게 진행 할 수 있었다.</p><p>9강즈음 나오는 Kleisli composition 부분은 솔직히 가장 이해가 안가는 부분 중 하나였다. 순수 함수로 여러가지 복잡한 문제를 해결 할 수 있는가에 대한 부분에서 시작한다면, 개인적 생각이지만 잘못 된 프로세스를 입력 할 리가 없다. 라는데서 시작하는게 아닌 실패할 때를 가정하는데에서 출발하는 것인가 라는 생각이 들었다. 강의의 많은 시간을 할여하여 설명하였지만 경험이 부족해서인지 몰라도 완벽하게 이해하는데에는 한계가 있었으며, 해당 코드를 그냥 외워야 할 수밖에 없을 것 같았다.</p><p>Promise에 대한 설명도 깔끔하고 좋았다. Promise 가 callback 지옥을 해결하는게 목표가 아니라 비동기 상황을 값으로 다루며, Promise는 Promise클래스로 만들어지는 인스턴스를 반환한다. 대기와 종료에 대한 값을 만든다는 정리는 다른 사람에게 설명할 수 있는 간단하고 짧은 정의가 좋았다.</p><p>비동기를 잘 제어하는 예시또한 좋았다. Promise가 계속 중첩되어도 then 이면 상관없이 해도 결과는 한번에 꺼내올 수 있다.라는 정리 또한 다른사람에게 잘 설명할 수 있는 정의 였으며 이후 조금씩 generator로 그동안 구현하였던 함수들을 다시 구현하는 작업도 좋았다. 경험이 일천한지라 나의 생각으로는 generator를 얼마나 사용하나 생각이 들었는데, 구현하는 예시를 확인하고 같이 해보면서 조금은 이해가 되었다.</p><p>이후 즉시병렬 평가는 사실 그 동안 작은 값들만 다룬 경험 때문인지 쉽게 필요성을 느끼지는 못했다. 그러나 이후 많은 데이터를 다루게 된다면 언젠가는 강의에 들었던 내용으로 구현해야 하는게 맞지 않을까 생각한다.</p><p>async await 에서는 역시 짧고 간단한 정의로 async 함수는 Promise를 리턴한다. 값을 리턴하지 않는다. 함수 내에서 값을 처리해야 한다. 다른 함수에서 받아서 사용한다면, then을 사용해야 한다.아니면 즉시 실행함수를 만들어야 한다 라는 정의를 얻을 수 있었다. async await을 한걸음 더 이해할 수 있는 시간이었다.</p><p><strong>정리</strong></p><p>정리하자면 장점은 다음과 같이 정리 할 수 있겠다.</p><ol><li>강의의 예제 코드들이 100% 동작한다. (수강자 입장으로 최고다.)</li><li>설명을 들으면서 같이 코딩해볼 수 있다.</li><li>기능에 대한 정의가 매우 깔끔하다.(면접 답변으로 좋다.)</li><li>강연시간 분배가 적절한 편이다.</li></ol><p>아쉬운 점은 아래와 같다.</p><ol><li>각 강연마다 script를 불러오는 것 보다 import/export 로 하면 좋지 않았을까..</li><li>몇몇 강의의 코드 정리하는 부분에 대한 설명이 그냥 지나가는게 있어서 조금 아쉽다.</li><li>음.. 후반부에서 에러 핸들링 강의를 보다가, 함수형으로 TDD를 어떻게 하지 라는 생각이 들었는데 이건 개인적으로 알아봐야 할 것 같다.</li></ol><p>전반적으로 재미있는 강의였지만, 초급용은 아닌것 같다. 어깨넘어 배운게 없었다면 중도에 포기했을것 같다. (아무것도 모르는 나에게 강의라도 알아 듣게 끔 가르쳐 주셨던 분들에게 정말 감사드린다.)</p><p><strong>총평</strong></p><p>이 강의는 중급이상의 실무자에게 추천한다. 함수형이라는 목적성에 맞는 사람이나 위에 설명한 기능들에 대한 예제를 보고 싶다면 추천한다. 초급자에게는 (나도 초급자이지만) 추천하지 않는다. 초급자에게는 유투브에 있는 Code Spitz 73을 듣고 이 강의를 들으면 그래도 강의 들으면서 괴롭지는 않을 것 같다. (블로그에 후기 있음)</p><p><strong>에필로그</strong></p><p>이번 강의는 예상과 다르게 한달 반을 넘겼다. 건강 문제도 꽤 있었지만 그래도 나름 잘 마무리 한 것 같다. 코딩하면서 남긴 메모들은 유용하게 사용할 수 있을것 같다.</p><p>다음 동영상 강의는 잠깐 들어본 결과 조금 오래 된 영상같은데, 구입한 김에 퍼블리싱 강의를 제대로 한번 들어보고자 한다. 주말에 들을 강연 링크는 아래와 같다.</p><p><a href="https://www.inflearn.com/course/html-css-webazit/">취업을 위해 제대로 배워보는 html과 css, 그리고 웹표준 - 인프런</a></p><p>아쉽게도 이 강의는 후기를 쓰지 않을것 같다. (강의를 다 듣고 인프런에만 댓글 후기를 남길것 같다.) 그래서 다음 블로그 후기는 아래의 책이 될것 같다. 알고리즘 책을 평일동안 하고 있었으나, 잠깐 중단하고 아래 책을 먼저 읽고 난 뒤에 다시 알고리즘 책으로 진행하려 한다.</p><p><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=184747843">초보자를 위한 JavaScript 200제</a></p><p>변명이랄것은 없지만, 알고리즘 책을 그냥 다 외워보려고 하다가 어떻게 하면 코드를 외울 수 있는가에 대한 개인적인 해답을 발견하지 못했다. 그래서 잠시 중단하고 방법을 깨우칠 때까지 위의 책을 읽으며 타이핑 하기로 했다. 어차피 주말에 집에만 있을 것이기 때문에 저번주부터 시작한 Figma로 디자인 습작하기 부터 책과 동영상강의로 주말을 보내기로 했다.</p><p>저번 블로그를 보면서 책과 동영상 강의 선택에 나름대로 기준이 생긴것 같다. 나의 개인적인 기준은 아래와 같다.</p><ol><li>예제 코드가 다 동작 하는가 (의외로 동작 안하는 책들이 있다. 몇몇 책들은 구글링을 하면서 수정해 보는것도 재미있지만, 매 챕터마다 다 틀린 책을 보면 나도 사람인지라 짜증이 난다. 80% 이상은 예제로 나온 결과값들이 나왔으면 좋겠다.)</li><li>제대로 된 정의를 하는가 (한국말도 못 알아들을 수 있다.)</li><li>분량은 적당한가</li></ol><p>이정도 인것 같다. 몇년전과 다르게 좋은 분들이 유투브나 인프런으로 강의를 잘 만들어 주시는것 같다. 책도 몇년전과는 다르게 국내 저자의 책도 거르지않고 볼만한 책들을 만들어 주시는것 같다. 나는 어차피 근본없는 코드몽키이기 때문에 특별한 편견을 가지지 않고 스스로의 시간이 허락하는데로 다 받아들이기로 했다.</p><p>강의만 하는게 아니냐라는 말도 있을것 같은데 하고싶은 프로젝트 주제가 이제 막 생각이 나서 반년정도 정리가 필요하기 때문에 그 시간동안 공부하는것이라 생각하고 있다. (굳이 다른사람에게 설명할 필요 있는가 생각되기도 하지만..)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=48de3f8a06b2" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발 강의 후기]]></title>
            <link>https://medium.com/@timotolkie/%EC%8B%A4%EC%8A%B5-ui-%EA%B0%9C%EB%B0%9C%EB%A1%9C-%EB%B0%B0%EC%9B%8C%EB%B3%B4%EB%8A%94-%EC%88%9C%EC%88%98-javascript-%EC%99%80-vuejs-%EA%B0%9C%EB%B0%9C-%EA%B0%95%EC%9D%98-%ED%9B%84%EA%B8%B0-e5c6a82a06ab?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/e5c6a82a06ab</guid>
            <category><![CDATA[javascript]]></category>
            <category><![CDATA[vuejs]]></category>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sat, 02 Feb 2019 10:33:40 GMT</pubDate>
            <atom:updated>2019-02-02T10:35:46.245Z</atom:updated>
            <content:encoded><![CDATA[<p>믿을 만한 초중급 동영상 강의</p><p>거의 3달만에 블로그 글을 쓰는 것 같다. 뭐든 만들어 보려고 했었지만 막상 뭘 만들어야 할지, 뭐가 재밌을지 생각이 안나서 일단 하고싶은게 생각날 때 까지 그동안 구입한 유료 동영상 강의와 책의 예제를 타이핑 해보고 결과가 잘 나오는지, 오류가 나면 어디가 틀린건지 고쳐보면서 공부해보기로 했다. 그 동안 많은 스트레스에 몸도 많이 상했지만(이에 대해서는 추후 블로그에 쓰기로..) 나름의 힐링이 필요해서 또는 학습방향을 만들어가는 과정이라고 생각하고 일단 시작해 보기로 했다. 2019년이 되면서 시작한 강의는 아래와 같다.</p><h4>실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/768/1*OFqlZio499ba2hXG2T3wJw.png" /></figure><p>링크는 아래와 같다. ( 공부 시작일: 2019년 1월 5일 종료일: 2019년 2월 2일)</p><p><a href="https://www.inflearn.com/course/%EC%88%9C%EC%88%98js-vuejs-%EA%B0%9C%EB%B0%9C-%EA%B0%95%EC%A2%8C/">실습 UI 개발로 배워보는 순수 javascript 와 VueJS 개발</a></p><p>동영상 강의를 구입하는 나름의 기준은 나의 수준에 적절한가, 믿을만한 강의인가 정도인데 가장 큰 비중을 두는것은 (강사가)믿을만한가 이다. 그래서 그런지 유독 유료 구입은 아는사람의 강의가 대부분이다. 직접 대화를 해본사람이거나 같이 공부를 했던 사람이거나, 또는 그사람의 발표라도 들어본 경험이 있으면 구매를 주저하지 않는다. (이러한 기준은 내가 그렇다는것이지 다른사람에게 추천하기 어렵다.) 그리고 한번 강의를 구입하면 해당 강사의 다른 강의도 연속적으로 구매하고 있다. 긴 시간동안 잘 알지도 못하면서 세미나나 스터디에 들어갔었던 경험이 좋은 강사를 찾아내는데 사용되고 있는 것 같아서 그 동안의 시간이 무의미하지는 않았다.</p><p>서론이 길었다. 이제 본격적으로 강의에 대한 이야기를 하자.</p><p>첫번째로 <strong>이 강의는 예제코드 동작율이 100%에 가까웠다. </strong>거의 다 동작하였다. 물론 Git checkout 오류가 조금 있었지만, (style.css 링크를 만들어 내기 위한 ln 명령어를 윈도우에서 어떻게 하는지 몰라서 포기하고 새로운 css 파일을 복사하여 사용하였다. 강의를 듣는 사람들은 이 정도의 꼼수정도는 할 수 있을것이다. ) 대부분 잘 동작하였다. 나는 1년 전인 2018년 부터 책을 읽어가면서 예제를 모두 타이핑해보고 동작을 확인하는 독서방법을 실행하고 있는데, 읽은 책 몇권 중 10%정도는 예제가 동작하지 않는 책들이 있었다. 나는 머리가 좋지 않아 해당 코드의 동작을 책으로만 이해하는데는 어려움을 격는데, 나와 같은 상황의 사람들은 코드 동작을 눈으로 보면서 진행 할 수 있었다.</p><p>두번째로 <strong>요구사항에 따른 개발이 어떻게 이루어지는지 확인 할 수 있다.</strong> 개인적으로 정말 유익한 경험이었다. 물론 동영상 강의처럼 기획하는것이 쉽지만은 않겠으나, 요구사항을 어떻게 정리할 수 있을지 공부도 되었다. 그리고 실제 개발을 어떻게 진행되는지 알 수 있었다. 하나하나 요구사항을 처리하는 과정을 보면서 나는 앞으로 어떻게 해야하는지 다시 생각해보는 시간이 되었다.</p><p>세번째로 <strong>순수 자바스크립트 중 import-export 를 어떻게 사용하고 있는지 공부할 수 있었다.</strong> 물론 라이브러리나 프레임워크를 사용하면 해결되나 아무것도 설치하지 않고 어떻게 사용하는지 예시를 확인 할 수 있었다. 개인적으로는 가장 만족스러운 부분이었다. 지금 내가 가지고 있는 동영상 강의나 책 중에서 아마도 import-export를 제대로 사용한것은 이 강의정도 밖에 없었다. 프레임워크가 아닌 순수 자바스크립트로 먼저 구현을 설명해준 부분이 개인적인 궁금증을 해소 해줄 수 있는 좋은 방안이었다.</p><p>네번째로 <strong>Vue.js를 약간 공부 할 수 있었다. </strong>솔직히 순수 자바스크립트에 더 초첨을 맞춘 느낌이 드는 강의라는 생각이 든다. 그러나 한번도 써보지 못한 Vue.js를 경험해본 것으로는 만족스러운 예제라고 생각한다. 설명도 처음부터 무리하게 설명하지 않고 cdn예제에서 cli예제로 가는 흐름은 이해하기 쉽도록 배려하여 구성한 것 같다.</p><p>다섯번째로는 <strong>강의 시간을 잘 조절한것 같다.</strong> 지치지 않을 만큼의 분량 조절과 파트 구분으로 끝까지 잘 마칠 수 있도록 조절한 것 같다.</p><p>아쉬운 부분이 있다면 우선 MVVM에 대한 설명이 충분히 이해되지 않았다. 물론 이 강의를 듣는다고 완벽하게 이해된다고 기대하지 않았다. 강의입장에서는 최선을 다해 설명해 주었다고 생각하며, 어쩔 수 없는 부분이라고 생각한다. 이 강의 레벨은 초급에서 중급 강의로 수강자가 완벽하게 이해하기는 어려운 수준이라 생각하며 시간을 들여 공부해야 할것 같다.</p><p>두번째로는 윈도우 사용자에 대한 어려움이 있다. 프레임워크 특성 상 npm 에서 설치하는 모듈에 대한 문제는 계속 발생하기 마련인것 같다. 현재 평일에 공부하고 있는 책도 대부분 모듈에서 나오는 오류이고 그 오류를 찾아서 수정하는데 더 많은 시간을 보내기도 하는것 같다. 공부를 계속하면서 역시 mac이 답인가 라는 생각을 몇번 했다. 예를들어 Vue-cli설치에서 mac과는 달리 윈도우 에서는 cli를 설치 한 다음에도 npm을 다시 install해야 하는 경우가 있다. mac에서는 더 쉽게 되었을 상황을 이러한 설치부분을 잘 몰랐기에 헤메는 경우가 생각보다 많았다. 그러나 이건 강의듣는 사람이 아래 댓글(나도 추가하였다.) 을 보고 하면 어느정도는 쉽게 풀어갈 수 있기 때문에 안됀다 싶으면 댓글을 보고 확인하는게 좋을것 같다. 한국어로 된 강의는 이런 부분에서 강점을 보인다.</p><p>세번째로는 Vue.js 기초를 알아야 진행하는데 무리가 없을것 같다. 물론 진행이 되지 않는다는것은 아니지만, 나름 Vue디렉티브를 공부 해야 흥미를 잃어버리지 않고 잘 마무리 할 수 있을것 같다.</p><p>정리하면, 정말 좋은 강의다. 결제한지 1년만에 마무리 하였지만 높은 만족도를 주었다. 주변사람들에게 추천할 만한 강좌라고 말할 수 있다. 동영상 강의 중 포기하지 않고 마지막까지 들은 4번째 강의이다. 수강생을 잘 배려한 강의라고 할 수 있다.</p><p>개인적으로는 Vue.js 도 나쁘지 않은데? 라는 생각을 하게 된 강의인것 같다. 언어나 프레임워크 싸움에는 아예 흥미가 없지만, 뭔지는 알아야 한다는 생각이기 때문에 좋은 경험을 하였다고 생각하였다.</p><p><strong>강연자 김정환님께 정말로 감사하다</strong>는 말로 내용을 마무리 하겠다.</p><p>이번 강의가 끝났으니 이제 다음 주말부터 들어야 할 강의를 결정하였다. 다음 동영상 시청할 강의는 아래 링크와 같다.</p><p><a href="https://programmers.co.kr/learn/courses/7637?utm_source=programmers&amp;utm_medium=banner&amp;utm_campaign=course7637">함수형 프로그래밍과 ES6+ | 프로그래머스</a></p><p>한국어 강의로는 처음으로 인프런 강의 플랫폼을 벗어나게 된다. 특별히 걱정은 하지 않지만, 저번 강의보다 분량도 많고 길기 때문에 지치지 않고 마치길 빌며 느리지만 어떻게든 잘 마무리 할 수 있기를 기원해본다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e5c6a82a06ab" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[싼 가격에 뭐라도 올리고 싶다.]]></title>
            <link>https://medium.com/@timotolkie/%EC%8B%BC-%EA%B0%80%EA%B2%A9%EC%97%90-%EB%AD%90%EB%9D%BC%EB%8F%84-%EC%98%AC%EB%A6%AC%EA%B3%A0-%EC%8B%B6%EB%8B%A4-ac4d5f6e979f?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/ac4d5f6e979f</guid>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sun, 21 Oct 2018 08:16:00 GMT</pubDate>
            <atom:updated>2018-10-21T08:16:00.595Z</atom:updated>
            <content:encoded><![CDATA[<p>예전부터 생각한 것이지만.. 내가 목표로 하는, 사라지지 않는 서비스를 만들는 방법은 그냥 모든 소유권이 나에게 있으면 되지 않을까라는 단순하고도 쉬운 대답이 있었다. 간단한 프로젝트면 소스올리고 끝내면 되지만.. 애초에 그런걸 바라지 않기 때문에 1~2년 정도 시간을 들여 하나 올리는것을 계획으로 잡았다. 그리고 이상하게 생각할지도 모르겠지만 <strong>“구매도 경험” </strong>이라는 생각이 들어 되도록이면 무료 서비스는 쓰지 않기로 생각을 했다. 기획자로 작년과 올해 서버업체와 같이 일해보니 …도메인이나 인증서, 그리고 서버를 직접 해보지 않으면 배우기 어려울 것 같았다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*DBlfgVTXzrQz3EJG6mP8aw.jpeg" /><figcaption>완성에 얼마나 오래 걸릴지는 모르겠지만.. 일단 계획하기로</figcaption></figure><p>그런데 중요한건 이 프로젝트에 쓸 돈이 많지 않다는 것에 있다. 그래서 되도록이면 저렴한 서비스를 이용하기로 해서 아는사람에게 물어도 보고 찾아도 봤다.</p><p>일반적으로 구매가 필요한 서비스는 일단은 나열해 보면</p><ol><li>도메인 비용 : 약 2만원/1년</li><li>SSL인증서 비용 : 약 2만원/1년</li><li>서버 비용 : 약 5만원/1년</li></ol><p>정도로 예상하고 있다. 1년에 10만원 정도가 최대 투자액이라고 할 수 있는데 어차피 개인 용도이기에 고성능의 서버를 사용할 필요는 없다. 하고싶은 게 서버 연결하고 도메인과 인증서도 다 직접 해보는게 목적이므로… 어차피 본업으로 개발이 아닌 일을 하고 있기 때문에 조급하게 할 필요는 없으며 취업하려고 만드는것이 아니기 때문에 느리지만 경험을 해보는 느낌으로 욕심을 내지 않기로 했다.</p><p>도메인과 인증서는 평범한 제품을 사용할것이기 때문에 특별히 고민할 필요는 없다, 다만 어떤 서버를 구매해야 할것인 가라는 고민이 남는데..어차피 로컬에서 만들고 올릴 때 걱정할 것이지만.. 나에게는 매달 나가는 돈이 제일 중요하지 않는가.. 그래서 어느 시점에 얼마만큼의 돈이 필요할거라는 예상은 반드시 필요하다.</p><p>주목한 서비스는 두개 이다. 하나는 AWS lightsail..</p><p><a href="https://aws.amazon.com/ko/lightsail/">Lightsail</a></p><p>이걸 검색하기 전에 주목한 국내 서비스 iwinv</p><p><a href="https://www.iwinv.kr/server/server.html">클라우드 서버 - 서버운영 2,000원 / 월, A사 대비 120분의 1</a></p><p>이 두개서비스이다. 며칠 전 지인의 페이스북 내용으로는 iwinv가 과금에 있어서 상당히 냉정한 스탠스인걸로 봐서 AWS lightsail에 올렸다 내렸다를 반복하는 삽질을 한 다음에 iwinv로 이동할 지 AWS를 사용할 지 결정하는 방향으로 진행해야 할 것 같다. AWS를 사용하다가 한번에 20달러가 나가는 경험을 해서 조금 무섭긴 하지만… 다른 서비스도 검색해보면 너무 비싸서 사용하기 어려운 부분이 있다. 수익이 나는 프로젝트를 하는것도 아닌데 돈을 쏟아 부을 수는 없다.</p><p>최저 스펙으로 봤을 때 두개의 서비스의 가격은 별 차이가 없다. 세금포함해 아마존도 월 4천원 가량일 것이고 iwinv도 마찬가지로 같은 월 4천원의 가격이다. 일년으로 봤을 때 1년 10만원 유지비 목표가 크게 넘어가지 않는다. 앞으로는 다른 사람들은 어떤 서비스를 사용하는지 물어봐야 할것 같고 적은 요금의 좋은 서비스가 있다면 조언을 듣고 고민해봐야 할 것 같다.</p><p>서비스를 올리기 전까지 요금이 오르지 않기를 기원한다.. 제발..</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ac4d5f6e979f" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[PM이나 기획자도 사람인지라]]></title>
            <link>https://medium.com/@timotolkie/pm%EC%9D%B4%EB%82%98-%EA%B8%B0%ED%9A%8D%EC%9E%90%EB%8F%84-%EC%82%AC%EB%9E%8C%EC%9D%B8%EC%A7%80%EB%9D%BC-96c02c9a2f44?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/96c02c9a2f44</guid>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sun, 10 Jun 2018 02:42:08 GMT</pubDate>
            <atom:updated>2018-06-10T02:42:08.460Z</atom:updated>
            <content:encoded><![CDATA[<p>재정비를 해야 할 필요가 있습니다.</p><p>뭐.. 기획자니 개발자니 그런말을 쓰지 않겠습니다. 몇년전부터 있어온 개싸움에 굳에 끼어들 생각도 없습니다. 하고싶은 말은 싸워봐야 어차피 환경은 좋아지지 않습니다. (더 나빠지면 모를까… 그냥 회사를 차리세요)</p><p>이 글에는 개인적인 말만 쓰겠습니다. 일하면서 몸도 많이 망가졌지만, 그동안 가져왔던 생각이 많이 바뀌었으면 하고, 낮아진 기대치들… 어차피 우린 못할꺼야 라는 마음가짐을 버릴려면 얼마간 리프레시 하는 기간이 (1–2주 정도) 필요할 것 같습니다. 그 동안 몇몇 지인들 봤으면 좋겠군요 .. 제 생각 좀 바꿔주세요..</p><p>이전에는 내가 조금만 굽히면 (부탁하면) 어떠냐 프로젝트가 완료되어야 하는데 라는자세였는데… 이제는 그런 자세로 일하는데 한계가 왔습니다. 작업자가 자신이 작업하지 않으면 곤란한 상황이 될거라는 사실을 잘 알고 그것을 어떤 방식이든 이용하려고 하는 자세를 가진사람과는 일할 수 없다는 신념이 생겼습니다. 저는 회사에 출근한 이상, 돈을받은 프로젝트는 완성해야 한다는 생각을 가지고 있지만 그건 니가 신경쓸 문제고 나는 아니다 라는 자세를 가진 사람이 많았습니다.</p><p>경악스러운것은 저보고 왜 매출에 신경을 쓰냐는 이야기를 들었을 때입니다. 매출은 결국 매달 나의 통장에 들어오는 월급인데, 이것을 신경쓰지 않으면 도데체 뭘 신경써야 하는지 정말 이해를 못하겠군요… 아.. 물론 회사는 망해도 본인은 살아남는다는것을 잘 알고 있습니다. 그러나 일단 출근한 사람으로 열심히 일하고 무사히 프로젝트를 마쳐야 하는데 그건 PM사정이고 나는 아니다라는 자세는 정말 괴롭더군요…</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*Qo_OLVmPtc6Lr8LI5tRbZQ.jpeg" /></figure><p>제가 좀 틀렸으면 좋겠습니다. 그리고 기획자니 개발자니 싸움하는것을 보면 솔직히 부럽습니다. 저는 여유로 보였습니다. 돈벌어야죠.. 이상이건 뭐건간에 경영자는 우리가 만든 SW로 돈벌어야 하고 우리는 만들어야 할것 아닌가 싶은데..</p><p>또한 일부 개발자들이 말하는것처럼 저도 기획자가 필요없이 개발이 되는 세상이 오면 좋겠습니다. 그럼 누군가는 고객과 직접 만나고, 누군가는 화면을 그리고, 누군가는 프로세스를 만들겠죠.. 그런거 없어도 되는 프로젝트는 애초에 기획자가 들어가는 경우가 거의 없다고 생각됩니다. 개인적인 생각이지만 그런거 없는 프로젝트 들어가면 진짜 할일이 없거든요 그런프로젝트를 끝까지 들어가게 해주는 회사는 많지 않을것입니다.</p><p>기획자가 없는 회사라면 누군가는 개발 할 수 있는 무언가를 <strong>“정해” </strong>주는 사람이 있거나 아니면 작업자 스스로 정하는 회사일거라 믿습니다. 진심으로 잘 되었으면 좋겠네요.. 농담이 아니라 진심입니다.</p><p>저는 이제는 아.. 우린안됄꺼야 라는 생각들을 바꿔줄 누군가의 대화가 필요할 것 같습니다. 2017년에서부터 2018년 상반기까지 격어온 일들을 보면 정말 암울하기만 하고 여러가지 생각이 들기도 합니다. 그래서 다른사람들은 어떻게 일하는지, 다른 환경에서 저와 같은 경우 어떻게 생각하는지 의견을 들어보고 싶습니다.</p><p>그리고 다음 회사를 갔을때는 면접에서 제가 그동안 일해오면서 느낀것을 솔직하게 말하고 싶습니다… 면접자리에서 우리는 그런 회사가 아니다 라는 이야기를 들었으면 좋겠습니다.</p><p>일단 저는 2018년 6월 12일부터 6월 15일까지 전화기를 꺼놓고 휴식을 위한 여행을 떠납니다. 정신적 스트레스가 몸 상태까지 영향을 미치더군요.. 그동안 쓰러지지 않으려고 열심히 먹어서 버텨냈지만 저도 사람인지라 나이먹고위기감이 느껴지더군요..아무생각 안하고 쉬려고 합니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=96c02c9a2f44" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[구글 번역기로 외국업체와 소프트웨어 라이센스 계약하는 법]]></title>
            <link>https://medium.com/@timotolkie/%EA%B5%AC%EA%B8%80-%EB%B2%88%EC%97%AD%EA%B8%B0%EB%A1%9C-%EC%99%B8%EA%B5%AD%EC%97%85%EC%B2%B4%EC%99%80-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4-%EA%B3%84%EC%95%BD%ED%95%98%EB%8A%94-%EB%B2%95-d926a31d1b05?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/d926a31d1b05</guid>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sun, 03 Jun 2018 14:09:34 GMT</pubDate>
            <atom:updated>2018-06-03T14:09:34.435Z</atom:updated>
            <content:encoded><![CDATA[<p>번역기 사용의 소소한 팁</p><p>안녕하세요 오래 전 구글번역기로 개발 책 번역하는 방법에 대한 글에 이어 이번에는 구글 번역기를 사용하여 외국 업체와 라이센스 계약을 하는 방법에 대하여 알아보도록 하겠습니다. 이 방법은 제가 <a href="http://chartiq.com">http://chartiq.com</a> 과 라이센스 계약을 하기 위하여 진행한 방법이며 이것이 모든 외국과의 계약의 정석은 아닙니다. 저는 다만 회사 내 영어에 익숙한 사람이 없기 때문에 (도와줄 사람이 없기 때문에) 이 방법을 사용할 수 밖에 없었습니다. 이 방법을 사용한 이유는 다음과 같습니다.</p><ol><li>외국 회사의 경우 사기를 피하기 위하여 정해진 시간에 스카이프를 이용한 통화나 화상 채팅을 사용하는 경우가 있습니다.</li><li>당연히 저는 영어를 할 줄 모르기 때문에 이 부분에 대해 양해를 구했습니다.</li><li>이 부분에 대하여 저는 회사의 웹페이지와 소개를 제출하였고 해당 미국 회사는 회사의 홈페이지를 방문하여 확인하였습니다.</li><li>계약을 진행할 때 저는 이전 회사에서 인보이스 및 외국(달러) 입금에 어느정도의 지식이 있었습니다.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*7FWthm1xetfPShafj2Igew.png" /></figure><p>계약 의사를 보낸 후 이메일로 대화를 하기 시작하였습니다. 구글 번역기를 사용해서요.. 구글 번역기를 사용할 때 다음과같은 법칙을 적용하면 됩니다.</p><ol><li><strong>공손한 표현을 삭제한다.</strong></li><li><strong>명령형 문장을 사용한다.</strong></li><li><strong>명사를 연결하는 필수적 부분을 제외하고 조사를 제외한다.</strong></li><li><strong>형용사나 단어를 꾸미는 말들을 가급적 배제한다.</strong></li></ol><p>아주 간단한 법칙입니다. 다시말에 이런 말을 쓰는것이죠</p><p><strong>한국어 표현 : 죄송하지만, 저는 라이센스를 2개 계약하고 싶습니다.</strong></p><p><strong>구글번역기에 적는 표현 : 나는 라이센스 2개 산다</strong>.</p><p>보면 뭐.. 이래? 라고 생각할 수 있겠죠? 의외로 정말 간단합니다. 그냥 정확하게 의사만 전달하겠다. 라는 생각으로 한국어로 작성하시고 영문으로 번역 버튼을 누르시면 됩니다.</p><p>또한 명사에 대해서도 직접적인 명사를 사용하면 됩니다. 굳이 계약이라는 표현을 사용하지 않아도 잘 알아듣더군요.. 그냥 산다, 판다.. 등으로 간단하게 의사표현위주로 하면 됩니다.</p><p>물론 긴 문장이 될 경우 저번 글 처럼 문장단위와 띄어쓰기를 잘 확인하여 번역기가 잘 번역할 수 있도록 넘겨주는게 좋습니다. <strong>마지막으로 번역이 완료 되었다고 생각할 때 다시 한글과 영문의 번역 위치를 바꾸어서 한글로도 잘 표현되는지 확인하셔야 합니다. (여기서의 표현은 반드시 “의사전달”에 집중하셔야 합니다.)</strong></p><p>자.. 이제 글을 읽으시는 분들은 절반은 성공한 것입니다. 이제는 외국업체에서 정말 여러가지 물어볼 겁니다. 너는 누구냐, 어떤 서비스를 하려고 하느냐 등등 정말 많이 물어봅니다. 그들도 위험성에 대비하려고 하는 것이겠죠.. 전에 말씀드린 번역기 사용법으로 잘 번역하시고 간단하게 질문에 답변 해 주면라이센스 키를 얻을 동안 테스트 할 수 있는 무료 테스트 버전을 줍니다.</p><p>자, 이제는 개발 할 수 있는 시간을 벌었으나 실제 서비스 런칭을 하려면 테스트 키 가지고는 어렵습니다 . 이젠 진짜 라이센스 계약을 해야 하죠.. 그러러면 흔히 업체들이 가지고 있는 방법은 두가지 입니다. 하나는 카드결제 그리고 또 하나는 인보이스를 통한 결제 방법입니다.</p><ol><li>적은 금액의 경우 카드결제를 추천합니다. 상대방이 빠르게 확인가능하니까요</li><li>큰 금액의 경우(100 만원 이상) 인보이스를 통한 입금 방식을 하시는것을 추천합니다. 저의경우 한번에 내야 할 돈이 500만원 이상이었기 때문에 당연히 카드로 사용이 어려웠습니다.</li></ol><p>인보이스로 진행하는것을 선택하면 상대가 인보이스 발급까지 대략 일주일 가량 걸립니다. 그동안 저는 은행에 들려 외환 송금을 위한 서류를 준비합니다. 요즘은 조건이 까다로워져서 재무재표와 대표자확인 등 여러가지 서류가 필요합니다. 당연히 미리 은행에 다녀와서 준비하는것이 좋습니다. 서류준비도 1–2일이 필요하기 때문입니다.</p><p>일주일 정도가 지난 후 상대방으로부터 인보이스가 도착합니다. 회사에 따라 송금 프로그램을 보내주기도 하는데 대개 원할한 송금이 되는적을 경험해 본 적이 드뭅니다. 그걸 해결하려고 일주일을 송금 프로그램 회사와 대화하는데 사용하였지만.. 결국 오류만 났었습니다.</p><p>송금을 하기 위한 정보는 Routing Number, SWIFT Code,Bank account 가 필요합니다. 왠만한 회사는 메일로 PDF로 줍니다. 안주는 회사는 본적이 없습니다. 자.. 이제 거의 다 끝났습니다. 다시 은행으로 가서 외환 송금 코너에 앉아 필요한 서류와 함께 입금을 하면됩니다. 은행 입금 시 대표자가 직접가야 하거나 위임장을 써야하니 회계담당자가 직접 진행하도록 하시는게 좋습니다.</p><p>입금이 완료되면 은행에서 주는 입금표를 스캔한 다음 메일로 라이센스 계약담당자에게 이메일을 보내면 라이센스 키를 발급하는것으로 계약이 종료됩니다. 이 과정이 저는 1개월 정도 소요되었습니다.</p><p>여기서 제가 깨달은것이 있습니다.</p><ol><li>외국애들도 사람입니다. 영어못하는거 이해해 줍니다.</li><li>이메일 말미에 고맙다는 표현을 자주 쓰세요</li><li>그들도 돈이 달린것이기 때문에 상당히 친절하게 해줍니다.</li><li>송금 프로그램 쓰지마세요 정말 머리아픕니다.</li><li>송장받아 입금하는 방식을 추천합니다.</li></ol><p>마지막으로, 이렇게 거래를 성공한다고 해도 영어가 필요없다는 말이 절대로 아님을 말씀드립니다. 저는 영어를 못하지만 담당하게 된(지금도 왜 제가 이걸 담당하게 되었는지 이해할 수 없지만) 업무였기 때문에 어쩔 수 없는 부분이었지, 영어는 정말로 필요합니다. 회사 내 영어를 잘 하는 사람이 한명이라도 있었다면 이런 일은 없었을 것입니다.</p><p>그럼 여러분은 저와 같은 상황에 마주치지 않으시기를 간절히 빌면서 이 글을 마치겠습니다. 별거아닌 글 봐주셔서 감사합니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d926a31d1b05" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[회원가입해서 어따 씁니까]]></title>
            <link>https://medium.com/@timotolkie/%ED%9A%8C%EC%9B%90%EA%B0%80%EC%9E%85%ED%95%B4%EC%84%9C-%EC%96%B4%EB%94%B0-%EC%94%81%EB%8B%88%EA%B9%8C-921a5c00ceb8?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/921a5c00ceb8</guid>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sun, 04 Mar 2018 07:08:17 GMT</pubDate>
            <atom:updated>2018-03-04T07:08:17.037Z</atom:updated>
            <content:encoded><![CDATA[<p>아이디는 어디다 쓰일까 생각해보기</p><p>회원가입 시 사용자가 작성하는 아이디가 어디에서 사용될지 생각해봅시다. 대부분의 회원가입은 이메일로 사용되고 있습니다. 우선 이메일로 회원가입을 하는 이유는 추측하건데 여러가지 이유가 있습니다. 첫번째로 가입확인 이메일로 가입 인증을 보내는 데 쓰이게 됩니다. 물론 가입자가 진짜 사용 목적으로 가입하였는지 확인하는 방법은 여러가지가 있지만 가장 처음의 관문으로 가입과 동시에 인증을 하는 수단으로 사용합니다.</p><p>인증 후에 회원가입하면 로그인 시 사용했던 이력에 대한 데이터를 가져옵니다. 대표적인 것으로 하면 장바구니에 넣었던 상품이나, 구매 완료한 상품에 대한 정보를 가져오는것입니다.</p><p>그렇다면 장바구니와 구매 완료에 대한 테이블이 별도로 존재하여 아이디에 연결되어야 합니다.</p><p>서비스 이용에서 끝나는 것이 아니라 아이디로 검색한 제품에 대한 관련성을 찾아 비슷한 제품을 추천하기 위해서 메일서비스와 연결되어야 합니다. 그렇다면 메일을 보낼 때 분류하는 기준도 필요합니다. 주문한 서비스를 확인하고 비슷한 상품을 보여주면 메일을 확인 할 수 있고 재구매율을 올릴 수 있습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*aMlw5Z3EN950koxWOJdneg.png" /></figure><p>또한 상품을 구매 결정 후 배송까지 과정을 알려주는 역할에도 사용됩니다. 상품의 배송에 따라 알려줘야 할 때 로그인한 사람이 구매 결정을 한 상태인지 확인하고, 그 상황에서 어떤 단계인지 보여주고 그 단계마다 메일이나 필요하면 카톡 등 다른 방법으로 상태를 알려주는 기능이 존재한다고 말할 수 있습니다. 이렇게 되어야 한다면 아이디와 고객에게 연락을 줄 수 있는 메일이나 카톡 서비스도 연결이 되어야 하겠네요.. 그 부분 또한 별도로 고려되어야 합니다. 당연히 입출금 기록이나 그외 서비스과정이 필요하면 그에따라 결정해야 합니다.</p><p>하나 더 생각해 보면, 서비스 이용 중 비밀번호를 변경할 때 사용됩니다. 물론 비밀번호는 암호화 되어야 하지만 그건 여기서 논외로 하고 해당 서비스의 비밀번호를 변경 할 때아이디를 기준으로 비밀번호를 변경하고 변경된 비밀번호를 저장하여 다음 로그인 시 변경된 비밀번호로 접속되도록 합니다.</p><p>한발 더 들어가 보면 고객센터에서 문의를 남길 경우 문의한 사람이 누군지 알아야 관리자가 대응 할 수 있습니다. 이 과정에서도 당연히 회원 아이디가 사용됩니다. 그래야 제대로 된 피드백이 갈 수 있기 때문입니다. 비슷한 맥락으로 상품 평을 남길 때 누가 남겻는지 사용자 페이지에알 수 있도록 할 때도 필요하겠네요.. 물론 여기에는 상품평과 함께 점수도 남길 수 있도록 해야겠습니다. 이것을 모아서 관리자가 한번에 확인하여 분석 할 수있도록 하는것도 운영에 큰 도움이 될것 같습니다.</p><p>만약 자체 포인트를 이용하는 서비스를 생각하고 있다면 포인트 또한 아이디에 따라 관리가 되어야 할것 같습니다. 어떤 회원이 어느 정도의 포인트를 가지고 있고 그것을 어떻게 써야 할지는 나중에 이야기 하겠지만 우선은 포인트를 기록해야 한다고만 정의해 놓겠습니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=921a5c00ceb8" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[작은 쇼핑몰을 만들어보기]]></title>
            <link>https://medium.com/@timotolkie/%EC%9E%91%EC%9D%80-%EC%87%BC%ED%95%91%EB%AA%B0%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B4%EA%B8%B0-a2ebb487fb33?source=rss-3bdb243d6ef------2</link>
            <guid isPermaLink="false">https://medium.com/p/a2ebb487fb33</guid>
            <dc:creator><![CDATA[진영화(jin young hwa)]]></dc:creator>
            <pubDate>Sat, 24 Feb 2018 08:46:28 GMT</pubDate>
            <atom:updated>2018-02-24T08:48:59.592Z</atom:updated>
            <content:encoded><![CDATA[<p>일단 계획부터 세우고 도움을 요청하자</p><p>폭풍의 3월이 남아있긴 하지만, 지난 한달과 달리 주말 정도는 이제 쉴 수 있게 되었습니다. 원래 주말에 나오지 말아야 하지만 이번 일로 사람에 대해 배울 수 있었고 직장 동료에 대해 거리감을 두는 법도 배우게 되었습니다.</p><p>이제 주말에는 그동안 못 읽던 책을 읽고, 코딩도 하고 미뤄두었던 동영상 강좌도 듣는 당분간 이러한 루틴으로 살아가야 할 것 같습니다. 또한 이제는 가족이 빌려준 PC가 아닌 완전한 저의 것을 하나 구입하였기 때문에 더 많은 시도를 할 수 있을 것 같습니다. 그래서 일정한 시간을 할애하여 무언가를 해 보기로 한 결과 작은 쇼핑몰을 한번 만들어 보기로 하였습니다.</p><p>그까이꺼 대충 하면 되지 않겠나.. 라는 분이 있을지도 모르지만, 저의 기획자 생활동안 포탈에서부터 에이전시와 금융권 등의 경험이 있었지만 쇼핑몰 기획은 재능마켓 정도밖에 해본적이 없습니다. 제대로 된 쇼핑몰 경험은 없다고 봐야 합니다. 그래서 기획에서 많은 시간을 보낼 각오를 하고 있습니다. 단순한 토이프로젝트가 아니라 기획서만 가지고 외주를 맡겨서 개발이 완료 될 수 있을 만큼 기능정의와 기획을 잘 만드는 것을 목표로 합니다.</p><p>그러면, 경험도 없는 주제에 어떻게 기획을 제대로 할 수 있을까를 보장 할 수 있느냐 라는 질문이 따라옵니다. 당연한 질문입니다. 그래서 저는 그동안 쌓아온 인맥의 도움을 받기로 하였습니다. 우선 제가 아는 기획자 중 자신있게 뛰어난 사람이라고 말할 수 있고, 대형 쇼핑몰 경험이 있는 기획자의 자문을 받기로 하였습니다. 제가 문서를 어느정도 완성 해 가면 시간있을 때 만나 코치를 받고 의견을 교환하는 방법이 될 것 같습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/960/1*JiEa5e5PjGN4JXv___O0fQ.jpeg" /><figcaption>물론 맨입으로 부탁하지 않습니다.</figcaption></figure><p>블로그를 올리는 이유는 두가지 목적이 있습니다. 프로젝트를 흐지부지 하지 않기 위한 목적이 첫번째이고, 기획서의 일부를 공개하여 다른 생각을 가진 분들과 의견을 나누려는 목적도 있습니다.</p><p>물론 기획서 전부를 온라인에 공개하지 않을 생각입니다. 궁금하신 분들이 있을지는 모르지만, 오프라인에서 얼굴보고 내용을 알고 싶으신 목적을 확인해야 알려드리고 설명하려고 합니다. 관심없으실지도 모르지만 그건 별로 상관하지 않습니다.</p><p>기획서의 목표는 다음과 같습니다.</p><ol><li>기획서를 완성했다고 생각하는 시점은 별도의 코멘트 없이 개발을 진행 할 수 있을 정도의 수준을 가진 문서의 수준을 말합니다.</li><li>기획서를 쓰기전에 궁금한 점이나 생각들을 블로그에 공유할 생각입니다. 기획서 일부는 온라인에 공개하지만 전부를 공개하지는 않습니다. 굳이 보고싶으신 분들은 오프라인에서 만나서 공개하고 의견을 나누겠습니다.</li><li>일차적으로 주변 기획자들의 조언을 받아 기획서를 만들어 가고 나중에 최종적으로는 개발자들에게 컨펌을 요청하거나 필요하다면 유료로 검토를 진행할 생각입니다.</li><li>기한은 신경쓰지 않습니다. 적당한 수준을 바라지도 않고 많은 검토와 시간이 필요한 과정이라 생각합니다.</li><li>기획서를 쓰고 기회가 된다면 그것을 혼자서 구현하는것이 꿈이지만, 굳이 그런 부분까지 신경쓰지 않기로 생각했습니다. 진짜 이것이 제가 필요하다면 멘토분께서 조언해 주신 말씀에 따라 외주로도 맡길 정도가 되어도 상관없는 부분이라 생각합니다.</li></ol><p>훌룡한 개발자나 이끌어 주시는 분들이 쓰는 블로그와는 달리 이번 블로그는 순수하게 저 자신을 위한 글들일 겁니다. 부족한 저는 남을 이끌어주는 수준에는 이르지 못하여 자신만을 위한 글을 쓸 수 밖에 없을 것 같습니다. 개인적인 생각으로는 미지의 영역에 대한 두려움에서 출발한 프로젝트 입니다. 공부에 대한 거부감이 있는것은 아니지만, 제가 모르는 현업에서 이루어지는 프로세스들을 고민해보는 과정이라 생각됩니다.</p><p>그럼 다음 글에는 회원가입과 아이디 그리고 제품번호에 대한 이야기를 주제로 글을 작성해 보도록 하겠습니다. 꾸준하게 글을 쓸 수 있도록 앞으로의 날들이 큰 문제가 없는 날들로만 이루어 지길 기원하며 이 글을 마칩니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a2ebb487fb33" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>