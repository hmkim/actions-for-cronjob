<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>박상권의 삽질블로그</title>
<link>https://gun0912.tistory.com/</link>
<description>누구나 할 수 있는 일을 
누구도 할 수 없을 만큼 하는가</description>
<language>ko</language>
<pubDate>Sun, 12 May 2019 23:02:05 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>박상권</managingEditor>
<image>
<title>박상권의 삽질블로그</title>
<url>http://cfile25.uf.tistory.com/image/251F6B4C558E627E26807B</url>
<link>https://gun0912.tistory.com</link>
<description>누구나 할 수 있는 일을 
누구도 할 수 없을 만큼 하는가</description>
</image>
<item>
<title>[안드로이드]CLEARTEXT communication to XXXX not permitted by network security policy</title>
<link>https://gun0912.tistory.com/80</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;width: 350px; height: 205px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99EB2D3B5C0CFE5704&quot; filemime=&quot;image/jpeg&quot; filename=&quot;HTTP-To-HTTPS.png&quot; height=&quot;205&quot; style=&quot;width: 350px; height: 205px;&quot; width=&quot;350&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&quot;CLEARTEXT communication to XXXX not permitted by network security policy&quot;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;어느날 코드를 바꾼게 없는데도 위와 같은 오류가 발생하면서 앱이 실행이 안되는 일이 발생합니다.&lt;/p&gt;&lt;p&gt;그 이유는 여러분 혹은 사용자폰의 OS가&amp;nbsp;안드로이드 9.0 파이(Pie)이기 때문입니다.&lt;/p&gt;&lt;p&gt;그리고 &lt;b&gt;여러분이 사용하는 API주소, 이미지주소 등 네트워크 경로가&amp;nbsp;https가 아닌 http로 되어 있기 때문&lt;/b&gt;입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;안드로이드 9.0 파이에서는 https를 사용하도록 강제합니다.&lt;/p&gt;&lt;p&gt;주소가 http인경우 위와같은 에러메세지가 발생하게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://android-developers.googleblog.com/2018/04/protecting-users-with-tls-by-default-in.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Protecting users with TLS by default in Android P&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://developers-kr.googleblog.com/2018/08/introducing-android-9-pie.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;그외 안드로이드 9.0 파이에서 추가/변경된 내용 살펴보기&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2018.12.09 기준으로 아직 안드로이드 9.0 파이버전이 정식배포되지 않아서 이 오류를 발견하신분들은 많지&amp;nbsp;않을것입니다.&lt;/p&gt;&lt;p&gt;지금까지 우리는 마시멜로우, 오레오 등으로 OS를 업데이트할때마다 여러 이슈들에 맞닥뜨린 경험이 많았습니다.&lt;/p&gt;&lt;p&gt;그래서 저는 파이버전이 미리 배포되기전에 직접 제 폰을 업데이트해서 앞으로 발생할 이슈가 없는지 체크해보았습니다.&lt;/p&gt;&lt;p&gt;(삼성 멤버스앱에서 베타 프로그램에 가입하면 파이버전으로 업데이트해서 테스트해볼 수 있습니다.)&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;해결방법1&lt;/h1&gt;&lt;p&gt;아주 간단합니다.&lt;/p&gt;&lt;p&gt;현재 앱안에서 사용중인 &lt;b&gt;네트워크 주소를 http -&amp;gt; https 로 변경&lt;/b&gt;하세요.&lt;/p&gt;&lt;p&gt;그럼 더이상 바꿀 코드가 없습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;h1&gt;해결방법2&lt;/h1&gt;&lt;p&gt;물론 1번 방법으로 간단하게 변경할 수 없는 경우가 있습니다.&lt;/p&gt;&lt;p&gt;서버에서 아직 https로 구성되어 있지 않은경우에는 어쩔수없이 http로 사용해야합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럴때는 &lt;b&gt;해당 서버주소를 http여도 실행되도록 허용해주도록 설정&lt;/b&gt;해줍니다.&lt;/p&gt;&lt;p&gt;res/xml 에 아래와 같은 xml파일을 만들어 줍니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;res/xml/network_security_config.xml&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;xml version=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;1.0&quot; &lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;encoding=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;?&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;network-security-config&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;    &amp;lt;domain-config &lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;cleartextTrafficPermitted=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;        &amp;lt;domain &lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;includeSubdomains=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;font color=&quot;#a9b7c6&quot;&gt;api.xxx.com&lt;/font&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;/domain&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;    &amp;lt;/domain-config&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;/network-security-config&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;그리고 Manifest에 이 xml파일을 config파일로 지정해줍니다.&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); color: rgb(169, 183, 198); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&lt;br class=&quot;Apple-interchange-newline&quot;&gt;&amp;lt;application&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;...&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(152, 118, 170);&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;:networkSecurityConfig=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;@xml/network_security_config&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;h1&gt;해결방법 2-1&lt;/h1&gt;&lt;div&gt;위의 방법은 특정 주소를 허용가능하도록 설정하지만 그렇지 않은 상황인 경우도 있습니다.&lt;/div&gt;&lt;div&gt;예를들면, 우리 서비스가 아닌 특정 사이트나 특정 이미지 경로를 외부를 통해서 가져오게 되는데 이는 우리가 컨트롤 할 수 없는 부분이기 때문에 어쩔수없이 http주소를 사용해야 하는 경우도 있습니다.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;그럴땐 위의 res/xml/network_security_config.xml에서 &lt;b&gt;모든 경로가 허용되도록 설정&lt;/b&gt;해줍니다.&lt;/div&gt;&lt;div&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;xml version=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;1.0&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;encoding=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;?&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;network-security-config&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;base-config &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;cleartextTrafficPermitted=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;true&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/network-security-config&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;h1&gt;해결방법3&lt;/h1&gt;&lt;p&gt;위의 방법보다 더 간단한 방법도 있습니다.&lt;/p&gt;&lt;p&gt;Android Manfest에서 &lt;b&gt;usesCleartextTraffic를 true로 설정&lt;/b&gt;합니다.&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;application&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;    &lt;/span&gt;&lt;font color=&quot;#9876aa&quot;&gt;...&lt;/font&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(152, 118, 170);&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;:usesCleartextTraffic=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;이 방법이 2번의 방법보다 훨씬 간단한데 어떤점에서 안좋은게 있는것인지는 아직 알 수 없습니다.&lt;/p&gt;&lt;p&gt;혹시 3번의 방법의 단점을 아시는분은 댓글로 알려주시면 감사하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;구글님 저희가 잘못했습니다.. 어린양을 괴롭히지 말아주세요..&lt;/p&gt;&lt;p&gt;안드로이드 기기의 파편화만으로도 대응하기 너무 힘든데 API레벨 OS별로 대응을 하도록 하지 않도록 도와주세요.&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;하지만 우린&amp;nbsp;답을 찾을것이다. 늘 그랬듯이&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 572px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/991DF63B5C0CFE260A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;d747477a73baabb5a96020d67825429f8345e680105da214f5c49dc56c5715ceecffd938868c27a1838bb5d3e24b339b4d8d724aa370ef33521598cf161c0c0bee7c637c0278788259c34ed34bf355a9.jpg&quot; height=&quot;572&quot; style=&quot;width: 400px; height: 572px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(&amp;nbsp;&lt;a href=&quot;http://gun0912.tistory.com/79&quot; target=&quot;_blank&quot;&gt;[IT/Android-TIP (한글)] - [안드로이드]Only fullscreen opaque activities can request orientation&lt;/a&gt;&amp;nbsp;과&amp;nbsp;중복주의)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그럼 모든 안드로이드 개발자분들의 정신건강을 응원합니다.&lt;/p&gt;&lt;p&gt;피쓰.&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/80</guid>
<comments>https://gun0912.tistory.com/80#entry80comment</comments>
<pubDate>Sun, 09 Dec 2018 20:39:49 +0900</pubDate>
</item>
<item>
<title>[안드로이드]Only fullscreen opaque activities can request orientation</title>
<link>https://gun0912.tistory.com/79</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 225px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/998875355B4DE0D238&quot; filemime=&quot;image/jpeg&quot; filename=&quot;993D2D495A76E41A1E.jpg&quot; height=&quot;225&quot; style=&quot;width: 400px; height: 225px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;b&gt;&quot;Only fullscreen opaque activities can request orientation&quot;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 오류 메세지는 갈길바쁜 저희를 힘들게 만듭니다.&lt;/p&gt;&lt;p&gt;이 문장으로 검색하신분들은 대부분 targetSdkVersion을 26이상으로 올리기위한 작업을 한뒤에 이 오류를 받아보셨을 것입니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;b&gt;더 정확히는 targetSdkVersion를 27이상으로 설정했을경우 문제가 발생합니다.&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:550px;width: 550px; height: 260px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/994D3C395B4E0F651B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 7월 18 00-20-26.png&quot; height=&quot;260&quot; style=&quot;width: 550px; height: 260px;&quot; width=&quot;550&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;이 오류는 왜 발생하는가&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;여러가지 이유로 투명한 Activity를 만들기위해서 style.xml에 android:windowIsTranslucent를 사용합니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;AppTheme.Transparent&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;parent=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/TransparentBase&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;item &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android:windowIsTranslucent&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/item&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/style&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;문제는 이&amp;nbsp;android:windowIsTranslucent로 인해서 발생합니다.&lt;/p&gt;&lt;p&gt;API 26(8.0) SDK에서 아래와 같은 코드가 추가되었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:782px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99B41E445B4DE7AF18&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 7월 17 21-54-36.png&quot; height=&quot;387&quot; width=&quot;782&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위의 내용은 아래 파일에서 직접 확인가능 합니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://android.googlesource.com/platform/frameworks/base/+/android-8.0.0_r36/core/java/android/app/Activity.java#986&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Activity.java&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;API26에서는 Translucent/Floating 으로 만든 투명한 Activity들은 화면 회전고정을 하지 못하게 의도한 것입니다.&lt;/p&gt;&lt;p&gt;아래 commit 메세지에서 위와같은 코드를 추가한 것입니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://android.googlesource.com/platform/frameworks/base/+/39791594560b2326625b663ed6796882900c220f&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://android.googlesource.com/platform/frameworks/base/+/39791594560b2326625b663ed6796882900c220f&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;strike&gt;이 이슈덕분에 안드로이드 버전별 SDK코드도 다 까보고 commit 메세지까지 다 확인해보고 내가 구글 안드로이드 개발자가 된 기분은 개뿔&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;&lt;strike&gt;&lt;br /&gt;&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;이와 같은 히스토리로 인해서 우리는 에러를 만나게 되었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;병주고 약주고&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Google 개발자들도 이건 아니다 싶었는지 API 27(8.1)에서는 이 코드를 삭제해 버렸습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99097F3F5B4DE98203&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 7월 17 22-04-55.png&quot; height=&quot;355&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://android.googlesource.com/platform/frameworks/base/+/d4ecffae67fa0dea03c581ca26f76b87a14be763%5E%21/&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://android.googlesource.com/platform/frameworks/base/+/d4ecffae67fa0dea03c581ca26f76b87a14be763%5E%21/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;API 27(8.1)기기 이후부터는 windowIsTranslucent을 사용해도 오류를 발생시키지 않게 됩니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;즉,&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; 이 오류 메세지는 API 26(8.0) 기기에서만 발생합니다.&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;대처하기&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;1. targetSdkVersion 26미만으로 내리기&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;build.gradle에서 targetSdkVersion을 26으로 내려버리면 이 문제는 발생하지 않습니다.&lt;/p&gt;&lt;p&gt;(참고로 targetSdkVersion를 올렸다가 내리는건 23-&amp;gt;22만 불가능하고 다른경우에는 가능합니다.)&lt;/p&gt;&lt;p&gt;하지만 이방법은 임시방편일뿐 올해안에 언젠가 다시 또 그이상으로 올리도록 대응을 해야하기 때문에 &lt;b&gt;추천하지 않습니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;2.&amp;nbsp;Orientation 주지 않기&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;1) xml&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Manifest파일에 스크린을 고정하기위해&amp;nbsp;android:screenOrientation=&quot;portrait&quot; 을 넣으셨을겁니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;activity &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.MainActivity&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:screenOrientation=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;portrait&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:theme=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/AppTheme.Transparent&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;여기에서 android:screenOrientation=&quot;unspecified&quot; 로 설정해주시면 가로/세로 고정을 지정하지 않기때문에 에러가 발생하지 않습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:screenOrientation=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;unspecified&quot;&lt;br /&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;2) Java&lt;/span&gt;&lt;/p&gt;&lt;p&gt;만약 가로/세로 고정을 Java코드에서 BaseActivity에서 아래와 같이 항상 고정을 하도록 구현하신분들도 계실겁니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;setRequestedOrientation(ActivityInfo.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;SCREEN_ORIENTATION_PORTRAIT&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;이러한 경우에는 투명Activity로 구현해야하는 부분에서 setRequestedOrientation() 함수를 override해서 no-op 처리해주면 됩니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;color:#bbb529;&quot;&gt;@Override&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;setRequestedOrientation&lt;/span&gt;(&lt;span style=&quot;color:#cc7832;&quot;&gt;int &lt;/span&gt;requestedOrientation) {&lt;br /&gt;   &lt;span style=&quot;color:#808080;&quot;&gt;/*&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O) {&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        // no-op&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    }else{&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;        super.setRequestedOrientation(requestedOrientation);&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    */&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;if &lt;/span&gt;(Build.VERSION.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;SDK_INT &lt;/span&gt;!= Build.VERSION_CODES.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;O&lt;/span&gt;) {&lt;br /&gt;        &lt;span style=&quot;color:#cc7832;&quot;&gt;super&lt;/span&gt;.setRequestedOrientation(requestedOrientation)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;    &lt;/span&gt;}&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;대부분의 개발자들이 이 방법으로 해결하셨을겁니다.&lt;/p&gt;&lt;p&gt;제가 만든 오픈소스 라이브러리들에서 Proxy Activity개념으로 동작하는 투명한 액티비티들에도 이 방법으로 해결했습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/TedRxOnActivityResult/pull/6&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/TedRxOnActivityResult/pull/6&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/TedPermission/pull/74&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/TedPermission/pull/74&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;단, 화면회전에 대한 고정을 하지 않았기 때문에 사용자가 기기를 회전하는 것에 대해 이슈가 없는지 꼭 테스트를 해보아야 합니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;3. try/catch&lt;/span&gt;&lt;/p&gt;&lt;p&gt;만약 2번에서 2번째 방법인 BaseActivity에서&amp;nbsp;setRequestedOrientation()로 고정해주고 있다면 해당 코드만 try/catch로 처리해줍니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;try &lt;/span&gt;{&lt;br /&gt;    setRequestedOrientation(ActivityInfo.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;SCREEN_ORIENTATION_PORTRAIT&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;} &lt;span style=&quot;color:#cc7832;&quot;&gt;catch &lt;/span&gt;(IllegalStateException ignore) {&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;이렇게 처리해주면 투명한 Activity에서 에러가 발생하더라도 이를 무시하고 투명한 화면을 보여줄 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;4. API 26에서만 windowIsTranslucent 안쓰기&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위에서 말씀드렸던것처럼 이 이슈는 오직 API 26(8.0)기기에서만 문제가 발생한다는것을 기억하실 겁니다.&lt;/p&gt;&lt;p&gt;이를 이용해서 style.xml을 API 버전별로 다른 동작을 하도록 분기시켜줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:242px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/994D80375B4E0AE307&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 7월 18 00-27-20.png&quot; height=&quot;304&quot; width=&quot;242&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와 같이 style.xml 파일을 values, values-v26, values-v27 폴더에 각각 만들어줍니다.&lt;/p&gt;&lt;p&gt;여기서 values-v26에 있는 style.xml에만 windowIsTranslucent을 구현해주지 않으면 해결할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;values/style.xml&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;TransparentBase&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;parent=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/AppTheme&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;item &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android:windowBackground&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;@android:color/transparent&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/item&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/style&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;AppTheme.Transparent&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;parent=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/TransparentBase&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;item &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android:windowIsTranslucent&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/item&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;values-v26/style.xml&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;AppTheme.Transparent&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;parent=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/TransparentBase&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;values-v27/style.xml&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;AppTheme.Transparent&quot; &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;parent=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/TransparentBase&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;item &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android:windowIsTranslucent&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/item&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/style&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;위의 코드에서 확인하실 수 있듯이 values-v26/style.xml에서는 아무 태그를 넣어주지 않게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;단, 이 방법으로 구현할경우 API 26(8.0)기기에서는 투명한 화면으로 나타나지 않기 때문에 이에 대한 처리를 해줘야 합니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;(Activity를 시작하기전에 현재화면의 내용을 캡쳐해서 ImageView에 그려서 background로 지정하는 등의 방법)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;ProxyActivity개념으로 사용하는 코드라면 이 방법은 맞지 않습니다.&lt;/p&gt;&lt;p&gt;만약 투명액티비티를 fade-in의 효과를 내면서 나타나게 하기위한 용도로 사용했다면 이 방법을 사용하시면 좋습니다.&lt;/p&gt;&lt;p&gt;API 26(8.0) 기기에서만 fade-in 없이 바로 나오는 정도가 될것이기때문에 큰 이슈가 되지는 않을것입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;width: 350px; height: 176px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995CE93F5B4E0E962A&quot; filemime=&quot;image/gif&quot; filename=&quot;afflict.gif&quot; height=&quot;176&quot; style=&quot;width: 350px; height: 176px;&quot; width=&quot;350&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;구글님 저희가 잘못했습니다.. 어린양을 괴롭히지 말아주세요..&lt;/p&gt;&lt;p&gt;안드로이드 기기의 파편화만으로도 대응하기 너무 힘든데 API레벨 OS별로 대응을 하도록 하지 않도록 도와주세요.&lt;/p&gt;&lt;blockquote class=&quot;tx-quote-tistory&quot;&gt;&lt;p&gt;하지만 우린&amp;nbsp;답을 찾을것이다. 늘 그랬듯이&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;width: 350px; height: 500px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99DFE1405B4E0F2C12&quot; filemime=&quot;image/jpeg&quot; filename=&quot;d747477a73baabb5a96020d67825429f8345e680105da214f5c49dc56c5715ceecffd938868c27a1838bb5d3e24b339b4d8d724aa370ef33521598cf161c0c0bee7c637c0278788259c34ed34bf355a9.jpg&quot; height=&quot;500&quot; style=&quot;width: 350px; height: 500px;&quot; width=&quot;350&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;피쓰~&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/79</guid>
<comments>https://gun0912.tistory.com/79#entry79comment</comments>
<pubDate>Wed, 18 Jul 2018 00:54:13 +0900</pubDate>
</item>
<item>
<title>[안드로이드]Firebase Dynamic Link로  사용자 유입시키기</title>
<link>https://gun0912.tistory.com/78</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:200px;width: 200px; height: 200px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/991644345B0D32D921&quot; filemime=&quot;image/jpeg&quot; filename=&quot;firebase-dynamic-links-logo.png&quot; height=&quot;200&quot; style=&quot;width: 200px; height: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 포스팅과 같은 내용의 동영상 강의를 확인하시려면 아래 영상을 시청해주세요&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://goo.gl/dbPCaA&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://goo.gl/dbPCaA&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); font-family: Roboto, Helvetica, Arial, sans-serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;어플리케이션 서비스들의 홈페이지를 들어가보면 아래와 같은 화면들을 만나볼 수 있습니다.&lt;/p&gt;&lt;p&gt;이런 서비스들은 서비스에 관심있는사람이 앱을 설치할 수 있도록 설치버튼을 보여줍니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span id=&quot;docs-internal-guid-ad3ee4a9-ab8f-9e1d-9a1a-02975da4765d&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/QAaaYnEIL1TjJzG_2BE9GZpJmfBv4ihFzb7wNB1b5xwfJPBEVmIzX9Fut60Tp2qgBSUIY1D0JlsEaQH4gixdij5xRQHU_gd1CFl50rQVYu_WUvXkbZqPVdaknLbiyJ3aTy38dwCWHV4&quot; width=&quot;212px;&quot; height=&quot;376px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&quot;https://lh4.googleusercontent.com/f6jYXVondQktgcu3KwqT09KR0loxu8AgltIULz51BOe2qVRyCFTJ826_5NP6ioRZsefspncIT0xVn1TUpvIFm_eOMokXFb2tkeucTEFXt4fk5RCVCUMjHOc628xjIAH3W53L9AxMDN8&quot; width=&quot;212px;&quot; height=&quot;376px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&quot;https://lh5.googleusercontent.com/Lq2Ae4-miZPUFR7xBg_JeBNSQ6hw5B3guStvf8j6Pki3FWph3dveb5cKaNninv1XGWhkyKBh86VMfhpoQPp_1H_10hCgIjamARAEQIV2cVOCyMB4aFK4W7s6au_-kKXyq9AS51P4D1A&quot; width=&quot;212px;&quot; height=&quot;376px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;(참고로 저는 이 서비스들을 정말 좋아합니다. 기술력도 좋아합니다. 깎아 내리려는 의도는 없습니다.)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;안드로이드 사용자는 구글플레이 이미지를 누르면 해당 마켓으로 이동될것이고, 아이폰 사용자는 앱스토어 이미지를 누르면 해당 마켓으로 이동될 것입니다.&lt;/p&gt;&lt;p&gt;하지만 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;b&gt;안드로이드 사용자든 아이폰 사용자든 상관없이 설치버튼을 누르면 알아서 해당 사용자의 마켓에 맞게 이동시켜주는 방식이 더 좋은 화면UI&lt;/b&gt;&lt;/span&gt;&amp;nbsp;입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또한 만약 이미 해당 서비스가 설치되어 있는사용자라고 하더라도 무조건 설치페이지로 보내버립니다.&lt;/p&gt;&lt;p&gt;그래서 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;b&gt;이미 설치된 사용자라면 해당 버튼을 눌렀을때 앱을 실행시키도록 하는것이 더 좋은 방식&lt;/b&gt;&lt;/span&gt;이라고 생각합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span id=&quot;docs-internal-guid-6acd803a-ab94-a37b-628d-dd7016da0d01&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/7C2EqLlT2EHSnDJw8wjQe_sLYFYnUbtheQpic29I2UIW14zJ2gxCbhrYuZZtcO0wBZ-i9WAARlfMM0Djnx0hGt2fWJWV6zgS4Bd0RrgSoLAwe7JDjyRjKw44nmMQaFOJ7Uy5ySYcGCY&quot; width=&quot;383px;&quot; height=&quot;401px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;그래서 기획자는 아래와 같은 개발을 요구하게 됩니다.&lt;/p&gt;&lt;p&gt;- 사용자가 안드로이드인지 아이폰인지 구분해서 해당 마켓으로 보내주세요&lt;/p&gt;&lt;p&gt;- 이미 앱을 설치한 사용자라면 앱을 실행하게 해주세요&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;- 전 기획자니까 이 기능은 개발자님이 만들어 주셔야죠&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;대부분의 개발자분들은 딥링크를 활용해서 아래와 같이 구현하셨을겁니다.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/fZtWfXBg2wcp3mM7ehuXYRZgsFh6yodeqnVG-z4Cnk1HILQOY0aN-E3OLBNtp2LAKnBsdhDsGj54OKtTm2Adg0h7qIw7JxKCsKM3H9xWdI5tSXsUPgA8zOm0-wJxuWhluOo1bCjo8pU&quot; width=&quot;605px;&quot; height=&quot;177px;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span id=&quot;docs-internal-guid-70ce55f0-abb0-1401-e602-b2e70c6e49c7&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/tTjVw44EgmcFpaQK4vZbn4BWVNgg2FiQAjBiBch-bk4QUxkYkmj5oGz2TR1O67zK34TouQp__AAWOwQgE3oYmR6595Fzo_OBF-PB6siaWOzeAFfrzAHPMCtwlXQGX-c6tB3Po3YTJt8&quot; width=&quot;289px;&quot; height=&quot;376px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;주로 카드결제나 외부앱을 실행해야하는 경우 딥링크와 타임아웃으로 앱설치여부를 판단하는경우가 많습니다.&lt;/p&gt;&lt;p&gt;이런방식으로 어느정도 해결할 수 있긴하지만 기획자나 마케터가 이런 기능을 요청할때마다 개발자가 이런 형태의 html을 매번 만들어주어야 하는 번거로움이 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이럴때 Firebase의 Dynamic link를 사용해주면 좋습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;span id=&quot;docs-internal-guid-562eced4-abb1-65b0-769a-d702da7d77d4&quot;&gt;&lt;img src=&quot;https://lh3.googleusercontent.com/9MxI96Ee-eqaMYFhd0Z9kiMbOJ4IFdhRacH_NHX6KOyANOt504vfYmepqnHB2gU4pqvzGQmunN21TrEkT-NgKGV42p2CqUaEePYeKPcjG4oBm-VQb9hESE_yny9mMPwPEPkHk7fmt0E&quot; width=&quot;960px;&quot; height=&quot;540px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;Firebase Dynamic link는 위에서 매번 만들어주었던 기능을 간단하게 만들 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Console에서 직접 링크 만들기&lt;/h1&gt;&lt;p&gt;기획자나 마케터는 코드를 몰라도 개발자 없이 콘솔에서 직접 위와 같은 기능을 하는 링크를 생성할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Firebase의 콘솔에서 Dynamic link페이지를 들어갑니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 512px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99EC81435B0D3E2A12&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 20-47-39.png&quot; height=&quot;512&quot; style=&quot;width: 500px; height: 512px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;앱이 설치되어있을경우 실행시킬 딥링크와 이름을 설정해줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;딥링크를 받아서 해당 기능을 실행시키는 방법은 아래 샘플 코드에서 구현되어 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 586px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9911B3435B0D3E2A26&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 20-47-58.png&quot; height=&quot;586&quot; style=&quot;width: 500px; height: 586px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;앱이 설치되어있지 않은 사용자의 경우 해당 패키지의 구글플레이 설치화면으로 보내줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;꼭 구글플레이 설치화면이 아니라 원하는 URL로 안드로이드 사용자를 연결 시킬 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 570px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9925D2435B0D3E2B23&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 20-48-32.png&quot; height=&quot;570&quot; style=&quot;width: 500px; height: 570px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Dynamic link에 캠페인 추적을 위한 utm_xxx 들을 넣어줄수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:500px;width: 500px; height: 372px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99F9F8395B0D3FDB2A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 20-55-17.png&quot; height=&quot;372&quot; style=&quot;width: 500px; height: 372px;&quot; width=&quot;500&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;생성된 dynamic link는 실제로는 아래와 같은 url을 갖습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;dynamic link생성에 익숙해진다면 그이후로는 콘솔에서 작업없이도 url에서 필요한 파라미터들만 바꿔서 바로 원하는 url을 만들어 줄 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;각 파라미터의 역할과 좀더 다양한 다른 파라미터들에 대해서 살펴보시려면 아래 문서를 참고하세요&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;a href=&quot;https://firebase.google.com/docs/dynamic-links/create-manually?hl=ko&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://firebase.google.com/docs/dynamic-links/create-manually?hl=ko&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;사실 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;b&gt;Dynamic Link의 정말 좋은 기능은 이제부터 소개시켜드릴 기능&lt;/b&gt;&lt;/span&gt;입니다.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;중고차 판매 시세 공유하기&lt;/h1&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 현재 PRND컴퍼니에서 헤이딜러라는 중고차 판매 가격비교 서비스를 개발하고 있습니다.&lt;/p&gt;&lt;p&gt;헤이딜러 서비스는 딜러에게 차량을 판매할때 경매시스템의 형태로 최고가 혹은 원하는 딜러에게 판매할 수 있는 서비스입니다.&lt;/p&gt;&lt;p&gt;최근에 추가된 시세조회 기능을 통해 각 차량별 딜러판매 시세를 미리 파악해볼 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span id=&quot;docs-internal-guid-144c0228-abc5-d34a-ccaa-0dd585bfffe9&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/ObgKLyCpD6yKSpzti8SUkfwSfNfeLdnIeP1o7MCZerzU8zdpKkgBAaswlBY46vW7PutHRbUN1ca0-V6SjgBQtP4p8RJgBji3cn6uXLF2uFzHZa0qsA2UDbr4j8Oy_0cB3wVPtD4WxN0&quot; width=&quot;182px;&quot; height=&quot;375px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&quot;https://lh4.googleusercontent.com/PTHMOqocUca0V76cOnkTJWoDGEU-3dmVkXA-kYqVjDW6Gd7rvoTzb1X4JMc8CBgmaZPUirqhBVWvpBfTbzKgI6AKeWwliJBmaQ_qXQ7QTXAfNl95MbP6sWc8Ic4jWf-OKI9THHWkAgo&quot; width=&quot;182px;&quot; height=&quot;375px;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&quot;https://lh5.googleusercontent.com/_stru3if3JYLZakzl30f4I7A23R4yZAcR2syZ1DPpWQ8xtCMKdKt-NftZyCESOQusqCObGnN4hv4fEGSqYqjZgyQK2R1r4qUiiVmF57TjB0vKv9fTMKOR5a3NeNxEQIFMP_X1PRSOMY&quot; width=&quot;182px;&quot; height=&quot;375px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1&gt;&lt;span&gt;공유하기&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;만약 아반떼AD의 판매 시세를 친구에게 알려주기 위해 공유를 한다면 아래와 같은 과정을 거칠것입니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99E8BE4B5B0D452B10&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-18-02.png&quot; height=&quot;355&quot; style=&quot;text-align: center;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;1. 친구에게 해당 차량의 시세정보와 서비스를 알려줌&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;2. 친구는 해당 서비스를 마켓에서 검색&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;3. 앱 설치&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;4. 메인화면 실행&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995F4A4B5B0D453D36&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-18-10.png&quot; height=&quot;355&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;5. 시세조회 기능 선택&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span&gt;6....&lt;/span&gt;7.....8....9....&lt;/p&gt;&lt;p&gt;10. 기타 등등의 과정을 거쳐서 친구가 공유해줬던 해당차량의 시세조회 기능에 도달하여 알게됨&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;width: 350px; height: 197px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9986A84B5B0D4E131C&quot; filemime=&quot;image/gif&quot; filename=&quot;hate.gif&quot; height=&quot;197&quot; style=&quot;width: 350px; height: 197px;&quot; width=&quot;350&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;수많은 단계를 거치다보면 어쩌면 그 친구는 해당 화면까지 도달하지 못했을수도 있습니다...&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Dynamic Link로 공유하기&lt;/h1&gt;&lt;p&gt;Dynamic Link를 사용한다면 단 3단계면 충분합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:611px;width: 611px; height: 355px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99D43C4D5B0D45A026&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-18-18.png&quot; height=&quot;355&quot; style=&quot;width: 611px; height: 355px;&quot; width=&quot;611&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;1. 친구에게 공유할때 알아서 해당 정보의 Dynamic link가 함께 공유&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;2. 링크를 누르면 해당 마켓의 설치화면 이동&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;3. 설치후 실행시 해당 차량의 시세조회 기능에 바로 도달&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;이전 vs 이후&lt;/h1&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/994D3B485B0D45F807&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-18-27.png&quot; height=&quot;341&quot; style=&quot;&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Dynamic Link를 적용하기 전과 후의 사용자가 거쳐야할 단계 차이를 명확하게 확인할 수 있습니다.&lt;/p&gt;&lt;p&gt;화면 단계단계마다 사용자가 이탈할 확률이 높아지기 때문에 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&lt;b&gt;서비스를 운영하는 입장에서는 최대한 이 단계를 줄여서 사용자가 원하는 정보에 도달시켜주는것이 중요&lt;/b&gt;&lt;/span&gt;합니다.&lt;/p&gt;&lt;p&gt;그렇기 때문에 Dynamic Link가 사용자를 유입시키는데 굉장히 효과적인 역할을 합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;활용할만한 사례들&lt;/h1&gt;&lt;p&gt;&lt;span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Dynamic Link를 활용하기 좋은 사례들은 아래와 같습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;광고/판매페이지 -&amp;gt; 앱안에서의 해당 화면&lt;/h2&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:622px;width: 622px; height: 355px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/994E624D5B0D46AA08&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-24-05.png&quot; height=&quot;355&quot; original=&quot;yes&quot; style=&quot;width: 622px; height: 355px;&quot; width=&quot;622&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;항공권 예약서비스 혹은 쇼핑몰 등에서 친구에게 해당 상품을 알려주고 그 친구가 서비스에 진입했을때 바로 해당 상품의 화면으로 이동시킬 수 있을 것입니다.&lt;/p&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;숙박/게임 서비스 추천인코드 입력&lt;/h2&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:610px;width: 610px; height: 355px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/992E564D5B0D46AA0B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-24-14.png&quot; height=&quot;355&quot; style=&quot;width: 610px; height: 355px;&quot; width=&quot;610&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;호텔이나 기타 서비스에서 지인에게 추천을 해주고 추천인코드를 넣었을때 혜택을 주는 서비스의 경우도 좋을 것입니다.&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;QR코드를 활용한 오프라인 프로모션&lt;/h2&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;span id=&quot;docs-internal-guid-c29606c1-abdf-d07a-4b41-279ce4204d60&quot;&gt;&lt;img src=&quot;https://lh4.googleusercontent.com/vH-mWU_YLApIhmoscnuiMUGIkJJk1GZASXITaVEsgm06YAo-kbZjRIC_-y3D4esQMFQuXIsASjngw1DZ5cEZ_It_RnjolAQ2zerO_JH94pXG29iHxlIHfgj1qW0huC4gY9wgljvLDNk&quot; width=&quot;669px;&quot; height=&quot;376px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;오프라인으로 서비스를 홍보하거나 특정 이벤트를 진행하는 경우 QR코드 자체에 dynamic link를 넣어두어 어떤경로로 사용자가 유입되었는지 파악할 수 있고 해당 고객들에게 맞춤형 혜택을 줄 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;샘플 만들기&lt;/h1&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Dynamic Link를 활용한 샘플코드를 만들어 보겠습니다.&lt;/p&gt;&lt;p&gt;이 샘플에서는 추천코드를 생성하고, 이를 공유해서 해당 url을 눌렀을때 생성된 추천코드를 인식해서 다이어로그로 띄워주는 기능을 만들것입니다.&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:708px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9934C63D5B0D483D03&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-31-46.png&quot; height=&quot;450&quot; width=&quot;708&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;바로 코드를 확인하고 돌려보고 싶으신분은 아래 Github주소에서 직접 실행해보시기 바랍니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/TedDynamicLinkSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/TedDynamicLinkSample&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Dynamic Link 만들기&lt;/h1&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Deep Link 생성&lt;/h2&gt;&lt;p&gt;먼저 사용자가 앱을 실행했을때 실행시켜줄 딥링크를 정의해줍니다.&lt;/p&gt;&lt;p&gt;이 샘플에서는 아래와 같은 방식으로 딥링크를 만들어서 설정해 주었습니다.&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); color: rgb(169, 183, 198); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;private &lt;/span&gt;Uri &lt;span style=&quot;color: rgb(255, 198, 109);&quot;&gt;getPromotionDeepLink&lt;/span&gt;() {&lt;br /&gt;    &lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;// Generate promotion code&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;    &lt;/span&gt;String promotionCode = &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;DF3DY1&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;// https://ted.com/promotion?code=DF3DY1&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;return &lt;/span&gt;Uri.&lt;span style=&quot;font-style: italic;&quot;&gt;parse&lt;/span&gt;(&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;https://ted.com/&quot; &lt;/span&gt;+ &lt;span style=&quot;color: rgb(152, 118, 170); font-style: italic;&quot;&gt;SEGMENT_PROMOTION &lt;/span&gt;+ &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;?&quot; &lt;/span&gt;+ &lt;span style=&quot;color: rgb(152, 118, 170); font-style: italic;&quot;&gt;KEY_CODE &lt;/span&gt;+ &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;=&quot; &lt;/span&gt;+ promotionCode)&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;;&lt;br /&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h2&gt;Dynamic Link 생성&lt;/h2&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;private void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;onDynamicLinkClick&lt;/span&gt;() {&lt;br /&gt;    FirebaseDynamicLinks.&lt;span style=&quot;font-style:italic;&quot;&gt;getInstance&lt;/span&gt;().createDynamicLink()&lt;br /&gt;            .setLink(getPromotionDeepLink())&lt;br /&gt;            .setDynamicLinkDomain(&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;n3a95.app.goo.gl&quot;&lt;/span&gt;)&lt;br /&gt;            .setAndroidParameters(&lt;br /&gt;                    &lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;DynamicLink.AndroidParameters.Builder(getPackageName())&lt;br /&gt;                            .setMinimumVersion(&lt;span style=&quot;color:#6897bb;&quot;&gt;125&lt;/span&gt;)&lt;br /&gt;                            .build())&lt;br /&gt;            .setGoogleAnalyticsParameters(&lt;br /&gt;                    &lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;DynamicLink.GoogleAnalyticsParameters.Builder()&lt;br /&gt;                            .setSource(&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;orkut&quot;&lt;/span&gt;)&lt;br /&gt;                            .setMedium(&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;social&quot;&lt;/span&gt;)&lt;br /&gt;                            .setCampaign(&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;example-promo&quot;&lt;/span&gt;)&lt;br /&gt;                            .build())&lt;br /&gt;            .buildShortDynamicLink()&lt;br /&gt;            .addOnCompleteListener(&lt;span style=&quot;color:#cc7832;&quot;&gt;this, new &lt;/span&gt;OnCompleteListener&amp;lt;ShortDynamicLink&amp;gt;() {&lt;br /&gt;                &lt;span style=&quot;color:#bbb529;&quot;&gt;@Override&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#bbb529;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;onComplete&lt;/span&gt;(&lt;span style=&quot;color:#bbb529;&quot;&gt;@NonNull &lt;/span&gt;Task&amp;lt;ShortDynamicLink&amp;gt; task) {&lt;br /&gt;                    &lt;span style=&quot;color:#cc7832;&quot;&gt;if &lt;/span&gt;(task.isSuccessful()) {&lt;br /&gt;                        Uri shortLink = task.getResult().getShortLink()&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                        try &lt;/span&gt;{&lt;br /&gt;                            Intent sendIntent = &lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;Intent()&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                            &lt;/span&gt;sendIntent.setAction(Intent.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;ACTION_SEND&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                            &lt;/span&gt;sendIntent.putExtra(Intent.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;EXTRA_TEXT&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;shortLink.toString())&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                            &lt;/span&gt;sendIntent.setType(&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                            &lt;/span&gt;startActivity(Intent.&lt;span style=&quot;font-style:italic;&quot;&gt;createChooser&lt;/span&gt;(sendIntent&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;Share&quot;&lt;/span&gt;))&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                        &lt;/span&gt;} &lt;span style=&quot;color:#cc7832;&quot;&gt;catch &lt;/span&gt;(ActivityNotFoundException ignored) {&lt;br /&gt;                        }&lt;br /&gt;                    } &lt;span style=&quot;color:#cc7832;&quot;&gt;else &lt;/span&gt;{&lt;br /&gt;                        Log.&lt;span style=&quot;font-style:italic;&quot;&gt;w&lt;/span&gt;(&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;TAG&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;task.toString())&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                    &lt;/span&gt;}&lt;br /&gt;                }&lt;br /&gt;            })&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;- setLink(): 위에서 만들어준 Depp Link를 세팅해줍니다.&lt;/p&gt;&lt;p&gt;- setDynamicLinkDomain(): 각 Firebase 프로젝트마다 가진 고유값개념입니다. 콘솔에서 확인할 수 있습니다.&lt;/p&gt;&lt;p&gt;- setAndroidParameters(): 안드로이드앱에 대한 설정을 넣어줄수 있습니다. 여기서는 125 버전아래의 앱을 사용중이라면 앱이 설치되어 있어도 앱을 실행시키지 않고 설치페이지로 보내도록 설정되어 있습니다.&lt;/p&gt;&lt;p&gt;- setGoogleAnalyticsParameters(): 마케터, 기획자들이 주로 사용하는 utm_source, utm_xxx 등의 정보들을 설정해줄 수 있습니다.&lt;/p&gt;&lt;p&gt;- buildShortDynamicLink(): 이 함수를 사용해서 긴 url이 아닌 단축url을 생성할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;링크 생성과 관련된 좀더 상세한 내용은 아래 문서에서 확인하시면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://firebase.google.com/docs/dynamic-links/android/create?hl=ko&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://firebase.google.com/docs/dynamic-links/android/create&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;Dynamic Link 처리하기&lt;/h1&gt;&lt;h2&gt;Manifest 설정&lt;/h2&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;activity &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.MainActivity&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;intent-filter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;action &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.action.MAIN&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;category &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.category.LAUNCHER&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;/intent-filter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;intent-filter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;action &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.action.VIEW&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;category &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.category.DEFAULT&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;category &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.category.BROWSABLE&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;data&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:host=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;ted.com&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:scheme=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;http&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;data&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:host=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;ted.com&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:scheme=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;https&quot; &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;/intent-filter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;Manifest에서 위에서 만든 딥링크를 처리해줄 수 있도록 scheme/host를 정의해줍니다.&lt;/p&gt;&lt;p&gt;여기서는 https://ted.com, http://ted.com 으로 실행되는 url에 대해서 MainActivity가 잡아서 실행되도록 정의되어 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h2&gt;Deep Link 처리&lt;/h2&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;private void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;handleDeepLink&lt;/span&gt;() {&lt;br /&gt;    FirebaseDynamicLinks.&lt;span style=&quot;font-style:italic;&quot;&gt;getInstance&lt;/span&gt;()&lt;br /&gt;            .getDynamicLink(getIntent())&lt;br /&gt;            .addOnSuccessListener(&lt;span style=&quot;color:#cc7832;&quot;&gt;this, new &lt;/span&gt;OnSuccessListener&amp;lt;PendingDynamicLinkData&amp;gt;() {&lt;br /&gt;                &lt;span style=&quot;color:#bbb529;&quot;&gt;@Override&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#bbb529;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;onSuccess&lt;/span&gt;(PendingDynamicLinkData pendingDynamicLinkData) {&lt;br /&gt;                    &lt;span style=&quot;color:#cc7832;&quot;&gt;if &lt;/span&gt;(pendingDynamicLinkData == &lt;span style=&quot;color:#cc7832;&quot;&gt;null&lt;/span&gt;) {&lt;br /&gt;                        Log.&lt;span style=&quot;font-style:italic;&quot;&gt;d&lt;/span&gt;(&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;TAG&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;No have dynamic link&quot;&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                        return;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                    &lt;/span&gt;}&lt;br /&gt;                    Uri deepLink = pendingDynamicLinkData.getLink()&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                    &lt;/span&gt;Log.&lt;span style=&quot;font-style:italic;&quot;&gt;d&lt;/span&gt;(&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;TAG&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;deepLink: &quot; &lt;/span&gt;+ deepLink)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                    &lt;/span&gt;String segment = deepLink.getLastPathSegment()&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                    switch &lt;/span&gt;(segment) {&lt;br /&gt;                        &lt;span style=&quot;color:#cc7832;&quot;&gt;case &lt;/span&gt;&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;SEGMENT_PROMOTION&lt;/span&gt;:&lt;br /&gt;                            String code = deepLink.getQueryParameter(&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;KEY_CODE&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                            &lt;/span&gt;showPromotionDialog(code)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                            break;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                    &lt;/span&gt;}&lt;br /&gt;                }&lt;br /&gt;            })&lt;br /&gt;            .addOnFailureListener(&lt;span style=&quot;color:#cc7832;&quot;&gt;this, new &lt;/span&gt;OnFailureListener() {&lt;br /&gt;                &lt;span style=&quot;color:#bbb529;&quot;&gt;@Override&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#bbb529;&quot;&gt;                &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;public void &lt;/span&gt;&lt;span style=&quot;color:#ffc66d;&quot;&gt;onFailure&lt;/span&gt;(&lt;span style=&quot;color:#bbb529;&quot;&gt;@NonNull &lt;/span&gt;Exception e) {&lt;br /&gt;                    Log.&lt;span style=&quot;font-style:italic;&quot;&gt;w&lt;/span&gt;(&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;TAG&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;getDynamicLink:onFailure&quot;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;e)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;                &lt;/span&gt;}&lt;br /&gt;            })&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;br /&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;p&gt;- getDynamicLink(): Intent로부터 deep link가 존재하는지 알아옵니다.&lt;/p&gt;&lt;p&gt;만약 처리해야하는 deep link가 존재한다면&amp;nbsp;PendingDynamicLinkData 값이 null이 아니라 존재할것입니다.&lt;/p&gt;&lt;p&gt;PendingDynamicLinkData로부터 deep link를 가져와서 각 유형에 맞게 처리를 해줍니다.&lt;/p&gt;&lt;p&gt;여기에서는&amp;nbsp;https://ted.com/promotion?code=DF3DY1 라는 패턴의 유형을 찾아서 그에 해당하는 프로모션 코드를 추출하고 다이어로그로 해당 코드를 띄워주고 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 코드는 아래 Github에서 확인해보실 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/TedDynamicLinkSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/TedDynamicLinkSample&lt;/a&gt;&lt;/p&gt;&lt;p&gt;이 샘플코드가 유용하셨다면 Github에서 Star를 눌러주세요&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;디버깅&lt;/h1&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Dynamic Link가 의도한대로 잘 동작하도록 만들어져있는지 확인해볼 수 있습니다.&lt;/p&gt;&lt;p&gt;Dynamic Link의 맨 뒤에 ?d=1 을 붙여주기만하면 아래와 같은 경우의 수에 따른 플로우차트를 확인 할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://n3a95.app.goo.gl/iE7WLQnL5mjsuJ7F2?d=1&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://n3a95.app.goo.gl/iE7WLQnL5mjsuJ7F2?d=1&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:764px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9984DC435B0D4CCB25&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 29 21-51-09.png&quot; height=&quot;691&quot; width=&quot;764&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Firebase Dynamic Link로 효율적으로&amp;nbsp;사용자를 유입시키고 성공적인 앱서비스를 하시기 바랍니다.&lt;/p&gt;&lt;p&gt;더이상 기획자, 마케터로부터 이런 형태의 url을 만들어 달라는 말도 듣지 않으셨으면 좋겠습니다.&lt;/p&gt;&lt;p&gt;감사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 포스팅과 같은 내용의 동영상 강의를 확인하시려면 아래 영상을 시청해주세요&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://goo.gl/dbPCaA&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://goo.gl/dbPCaA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/78</guid>
<comments>https://gun0912.tistory.com/78#entry78comment</comments>
<pubDate>Tue, 29 May 2018 22:09:56 +0900</pubDate>
</item>
<item>
<title>[안드로이드/Android]8.0 오레오 알림채널(Notification Channel) 대응하기</title>
<link>https://gun0912.tistory.com/77</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 225px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993D2D495A76E41A1E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;AndroidPIT-android-O-Oreo-2059.jpg&quot; height=&quot;225&quot; style=&quot;width: 400px; height: 225px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지난 2017년 8월, 구글은 안드로이드 8.0 오레오를 공개했습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/about/versions/oreo/android-8.0-changes.html?hl=ko&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;여러가지 동작 변경사항&lt;/a&gt; 중 우리는&amp;nbsp;알림(Notification)에 대한 변경사항에 대해 꼭&amp;nbsp;대응을 해주어야 합니다.&lt;/p&gt;&lt;p&gt;우리는 지난 마시멜로우 6.0에서 권한을 대응하면서 느꼈듯이 OS의 업데이트때마다 무엇을 대응해주어야 하는지 눈여겨 보아야 합니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://gun0912.tistory.com/55&quot; target=&quot;_blank&quot;&gt;[IT/Android-TIP (한글)] - [안드로이드/Android]6.0 마시멜로우 권한체크하고 최적화하기&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2018년 1월 기준으로 오레오이상 기기의 점유율은 0.7% 밖에 되지 않습니다.&lt;a href=&quot;https://developer.android.com/about/dashboards/index.html?hl=ko&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;(안드로이드 OS점유율)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;현재는 구글의 레퍼런스폰인 넥서스기기에서만 8.0 오레오를 사용할 수 있지만 곧 삼성,LG의 제조사에서도 업데이트를 지원할것이기 때문에 우리는 대응을 해주어야 합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;TL;DR(Too long; didn't read)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;이 포스팅을 다 읽으실 시간이 없으시거나&amp;nbsp;&lt;strike&gt;귀찮으신분&lt;/strike&gt;들은 아래 샘플을 다운받아보시고 바로 테스트해보실 수 있습니다.&lt;br /&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/NotificationChannelSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/NotificationChannelSample&lt;/a&gt;&lt;/p&gt;&lt;p&gt;(여러분의 Github의 Star 눌러주시는 센스도 기대합니다!)&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-3&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line06.gif?v=2) repeat-x scroll left; height: 15px; border:0&quot;&gt;&lt;p&gt;&lt;b style=&quot;font-size: 24pt;&quot;&gt;알림채널(Notification Channel)&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99F931465A76EB3313&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517742885.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;앱에서 알림(Notification)은 채팅, 새게시글, 댓글, 공지사항등의 다양한 용도로 쓰입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 페이스북 운영자입니다.&lt;strike&gt;(사실 아닙니다)&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;페이스북에서는 사용자에게 여러가지 알림을 보냅니다.&lt;/p&gt;&lt;p&gt;채팅, 친구의 새 게시글 알림, 사용자의 게시글에 대한 댓글, 사용자가 참여한 게시글에 대한 댓글, 친구추천, 기타 공지사항등&lt;/p&gt;&lt;p&gt;하지만 알림의 종류가 많아서 그만큼 알림이 많이 가기때문에 페이스북 사용자들은 불만이 많았습니다.&lt;/p&gt;&lt;p&gt;&lt;b&gt;별로 중요하지 않은 알림은 소리나 진동없이 왔으면 좋겠고 중요하다고 생각하는 알림은 잠금화면에서도 알려주기를 바랬습니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이럴때 유용한게 알림채널(Notification Channel)입니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Notification Channel을 통해 Notification을 여러가지 용도로 나누어서 관리할 수 있게 만들어 줍니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993A784A5A76EA5533&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517742567.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그리고 사용자가 직접&amp;nbsp;각 채널별로 알림중요도나 기타 설정을 변경할 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99ECDE435A76EAAE3E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517742745.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;오레오에서부터는 이 Notification Channel을 필수로 만들어 주어야 합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 18pt;&quot;&gt;오레오에서 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 18pt;&quot;&gt;Notification Channel&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0); font-size: 18pt;&quot;&gt;을 만들어 주지 않으면 알림이 오지 않습니다.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;아직 오레오에 대응할 마음의 준비가 안되셨나요?&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:350px;width: 350px; height: 147px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993670445A76EA3128&quot; filemime=&quot;image/gif&quot; filename=&quot;not_ready.gif&quot; height=&quot;147&quot; style=&quot;width: 350px; height: 147px;&quot; width=&quot;350&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지금 오레오폰에서 플레이스토어에 있는 내앱을 설치하면 알림이 안올까요?&lt;/p&gt;&lt;p&gt;그렇지 않습니다.&lt;/p&gt;&lt;p&gt;안드로이드에서 targetSdkVersion이 26버전보다 아래라면 문제없이&amp;nbsp;알림이 옵니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;아직 마음의 준비가 안되셨거나 &lt;/span&gt;&lt;strike&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;귀찮다면&lt;/span&gt;&lt;/strike&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt; targetSdkVersion을 25로 두고 개발하세요.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이미 26으로 올리셨다면 25로 내릴 수 있습니다.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;안될것 같다구요? 됩니다! 제가 해봤거든요!&lt;/p&gt;&lt;p&gt;당연히 내리는게 안된다고 생각하고있었는데 가능한 작업이었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;알림채널(Notification Channel) 만들기&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Notification Channel을 만드는 방법은 간단합니다.&lt;/p&gt;&lt;p&gt;해당 기기의 OS버전이 오레오이상일때 Notification Channel을 만들어주고 필요한 설정을 해준뒤 NotificationManager의 createNotificationChannel()을 호출해주면 됩니다.&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/ParkSangGwon/3fd55511de2b9f192ed58a227b08507e.js?file=NotificationChannelCreate.java&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(36, 41, 46); font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 12px; white-space: pre;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Notification Channel의 다른 함수에 대해서는 아래에서 자세하게 살펴보실 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/reference/android/app/NotificationChannel.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developer.android.com/reference/android/app/NotificationChannel.html&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;채널은 한번만 만들면 되기때문에 Notification이 올때마다 만들어줄 필요가 없습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Application Class에서 만들어 줘&amp;nbsp;되고 SharedPreference를 이용해서 한번 만든적이 있다면 그다음부터는 만들지 않도록 해주어도 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;알림(Notification)에 채널 지정하기&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;알림에 채널을 지정하는 방법은 간단합니다.&lt;/p&gt;&lt;p&gt;기존에 Notificatioin Builder에서 하던 작업에 어느채널에 포함시킬지 채널ID만 함께 추가해주면 됩니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;background-color:#344134;&quot;&gt;Notification&lt;/span&gt;.Builder builder = &lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;&lt;span style=&quot;background-color:#344134;&quot;&gt;Notification&lt;/span&gt;.Builder(context&lt;span style=&quot;color:#cc7832;&quot;&gt;, &lt;/span&gt;channel)&lt;br /&gt;        .setContentTitle(title)&lt;br /&gt;        .setContentText(body)&lt;br /&gt;        .setSmallIcon(&lt;span style=&quot;font-style:italic;&quot;&gt;getSmallIcon&lt;/span&gt;())&lt;br /&gt;        .setAutoCancel(&lt;span style=&quot;color:#cc7832;&quot;&gt;true&lt;/span&gt;)&lt;span style=&quot;color:#cc7832;&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;생성자에서 채널ID를 넣어줄수도 있고 .setChannel() 함수를 이용해서 채널ID를 지정해줄 수도 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 32px;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 32px;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 32px;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 32px;&quot;&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b style=&quot;font-size: 32px;&quot;&gt;알림채널(Notification Channel) 관리&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;알림채널(Notification Channel)을 만들고나서 수정, 삭제가 가능합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;NotificationManager의 getNotificationChannel(), createNotificationChannel()을 활용해서 해당 채널ID에 대해서 수정해주면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;수정은 채널이름, 채널설명에 대해서만 가능합니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;알림 중요도나 진동패턴, 소리, 불빛 등에 대해서는 변경해줄 수 없습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;삭제는 채널ID를 넘겨주면 삭제할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;그렇기때문에 수정으로 불가능한것들을 변경해주고 싶은경우 채널을 삭제하고 원하는 설정으로 새로 만들어 주면 됩니다.&lt;/p&gt;&lt;p&gt;하지만 삭제후 재생성을 남용하면 안됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아래의 스크린샷처럼 특정 채널이 삭제됐음을 사용자가 알수 있음은 물론이고 만약 사용자가 해당 채널의 설정을 변경해서 자신이 원하는대로 쓰고 있었다면 그런 설정들은 모두 날아가고 새로운 설정으로 다시 만들어져버려서 사용자가 화가날수도 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99B67E3C5A78442C03&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517830850.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;알림채널 그룹(Notification Channel Group)&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;알림채널뿐만 아니라 알림채널 그룹이라는 개념도 추가되었습니다.&lt;/p&gt;&lt;p&gt;트위터처럼 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;여러 계정을 로그인하게 해주는 앱이거나 개인용도/업무용도로 앱을 나누어서 사용할 수 있는경우 Notification Channel Group을 활용&lt;/span&gt;하면 좋습니다.&lt;/p&gt;&lt;p&gt;그룹ID와 이름을 지정해서&amp;nbsp;NotificationChannelGroup을 만들어주고 NotificationManager의&amp;nbsp;createNotificationChannelGroup()를 호출해주면 됩니다.&lt;/p&gt;&lt;p&gt;또한 채널을 만들때&amp;nbsp;setGroup()으로 해당 채널을 어느 그룹에 포함시킬지 지정해주면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/ParkSangGwon/3fd55511de2b9f192ed58a227b08507e.js?file=NotificationChannelGroup.java&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;트위터의 경우, 사용자의 계정이름을 Notification Channel Group 이름으로 사용하여 각 사용자별로 알림을 지정할 수 있도록 지원합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99A3843D5A76F19C24&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517660124.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;기타: 삽질하면서 알게된것들&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;알림채널을 대응하기위해서 여러가지 앱들을 설치해서 테스트 해보던중에 특이한것을 발견하였습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99A9263D5A78404D25&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517830053.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 533px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9909873F5A78403501&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot_1517830188.png&quot; height=&quot;533&quot; style=&quot;width: 300px; height: 533px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;채널처럼 생겼지만 다른채널과는 다른 &lt;b&gt;'Uncategorized'&lt;/b&gt; 라는걸 발견하게 되었습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;심지어 알림에대해서 설정할수도 없으며 'Let the app decide'라고 다른 채널의 설정과는 다르게 쓰여져 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;뭔가 채널이 지정되지 않은 알림은 이 채널에 속할것 같은 느낌적인 느낌이 있었습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;하지만 어떻게 저걸 만들어 내는지 알지 못했습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;공식 문서를 뒤져봐도 관련된 언급이 없었습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그러던중 재현하는 방법을 알게되었습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이러한 현상은 라이브러리를 사용하고 있을때 앱의 targetSdkVersion은 25이하이지만, 라이브러리의 targetSdkVersion이 26이상인경우에서 발생합니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;물론 위와같은 상황에서도 채널을 1개도 만들지 않는다면 상관없지만 채널을 1개라도 만들경우&amp;nbsp;&lt;b&gt;'Uncategorized' &lt;/b&gt;가 생성됩니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Notification을 만들때 channel id를 지정하지 않으면 이 Notification은&amp;nbsp;&lt;b&gt;'Uncategorized'&lt;/b&gt;에 속하는것을 확인했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-3&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line06.gif?v=2) repeat-x scroll left; height: 15px; border:0&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지금까지 구현사항에 대해서 샘플을 만들어두었으니 아직 감이 안오시는분들은 참고하시기 바랍니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/NotificationChannelSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/NotificationChannelSample&lt;/a&gt;&lt;/p&gt;&lt;p&gt;(여러분의 Github의 Star 눌러주시는 센스!)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;안드로이드 공식페이지에서도 Notification Channel에 대해서 확인해보실 수도 있습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://developer.android.com/guide/topics/ui/notifiers/notifications.html#ManageChannels&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developer.android.com/guide/topics/ui/notifiers/notifications.html#ManageChannels&lt;/a&gt;&lt;/p&gt;&lt;p&gt;(한국어로 설정하시면 보이지 않습니다. 언어를 영어로 선택하셔야 보여집니다.)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;지금까지 안드로이드 8.0 오레오에서 추가된 알림채널(Notification Channel)에 대해 포스팅 해보았습니다.&lt;/p&gt;&lt;p&gt;어때요 참 쉽죠?&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:150px;width: 150px; height: 149px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/992BDE365A76F55B0D&quot; filemime=&quot;image/gif&quot; filename=&quot;agree.gif&quot; height=&quot;149&quot; style=&quot;width: 150px; height: 149px;&quot; width=&quot;150&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;알림채널(Notification Channel)에 대해서 이해하고 나서&amp;nbsp;유용한 알림관리 방식이라는걸 느끼게 되었습니다.&lt;/p&gt;&lt;p&gt;잘 알려진 여러 앱들을 다운받아봐서 확인했을대 아직 알림채널에 대해서 대응한 앱은 많이 보이지 않았습니다.&lt;/p&gt;&lt;p&gt;하지만 마시멜로우 권한대응때처럼 점점 이 기능에 대한 대응이 필요하게 될것입니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;여러분 모두 오레오 기기의 점유율이 늘어나기전에 새로운 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;변화에 대응해서 좋은 앱서비스 품질을 유지하셨으면 좋겠습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;감사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;안드로이드 개발자끼리 소통하기위한 오픈채팅방을 만들었습니다.&lt;/p&gt;&lt;p&gt;안드로이드 관련 Q&amp;amp;A및 팁을 공유하는 곳입니다.&lt;/p&gt;&lt;p&gt;관심있으신분들은 참여해보세요.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://open.kakao.com/o/g8rSGB&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://open.kakao.com/o/g8rSGB&lt;/a&gt;&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/77</guid>
<comments>https://gun0912.tistory.com/77#entry77comment</comments>
<pubDate>Sun, 04 Feb 2018 21:12:18 +0900</pubDate>
</item>
<item>
<title>[안드로이드/Android]빌드시간 최적화하기(빌드시간 70%감소)</title>
<link>https://gun0912.tistory.com/76</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:200px;width: 200px; height: 200px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/998F693359CBB60F1A&quot; filemime=&quot;image/jpeg&quot; filename=&quot;build time.jpg&quot; height=&quot;200&quot; style=&quot;width: 200px; height: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;안드로이드 개발을 마치고 에뮬레이터나 실제 기기에서 테스트해보려면 우리는 빌드를 하고 설치해야만 합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;이때 빌드시간이 어떤상황이냐에 따라서 몇십분이 될수도 있고 단 몇십초가 될 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Eclipse에서 Android Studio로 넘어오신분들은 아시겠지만 제일 처음에 넘어왔을때 불만이 빌드속도가 너무 느리다는것이었습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그래서 빌드속도를 빠르게 하기위하여 'android studio speed up', 'android build time' 등으로 각종 팁을 찾아보고 적용해 보았습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;daemon을 활성화하거나 병렬로 실행하거나 기타 등등의 여러 방법이 있었지만 실제로는 빌드시간이&amp;nbsp;감소하는 효과를 보지 못했습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;하지만 아래 소개할 &lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;이 방법은 확실하게 빌드시간을&amp;nbsp;줄일 수 있습니다.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;저는 70%의 빌드시간&amp;nbsp;감소를 경험했습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;안드로이드 빌드시간이 감소하면 안좋을 수도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;빌드를 기다리는 시간동안 개발자들은 밀린 카카오톡 메세지를 확인하거나 화장실을 가거나 볼일을 보곤 합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그런데 빌드시간이 줄어들면 이런 시간이 줄어들어서 줄인시간만큼 우린 더 많이 일해야할지도 모릅니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;strike&gt;이 글을 대표님은 좋아하지만 직원들은 싫어합니다.&lt;/strike&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;제가 적용한 방법은 Google I/O 17에서 소개된 내용을 참고해서 적용했습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=7ll-rkLCtyk&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://www.youtube.com/watch?v=7ll-rkLCtyk&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그 세션에서 소개한 모든 방법을 적용하지는 않았고 제게 맞는 방법으로 맞추어서 적용했습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;각 항목별로 빌드시간을 줄이는법에 대해 알아보겠습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;바쁘신분(&lt;strike&gt;읽기 귀찮으신분&lt;/strike&gt;)들은 Sample 프로젝트를 다운받아서 확인해보셔도 좋습니다.&lt;/p&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/BuildTimeSpeedUpSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/BuildTimeSpeedUpSample&lt;/a&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;h1&gt;1.&amp;nbsp;Avoid legacy multidex&lt;/h1&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;65,536개 이상의 함수를 사용하게되면 우리는 &lt;a href=&quot;https://developer.android.com/studio/build/multidex.html?hl=ko&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;Multidex&lt;/a&gt;를 사용합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;예전에는 Multidex가 생소했지만 요즘에는 라이브러리들을 많이 사용하면서 65,536개 이상은 훌쩍 넘기게되고 Multidex를 자주 사용합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;여기서 Android 5.0(API 레벨 21)이상이냐 미만이냐에 따라서 Multidex를 다루는 방법이 달라집니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Android 5.0(API 레벨 21) 미만의 플랫폼 버전에서는 앱 코드 실행을 위해 Dalvik 런타임을 사용합니다. 기본적으로, Dalvik에서는 APK당 하나의 classes.dex 바이트코드 파일로 앱을 제한합니다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Android 5.0(API 레벨 21) 이상에서는 ART라는 런타임을 사용합니다. 기본적으로 이 런타임은 APK 파일로부터 여러 개의 DEX 파일을 로드하는 것을 지원합니다.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;즉, Android 5.0(API 레벨 21) 이상에서는 Multidex가 훨씬 빠릅니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그래서&amp;nbsp;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;minSdkVersion를 21로 설정해주면 아주 빠른 빌드속도를 경험할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;하지만 대부분 minSdkVersion를 14나 16으로 설정해주기때문에 함부로 minSdkVersion을 21로 설정할 수 없습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그럴때 Flavor를 활용해줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;a href=&quot;http://gun0912.tistory.com/74&quot; target=&quot;_blank&quot;&gt;[IT/Android-TIP (한글)] - [안드로이드]Flavors로 같은 소스코드 다른앱 만들기&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;dev/prd로 Flavor를 나누어서 개발할때만 minSdkVersion를 21로 설정하고 배포할때는 원래의 minSdkVersion를 적용하도록 설정해주면 됩니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;dev {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;stage&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;minSdkVersion &lt;span style=&quot;color:#6897bb;&quot;&gt;21&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;prd {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;stage&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionCode &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;Date().format(&lt;span style=&quot;color:#6a8759;&quot;&gt;'yyMMddHHmm'&lt;/span&gt;).toInteger()&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;free {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;mode&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;applicationIdSuffix &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.free&quot;&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;paid {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;mode&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;applicationIdSuffix &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.paid&quot;&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;여기서는 기존에 flavor로 무료앱과 유료앱을 나누어서 운영하고 있다가 dev/prd를 추가한 예시입니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;dimension을 stage/mode로 나누면 각각 dev/prd - free/paid 중에 선택되서 결정되게 됩니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;여기에 원래의 debug/release까지 있으니 build할수있는 variant는 아래와 같습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: square;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;devFreeDebug&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;devFreeRelease&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;devPaidDebug&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;devPaidRelease&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;prdFreeDebug&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;prdFreeRelease&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;clear: none; float: none;&quot;&gt;prdPaidDebug&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;prdPaidRelease&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;실제 개발할때는 devFreeDebug, devPaidDebug를 사용할 것이고 스토어에 올릴때는 prdFreeRelease, prdPaidRelease를 사용할 것입니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;사실상 나머지 다른 build variant들은 만들어졌지만 쓸모없는것들입니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그럴때 ignore를 사용해주면 좋습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;br /&gt;android.variantFilter { variant -&amp;gt;&lt;br /&gt;    &lt;span style=&quot;color:#cc7832;&quot;&gt;def &lt;/span&gt;buildName = variant.buildType.name;&lt;br /&gt;    &lt;span style=&quot;color:#cc7832;&quot;&gt;def &lt;/span&gt;flavorName = variant.getFlavors().get(&lt;span style=&quot;color:#6897bb;&quot;&gt;0&lt;/span&gt;).name;&lt;br /&gt;&lt;br /&gt;    &lt;span style=&quot;color:#cc7832;&quot;&gt;if &lt;/span&gt;(flavorName == &lt;span style=&quot;color:#6a8759;&quot;&gt;'dev' &lt;/span&gt;&amp;amp;&amp;amp; buildName == &lt;span style=&quot;color:#6a8759;&quot;&gt;'release'&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;            &lt;/span&gt;|| flavorName == &lt;span style=&quot;color:#6a8759;&quot;&gt;'prd' &lt;/span&gt;&amp;amp;&amp;amp; buildName == &lt;span style=&quot;color:#6a8759;&quot;&gt;'debug'&lt;/span&gt;) {&lt;br /&gt;        variant.setIgnore(&lt;span style=&quot;color:#cc7832;&quot;&gt;true&lt;/span&gt;);&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;사용하지 않을것 같은 variant들은 없애주면 실제로 사용하게될 4개의 variant들만 남습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:313px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9995ED3359CBBC7F10&quot; filemime=&quot;image/jpeg&quot; filename=&quot;KakaoTalk_2017-09-21-23-49-37_Photo_36.png&quot; height=&quot;200&quot; width=&quot;313&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;Google I/O 발표내용에 따르면이 방법을 적용하면 아래와 같은 빌드시간 감소를 줄일 수 있다고 합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99B3443359CBBCC32D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Speeding Up Your Android Gradle Builds (Google I_O '17).mp4 - 00.07.30.049.png&quot; height=&quot;461&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;2. Disable multi-APK&lt;/h1&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;APK파일의 크기가 클때 abi별/density별로 APK파일을 나누어서 용량을 줄일 수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;a href=&quot;https://developer.android.com/studio/build/configure-apk-splits.html&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://developer.android.com/studio/build/configure-apk-splits.html&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;실제로 많은 서비스에서 x86용, x86_64용, armeabi-v7a용, arm64-v8a용으로 APK를 분할해서 제공하고 있습니다.&lt;/p&gt;&lt;p&gt;아래와 같은 방식으로 split을 할 수 있습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;splits {&lt;br /&gt;    abi {&lt;br /&gt;        &lt;span style=&quot;color:#9876aa;&quot;&gt;enable &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;true&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;        &lt;/span&gt;reset()&lt;br /&gt;        include &lt;span style=&quot;color:#6a8759;&quot;&gt;'x86'&lt;/span&gt;, &lt;span style=&quot;color:#6a8759;&quot;&gt;'x86_64'&lt;/span&gt;, &lt;span style=&quot;color:#6a8759;&quot;&gt;'armeabi-v7a'&lt;/span&gt;, &lt;span style=&quot;color:#6a8759;&quot;&gt;'arm64-v8a'&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;        &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;universalApk &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;false&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;    &lt;/span&gt;}&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;그런데 이런 split작업은 빌드시간을 증가시키는 원인이 됩니다.&lt;/p&gt;&lt;p&gt;그러므로 우리는 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;개발단계에서는 abi별로 split하는 작업을 하지 않게 만들어주어야 합니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;1번의 방법에서 우리는 dev/prd&amp;nbsp;flavor를 만들었습니다.&lt;/p&gt;&lt;p&gt;그러므로 prd일때만 split해주도록 설정하면 개발에서는 split하지않고 배포할때만 split하도록 설정할 수 있습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;android.variantFilter { variant -&amp;gt;&lt;br /&gt;    &lt;span style=&quot;color:#cc7832;&quot;&gt;def &lt;/span&gt;flavorName = variant.getFlavors().get(&lt;span style=&quot;color:#6897bb;&quot;&gt;0&lt;/span&gt;).name;&lt;br /&gt;    splits.abi.enable = (flavorName == &lt;span style=&quot;color:#6a8759;&quot;&gt;'prd'&lt;/span&gt;);&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99CB603359CBBE0C11&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Speeding Up Your Android Gradle Builds (Google I_O '17).mp4 - 00.09.35.241.png&quot; height=&quot;461&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;3. Minimize included resources / Disable PNG Crunching&lt;/h1&gt;&lt;p&gt;개발을 하면서 우리는 보통 1개의 테스트폰만을 사용합니다.&lt;/p&gt;&lt;p&gt;한국어이면서 xxxhdpi이거나 특정 해상도인 테스트폰을 사용할것입니다.&lt;/p&gt;&lt;p&gt;그럴때 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;resource를 특정 언어와 해상도로 고정해두면 빌드시간을 줄일 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;또한 안드로이드에서 기본으로 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;PNG를 최적화하는 기능을 끄면 빌드시간을 줄일 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;dev flavor에서 아래와 같이 선언해주면 간단히 적용할 수 있습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;dev {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;stage&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;minSdkVersion &lt;span style=&quot;color:#6897bb;&quot;&gt;21&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6897bb;&quot;&gt;    &lt;/span&gt;aaptOptions.cruncherEnabled = &lt;span style=&quot;color:#cc7832;&quot;&gt;false&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;    &lt;/span&gt;resConfigs &lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;ko&quot;&lt;/span&gt;, &lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;xxxhdpi&quot;&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9960C03359CBBF1213&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Speeding Up Your Android Gradle Builds (Google I_O '17).mp4 - 00.10.37.169.png&quot; height=&quot;461&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/995E113359CBBF2032&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Speeding Up Your Android Gradle Builds (Google I_O '17).mp4 - 00.12.35.421.png&quot; height=&quot;461&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;4.&amp;nbsp;Avoid inadvertent changes&lt;/h1&gt;&lt;p&gt;앱을 개발하면서 불필요하게 증가시키는 요소들을 줄일 수 있습니다.&lt;/p&gt;&lt;p&gt;앱의 versionCode를 빌드시간으로 정의해서 사용하는 경우도 많이 볼 수 있습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;def &lt;/span&gt;buildDateTime = &lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;Date().format(&lt;span style=&quot;color:#6a8759;&quot;&gt;'yyMMddHHmm'&lt;/span&gt;).toInteger()&lt;br /&gt;android {&lt;br /&gt;    defaultConfig {&lt;br /&gt;        &lt;span style=&quot;color:#9876aa;&quot;&gt;versionCode &lt;/span&gt;buildDateTime&lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;하지만 계속 새로 갱신이 되면서 Manifest가 변경되고 이는 빌드시간을 증가시키는 원인이 됩니다.&lt;/p&gt;&lt;p&gt;이러한 방법도 빌드시간을 줄일 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;개발할때&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;는 versionCode를 특정값으로 fix하고 release할때만 실제로 적용시키면 됩니다.&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;dev {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;stage&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionCode &lt;/span&gt;&lt;span style=&quot;color:#6897bb;&quot;&gt;100&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;prd {&lt;br /&gt;    &lt;span style=&quot;color:#9876aa;&quot;&gt;dimension &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;stage&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionCode &lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;new &lt;/span&gt;Date().format(&lt;span style=&quot;color:#6a8759;&quot;&gt;'yyMMddHHmm'&lt;/span&gt;).toInteger()&lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/9934F53359CBC01F05&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Speeding Up Your Android Gradle Builds (Google I_O '17).mp4 - 00.16.37.796.png&quot; height=&quot;461&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;5. Fabric&lt;/h1&gt;&lt;p&gt;요즘에는 Fabric을 활용하여 사용자분석이나 오류로그를 분석하는 경우가 많습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;http://gun0912.tistory.com/53&quot; target=&quot;_blank&quot;&gt;[IT/Android-TIP (한글)] - [안드로이드]오류 리포팅 서비스 비교(Google Analytics, URQA, Userhabit, Fabric)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;개발단계에서는 fabric이 사실 필요 없습니다.&lt;/p&gt;&lt;p&gt;그럴때 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;fabric을 사용하지 않는것만으로도 빌드시간을&amp;nbsp;줄일 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;buildTypes {&lt;br /&gt;&lt;br /&gt;    debug {&lt;/p&gt;&lt;p&gt;        ...&lt;br /&gt;        ext.enableCrashlytics = &lt;span style=&quot;color:#cc7832;&quot;&gt;false&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    &lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;혹은 개발에서도 Fabric을 사용해야하는경우는 Build id를 update해주는 기능을 꺼주어도 됩니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;buildTypes {&lt;br /&gt;&lt;br /&gt;    debug {&lt;br /&gt;        ext.alwaysUpdateBuildId = &lt;span style=&quot;color:#cc7832;&quot;&gt;false&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;    &lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;}&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;&lt;br /&gt;&lt;/h1&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h1&gt;6. 라이브러리 버전&lt;/h1&gt;&lt;p&gt;라이브러리를 사용할때 버전을 끝까지 명시해주는것이 좋습니다.&lt;/p&gt;&lt;p&gt;x.x.+ 로 사용할 경우 24시간마다 최신버전을 알아오기때문에 이는 빌드시간이 늘어나는 원인이 됩니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;br /&gt;dependencies {&lt;br /&gt;    compile &lt;span style=&quot;color:#6a8759;&quot;&gt;'com.android.support:appcompat-v7:26.0.0-alpha1'&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;compile 'com.android.support:appcompat-v7:26.+'&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;h1&gt;결과&lt;/h1&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;실제 프로젝트에 적용했을때 73%의 빌드시간 감소효과를 경험 했습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;측정방법은 Android Studio에서 [Build]-&amp;gt;[Clean Project]후 [Build]-&amp;gt;[Build APK]의 방식으로 수행했습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;table class=&quot;txc-table&quot; width=&quot;784&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot; style=&quot;border:none;border-collapse:collapse;;font-family:&quot; 맑은=&quot;&quot; 고딕&quot;,=&quot;&quot; sans-serif;font-size:13px&quot;=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-top:1px solid #ccc;border-left:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;평균&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-top:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;110초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-top:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;30초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-top:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;72.99% 감소&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-left:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;1회&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;112초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;26초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-left:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;2회&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;103초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;25초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-left:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;3회&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;116초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;33초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-left:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;4회&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;110초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;34초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;border-left:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;5회&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;107초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;30초&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;td style=&quot;width:196;height:24;border-bottom:1px solid #ccc;border-right:1px solid #ccc;;&quot;&gt;&lt;p style=&quot;text-align: right;&quot;&gt;&amp;nbsp;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 빌드시간은 프로젝트의 크기에 따라 다르고 측정하는 PC에 따라 다릅니다.&lt;/p&gt;&lt;p&gt;각자의 프로젝트와 PC환경에서 위와 같은 방법을 적용하기 전/후의 시간을 측정해서 비교해봐야 할것입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이미 구현되어있는 Sample프로젝트를 참고하시기 바랍니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/BuildTimeSpeedUpSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/BuildTimeSpeedUpSample&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;style type=&quot;text/css&quot;&gt;
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px NanumBarunGothic}
span.s1 {text-decoration: underline}
&lt;/style&gt;&lt;p&gt;이 Sample프로젝트가 유용하셨다면 오른쪽 상단에 Star버튼도 꾹 눌러주시면 감사하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;어때요?&amp;nbsp;&lt;/p&gt;&lt;p&gt;이제 빌드시간 70%줄이고 아낀시간으로 그만큼 더 불꽃코딩 할 수 있겠죠?&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;width: 250px; height: 144px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99ABDA3359CBC4511F&quot; filemime=&quot;image/gif&quot; filename=&quot;work.gif&quot; height=&quot;144&quot; style=&quot;width: 250px; height: 144px;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;모두 행복한 코딩하시기 바랍니다.&lt;/p&gt;&lt;p&gt;감사합니다.&lt;/p&gt;&lt;style type=&quot;text/css&quot;&gt;
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px NanumBarunGothic}
span.s1 {text-decoration: underline}
&lt;/style&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/76</guid>
<comments>https://gun0912.tistory.com/76#entry76comment</comments>
<pubDate>Thu, 28 Sep 2017 00:35:05 +0900</pubDate>
</item>
<item>
<title>[안드로이드/Android]유용한 라이브러리 - TedRxOnActivityResult(RxJava를 활용한 startActivityForResult())</title>
<link>https://gun0912.tistory.com/75</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:200px;width: 200px; height: 200px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/99BD5B3359A8A06A01&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2017-09-01 오전 8.47.51.png&quot; height=&quot;200&quot; style=&quot;width: 200px; height: 200px;&quot; width=&quot;200&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Activity를 실행하고 해당 결과를 가져오거나 결과값을 알고 싶을때 우리는 startActivityForResult()를 사용합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;startActivityForResult()의 결과는 onActivityResult()에서 받아서 처리합니다.&lt;/p&gt;&lt;p&gt;만약 소스코드를 작성한다면 아래와 같이 작성할 수 있을것입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;void&lt;/span&gt; onCreate(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {
    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;onCreate(savedInstanceState);
    &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;
    
    startActivityForResult(intent,&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;REQ_CODE_AAA&lt;/span&gt;);
    
  }

  &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;void&lt;/span&gt; onActivityResult(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;int&lt;/span&gt; resultCode, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Intent&lt;/span&gt; data) {
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;switch&lt;/span&gt; (requestCode){
      &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;REQ_CODE_AAA&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;if&lt;/span&gt;(resultCode&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;RESULT_OK&lt;/span&gt;){
          doSomething();
        }
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;break&lt;/span&gt;;
      &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;onActivityResult(requestCode, resultCode, data);    
    }
    
  }
&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;하지만 이 작업은 은근 귀찮은 일입니다.&lt;/p&gt;&lt;p&gt;호출한곳에서 결과값을 받아야 하는데 다른곳에서 처리 하다보면 처리가 누락되는 문제가 생길 수도 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;특히 RxJava를 사용하고 있는경우 Chaining방식이 아니라 연속성을 해치게됩니다.&lt;/p&gt;&lt;p&gt;RxJava에서는 아래와 같은 방식으로 사용하고 있을겁니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt;  &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;AA&lt;/span&gt;()
  .filter(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;)
  .subscribeOn(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;)
  .observeOn(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;)
  .subscribe(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;);&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 startActivityForResult()와 결과값을 받아오는 방식도 위와같은 방식으로 사용하고 싶었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 &lt;strike&gt;답답해서&lt;/strike&gt; &lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;제가&amp;nbsp;TedRxOnActivityResult를&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;만들었습니다.&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;TedRxOnActivityResult는 Chaining방식으로 startActivityForResult()를 수행하고 결과값을 받아올 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/TedRxOnActivityResult&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/TedRxOnActivityResult&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;설정&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;현재 사용중인 RxJava의 버전에 따라서 선택할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;RxJava1&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt;&lt;p&gt;dependencies {
    compile &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;'&lt;/span&gt;gun0912.ted:tedonactivityresult-rx1:1.0.2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14pt;&quot;&gt;RxJava2&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt;&lt;p&gt;dependencies {
    compile &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;'&lt;/span&gt;gun0912.ted:tedonactivityresult-rx2:1.0.2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18.6667px;&quot;&gt;Normal&lt;/span&gt;&lt;/p&gt;&lt;p&gt;RxJava를 사용하고 있지 않아도 사용할 수 있습니다.&lt;/p&gt;&lt;pre style=&quot;padding: 16px; background-color: rgb(246, 248, 250); box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; overflow: auto; border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt;&lt;p&gt;dependencies {
    compile &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;'&lt;/span&gt;gun0912.ted:tedonactivityresult:1.0.2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;사용 방법&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;RxJava1/RxJava2 모두 사용방법은 같습니다.&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;TedRxOnActivityResult&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;with(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;this&lt;/span&gt;)
    .startActivityForResult(intent)
    .subscribeOn(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;)
    .observeOn(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;...&lt;/span&gt;)
    .subscribe(activityResult &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;&amp;gt;&lt;/span&gt; {

      &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;if&lt;/span&gt; (activityResult&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getResultCode() &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;RESULT_OK&lt;/span&gt;) {
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Intent&lt;/span&gt; data &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; activityResult&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getData();
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;String&lt;/span&gt; name &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getStringExtra(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;SampleActivity&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;EXTRA_NAME&lt;/span&gt;);
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;int&lt;/span&gt; age &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getIntExtra(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;SampleActivity&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;EXTRA_AGE&lt;/span&gt;, &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;);
      }

    });&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;RxJava를 사용하고 있지않거나 chaining방식을 원하지 않는다면,&amp;nbsp;Listener를 활용하는 방식으로 사용할 수도 있습니다.&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding: 16px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; word-break: normal; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;TedOnActivityResult&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;with(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;this&lt;/span&gt;)
    .setIntent(intent)
    .setListener((resultCode, data) &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;&amp;gt;&lt;/span&gt; {
       &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;if&lt;/span&gt; (resultCode &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;RESULT_OK&lt;/span&gt;) {
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;String&lt;/span&gt; name &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getStringExtra(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;SampleActivity&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;EXTRA_NAME&lt;/span&gt;);
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;int&lt;/span&gt; age &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getIntExtra(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;SampleActivity&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;EXTRA_AGE&lt;/span&gt;, &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;);
      }

    })
    .startActivityForResult();&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Github에서 샘플프로젝트를 다운받아보시고 테스트해보시면 이해하시는데 좀더 수월합니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/TedRxOnActivityResult&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/TedRxOnActivityResult&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 라이브러리가 유용하셨다면 오른쪽 상단에 Star버튼도 꾹 눌러주시면 감사하겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;TedRxOnActivityResult를 활용하셔서 좀더 효율적인 코드를 작성하시고 코딩시간을 줄이시길 바랍니다.&lt;/p&gt;&lt;p&gt;감사합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 164px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/993E9C3359A89F3408&quot; filemime=&quot;image/gif&quot; filename=&quot;party.gif&quot; height=&quot;164&quot; style=&quot;width: 300px; height: 164px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/75</guid>
<comments>https://gun0912.tistory.com/75#entry75comment</comments>
<pubDate>Fri, 01 Sep 2017 10:17:13 +0900</pubDate>
</item>
<item>
<title>[안드로이드/Android]Flavors로 같은 소스코드 다른앱 만들기</title>
<link>https://gun0912.tistory.com/74</link>
<description>&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;width: 250px; height: 250px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/270CDA3D591579EB01&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ProductFlavor.jpg&quot; height=&quot;250&quot; style=&quot;width: 250px; height: 250px;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 개인앱을 여러개 운영하고 있습니다.&lt;/p&gt;&lt;p&gt;앗! 이 포스팅을 통해 제 개인앱중 몇가지를 소개해 드리겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;#특가특공대&lt;/b&gt;&lt;/p&gt;&lt;p&gt;- 특가항공권&amp;nbsp;프로모션/이벤트 정보 알림&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.gun0912.promotion&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://play.google.com/store/apps/details?id=com.gun0912.promotion&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;width: 250px; height: 445px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2226AC4659157AF234&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot1.png&quot; height=&quot;445&quot; style=&quot;width: 250px; height: 445px;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;width: 250px; height: 444px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2127F54659157AF628&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot2.png&quot; height=&quot;444&quot; style=&quot;width: 250px; height: 444px;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;width: 250px; height: 445px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/271DB64659157AF409&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot3.png&quot; height=&quot;445&quot; original=&quot;yes&quot; style=&quot;width: 250px; height: 445px;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;#이번에내려요&lt;/b&gt;&lt;/p&gt;&lt;p&gt;-&amp;nbsp;목적지 도착 알림(도착지 알림)&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.gun0912.Nmap&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://play.google.com/store/apps/details?id=com.gun0912.Nmap&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26234E5059157C0908&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ko_Screenshot2.png&quot; height=&quot;444&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/233BD74059157B9C14&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ko_Screenshot3.png&quot; height=&quot;443&quot; style=&quot;text-align: center;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;text-align: center;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/237FE14059157B9C2E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ko_Screenshot4.png&quot; height=&quot;443&quot; style=&quot;text-align: center;&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이런 개인앱을 운영하면서 그안에 광고를 넣고 수익을 내고 있습니다.&lt;/p&gt;&lt;p&gt;하지만 이런 광고를 싫어하는 사용자들도 있습니다.&lt;/p&gt;&lt;p&gt;돈주고 살테니 유료앱을 만들어서 제공해달라고 하는 사용자들도 있었습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그래서 저는 무료앱뿐만 아니라 유료앱을 만들기로 하였습니다.&lt;/p&gt;&lt;p&gt;무료앱과 유료앱의 소스코드상에서 차이는 딱 1가지일것입니다.&lt;/p&gt;&lt;p&gt;'광고를 표시하느냐 마느냐'&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그냥 아무생각 없이 만들었다면 프로젝트를 복사해서 2개의 프로젝트로 나누고 한군데에서는 광고를 표시하고 나머지 다른데에서는 광고를 표시하지 않게 했을 것입니다.&lt;/p&gt;&lt;p&gt;만약 수정사항이 발생하거나 추가적인 기능이 필요하다면 각각 2개의 프로젝트에 소스코드를 넣어주는 번거롭고 오류를 발생시킬만한 여지가 있는 상황에 놓이게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이럴때 Flavor를 이용한다면 유용합니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;Flavor는 대부분의 소스코드는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;똑같고 일부 값에 의해서 동작을 달리 해야하거나, 앱이름/아이콘을 달리해야하거나 등등의 상황일경우에 유용하게 쓰일 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이런 경우가 유용하게 쓰일것입니다.&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;1. 유료앱/무료앱에 따라서 광고를 보여주거나 기타 설정을 다르게 하고 싶은 경우&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;2. 플레이스토어, 원스토어, 바이두, 텐센트등 배포하는 마켓에 따라서 표시하는 내용이나 값을 다르게 하고 싶은 경우&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;3. 고객용/관리자용 혹은 고객용/업체용 등으로 버전을 나누어야 하는 경우&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;4. 기획자가 개발,스테이징,운영 환경에 따른 각각의 앱동작을 확인하고 싶은 경우&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;5. 국가별/언어별로 앱의 내용을 달리 해서 보여주고 싶은 경우&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;저는 유료앱과 무료앱에 따라서 광고를 보여주고 안보여주고 앱아이콘과 앱이름을 다르게 표시해주는 샘플앱을 만들어 보겠습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;productFlavors 선언&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;app의 build.gradle에 아래와 같이 productFlavors 내용을 선언해 줍니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;android {&lt;br /&gt;    &lt;/p&gt;&lt;p&gt;    productFlavors {&lt;br /&gt;        free {&lt;br /&gt;            &lt;span style=&quot;color:#9876aa;&quot;&gt;applicationIdSuffix &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.free&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionCode &lt;/span&gt;&lt;span style=&quot;color:#6897bb;&quot;&gt;1&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6897bb;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionName &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;1.0.0&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;        &lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;        paid {&lt;br /&gt;            &lt;span style=&quot;color:#9876aa;&quot;&gt;applicationIdSuffix &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.paid&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionCode &lt;/span&gt;&lt;span style=&quot;color:#6897bb;&quot;&gt;2&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6897bb;&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;versionName &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;1.0.1&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;        &lt;/span&gt;}&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;applicationIdSuffix를 이용하면 원래의 applicationId 뒤에 각각 free/paid앱의 아이디가 추가로 붙게됩니다.&lt;/p&gt;&lt;p&gt;예를들어 기본 application id가&amp;nbsp;'com.gun0912'였다면&lt;/p&gt;&lt;p&gt;free는 'com.gun0912.free'가 되고 paid는 'com.gun0912.paid'의 application id가 됩니다.&lt;/p&gt;&lt;p&gt;versionCode, versionName을 각각 설정해서 버전관리를 해주도록 합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이렇게 flavor로 앱을 나누고 나면 BuildVariant에서 2개의 앱이 각각 나누어서 생기는것을 확인해 보실 수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:332px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/25203B34591580CB18&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 12 18-30-33.png&quot; height=&quot;421&quot; width=&quot;332&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;앱을 실행할때 각각의 free/paid로&amp;nbsp;나누어서 실행할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;변수 활용하기&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;무료앱/유료앱에 따라서 광고를 보여주고 보여주지 않기위해서 buildConfigField를 활용합니다.&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); color: rgb(169, 183, 198); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;p&gt;&lt;br class=&quot;Apple-interchange-newline&quot;&gt;android {&lt;br /&gt;    &lt;/p&gt;&lt;p&gt;    productFlavors {&lt;br /&gt;        free {&lt;br /&gt;            ...&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;            &lt;/span&gt;buildConfigField &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;'boolean'&lt;/span&gt;, &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;'IS_FREE'&lt;/span&gt;, &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;true&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;      &lt;/span&gt;  }&lt;br /&gt;&lt;br /&gt;        paid {&lt;br /&gt;            ...&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;            &lt;/span&gt;buildConfigField &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;'boolean'&lt;/span&gt;, &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;'IS_FREE'&lt;/span&gt;, &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;false&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;       &lt;/span&gt; }&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;위와 같이 선언하면 소스코드에서 아래와 같이 사용할 수 있습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;br /&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;if&lt;/span&gt;(BuildConfig.&lt;span style=&quot;color:#9876aa;font-style:italic;&quot;&gt;IS_FREE&lt;/span&gt;){&lt;br /&gt;    &lt;span style=&quot;color:#808080;&quot;&gt;// 무료앱&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    // 광고 보여주기&lt;br /&gt;&lt;/span&gt;}&lt;span style=&quot;color:#cc7832;&quot;&gt;else&lt;/span&gt;{&lt;br /&gt;    &lt;span style=&quot;color:#808080;&quot;&gt;// 유료앱&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;    // 광고 보여주지 않기&lt;br /&gt;&lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;이뿐만 아니라 flavor를 사용하는 목적에 맞게 여러 변수들을 만들고 소스코드상에서 이를 구분해서 활용할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt; color: rgb(255, 0, 0);&quot;&gt;앱 이름 달리하기&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;각각의 앱의 이름을 다르게 정해줄 수도 있습니다.&lt;/p&gt;&lt;p&gt;이럴때 manifestPlaceholders를 이용합니다.&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;p style=&quot;color: rgb(169, 183, 198);&quot;&gt;&lt;br class=&quot;Apple-interchange-newline&quot;&gt;android {&lt;br /&gt;    &lt;/p&gt;&lt;p style=&quot;color: rgb(169, 183, 198);&quot;&gt;    productFlavors {&lt;br /&gt;        free {&lt;br /&gt;           &lt;span style=&quot;font-size: 9pt;&quot;&gt; ...&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(169, 183, 198);&quot;&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;            &lt;/span&gt;&lt;span style=&quot;color: rgb(152, 118, 170);&quot;&gt;manifestPlaceholders &lt;/span&gt;= [ &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;appLabel&lt;/span&gt;: &lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;Flavor(Free)&quot; &lt;/span&gt;]&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        paid {&lt;br /&gt;           &lt;span style=&quot;font-size: 9pt;&quot;&gt; ...&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 9pt;&quot;&gt;&lt;font color=&quot;#6a8759&quot;&gt;            &lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(152, 118, 170); font-size: 9pt;&quot;&gt;manifestPlaceholders &lt;/span&gt;&lt;span style=&quot;color: rgb(169, 183, 198); font-size: 9pt;&quot;&gt;= [ &lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89); font-size: 9pt;&quot;&gt;appLabel&lt;/span&gt;&lt;span style=&quot;color: rgb(169, 183, 198); font-size: 9pt;&quot;&gt;: &lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89); font-size: 9pt;&quot;&gt;&quot;Flavor(&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89); font-size: 9pt;&quot;&gt;Paid&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(106, 135, 89);&quot;&gt;)&quot; &lt;/span&gt;&lt;span style=&quot;font-size: 9pt; color: rgb(169, 183, 198);&quot;&gt;]&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(169, 183, 198);&quot;&gt;        }&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;}&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;appLabel을 각각 원하는 이름을 정해두고 이를 아래의 Manifest에 변수로 넣어주면 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;application&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:allowBackup=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;true&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:icon=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@mipmap/ic_launcher&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:label=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;${appLabel}&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:supportsRtl=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;true&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:theme=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@style/AppTheme&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;activity &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;.MainActivity&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;intent-filter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;            &amp;lt;action &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.action.MAIN&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;            &amp;lt;category &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;android.intent.category.LAUNCHER&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;        &amp;lt;/intent-filter&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &amp;lt;/activity&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;앱 아이콘 달리하기&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;각각 앱에 따라서 이름을 다르게 한것처럼 아이콘도 다르게 할 수 있습니다.&lt;/p&gt;&lt;p&gt;Flavor를 사용하느냐 사용하지 않느냐에 따라서 폴더의 구조가 아래와 같이 나뉘게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: inherit; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 0px; padding: 0.6em 1.2em; border: 0px; border-radius: 3px; background-color: rgb(247, 247, 247); color: rgb(51, 51, 51); word-wrap: normal; word-break: break-all; line-height: 1.2; overflow-x: auto;&quot;&gt;&lt;p style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;lt;Flavor 미사용&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;gt;                  &lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;lt;Flavor 사용&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;
  ┗━app                         ┗━app
          ┗━src                         ┗━src
                 ┗━main                       ┣━free&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;
                          ┣━java               &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;┃  ┣━java
  &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;         ┗━res   &lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;       &lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;┃  ┗━res&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 10pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;
                      &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;            ┣━main
                                     &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt; ┃  ┣━java
                    &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;              ┃  ┗━res
                  &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;                ┗━paid&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 0.8em;&quot;&gt;&lt;span style=&quot;font-size: 10pt; font-family: &amp;quot;맑은 고딕&amp;quot;, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;                 &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;                 ┃  ┣━java
 (노가다...)    &lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;       &amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 11pt;&quot;&gt;       ┃  ┗━res&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;각각 free, paid의 res폴더에 같은 이름의 아이콘을 넣어주면 앱은 build 환경에 따라서 그에맞는 앱아이콘을 표시해줄것입니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:326px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/245C6D415915865306&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 5월 12 18-53-31.png&quot; height=&quot;421&quot; width=&quot;326&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이미지 뿐만 아니라 dimens.xml, string.xml 등 각자 원하는 방법에 따라서 이 폴더구조를 활용하면 됩니다.&lt;/p&gt;&lt;p&gt;위에서 살펴보았던 앱의 이름을 달리 하는 방법도&amp;nbsp;manifestPlaceholders를 사용하지 않고 각각 free, paid폴더에 string.xml에 앱이름을 넣는 방법으로도 가능합니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위와같이 앱을 만들어서 각각 설치를 해주면 소스코드는 똑같지만 내용은 다른 2개의 앱이 설치되어 있는것을 확인할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:364px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26649B425915875429&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ProductFlavor.jpg&quot; height=&quot;364&quot; width=&quot;364&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;백문이불여일견이죠&lt;/p&gt;&lt;p&gt;위의 샘플 예제는 Github에서 다운받아서 테스트 해보실 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ParkSangGwon/ProductFlavorSample&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;https://github.com/ParkSangGwon/ProductFlavorSample&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Github을 들어가셨다면 꼭 Star 눌러주시면 감사하겠습니다!&lt;/p&gt;&lt;p&gt;저에게는 별풍선 주시는 효과가 있어요!&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:150px;width: 150px; height: 76px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2625B4395917C42F09&quot; filemime=&quot;image/jpeg&quot; filename=&quot;68747470733a2f2f7068617365722e696f2f636f6e74656e742f6e6577732f323031352f30392f31303030302d73746172732e706e67.png&quot; height=&quot;76&quot; original=&quot;yes&quot; style=&quot;width: 150px; height: 76px;&quot; width=&quot;150&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;좀더 자세한 내용이 궁금하시다면 &lt;a href=&quot;https://developer.android.com/studio/build/build-variants.html?hl=ko#sourceset-build&quot; target=&quot;_blank&quot; class=&quot;tx-link&quot;&gt;구글 공식 문서&lt;/a&gt;를 살펴보셔도 좋습니다.&lt;/p&gt;&lt;p&gt;소스코드는 비슷하지만 일부분만 다른 앱을 만들고 싶으시다면 flavor를 활용해서 효율적인 코딩을 하시기 바랍니다.&lt;/p&gt;&lt;p&gt;감사합니다.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:250px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2528024E591589A303&quot; filemime=&quot;image/gif&quot; filename=&quot;giphy-downsized.gif&quot; height=&quot;103&quot; width=&quot;250&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</description>
<category>Android-TIP (한글)</category>
<author>박상권</author>
<guid>https://gun0912.tistory.com/74</guid>
<comments>https://gun0912.tistory.com/74#entry74comment</comments>
<pubDate>Fri, 12 May 2017 19:11:44 +0900</pubDate>
</item>
<item>
<title>[안드로이드/Android]tools attribute 유용하게 활용하기(xmlns:tools=&quot;http://schemas.android.com/tools&quot;)</title>
<link>https://gun0912.tistory.com/73</link>
<description>&lt;p&gt;안드로이드를 개발하면서 프로젝트를 새로 만들거나 xml파일에서 우리가 자주 만나는 녀석이 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;xmlns:tools=&quot;http://schemas.android.com/tools&quot;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:244px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2227A84858DFBE4B09&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 23-50-12.png&quot; height=&quot;244&quot; width=&quot;244&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;xml에 tools:context=&quot;xxx&quot; 라는 걸 수도 없이 보아 왔지만&lt;/p&gt;&lt;p&gt;사실 저는 지금까지 그냥 아무생각없이 지워주거나 무시하고 넘어가곤 했었습니다.&lt;/p&gt;&lt;p&gt;&lt;strike&gt;저만 그랬던게 아니라고 말해주세요&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그러던 어느날 tools에 대해서 궁금해졌습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 208px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/231C5A3E58DF9A8109&quot; filemime=&quot;image/jpeg&quot; filename=&quot;다운로드 (1).jpg&quot; height=&quot;208&quot; style=&quot;width: 300px; height: 208px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;tools는 뭐하는 녀석일까요?&lt;/p&gt;&lt;p&gt;알고보면 tools는 그동안 우리가 필요로 했던 기능들을 제공해주는 녀석이었습니다.&lt;/p&gt;&lt;p&gt;&lt;b&gt;유용한 tools의 attribute들을 하나하나씩 소개해드리겠습니다.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;hr class=&quot;tx-hr-image-4&quot; style=&quot;background: url(//i1.daumcdn.net/deco/contents/horizontalrule/line08.gif?v=2) repeat-x scroll left; height: 15px; border:0; width:54px; margin:30px auto&quot;&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;tools:text&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;TextView를 만들고나서 이 TextView에 내용이 어떻게 나오는지 확인을 하고 싶은 경우가 있습니다.&lt;/p&gt;&lt;p&gt;그래서 android:text=&quot;어쩌고저쩌고&quot; 처럼 값을 넣어보고 '아 이렇게 나오는구나' 확인을 한뒤 값을 다시 지우곤 합니다.&lt;/p&gt;&lt;p&gt;혹시 이 테스트값을 지우지 않으면 앱에서 실제로 테스트 텍스트값이 나와버려서 곤란한 경우가 있습니다.&lt;/p&gt;&lt;p&gt;이러한 작업은 여간 귀찮은게 아니었지만 다른방법이 없기때문에 항상 이런식으로 TextView가 어떻게 나오는지 테스트를 해왔죠.&lt;/p&gt;&lt;p&gt;하지만 tools:text를 이용한다면 위의 귀찮음이 필요 없습니다.&lt;/p&gt;&lt;p&gt;tools:text에 값을 넣어주면 xml의 layout preview에서 어떻게 나오는지 확인할수 있고 실제 앱에서는 표시되지 않습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2272323658DF9C4A36&quot; filemime=&quot;image/jpeg&quot; filename=&quot;tools-attribute-text_2x.png&quot; height=&quot;186&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위 그림의 경우 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;preview에서는 오른쪽처럼 모두 값들이 표시되지만 실제 실행할때는&lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;&amp;nbsp;나오지 않습니다&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;그외에 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;tools:src, tools:background등도 위의 기능처럼 똑같이 사용할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;테스트해본결과 android:xxx 로 실행하는 거의 모든 기능을 tools:xxx 로 대체하면 preview에서는 반영되고 실제로는 나오지 않는 기능인걸 확인 할 수 있습니다&lt;/p&gt;&lt;p&gt;(예)&amp;nbsp;tools:layout_marginTop=&quot;16dp&quot; 등&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;tools:visibility&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;2개의 View가&amp;nbsp;겹쳐 있을경우 위의 View때문에 아래의 View가&amp;nbsp;가려지게 됩니다.&lt;/p&gt;&lt;p&gt;그래서 아래에 있는 View를 꾸밀때 어떻게 나오는지 잘 안보여서 위의 View 코드를 없애거나 android:visibilty=&quot;invisible&quot; 로 가려놓고 작업을 하곤 하는데 이것 또한 위의View를 보여지는걸로 코드를 돌려놓지 않으면 의도하지 않은 결과가 나옵니다.&lt;/p&gt;&lt;p&gt;하지만 이또한 tools:visibilty를 이용하면 해결할 수 있습니다.&lt;/p&gt;&lt;p&gt;단순히 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;preview에서만 안보일뿐 실제 실행할때는 원래대로&lt;/span&gt; View의 구조대로 나오게 됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;margin-top: 0px; margin-bottom: 1em; color: rgb(0, 102, 0); font-stretch: normal; line-height: 18px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Monaco, Courier, monospace; -webkit-font-smoothing: subpixel-antialiased; padding: 1em; overflow: auto; border: 1px solid rgb(221, 221, 221); background: rgb(247, 247, 247);&quot;&gt;&lt;span class=&quot;tag&quot; style=&quot;color: rgb(0, 0, 136);&quot;&gt;&amp;lt;Button&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:id&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;@+id/button&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:layout_width&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:layout_height&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:text&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;First&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt; &lt;/span&gt;&lt;span class=&quot;tag&quot; style=&quot;color: rgb(0, 0, 136);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot; style=&quot;color: rgb(0, 0, 136);&quot;&gt;&amp;lt;Button&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:id&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;@+id/button2&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:layout_width&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:layout_height&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;android:text&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;Second&quot;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;b style=&quot;color: inherit;&quot;&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;tools:visibility&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;atv&quot; style=&quot;color: rgb(136, 0, 0);&quot;&gt;&quot;invisible&quot;&lt;/span&gt;&lt;/b&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;tag&quot; style=&quot;color: rgb(0, 0, 136);&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 18pt;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;tools:listitem&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;RecyclerView나 ListView를 이용하는경우, 우리는 &amp;lt;RecyclerView&amp;gt; 혹은 &amp;lt;ListView&amp;gt;를 만들고 그에 해당하는 row item 의 xml을 만듭니다.&lt;/p&gt;&lt;p&gt;그럼 아래 스크린샷처럼 해당 RecyclerView/ListView에 해당하는 영역에 Item0, Item1, Item2, Item3 ... 으로 내용이 표시됩니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 499px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/275DAF4758DF9EC41D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 21-35-36.png&quot; height=&quot;499&quot; style=&quot;width: 300px; height: 499px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;tools:listitem을 이용하면 이 영역에 우리가 보여주고자 하는 row item 을 미리 넣어 볼수 있습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;android.support.v7.widget.RecyclerView&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:id=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@+id/rc_content&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:layout_width=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;match_parent&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:layout_height=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;match_parent&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:clipToPadding=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;false&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:paddingLeft=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@dimen/default_padding_small&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;android&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:paddingRight=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@dimen/default_padding_small&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;tools&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:listitem=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;@layout/content_item&quot;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:300px;width: 300px; height: 498px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2443B04D58DF9FB240&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 21-40-07.png&quot; height=&quot;498&quot; style=&quot;width: 300px; height: 498px;&quot; width=&quot;300&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;그냥 단순히 텍스트가 있는것보다는 RecyclerView/ListView에 내가 넣으려고하는 row들이 어떻게 보여질지 미리 확인할 수 있기때문에 훨씬 유용합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;이 방법은 GridView,ExpandableListView에서도 먹힙니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;또한 자매품으로 tools:listheader , tools:listfooter도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;tools:layout&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;xml에서 fragment를 사용하는 경우 preview에서는 회색화면으로 fragment의 영역을 보여줍니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:819px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/26783F4858DFA1601F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 21-47-07.png&quot; height=&quot;637&quot; width=&quot;819&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;하지만 여기서 &lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;tools:layout으로 fragment에 보여주려는 layout을 지정하면 어떻게 보여지는지 미리 확인할 수 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:801px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/236C1C4E58DFA1DB23&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 21-49-21.png&quot; height=&quot;646&quot; width=&quot;801&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;tools:showIn&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;tools:showIn은 tools:layout의 반대개념&lt;/span&gt;이라고 생각하면 됩니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;row item입장에서도 '내가 이렇게 만들어지면 나를 쓰는애들하고는 어떻게 조화되서 보이지?' 라고 궁금해할 수 있는데요&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;이때 showIn을 사용합니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;activity_main.xml에서 textview1.xml을 &amp;lt;include&amp;gt;태그를 이용하여 넣어주는경우가 있다고 가정해보겠습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/276A094358DFA82E2B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 22-16-16.png&quot; height=&quot;318&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;textview1.xml입장에서도 내가 activity_main에서 쓰일때 어떻게 보여질지 궁금할수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;tools:showIn을 사용하면 내가 어떻게 어울려서 보여질지 미리 알 수 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:820px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/21205D4258DFA85037&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 22-16-53.png&quot; height=&quot;316&quot; width=&quot;820&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;tools:locale&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;Android Studio의 기본언어는 영어입니다.&lt;/p&gt;&lt;p&gt;프랑스어나 스페인어 등 영어가 아닌 언어를 써주면 Android Studio는 우리에게 스펠링이 틀렸다고 안내가 나옵니다.&lt;/p&gt;&lt;p&gt;&lt;strike&gt;응안틀렸어&lt;/strike&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:438px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/2623413E58DFA49428&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 22-00-56.png&quot; height=&quot;158&quot; width=&quot;438&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;영어의 오타를 잡아주는 이 기능은 유용한경우가 많지만 때로는&amp;nbsp;영어가 아니어서 잘못 표시되는 경우도 있습니다.&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;이럴때 tools:locale을 이용해서 이 언어가 영어가 아닌 특정국가의 string임을 알려줄수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:520px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/242E504458DFA4D222&quot; filemime=&quot;image/jpeg&quot; filename=&quot;Screenshot at 4월 01 22-02-00.png&quot; height=&quot;204&quot; width=&quot;520&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 언어가 프랑스 언어인것을 알려주자 더이상 스펠링이 틀렸다고 알려주지 않습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;tools:context&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;이 포스팅의 영감을 주었던 tools:context입니다.&lt;/p&gt;&lt;p&gt;이 xml이 어떤 액티비티와 연관이 있는지를 알려주는 기능입니다.&lt;/p&gt;&lt;p&gt;tools:context=&quot;.MainActivity&quot;라고 만들어 두었다면 이 xml은 MainActivity와 연결되어있구나를 미리 알수있고 이와관련된 작업들에 대해서 작업을 도와줄수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:400px;width: 400px; height: 235px;;height:auto;max-width:100%&quot;&gt;&lt;img src=&quot;https://t1.daumcdn.net/cfile/tistory/230BD23D58DFA9DC19&quot; filemime=&quot;image/jpeg&quot; filename=&quot;tools-attribute-context_2x.png&quot; height=&quot;235&quot; style=&quot;width: 400px; height: 235px;&quot; width=&quot;400&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;위처럼 onButtonClicked라는 없는 함수이름을 지정해줄경우 새로 onButtonClicked()라는 함수를 만들어주어야 하는데 이 xml이 MainActivity와 연결되어있음을 알기때문에 MainActivity에 함수를 만들건지 도와주는 창을 띄워줄수 있습니다.&lt;/p&gt;&lt;p&gt;만약 context를 지정해주지 않으면 어디서 쓰이는지를 모르기때문에 어떤 추천창도 띄워줄수가 없습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;tools:ignore&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;예를들어 다국적 언어를 지원하는 앱을 만들경우 아래와 같이 string.xml을 만들면 Lint오류가 납니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;string.xml(en)&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;string &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;open&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;Open&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/string&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;string &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;close&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;Close&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;string.xml(ko)&lt;/p&gt;&lt;pre style=&quot;background-color: rgb(43, 43, 43); font-family: Menlo; font-size: 9pt;&quot;&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;string &lt;/span&gt;&lt;span style=&quot;color: rgb(186, 186, 186);&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&quot;open&quot;&lt;/span&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;font color=&quot;#a9b7c6&quot;&gt;열기&lt;/font&gt;&lt;span style=&quot;color: rgb(232, 191, 106);&quot;&gt;&amp;lt;/string&amp;gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;'close'에 대한 한글번역값이 없기때문에 MissingTranslation Lint 에러가&amp;nbsp;발생할것입니다.&lt;/p&gt;&lt;p&gt;Lint오류는 사실 우리에게 매우 유용한 경고입니다.&lt;/p&gt;&lt;p&gt;하지만 가끔은 Lint를 꺼주고 싶은경우가 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;아래처럼 앱이름은 언어와 상관없이 같은 앱이름으로 쓰고 싶은데 한글용 'app_name'이 없다며 오류를 발생시킬것입니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;string &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;app_name&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;DestinationAlarm&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;이럴때 tools:ignore를 이용해서 MissingTranslation을 잠시 꺼두셔도 좋습니다.&lt;/p&gt;&lt;pre style=&quot;background-color:#2b2b2b;color:#a9b7c6;font-family:'Menlo';font-size:9.0pt;&quot;&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;string &lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;name=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;app_name&quot;  &lt;/span&gt;&lt;span style=&quot;color:#9876aa;&quot;&gt;tools&lt;/span&gt;&lt;span style=&quot;color:#bababa;&quot;&gt;:ignore=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&quot;MissingTranslation&quot;&lt;/span&gt;&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;gt;&lt;/span&gt;DestinationAlarm&lt;span style=&quot;color:#e8bf6a;&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;p&gt;MssingTranslation뿐만 아니라&amp;nbsp;IconMissingDensityFolder등 무시하고싶은 Lint관련 오류에 대해서 ignore해주실수 있으며 tools:ignore=&quot;all&quot; 도 사용하실 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;하지만 특별한 상황이 아닌이상 Lint는 무시하지 말고 꼭 지켜주시는 것이 정신건강에 &lt;/span&gt;&lt;span style=&quot;color: rgb(255, 0, 0);&quot;&gt;좋습니다.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 24pt;&quot;&gt;&lt;b&gt;tools:targetApi&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;@TargetApi annotaion과 같은역할을 해줍니다.&lt;/p&gt;&lt;p&gt;만약 GridLayout을 사용하려는경우 API레벨 14이상이어야 사용할수있고 그 아래에서는 사용할 수 없습니다.&lt;/p&gt;&lt;p&gt;minsdkVersion이 14보다 아래일경우 문제가 발생합니다.&lt;/p&gt;&lt;p&gt;그래서 targetapi는 14임을 명시해주어서 14이상에서만 앱이 동작할 수 있도록 유도할 수 있습니다.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;margin-top: 0px; margin-bottom: 1em; color: rgb(0, 102, 0); font-stretch: normal; line-height: 18px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Monaco, Courier, monospace; -webkit-font-smoothing: subpixel-antialiased; padding: 1em; overflow: auto; border: 1px solid rgb(221, 221, 221); background: rgb(247, 247, 247);&quot;&gt;&lt;code style=&quot;font-stretch: normal; line-height: 18px; font-family: Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Monaco, Courier, monospace; -webkit-font-smoothing: subpixel-antialiased;&quot;&gt;&lt;span class=&quot;tag&quot; style=&quot;color: rgb(0, 0, 136);&quot;&gt;&amp;lt;GridLayout&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: rgb(0, 0, 0);&quot;&gt; &lt;/span&gt;&lt;span class=&quot;atn&quot; style=&quot;color: rgb(136, 34, 136);&quot;&gt;xmlns:android&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: rgb(102, 102, 0);&quot;&gt;=&lt;/span&gt;&lt;span class=&quo