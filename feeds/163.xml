<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Younggun Kim on Medium]]></title>
        <description><![CDATA[Stories by Younggun Kim on Medium]]></description>
        <link>https://medium.com/@younggun?source=rss-42b38bbabe38------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*Rcpc2EuBo4jOeWX_19Ar6Q.png</url>
            <title>Stories by Younggun Kim on Medium</title>
            <link>https://medium.com/@younggun?source=rss-42b38bbabe38------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Tue, 14 May 2019 00:32:00 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@younggun" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[가끔 프로모션도 있는 모양인데, 나는 그냥 질렀다. 72USD.]]></title>
            <link>https://medium.com/@younggun/%EA%B0%80%EB%81%94-%ED%94%84%EB%A1%9C%EB%AA%A8%EC%85%98%EB%8F%84-%EC%9E%88%EB%8A%94-%EB%AA%A8%EC%96%91%EC%9D%B8%EB%8D%B0-%EB%82%98%EB%8A%94-%EA%B7%B8%EB%83%A5-%EC%A7%88%EB%A0%80%EB%8B%A4-72usd-8e0809f556cc?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/8e0809f556cc</guid>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Tue, 03 Jan 2017 15:34:35 GMT</pubDate>
            <atom:updated>2017-01-03T15:34:35.275Z</atom:updated>
            <content:encoded><![CDATA[<p>가끔 프로모션도 있는 모양인데, 나는 그냥 질렀다. 72USD.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8e0809f556cc" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[RescueTime과 함께 시작하는 상큼한 2017년]]></title>
            <link>https://medium.com/@younggun/rescuetime%EA%B3%BC-%ED%95%A8%EA%BB%98-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%83%81%ED%81%BC%ED%95%9C-2017%EB%85%84-af4eff9a70ea?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/af4eff9a70ea</guid>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Tue, 03 Jan 2017 15:34:01 GMT</pubDate>
            <atom:updated>2017-01-03T16:44:03.682Z</atom:updated>
            <content:encoded><![CDATA[<p>평소 존경하는 <a href="https://www.lucypark.kr/blog/2016/12/31/2016-zeitgeist/">박은정님의 2016년 이벤트 정산</a>을 보다가 <a href="https://www.rescuetime.com/">RescueTime</a>이라는 신기한 서비스를 알게 되었는데, 2017년 말에는 나도 데이터를 기반으로 회고를 작성해보고 싶다는 생각이 들어서 어제부터 바로 써보고 있다. 첫날부터 너무 만족스러워서 오프라인 트래킹도 해보고 싶다는 생각 + 잘 만든 서비스는 돈 주고 써줘야 한다는 철학에 따라 이튿날에는 바로 1년 치를 결제해버렸다.</p><p>팀에 이미 같은 서비스를 쓰고 계신 분도 몇 분 계시고 유사한 다른 서비스를 쓰는 분도 계셔서 지금까지 도구를 활용하지 않고 그냥 되는대로 막 살았던 과거가 살짝 부끄러워지기도 했다.</p><p>이런 종류의 셀프 드라이드에 강한 집착이 있는 성격 탓도 있겠고, 초반 약발이 잘 먹히고 있어서 그런 이유도 있겠지만 이미 익숙해진 분들의 생산성 스코어가 40~70점대인데 비해 나는 이틀 연속 90점을 넘기고 있다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/999/1*_8-TKu3Q5r9fFwsIVb-Cmw.png" /><figcaption>첫째날 1월 2일. 오프라인 트래킹은 하지 않음.</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*YF0WR71kvNq7t8CeKHkv5Q.png" /><figcaption>둘째날 1월 3일. 식사/미팅/휴식 등 오프라인 트래킹 포함.</figcaption></figure><p>실제 컴퓨터 앞에서 소비한 시간 (이튿날부터는 오프라인 시간도 포함)보다 측정된 시간의 합이 살짝 부족하다는 느낌이 들긴 하지만 모니터 앞에서 멍 때리는 시간은 포함하지 않는 것 같아서 괜히 더 신뢰가 간다.</p><p>어쨌거나 기계적으로 책정한 스코어라서 실제 생산성과는 괴리가 있는 듯한데 측정 항목들을 잘 분류해서 좀 더 정확도를 높이고 싶었으나 다시 생각해보니 RescueTime은 소비한 시간의 질까지 측정할 수 없기 때문에 이런 차이가 발생하는 것으로 보인다.</p><p>1시간 동안 열심히 코딩을 하는 것과 터미널에서 의미 없이 키보드를 두들기는 것의 차이를 알 수는 없을 테니까.</p><p>이게 굳이 그렇게까지 스코어를 높이자고 쓰는 서비스도 아니고 얼마간 시간이 지나면 50~60점대 정도로 수렴하지 않을까 싶은데 지금은 막 서비스를 사용하기 시작한 시점이라 엉뚱한 곳에 시간을 써서 기록으로 남기고 싶지 않다는 기제가 작동하면서 단기간 생산성이 확실히 올라가는 것 같긴 하다.</p><p>팀의 어떤 분 말마따나 프리랜서들은 근무한 시간에 비례해서 비용을 청구하는 경우가 잦으니 그럴 경우에는 유용하겠다 싶으나 혹시나 회사에서 직원들의 생산성을 이런 도구를 통해 측정하겠다고 한다면 그건 확실히 에러인 것 같다.</p><p>상술했듯이 스스로의 생산성과 측정치의 괴리가 있는 이유는 투자하는 시간의 질과 결과가 사람마다 상황마다 계속 바뀌기 때문이고 스스로도 어떤 활동이 생산성에 얼마만큼의 영향을 미치는지 자세히 설정하기도 쉽지 않다.</p><p>딱 셀프 채찍질용으로 적합하다는 생각. 아직까지는 생산성에 마이너스가 되는 행동을 주저하게 되는 효과가 남아 있지만 얼마나 오래 지속될지는 두고 볼 일이다.</p><p>그리고 미디엄에서 한글로 글을 쓰는 건 엄청 스트레스받는 일이다.</p><p>꼬리) <a href="https://www.rescuetime.com/ref/1477729">초대 링크</a>를 통해 가입을 하면 내 계정에 2주가 추가되는 모양이다. =3=33</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=af4eff9a70ea" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[2016년 회고]]></title>
            <link>https://medium.com/@younggun/2016%EB%85%84-%ED%9A%8C%EA%B3%A0-3eb1cddb543d?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/3eb1cddb543d</guid>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Sat, 31 Dec 2016 14:59:30 GMT</pubDate>
            <atom:updated>2016-12-31T18:09:04.083Z</atom:updated>
            <content:encoded><![CDATA[<p>현재 2016년 12월 31일 23시 16분. 더 이상 새로운 일은 없을 것 같으니 이제 2016년 회고를 하자.</p><p>올해도 지난해보다 1g만큼 나은 사람이 되었는가.</p><p>그렇다. 올해의 나는 서핑을 해본 사람이 되었으니 지난해보다는 1g만큼 나은 사람이 되었다.</p><p>우왕 2016년 회고 끝!</p><p>—</p><p>딱히 흥미로운 사건은 없었다. 그게 회고를 계속 미루던 이유이기도 하고.</p><p>작년에도 다니던 회사를 계속 다니고 있고, 국내외 컨퍼런스도 여전히 많이 다닌다. 올해는 회사 일이 겹쳐서 아쉽게도 발표를 취소한 적이 있었는데, 내년에는 꼭 갈거다. 계속 존잘들을 알게 되고 친해지고 나의 부족함에 괴로워한다. 그래도 모르던 세상을 알게 되는 건 언제나 좋은 일이다.</p><p>더 채우고 더 뛰어난 사람들을 알게 되고 그렇게 내가 알던 세상의 경계를 계속 확장시킨다. 언제까지 가능할지는 모르겠지만 내년에도 그렇게 달려야지.</p><p>—</p><p>집을 샀다. 집 사는 일이 이렇게 간단한 일인 줄 몰랐다. 여기서 멈춰버린 느낌이라 씁쓸한 결정이었지만 별로 의미를 두지 않기로 했다. 사기 전에는 집이라는 게 나를 어딘가에 잡아두는 족쇄같은 존재라고 생각했는데, 없는 셈 치고 살아도 될 것 같다.</p><p>—</p><p>PSF의 이사가 되었다. 영어가 발목을 잡고 있지만 어쨌든 좋은 자극이 된다. 다른 보드 멤버들이나 커뮤니티 내의 네임드들 역시 좋은 자극을 준다. 지금도 한국에서는 여전히 듣보잡이지만 지금까지 해왔던, 또 앞으로 하려는 일에 확실히 도움이 된다. 아직 임기가 반년 정도 남았고 그 다음에는 어떻게 될지 모르겠지만 그냥 스쳐지나간 1인이 되지 않도록 뭔가 남기고 싶다.</p><p>—</p><p>아마 2017년도 비슷할 것이다. 75% 정도의 확률로 같은 회사를 다니고 있을 것 같고, 비슷한 양의 코드를 쓸 것이고, Wes가 2판을 작업 중이니 책도 한 권 쯤 번역을 하겠지. 파이콘도 6군데 정도 참가할거고 기회가 된다면 발표도 대여섯번 정도 하고 싶다.</p><p>2017년에도 1g만큼 나아지기를.</p><p>(medium에서 한글은 진짜 안습이네 ㅠㅠ)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3eb1cddb543d" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[김명신님의 피드백]]></title>
            <link>https://medium.com/@younggun/%EA%B9%80%EB%AA%85%EC%8B%A0%EB%8B%98%EC%9D%98-%ED%94%BC%EB%93%9C%EB%B0%B1-6d50f364bcdb?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/6d50f364bcdb</guid>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Tue, 21 Jun 2016 00:16:52 GMT</pubDate>
            <atom:updated>2016-06-21T00:16:52.006Z</atom:updated>
            <content:encoded><![CDATA[<p>김명신님의 피드백</p><p><a href="https://www.facebook.com/scari.net/posts/10208619642467003?comment_id=10208619693868288&amp;comment_tracking=%7B%22tn%22%3A%22R0%22%7D">https://www.facebook.com/scari.net/posts/10208619642467003?comment_id=10208619693868288&amp;comment_tracking=%7B%22tn%22%3A%22R0%22%7D</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6d50f364bcdb" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[PyCon APAC 2016: Diversity (ko)]]></title>
            <link>https://medium.com/@younggun/pycon-apac-2016-diversity-ko-cdd559330e54?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/cdd559330e54</guid>
            <category><![CDATA[pycon]]></category>
            <category><![CDATA[pyconapac]]></category>
            <category><![CDATA[python]]></category>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Mon, 20 Jun 2016 22:56:28 GMT</pubDate>
            <atom:updated>2016-06-20T23:49:50.764Z</atom:updated>
            <content:encoded><![CDATA[<p><a href="https://www.pycon.kr/2016apac/">PyCon APAC 2016</a>의 슬로건인 Diversity에 대해서 두어 문단 정도로 짧게 쓰고 싶었는데, 글이 길어져서 어쩔 수 없이 medium으로 옮겨 씁니다.</p><p><a href="https://www.pycon.kr/2016apac/">PyCon APAC 2016</a>의 슬로건은 Respect, Diversity입니다. 흔히 얘기하는 LGBTQ 같은 그런 다양성만을 의미하는 것이 아니라 “모든 것”에 대한 다양성을 담겠다는 의지로 박현우님께서 제안하신 문구입니다.</p><p>—</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*MDdaSGoJTBOwTZvmDdlbkQ.png" /></figure><p>다양성을 내걸고 있지만 키노트 스피커 중에 여성이 없는 점이 부끄럽습니다. 저뿐만이 아니고 준비 위원회 모두가 그렇게 생각합니다.</p><p>어제 공개한 45명의 <a href="https://www.pycon.kr/2016apac/programs/speakers/">PyCon APAC 2016 발표자</a> 가운데 여성 발표자는 4명뿐입니다. 발표 프로포절에서는 이름, 성별 같은 개인 정보를 받지 않았으므로 발표자분들이 업데이트해주신 프로필을 보고 짐작한 숫자입니다. 10%가 채 되지 않습니다.</p><p>StackOverflow의 <a href="https://stackoverflow.com/research/developer-survey-2016#developer-profile-gender">2016년판 Developer Survey</a>에 따르면, 설문 응답자 중에서 5.8%만이 여성이고 따라서 컨퍼런스 발표자 중 여성이 차지하는 비율이 높을 수 없는 것도 어찌보면 당연한 사실입니다.</p><p>PyCon US의 Diversity Chair인 Jessica McKellar는 자신의 <a href="https://twitter.com/jessicamckellar/status/737299461563502595">트윗</a>을 통해, PyCon 발표자 중 여성이 차지하는 비율이 지속적으로 높아졌음을 알렸습니다. (2011: 1%), (2012: 7%), (2013: 15%), (2014/15: 33%), (2016: 40%)</p><p>변명을 하자면, PyCon KR 발표자 중 여성이 차지하는 비율 역시 지속적으로 높아지고 있습니다. (2014/15: 1명), (2016: 4명) 2014/15년에는 박은정 님께서 홀로 여성 발표자로서 기록을 남겨주셨고 Lightning Talk에서는 김가경 님과 박조은 님이 각각 2014년과 2015년에 유일한 여성 LT 발표자로 기록을 남기셨습니다.</p><p>저는 이 글에서 사회 전반에서 여성들을 오랫동안 괴롭혀온 부당함과 그들이 느끼는 (그리고 실재하는) 위협에 대해서 얘기하려는 것이 아닙니다. 이 글에서는 Python Community와 PyCon에 대해서만 얘기하고 싶습니다.</p><p>위에서 인용한 Jessica의 자료를 보면, 불과 몇 해 전만 하더라도 Diversity의 아이콘 같은 미국에서조차 여성 발표자가 1%밖에 되지 않았다는 사실을 확인할 수 있습니다. 그리고 5년이 흐른 뒤 지금은 40%까지 올라갔죠.</p><p>그 뒤에는 Jessica와 Lynn Root로 대표되는 파이썬 커뮤니티의 여성 리더들의 존재와 <a href="http://www.pyladies.com/">PyLadies</a>, <a href="https://djangogirls.org/">DjangoGirls</a> 같은 Python Community가 있었습니다.</p><p>그리고 그 커뮤니티를 존중하고 지지했던 남자들도 있었죠.</p><p>여성 파이썬 개발자(PyLadies), 그리고 PyLadies, DjangoGirls 커뮤니티에 대한 남자 파이썬 개발자(PyGents)들의 넘치는 친절과 해당 커뮤니티에 대한 전폭적인 지원이 필요하다는 얘기가 아닙니다.</p><p>그냥 선입견을 가지지 않고 똑같이 대해주기를 바랍니다. 최소한 그들을 내려보거나 밖으로 밀어내는 일은 없었으면 합니다.</p><p>제가 아는 한, 파이썬 커뮤니티는 개발자 커뮤니티 중에서도 여성 개발자들에게 그나마 평등한 곳입니다. 위에서 소개한 커뮤니티뿐만 아니라 Python Software Foundation의 이사회 멤버 11명 중 5명이 여성이며, 이번에 선출된 이사회 의장인 Diana 역시 여성입니다.</p><p>한국의 파이썬 커뮤니티에서 여성의 입지는 멀리 미국까지 갈 필요도 없이 동아시아 테두리 안에서만 보더라도 대만이나 일본에 비해 아직 시작 단계이고, 그렇기 때문에 앞으로 건전한 문화가 자리 잡을 수 있도록 모두의 관심이 필요합니다.</p><p>내년 파이콘 한국에서는 지금의 불균형을 해소하고 이제 막 커리어를 시작하는 여성 개발자들의 롤 모델이 되어 주실 수 있는, 더 많은 여성 발표자를 볼 수 있으면 좋겠습니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cdd559330e54" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[리눅스 시스템 프로그래밍 2판 옮긴이의 말]]></title>
            <link>https://medium.com/@younggun/%EB%A6%AC%EB%88%85%EC%8A%A4-%EC%8B%9C%EC%8A%A4%ED%85%9C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-2%ED%8C%90-%EC%98%AE%EA%B8%B4%EC%9D%B4%EC%9D%98-%EB%A7%90-797c278f3736?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/797c278f3736</guid>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Wed, 26 Nov 2014 10:59:42 GMT</pubDate>
            <atom:updated>2014-11-26T11:10:20.831Z</atom:updated>
            <content:encoded><![CDATA[<h3>리눅스 시스템 프로그래밍 2판.</h3><p>옮긴이의 말.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/500/1*xseE7PP_ZZ8wndgYed76QQ.jpeg" /></figure><p>예전 이야기를 해볼까 한다.</p><p>그래 봤자 그리 오래되지 않은 과거에 지금의 웹, 모바일 앱 개발 열풍처럼 많은 사람이 리눅스 시스템 프로그래밍을 공부하던 시절이 있었다. 요즘 유행하는 파이썬이나 루비를 이용한 웹 프로그래밍은 아니었지만, 그 시절에도 PHP를 중심으로 한 웹 개발의 인기는 대단했고 등장하자마자 가파르게 치고 올라가던 자바의 무서운 기세도 잊을 수 없다.</p><p>날마다 해가 뜨면 새로운 코드가 쏟아졌다. 지금만큼이나 전체 개발자의 잉여력과 생산성이 최고조였던 시기다. MySQL, 파이썬, 파이어폭스 브라우저, 아파치 웹 서버, 비트토렌트, Qt 툴킷 등 지금도 널리 사용되고 있는 많은 소프트웨어가 처음 모습을 드러냈던 시기가 바로 그때였다.</p><p>돌이켜보면 이런 흐름에 불을 지폈던 건 다름 아닌 오픈소스와 리눅스였다. 당시에는 설치조차 호락호락하지 않았던 생소한 운영체제는 기업이나 연구소의 선택받은 일부만 접할 수 있었던 서버라는 꿈의 존재를 시간과 노력을 조금만 들이면 누구나 자신이 소유한 PC에서 구동할 수 있게 하는 마법과도 같은 선물이었다.</p><p>일반 PC에서 동작하는 소스코드가 공개된 커널, 자유롭게 쓸 수 있는 다양한 컴파일러, 어떤 것이라도 구현할 수 있는 잘 설계된 라이브러리, 그리고 지나치게 친절한 라이브러리 문서, 이 모든 것을 담고 있는 리눅스는 개발자에게는 종합 선물 상자와 같았다.</p><p>게다가 이 모든 소스코드는 공개되어 있으므로 자연스럽게 시스템 프로그래밍을 접할 기회가 늘었고 웹 개발과 같은 다른 개발 분야만큼이나 많은 사람이 시스템 프로그래밍을 공부했다.</p><p>하지만 시스템 프로그래밍이라는 분야 자체는 여전히 업계의 첨단 분야임에도 불구하고 웹이나 모바일 앱 개발과 비교하면 시스템 프로그래밍을 공부하려는 사람들이 과거보다 훨씬 더 적다고 느낀다. 개발 트렌드의 변화, 개인의 취향 같은 여러 가지 이유가 있겠지만, 제대로 된 관련 서적의 부재가 크다고 생각하는데, 질소 없는 과자처럼 속이 꽉 찬 이 책이 출판됨으로써 어느 정도 해소되리라 기대한다.</p><p>또한, 이 책에서 리눅스 시스템 프로그래밍 언어로 사용하고 있는 C 언어는 많은 사람이 오래된 언어, 익히기 어려운 언어라는 선입관을 가지고 있다. C 언어는 그보다 수십 년 뒤에 나온 언어에 비해 다소 투박한 면은 있지만 결코 어려운 언어는 아니다.</p><p>오래된 언어이긴 하나 아직도 현역으로 사용되고 있으며 특히 리눅스 시스템 프로그래밍 분야에서는 독보적인 존재다. 커널과 드라이버는 말할 것도 없고, 안드로이드의 핵심 코드와 최근 인기를 얻고 있는 키-밸류 저장소인 레디스(Redis)도 C로 개발되었으며, 후발주자임에도 빠르게 성장하고 있는 새로운 웹 서버인 Nginx, 그리고 MySQL, Git, 파이썬 모두 C로 작성되었다.</p><p>한 분의 독자라도 이 책을 다 읽고 나서 리눅스 시스템 프로그래밍에 흥미를 느낀다면 번역자이자 오랜 시간 리눅스 시스템 프로그래밍 광으로 지낸 한 사람으로서 큰 기쁨이 될 것이다.</p><p>리눅스 시스템 프로그래머로서 더욱 탄탄한 지식 기반을 쌓고 싶다면 부록에서 소개하는 참고 서적들도 공부하길 추천한다. 혹시나 이 책을 다 읽고 난 뒤에 무엇부터 시작해야 할지 확신이 서지 않는 독자가 있다면 주저 말고 역자에게 메일을 보내주시기 바란다.</p><p>2015년 1월 출간. 한빛미디어. (원서: <a href="http://shop.oreilly.com/product/0636920026891.do">Linux System Programming 2nd ed.</a>)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=797c278f3736" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Anaconda 설치법]]></title>
            <link>https://medium.com/@younggun/anaconda-fe67e9c9709d?source=rss-42b38bbabe38------2</link>
            <guid isPermaLink="false">https://medium.com/p/fe67e9c9709d</guid>
            <dc:creator><![CDATA[Younggun Kim]]></dc:creator>
            <pubDate>Wed, 23 Jul 2014 19:35:13 GMT</pubDate>
            <atom:updated>2014-07-24T00:41:53.091Z</atom:updated>
            <content:encoded><![CDATA[<h4>파이썬 라이브러리를 활용한 데이터 분석 독자를 위한</h4><p>작년 10월 한빛미디어에서 출간된 <a href="http://www.hanbit.co.kr/book/look.html?isbn=978-89-6848-047-8">파이썬 라이브러리를 활용한 데이터 분석 (원서: Python for Data Analysis)</a>는 <a href="https://enthought.com/">Enthought</a>에서 배포하는 Scientific Python 배포판인 EPD(Enthought Python Distribution)의 무료버전을 기준으로 설명하고 있다.</p><p>문제는, 책이 출간된 이후에 Enthought에서 <a href="https://enthought.com/products/epd/free/">EPD Free</a> 버전을 중단하고 <a href="https://enthought.com/products/canopy/#/limited">Canopy Express</a>라는 새로운 제품을 내놨는데, 아무래도 이름이 바뀌다보니 첫 장에서부터 당황하는 독자분들이 계시는 모양이다. 그렇게 오래된 책이 아님에도 불구하고 이런 사건이 발생해서 역자인 나도 적잖이 당황스럽다. 단 한 분이라도 1장에서부터 당황하는 독자분이 계시다면 그 분께 작은 도움이라도 될 수 있을까하여 글을 쓰게 됐다.</p><p>원서에서 EPD Free 버전을 추천한 이유는 다양한 Scientific Python 패키지들을 손쉽게 설치할 수 있기 때문이다. 현재 EPD Free의 자리를 Canopy가 차지하고 있지만, 책 내용대로 따라할 수 없게 된 이상 굳이 Enthought 제품을 고집할 이유가 없으므로 <a href="https://store.continuum.io/cshop/anaconda/">Anaconda</a>를 설치해보자.</p><p>Anaconda는 EPD Free와 같은 Scientific Python 통합패키지로, 무료로 사용할 수 있으며, 리눅스/맥/윈도우를 모두 지원한다. 패키지 관리와 가상환경 설정을 위한 conda 명령어를 내장하고 있으며 그리고 무엇보다, 책의 저자인 Wes McKinney의 회사, <a href="http://datapad.io/">datapad.io</a>에서도 Anaconda를 쓰고 있었다…</p><p>Anaconda를 배포하는 Continuum Analytics 사의 홈페이지에서 각자의 환경에 맞는 설치 바이너리를 다운받자. 만약에 링크가 동작하지 않는다면, 메인 페이지에서 PRODUCTS &gt; Anaconda 를 찾아가면 <a href="https://store.continuum.io/cshop/anaconda/">다운로드 링크</a>가 나타날 것이다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*kIBzx_3SzFETFKq867z5fg.png" /></figure><p><a href="https://store.continuum.io/cshop/anaconda/">다운로드 링크</a>를 클릭해서 메일 주소를 입력하면 운영체제와 Python 버전을 선택할 수 있는 페이지가 뜬다. Python 2.7 버전과 3.4버전 두 가지를 선택할 수 있는데, 책의 예제가 Python 2.7 버전을 기준으로 작성되어 있으므로, Python 2/3의 차이점을 잘 알고 있고, Python 3.4 버전을 사용해야 하는 특별한 이유가 없다면 2.7버전을 사용하기를 권장한다.</p><h4>윈도우즈 환경</h4><p>다운받은 인스톨러를 실행해서 설치를 시작하자.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1020/1*jN66PyGz_rw86GeD2q_OPQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1014/1*Ql3Xt0alwaepjpJx3YUyOg.png" /></figure><p>설치 중간에, Anaconda를 PATH 환경변수에 등록할 것인지, 그리고 Anaconda를 기본 Python 2.7 환경으로 등록할 것인지 묻는데, 특별한 이유가 없다면 모두 선택된 기본 설정 그대로 두고 설치를 계속 진행하자.</p><p>기본설정으로 설치를 마무리했으면, <strong><em>프로그램 &gt; Anaconda &gt; IPython (Py 2.7) </em></strong>또는 <strong><em>IPython (Py 2.7) QT Console</em></strong>을 실행하고 <strong><em>%pylab</em></strong> 매직 명령어로 pylab 모드를 활성화시킨다. 그리고 책에 나온 예제대로 그래프가 잘 그려지는지 확인해보자.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*J6DyQ2WqWO4T-yF4-WfZTg.png" /><figcaption>IPython (Py 2.7)</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*d2w8jbxRgvD00xnZIHdNZA.png" /><figcaption>IPython (Py 2.7) QT Console</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*qccVrKVmNSYMTvjHy1ZjBg.png" /><figcaption>실행결과</figcaption></figure><p>위 그림처럼 입력했을때 다음 그래프가 나타난다면 설치가 잘 마무리된 것이다.</p><h4><strong>리눅스/맥 환경</strong></h4><p>각자 환경에 맞는 인스톨러를 다운로드 받은 후, 다운로드 링크에 있는 설명대로 터미널에서 설치를 진행한다. 설명에도 적혀있지만, 설치 스크립트를 실행할때는 반드시 <strong><em>bash</em></strong>를 사용해야 한다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*kLMSfDvH4hXOm7ncAyI2BQ.png" /></figure><p>설치가 마무리 되면 터미널을 열고 ipython을 실행한다. 이 때, <strong><em>—pylab</em></strong> 옵션을 줘서 처음부터 pylab 모드로 실행하거나, 아니면 ipython 셸에서 <strong><em>%pylab</em></strong> 매직 명령어를 통해 pylab 모드를 활성화하고 설치가 잘 되었는지 테스트해보자. python 2.7 버전 Anaconda를 설치했다면, <strong><em>ipython2</em></strong> 대신 그냥 <strong><em>ipython</em></strong>을 실행해도 된다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1012/1*aXrSAhjwNPK4v9yFO3YlsA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*j4YcdmWmXDnzEY1QO_3fhA.png" /><figcaption>실행결과(Mac OS)</figcaption></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=fe67e9c9709d" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>